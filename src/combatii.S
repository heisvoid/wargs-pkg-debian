/* vim: set sw=2 ts=2 expandtab: */

#include "asm.h"

.text


/*----------------------------------------------------------------*/
func____begtext:	/* 0x10003 */
/*----------------------------------------------------------------*/
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop


/*----------------------------------------------------------------*/
func_10010:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		mov    $0x10,%eax
		cld
	jump_1001d:
		mov    $0x6,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    $0x1c8,%edi
		dec    %eax
		jne    jump_1001d
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_10031:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    %esi,%edi
		mov    $0x0,%dx
	jump_10044:
		lods   %ds:(%esi),%eax
		add    %ax,%dx
		cmp    $0x140,%dx
		jl     jump_1005b
		mov    $0xa0,%ax
		add    %ax,(%edi)
		sub    $0x140,%dx
	jump_1005b:
		add    $0x4,%edi
		mov    $0x0,%ecx
		shr    $0x10,%eax
		mov    %al,%cl
		shl    $0x2,%ecx
		shr    $0x8,%ax
		add    %ax,%cx
		add    %cx,%dx
		add    %ecx,%esi
		add    %ecx,%edi
		dec    %bx
		jne    jump_10044
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10083:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %edx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bx,(%edi)
		mov    %cx,0x2(%edi)
		add    $0x4,%edi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    $0x0,%ecx
		mov    $0x0,%dx
	jump_100a3:
		lods   %ds:(%esi),%eax
		movzwl %ax,%ecx
		add    %ax,%dx
		cmp    $0x1e0,%dx
		jl     jump_100b9
		sub    $0x1e0,%dx
		movzwl %dx,%ecx
	jump_100b9:
		cmp    $0x0,%ecx
		je     jump_100c4
		mov    $0xff,%ax
		rep stos %al,%es:(%edi)
	jump_100c4:
		mov    $0x0,%ecx
		shr    $0x10,%eax
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		shl    $0x2,%ecx
		shr    $0x8,%ax
		add    %ax,%cx
		add    %cx,%dx
		dec    %bx
		jne    jump_100a3
		pop    %eax
		sub    %edi,%eax
		neg    %eax
		sub    $0x2,%eax
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_100f2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    data_128550,%edi
		mov    (%esi),%dx
		inc    %esi
		inc    %esi
		xor    %ebx,%ebx
		cld
	jump_10107:
		lods   %ds:(%esi),%eax
		shr    $0x10,%eax
		xor    %ecx,%ecx
		mov    %al,%cl
		shl    $0x2,%cx
		mov    %ah,%bl
		add    %ebx,%ecx
		cmp    $0x0,%ecx
		je     jump_10126
	jump_1011c:
		mov    (%esi),%bl
		mov    (%ebx,%edi,1),%bl
		mov    %bl,(%esi)
		inc    %esi
		loop   jump_1011c
	jump_10126:
		dec    %dx
		jne    jump_10107
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10130:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_128550,%edi
		mov    $0x0,%ebx
		mov    $0x10,%dx
	jump_10144:
		mov    %eax,%esi
		mov    $0x18,%ecx
	jump_1014b:
		mov    (%esi),%bl
		mov    (%ebx,%edi,1),%bl
		mov    %bl,(%esi)
		inc    %esi
		loop   jump_1014b
		add    data_755da,%eax
		dec    %dx
		jne    jump_10144
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10165:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    $0x0,%ecx
	jump_10179:
		lods   %ds:(%esi),%eax
		movzwl %ax,%edx
		add    %edx,%edi
		shr    $0x10,%eax
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		dec    %bx
		jne    jump_10179
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10194:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    $0x0,%ecx
		xor    %dx,%dx
	jump_101ab:
		lods   %ds:(%esi),%eax
		shr    $0x10,%eax
		mov    %al,%cl
		add    %cx,%dx
		add    %cx,%dx
		add    %cx,%dx
		add    %cx,%dx
		cmp    $0x100,%dx
		jl     jump_101d2
		sub    %cx,%dx
		sub    %cx,%dx
		sub    %cx,%dx
		sub    %cx,%dx
		jmp    jump_101eb
	jump_101d2:
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		add    %cx,%dx
		cmp    $0x100,%dx
		jl     jump_101e5
		sub    %cx,%dx
		jmp    jump_101eb
	jump_101e5:
		rep movsb %ds:(%esi),%es:(%edi)
		dec    %bx
		jne    jump_101ab
	jump_101eb:
		mov    %dx,%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/**
data_7899e++;
if (0xf == data_7899e)
  {
    if (0x0 != data_70006)
      {
        func_450f9 ();
      }

    data_789a8 = 1;
  }

if (0x1e == data_789a8)
  {
    if (0 != data_70006)
      {
        func_10a30 ();
        func_12065 ();
        func_450f9 ();
      }

    data_789a8 = 1;
    data_789a6 = 1;
    data_7899e = 0;
  }

data_789a2++;

if (data_70004 == data_789a2)
  {
    data_789a7 = 1;
  }

if (0 != data_789a4)
  {
    data_789a4++;
  }

func_19f5d ();
*/
/*----------------------------------------------------------------*/
GLOBAL (pit_isr_0) /* 101f4 */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
#if 1
    xor    %eax,%eax
#endif
#if 0
		call   func___GETDS
		cli
#endif
		mov    data_7899e,%dx
		inc    %edx
		mov    %dx,data_7899e
		cmp    $0xf,%dx
		jne    jump_1022e
		cmpb   $0x0,data_70006
		je     jump_10227
		call   func_450f9
	jump_10227:
		movb   $0x1,data_789a8
	jump_1022e:
		cmpw   $0x1e,data_7899e
		jne    jump_10267
		cmpb   $0x0,data_70006
		je     jump_10250
		call   func_10a30
		call   func_12065
		call   func_450f9
	jump_10250:
		mov    $0x1,%bl
		xor    %esi,%esi
		mov    %bl,data_789a8
		mov    %bl,data_789a6
		mov    %si,data_7899e
	jump_10267:
		mov    data_789a2,%di
		inc    %edi
		mov    data_70004,%dx
		mov    %di,data_789a2
		cmp    %dx,%di
		jne    jump_10289
		movb   $0x1,data_789a7
	jump_10289:
		mov    data_789a4,%bx
		test   %bx,%bx
		jbe    jump_1029f
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,data_789a4
	jump_1029f:
		call   func_19f5d
#if 0
		pushf
		lcall  *data_78998
		sti
#endif
		cld
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
#if 1
    ret
#else
		iret
#endif


/*----------------------------------------------------------------*/
func_102b5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x8,%eax
		mov    $pit_isr_0,%ebx
#if 0
		call   func__dos_getvect_
#endif
		mov    %cs,%ecx
		mov    %eax,data_78998
		mov    $0x8,%eax
		mov    %dx,data_7899c
#if 1
    call   w_game_install_pit_isr_0
#else
		call   func__dos_setvect_
#endif
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_102e3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    $0x8,%eax
		mov    data_7899c,%cx
		mov    data_78998,%ebx
#if 1
    call   w_game_uninstall_pit_isr_0
#else
		call   func__dos_setvect_
#endif
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_102ff:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_789a6,%ah
		test   %ah,%ah
		je     jump_10319
		xor    %dl,%dl
		mov    $0x1,%eax
		mov    %dl,data_789a6
		pop    %edx
		ret
	jump_10319:
		xor    %al,%al
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1031d:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_789a8,%ah
		test   %ah,%ah
		je     jump_10337
		xor    %dl,%dl
		mov    $0x1,%eax
		mov    %dl,data_789a8
		pop    %edx
		ret
	jump_10337:
		xor    %al,%al
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1033b:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %ax,data_70004
		cmp    $0x1,%ax
		jae    jump_10351
		movw   $0x1,data_70004
	jump_10351:
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,data_789a7
		mov    %bx,data_789a2
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10364:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_789a7,%ah
		test   %ah,%ah
		je     jump_10387
		xor    %dl,%dl
		mov    %dl,data_789a7
		xor    %dh,%dh
		mov    $0x1,%eax
		mov    %dx,data_789a2
		pop    %edx
		ret
	jump_10387:
		xor    %al,%al
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1038b:
/*----------------------------------------------------------------*/
		mov    %ax,data_789a4
		ret


/*----------------------------------------------------------------*/
func_10392:
/*----------------------------------------------------------------*/
		cmpw   $0x0,data_789a4
		sete   %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_103a0:
/*----------------------------------------------------------------*/
		movb   $0x1,data_70006
		ret


/*----------------------------------------------------------------*/
func_103a8:
/*----------------------------------------------------------------*/
		xor    %ah,%ah
		mov    %ah,data_70006
		ret


/*----------------------------------------------------------------*/
func_10420:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		push   %eax
		mov    %edx,%esi
		cmp    $0x1c,%dx
		jle    jump_10432
		xor    %edx,%esi
	jump_10432:
		mov    $0x200,%edx
		mov    $data_75a8c,%eax
		call   func_4976f
		xor    %ebx,%ebx
		mov    $0x80,%edx
		mov    %ax,0x8(%esp)
		cwtl
		xor    %edi,%edi
		jmp    jump_10478
	jump_10452:
		mov    0x6(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x4(%esp),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		add    $0x8,%edx
		inc    %edi
	jump_10478:
		call   w_dos_lseek
		cmp    %si,%di
		jl     jump_10452
		xor    %edi,%edi
	jump_10484:
		mov    0x6(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x8,%edx
		mov    %ecx,%eax
		movswl %di,%esi
		call   w_dos_lseek
		mov    -0x2(%esp),%edx
		shl    $0x2,%esi
		sar    $0x10,%edx
		mov    0x4(%esp),%eax
		shl    $0x3,%edx
		call   w_dos_malloc
		add    %edx,%esi
		mov    0x4(%esp),%ebx
		mov    %eax,%edx
		mov    %eax,data_789ac(%esi)
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_789ac(%esi),%eax
		inc    %edi
		call   func_10031
		cmp    $0x2,%di
		jl     jump_10484
		mov    %ecx,%eax
		call   w_dos_close
		mov    $0x1,%eax
	jump_104f8:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10500:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %edx,%ecx
		mov    $0x200,%ebx
		mov    %eax,%edx
		mov    $data_75a99,%eax
		call   func_4981d
		mov    $0x3c,%edx
		mov    %ax,(%esp)
		movswl %ax,%esi
		xor    %ebx,%ebx
		mov    %esi,%eax
		call   w_dos_lseek
		mov    %esi,%eax
		call   func_filelength_
		lea    -0x33c(%eax),%ebx
		mov    %ebx,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		mov    %eax,%ebp
		mov    %esi,%eax
		call   w_dos_read
		xor    %ebx,%ebx
		xor    %esi,%esi
	jump_10553:
		lea    (%ebx,%ebp,1),%edx
		mov    (%edx),%ah
		lea    0x1(%ebx),%edi
		cmp    $0xc0,%ah
		jbe    jump_1056e
		mov    %ah,%al
		xor    %edx,%edx
		sub    $0xc0,%al
		mov    %al,%dl
		mov    %edi,%ebx
		add    %edx,%esi
		jmp    jump_10578
	jump_1056e:
		mov    $0x1,%al
		inc    %esi
		cmp    $0xc0,%ah
		jne    jump_10578
		mov    %edi,%ebx
	jump_10578:
		lea    (%ebx,%ebp,1),%edx
	jump_1057b:
		test   %al,%al
		ja     jump_105a4
		inc    %ebx
		cmp    $0x2ee00,%esi
		jbe    jump_10553
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		mov    %ebp,%eax
		call   w_dos_free
		add    $0x4,%esp
	jump_1059e:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_105a4:
		mov    (%edx),%ah
		mov    %ah,(%ecx)
		inc    %ecx
		dec    %al
		jmp    jump_1057b


/*----------------------------------------------------------------*/
func_105ad:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x38,%esp
		mov    $0x200,%ebx
		mov    %eax,%edx
		mov    $data_75a99,%eax
		call   func_4981d
		mov    $0x2,%ebx
		mov    $data_ba842,%edx
		movswl %ax,%ecx
		mov    %eax,%edi
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		xor    %edx,%edx
		mov    data_ba842,%dx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x24(%esp)
		call   w_dos_malloc
		mov    %eax,data_ba1f4
		jmp    jump_1062e
	jump_10612:
		imul   $0x180,%eax,%eax
		mov    data_ba1f4,%edx
		mov    $0x180,%ebx
		add    %eax,%edx
		movswl %di,%eax
		inc    %ecx
		call   w_dos_read
	jump_1062e:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    data_ba842,%dx
		cmp    %edx,%eax
		jl     jump_10612
		mov    $0x2,%ebx
		mov    $data_ba846,%edx
		movswl %di,%eax
		call   w_dos_read
		xor    %edx,%edx
		movswl %di,%ecx
		mov    %dx,0x28(%esp)
		jmp    jump_106c4
	jump_1065c:
		mov    $0x4,%ebx
		lea    0x24(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x2,%edx
		mov    %ecx,%eax
		lea    (%esi,%esi,4),%esi
		call   w_dos_lseek
		mov    $data_ba1f8,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		add    %esi,%edx
		call   w_dos_read
		mov    0x24(%esp),%eax
		call   w_dos_malloc
		mov    0x24(%esp),%ebx
		mov    %eax,%edx
		mov    %eax,data_ba1f9(%esi)
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x28(%esp),%ebx
		mov    data_ba1f9(%esi),%eax
		inc    %ebx
		call   func_10031
		mov    %bx,0x28(%esp)
	jump_106c4:
		xor    %eax,%eax
		mov    0x26(%esp),%esi
		mov    data_ba846,%ax
		sar    $0x10,%esi
		cmp    %eax,%esi
		jl     jump_1065c
		mov    $0x2,%ebx
		movswl %di,%ecx
		mov    $data_ba844,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_ba840,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_ba842,%eax
		mov    data_ba83e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		add    %eax,%eax
		mov    $data_78a04,%edx
		mov    %eax,0x24(%esp)
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x24(%esp),%ebx
		mov    $data_83db4,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x24(%esp),%edx
		shr    %edx
		mov    %ecx,%eax
		mov    %edx,0x24(%esp)
		mov    %edx,%ebx
		mov    $data_88bd4,%edx
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x138,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x1c8,%ebx
		mov    $data_128384,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %ecx,%ecx
		jmp    jump_107c3
	jump_10783:
		mov    $0x14,%ebx
		mov    %esp,%edx
		movswl %di,%eax
		call   w_dos_read
		xor    %eax,%eax
	jump_10794:
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0x14,%ebx,%ebx
		movswl %ax,%edx
		add    %edx,%edx
		add    %edx,%ebx
		mov    (%esp,%edx,1),%dx
		inc    %eax
		mov    %dx,data_7ebac(%ebx)
		cmp    $0x9,%ax
		jl     jump_10794
		movswl %cx,%eax
		xor    %dl,%dl
		inc    %ecx
		mov    %dl,data_839cc(%eax)
	jump_107c3:
		xor    %eax,%eax
		movswl %cx,%edx
		mov    data_ba842,%ax
		cmp    %eax,%edx
		jl     jump_10783
		xor    %ecx,%ecx
		jmp    jump_10816
	jump_107d6:
		mov    $0x14,%ebx
		mov    %esp,%edx
		movswl %di,%eax
		call   w_dos_read
		xor    %eax,%eax
	jump_107e7:
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0x14,%ebx,%ebx
		movswl %ax,%edx
		add    %edx,%edx
		add    %edx,%ebx
		mov    (%esp,%edx,1),%dx
		inc    %eax
		mov    %dx,data_7d824(%ebx)
		cmp    $0x9,%ax
		jl     jump_107e7
		movswl %cx,%edx
		xor    %al,%al
		inc    %ecx
		mov    %al,data_ba6da(%edx)
	jump_10816:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    data_ba846,%dx
		cmp    %edx,%eax
		jl     jump_107d6
		movswl %di,%ecx
		xor    %esi,%esi
	jump_1082b:
		mov    $0x1,%ebx
		lea    0x30(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x2c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x34(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		cmpb   $0x0,0x30(%esp)
		je     jump_1088f
		cmpb   $0x0,0x34(%esp)
		jne    jump_1087d
		xor    %eax,%eax
		mov    0x29(%esp),%edx
		mov    0x30(%esp),%al
		sar    $0x18,%edx
		call   func_5ffb5
		jmp    jump_1088f
	jump_1087d:
		xor    %eax,%eax
		mov    0x29(%esp),%edx
		mov    0x30(%esp),%al
		sar    $0x18,%edx
		call   func_601e5
	jump_1088f:
		inc    %esi
		cmp    $0x3,%si
		jl     jump_1082b
		movswl %di,%esi
		xor    %ecx,%ecx
	jump_1089b:
		mov    $0x1,%ebx
		lea    0x30(%esp),%edx
		mov    %esi,%eax
		call   w_dos_read
		xor    %edx,%edx
		movswl %cx,%eax
		mov    0x30(%esp),%dl
		inc    %ecx
		call   func_10420
		cmp    $0xb,%cx
		jl     jump_1089b
		mov    %esi,%eax
		call   func_eof_
		cmp    $0x1,%eax
		je     jump_10922
		mov    $0x10,%ebx
		lea    0x14(%esp),%edx
		mov    %esi,%eax
		call   w_dos_read
		xor    %eax,%eax
	jump_108de:
		movswl %ax,%edx
		mov    0x14(%esp,%edx,1),%bh
		inc    %eax
		cmp    $0x2e,%bh
		jne    jump_108de
		cwtl
		xor    %cl,%cl
		mov    $data_75aa3,%edx
		mov    %cl,0x14(%esp,%eax,1)
		lea    0x14(%esp),%eax
		call   w_dos_strcat
		mov    $data_8b3e8,%edx
		lea    0x14(%esp),%eax
		mov    $0x2,%ebx
		call   func_10500
		mov    $data_ba836,%edx
		movswl %di,%eax
		call   w_dos_read
		jmp    jump_1092b
	jump_10922:
		movw   $0xffff,data_ba836
	jump_1092b:
		movswl %di,%eax
		call   w_dos_close
		xor    %al,%al
		add    $0x38,%esp
		jmp    jump_10ecb


/*----------------------------------------------------------------*/
func_1093d:
/*----------------------------------------------------------------*/
		push   %ebx
		movswl %dx,%ebx
		mov    data_ba842,%edx
		sar    $0x10,%edx
		imul   %ebx,%edx
		cwtl
		mov    data_88bd4(%edx,%eax,1),%al
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10957:
/*----------------------------------------------------------------*/
		push   %ecx
		movswl %dx,%ecx
		mov    data_ba842,%edx
		sar    $0x10,%edx
		imul   %ecx,%edx
		cwtl
		mov    %bl,data_88bd4(%edx,%eax,1)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_10971:
/*----------------------------------------------------------------*/
		sub    data_ba83c,%ax
		imul   $0x18,%eax,%eax
		add    data_7001c,%ax
		add    $0x4,%eax
		ret


/*----------------------------------------------------------------*/
func_10988:
/*----------------------------------------------------------------*/
		push   %ebx
		sub    data_ba83e,%ax
		mov    data_ba838,%bx
		shl    $0x4,%eax
		add    %ebx,%eax
		add    $0x4,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_109a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_7001a,%edx
		cwtl
		sar    $0x10,%edx
		sub    %edx,%eax
		lea    -0x4(%eax),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		add    %edx,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_109ce:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_ba836,%edx
		cwtl
		sar    $0x10,%edx
		sub    %edx,%eax
		sub    $0x4,%eax
		mov    data_ba83c,%edx
		sar    $0x4,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_109ee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		dec    %eax
		cwtl
		mov    data_839c9(%eax),%ebx
		mov    %eax,%edx
		sar    $0x18,%ebx
		shl    $0x2,%eax
		add    %ebx,%ebx
		add    %edx,%eax
		mov    data_7ebac(%ebx,%eax,4),%ax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10a0f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		dec    %eax
		cwtl
		mov    data_ba6d7(%eax),%ebx
		mov    %eax,%edx
		sar    $0x18,%ebx
		shl    $0x2,%eax
		add    %ebx,%ebx
		add    %edx,%eax
		mov    data_7d824(%ebx,%eax,4),%ax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10a30:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		jmp    jump_10a75
	jump_10a38:
		imul   $0x14,%eax,%esi
		mov    data_839c9(%eax),%ebx
		sar    $0x18,%ebx
		mov    data_7ebac(%esi,%ebx,2),%ebx
		sar    $0x10,%ebx
		movsbw data_839cc(%eax),%cx
		cmp    $0xffffffff,%ebx
		je     jump_10a61
		cmp    $0x8,%cx
		jl     jump_10a6e
	jump_10a61:
		movswl %dx,%eax
		xor    %bh,%bh
		mov    %bh,data_839cc(%eax)
		jmp    jump_10a74
	jump_10a6e:
		incb   data_839cc(%eax)
	jump_10a74:
		inc    %edx
	jump_10a75:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    data_ba842,%bx
		cmp    %ebx,%eax
		jl     jump_10a38
		xor    %edx,%edx
		jmp    jump_10ac6
	jump_10a89:
		imul   $0x14,%eax,%ecx
		mov    data_ba6d7(%eax),%ebx
		sar    $0x18,%ebx
		mov    data_7d824(%ecx,%ebx,2),%ebx
		sar    $0x10,%ebx
		movsbw data_ba6da(%eax),%si
		cmp    $0xffffffff,%ebx
		je     jump_10ab2
		cmp    $0x8,%si
		jl     jump_10abf
	jump_10ab2:
		movswl %dx,%eax
		xor    %ch,%ch
		mov    %ch,data_ba6da(%eax)
		jmp    jump_10ac5
	jump_10abf:
		incb   data_ba6da(%eax)
	jump_10ac5:
		inc    %edx
	jump_10ac6:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    data_ba846,%bx
		cmp    %ebx,%eax
		jl     jump_10a89
		mov    data_ba84c,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,data_ba84c
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10aeb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%ebx
		mov    %dx,0x4(%esp)
		mov    %ax,data_ba83c
		mov    %dx,data_ba83e
		mov    data_ba836,%edx
		mov    data_7001a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4,%edx
		add    $0x4,%eax
		call   func_5eb00
		mov    0x2(%esp),%edx
		mov    data_ba842,%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		imul   %edx,%ecx
		mov    %eax,%edi
		movswl %bx,%eax
		add    %eax,%eax
		mov    $data_78a04,%edx
		add    %ecx,%ecx
		add    %eax,%edx
		add    %ecx,%edx
		mov    %edx,(%esp)
		mov    data_ba834,%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		je     jump_10be1
		mov    data_7001c,%dx
		mov    %eax,%ebx
		test   %dx,%dx
		jg     jump_10b6d
		lea    0x1(%eax),%ebx
	jump_10b6d:
		mov    0x4(%esp),%eax
		cmp    data_ba836,%ax
		jge    jump_10bb1
		mov    data_ba834,%eax
		mov    0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    $0x96,%ecx
		sub    %edx,%eax
		mov    data_ba836,%edx
		shl    $0x2,%eax
		sar    $0x10,%edx
		sub    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		jmp    jump_10bca
	jump_10bb1:
		mov    0x2(%esp),%eax
		mov    data_ba834,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x96,%eax
		sub    %edx,%eax
		mov    %eax,%edx
	jump_10bca:
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		add    $data_8b3e8,%ebx
		shl    $0x5,%eax
		add    %ebx,%eax
		call   func_5eae3
	jump_10be1:
		xor    %esi,%esi
		mov    %esi,0x8(%esp)
	jump_10be7:
		mov    (%esp),%ebx
		mov    %edi,%ecx
		xor    %esi,%esi
	jump_10bee:
		mov    (%ebx),%ax
		test   %ax,%ax
		jle    jump_10c13
		cwtl
		call   func_109ee
		movswl %ax,%edx
		imul   $0x180,%edx,%edx
		mov    data_ba1f4,%eax
		add    %eax,%edx
		mov    %ecx,%eax
		call   func_10010
	jump_10c13:
		add    $0x2,%ebx
		inc    %esi
		add    $0x18,%ecx
		cmp    $0xc,%si
		jle    jump_10bee
		mov    data_ba842,%eax
		sar    $0x10,%eax
		mov    (%esp),%edx
		add    %eax,%eax
		add    $0x1e00,%edi
		add    %eax,%edx
		mov    0x4(%esp),%eax
		mov    %edx,(%esp)
		mov    0x8(%esp),%edx
		inc    %eax
		inc    %edx
		mov    %ax,0x4(%esp)
		mov    %edx,0x8(%esp)
		cmp    $0xc,%dx
		jle    jump_10be7
		mov    data_ba834,%cx
		inc    %ecx
		mov    %cx,data_ba834
		cmp    $0x5a,%cx
		jle    jump_104f8
		xor    %edi,%edi
		mov    %di,data_ba834
		call   func_5aa81
		jmp    jump_104f8


/*----------------------------------------------------------------*/
func_10c7d:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_ba83c,%edx
		mov    data_ba842,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		add    %edx,%edx
		add    $data_83db4,%eax
		add    %edx,%eax
		mov    %eax,data_8b3e4
		mov    data_ba838,%ax
		add    $0x14,%eax
		mov    %ax,data_ba832
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_10cbd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    data_7001c,%si
		mov    data_ba832,%ax
		mov    data_ba83a,%cx
		mov    data_8b3e4,%ebx
		xor    %edx,%edx
		add    $0x4,%esi
		mov    %eax,(%esp)
		mov    %edx,0x4(%esp)
	jump_10ceb:
		mov    (%ebx),%ax
		test   %ax,%ax
		je     jump_10d3f
		cwtl
		call   func_10a0f
		mov    %eax,%edx
		movswl %dx,%edx
		lea    (%edx,%edx,4),%edx
		movzbw data_ba1f8(%edx),%di
		mov    %edi,0x8(%esp)
		mov    (%esp),%edi
		movswl %cx,%eax
		sub    0x8(%esp),%edi
		shl    $0x3,%eax
		mov    %di,data_8b2e6(%eax)
		add    $0x50,%edi
		mov    %si,data_8b2e4(%eax)
		cmp    $0x114,%di
		jae    jump_10d3f
		mov    data_ba1f9(%edx),%edx
		inc    %ecx
		mov    %edx,data_8b2e8(%eax)
	jump_10d3f:
		mov    0x4(%esp),%edi
		add    $0x2,%ebx
		inc    %edi
		add    $0x18,%esi
		mov    %edi,0x4(%esp)
		cmp    $0xd,%di
		jl     jump_10ceb
		mov    data_ba832,%dx
		mov    data_ba842,%eax
		add    $0x10,%edx
		sar    $0x10,%eax
		mov    %dx,data_ba832
		add    %eax,%eax
		mov    data_8b3e4,%edx
		add    %eax,%edx
		mov    %cx,data_ba83a
		mov    %edx,data_8b3e4
		add    $0xc,%esp
		jmp    jump_10ecb


/*----------------------------------------------------------------*/
func_10d9a:
/*----------------------------------------------------------------*/
		mov    %ax,data_70020
		mov    %ax,data_7001e
		ret


/*----------------------------------------------------------------*/
func_10da7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		jmp    jump_10e20
	jump_10db1:
		mov    data_70020,%ax
		mov    data_ba838,%dx
		add    %eax,%edx
		mov    %dx,data_ba838
		test   %dx,%dx
		jle    jump_10e03
		mov    data_ba83e,%di
		dec    %edi
		mov    %di,data_ba83e
		test   %di,%di
		jge    jump_10df9
		xor    %edi,%edi
		sub    %eax,%edx
		mov    %di,data_ba83e
		mov    %dx,data_ba838
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_10df9:
		sub    $0x10,%edx
		mov    %dx,data_ba838
	jump_10e03:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_45577
		add    data_70020,%bx
	jump_10e20:
		cmp    %cx,%bx
		jl     jump_10db1
		mov    $0x1,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10e2f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		jmp    jump_10ebd
	jump_10e3d:
		mov    data_70020,%ax
		sub    %ax,data_ba838
		mov    data_ba83e,%edx
		mov    data_ba83c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    $0xc,%edx
		cmp    %edx,%eax
		jne    jump_10e73
		mov    data_70020,%ax
		add    %ax,data_ba838
		xor    %eax,%eax
		jmp    jump_10ecb
	jump_10e73:
		mov    data_ba836,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff0,%eax
		jne    jump_10ea0
		mov    data_ba83e,%si
		mov    data_ba838,%di
		inc    %esi
		add    $0x10,%edi
		mov    %si,data_ba83e
		mov    %di,data_ba838
	jump_10ea0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_45577
		add    data_70020,%bx
	jump_10ebd:
		cmp    %cx,%bx
		jl     jump_10e3d
	jump_10ec6:
		mov    $0x1,%eax
	jump_10ecb:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10ed1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		jmp    jump_10f4d
	jump_10edb:
		mov    data_7001e,%ax
		mov    data_7001c,%dx
		add    %eax,%edx
		mov    %dx,data_7001c
		cmp    $0xc,%dx
		jle    jump_10f30
		mov    data_ba83c,%di
		dec    %edi
		mov    %di,data_ba83c
		test   %di,%di
		jge    jump_10f26
		xor    %edi,%edi
		mov    $0xc,%eax
		mov    %di,data_ba83c
		mov    %ax,data_7001c
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_10f26:
		sub    $0x18,%edx
		mov    %dx,data_7001c
	jump_10f30:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_45577
		add    data_7001e,%bx
	jump_10f4d:
		cmp    %cx,%bx
		jl     jump_10edb
		mov    $0x1,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_10f5c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		jmp    jump_10ff5
	jump_10f6a:
		mov    data_7001e,%ax
		mov    data_7001c,%dx
		sub    %eax,%edx
		mov    data_ba842,%eax
		mov    %dx,data_7001c
		mov    data_ba83a,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jne    jump_10fab
		mov    $0xc,%edx
		xor    %eax,%eax
		mov    %dx,data_7001c
		jmp    jump_10ecb
	jump_10fab:
		mov    data_7001a,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff4,%eax
		jg     jump_10fd8
		mov    data_ba83c,%si
		mov    data_7001c,%di
		inc    %esi
		add    $0x18,%edi
		mov    %si,data_ba83c
		mov    %di,data_7001c
	jump_10fd8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_45577
		add    data_7001e,%bx
	jump_10ff5:
		cmp    %cx,%bx
		jl     jump_10f6a
		jmp    jump_10ec6


/*----------------------------------------------------------------*/
func_11003:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		test   %ax,%ax
		jge    jump_11018
		xor    %eax,%ebx
		jmp    jump_11034
	jump_11018:
		mov    data_ba842,%eax
		sar    $0x10,%eax
		movswl %bx,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_11034
		mov    data_ba844,%bx
		sub    $0xc,%ebx
	jump_11034:
		test   %cx,%cx
		jge    jump_1103d
		xor    %ecx,%ecx
		jmp    jump_11059
	jump_1103d:
		mov    data_ba83e,%eax
		sar    $0x10,%eax
		movswl %cx,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_11059
		mov    data_ba840,%cx
		sub    $0xc,%ecx
	jump_11059:
		mov    data_ba83c,%dx
		cmp    %dx,%bx
		jne    jump_11069
		xor    %esi,%esi
		jmp    jump_1108f
	jump_11069:
		mov    %edx,%esi
		sub    %ebx,%esi
		test   %si,%si
		jge    jump_11074
		neg    %esi
	jump_11074:
		mov    $0x18,%eax
		mov    data_7001c,%edi
		mov    %eax,%edx
		sar    $0x10,%edi
		sar    $0x1f,%edx
		idiv   %edi
		movswl %si,%esi
		imul   %eax,%esi
	jump_1108f:
		mov    data_ba83e,%di
		cmp    %di,%cx
		jne    jump_1109f
		xor    %edi,%edi
		jmp    jump_110c3
	jump_1109f:
		sub    %ecx,%edi
		test   %di,%di
		jge    jump_110a8
		neg    %edi
	jump_110a8:
		mov    $0x10,%eax
		mov    data_7001e,%ebp
		mov    %eax,%edx
		sar    $0x10,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		movswl %di,%edi
		imul   %eax,%edi
	jump_110c3:
		cmp    data_ba83c,%bx
		jle    jump_110d6
		mov    data_7001e,%ax
		neg    %eax
		jmp    jump_110dc
	jump_110d6:
		mov    data_7001e,%ax
	jump_110dc:
		mov    %eax,(%esp)
		cmp    data_ba83e,%cx
		jle    jump_110f2
		mov    data_70020,%ax
		neg    %eax
		jmp    jump_110f8
	jump_110f2:
		mov    data_70020,%ax
	jump_110f8:
		mov    %eax,0x4(%esp)
		mov    data_ba83c,%cx
		mov    data_ba83e,%bx
	jump_1110a:
		test   %si,%si
		jne    jump_11118
		test   %di,%di
		je     jump_111b6
	jump_11118:
		test   %si,%si
		jle    jump_1115f
		mov    (%esp),%eax
		mov    data_7001c,%dx
		add    %eax,%edx
		mov    %dx,data_7001c
		mov    data_7001a,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff4,%eax
		jg     jump_1114d
		mov    %edx,%eax
		add    $0x18,%eax
		inc    %ecx
		mov    %ax,data_7001c
		jmp    jump_1115e
	jump_1114d:
		cmp    $0xc,%dx
		jle    jump_1115e
		sub    $0x18,%edx
		dec    %ecx
		mov    %dx,data_7001c
	jump_1115e:
		dec    %esi
	jump_1115f:
		test   %di,%di
		jle    jump_111a6
		mov    0x4(%esp),%eax
		mov    data_ba838,%dx
		add    %eax,%edx
		mov    %dx,data_ba838
		mov    data_ba836,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff0,%eax
		jg     jump_11195
		mov    %edx,%eax
		add    $0x10,%eax
		inc    %ebx
		mov    %ax,data_ba838
		jmp    jump_111a5
	jump_11195:
		test   %dx,%dx
		jle    jump_111a5
		sub    $0x10,%edx
		dec    %ebx
		mov    %dx,data_ba838
	jump_111a5:
		dec    %edi
	jump_111a6:
		movswl %bx,%edx
		movswl %cx,%eax
		call   func_45577
		jmp    jump_1110a
	jump_111b6:
		add    $0x8,%esp
		jmp    jump_1059e


/*----------------------------------------------------------------*/
func_111be:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %esi
		sub    $0x6,%eax
		sub    $0x6,%edx
		mov    %ax,data_ba83c
		mov    %dx,data_ba83e
		test   %ax,%ax
		jge    jump_111e3
		xor    %ebx,%ebx
		mov    %bx,data_ba83c
		jmp    jump_1120a
	jump_111e3:
		mov    data_ba842,%eax
		mov    data_ba83a,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_1120a
		mov    data_ba844,%ax
		sub    $0xc,%eax
		mov    %ax,data_ba83c
	jump_1120a:
		cmpw   $0x0,data_ba83e
		jge    jump_11220
		xor    %esi,%esi
		mov    %si,data_ba83e
		pop    %esi
		pop    %ebx
		ret
	jump_11220:
		mov    data_ba83e,%edx
		mov    data_ba83c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    $0xc,%edx
		cmp    %edx,%eax
		jle    jump_11247
		mov    data_ba840,%ax
		sub    $0xc,%eax
		mov    %ax,data_ba83e
	jump_11247:
		pop    %esi
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1124a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x8,%eax
		mov    data_7001e,%si
		mov    data_70020,%di
		call   func_10d9a
		cmpw   $0x0,game_cfg_speed
		jne    jump_11296
		mov    %ecx,%eax
		sub    $0x6,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		sub    $0x6,%eax
		mov    %ax,(%esp)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_11003
		jmp    jump_112b7
	jump_11296:
		movswl %cx,%edx
		movswl %bx,%eax
		call   func_111be
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
	jump_112b7:
		call   func_4a321
		movswl %cx,%edx
		movswl %bx,%eax
		call   func_49fe1
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_4a106
		call   func_5e9e8
		mov    %si,data_7001e
		mov    %di,data_70020
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_112fd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %eax,%eax
		jmp    jump_11329
	jump_11303:
		movswl %ax,%edx
		imul   $0x88,%edx,%edx
		cmpb   $0x7f,data_bbfd6(%edx)
		jne    jump_11328
		xor    %bh,%bh
		mov    %bh,data_bbfd6(%edx)
		add    $data_bbfc8,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_11328:
		inc    %eax
	jump_11329:
		cmp    $0x1f4,%ax
		jl     jump_11303
		call   func_55ebc
		mov    $data_76d70,%edx
		mov    $data_76d8e,%eax
		call   func_496e0
		xor    %edx,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1134a:
/*----------------------------------------------------------------*/
		movb   $0x7f,0xe(%eax)
		ret


/*----------------------------------------------------------------*/
func_1134f:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		call   func_103a8
		movl   $0x0,0x7b(%edx)
		cmpl   $0x0,(%ebx)
		jne    jump_1136a
		mov    %edx,0x4(%ebx)
		mov    %edx,(%ebx)
		jmp    jump_11373
	jump_1136a:
		mov    0x4(%ebx),%eax
		mov    %edx,0x7b(%eax)
		mov    %edx,0x4(%ebx)
	jump_11373:
		call   func_103a0
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1137a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebx
		test   %edx,%edx
		je     jump_113c7
		cmpl   $0x0,(%eax)
		je     jump_113c7
		call   func_103a8
		mov    (%ebx),%esi
		cmp    %esi,%edx
		jne    jump_113a2
		mov    0x7b(%esi),%eax
		mov    %eax,(%ebx)
		test   %eax,%eax
		jne    jump_113c2
	jump_1139d:
		mov    %eax,0x4(%ebx)
		jmp    jump_113c2
	jump_113a2:
		mov    %esi,%eax
	jump_113a4:
		mov    0x7b(%eax),%ebp
		cmp    %ebp,%edx
		je     jump_113b3
		test   %eax,%eax
		je     jump_113c2
		mov    %ebp,%eax
		jmp    jump_113a4
	jump_113b3:
		mov    0x7b(%ebp),%ecx
		test   %ecx,%ecx
		jne    jump_113bf
		mov    %ecx,0x7b(%eax)
		jmp    jump_1139d
	jump_113bf:
		mov    %ecx,0x7b(%eax)
	jump_113c2:
		call   func_103a0
	jump_113c7:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_113cc:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		call   func_1137a
		mov    %ebx,%eax
		call   func_1134a
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_113dd:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%eax
		ret    $0x8


/*----------------------------------------------------------------*/
func_113e4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x77(%eax),%edx
		test   %edx,%edx
		je     jump_113f2
		mov    %edx,%eax
	jump_113f2:
		cmpb   $0x0,0x87(%eax)
		je     jump_1211e
		mov    data_cc990,%edx
	jump_11405:
		test   %edx,%edx
		je     jump_1211e
		mov    0xf(%edx),%bl
		cmp    0xf(%eax),%bl
		jne    jump_1144f
		mov    $0x88,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x7b(%edx),%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movl   $0x0,0x67(%edx)
		movb   $0x0,0x56(%edx)
		movb   $0x0,0x5c(%edx)
		movb   $0x0,0x84(%edx)
		mov    %ebx,0x7b(%edx)
		jmp    jump_1211e
	jump_1144f:
		mov    0x7b(%edx),%edx
		jmp    jump_11405


/*----------------------------------------------------------------*/
func_11495:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
	jump_1149a:
		mov    (%ebx),%edx
		test   %edx,%edx
		je     jump_114bc
		mov    0x7b(%edx),%eax
		mov    %eax,(%ebx)
		mov    0x77(%edx),%ecx
		test   %ecx,%ecx
		je     jump_114b3
		mov    %ecx,%eax
		call   func_1134a
	jump_114b3:
		mov    %edx,%eax
		call   func_1134a
		jmp    jump_1149a
	jump_114bc:
		mov    %edx,0x4(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_114c3:
/*----------------------------------------------------------------*/
		push   %ebx
	jump_114c4:
		mov    0x67(%eax),%ebx
		test   %ebx,%ebx
		je     jump_114cf
		mov    %ebx,%eax
		jmp    jump_114c4
	jump_114cf:
		mov    %edx,0x67(%eax)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_114d4:
/*----------------------------------------------------------------*/
		push   %ebx
	jump_114d5:
		cmp    %edx,%eax
		je     jump_114e0
		mov    %eax,%ebx
		mov    0x67(%eax),%eax
		jmp    jump_114d5
	jump_114e0:
		mov    0x67(%edx),%eax
		mov    %eax,0x67(%ebx)
		movl   $0x0,0x67(%edx)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_114ef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmp    $0x12c,%ax
		jge    jump_11500
		cwtl
		mov    data_e502d(%eax),%al
		jmp    jump_11516
	jump_11500:
		cmp    $0x1f4,%ax
		jge    jump_1150f
		cwtl
		mov    data_e4fe2(%eax),%al
		jmp    jump_11516
	jump_1150f:
		cwtl
		mov    data_d63e4(%eax),%al
	jump_11516:
		movsbl %al,%ebx
		cmp    $0xffffffff,%ebx
		jle    jump_11534
		cbtw
		mov    data_e4fc8(%ebx),%dl
		neg    %eax
		inc    %dl
		dec    %eax
		mov    %dl,data_e4fc8(%ebx)
		pop    %edx
		pop    %ebx
		ret
	jump_11534:
		xor    %bl,%bl
		jmp    jump_11546
	jump_11538:
		movsbl %bl,%eax
		cmpb   $0x0,data_e4fc8(%eax)
		je     jump_1154b
		inc    %bl
	jump_11546:
		cmp    $0x64,%bl
		jl     jump_11538
	jump_1154b:
		cmp    $0x64,%bl
		jne    jump_11564
		call   func_55ebc
		mov    $data_76d9d,%edx
		mov    $data_76db9,%eax
		call   func_496e0
	jump_11564:
		movsbl %bl,%eax
		movb   $0x1,data_e4fc8(%eax)
		movsbw %bl,%ax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11575:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %edx
		cmp    $0x12c,%ax
		jge    jump_1159d
		cwtl
		xor    %esi,%esi
		mov    (%esp),%cl
		mov    %esi,0x18(%esp)
		mov    data_70024(,%eax,4),%edx
		mov    %cl,data_e502d(%eax)
		jmp    jump_115e5
	jump_1159d:
		cmp    $0x1f4,%ax
		jge    jump_115c5
		sub    $0x12c,%eax
		mov    $0x1,%ecx
		cwtl
		mov    %ecx,0x18(%esp)
		mov    (%esp),%cl
		mov    data_703a8(,%eax,4),%edx
		mov    %cl,data_e510e(%eax)
		jmp    jump_115e5
	jump_115c5:
		sub    $0x1f4,%eax
		mov    $0x2,%ebx
		cwtl
		mov    (%esp),%cl
		mov    %ebx,0x18(%esp)
		mov    data_705a4(,%eax,4),%edx
		mov    %cl,data_d65d8(%eax)
	jump_115e5:
		mov    $0x200,%ebx
		mov    $data_76dc3,%eax
		call   func_4979b
		mov    $0x42,%edx
		mov    %ax,0xc(%esp)
		movswl %ax,%ecx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x10(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x3c,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0xff,%dl
		mov    0x18(%esp),%edi
		mov    %dl,data_ba8b0(,%eax,8)
		test   %di,%di
		jne    jump_1174b
		mov    $0x1,%ebx
		lea    0x14(%esp),%edx
		mov    %ecx,%eax
		mov    %di,0x14(%esp)
		call   w_dos_read
		cmpw   $0x0,0x14(%esp)
		je     jump_1174b
		mov    %di,0x14(%esp)
		mov    $0x1,%ebp
		jmp    jump_1173f
	jump_1167f:
		xor    %esi,%esi
		mov    %si,0x8(%esp)
	jump_11686:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		imul   $0x28,%edx,%edx
		mov    $data_ba8b0,%edi
		add    %edx,%edi
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xa,%edx,%edx
		mov    0x6(%esp),%esi
		mov    0xa(%esp),%ecx
		mov    %ebp,%ebx
		sar    $0x10,%esi
		sar    $0x10,%ecx
		lea    (%esi,%esi,4),%esi
		add    %edi,%edx
		mov    %ecx,%eax
		add    %esi,%edx
		call   w_dos_read
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xa,%edx,%edx
		add    %edi,%edx
		mov    %ebp,%ebx
		add    %esi,%edx
		mov    %ecx,%eax
		inc    %edx
		call   w_dos_read
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xa,%edx,%edx
		add    %edi,%edx
		mov    %ebp,%ebx
		add    %esi,%edx
		mov    %ecx,%eax
		add    $0x2,%edx
		call   w_dos_read
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xa,%edx,%edx
		add    %edi,%edx
		mov    %ebp,%ebx
		add    %esi,%edx
		mov    %ecx,%eax
		add    $0x3,%edx
		call   w_dos_read
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xa,%edx,%edx
		add    %edx,%edi
		mov    %ebp,%ebx
		lea    (%edi,%esi,1),%edx
		mov    %ecx,%eax
		mov    0x8(%esp),%edi
		add    $0x4,%edx
		inc    %edi
		call   w_dos_read
		mov    %di,0x8(%esp)
		cmp    $0x2,%di
		jl     jump_11686
		incw   0x14(%esp)
	jump_1173f:
		cmpw   $0x4,0x14(%esp)
		jl     jump_1167f
	jump_1174b:
		xor    %ebx,%ebx
		mov    %bx,0x14(%esp)
		jmp    jump_1196c
	jump_11757:
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		imul   $0x23c,%edi,%edi
		mov    0xa(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		mov    $data_d66a8,%esi
		add    %edi,%esi
		add    %esi,%eax
		lea    0x2(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x3(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x4(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    $0x1,%ebx
		add    $0x5,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		cmpw   $0x2,0x18(%esp)
		jge    jump_118e5
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x7(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xd,%edx,%edx
		mov    $0x1,%ebx
		add    %esi,%edx
		mov    %ecx,%eax
		add    $0x8,%edx
		call   w_dos_read
		cmpw   $0x0,0x18(%esp)
		jne    jump_11896
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		lea    (%edi,%eax,1),%edx
		xor    %bl,%bl
		mov    %bl,data_d66ae(%edx)
		mov    $0x1,%bh
		mov    %bh,data_d66a9(%edx)
		mov    %bh,data_d66a8(%edx)
		jmp    jump_118e5
	jump_11896:
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x6(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		mov    $0x1,%ebx
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x1(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
	jump_118e5:
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		imul   $0x23c,%ecx,%ecx
		mov    0x4(%esp),%eax
		call   w_dos_malloc
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0xd,%edx,%edx
		mov    %eax,data_d66b1(%ecx,%edx,1)
		mov    %eax,%edx
		mov    0xa(%esp),%eax
		mov    0x4(%esp),%ebx
		sar    $0x10,%eax
		call   w_dos_read
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		mov    data_d66b1(%ecx,%eax,1),%eax
		mov    0x18(%esp),%ebx
		call   func_10031
		test   %bx,%bx
		jle    jump_11967
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0xb,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x8,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_11967
		addw   $0x3,0x14(%esp)
	jump_11967:
		incw   0x14(%esp)
	jump_1196c:
		cmpw   $0x2c,0x14(%esp)
		jl     jump_11757
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1198d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		movswl %ax,%ecx
		mov    %ecx,%eax
		call   func_114ef
		mov    %eax,%ebx
		test   %ax,%ax
		jge    jump_119a6
		neg    %ebx
		dec    %ebx
		jmp    jump_119b0
	jump_119a6:
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_11575
	jump_119b0:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_119b6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movswl %ax,%ebx
		mov    data_e4fc8(%ebx),%ah
		dec    %ah
		mov    %ah,data_e4fc8(%ebx)
		cmp    $0xc8,%ah
		jbe    jump_11ab8
		mov    $0x3,%eax
		call   func_5e940
		push   $data_76dcd
		call   w_printf
		xor    %eax,%eax
		add    $0x4,%esp
		mov    data_e4fc8(%ebx),%al
		push   %eax
		push   %ebx
		push   $data_76df8
		call   w_printf
		xor    %ebx,%ebx
		add    $0xc,%esp
		jmp    jump_11a32
	jump_11a09:
		movswl %bx,%eax
		movsbw data_e502d(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11a31
		push   %eax
		mov    $0xff,%ch
		push   $data_76dff
		mov    %ch,data_e502d(%eax)
		call   w_printf
		add    $0x8,%esp
		jmp    jump_11a39
	jump_11a31:
		inc    %ebx
	jump_11a32:
		cmp    $0xe1,%bx
		jl     jump_11a09
	jump_11a39:
		xor    %ebx,%ebx
		jmp    jump_11a66
	jump_11a3d:
		movswl %bx,%eax
		movsbw data_e510e(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11a65
		push   %eax
		mov    $0xff,%bl
		push   $data_76e0a
		mov    %bl,data_e510e(%eax)
		call   w_printf
		add    $0x8,%esp
		jmp    jump_11a6c
	jump_11a65:
		inc    %ebx
	jump_11a66:
		cmp    $0x7f,%bx
		jl     jump_11a3d
	jump_11a6c:
		xor    %ebx,%ebx
		jmp    jump_11a99
	jump_11a70:
		movswl %bx,%eax
		movsbw data_d65d8(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11a98
		push   %eax
		mov    $0xff,%bh
		push   $data_76e12
		mov    %bh,data_d65d8(%eax)
		call   w_printf
		add    $0x8,%esp
		jmp    jump_11a9f
	jump_11a98:
		inc    %ebx
	jump_11a99:
		cmp    $0x48,%bx
		jl     jump_11a70
	jump_11a9f:
		call   w_dos_getch
		call   w_dos_getch
		call   func_55ebc
		mov    $0x1,%eax
		call   w_dos_exit
	jump_11ab8:
		movswl %dx,%eax
		mov    data_e4fc8(%eax),%cl
		test   %cl,%cl
		jne    jump_1211e
		xor    %ch,%ch
	jump_11acb:
		movswl %dx,%ebx
		imul   $0x23c,%ebx,%ebx
		movswl %cx,%eax
		imul   $0xd,%eax,%eax
		add    %eax,%ebx
		mov    data_d66b1(%ebx),%esi
		test   %esi,%esi
		je     jump_11af5
		mov    %esi,%eax
		xor    %edi,%edi
		call   w_dos_free
		mov    %edi,data_d66b1(%ebx)
	jump_11af5:
		inc    %ecx
		cmp    $0x2c,%cx
		jl     jump_11acb
		xor    %ebx,%ebx
		jmp    jump_11b1d
	jump_11b00:
		movswl %bx,%eax
		movsbw data_e502d(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11b1c
		movb   $0xff,data_e502d(%eax)
		jmp    jump_1211e
	jump_11b1c:
		inc    %ebx
	jump_11b1d:
		cmp    $0xe1,%bx
		jl     jump_11b00
		xor    %ebx,%ebx
		jmp    jump_11b45
	jump_11b28:
		movswl %bx,%eax
		movsbw data_e510e(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11b44
		movb   $0xff,data_e510e(%eax)
		jmp    jump_1211e
	jump_11b44:
		inc    %ebx
	jump_11b45:
		cmp    $0x7f,%bx
		jl     jump_11b28
		xor    %ebx,%ebx
		jmp    jump_11b6c
	jump_11b4f:
		movswl %bx,%eax
		movsbw data_d65d8(%eax),%cx
		cmp    %dx,%cx
		jne    jump_11b6b
		movb   $0xff,data_d65d8(%eax)
		jmp    jump_1211e
	jump_11b6b:
		inc    %ebx
	jump_11b6c:
		cmp    $0x48,%bx
		jl     jump_11b4f
		jmp    jump_1211e


/*----------------------------------------------------------------*/
func_11b77:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    0x77(%eax),%edx
		mov    0x5c(%eax),%bl
		mov    0x61(%edx),%dx
		cmp    $0x4,%bl
		ja     jump_11b95
		movswl %dx,%eax
		mov    data_706d4(,%eax,2),%ax
		jmp    jump_11baa
	jump_11b95:
		cmp    $0x6,%bl
		jbe    jump_11b9f
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_11b9f:
		movswl %dx,%eax
		mov    data_70896(,%eax,2),%ax
	jump_11baa:
		add    $0x1f4,%eax
		cwtl
		call   func_1198d
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11bb8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x7f,%bl
		xor    %eax,%eax
	jump_11bbf:
		movswl %ax,%edx
		imul   $0x88,%edx,%edx
		inc    %eax
		mov    %bl,data_bbfd6(%edx)
		cmp    $0x1f4,%ax
		jl     jump_11bbf
		mov    $0xff,%ch
		mov    $0xff,%bh
		xor    %eax,%eax
	jump_11bdb:
		movswl %ax,%edx
		mov    %bh,data_e502d(%edx)
		cmp    $0x7f,%ax
		jge    jump_11bf0
		mov    %bh,data_e510e(%edx)
	jump_11bf0:
		cmp    $0x48,%ax
		jge    jump_11bff
		movswl %ax,%edx
		mov    %ch,data_d65d8(%edx)
	jump_11bff:
		inc    %eax
		cmp    $0xe1,%ax
		jl     jump_11bdb
		mov    $0x7,%ecx
		mov    $data_d6650,%edx
		mov    $data_76e1c,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_11c1e:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_d6658(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x7,%dx
		jl     jump_11c1e
		mov    $0x78,%ecx
		mov    $data_bba28,%edx
		mov    $data_76e27,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_11c4e:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_bba30(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x78,%dx
		jl     jump_11c4e
		mov    $0x24,%ecx
		mov    $data_bb878,%edx
		mov    $data_76e34,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_11c7e:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_bb880(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x24,%dx
		jl     jump_11c7e
		mov    $0x64,%edx
		mov    $0x6d,%eax
		call   func_11575
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11ca9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		xor    %edx,%edx
	jump_11cb0:
		movswl %dx,%eax
		shl    $0x3,%eax
		add    $data_cc968,%eax
		inc    %edx
		call   func_11495
		cmp    $0x4,%dx
		jl     jump_11cb0
		mov    $data_cc990,%eax
		call   func_11495
		mov    $data_d6620,%eax
		xor    %ecx,%ecx
		call   func_11495
	jump_11cdd:
		movswl %cx,%eax
		cmpb   $0x0,data_e4fc8(%eax)
		jbe    jump_11d24
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dh,data_e4fc8(%eax)
	jump_11cf3:
		movswl %cx,%edx
		imul   $0x23c,%edx,%edx
		movswl %bx,%eax
		imul   $0xd,%eax,%eax
		add    %eax,%edx
		mov    data_d66b1(%edx),%edi
		test   %edi,%edi
		je     jump_11d1d
		mov    %edi,%eax
		xor    %ebp,%ebp
		call   w_dos_free
		mov    %ebp,data_d66b1(%edx)
	jump_11d1d:
		inc    %ebx
		cmp    $0x2c,%bx
		jl     jump_11cf3
	jump_11d24:
		inc    %ecx
		cmp    $0x65,%cx
		jl     jump_11cdd
		mov    $0xff,%cl
		xor    %ebx,%ebx
	jump_11d2f:
		movswl %bx,%eax
		inc    %ebx
		mov    %cl,data_e502d(%eax)
		cmp    $0xe1,%bx
		jl     jump_11d2f
		mov    $0xff,%ch
		xor    %eax,%eax
	jump_11d44:
		movswl %ax,%edx
		inc    %eax
		mov    %ch,data_e510e(%edx)
		cmp    $0x7f,%ax
		jl     jump_11d44
		mov    $0xff,%bl
		xor    %eax,%eax
	jump_11d58:
		movswl %ax,%edx
		inc    %eax
		mov    %bl,data_d65d8(%edx)
		cmp    $0x48,%ax
		jl     jump_11d58
		xor    %edx,%edx
	jump_11d6a:
		movswl %dx,%ebx
		imul   $0x88,%ebx,%eax
		cmpb   $0x7f,data_bbfd6(%eax)
		je     jump_11d8f
		push   %ebx
		push   $data_76e41
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
	jump_11d8f:
		inc    %edx
		cmp    $0x1f4,%dx
		jl     jump_11d6a
		xor    %eax,%eax
	jump_11d99:
		movswl %ax,%edx
		xor    %ebx,%ebx
		inc    %eax
		mov    %ebx,data_cc998(,%edx,4)
		cmp    $0x2710,%ax
		jl     jump_11d99
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11db2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %esi,%esi
		sub    $0x2,%ebx
		mov    %bx,%si
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		lea    -0x4(%ebx),%ecx
		cmp    %ecx,%esi
		jge    jump_11dea
		mov    %edx,%ecx
		sub    $0x4,%ecx
		mov    data_ba83e,%esi
		sar    $0x10,%esi
		and    $0xffff,%ecx
		sub    $0x8,%esi
		cmp    %esi,%ecx
		jl     jump_11df0
	jump_11dea:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_11df0:
		movswl %dx,%edx
		imul   %edx,%ebx
		cwtl
		add    %ebx,%eax
		mov    data_cc998(,%eax,4),%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11e04:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		xor    %ebx,%ebx
		sub    $0x2,%edx
		mov    %dx,%bx
		mov    data_ba842,%edx
		sar    $0x10,%edx
		sub    $0x4,%edx
		cmp    %edx,%ebx
		jge    jump_11edd
		mov    %ecx,%edx
		xor    %ebx,%ebx
		sub    $0x4,%edx
		mov    %dx,%bx
		mov    data_ba83e,%edx
		sar    $0x10,%edx
		sub    $0x8,%edx
		cmp    %edx,%ebx
		jge    jump_11edd
		mov    0x60(%edi),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%edx
		shl    $0x2,%edx
		sub    %ebx,%edx
		shl    $0x2,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x61(%edi),%edx
		sar    $0x18,%edx
		add    %edx,%ebx
		mov    %ebx,%esi
		shl    $0x2,%esi
		sub    %ebx,%esi
		shl    $0x2,%esi
		add    %ebx,%esi
		mov    0x5d(%edi),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		shl    $0x4,%edx
		sub    %ebx,%edx
		mov    $data_d66a8,%ebx
		shl    $0x2,%edx
		add    %edx,%ebx
		imul   data_ba844,%cx
		add    %esi,%ebx
		mov    %eax,%esi
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %ecx,(%esp)
		jmp    jump_11ed0
	jump_11ea3:
		movswl %si,%ecx
		xor    %eax,%eax
		jmp    jump_11eb7
	jump_11eaa:
		movswl %ax,%edx
		add    %ecx,%edx
		inc    %eax
		mov    %edi,data_cc998(,%edx,4)
	jump_11eb7:
		xor    %edx,%edx
		mov    (%ebx),%dl
		cmp    %dx,%ax
		jl     jump_11eaa
		mov    (%esp),%eax
		mov    data_ba844,%cx
		inc    %eax
		sub    %ecx,%esi
		mov    %eax,(%esp)
	jump_11ed0:
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x1(%ebx),%al
		cmp    %dx,%ax
		jg     jump_11ea3
	jump_11edd:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_11ee4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%eax
		mov    0x60(%ebx),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%edx
		shl    $0x2,%edx
		sub    %ecx,%edx
		shl    $0x2,%edx
		sub    %ecx,%edx
		mov    0x61(%ebx),%ecx
		sar    $0x18,%ecx
		add    %edx,%ecx
		mov    %ecx,%edx
		shl    $0x2,%edx
		sub    %ecx,%edx
		mov    0x5d(%ebx),%ebx
		shl    $0x2,%edx
		sar    $0x18,%ebx
		add    %edx,%ecx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		shl    $0x4,%edx
		sub    %ebx,%edx
		shl    $0x2,%edx
		add    $data_d66a8,%edx
		lea    (%edx,%ecx,1),%ebx
		imul   data_ba844,%ax
		xor    %edi,%edi
		add    %eax,%esi
		jmp    jump_11f66
	jump_11f3d:
		xor    %eax,%eax
		jmp    jump_11f53
	jump_11f41:
		movswl %si,%edx
		movswl %ax,%ecx
		add    %ecx,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,data_cc998(,%edx,4)
	jump_11f53:
		xor    %edx,%edx
		mov    (%ebx),%dl
		cmp    %dx,%ax
		jl     jump_11f41
		mov    data_ba844,%cx
		inc    %edi
		sub    %ecx,%esi
	jump_11f66:
		xor    %eax,%eax
		mov    0x1(%ebx),%al
		cmp    %ax,%di
		jl     jump_11f3d
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_11f74:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		xor    %edi,%edi
		sub    $0x2,%ebx
		mov    %bx,%di
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		lea    -0x4(%ebx),%esi
		cmp    %esi,%edi
		jge    jump_11fc0
		mov    %edx,%esi
		sub    $0x4,%esi
		mov    data_ba83e,%edi
		sar    $0x10,%edi
		and    $0xffff,%esi
		sub    $0x8,%edi
		cmp    %edi,%esi
		jge    jump_11fc0
		movswl %dx,%edx
		imul   %edx,%ebx
		movswl %ax,%edx
		add    %edx,%ebx
		mov    %ecx,data_cc998(,%ebx,4)
	jump_11fc0:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_11fc4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %esi,%esi
	jump_11fca:
		movswl %si,%ecx
		mov    data_cc968(,%ecx,8),%ecx
	jump_11fd4:
		test   %ecx,%ecx
		je     jump_11feb
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11e04
		mov    0x7b(%ecx),%ecx
		jmp    jump_11fd4
	jump_11feb:
		inc    %esi
		cmp    $0x4,%si
		jl     jump_11fca
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_11ff7:
/*----------------------------------------------------------------*/
		movsbl %al,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_12001:
		test   %eax,%eax
		je     jump_12014
		cmp    %edx,%eax
		jne    jump_1200f
		mov    $0x1,%eax
		ret
	jump_1200f:
		mov    0x7b(%eax),%eax
		jmp    jump_12001
	jump_12014:
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_12017:
/*----------------------------------------------------------------*/
		mov    %al,data_e518d
		ret


/*----------------------------------------------------------------*/
func_1201d:
/*----------------------------------------------------------------*/
		xor    %ah,%ah
		cmp    $0x3,%al
		jb     jump_1202b
		jbe    jump_1203b
		cmp    $0x4,%al
		je     jump_12045
		jmp    jump_12056
	jump_1202b:
		cmp    $0x1,%al
		jb     jump_12056
		cmp    $0x3,%dl
	jump_12032:
		je     jump_12054
		cmp    $0x4,%dl
		jne    jump_12056
		jmp    jump_12054
	jump_1203b:
		cmp    $0x1,%dl
		je     jump_12054
		cmp    $0x2,%dl
		jmp    jump_12032
	jump_12045:
		cmp    $0x1,%dl
		je     jump_12054
		cmp    $0x2,%dl
		je     jump_12054
		cmp    $0x3,%dl
		jne    jump_12056
	jump_12054:
		mov    $0x1,%ah
	jump_12056:
		movsbw data_e518d,%dx
		movsbw %ah,%ax
		xor    %edx,%eax
		ret


/*----------------------------------------------------------------*/
func_12065:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ecx,%ecx
		mov    $0x2,%esi
		xor    %edi,%edi
	jump_12074:
		movswl %cx,%ebx
		mov    data_cc968(,%ebx,8),%ebx
	jump_1207e:
		test   %ebx,%ebx
		je     jump_120e8
		mov    data_ba84e,%ah
		cmp    $0x6,%ah
		je     jump_12096
		cmp    $0x5,%ah
		jne    jump_1209c
	jump_12096:
		cmpb   $0x2,0x64(%ebx)
		jl     jump_120cd
	jump_1209c:
		testb  $0x1,0x14(%ebx)
		je     jump_120a8
		cmpb   $0x2,0x64(%ebx)
		jl     jump_120cd
	jump_120a8:
		cmpb   $0xff,0x56(%ebx)
		jne    jump_120e3
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_120bc
		cmpb   $0x0,0x5c(%ebx)
		je     jump_120c7
	jump_120bc:
		mov    0x5c(%ebx),%al
		cmp    $0x27,%al
		jb     jump_120e3
		cmp    $0x32,%al
		ja     jump_120e3
	jump_120c7:
		cmpb   $0x2,0x64(%ebx)
		jge    jump_120e3
	jump_120cd:
		mov    0x61(%ebx),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x2,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %dl,0x64(%ebx)
	jump_120e3:
		mov    0x7b(%ebx),%ebx
		jmp    jump_1207e
	jump_120e8:
		inc    %ecx
		cmp    $0x4,%cx
		jl     jump_12074
		mov    data_e518e,%dl
		inc    %dl
		and    $0x3,%dl
		mov    %dl,data_e518e
		mov    data_e4fb6,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,data_e4fb8
	jump_1211d:
		pop    %ebp
	jump_1211e:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_12124:
/*----------------------------------------------------------------*/
		push   %edx
		cmpw   $0x12c,0x61(%eax)
		jge    jump_1213f
		cmpb   $0xff,0x56(%eax)
		je     jump_1213f
		testb  $0x1,0x14(%eax)
		jne    jump_1213f
		movb   $0x3,0x64(%eax)
		jmp    jump_12143
	jump_1213f:
		movb   $0x0,0x64(%eax)
	jump_12143:
		movb   $0x0,0x66(%eax)
		mov    0x66(%eax),%dl
		mov    %dl,0x65(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1214f:
/*----------------------------------------------------------------*/
		cmpw   $0x12c,0x61(%eax)
		jge    jump_1215c
		movb   $0xa,0x64(%eax)
		ret
	jump_1215c:
		movb   $0x0,0x64(%eax)
		ret


/*----------------------------------------------------------------*/
func_12161:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    data_ba83c,%edx
		mov    data_ba842,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		add    %edx,%eax
		mov    $data_cc998,%ebp
		shl    $0x2,%eax
		add    %eax,%ebp
		mov    data_ba83c,%ax
		mov    %eax,0xc(%esp)
		mov    data_ba83e,%ax
		mov    %eax,0x8(%esp)
		mov    data_7001c,%ax
		mov    %ax,0x4(%esp)
		mov    data_ba838,%ax
		mov    0x4(%esp),%edx
		add    $0x6,%eax
		cmp    $0x6,%dx
		jge    jump_121dd
		mov    0xc(%esp),%ecx
		mov    %edx,%ebx
		add    $0x4,%ebp
		add    $0x18,%ebx
		inc    %ecx
		mov    %bx,0x4(%esp)
		mov    %ecx,0xc(%esp)
	jump_121dd:
		movswl %ax,%edx
		cmp    $0xfffffffc,%edx
		jge    jump_12201
		mov    0x8(%esp),%esi
		mov    data_ba842,%edx
		add    $0x10,%eax
		sar    $0x10,%edx
		inc    %esi
		shl    $0x2,%edx
		mov    %esi,0x8(%esp)
		add    %edx,%ebp
	jump_12201:
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_5eb00
		mov    %di,0x4(%esp)
		mov    %eax,(%esp)
	jump_1221a:
		mov    (%esp),%ecx
		mov    0xc(%esp),%edi
		mov    %ebp,%ebx
		xor    %esi,%esi
	jump_12225:
		mov    (%ebx),%eax
		test   %eax,%eax
		je     jump_12278
		movsbw (%eax),%dx
		cmp    %dx,%di
		jne    jump_12278
		movsbw 0x1(%eax),%dx
		cmp    0x8(%esp),%dx
		jne    jump_12278
		cmpb   $0xff,0x56(%eax)
		jne    jump_12278
		cmpb   $0x0,0x83(%eax)
		jne    jump_1225e
		cmpb   $0x1,0xe(%eax)
		jne    jump_1225e
		xor    %eax,%eax
		mov    data_e518e,%al
		jmp    jump_12268
	jump_1225e:
		xor    %eax,%eax
		mov    data_e518e,%al
		add    $0x4,%eax
	jump_12268:
		imul   $0xc,%eax,%eax
		mov    data_ba858(%eax),%edx
		mov    %ecx,%eax
		call   func_10165
	jump_12278:
		inc    %edi
		add    $0x4,%ebx
		inc    %esi
		add    $0x18,%ecx
		cmp    $0xc,%si
		jl     jump_12225
		mov    0x8(%esp),%edx
		mov    data_ba842,%eax
		mov    0x4(%esp),%ebx
		sar    $0x10,%eax
		inc    %edx
		inc    %ebx
		shl    $0x2,%eax
		mov    %edx,0x8(%esp)
		mov    (%esp),%edx
		mov    %bx,0x4(%esp)
		add    $0x1e00,%edx
		add    %eax,%ebp
		mov    %edx,(%esp)
		cmp    $0xc,%bx
		jl     jump_1221a
		add    $0x10,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_122c4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x5,%edx
		mov    data_ba83c,%bx
		mov    %dx,data_e4fbc
		cmp    %dx,%bx
		jge    jump_122e8
		mov    %bx,data_e4fbc
	jump_122e8:
		mov    $0x1,%ecx
		mov    data_ba83a,%eax
		mov    data_ba842,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xc,%eax
		mov    %cx,data_e4fc6
		cmp    %edx,%eax
		jl     jump_12315
		xor    %esi,%esi
		mov    %si,data_e4fc6
	jump_12315:
		mov    data_ba83a,%edx
		mov    data_e4fba,%eax
		mov    data_e4fbc,%di
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %edx,%esi
		add    $data_88bd4,%edx
		mov    %eax,%ebx
		sub    %eax,%edx
		imul   $0x18,%edi,%eax
		shl    $0x2,%esi
		shl    $0x2,%ebx
		add    $data_cc998,%esi
		mov    data_ba83c,%ecx
		sub    %ebx,%esi
		mov    data_ba842,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		imul   %ecx,%ebx
		add    %ebx,%edx
		mov    %edx,data_d664c
		mov    data_7001c,%dx
		mov    %ebx,%ecx
		add    $0x10,%edx
		shl    $0x2,%ecx
		sub    %eax,%edx
		mov    data_ba838,%ax
		add    %ecx,%esi
		add    $0x2,%eax
		mov    %esi,data_d66a4
		mov    %ax,data_e4fc0
		mov    data_ba83e,%ax
		mov    %dx,data_e4fc2
		mov    %ax,data_e4fba
		jmp    jump_1211e

vtable_123a9:
		.long   func_12420
		.long   func_1243e
		.long   func_12453
		.long   func_12468
		.long   func_1247d
		.long   func_12492


/*----------------------------------------------------------------*/
func_123c1:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %eax
		push   %edx
		mov    %ebx,%edi
		mov    0x28(%esp),%edx
		testb  $0x1,0x14(%edx)
		je     jump_123df
		movl   $0xffffffe8,0x10(%esp)
		jmp    jump_123e5
	jump_123df:
		xor    %ebx,%ebx
		mov    %ebx,0x10(%esp)
	jump_123e5:
		cmpb   $0x0,0x1e(%edx)
		je     jump_123f2
		xor    %esi,%esi
		jmp    jump_12554
	jump_123f2:
		testb  $0x80,0x15(%edx)
		je     jump_1255e
		mov    $0x5,%esi
		jmp    jump_12554
	jump_12406:
		movsbw 0x1e(%edx),%ax
		cmp    $0x5,%si
		ja     jump_124a7
		movzwl %si,%ebp
		jmp    *vtable_123a9(,%ebp,4)


/*----------------------------------------------------------------*/
func_12420:
/*----------------------------------------------------------------*/
		test   $0x7,%al
		je     jump_12553
		xor    %ah,%ah
		and    $0x7,%al
		cwtl
		sar    %eax
		lea    (%eax,%eax,2),%ebp
		mov    data_e4fb6,%eax
		sar    $0x10,%eax
		add    %ebp,%eax
		jmp    jump_124a7


/*----------------------------------------------------------------*/
func_1243e:
/*----------------------------------------------------------------*/
		test   $0x8,%al
		je     jump_12553
		mov    data_e4fb8,%ax
		add    $0x9,%eax
		jmp    jump_124a7


/*----------------------------------------------------------------*/
func_12453:
/*----------------------------------------------------------------*/
		test   $0x10,%al
		je     jump_12553
		mov    data_e4fb8,%ax
		add    $0xc,%eax
		jmp    jump_124a7


/*----------------------------------------------------------------*/
func_12468:
/*----------------------------------------------------------------*/
		test   $0x20,%al
		je     jump_12553
		mov    data_e4fb8,%ax
		add    $0xf,%eax
		jmp    jump_124a7


/*----------------------------------------------------------------*/
func_1247d:
/*----------------------------------------------------------------*/
		test   $0x80,%al
		je     jump_12553
		mov    data_e4fb8,%ax
		add    $0x12,%eax
		jmp    jump_124a7


/*----------------------------------------------------------------*/
func_12492:
/*----------------------------------------------------------------*/
		testb  $0x80,0x15(%edx)
		je     jump_12553
		mov    data_e4fb8,%ax
		add    $0x1e,%eax
	jump_124a7:
		movswl %ax,%ebp
		imul   $0xc,%ebp,%ebp
		mov    0x4(%esp),%ebx
		add    data_bb87c(%ebp),%bx
		mov    %ebp,0x8(%esp)
		mov    %ebx,0x14(%esp)
		movsbw 0x65(%edx),%bx
		movswl (%ecx),%ebp
		mov    %ebx,0xc(%esp)
		mov    0x14(%esp),%ebx
		lea    0x0(%ebp,%ebp,8),%ebp
		add    0xc(%esp),%ebx
		mov    %bx,(%edi,%ebp,1)
		mov    0x8(%esp),%ebp
		mov    (%esp),%ebx
		add    data_bb87e(%ebp),%bx
		mov    %ebx,0x14(%esp)
		movsbw 0x66(%edx),%bx
		mov    %ebx,0xc(%esp)
		mov    0x14(%esp),%ebx
		add    0xc(%esp),%ebx
		movswl (%ecx),%ebp
		add    0x10(%esp),%ebx
		lea    0x0(%ebp,%ebp,8),%ebp
		mov    %bx,0x2(%edi,%ebp,1)
		cmpw   $0x0,0x2c(%esp)
		jge    jump_12525
		movswl (%ecx),%ebp
		lea    0x0(%ebp,%ebp,8),%ebp
		movb   $0x0,0x4(%edi,%ebp,1)
		jmp    jump_1253a
	jump_12525:
		movswl (%ecx),%ebp
		lea    0x0(%ebp,%ebp,8),%ebp
		mov    0x2c(%esp),%bl
		mov    0x2(%edi,%ebp,1),%bh
		sub    %bh,%bl
		mov    %bl,0x4(%edi,%ebp,1)
	jump_1253a:
		movswl %ax,%ebp
		imul   $0xc,%ebp,%ebp
		movswl (%ecx),%eax
		lea    (%eax,%eax,8),%eax
		mov    data_bb880(%ebp),%ebp
		mov    %ebp,0x5(%edi,%eax,1)
		incw   (%ecx)
	jump_12553:
		inc    %esi
	jump_12554:
		cmp    $0x6,%si
		jl     jump_12406
	jump_1255e:
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_12567:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x54,%esp
		xor    %edx,%edx
		mov    %dx,0x18(%esp)
	jump_12577:
		mov    data_e4fc2,%ax
		mov    %eax,0x40(%esp)
		mov    data_e4fc0,%ax
		mov    %eax,0x24(%esp)
		mov    data_d66a4,%eax
		mov    %eax,0x4(%esp)
		mov    data_d664c,%eax
		mov    %eax,0x8(%esp)
		mov    data_ba83c,%ax
		mov    data_e4fc6,%dx
		add    $0xd,%eax
		mov    data_e4fbc,%si
		add    %eax,%edx
		mov    data_ba83c,%ax
		sub    %esi,%eax
		mov    %eax,0x34(%esp)
		mov    0x24(%esp),%eax
		add    $0x4,%eax
		mov    %eax,0x14(%esp)
		mov    0x40(%esp),%eax
		sub    $0x18,%eax
		mov    %edx,0x2c(%esp)
		mov    %eax,0x30(%esp)
		jmp    jump_12b76
	jump_125e5:
		mov    0x4(%esp),%eax
		mov    (%eax),%edx
		test   %edx,%edx
		je     jump_12b43
		mov    0x30(%esp),%eax
		mov    %edx,%esi
		mov    %eax,0x48(%esp)
	jump_125fd:
		mov    data_e4fba,%dx
		movsbw 0x1(%esi),%ax
		cmp    %dx,%ax
		jne    jump_12b38
		mov    0x61(%esi),%bx
		xor    %edx,%edx
		cmp    $0x12c,%bx
		setl   %al
		mov    %al,%dl
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%edx
		jne    jump_12b38
		mov    0x8(%esp),%eax
		mov    (%eax),%dl
		cmp    $0x64,%dl
		jae    jump_12646
		mov    %dl,%al
		and    $0xf,%al
		mov    %al,0x50(%esp)
		jmp    jump_1264c
	jump_12646:
		xor    %dh,%dh
		mov    %dh,0x50(%esp)
	jump_1264c:
		mov    0x40(%esp),%eax
		mov    0x50(%esp),%bl
		mov    %ax,0x38(%esp)
		cmp    $0x8,%bl
		jne    jump_12680
		mov    $data_e4962,%ebx
		mov    0x34(%esp),%edi
		movsbw (%esi),%ax
		mov    $data_e4fb6,%ecx
		cmp    %di,%ax
		je     jump_126ad
		mov    0x48(%esp),%eax
		mov    %ax,0x38(%esp)
		jmp    jump_126ad
	jump_12680:
		mov    0x34(%esp),%ecx
		movsbw (%esi),%ax
		cmp    %cx,%ax
		jne    jump_12b38
		cmpb   $0x0,0x6b(%esi)
		je     jump_126a3
		mov    $data_e4854,%ebx
		mov    $data_e4fc4,%ecx
		jmp    jump_126ad
	jump_126a3:
		mov    $data_e4c8c,%ebx
		mov    $data_e4fbe,%ecx
	jump_126ad:
		cmpb   $0x6,data_ba84e
		jne    jump_126fe
		mov    0x8(%esp),%eax
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    $0x64,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		cmp    $0x10,%edx
		jge    jump_126e7
		mov    0x63(%esi),%dh
		test   %dh,%dh
		jne    jump_126dc
		movb   $0x1,0x63(%esi)
		jmp    jump_126fe
	jump_126dc:
		cmp    $0x2,%dh
		jne    jump_126fe
		movb   $0x3,0x63(%esi)
		jmp    jump_126fe
	jump_126e7:
		mov    0x63(%esi),%ah
		cmp    $0x1,%ah
		jne    jump_126f5
		movb   $0x0,0x63(%esi)
		jmp    jump_126fe
	jump_126f5:
		cmp    $0x3,%ah
		jne    jump_126fe
		movb   $0x2,0x63(%esi)
	jump_126fe:
		cmpw   $0x0,0x57(%esi)
		je     jump_127d6
		mov    data_e4fb8,%ax
		add    $0x21,%eax
		mov    %ax,0x1c(%esp)
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x38(%esp),%edx
		mov    data_bb87c(%eax),%di
		add    %edi,%edx
		mov    %edx,0x44(%esp)
		mov    0x44(%esp),%edi
		movsbw 0x65(%esi),%dx
		add    %edx,%edi
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,(%edx,%ebx,1)
		mov    0x24(%esp),%edx
		mov    data_bb87e(%eax),%di
		mov    %edx,%eax
		movsbw 0x66(%esi),%dx
		add    %edi,%eax
		add    %eax,%edx
		movswl (%ecx),%eax
		lea    (%eax,%eax,8),%eax
		mov    %dx,0x2(%ebx,%eax,1)
		mov    0x8(%esp),%eax
		cmpb   $0x64,(%eax)
		jbe    jump_1279c
		mov    0x8(%esp),%ebp
		xor    %edx,%edx
		mov    0x0(%ebp),%dl
		sub    $0x65,%edx
		movswl (%ecx),%eax
		and    $0xf,%edx
		lea    (%eax,%eax,8),%eax
		mov    data_70a58(%edx),%dl
		mov    0x2(%ebx,%eax,1),%di
		xor    %dh,%dh
		add    %edx,%edi
		mov    %di,0x2(%ebx,%eax,1)
	jump_1279c:
		testb  $0x1,0x14(%esi)
		je     jump_127ae
		movswl (%ecx),%eax
		lea    (%eax,%eax,8),%eax
		subw   $0x18,0x2(%ebx,%eax,1)
	jump_127ae:
		movswl (%ecx),%eax
		lea    (%eax,%eax,8),%eax
		movb   $0x0,0x4(%ebx,%eax,1)
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    data_bb880(%eax),%eax
		mov    %eax,0x5(%edx,%ebx,1)
		incw   (%ecx)
	jump_127d6:
		mov    0x60(%esi),%eax
		sar    $0x18,%eax
		imul   $0xb,%eax,%eax
		mov    0x61(%esi),%edx
		sar    $0x18,%edx
		add    %edx,%eax
		imul   $0xd,%eax,%edx
		mov    0x5d(%esi),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		add    $data_d66a8,%eax
		add    %edx,%eax
		mov    0x38(%esp),%edi
		movsbw 0x4(%eax),%dx
		add    %edx,%edi
		movsbw 0x65(%esi),%dx
		add    %edx,%edi
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,(%edx,%ebx,1)
		mov    0x24(%esp),%edi
		movsbw 0x5(%eax),%dx
		add    %edx,%edi
		movsbw 0x66(%esi),%dx
		add    %edx,%edi
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,0x2(%edx,%ebx,1)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    0x9(%eax),%ebp
		mov    %ebp,0x5(%edx,%ebx,1)
		mov    0x38(%esp),%edi
		movsbw 0x7(%eax),%dx
		add    %edx,%edi
		mov    %edi,0x28(%esp)
		mov    0x28(%esp),%edx
		movsbw 0x65(%esi),%di
		add    %edx,%edi
		movsbw 0x8(%eax),%dx
		mov    %edx,0x28(%esp)
		mov    0x24(%esp),%edx
		add    0x28(%esp),%edx
		add    $0xc,%edx
		mov    %edx,0x28(%esp)
		movsbw 0x66(%esi),%dx
		mov    %edx,0x44(%esp)
		mov    0x28(%esp),%edx
		add    0x44(%esp),%edx
		mov    %dx,0x10(%esp)
		movw   $0xffff,0xc(%esp)
		cmpb   $0x4,data_ba84e
		jge    jump_12a61
		mov    $0xffffffff,%edx
		mov    0x8(%esp),%ebp
		mov    %dx,0x20(%esp)
		cmpb   $0x64,0x0(%ebp)
		jbe    jump_129e7
		testb  $0x1,0x14(%esi)
		jne    jump_129e7
		xor    %edx,%edx
		mov    0x0(%ebp),%dl
		sub    $0x65,%edx
		xor    %dh,%dh
		and    $0xf,%dl
		mov    %dx,0xc(%esp)
		mov    0xa(%esp),%ebp
		sar    $0x10,%ebp
		mov    data_70a58(%ebp),%dl
		mov    %dx,0x20(%esp)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		lea    (%ebx,%edx,1),%ebp
		mov    0x20(%esp),%edx
		add    %dx,0x2(%ebp)
		cmpw   $0x0,0x18(%esp)
		jne    jump_12922
		mov    0x38(%esp),%edi
		movsbw 0x65(%esi),%dx
		sub    $0xc,%edi
		add    %edx,%edi
		movsbw 0x66(%esi),%dx
		mov    %edx,0x28(%esp)
		mov    0x14(%esp),%edx
		add    0x28(%esp),%edx
		mov    %dx,0x10(%esp)
	jump_12922:
		mov    0x20(%esp),%edx
		add    $0x2,%edx
		add    %dx,0x10(%esp)
		cmpw   $0x0,0x20(%esp)
		jne    jump_12943
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		movb   $0x0,0x4(%edx,%ebx,1)
		jmp    jump_12968
	jump_12943:
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		lea    (%ebx,%edx,1),%ebp
		mov    0x10(%esp),%dl
		mov    0x2(%ebp),%dh
		sub    %dh,%dl
		mov    %dl,0x4c(%esp)
		mov    $0x8,%dl
		sub    0x20(%esp),%dl
		mov    0x4c(%esp),%dh
		add    %dh,%dl
		mov    %dl,0x4(%ebp)
	jump_12968:
		xor    %edx,%edx
		jmp    jump_129d0
	jump_1296c:
		mov    (%ecx),%dx
		inc    %edx
		mov    %dx,(%ecx)
		movswl %dx,%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,(%edx,%ebx,1)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		lea    (%ebx,%edx,1),%ebp
		mov    0x10(%esp),%edx
		mov    %dx,0x2(%ebp)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		movb   $0x0,0x4(%edx,%ebx,1)
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		shl    $0x3,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    data_ba84c,%dl
		mov    (%esp),%ebp
		shl    $0x2,%edx
		add    %ebp,%edx
		movswl (%ecx),%ebp
		lea    0x0(%ebp,%ebp,8),%ebp
		add    %ebx,%ebp
		mov    data_789ac(%edx),%edx
		mov    %edx,0x5(%ebp)
		mov    0x3c(%esp),%edx
		add    $0x18,%edi
		inc    %edx
	jump_129d0:
		mov    %edx,0x3c(%esp)
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %edx,0x44(%esp)
		mov    0x3c(%esp),%edx
		cmp    0x44(%esp),%dx
		jl     jump_1296c
	jump_129e7:
		mov    0x1e(%esp),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jne    jump_12a4b
		movswl (%ecx),%ebp
		lea    0x0(%ebp,%ebp,8),%ebp
		mov    0x50(%esp),%dl
		movb   $0x0,0x4(%ebx,%ebp,1)
		cmp    $0x8,%dl
		je     jump_12a42
		mov    data_ba838,%edx
		sar    $0x10,%edx
		mov    %di,data_8b2e4(,%edx,8)
		mov    0x10(%esp),%edi
		mov    %di,data_8b2e6(,%edx,8)
		mov    0x3(%eax),%eax
		sar    $0x18,%eax
		imul   $0xc,%eax,%eax
		mov    data_d6658(%eax),%eax
		mov    %eax,data_8b2e8(,%edx,8)
		incw   data_ba83a
	jump_12a42:
		xor    %edx,%edx
		mov    %dx,0x20(%esp)
		jmp    jump_12a73
	jump_12a4b:
		mov    0x10(%esp),%eax
		mov    0x20(%esp),%edi
		add    $0x8,%eax
		sub    %edi,%eax
		mov    %ax,0xc(%esp)
		jmp    jump_12a73
	jump_12a61:
		movswl (%ecx),%eax
		xor    %edi,%edi
		lea    (%eax,%eax,8),%eax
		mov    %di,0x20(%esp)
		movb   $0x0,0x4(%ebx,%eax,1)
	jump_12a73:
		incw   (%ecx)
		cmpl   $0x0,0x77(%esi)
		je     jump_12b16
		cmpb   $0x6,0x5c(%esi)
		ja     jump_12b16
		mov    0x60(%esi),%eax
		sar    $0x18,%eax
		imul   $0xb,%eax,%edx
		mov    0x61(%esi),%eax
		sar    $0x18,%eax
		add    %eax,%edx
		imul   $0xd,%edx,%edx
		mov    0x77(%esi),%eax
		mov    0x5d(%eax),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		add    $data_d66a8,%eax
		add    %edx,%eax
		mov    0x38(%esp),%edi
		movsbw 0x4(%eax),%dx
		add    %edx,%edi
		mov    %edi,0x28(%esp)
		mov    0x28(%esp),%edx
		movsbw 0x65(%esi),%di
		add    %edx,%edi
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,(%edx,%ebx,1)
		mov    0x24(%esp),%edi
		movsbw 0x5(%eax),%dx
		add    %edx,%edi
		movsbw 0x66(%esi),%dx
		add    %edi,%edx
		mov    0x20(%esp),%edi
		add    %edx,%edi
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    %di,0x2(%edx,%ebx,1)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		movb   $0x0,0x4(%edx,%ebx,1)
		movswl (%ecx),%edx
		lea    (%edx,%edx,8),%edx
		mov    0x9(%eax),%eax
		mov    %eax,0x5(%edx,%ebx,1)
		incw   (%ecx)
	jump_12b16:
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		mov    0x20(%esp),%edx
		push   %eax
		mov    0x28(%esp),%eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x3a(%esp),%eax
		push   %esi
		sar    $0x10,%eax
		call   func_123c1
	jump_12b38:
		mov    0x67(%esi),%esi
		test   %esi,%esi
		jne    jump_125fd
	jump_12b43:
		mov    0x4(%esp),%edx
		mov    0x8(%esp),%ebx
		mov    0x40(%esp),%ecx
		mov    0x34(%esp),%esi
		add    $0x4,%edx
		inc    %ebx
		add    $0x18,%ecx
		inc    %esi
		mov    %edx,0x4(%esp)
		mov    %ebx,0x8(%esp)
		mov    0x30(%esp),%ebx
		mov    %ecx,0x40(%esp)
		add    $0x18,%ebx
		mov    %esi,0x34(%esp)
		mov    %ebx,0x30(%esp)
	jump_12b76:
		mov    0x34(%esp),%eax
		cmp    0x2c(%esp),%ax
		jl     jump_125e5
		mov    0x18(%esp),%ebx
		inc    %ebx
		mov    %bx,0x18(%esp)
		cmp    $0x2,%bx
		jl     jump_12577
		mov    data_ba842,%eax
		mov    data_d66a4,%ecx
		sar    $0x10,%eax
		mov    data_d664c,%esi
		shl    $0x2,%eax
		mov    data_e4fc0,%di
		add    %eax,%ecx
		mov    data_ba842,%eax
		add    $0x10,%edi
		sar    $0x10,%eax
		mov    %di,data_e4fc0
		add    %eax,%esi
		mov    data_e4fba,%ax
		mov    %ecx,data_d66a4
		inc    %eax
		mov    %esi,data_d664c
		mov    %ax,data_e4fba
		add    $0x54,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_12bee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_10c7d
		call   func_122c4
		call   func_18555
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %dx,data_e4fb6
	jump_12c0d:
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %bx,data_e4fc4
		mov    %bx,data_e4fbe
		mov    %bx,data_ba83a
		call   func_10cbd
		call   func_12567
		call   func_18605
		jmp    jump_12c5b
	jump_12c37:
		movswl %si,%eax
		mov    data_8b2e8(,%eax,8),%ebx
		mov    data_8b2e4(,%eax,8),%edx
		mov    data_8b2e2(,%eax,8),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_5f3fd
	jump_12c5b:
		cmp    data_ba83a,%si
		jl     jump_12c37
		xor    %esi,%esi
		jmp    jump_12cbb
	jump_12c68:
		movswl %si,%eax
		lea    (%eax,%eax,8),%eax
		xor    %edx,%edx
		mov    data_e4c90(%eax),%dl
		test   %dx,%dx
		jne    jump_12c9a
		mov    data_e4c91(%eax),%ebx
		mov    data_e4c8c(%eax),%edx
		mov    data_e4c8a(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_12cba
	jump_12c9a:
		movswl %dx,%ecx
		mov    data_e4c91(%eax),%ebx
		mov    data_e4c8c(%eax),%edx
		mov    data_e4c8a(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f4af
	jump_12cba:
		inc    %esi
	jump_12cbb:
		cmp    data_e4fbe,%si
		jl     jump_12c68
		xor    %esi,%esi
		jmp    jump_12d1b
	jump_12cc8:
		movswl %si,%eax
		lea    (%eax,%eax,8),%eax
		xor    %edx,%edx
		mov    data_e4858(%eax),%dl
		test   %dx,%dx
		jne    jump_12cfa
		mov    data_e4859(%eax),%ebx
		mov    data_e4854(%eax),%edx
		mov    data_e4852(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_12d1a
	jump_12cfa:
		movswl %dx,%ecx
		mov    data_e4859(%eax),%ebx
		mov    data_e4854(%eax),%edx
		mov    data_e4852(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f4af
	jump_12d1a:
		inc    %esi
	jump_12d1b:
		cmp    data_e4fc4,%si
		jl     jump_12cc8
		inc    %edi
		cmp    $0x11,%di
		jl     jump_12c0d
		xor    %esi,%esi
		jmp    jump_12d57
	jump_12d33:
		movswl %si,%eax
		lea    (%eax,%eax,8),%eax
		mov    data_e4967(%eax),%ebx
		mov    data_e4962(%eax),%edx
		mov    data_e4960(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_5f3fd
	jump_12d57:
		cmp    data_e4fb6,%si
		jl     jump_12d33
		jmp    jump_1211e


/*----------------------------------------------------------------*/
func_12d65:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   func_10c7d
		call   func_18555
		xor    %esi,%esi
	jump_12d75:
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    %dx,data_e4fc4
		mov    %dx,data_ba83a
		call   func_10cbd
		call   func_18605
		jmp    jump_12db7
	jump_12d93:
		movswl %cx,%eax
		mov    data_8b2e8(,%eax,8),%ebx
		mov    data_8b2e4(,%eax,8),%edx
		mov    data_8b2e2(,%eax,8),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5f3fd
	jump_12db7:
		cmp    data_ba83a,%cx
		jl     jump_12d93
		xor    %ecx,%ecx
		jmp    jump_12de8
	jump_12dc4:
		movswl %cx,%eax
		lea    (%eax,%eax,8),%eax
		mov    data_e4859(%eax),%ebx
		mov    data_e4854(%eax),%edx
		mov    data_e4852(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5f3fd
	jump_12de8:
		cmp    data_e4fc4,%cx
		jl     jump_12dc4
		inc    %esi
		cmp    $0x11,%si
		jl     jump_12d75
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_12e01:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_122c4
		xor    %edi,%edi
	jump_12e0d:
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %dx,data_e4fc4
		mov    %dx,data_e4fbe
		mov    %dx,data_ba83a
		call   func_12567
		jmp    jump_12e51
	jump_12e2d:
		movswl %si,%eax
		mov    data_8b2e8(,%eax,8),%ebx
		mov    data_8b2e4(,%eax,8),%edx
		mov    data_8b2e2(,%eax,8),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_5f3fd
	jump_12e51:
		cmp    data_ba83a,%si
		jl     jump_12e2d
		xor    %esi,%esi
		jmp    jump_12eb1
	jump_12e5e:
		movswl %si,%eax
		lea    (%eax,%eax,8),%eax
		xor    %edx,%edx
		mov    data_e4c90(%eax),%dl
		test   %dx,%dx
		jne    jump_12e90
		mov    data_e4c91(%eax),%ebx
		mov    data_e4c8c(%eax),%edx
		mov    data_e4c8a(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_12eb0
	jump_12e90:
		movswl %dx,%ecx
		mov    data_e4c91(%eax),%ebx
		mov    data_e4c8c(%eax),%edx
		mov    data_e4c8a(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f4af
	jump_12eb0:
		inc    %esi
	jump_12eb1:
		cmp    data_e4fbe,%si
		jl     jump_12e5e
		xor    %esi,%esi
		jmp    jump_12f11
	jump_12ebe:
		movswl %si,%eax
		lea    (%eax,%eax,8),%eax
		xor    %edx,%edx
		mov    data_e4858(%eax),%dl
		test   %dx,%dx
		jne    jump_12ef0
		mov    data_e4859(%eax),%ebx
		mov    data_e4854(%eax),%edx
		mov    data_e4852(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_12f10
	jump_12ef0:
		movswl %dx,%ecx
		mov    data_e4859(%eax),%ebx
		mov    data_e4854(%eax),%edx
		mov    data_e4852(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f4af
	jump_12f10:
		inc    %esi
	jump_12f11:
		cmp    data_e4fc4,%si
		jl     jump_12ebe
		inc    %edi
		cmp    $0x11,%di
		jl     jump_12e0d
		jmp    jump_1211e


/*----------------------------------------------------------------*/
func_12f2a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%esi
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x10(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    0x60(%esi),%edx
		sub    $0x2,%eax
		sar    $0x18,%edx
		mov    %eax,0xc(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x61(%esi),%eax
		sar    $0x18,%eax
		add    %eax,%edx
		mov    %edx,%edi
		shl    $0x2,%edi
		sub    %edx,%edi
		shl    $0x2,%edi
		add    %edx,%edi
		mov    0x5d(%esi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		movsbl 0x1(%esi),%edx
		add    %eax,%edi
		movsbl (%esi),%eax
		mov    0x10(%esp),%ebx
		call   func_1093d
		movsbw 0x4(%edi),%dx
		add    %edx,%ebx
		movsbw 0x65(%esi),%dx
		add    %edx,%ebx
		mov    0xc(%esp),%ecx
		mov    %bx,0x20(%esp)
		movsbw 0x5(%edi),%bx
		add    %ecx,%ebx
		movsbw 0x66(%esi),%cx
		mov    %ecx,0x8(%esp)
		add    %ebx,%ecx
		mov    0x61(%esi),%bx
		mov    %al,%ah
		cmp    $0x12c,%bx
		jl     jump_12fe4
		cmp    $0x64,%al
		jae    jump_13016
	jump_12fe4:
		mov    0x10(%esp),%ebx
		movsbw 0x7(%edi),%dx
		add    %edx,%ebx
		movsbw 0x65(%esi),%dx
		add    %edx,%ebx
		mov    %bx,0x1c(%esp)
		movsbw 0x8(%edi),%dx
		add    0xc(%esp),%edx
		add    $0xc,%edx
		mov    %edx,0x4(%esp)
		mov    0x4(%esp),%ebx
		movsbw 0x66(%esi),%dx
		jmp    jump_1302f
	jump_13016:
		mov    0x10(%esp),%ebx
		sub    $0xc,%ebx
		add    %edx,%ebx
		mov    0xc(%esp),%edx
		mov    %bx,0x1c(%esp)
		mov    0x8(%esp),%ebx
		add    $0x4,%edx
	jump_1302f:
		add    %edx,%ebx
		mov    %bx,0x18(%esp)
		cmpb   $0x4,data_ba84e
		jge    jump_130dc
		testb  $0x1,0x14(%esi)
		jne    jump_130dc
		movw   $0xffff,0x14(%esp)
		cmp    $0x64,%al
		jbe    jump_13096
		mov    %al,%ah
		sub    $0x65,%ah
		xor    %edx,%edx
		and    $0xf,%ah
		mov    %ah,%dl
		mov    %ah,0x24(%esp)
		mov    data_70a58(%edx),%dl
		xor    %dh,%dh
		mov    0x18(%esp),%ebx
		mov    %dx,0x14(%esp)
		add    %edx,%ecx
		add    $0x2,%edx
		add    %edx,%ebx
		mov    %ebx,%edx
		mov    %bx,0x18(%esp)
		sub    %ecx,%edx
		mov    0x14(%esp),%ebx
		add    $0x8,%edx
		sub    %ebx,%edx
		mov    %dx,(%esp)
	jump_13096:
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jne    jump_130e7
		xor    %edx,%edx
		and    $0xf,%al
		mov    %dx,0x14(%esp)
		mov    %dx,(%esp)
		cmp    $0x8,%al
		je     jump_130e7
		mov    0x3(%edi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x16(%esp),%edx
		mov    data_d6658(,%eax,4),%ebx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_130e7
	jump_130dc:
		xor    %eax,%eax
		mov    %ax,0x14(%esp)
		mov    %ax,(%esp)
	jump_130e7:
		cmpw   $0x0,(%esp)
		jne    jump_13102
		mov    0x1e(%esp),%eax
		movswl %cx,%edx
		mov    0x9(%edi),%ebx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_13165
	jump_13102:
		mov    -0x2(%esp),%eax
		mov    0x1e(%esp),%ebp
		movswl %cx,%edx
		mov    0x9(%edi),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebp
		mov    %eax,%ecx
		mov    %ebp,%eax
		call   func_5f4af
		xor    %ecx,%ecx
		jmp    jump_1315c
	jump_13123:
		xor    %eax,%eax
		mov    0x24(%esp),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x3,%edx
		mov    data_ba84c,%al
		mov    data_789ac(%edx,%eax,4),%ebx
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    0x1c(%esp),%edx
		add    $0x18,%edx
		inc    %ecx
		mov    %dx,0x1c(%esp)
	jump_1315c:
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    %ax,%cx
		jl     jump_13123
	jump_13165:
		cmpl   $0x0,0x77(%esi)
		je     jump_131f0
		cmpb   $0x6,0x5c(%esi)
		ja     jump_131f0
		mov    0x60(%esi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x61(%esi),%edx
		sar    $0x18,%edx
		add    %eax,%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		mov    0x77(%esi),%eax
		add    %edx,%ebx
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		mov    0xc(%esp),%edi
		add    %ebx,%eax
		movsbw 0x66(%esi),%dx
		mov    0x9(%eax),%ebx
		movsbw 0x5(%eax),%cx
		movsbw 0x4(%eax),%ax
		add    %edi,%ecx
		mov    0x10(%esp),%edi
		add    %ecx,%edx
		mov    0x14(%esp),%ecx
		add    %edi,%eax
		add    %ecx,%edx
		movsbw 0x65(%esi),%cx
		add    %ecx,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_131f0:
		add    $0x28,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_131f8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%edi
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,(%esp)
		movsbl 0x1(%edi),%eax
		call   func_10988
		mov    0x60(%edi),%edx
		sub    $0x2,%eax
		sar    $0x18,%edx
		mov    %eax,0x8(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x61(%edi),%eax
		sar    $0x18,%eax
		add    %eax,%edx
		mov    %edx,%esi
		shl    $0x2,%esi
		sub    %edx,%esi
		shl    $0x2,%esi
		add    %edx,%esi
		mov    0x5d(%edi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		movsbl 0x1(%edi),%edx
		add    %eax,%esi
		movsbl (%edi),%eax
		mov    (%esp),%ebx
		call   func_1093d
		movsbw 0x4(%esi),%dx
		add    %edx,%ebx
		movsbw 0x65(%edi),%dx
		add    %edx,%ebx
		mov    %bx,0x4(%esp)
		movsbw 0x5(%esi),%dx
		mov    0x8(%esp),%ebx
		movsbw 0x66(%edi),%cx
		add    %ebx,%edx
		mov    (%esp),%ebx
		add    %edx,%ecx
		movsbw 0x7(%esi),%dx
		add    %edx,%ebx
		mov    %bx,0x10(%esp)
		movsbw 0x8(%esi),%dx
		add    0x8(%esp),%edx
		add    $0xc,%edx
		mov    %dx,0xc(%esp)
		mov    $0xffffffff,%edx
		mov    %al,0x1c(%esp)
		mov    %dx,0x18(%esp)
		cmp    $0x64,%al
		jbe    jump_13326
		testb  $0x1,0x14(%edi)
		jne    jump_13326
		mov    0x2(%esi),%edx
		xor    %ebx,%ebx
		sar    $0x18,%edx
		mov    0x3(%esi),%bl
		add    %edx,%ebx
		mov    0x63(%edi),%edx
		sar    $0x18,%edx
		add    %edx,%ebx
		mov    0x5(%esi),%edx
		sar    $0x18,%edx
		add    $0x11,%edx
		cmp    %edx,%ebx
		jle    jump_13326
		sub    $0x65,%al
		and    $0xf,%al
		mov    %al,0x20(%esp)
		xor    %eax,%eax
		mov    0x20(%esp),%al
		mov    data_70a58(%eax),%al
		xor    %ah,%ah
		mov    %ax,0x18(%esp)
		mov    0xc(%esp),%eax
		mov    0x18(%esp),%ebx
		sub    %ecx,%eax
		sub    %ebx,%eax
		add    $0x8,%eax
		mov    %ax,0x14(%esp)
	jump_13326:
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jne    jump_1336f
		xor    %eax,%eax
		mov    %ax,0x18(%esp)
		mov    %ax,0x14(%esp)
		mov    0x1c(%esp),%al
		and    $0xf,%al
		cmp    $0x8,%al
		je     jump_1336f
		mov    0x3(%esi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0xa(%esp),%edx
		mov    data_d6658(,%eax,4),%ebx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
	jump_1336f:
		cmpw   $0x0,0x14(%esp)
		jne    jump_1338e
		mov    0x2(%esp),%eax
		movswl %cx,%edx
		mov    0x9(%esi),%ebx
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    jump_1340c
	jump_1338e:
		mov    0x12(%esp),%eax
		mov    0x18(%esp),%edx
		mov    0x2(%esp),%ebp
		mov    0x9(%esi),%ebx
		sar    $0x10,%eax
		add    %edx,%ecx
		sar    $0x10,%ebp
		movswl %cx,%edx
		mov    %eax,%ecx
		mov    %ebp,%eax
		call   func_5f4af
		mov    0x18(%esp),%eax
		mov    0xc(%esp),%ebx
		add    $0x2,%eax
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    %bx,0xc(%esp)
		jmp    jump_13403
	jump_133c9:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    data_ba84c,%bl
		mov    0x20(%esp),%al
		shl    $0x2,%ebx
		mov    0xa(%esp),%edx
		mov    data_789ac(%ebx,%eax,8),%ebx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    0x10(%esp),%eax
		add    $0x18,%eax
		inc    %ecx
		mov    %ax,0x10(%esp)
	jump_13403:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    %ax,%cx
		jl     jump_133c9
	jump_1340c:
		cmpl   $0x0,0x77(%edi)
		je     jump_13490
		cmpb   $0x6,0x5c(%edi)
		ja     jump_13490
		mov    0x60(%edi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x61(%edi),%edx
		sar    $0x18,%edx
		add    %eax,%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		mov    0x77(%edi),%eax
		add    %edx,%ebx
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		add    %ebx,%eax
		mov    0x8(%esp),%ecx
		movsbw 0x5(%eax),%dx
		mov    0x9(%eax),%ebx
		add    %edx,%ecx
		movsbw 0x66(%edi),%dx
		movsbw 0x4(%eax),%ax
		add    %ecx,%edx
		mov    (%esp),%ecx
		add    %eax,%ecx
		movsbw 0x65(%edi),%ax
		add    %ecx,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_13490:
		add    $0x24,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_13498:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    $0x64,%ebx
		mov    0x48(%esi),%edx
		mov    0x48(%eax),%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_134c4
		mov    0x48(%esi),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		inc    %eax
		jmp    jump_134ce
	jump_134c4:
		mov    0x48(%esi),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
	jump_134ce:
		mov    $0xa,%ebx
		mov    %esp,%edx
		cwtl
		call   func_ltoa_
		movsbl (%esi),%eax
		call   func_10971
		mov    %eax,%edx
		movsbl 0x1(%esi),%eax
		add    $0x2,%edx
		call   func_10988
		mov    %eax,%edi
		mov    0x14(%esi),%ah
		add    $0x6,%edi
		test   $0x1,%ah
		je     jump_13501
		sub    $0x18,%edi
	jump_13501:
		push   $0x0
		mov    $0x1,%ecx
		lea    0x4(%esp),%ebx
		movswl %dx,%ebp
		movswl %di,%edi
		lea    0x1(%ebp),%eax
		mov    %edi,%edx
		call   func_608e6
		mov    0xb(%esi),%eax
		sar    $0x18,%eax
		mov    data_70a62(%eax),%al
		mov    $0x1,%ecx
		and    $0xff,%eax
		mov    %esp,%ebx
		push   %eax
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_608e6
		add    $0x8,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_13546:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    data_ba83c,%ax
		mov    data_ba83e,%si
		mov    %ax,0x4(%esp)
		inc    %esi
		mov    data_ba842,%eax
		movswl %si,%ebx
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		add    %ebx,%eax
		mov    $data_cc998,%ebp
		shl    $0x2,%eax
		add    %eax,%ebp
		mov    %esi,%eax
		add    $0xb,%eax
		mov    %eax,(%esp)
		mov    0x4(%esp),%eax
		add    $0xd,%eax
		mov    %eax,0x8(%esp)
		mov    0x8(%esp),%edi
		jmp    jump_135dd
	jump_135a0:
		mov    0x4(%esp),%edx
		mov    %ebp,%ebx
		jmp    jump_135ca
	jump_135a8:
		mov    (%ebx),%eax
		test   %eax,%eax
		je     jump_135c6
		movsbw (%eax),%cx
		cmp    %dx,%cx
		jne    jump_135c6
		movsbw 0x1(%eax),%cx
		cmp    %si,%cx
		jne    jump_135c6
		call   func_13498
	jump_135c6:
		add    $0x4,%ebx
		inc    %edx
	jump_135ca:
		cmp    %di,%dx
		jl     jump_135a8
		mov    data_ba842,%eax
		sar    $0x10,%eax
		shl    $0x2,%eax
		inc    %esi
		add    %eax,%ebp
	jump_135dd:
		cmp    (%esp),%si
		jl     jump_135a0
		add    $0xc,%esp
		jmp    jump_1211d


/*----------------------------------------------------------------*/
func_135eb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%edi
		sub    %edx,%eax
		mov    0x60(%ecx),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%edi
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		lea    (%edi,%eax,1),%edx
		movsbl (%ecx),%eax
		call   func_10971
		movswl %ax,%edi
		mov    0x1(%edx),%eax
		add    $0xc,%edi
		sar    $0x18,%eax
		add    %edi,%eax
		movzbl 0x2(%edx),%edi
		sar    %edi
		add    %edi,%eax
		mov    %ax,(%esi)
		movsbl 0x1(%ecx),%eax
		call   func_10988
		mov    0x2(%edx),%ecx
		cwtl
		sar    $0x18,%ecx
		add    $0x2,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x3(%edx),%al
		sar    %eax
		add    %ecx,%eax
		mov    %ax,(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_13669:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x4(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    0x60(%esi),%edi
		sub    $0x2,%eax
		sar    $0x18,%edi
		mov    %eax,(%esp)
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		mov    0x61(%esi),%edi
		sar    $0x18,%edi
		add    %eax,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		mov    0x5d(%esi),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%edi
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		add    %edi,%eax
		mov    0x4(%esp),%edx
		movsbw 0x4(%eax),%cx
		add    %edx,%ecx
		movsbw 0x65(%esi),%dx
		mov    (%esp),%edi
		add    %edx,%ecx
		movsbw 0x5(%eax),%dx
		add    %edi,%edx
		movsbw 0x66(%esi),%di
		add    %edi,%edx
		movswl %bx,%edi
		movswl %dx,%edx
		mov    0x9(%eax),%ebx
		movswl %cx,%eax
		mov    %edi,%ecx
		call   func_5f517
		cmpl   $0x0,0x77(%esi)
		je     jump_13792
		cmpb   $0x6,0x5c(%esi)
		ja     jump_13792
		mov    0x60(%esi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x61(%esi),%edx
		sar    $0x18,%edx
		add    %eax,%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		mov    0x77(%esi),%eax
		add    %edx,%ebx
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		add    %ebx,%eax
		mov    (%esp),%ecx
		mov    0x9(%eax),%ebx
		movsbw 0x5(%eax),%dx
		movsbw 0x4(%eax),%ax
		add    %edx,%ecx
		movsbw 0x66(%esi),%dx
		add    %ecx,%edx
		mov    0x4(%esp),%ecx
		add    %eax,%ecx
		movsbw 0x65(%esi),%ax
		add    %ecx,%eax
		movswl %dx,%edx
		cwtl
		mov    %edi,%ecx
		call   func_5f517
	jump_13792:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
	jump_13799:
		ret


/*----------------------------------------------------------------*/
func_1379a:
/*----------------------------------------------------------------*/
		cwtl
		mov    data_cc960(,%eax,8),%eax
	jump_137a2:
		test   %eax,%eax
		je     jump_13799
		cmp    0xf(%eax),%dl
		je     jump_13799
		mov    0x7b(%eax),%eax
		jmp    jump_137a2


/*----------------------------------------------------------------*/
func_137b0:
/*----------------------------------------------------------------*/
		push   %ebx
		cmpw   $0x12c,0x61(%eax)
		jge    jump_137bf
		testb  $0x2,0x1e(%eax)
		je     jump_137cc
	jump_137bf:
		mov    0x5c(%eax),%bh
		cmp    $0x27,%bh
		jb     jump_137cf
		cmp    $0x2c,%bh
		ja     jump_137cf
	jump_137cc:
		mov    %dl,0x63(%eax)
	jump_137cf:
		pop    %ebx
	jump_137d0:
		ret


/*----------------------------------------------------------------*/
func_137d1:
/*----------------------------------------------------------------*/
		mov    data_cc990,%eax
	jump_137d6:
		test   %eax,%eax
		je     jump_137d0
		movb   $0x0,0x56(%eax)
		movb   $0x0,0x5c(%eax)
		mov    0x7b(%eax),%eax
		jmp    jump_137d6


/*----------------------------------------------------------------*/
func_137e7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    %al,(%esp)
		mov    data_d6620,%ebx
		xor    %ecx,%ecx
	jump_137f8:
		test   %ebx,%ebx
		je     jump_13820
		mov    (%esp),%dl
		inc    %ecx
		test   %dl,%dl
		je     jump_1381b
		mov    -0x3(%esp),%edx
		mov    0xb(%ebx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_1384a
	jump_1381b:
		mov    0x7b(%ebx),%ebx
		jmp    jump_137f8
	jump_13820:
		test   %cx,%cx
		je     jump_1382b
		cmpb   $0x0,(%esp)
		je     jump_1382f
	jump_1382b:
		xor    %ebx,%ebx
		jmp    jump_1384a
	jump_1382f:
		movswl %cx,%eax
		mov    data_d6620,%ebx
		call   func_499bd
		mov    %eax,%ecx
		jmp    jump_13845
	jump_13841:
		dec    %ecx
		mov    0x7b(%ebx),%ebx
	jump_13845:
		test   %cx,%cx
		jg     jump_13841
	jump_1384a:
		mov    %ebx,%eax
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13853:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x64,%ecx
		mov    0x48(%ebx),%edx
		mov    0x48(%eax),%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     jump_1387b
		mov    0x48(%ebx),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		inc    %eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_1387b:
		mov    0x48(%ebx),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_13889:
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0

vtable_138c9:
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0


/*----------------------------------------------------------------*/
func_13909:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    $0x200,%edx
		call   func_4976f
		xor    %ebx,%ebx
		mov    $0x80,%edx
		mov    %ax,0xc(%esp)
		cwtl
		call   w_dos_lseek
		xor    %edx,%edx
		mov    %dx,0x8(%esp)
		mov    %dx,0x4(%esp)
		mov    $0x2,%ebp
	jump_1393f:
		mov    0xa(%esp),%ecx
		mov    $0x4,%ebx
		mov    %esp,%edx
		mov    0x2(%esp),%esi
		mov    0x6(%esp),%edi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		mov    %ecx,%eax
		sar    $0x10,%edi
		call   w_dos_read
		shl    $0x3,%esi
		shl    $0x2,%edi
		mov    (%esp),%eax
		mov    $data_e5a30,%edx
		call   w_dos_malloc
		mov    %ebp,%ebx
		add    %edi,%edx
		mov    %eax,data_e5a90(%esi)
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_e5a10,%edx
		mov    %ebp,%ebx
		mov    data_e5a2e(%edi),%eax
		add    %edi,%edx
		sar    $0x11,%eax
		add    $0x2,%edx
		mov    %ax,data_e5a30(%edi)
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_e5a10(%edi),%eax
		mov    $0x1,%ebx
		sar    $0x11,%eax
		mov    $0x4,%edx
		mov    %ax,data_e5a12(%edi)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%ebx
		mov    %ecx,%eax
		mov    data_e5a90(%esi),%edx
		call   w_dos_read
		mov    data_e5a90(%esi),%eax
		call   func_10031
		mov    $0x4,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		mov    0x8(%esp),%edi
		call   w_dos_read
		mov    (%esp),%eax
		inc    %edi
		mov    $data_e5a30,%edx
		mov    %di,0x8(%esp)
		call   w_dos_malloc
		mov    0x6(%esp),%edi
		mov    %ebp,%ebx
		sar    $0x10,%edi
		mov    %eax,data_e5a94(%esi)
		shl    $0x2,%edi
		mov    %ecx,%eax
		add    %edi,%edx
		call   w_dos_read
		mov    $data_e5a10,%edx
		mov    %ebp,%ebx
		mov    data_e5a2e(%edi),%eax
		add    %edi,%edx
		sar    $0x11,%eax
		add    $0x2,%edx
		mov    %ax,data_e5a30(%edi)
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_e5a10(%edi),%eax
		mov    $0x1,%ebx
		sar    $0x11,%eax
		mov    $0x4,%edx
		mov    %ax,data_e5a12(%edi)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%ebx
		mov    %ecx,%eax
		mov    data_e5a94(%esi),%edx
		call   w_dos_read
		mov    data_e5a94(%esi),%eax
		mov    0x4(%esp),%edx
		call   func_10031
		mov    0x8(%esp),%eax
		inc    %edx
		inc    %eax
		mov    %dx,0x4(%esp)
		mov    %ax,0x8(%esp)
		cmp    $0x4,%dx
		jl     jump_1393f
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x10,%esp
		jmp    jump_15957


/*----------------------------------------------------------------*/
func_13ab1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0xa0,data_edd80
		jl     jump_13ad1
		xor    %ebx,%ebx
		mov    $0xffffffff,%eax
		mov    %bx,data_edd80
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_13ad1:
		mov    data_edd7e,%edx
		sar    $0x10,%edx
		mov    data_edd80,%cx
		mov    %eax,data_e8cc0(,%edx,4)
		mov    $0x1,%eax
		add    %eax,%ecx
		mov    %cx,data_edd80
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13afa:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		decw   data_edd80
		mov    data_edd7e,%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_13b1a
		mov    data_e8cc0(,%eax,4),%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_13b1a:
		mov    $0xffffffff,%ecx
		xor    %ebx,%ebx
		mov    %cx,data_edd85
		mov    %bx,data_edd80
		mov    data_edd83,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13b37:
/*----------------------------------------------------------------*/
		cmpw   $0x0,data_edd80
		setle  %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_13b45:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    %dx,data_edd80
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_13b51:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%edx
		lea    (%edx,%edx,1),%eax
		cmpw   $0xa0,data_e8f40(%eax)
		jl     jump_13b6e
		mov    $0xffffffff,%edx
		jmp    jump_13b94
	jump_13b6e:
		mov    %edx,%ebx
		shl    $0x2,%edx
		mov    data_e8f3e(%eax),%esi
		add    %ebx,%edx
		sar    $0x10,%esi
		shl    $0x7,%edx
		mov    %ecx,data_e5bb0(%edx,%esi,4)
		mov    $0x1,%edx
		add    %dx,data_e8f40(%eax)
	jump_13b94:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13b9a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x4,%esp
		xor    %eax,%eax
		jmp    jump_13bde
	jump_13ba5:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,1),%edx
		mov    data_e8f40(%edx),%cx
		test   %cx,%cx
		jle    jump_13bdd
		mov    %ecx,%esi
		dec    %esi
		mov    %si,data_e8f40(%edx)
		mov    data_e8f3e(%edx),%eax
		mov    %ebx,%edx
		shl    $0x2,%edx
		add    %ebx,%edx
		sar    $0x10,%eax
		shl    $0x7,%edx
		mov    data_e5bb0(%edx,%eax,4),%edx
		jmp    jump_13bee
	jump_13bdd:
		inc    %eax
	jump_13bde:
		cmp    $0x4,%ax
		jl     jump_13ba5
		movw   $0xffff,0x2(%esp)
		mov    (%esp),%edx
	jump_13bee:
		mov    %edx,%eax
		add    $0x4,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13bf8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %eax,%eax
	jump_13bfc:
		movswl %ax,%edx
		xor    %ebx,%ebx
		inc    %eax
		mov    %bx,data_e8f40(,%edx,2)
		cmp    $0x4,%ax
		jl     jump_13bfc
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13c13:
/*----------------------------------------------------------------*/
		cmpw   $0x0,data_e8f40
		jne    jump_13c3b
		cmpw   $0x0,data_e8f42
		jne    jump_13c3b
		cmpw   $0x0,data_e8f44
		jne    jump_13c3b
		cmpw   $0x0,data_e8f46
		je     jump_13c3e
	jump_13c3b:
		xor    %eax,%eax
		ret
	jump_13c3e:
		mov    $0x1,%eax
		ret


/*----------------------------------------------------------------*/
func_13cbd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		xor    %ecx,%ecx
		mov    data_ba842,%ebx
		mov    %ax,%cx
		sar    $0x10,%ebx
		cmp    %ebx,%ecx
		jge    jump_13ce4
		xor    %ecx,%ecx
		mov    data_ba83e,%esi
		mov    %dx,%cx
		sar    $0x10,%esi
		cmp    %esi,%ecx
		jl     jump_13ced
	jump_13ce4:
		mov    $0xffffff80,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_13ced:
		movswl %dx,%edx
		imul   %edx,%ebx
		cwtl
		add    %ebx,%eax
		mov    data_e8f48(,%eax,2),%ax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13d02:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		xor    %edi,%edi
		sub    $0x2,%ebx
		mov    %bx,%di
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		lea    -0x4(%ebx),%esi
		cmp    %esi,%edi
		jge    jump_13d4f
		mov    %edx,%esi
		sub    $0x4,%esi
		mov    data_ba83e,%edi
		sar    $0x10,%edi
		and    $0xffff,%esi
		sub    $0x8,%edi
		cmp    %edi,%esi
		jge    jump_13d4f
		movswl %dx,%edx
		imul   %edx,%ebx
		movswl %ax,%edx
		add    %edx,%ebx
		mov    %cx,data_e8f48(,%ebx,2)
	jump_13d4f:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_13d53:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    (%eax),%si
		cmp    $0x2,%si
		jge    jump_13d6b
		sub    $0x2,%esi
		add    %si,(%ebx)
		movw   $0x2,(%eax)
		jmp    jump_13d95
	jump_13d6b:
		movswl %si,%edi
		movswl (%ebx),%esi
		add    %esi,%edi
		mov    data_ba842,%esi
		sar    $0x10,%esi
		sub    $0x2,%esi
		cmp    %esi,%edi
		jle    jump_13d95
		mov    data_ba844,%si
		mov    (%eax),%ax
		sub    $0x2,%esi
		sub    %eax,%esi
		mov    %si,(%ebx)
	jump_13d95:
		mov    (%edx),%ax
		cmp    $0x2,%ax
		jge    jump_13dac
		sub    $0x2,%eax
		add    %ax,(%ecx)
		movw   $0x2,(%edx)
		pop    %edi
		pop    %esi
		ret
	jump_13dac:
		movswl %ax,%ebx
		movswl (%ecx),%eax
		add    %eax,%ebx
		mov    data_ba83e,%eax
		sar    $0x10,%eax
		sub    $0x2,%eax
		cmp    %eax,%ebx
		jle    jump_13dd5
		mov    data_ba840,%bx
		mov    (%edx),%ax
		sub    $0x2,%ebx
		sub    %eax,%ebx
		mov    %bx,(%ecx)
	jump_13dd5:
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_13f08:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0x10,%esp
		mov    0x18(%esp),%esi
		mov    %ax,0x4(%esp)
		mov    %dx,0x8(%esp)
		mov    %ebx,0xc(%esp)
		mov    %ecx,(%esp)
		mov    %esp,%ecx
		lea    0xc(%esp),%ebx
		lea    0x8(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_13d53
		mov    0x6(%esp),%eax
		mov    data_ba842,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    0x2(%esp),%ebx
		sar    $0x10,%ebx
		add    %eax,%ebx
		add    %ebx,%ebx
		xor    %ecx,%ecx
		add    $data_e8f48,%ebx
		jmp    jump_13f7d
	jump_13f5c:
		mov    %ebx,%eax
		xor    %edx,%edx
		jmp    jump_13f69
	jump_13f62:
		inc    %edx
		mov    %si,(%eax)
		add    $0x2,%eax
	jump_13f69:
		cmp    0xc(%esp),%dx
		jl     jump_13f62
		mov    data_ba842,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		inc    %ecx
		add    %eax,%ebx
	jump_13f7d:
		cmp    (%esp),%cx
		jl     jump_13f5c
		add    $0x10,%esp
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_13f8a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_ba844,%bx
		imul   data_ba840,%bx
		mov    $data_e8f48,%eax
		xor    %edx,%edx
		jmp    jump_13fad
	jump_13fa4:
		inc    %edx
		movw   $0xffff,(%eax)
		add    $0x2,%eax
	jump_13fad:
		cmp    %bx,%dx
		jl     jump_13fa4
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13fb5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   $0xffffffff
		mov    $0x2,%ecx
		mov    data_ba842,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x10,%ebx
		call   func_13f08
		push   $0xffffffff
		mov    $0x2,%ecx
		mov    data_ba840,%ax
		mov    data_ba842,%ebx
		sub    $0x2,%eax
		sar    $0x10,%ebx
		movswl %ax,%edx
		xor    %eax,%eax
		call   func_13f08
		push   $0xffffffff
		mov    $0x2,%ebx
		mov    data_ba83e,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x10,%ecx
		call   func_13f08
		push   $0xffffffff
		mov    $0x2,%ebx
		mov    data_ba83e,%ecx
		mov    data_ba844,%ax
		xor    %edx,%edx
		sub    $0x2,%eax
		sar    $0x10,%ecx
		cwtl
		call   func_13f08
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_14032:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    data_ba844,%si
		imul   data_ba840,%si
		mov    $data_cc998,%ebx
		mov    $data_e8f48,%edx
		mov    $data_e65b0,%eax
		mov    %esi,0x10(%esp)
		xor    %edi,%edi
		mov    0x10(%esp),%esi
		jmp    jump_14074
	jump_14067:
		inc    %edi
		movw   $0xffff,(%edx)
		add    $0x2,%edx
		movb   $0xff,(%eax)
		inc    %eax
	jump_14074:
		cmp    %si,%di
		jl     jump_14067
		movsbw 0xe(%ebp),%ax
		cmp    $0x3,%ax
		jb     jump_14091
		jbe    jump_140af
		cmp    $0x4,%ax
		je     jump_140cc
		jmp    jump_14194
	jump_14091:
		cmp    $0x1,%ax
		jb     jump_14194
		mov    $0x3,%eax
		mov    $0x4,%edx
		mov    %eax,0x4(%esp)
		mov    %edx,0x8(%esp)
		jmp    jump_140e3
	jump_140af:
		mov    $0x1,%ecx
		mov    $0x2,%esi
		mov    $0x4,%edi
		mov    %ecx,0x4(%esp)
		mov    %esi,0x8(%esp)
		mov    %edi,0xc(%esp)
		jmp    jump_140e7
	jump_140cc:
		mov    $0x1,%edi
		mov    $0x2,%eax
		mov    $0x3,%edx
		mov    %edi,0x4(%esp)
		mov    %eax,0x8(%esp)
	jump_140e3:
		mov    %edx,0xc(%esp)
	jump_140e7:
		mov    $data_e8f48,%eax
		mov    $data_e65b0,%edx
		xor    %edi,%edi
		jmp    jump_14184
	jump_140f8:
		mov    (%ebx),%ecx
		test   %ecx,%ecx
		je     jump_1417c
		movsbw 0xe(%ecx),%si
		cmp    0x4(%esp),%si
		je     jump_1411c
		cmp    0x8(%esp),%si
		je     jump_1411c
		cmp    0xc(%esp),%si
		jne    jump_1417c
	jump_1411c:
		mov    data_ba842,%ebp
		sar    $0x10,%ebp
		mov    %eax,%ecx
		mov    %ebp,(%esp)
		add    %ebp,%ebp
		sub    %ebp,%ecx
		movswl (%ecx),%ebp
		cmp    $0xffffffff,%ebp
		jne    jump_14141
		mov    (%esp),%ecx
		mov    %edx,%ebp
		sub    %ecx,%ebp
		movb   $0xf9,0x0(%ebp)
	jump_14141:
		movswl -0x2(%eax),%ebp
		cmp    $0xffffffff,%ebp
		jne    jump_1414e
		movb   $0xf9,-0x1(%edx)
	jump_1414e:
		mov    (%eax),%ebp
		sar    $0x10,%ebp
		cmp    $0xffffffff,%ebp
		jne    jump_1415c
		movb   $0xf9,0x1(%edx)
	jump_1415c:
		mov    data_ba842,%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebp
		movswl (%eax,%ebp,2),%ebp
		cmp    $0xffffffff,%ebp
		jne    jump_14176
		mov    %ecx,%ebp
		movb   $0xf9,(%edx,%ebp,1)
	jump_14176:
		inc    %esi
		neg    %esi
		mov    %si,(%eax)
	jump_1417c:
		add    $0x4,%ebx
		add    $0x2,%eax
		inc    %edx
		inc    %edi
	jump_14184:
		cmp    0x10(%esp),%di
		jl     jump_140f8
	jump_1418f:
		call   func_13fb5
	jump_14194:
		add    $0x14,%esp
		jmp    jump_15957


/*----------------------------------------------------------------*/
func_1419c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    data_ba844,%cx
		imul   data_ba840,%cx
		mov    $data_cc998,%ebx
		mov    $data_e8f48,%edx
		mov    $data_e65b0,%eax
		mov    %ecx,0x4(%esp)
		xor    %esi,%esi
		mov    0x4(%esp),%ecx
		jmp    jump_141de
	jump_141d1:
		inc    %esi
		movw   $0xffff,(%edx)
		add    $0x2,%edx
		movb   $0xff,(%eax)
		inc    %eax
	jump_141de:
		cmp    %cx,%si
		jl     jump_141d1
		movsbw 0xe(%edi),%ax
		cmp    $0x3,%ax
		jb     jump_141f8
		jbe    jump_14211
		cmp    $0x4,%ax
		je     jump_1422d
		jmp    jump_14194
	jump_141f8:
		cmp    $0x1,%ax
		jb     jump_14194
		mov    $0x3,%edi
		mov    $0x4,%eax
		mov    %edi,0xc(%esp)
		mov    %eax,(%esp)
		jmp    jump_14243
	jump_14211:
		mov    $0x1,%edx
		mov    $0x2,%ecx
		mov    $0x4,%esi
		mov    %edx,0xc(%esp)
		mov    %ecx,(%esp)
		mov    %esi,0x10(%esp)
		jmp    jump_14247
	jump_1422d:
		mov    $0x1,%esi
		mov    $0x2,%edi
		mov    $0x3,%eax
		mov    %esi,0xc(%esp)
		mov    %edi,(%esp)
	jump_14243:
		mov    %eax,0x10(%esp)
	jump_14247:
		mov    $data_e8f48,%edx
		xor    %ecx,%ecx
		mov    $data_e65b0,%eax
		jmp    jump_142e8
	jump_14258:
		mov    (%ebx),%ecx
		test   %ecx,%ecx
		je     jump_142dc
		mov    0xc(%esp),%edi
		movsbw 0xe(%ecx),%si
		cmp    %di,%si
		je     jump_1427d
		cmp    (%esp),%si
		je     jump_1427d
		cmp    0x10(%esp),%si
		jne    jump_142dc
	jump_1427d:
		mov    data_ba842,%edi
		sar    $0x10,%edi
		mov    %edx,%ebp
		lea    (%edi,%edi,1),%ecx
		sub    %ecx,%ebp
		movswl 0x0(%ebp),%ecx
		cmp    $0xffffffff,%ecx
		jne    jump_142a3
		mov    %eax,%ecx
		sub    %edi,%ecx
		mov    %ecx,%edi
		mov    (%ecx),%cl
		sub    $0x1e,%cl
		mov    %cl,(%edi)
	jump_142a3:
		movswl -0x2(%edx),%ecx
		cmp    $0xffffffff,%ecx
		jne    jump_142b0
		subb   $0x1e,-0x1(%eax)
	jump_142b0:
		mov    (%edx),%ecx
		sar    $0x10,%ecx
		cmp    $0xffffffff,%ecx
		jne    jump_142be
		subb   $0x1e,0x1(%eax)
	jump_142be:
		mov    data_ba842,%edi
		sar    $0x10,%edi
		mov    %edi,%ecx
		movswl (%edx,%ecx,2),%ecx
		cmp    $0xffffffff,%ecx
		jne    jump_142d6
		subb   $0x1e,(%edi,%eax,1)
	jump_142d6:
		inc    %esi
		neg    %esi
		mov    %si,(%edx)
	jump_142dc:
		mov    0x8(%esp),%ecx
		add    $0x4,%ebx
		add    $0x2,%edx
		inc    %ecx
		inc    %eax
	jump_142e8:
		mov    %ecx,0x8(%esp)
		mov    0x8(%esp),%ecx
		cmp    0x4(%esp),%cx
		jl     jump_14258
		jmp    jump_1418f


/*----------------------------------------------------------------*/
func_14300:
/*----------------------------------------------------------------*/
		mov    %ax,data_edd72
		ret


/*----------------------------------------------------------------*/
func_14307:
/*----------------------------------------------------------------*/
		mov    data_edd72,%ax
		ret


/*----------------------------------------------------------------*/
func_1430e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    0x1(%eax),%al
		mov    %al,0x1(%esp)
		mov    data_ba844,%dx
		movsbw 0x1(%esp),%si
		imul   %edx,%esi
		mov    0x60(%edi),%ebx
		mov    data_edd72,%ax
		sar    $0x18,%ebx
		mov    %ax,0x2(%esp)
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x61(%edi),%eax
		sar    $0x18,%eax
		add    %eax,%ebx
		mov    %ebx,%ecx
		shl    $0x2,%ecx
		sub    %ebx,%ecx
		shl    $0x2,%ecx
		add    %ebx,%ecx
		mov    0x5d(%edi),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		lea    (%eax,%ecx,1),%ebx
		xor    %ecx,%ecx
		movsbw (%edi),%ax
		mov    %ecx,0x4(%esp)
		add    %eax,%esi
		jmp    jump_143dd
	jump_1438d:
		mov    (%edi),%al
		xor    %edx,%edx
		mov    %al,(%esp)
		jmp    jump_143be
	jump_14396:
		movswl %si,%ecx
		movswl %dx,%eax
		add    %ecx,%eax
		mov    data_edd72,%cx
		inc    %edx
		mov    %cx,data_e8f48(,%eax,2)
		mov    (%esp),%cl
		mov    (%esp),%eax
		inc    %cl
		call   func_13ab1
		mov    %cl,(%esp)
	jump_143be:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    %ax,%dx
		jl     jump_14396
		decb   0x1(%esp)
		mov    0x4(%esp),%eax
		mov    data_ba844,%cx
		inc    %eax
		sub    %ecx,%esi
		mov    %eax,0x4(%esp)
	jump_143dd:
		xor    %eax,%eax
		mov    0x4(%esp),%edx
		mov    0x1(%ebx),%al
		cmp    %dx,%ax
		jg     jump_1438d
	jump_143eb:
		add    $0x8,%esp
		jmp    jump_15958


/*----------------------------------------------------------------*/
func_143f3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x11(%edx),%al
		mov    $data_70b0d,%ebx
		movsbw data_70a68(%eax),%ax
		mov    %ebx,0x14(%esp)
		cmp    $0x5,%ax
		jne    jump_14422
		testb  $0x1,0x14(%edx)
		jne    jump_14422
		xor    %eax,%eax
	jump_14422:
		and    $0xffff,%eax
		mov    0x14(%esp),%ecx
		shl    $0x8,%eax
		add    %eax,%ecx
		mov    data_ba844,%ax
		mov    %ax,0x28(%esp)
		mov    data_ba840,%ax
		mov    %ax,0x2c(%esp)
		mov    0xe(%edx),%al
		mov    %ecx,0x14(%esp)
		cmp    $0x3,%al
		jb     jump_14460
		jbe    jump_1447c
		cmp    $0x4,%al
		jbe    jump_14499
		cmp    $0x9,%al
		je     jump_144b2
		jmp    jump_144d1
	jump_14460:
		cmp    $0x1,%al
		jb     jump_144d1
		mov    $0x3,%eax
		mov    $0x4,%ebx
		mov    %eax,0x30(%esp)
		mov    %ebx,0x20(%esp)
	jump_14476:
		mov    %ebx,0x1c(%esp)
		jmp    jump_144d1
	jump_1447c:
		mov    $0x1,%ecx
		mov    $0x2,%esi
		mov    $0x4,%edi
		mov    %ecx,0x30(%esp)
		mov    %esi,0x20(%esp)
		mov    %edi,0x1c(%esp)
		jmp    jump_144d1
	jump_14499:
		mov    $0x1,%edi
		mov    $0x2,%eax
		mov    $0x3,%ebx
		mov    %edi,0x30(%esp)
		mov    %eax,0x20(%esp)
		jmp    jump_14476
	jump_144b2:
		mov    $0x8,%ebx
		mov    $data_70b0d,%eax
		mov    %ebx,0x1c(%esp)
		mov    %ebx,0x20(%esp)
		add    $0x500,%eax
		mov    %ebx,0x30(%esp)
		mov    %eax,0x14(%esp)
	jump_144d1:
		mov    0x30(%esp),%eax
		inc    %eax
		neg    %eax
		mov    %eax,0x30(%esp)
		mov    0x20(%esp),%eax
		inc    %eax
		neg    %eax
		mov    %eax,0x20(%esp)
		mov    0x1c(%esp),%eax
		inc    %eax
		neg    %eax
		mov    %eax,0x1c(%esp)
		call   func_13b45
		mov    %edx,%eax
		call   func_1430e
	jump_144fe:
		call   func_13afa
		mov    %eax,(%esp)
		xor    %ah,%ah
		mov    0x28(%esp),%esi
		mov    0x1(%esp),%al
		imul   %esi,%eax
		xor    %dh,%dh
		mov    (%esp),%dl
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x2(%esp),%ecx
		mov    %ax,%bx
		mov    0x1(%esp),%al
		mov    $data_e65b0,%edx
		inc    %al
		lea    (%ebx,%ebx,1),%esi
		mov    %al,0x1(%esp)
		movzbl %al,%ebp
		mov    0x2a(%esp),%eax
		add    $data_e8f48,%esi
		sar    $0x10,%eax
		add    %ebx,%edx
		sub    $0x2,%eax
		add    $data_88bd4,%ebx
		cmp    %eax,%ebp
		jge    jump_145db
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x10(%esp)
		add    %eax,%eax
		add    %esi,%eax
		mov    (%eax),%di
		mov    %edi,0x18(%esp)
		cmp    0x30(%esp),%di
		je     jump_145db
		cmp    0x20(%esp),%di
		je     jump_145db
		cmp    0x1c(%esp),%di
		je     jump_145db
		mov    0x10(%esp),%ebp
		mov    0x14(%esp),%edi
		movzbl (%ebx,%ebp,1),%ebp
		add    %edi,%ebp
		movsbw 0x0(%ebp),%di
		test   %di,%di
		jle    jump_145db
		sub    %di,0x2(%esp)
		mov    0x18(%esp),%edi
		cmp    0x2(%esp),%di
		jge    jump_145db
		mov    (%esp),%ebp
		sar    $0x10,%ebp
		cmp    $0xffffffff,%ebp
		jle    jump_145db
		mov    0x2(%esp),%edi
		mov    %di,(%eax)
		test   %di,%di
		jle    jump_145db
		mov    0x10(%esp),%eax
		movsbl (%edx,%eax,1),%eax
		cmp    $0xffffffff,%eax
		jne    jump_145db
		mov    (%esp),%eax
		call   func_13ab1
	jump_145db:
		mov    0x26(%esp),%eax
		decb   0x1(%esp)
		incb   (%esp)
		sar    $0x10,%eax
		movzbl (%esp),%ebp
		sub    $0x2,%eax
		mov    %cx,0x2(%esp)
		cmp    %eax,%ebp
		jge    jump_1466f
		lea    0x2(%esi),%eax
		mov    0x30(%esp),%edi
		mov    %eax,0xc(%esp)
		mov    (%eax),%ax
		cmp    %di,%ax
		je     jump_1466f
		cmp    0x20(%esp),%ax
		je     jump_1466f
		cmp    0x1c(%esp),%ax
		je     jump_1466f
		mov    0x14(%esp),%edi
		movzbl 0x1(%ebx),%ebp
		add    %edi,%ebp
		movsbw 0x0(%ebp),%di
		mov    %edi,0x34(%esp)
		test   %di,%di
		jle    jump_1466f
		mov    %ecx,%edi
		sub    0x34(%esp),%edi
		mov    %di,0x2(%esp)
		cmp    %di,%ax
		jge    jump_1466f
		mov    (%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_1466f
		mov    0xc(%esp),%ebp
		mov    %di,0x0(%ebp)
		test   %di,%di
		jle    jump_1466f
		movsbl 0x1(%edx),%eax
		cmp    $0xffffffff,%eax
		jne    jump_1466f
		mov    (%esp),%eax
		call   func_13ab1
	jump_1466f:
		decb   (%esp)
		mov    0x1(%esp),%al
		dec    %al
		mov    %cx,0x2(%esp)
		mov    %al,0x1(%esp)
		cmp    $0x2,%al
		jb     jump_14721
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		mov    %esi,%ebp
		mov    %eax,0x4(%esp)
		add    %eax,%eax
		sub    %eax,%ebp
		mov    0x30(%esp),%edi
		mov    0x0(%ebp),%ax
		mov    %ebp,0x8(%esp)
		cmp    %di,%ax
		je     jump_14721
		cmp    0x20(%esp),%ax
		je     jump_14721
		cmp    0x1c(%esp),%ax
		je     jump_14721
		mov    0x4(%esp),%edi
		mov    %ebx,%ebp
		sub    %edi,%ebp
		mov    0x14(%esp),%edi
		movzbl 0x0(%ebp),%ebp
		add    %edi,%ebp
		movsbw 0x0(%ebp),%di
		mov    %edi,0x24(%esp)
		test   %di,%di
		jle    jump_14721
		mov    %ecx,%edi
		sub    0x24(%esp),%edi
		mov    %di,0x2(%esp)
		cmp    %di,%ax
		jge    jump_14721
		mov    (%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_14721
		mov    0x8(%esp),%ebp
		mov    %di,0x0(%ebp)
		test   %di,%di
		jle    jump_14721
		mov    0x4(%esp),%ebp
		mov    %edx,%eax
		sub    %ebp,%eax
		movsbl (%eax),%eax
		cmp    $0xffffffff,%eax
		jne    jump_14721
		mov    (%esp),%eax
		call   func_13ab1
	jump_14721:
		mov    (%esp),%al
		dec    %al
		mov    %al,(%esp)
		mov    0x1(%esp),%ah
		inc    %ah
		mov    %cx,0x2(%esp)
		mov    %ah,0x1(%esp)
		cmp    $0x2,%al
		jb     jump_147a5
		sub    $0x2,%esi
		mov    0x30(%esp),%edi
		mov    (%esi),%ax
		cmp    %di,%ax
		je     jump_147a5
		cmp    0x20(%esp),%ax
		je     jump_147a5
		cmp    0x1c(%esp),%ax
		je     jump_147a5
		mov    -0x1(%ebx),%bl
		mov    0x14(%esp),%edi
		and    $0xff,%ebx
		add    %edi,%ebx
		movsbw (%ebx),%bx
		test   %bx,%bx
		jle    jump_147a5
		sub    %ebx,%ecx
		mov    %cx,0x2(%esp)
		cmp    %cx,%ax
		jge    jump_147a5
		mov    (%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_147a5
		mov    %cx,(%esi)
		test   %cx,%cx
		jle    jump_147a5
		movsbl -0x1(%edx),%eax
		cmp    $0xffffffff,%eax
		jne    jump_147a5
		mov    (%esp),%eax
		call   func_13ab1
	jump_147a5:
		call   func_13b37
		test   %ax,%ax
		je     jump_144fe
		add    $0x38,%esp
		jmp    jump_15957


/*----------------------------------------------------------------*/
func_147bb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,%edx
		mov    0x1(%edx),%dl
		mov    %dl,0x9(%esp)
		mov    data_edd72,%dx
		mov    %dx,0xa(%esp)
		movsbw 0x9(%esp),%dx
		cmp    %bx,%dx
		jg     jump_14830
		mov    %ebp,%edx
		movsbw (%edx),%dx
		cmp    %ax,%dx
		jl     jump_14803
		xor    %edx,%edx
		mov    $0x1,%ebx
		mov    %dx,(%esp)
		mov    %bx,0x2(%esp)
		jmp    jump_14813
	jump_14803:
		mov    $0x1,%edi
		xor    %eax,%eax
		mov    %di,(%esp)
		mov    %ax,0x2(%esp)
	jump_14813:
		mov    0x2(%esp),%eax
		add    $0x2,%eax
		mov    %ax,0x4(%esp)
		mov    (%esp),%eax
		add    $0x2,%eax
		mov    %ax,0x6(%esp)
		jmp    jump_1487a
	jump_14830:
		mov    %ebp,%edx
		movsbw (%edx),%dx
		cmp    %ax,%dx
		jl     jump_1484e
		xor    %ecx,%ecx
		mov    $0x1,%esi
		mov    %cx,0x4(%esp)
		mov    %si,0x6(%esp)
		jmp    jump_1485f
	jump_1484e:
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %dx,0x4(%esp)
		mov    %bx,0x6(%esp)
	jump_1485f:
		mov    0x6(%esp),%eax
		add    $0x2,%eax
		mov    %ax,(%esp)
		mov    0x4(%esp),%eax
		add    $0x2,%eax
		mov    %ax,0x2(%esp)
	jump_1487a:
		mov    0x60(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x61(%ebp),%eax
		sar    $0x18,%eax
		add    %eax,%edx
		mov    %edx,%esi
		shl    $0x2,%esi
		sub    %edx,%esi
		shl    $0x2,%esi
		add    %edx,%esi
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		mov    data_ba844,%cx
		add    %eax,%esi
		movsbw 0x1(%ebp),%ax
		imul   %ecx,%eax
		movsbw 0x0(%ebp),%di
		xor    %ecx,%ecx
		add    %eax,%edi
		mov    %ecx,0xc(%esp)
		jmp    jump_14946
	jump_148dc:
		mov    0x0(%ebp),%al
		xor    %ebx,%ebx
		mov    %al,0x8(%esp)
		jmp    jump_1491d
	jump_148e7:
		movswl %di,%edx
		movswl %bx,%eax
		add    %edx,%eax
		mov    data_edd72,%dx
		mov    %dx,data_e8f48(,%eax,2)
		movswl %cx,%eax
		mov    -0x2(%esp,%eax,2),%eax
		mov    0x8(%esp),%edx
		sar    $0x10,%eax
		call   func_13b51
		mov    0x8(%esp),%dl
		inc    %ebx
		inc    %dl
		inc    %ecx
		mov    %dl,0x8(%esp)
	jump_1491d:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    %ax,%bx
		jl     jump_148e7
		mov    $0x2,%ecx
		mov    0x9(%esp),%ah
		mov    0xc(%esp),%edx
		dec    %ah
		inc    %edx
		mov    %ah,0x9(%esp)
		mov    data_ba844,%ax
		mov    %edx,0xc(%esp)
		sub    %eax,%edi
	jump_14946:
		xor    %eax,%eax
		mov    0xc(%esp),%edx
		mov    0x1(%esi),%al
		cmp    %dx,%ax
		jg     jump_148dc
		mov    $0x2,%ebx
		jmp    jump_1498f
	jump_1495b:
		movswl %bx,%edx
		lea    (%edx,%edx,1),%eax
		cmpw   $0x0,data_e8f40(%eax)
		jle    jump_1498e
		imul   $0x280,%edx,%edx
		xor    %esi,%esi
		mov    %si,data_e8f40(%eax)
		mov    data_e5bb0(%edx),%edx
		mov    $0x3,%eax
		mov    %edx,0x8(%esp)
		call   func_13b51
	jump_1498e:
		dec    %ebx
	jump_1498f:
		test   %bx,%bx
		jle    jump_1495b
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1499c:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		mov    %eax,%edi
		mov    %dx,0x2c(%esp)
		mov    %bx,0x4c(%esp)
		xor    %eax,%eax
		mov    0x11(%edi),%al
		mov    $data_70b0d,%edx
		movsbw data_70a68(%eax),%ax
		mov    %edx,0x10(%esp)
		cmp    $0x5,%ax
		jne    jump_149d3
		testb  $0x1,0x14(%edi)
		jne    jump_149d3
		xor    %eax,%eax
	jump_149d3:
		and    $0xffff,%eax
		mov    0x10(%esp),%ebx
		shl    $0x8,%eax
		add    %eax,%ebx
		mov    data_ba844,%ax
		mov    %ax,0x38(%esp)
		mov    data_ba840,%ax
		mov    %ax,0x20(%esp)
		mov    0xe(%edi),%al
		mov    %ebx,0x10(%esp)
		cmp    $0x3,%al
		jb     jump_14a11
		jbe    jump_14a2d
		cmp    $0x4,%al
		jbe    jump_14a4a
		cmp    $0x9,%al
		je     jump_14a63
		jmp    jump_14a82
	jump_14a11:
		cmp    $0x1,%al
		jb     jump_14a82
		mov    $0x3,%eax
		mov    $0x4,%edx
		mov    %eax,0x1c(%esp)
		mov    %edx,0x40(%esp)
	jump_14a27:
		mov    %edx,0x3c(%esp)
		jmp    jump_14a82
	jump_14a2d:
		mov    $0x1,%ebx
		mov    $0x2,%ecx
		mov    $0x4,%esi
		mov    %ebx,0x1c(%esp)
		mov    %ecx,0x40(%esp)
		mov    %esi,0x3c(%esp)
		jmp    jump_14a82
	jump_14a4a:
		mov    $0x1,%esi
		mov    $0x2,%eax
		mov    $0x3,%edx
		mov    %esi,0x1c(%esp)
		mov    %eax,0x40(%esp)
		jmp    jump_14a27
	jump_14a63:
		mov    $0x8,%edx
		mov    $data_70b0d,%eax
		mov    %edx,0x3c(%esp)
		mov    %edx,0x40(%esp)
		add    $0x500,%eax
		mov    %edx,0x1c(%esp)
		mov    %eax,0x10(%esp)
	jump_14a82:
		mov    0x1c(%esp),%eax
		inc    %eax
		neg    %eax
		mov    %eax,0x1c(%esp)
		mov    0x40(%esp),%eax
		inc    %eax
		mov    0x4a(%esp),%ebx
		neg    %eax
		mov    0x2a(%esp),%edx
		mov    %eax,0x40(%esp)
		mov    0x3c(%esp),%eax
		xor    %ecx,%ecx
		inc    %eax
		sar    $0x10,%ebx
		neg    %eax
		sar    $0x10,%edx
		mov    %eax,0x3c(%esp)
		call   func_13bf8
		mov    %edi,%eax
		mov    %ecx,0x34(%esp)
		call   func_147bb
	jump_14ac3:
		call   func_13c13
		test   %ax,%ax
		jne    jump_14f46
		call   func_13b9a
		mov    0x4a(%esp),%edx
		mov    %eax,0x8(%esp)
		mov    0x2a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_14b05
		mov    $0x1,%edx
		call   func_13bf8
		mov    %edx,0x34(%esp)
		jmp    jump_14f46
	jump_14b05:
		xor    %ah,%ah
		mov    0x38(%esp),%esi
		mov    0x9(%esp),%al
		imul   %esi,%eax
		xor    %dh,%dh
		mov    0x8(%esp),%dl
		xor    %edi,%edi
		add    %edx,%eax
		mov    %ax,%di
		mov    $data_e8f48,%edx
		lea    (%edi,%edi,1),%eax
		add    %eax,%edx
		mov    $data_e65b0,%eax
		add    %edi,%eax
		mov    %edx,(%esp)
		mov    %eax,0x4(%esp)
		xor    %eax,%eax
		mov    0x4c(%esp),%edx
		mov    0x9(%esp),%al
		add    $data_88bd4,%edi
		cmp    %dx,%ax
		jge    jump_14b90
		xor    %eax,%eax
		mov    0x2c(%esp),%ebx
		mov    0x8(%esp),%al
		cmp    %bx,%ax
		jge    jump_14b6b
		mov    $0x1,%ebx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %ebx,%ecx
		jmp    jump_14bf6
	jump_14b6b:
		jle    jump_14b7d
		mov    $0x1,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %esi,%ebx
		jmp    jump_14bf6
	jump_14b7d:
		mov    $0x1,%esi
		mov    $0x2,%ebx
		xor    %eax,%eax
	jump_14b89:
		mov    %esi,%ecx
		jmp    jump_14bf6
	jump_14b90:
		jle    jump_14bcb
		xor    %eax,%eax
		mov    0x2c(%esp),%esi
		mov    0x8(%esp),%al
		cmp    %si,%ax
		jge    jump_14bae
		mov    $0x1,%ecx
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %ecx,%eax
		jmp    jump_14bf6
	jump_14bae:
		jle    jump_14bbd
		mov    $0x1,%esi
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		jmp    jump_14bf6
	jump_14bbd:
		mov    $0x1,%esi
		mov    $0x2,%eax
		xor    %ebx,%ebx
		jmp    jump_14b89
	jump_14bcb:
		xor    %eax,%eax
		mov    0x2c(%esp),%ecx
		mov    0x8(%esp),%al
		cmp    %cx,%ax
		jge    jump_14be8
		mov    $0x1,%ebx
		mov    $0x2,%ecx
		xor    %esi,%esi
		jmp    jump_14bf4
	jump_14be8:
		mov    $0x1,%ebx
		mov    $0x2,%esi
		xor    %ecx,%ecx
	jump_14bf4:
		mov    %ebx,%eax
	jump_14bf6:
		mov    0xa(%esp),%edx
		mov    0x1e(%esp),%ebp
		mov    %edx,0x30(%esp)
		mov    0x9(%esp),%dh
		sar    $0x10,%ebp
		inc    %dh
		mov    %dh,0x9(%esp)
		xor    %edx,%edx
		sub    $0x2,%ebp
		mov    0x9(%esp),%dl
		cmp    %ebp,%edx
		jge    jump_14ccc
		mov    0x36(%esp),%edx
		sar    $0x10,%edx
		mov    (%esp),%ebp
		mov    %edx,0xc(%esp)
		add    %edx,%edx
		add    %edx,%ebp
		mov    0x0(%ebp),%dx
		mov    %ebp,0x18(%esp)
		mov    %edx,0x28(%esp)
		cmp    0x1c(%esp),%dx
		je     jump_14ccc
		cmp    0x40(%esp),%dx
		je     jump_14ccc
		cmp    0x3c(%esp),%dx
		je     jump_14ccc
		mov    0xc(%esp),%edx
		mov    (%edx,%edi,1),%dl
		mov    0x10(%esp),%ebp
		and    $0xff,%edx
		movsbw (%edx,%ebp,1),%dx
		test   %dx,%dx
		jle    jump_14ccc
		mov    0x4(%esp),%ebp
		sub    %dx,0xa(%esp)
		add    0xc(%esp),%ebp
		movsbl 0x0(%ebp),%edx
		cmp    $0xffffffff,%edx
		je     jump_14c9a
		movsbw 0x0(%ebp),%dx
		add    %dx,0xa(%esp)
	jump_14c9a:
		mov    0x28(%esp),%edx
		cmp    0xa(%esp),%dx
		jge    jump_14ccc
		mov    0x8(%esp),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jle    jump_14ccc
		mov    0x18(%esp),%ebp
		mov    0xa(%esp),%edx
		mov    %dx,0x0(%ebp)
		test   %dx,%dx
		jle    jump_14ccc
		mov    0x8(%esp),%edx
		cwtl
		call   func_13b51
	jump_14ccc:
		mov    0x30(%esp),%eax
		mov    %ax,0xa(%esp)
		decb   0x9(%esp)
		mov    0x8(%esp),%ah
		dec    %ah
		mov    %ah,0x8(%esp)
		cmp    $0x2,%ah
		jb     jump_14d96
		mov    (%esp),%ebp
		sub    $0x2,%ebp
		mov    0x0(%ebp),%ax
		mov    0x1c(%esp),%edx
		mov    %eax,0x24(%esp)
		cmp    %dx,%ax
		je     jump_14d96
		cmp    0x40(%esp),%ax
		je     jump_14d96
		cmp    0x3c(%esp),%ax
		je     jump_14d96
		xor    %eax,%eax
		mov    0x10(%esp),%edx
		mov    -0x1(%edi),%al
		add    %edx,%eax
		movsbw (%eax),%ax
		mov    %eax,0x48(%esp)
		test   %ax,%ax
		jle    jump_14d96
		mov    0x30(%esp),%eax
		mov    0x48(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0xa(%esp)
		mov    0x36(%esp),%eax
		mov    0x4(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		movsbl (%eax),%edx
		cmp    $0xffffffff,%edx
		je     jump_14d68
		mov    0xa(%esp),%edx
		movsbw (%eax),%ax
		add    %eax,%edx
		mov    %dx,0xa(%esp)
	jump_14d68:
		mov    0x24(%esp),%eax
		mov    0xa(%esp),%edx
		cmp    %dx,%ax
		jge    jump_14d96
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_14d96
		mov    %dx,0x0(%ebp)
		test   %dx,%dx
		jle    jump_14d96
		mov    0x8(%esp),%edx
		movswl %cx,%eax
		call   func_13b51
	jump_14d96:
		mov    0x30(%esp),%eax
		mov    0x8(%esp),%dh
		mov    0x9(%esp),%cl
		mov    %ax,0xa(%esp)
		inc    %dh
		dec    %cl
		mov    %dh,0x8(%esp)
		mov    %cl,0x9(%esp)
		cmp    $0x2,%cl
		jb     jump_14e72
		mov    0x36(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x14(%esp)
		lea    (%eax,%eax,1),%ebp
		mov    (%esp),%eax
		sub    %ebp,%eax
		mov    0x1c(%esp),%edx
		mov    %eax,%ebp
		mov    (%eax),%ax
		cmp    %dx,%ax
		je     jump_14e72
		cmp    0x40(%esp),%ax
		je     jump_14e72
		cmp    0x3c(%esp),%ax
		je     jump_14e72
		mov    0x14(%esp),%ecx
		mov    %edi,%edx
		sub    %ecx,%edx
		mov    (%edx),%dl
		mov    0x10(%esp),%ecx
		and    $0xff,%edx
		add    %ecx,%edx
		movsbw (%edx),%dx
		mov    %edx,0x44(%esp)
		test   %dx,%dx
		jle    jump_14e72
		mov    0x30(%esp),%edx
		sub    0x44(%esp),%edx
		mov    0x14(%esp),%ecx
		mov    %dx,0xa(%esp)
		mov    0x4(%esp),%edx
		add    %ecx,%edx
		movsbl (%edx),%ecx
		cmp    $0xffffffff,%ecx
		je     jump_14e48
		mov    0xa(%esp),%ecx
		movsbw (%edx),%dx
		add    %edx,%ecx
		mov    %cx,0xa(%esp)
	jump_14e48:
		mov    0xa(%esp),%edx
		cmp    %dx,%ax
		jge    jump_14e72
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_14e72
		mov    %dx,0x0(%ebp)
		test   %dx,%dx
		jle    jump_14e72
		mov    0x8(%esp),%edx
		movswl %bx,%eax
		call   func_13b51
	jump_14e72:
		mov    0x30(%esp),%eax
		mov    %ax,0xa(%esp)
		mov    0x9(%esp),%al
		inc    %al
		mov    0x36(%esp),%ebp
		mov    %al,0x9(%esp)
		mov    0x8(%esp),%ah
		xor    %edx,%edx
		inc    %ah
		sar    $0x10,%ebp
		mov    %ah,0x8(%esp)
		mov    %ah,%dl
		lea    -0x2(%ebp),%eax
		cmp    %eax,%edx
		jge    jump_14ac3
		mov    (%esp),%edx
		add    $0x2,%edx
		mov    0x1c(%esp),%ebx
		mov    (%edx),%ax
		cmp    %bx,%ax
		je     jump_14ac3
		cmp    0x40(%esp),%ax
		je     jump_14ac3
		cmp    0x3c(%esp),%ax
		je     jump_14ac3
		mov    0x10(%esp),%ebx
		movzbl 0x1(%edi),%edi
		add    %ebx,%edi
		movsbw (%edi),%bx
		test   %bx,%bx
		jle    jump_14ac3
		mov    0x4(%esp),%edi
		mov    0x30(%esp),%ecx
		add    %ebp,%edi
		sub    %ebx,%ecx
		movsbl (%edi),%ebp
		mov    %cx,0xa(%esp)
		cmp    $0xffffffff,%ebp
		je     jump_14f0c
		movsbw (%edi),%bx
		add    %ebx,%ecx
		mov    %cx,0xa(%esp)
	jump_14f0c:
		mov    0xa(%esp),%edi
		cmp    %di,%ax
		jge    jump_14ac3
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_14ac3
		mov    %di,(%edx)
		test   %di,%di
		jle    jump_14ac3
		mov    0x8(%esp),%edx
		movswl %si,%eax
		call   func_13b51
		jmp    jump_14ac3
	jump_14f46:
		mov    0x34(%esp),%eax
		add    $0x50,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_14f52:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%eax
		mov    %esi,%edi
		sub    %eax,%edi
		sub    %esi,%ebx
		cmp    %cx,%dx
		jge    jump_14f89
		sub    %edx,%ecx
		cmp    %ax,%si
		jge    jump_14f77
		cmp    %bx,%cx
		jge    jump_14f84
	jump_14f6f:
		mov    $0x3,%eax
		pop    %edi
		pop    %esi
		ret
	jump_14f77:
		cmp    %di,%cx
		jge    jump_14f84
	jump_14f7c:
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		ret
	jump_14f84:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret
	jump_14f89:
		sub    %ecx,%edx
		cmp    %ax,%si
		jge    jump_14f97
		cmp    %bx,%dx
		jge    jump_14f9c
		jmp    jump_14f6f
	jump_14f97:
		cmp    %di,%dx
		jl     jump_14f7c
	jump_14f9c:
		mov    $0x2,%eax
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_14fa4:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%esi
		mov    %dx,0x2c(%esp)
		mov    %bx,0x18(%esp)
		mov    %esi,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		xor    %edx,%edx
		jmp    jump_14fda
	jump_14fc8:
		movswl %dx,%eax
		mov    data_e8cc0(,%eax,4),%ebx
		inc    %edx
		mov    %ebx,data_e5e30(,%eax,4)
	jump_14fda:
		mov    data_edd80,%bx
		cmp    %bx,%dx
		jl     jump_14fc8
		movswl %cx,%eax
		mov    %bx,data_e8f42
		call   func_14300
		mov    %esi,%eax
		call   func_14032
		mov    %esi,%eax
		call   func_143f3
	jump_15003:
		mov    data_e8f42,%cx
		test   %cx,%cx
		je     jump_1504c
		mov    %ecx,%edi
		dec    %edi
		mov    %di,data_e8f42
		mov    data_e8f40,%eax
		sar    $0x10,%eax
		mov    data_e5e30(,%eax,4),%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x1(%esp),%dl
		mov    (%esp),%al
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1504c
		mov    (%esp),%edx
		xor    %eax,%eax
		call   func_13b51
		jmp    jump_15003
	jump_1504c:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,data_e8f42
		call   func_13b9a
		mov    %dx,0x20(%esp)
		mov    %eax,(%esp)
		jmp    jump_15089
	jump_15065:
		mov    0x1e(%esp),%ebx
		mov    %esi,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x1(%esp),%dl
		mov    (%esp),%al
		sar    $0x10,%ebx
		call   func_165c2
		cmp    $0x1,%ax
		je     jump_15091
		incw   0x20(%esp)
	jump_15089:
		cmpw   $0x2,0x20(%esp)
		jl     jump_15065
	jump_15091:
		cmpw   $0x2,0x20(%esp)
		jne    jump_15240
		mov    $0xffffffff,%eax
		mov    $0x3,%ebx
		xor    %edx,%edx
		mov    %ax,0x24(%esp)
		xor    %eax,%eax
		mov    0x1(%esp),%dl
		mov    (%esp),%al
		call   func_1ac08
		xor    %edx,%edx
		mov    %edx,0x10(%esp)
	jump_150c2:
		lea    0x4(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_15139
		mov    0x10(%esp),%eax
		cmp    0x24(%esp),%ax
		jle    jump_1512e
		xor    %edi,%edi
		jmp    jump_15102
	jump_150e3:
		mov    0x2(%esp),%edx
		mov    0x1a(%esp),%eax
		movswl %di,%ebx
		mov    %esi,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		je     jump_15108
		inc    %edi
	jump_15102:
		cmp    $0x2,%di
		jl     jump_150e3
	jump_15108:
		cmp    $0x2,%di
		je     jump_1512e
		mov    0x1c(%esp),%eax
		mov    %ax,0xc(%esp)
		mov    0x4(%esp),%eax
		mov    %ax,0x28(%esp)
		mov    0x10(%esp),%eax
		mov    %di,0x20(%esp)
		mov    %ax,0x24(%esp)
	jump_1512e:
		call   func_1ad2e
		mov    %eax,0x10(%esp)
		jmp    jump_150c2
	jump_15139:
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		je     jump_151e0
		mov    0x26(%esp),%ebp
		mov    0xa(%esp),%edi
		mov    0x16(%esp),%ecx
		mov    %esi,%ebx
		sar    $0x10,%ebp
		sar    $0x10,%edi
		mov    %ebp,%edx
		mov    %edi,%eax
		sar    $0x10,%ecx
		call   func_15523
		mov    0x2a(%esp),%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
		sar    $0x10,%ebx
		call   func_14f52
		mov    %ax,0x14(%esp)
		mov    %esi,%ecx
		mov    %ebp,%edx
		mov    0x12(%esp),%ebx
		mov    %edi,%eax
		sar    $0x10,%ebx
		call   func_165c2
		test   %ax,%ax
		jne    jump_151d2
		testb  $0x1,0x20(%esp)
		jne    jump_151b7
		mov    0x28(%esp),%eax
		cmp    0x18(%esp),%ax
		jle    jump_15329
		movw   $0x2,0x20(%esp)
		jmp    jump_15329
	jump_151b7:
		mov    0xc(%esp),%eax
		cmp    0x2c(%esp),%ax
		jge    jump_15329
		movw   $0x3,0x20(%esp)
		jmp    jump_15329
	jump_151d2:
		mov    0x14(%esp),%eax
		mov    %ax,0x20(%esp)
		jmp    jump_15329
	jump_151e0:
		mov    $0x2,%edi
	jump_151e5:
		call   func_13c13
		test   %ax,%ax
		jne    jump_1524a
		call   func_13b9a
		xor    %ebx,%ebx
		mov    %eax,(%esp)
		mov    %bx,0x20(%esp)
		jmp    jump_15230
	jump_15200:
		mov    0x1e(%esp),%ebx
		mov    %esi,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x1(%esp),%dl
		mov    (%esp),%al
		sar    $0x10,%ebx
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_1522b
		mov    (%esp),%edx
		xor    %eax,%eax
		call   func_13b51
		jmp    jump_15237
	jump_1522b:
		incw   0x20(%esp)
	jump_15230:
		cmp    0x20(%esp),%di
		jg     jump_15200
	jump_15237:
		cmp    0x20(%esp),%di
		jne    jump_1524a
		jmp    jump_151e5
	jump_15240:
		mov    (%esp),%edx
		xor    %eax,%eax
		call   func_13b51
	jump_1524a:
		cmpw   $0x0,data_e8f40
		jne    jump_1526c
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    $0xffffffff,%eax
		jmp    jump_1533b
	jump_1526c:
		call   func_13b9a
		mov    0x16(%esp),%ecx
		mov    0x2a(%esp),%ebx
		mov    %eax,(%esp)
		mov    %eax,%edx
		movzbl 0x1(%esp),%ebp
		xor    %eax,%eax
		movzbl (%esp),%edi
		call   func_13b51
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
		call   func_14f52
		mov    %ax,0x8(%esp)
		mov    %esi,%ecx
		mov    %ebp,%edx
		mov    0x6(%esp),%ebx
		mov    %edi,%eax
		sar    $0x10,%ebx
		call   func_165c2
		test   %ax,%ax
		jne    jump_152e7
		testb  $0x1,0x20(%esp)
		jne    jump_152d4
		mov    0x1(%esp),%al
		cmp    0x18(%esp),%ax
		jle    jump_152f0
		movw   $0x2,0x20(%esp)
		jmp    jump_152f0
	jump_152d4:
		mov    (%esp),%al
		cmp    0x2c(%esp),%ax
		jge    jump_152f0
		movw   $0x3,0x20(%esp)
		jmp    jump_152f0
	jump_152e7:
		mov    0x8(%esp),%eax
		mov    %ax,0x20(%esp)
	jump_152f0:
		mov    data_e8f40,%ax
		mov    %ax,data_edd80
		mov    data_edd80,%cx
		xor    %eax,%eax
		jmp    jump_15324
	jump_15307:
		mov    data_edd7e,%ebx
		movswl %ax,%edx
		sar    $0x10,%ebx
		sub    %edx,%ebx
		mov    data_e5bac(,%ebx,4),%ebx
		inc    %eax
		mov    %ebx,data_e8cc0(,%edx,4)
	jump_15324:
		cmp    %cx,%ax
		jl     jump_15307
	jump_15329:
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    0x20(%esp),%eax
	jump_1533b:
		add    $0x30,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_15342:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		movsbl (%eax),%edx
		movswl 0x0(%ebp),%eax
		sub    %eax,%edx
		sar    %edx
		add    %edx,%eax
		mov    (%esp),%edx
		mov    %ax,0x8(%esp)
		movsbl 0x1(%edx),%edx
		movswl (%ebx),%eax
		sub    %eax,%edx
		sar    %edx
		add    %edx,%eax
		mov    $0x7fff,%edx
		mov    %ax,0xc(%esp)
		mov    (%esp),%eax
		mov    %edx,0x10(%esp)
		movswl (%ebx),%ebx
		movswl 0x0(%ebp),%edx
		call   func_49adf
		cwtl
		sar    %eax
		add    $0x7,%eax
		mov    0xa(%esp),%edx
		movswl %ax,%ebx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_153ab:
		lea    0xc(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_15456
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%esi
		test   %ax,%ax
		jl     jump_153ab
		mov    0x4(%esp),%ecx
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		movswl 0x0(%ebp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl (%ecx),%ecx
		mov    %esi,%edi
		call   func_49b01
		shl    $0x2,%eax
		mov    0x10(%esp),%ebx
		add    %eax,%edi
		cmp    %bx,%di
		jge    jump_153ab
		xor    %esi,%esi
		jmp    jump_1542d
	jump_1540d:
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		mov    (%esp),%ecx
		movswl %si,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		je     jump_15433
		inc    %esi
	jump_1542d:
		cmp    $0x2,%si
		jl     jump_1540d
	jump_15433:
		cmp    $0x2,%si
		je     jump_153ab
		mov    0x8(%esp),%eax
		mov    %eax,0x18(%esp)
		mov    0xc(%esp),%eax
		mov    %edi,0x10(%esp)
		mov    %eax,0x14(%esp)
		jmp    jump_153ab
	jump_15456:
		mov    0x18(%esp),%eax
		mov    0x4(%esp),%edx
		mov    %ax,0x0(%ebp)
		mov    0x14(%esp),%eax
		mov    0x10(%esp),%ecx
		mov    %ax,(%edx)
		cmp    $0x7fff,%cx
		setne  %al
		xor    %ah,%ah
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1547f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    data_ba83c,%eax
		mov    data_ba842,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_ba83a,%esi
		sar    $0x10,%esi
		mov    data_ba836,%edx
		add    %eax,%esi
		mov    data_7001a,%eax
		sar    $0x10,%edx
		add    %esi,%esi
		sar    $0x10,%eax
		add    $0x4,%edx
		add    $0x4,%eax
		add    $data_e8f48,%esi
		call   func_5eb00
		mov    %eax,%edi
		mov    $0x1,%eax
		xor    %edx,%edx
		call   func_6104a
		mov    %edx,(%esp)
	jump_154db:
		mov    %esi,%ebx
		mov    %edi,%edx
		xor    %ecx,%ecx
	jump_154e1:
		cmpw   $0x0,(%ebx)
		jl     jump_154ee
		mov    %edx,%eax
		call   func_10130
	jump_154ee:
		add    $0x2,%ebx
		inc    %ecx
		add    $0x18,%edx
		cmp    $0xd,%cx
		jl     jump_154e1
		mov    (%esp),%ebx
		mov    data_ba842,%edx
		add    $0x1e00,%edi
		sar    $0x10,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %ebx,(%esp)
		add    %edx,%esi
		cmp    $0xd,%bx
		jl     jump_154db
		add    $0x4,%esp
		jmp    jump_15958


/*----------------------------------------------------------------*/
func_15523:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%ecx
		mov    %dx,0x18(%esp)
		mov    %ebx,0x10(%esp)
		movsbw (%ebx),%ax
		cmp    %ax,%cx
		jne    jump_1557d
		movsbw 0x1(%ebx),%ax
		cmp    %dx,%ax
		jne    jump_1557d
		mov    (%ebx),%al
		mov    %al,0x14(%esp)
		mov    0x1(%ebx),%al
		mov    $0xffffffff,%esi
		mov    %al,0x15(%esp)
		movsbw 0x63(%ebx),%ax
		mov    %si,0x16(%esp)
		mov    %ax,data_edd76
		mov    0x14(%esp),%eax
		mov    $0x2,%edx
		call   func_13ab1
		jmp    jump_158a2
	jump_1557d:
		mov    0x16(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		call   func_11db2
		cmp    0x10(%esp),%eax
		je     jump_1559d
		test   %eax,%eax
		je     jump_1559d
	jump_15596:
		xor    %edx,%edx
		jmp    jump_158a2
	jump_1559d:
		xor    %eax,%eax
		mov    data_ba844,%al
		mov    %ax,0x24(%esp)
		xor    %eax,%eax
		mov    data_ba840,%al
		mov    0x16(%esp),%edx
		mov    %eax,0x28(%esp)
		xor    %eax,%eax
		sar    $0x10,%edx
		mov    data_ba844,%al
		imul   %edx,%eax
		mov    0x10(%esp),%ebx
		movswl %cx,%edx
		mov    $data_e8f48,%ebp
		add    %edx,%eax
		movsbw (%ebx),%bx
		add    %eax,%eax
		mov    $0x1,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		cmp    %bx,%cx
		jne    jump_155eb
		mov    %edx,%eax
		xor    %edx,%edx
	jump_155eb:
		cwtl
		add    %eax,%eax
		mov    $0x1,%ebx
		mov    %bx,0x4(%esp,%eax,1)
		mov    %bx,(%esp,%eax,1)
		mov    0x10(%esp),%ebx
		movsbw (%ebx),%bx
		cmp    %bx,%cx
		jle    jump_15611
		movw   $0xffff,(%esp,%eax,1)
		jmp    jump_15618
	jump_15611:
		movw   $0xffff,0x4(%esp,%eax,1)
	jump_15618:
		movswl %dx,%eax
		add    %eax,%eax
		mov    0x24(%esp),%edx
		mov    %dx,0x4(%esp,%eax,1)
		mov    %dx,(%esp,%eax,1)
		mov    0x10(%esp),%edx
		mov    0x18(%esp),%ebx
		movsbw 0x1(%edx),%dx
		cmp    %bx,%dx
		jge    jump_15648
		mov    0x24(%esp),%edx
		neg    %edx
		mov    %dx,(%esp,%eax,1)
		jmp    jump_15653
	jump_15648:
		mov    0x24(%esp),%edx
		neg    %edx
		mov    %dx,0x4(%esp,%eax,1)
	jump_15653:
		mov    0x18(%esp),%al
		mov    %cl,0x14(%esp)
		mov    $0x1,%ecx
		mov    %al,0x15(%esp)
		mov    %ecx,0x20(%esp)
	jump_15668:
		mov    data_edd72,%di
		mov    0x0(%ebp),%dx
		cmp    %di,%dx
		jne    jump_15705
		mov    0x10(%esp),%eax
		movsbw (%eax),%cx
		movsbw 0x1(%eax),%ax
		mov    %ax,0x18(%esp)
	jump_1568e:
		xor    %eax,%eax
		mov    0x14(%esp),%al
		cmp    %cx,%ax
		jne    jump_156ac
		xor    %ecx,%eax
		mov    0x18(%esp),%edx
		mov    0x15(%esp),%al
		cmp    %dx,%ax
		je     jump_1589d
	jump_156ac:
		mov    0x14(%esp),%eax
		call   func_13ab1
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_15596
		xor    %eax,%eax
		mov    0x14(%esp),%al
		cmp    %cx,%ax
		jle    jump_156d4
		mov    %al,%bh
		dec    %bh
		mov    %bh,0x14(%esp)
		jmp    jump_1568e
	jump_156d4:
		jge    jump_156e0
		mov    %al,%bl
		inc    %bl
		mov    %bl,0x14(%esp)
		jmp    jump_1568e
	jump_156e0:
		xor    %eax,%eax
		mov    0x18(%esp),%ebx
		mov    0x15(%esp),%al
		cmp    %bx,%ax
		jle    jump_156f9
		mov    %al,%dh
		dec    %dh
		mov    %dh,0x15(%esp)
		jmp    jump_1568e
	jump_156f9:
		jge    jump_1568e
		mov    %al,%dl
		inc    %dl
		mov    %dl,0x15(%esp)
		jmp    jump_1568e
	jump_15705:
		mov    0x14(%esp),%eax
		call   func_13ab1
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_15596
		xor    %ecx,%ecx
	jump_1571a:
		movswl %cx,%ebx
		mov    -0x2(%esp,%ebx,2),%eax
		sar    $0x10,%eax
		mov    0x0(%ebp,%eax,2),%ax
		sub    %edx,%eax
		inc    %ecx
		mov    %ax,0x8(%esp,%ebx,2)
		cmp    $0x4,%cx
		jl     jump_1571a
		xor    %eax,%eax
		xor    %esi,%esi
		mov    %eax,0x1c(%esp)
		mov    %ax,0x2c(%esp)
	jump_15744:
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    0x1c(%esp),%eax
		cmp    0x8(%esp,%ecx,1),%ax
		jge    jump_157ca
		mov    -0x2(%esp,%ecx,1),%ebx
		mov    0x22(%esp),%edi
		sar    $0x10,%ebx
		sar    $0x10,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		test   %edx,%edx
		je     jump_1578d
		xor    %ebx,%ebx
		mov    (%esp,%ecx,1),%di
		mov    0x14(%esp),%bl
		add    %edi,%ebx
		test   %bx,%bx
		jl     jump_157ac
		cmp    0x24(%esp),%bx
		jl     jump_157b1
		jmp    jump_157ac
	jump_1578d:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		xor    %edx,%edx
		mov    0x15(%esp),%dl
		add    %edx,%eax
		mov    %eax,%ebx
		test   %ax,%ax
		jl     jump_157ac
		cmp    0x28(%esp),%ax
		jl     jump_157b1
	jump_157ac:
		mov    $0xffffffff,%ebx
	jump_157b1:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     jump_157ca
		movswl %si,%eax
		mov    0x8(%esp,%eax,2),%ax
		mov    %si,0x2c(%esp)
		mov    %eax,0x1c(%esp)
	jump_157ca:
		inc    %esi
		cmp    $0x4,%si
		jl     jump_15744
		cmpw   $0x3,0x2c(%esp)
		jle    jump_157e4
		movw   $0x3,0x2c(%esp)
	jump_157e4:
		mov    0x2a(%esp),%ecx
		sar    $0x10,%ecx
		add    %ecx,%ecx
		mov    -0x2(%esp,%ecx,1),%ebx
		sar    $0x10,%ebx
		mov    0x22(%esp),%edi
		lea    (%ebx,%ebx,1),%eax
		sar    $0x10,%edi
		mov    %ebx,%edx
		add    %eax,%ebp
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		test   %edx,%edx
		je     jump_15816
		mov    (%esp,%ecx,1),%al
		add    %al,0x14(%esp)
		jmp    jump_1582d
	jump_15816:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x15(%esp),%al
		add    %edx,%eax
		mov    %al,0x15(%esp)
	jump_1582d:
		cmpw   $0x0,0x20(%esp)
		je     jump_15668
		mov    0x2a(%esp),%ebx
		sar    $0x10,%ebx
		add    %ebx,%ebx
		mov    -0x2(%esp,%ebx,1),%edx
		mov    0x22(%esp),%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     jump_15878
		cmpw   $0x0,(%esp,%ebx,1)
		jle    jump_1586d
		movw   $0x1,data_edd76
		jmp    jump_15892
	jump_1586d:
		movw   $0x3,data_edd76
		jmp    jump_15892
	jump_15878:
		cmpw   $0x0,(%esp,%ebx,1)
		jle    jump_1588a
		movw   $0x2,data_edd76
		jmp    jump_15892
	jump_1588a:
		xor    %eax,%eax
		mov    %ax,data_edd76
	jump_15892:
		xor    %eax,%eax
		mov    %eax,0x20(%esp)
		jmp    jump_15668
	jump_1589d:
		mov    $0x1,%edx
	jump_158a2:
		mov    %edx,%eax
		add    $0x30,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_158ac:
/*----------------------------------------------------------------*/
		mov    %ax,data_edd76
		ret
	jump_15954:
		add    $0x4,%esp
	jump_15957:
		pop    %ebp
	jump_15958:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1595e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    %eax,%edx
		call   func_5f839
		mov    data_ba838,%ax
		add    $0x8,%eax
		test   %dx,%dx
		jne    jump_15a52
		mov    data_ba83c,%esi
		mov    data_ba842,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %esi,%edx
		mov    data_ba83a,%esi
		sar    $0x10,%esi
		mov    %ax,0x28(%esp)
		add    %esi,%edx
		mov    $data_e8f48,%esi
		add    %edx,%edx
		xor    %ecx,%ecx
		add    %edx,%esi
		mov    %ecx,0x24(%esp)
		mov    %esi,0x10(%esp)
	jump_159ba:
		mov    0x10(%esp),%esi
		mov    data_7001c,%di
		xor    %eax,%eax
		add    $0xc,%edi
		mov    %ax,0x1c(%esp)
	jump_159cf:
		mov    0x1c(%esp),%al
		and    $0x1,%al
		add    $0x10,%al
		mov    $0xa,%ebx
		mov    %esp,%edx
		and    $0xff,%eax
		mov    $0x1,%ecx
		push   %eax
		movswl (%esi),%eax
		movswl %di,%ebp
		call   func_itoa_
		mov    0x2a(%esp),%edx
		mov    %eax,%ebx
		sar    $0x10,%edx
		mov    %ebp,%eax
		call   func_608e6
		mov    0x1c(%esp),%edx
		add    $0x18,%edi
		inc    %edx
		add    $0x2,%esi
		mov    %dx,0x1c(%esp)
		cmp    $0xd,%dx
		jl     jump_159cf
		mov    0x28(%esp),%ecx
		mov    0x10(%esp),%ebx
		mov    data_ba842,%eax
		mov    0x24(%esp),%esi
		sar    $0x10,%eax
		add    $0x10,%ecx
		inc    %esi
		add    %eax,%eax
		mov    %cx,0x28(%esp)
		add    %eax,%ebx
		mov    %esi,0x24(%esp)
		mov    %ebx,0x10(%esp)
		cmp    $0xc,%si
		jge    jump_15be4
		jmp    jump_159ba
	jump_15a52:
		cmp    $0x1,%dx
		jne    jump_15b26
		mov    data_ba83c,%esi
		mov    data_ba842,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %esi,%edx
		mov    data_ba83a,%esi
		sar    $0x10,%esi
		mov    %ax,0x30(%esp)
		add    %esi,%edx
		mov    $data_e65b0,%esi
		xor    %ebx,%ebx
		add    %edx,%esi
		mov    %ebx,0x20(%esp)
		mov    %esi,0xc(%esp)
	jump_15a92:
		mov    0xc(%esp),%esi
		mov    data_7001c,%di
		xor    %eax,%eax
		add    $0xc,%edi
		mov    %ax,0x1c(%esp)
	jump_15aa7:
		mov    0x1c(%esp),%al
		and    $0x1,%al
		add    $0x10,%al
		mov    $0xa,%ebx
		mov    %esp,%edx
		and    $0xff,%eax
		mov    $0x1,%ecx
		push   %eax
		movsbl (%esi),%eax
		movswl %di,%ebp
		call   func_itoa_
		mov    0x32(%esp),%edx
		mov    %eax,%ebx
		sar    $0x10,%edx
		mov    %ebp,%eax
		call   func_608e6
		mov    0x1c(%esp),%edx
		add    $0x18,%edi
		inc    %edx
		inc    %esi
		mov    %dx,0x1c(%esp)
		cmp    $0xd,%dx
		jl     jump_15aa7
		mov    0x30(%esp),%edx
		mov    0x20(%esp),%ebx
		mov    data_ba842,%eax
		add    $0x10,%edx
		sar    $0x10,%eax
		mov    %dx,0x30(%esp)
		mov    0xc(%esp),%edx
		inc    %ebx
		add    %eax,%edx
		mov    %ebx,0x20(%esp)
		mov    %edx,0xc(%esp)
		cmp    $0xc,%bx
		jge    jump_15be4
		jmp    jump_15a92
	jump_15b26:
		mov    data_ba83e,%dx
		mov    %dx,0x2c(%esp)
		xor    %edx,%edx
		mov    %ax,0x14(%esp)
		mov    %edx,0x18(%esp)
	jump_15b3d:
		mov    data_7001c,%si
		mov    data_ba83c,%di
		xor    %ebx,%ebx
		add    $0xc,%esi
		mov    %bx,0x1c(%esp)
	jump_15b55:
		mov    0x2a(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_11db2
		test   %eax,%eax
		je     jump_15ba7
		mov    0x1c(%esp),%dl
		and    $0x1,%dl
		add    $0x10,%dl
		and    $0xff,%edx
		mov    0xf(%eax),%al
		push   %edx
		mov    $0xa,%ebx
		lea    0x4(%esp),%edx
		and    $0xff,%eax
		mov    $0x1,%ecx
		call   func_itoa_
		movswl %si,%ebp
		mov    0x16(%esp),%edx
		mov    %eax,%ebx
		sar    $0x10,%edx
		mov    %ebp,%eax
		call   func_608e6
	jump_15ba7:
		mov    0x1c(%esp),%ecx
		inc    %edi
		inc    %ecx
		add    $0x18,%esi
		mov    %cx,0x1c(%esp)
		cmp    $0xd,%cx
		jl     jump_15b55
		mov    0x14(%esp),%esi
		mov    0x2c(%esp),%edi
		mov    0x18(%esp),%eax
		add    $0x10,%esi
		inc    %edi
		inc    %eax
		mov    %si,0x14(%esp)
		mov    %di,0x2c(%esp)
		mov    %eax,0x18(%esp)
		cmp    $0xc,%ax
		jl     jump_15b3d
	jump_15be4:
		call   func_5f804
		call   w_dos_getch
		mov    $0x1,%eax
		add    $0x34,%esp
		jmp    jump_15957


/*----------------------------------------------------------------*/
func_15bfb:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
	jump_15bfe:
		inc    %edx
		call   func_45559
		cmp    $0x2,%dx
		jl     jump_15bfe
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_15c13:
/*----------------------------------------------------------------*/
		mov    %ax,data_edd78
		mov    %dx,data_edd7a
		movswl %bx,%eax
		mov    $data_7110d,%edx
		shl    $0x2,%eax
		add    %eax,%edx
		mov    %edx,data_edd68
		ret

vtable_15c35:
		.long   func_15d58
		.long   func_15dcc
		.long   func_15ce4
		.long   func_15e3f


/*----------------------------------------------------------------*/
func_15c45:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		cmpb   $0x6,data_ba84e
		je     jump_15c5f
		mov    %al,0x63(%edx)
		jmp    jump_15ca0
	jump_15c5f:
		cmp    $0x1,%al
		je     jump_15c67
		cmp    $0x3,%al
		jne    jump_15ca0
	jump_15c67:
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1093d
		xor    %edx,%edx
		mov    %al,%dl
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		cmp    $0x10,%edx
		jge    jump_15c90
		mov    (%esp),%al
		mov    %al,0x63(%ebx)
		jmp    jump_15ca0
	jump_15c90:
		cmpb   $0x1,(%esp)
		jne    jump_15c9c
		movb   $0x0,0x63(%ebx)
		jmp    jump_15ca0
	jump_15c9c:
		movb   $0x2,0x63(%ebx)
	jump_15ca0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		xor    %eax,%eax
		mov    data_71115,%ax
		mov    data_edd70,%si
		call   func_1033b
		mov    (%esp),%al
		xor    %ecx,%ecx
		cmp    $0x3,%al
		ja     jump_15ead
		xor    %eax,%eax
		mov    (%esp),%al
		jmp    *vtable_15c35(,%eax,4)


/*----------------------------------------------------------------*/
func_15ce4:
/*----------------------------------------------------------------*/
		mov    $0x4,%edi
	jump_15ce9:
		subb   $0x4,0x66(%ebx)
		cmpw   $0x0,data_edd70
		je     jump_15d03
		mov    $0x4,%eax
		call   func_10da7
		mov    %eax,%esi
	jump_15d03:
		test   %si,%si
		jne    jump_15d0d
		call   func_15bfb
	jump_15d0d:
		call   func_499e4
		mov    data_edd7a,%dx
		add    $0x4,%ecx
		cmp    %dx,%cx
		jl     jump_15d4c
		mov    data_edd7f,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %dl,data_edd82
		mov    data_edd7f,%edx
		mov    data_edd68,%eax
		sar    $0x18,%edx
		mov    (%edx,%eax,1),%dl
		mov    %dl,0x64(%ebx)
	jump_15d4c:
		cmp    $0x8,%cx
		jge    jump_15ead
		jmp    jump_15ce9


/*----------------------------------------------------------------*/
func_15d58:
/*----------------------------------------------------------------*/
		addb   $0x4,0x66(%ebx)
		cmpw   $0x0,data_edd70
		je     jump_15d72
		mov    $0x4,%eax
		call   func_10e2f
		mov    %eax,%esi
	jump_15d72:
		test   %si,%si
		jne    jump_15d7c
		call   func_15bfb
	jump_15d7c:
		call   func_499e4
		mov    data_edd7a,%di
		add    $0x4,%ecx
		cmp    %di,%cx
		jl     jump_15dc0
		mov    data_edd7f,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x4,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %dl,data_edd82
		mov    data_edd7f,%edx
		mov    data_edd68,%eax
		sar    $0x18,%edx
		mov    (%edx,%eax,1),%al
		mov    %al,0x64(%ebx)
	jump_15dc0:
		cmp    $0x8,%cx
		jge    jump_15ead
		jmp    func_15d58


/*----------------------------------------------------------------*/
func_15dcc:
/*----------------------------------------------------------------*/
		subb   $0x4,0x65(%ebx)
		cmpw   $0x0,data_edd70
		je     jump_15de6
		mov    $0x4,%eax
		call   func_10ed1
		mov    %eax,%esi
	jump_15de6:
		test   %si,%si
		jne    jump_15df0
		call   func_15bfb
	jump_15df0:
		call   func_499e4
		mov    data_edd78,%ax
		add    $0x4,%ecx
		cmp    %ax,%cx
		jl     jump_15e33
		mov    data_edd7f,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x4,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %dl,data_edd82
		mov    data_edd7f,%edx
		mov    data_edd68,%eax
		sar    $0x18,%edx
		mov    (%edx,%eax,1),%al
		mov    %al,0x64(%ebx)
	jump_15e33:
		cmp    $0xc,%cx
		jge    jump_15ead
		jmp    func_15dcc


/*----------------------------------------------------------------*/
func_15e3f:
/*----------------------------------------------------------------*/
		addb   $0x4,0x65(%ebx)
		cmpw   $0x0,data_edd70
		je     jump_15e59
		mov    $0x4,%eax
		call   func_10f5c
		mov    %eax,%esi
	jump_15e59:
		test   %si,%si
		jne    jump_15e63
		call   func_15bfb
	jump_15e63:
		call   func_499e4
		mov    data_edd78,%di
		add    $0x4,%ecx
		cmp    %di,%cx
		jl     jump_15ea7
		mov    data_edd7f,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x4,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %dl,data_edd82
		mov    data_edd7f,%eax
		mov    data_edd68,%edx
		sar    $0x18,%eax
		mov    (%edx,%eax,1),%dl
		mov    %dl,0x64(%ebx)
	jump_15ea7:
		cmp    $0xc,%cx
		jl     func_15e3f
	jump_15ead:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_15eb5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    data_ba83a,%eax
		movsbl (%edx),%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		cmp    $0x6,%edx
		je     jump_15ee0
		mov    data_ba83c,%eax
		movsbl 0x1(%ecx),%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		cmp    $0x6,%edx
		jne    jump_15eeb
	jump_15ee0:
		movw   $0x1,data_edd70
		jmp    jump_15ef4
	jump_15eeb:
		xor    %edx,%edx
		mov    %dx,data_edd70
	jump_15ef4:
		xor    %edx,%edx
		movsbl 0x1(%ecx),%eax
		mov    %bh,%dl
		cmp    %edx,%eax
		jle    jump_15f84
		movsbl (%ecx),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   func_11db2
		mov    %eax,%ebx
		cmp    %ecx,%eax
		je     jump_15f1a
		movb   $0x1,0x6b(%eax)
	jump_15f1a:
		mov    $0x2,%eax
		mov    %ecx,%edx
		call   func_15c45
		cmp    %ecx,%ebx
		je     jump_15f39
		mov    %ecx,%edx
		mov    %ebx,%eax
		movb   $0x0,0x6b(%ebx)
		call   func_114d4
		jmp    jump_15f47
	jump_15f39:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %ecx,%ebx
		call   func_11f74
	jump_15f47:
		decb   0x1(%ecx)
		movsbl (%ecx),%eax
		movsbl 0x1(%ecx),%edx
		movb   $0x8,0x66(%ecx)
		call   func_11db2
		test   %eax,%eax
		je     jump_15f67
		mov    %ecx,%edx
		call   func_114c3
		jmp    jump_15f75
	jump_15f67:
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
	jump_15f75:
		mov    $0x2,%eax
		mov    %ecx,%edx
	jump_15f7c:
		call   func_15c45
		pop    %ecx
		pop    %ebx
		ret
	jump_15f84:
		jge    jump_16001
		movsbl (%ecx),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   func_11db2
		mov    %eax,%ebx
		cmp    %ecx,%eax
		je     jump_15fa0
		movb   $0x0,0x6b(%eax)
	jump_15fa0:
		mov    %ecx,%edx
		xor    %eax,%eax
		call   func_15c45
		cmp    %ecx,%ebx
		je     jump_15fb8
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_114d4
		jmp    jump_15fc6
	jump_15fb8:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %ecx,%ebx
		call   func_11f74
	jump_15fc6:
		incb   0x1(%ecx)
		movsbl (%ecx),%eax
		movsbl 0x1(%ecx),%edx
		movb   $0xf8,0x66(%ecx)
		call   func_11db2
		test   %eax,%eax
		je     jump_15fea
		mov    %ecx,%edx
		movb   $0x1,0x6b(%eax)
		call   func_114c3
		jmp    jump_15ff8
	jump_15fea:
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
	jump_15ff8:
		mov    %ecx,%edx
		xor    %eax,%eax
		jmp    jump_15f7c
	jump_16001:
		xor    %edx,%edx
		movsbl (%ecx),%eax
		mov    %bl,%dl
		cmp    %edx,%eax
		jle    jump_16093
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		movb   $0x1,0x6b(%ecx)
		call   func_11db2
		mov    %eax,%ebx
		cmp    %ecx,%eax
		je     jump_1602a
		movb   $0x0,0x6b(%eax)
	jump_1602a:
		mov    $0x1,%eax
		mov    %ecx,%edx
		call   func_15c45
		cmp    %ecx,%ebx
		je     jump_16045
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_114d4
		jmp    jump_16053
	jump_16045:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %ecx,%ebx
		call   func_11f74
	jump_16053:
		decb   (%ecx)
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		movb   $0xc,0x65(%ecx)
		call   func_11db2
		test   %eax,%eax
		je     jump_16072
		mov    %ecx,%edx
		call   func_114c3
		jmp    jump_16080
	jump_16072:
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
	jump_16080:
		mov    $0x1,%eax
	jump_16085:
		mov    %ecx,%edx
		call   func_15c45
		movb   $0x0,0x6b(%ecx)
		pop    %ecx
		pop    %ebx
		ret
	jump_16093:
		jge    jump_16113
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		movb   $0x1,0x6b(%ecx)
		call   func_11db2
		mov    %eax,%ebx
		cmp    %ecx,%eax
		je     jump_160b3
		movb   $0x0,0x6b(%eax)
	jump_160b3:
		mov    $0x3,%eax
		mov    %ecx,%edx
		call   func_15c45
		cmp    %ecx,%ebx
		je     jump_160ce
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_114d4
		jmp    jump_160dc
	jump_160ce:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %ecx,%ebx
		call   func_11f74
	jump_160dc:
		incb   (%ecx)
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		movb   $0xf4,0x65(%ecx)
		call   func_11db2
		test   %eax,%eax
		je     jump_160fb
		mov    %ecx,%edx
		call   func_114c3
		jmp    jump_16109
	jump_160fb:
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
	jump_16109:
		mov    $0x3,%eax
		jmp    jump_16085
	jump_16113:
		push   $data_76e5a
		call   w_printf
		add    $0x4,%esp
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16123:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    0x11(%ebx),%cl
		cmp    $0x4c,%cl
		je     jump_16131
		cmp    $0x4d,%cl
		jne    jump_1613c
	jump_16131:
		movw   $0xffff,data_edd7e
		pop    %ecx
		ret
	jump_1613c:
		mov    data_ba84e,%cl
		cmp    $0x4,%cl
		jne    jump_16152
		movw   $0x4,data_edd7e
		pop    %ecx
		ret
	jump_16152:
		cmp    $0x6,%cl
		jne    jump_16162
		movw   $0x6,data_edd7e
		pop    %ecx
		ret
	jump_16162:
		mov    0x5c(%ebx),%cl
		cmp    $0x7,%cl
		jb     jump_1616f
		cmp    $0xc,%cl
		jbe    jump_16175
	jump_1616f:
		cmpb   $0x17,0x5c(%ebx)
		jne    jump_16180
	jump_16175:
		movw   $0x8,data_edd7e
		pop    %ecx
		ret
	jump_16180:
		testb  $0x1,0x14(%ebx)
		je     jump_16191
		movw   $0x7,data_edd7e
		pop    %ecx
		ret
	jump_16191:
		movswl %dx,%edx
		cwtl
		call   func_1093d
		cmp    $0x64,%al
		jge    jump_161a8
		xor    %eax,%eax
		mov    %ax,data_edd7e
		jmp    jump_161ea
	jump_161a8:
		sub    $0x64,%al
		and    $0xf,%al
		cmp    $0xb,%al
		jne    jump_161bb
		movw   $0x1,data_edd7e
		jmp    jump_161ea
	jump_161bb:
		cmp    $0x1,%al
		je     jump_161c3
		cmp    $0x4,%al
		jne    jump_161ce
	jump_161c3:
		movw   $0x2,data_edd7e
		jmp    jump_161ea
	jump_161ce:
		cmp    $0x2,%al
		je     jump_161d6
		cmp    $0x3,%al
		jne    jump_161e1
	jump_161d6:
		movw   $0x3,data_edd7e
		jmp    jump_161ea
	jump_161e1:
		xor    %edx,%edx
		mov    %dx,data_edd7e
	jump_161ea:
		cmpw   $0x0,data_edd7e
		jne    jump_16208
		mov    0x5c(%ebx),%al
		cmp    $0x1,%al
		jb     jump_16208
		cmp    $0x4,%al
		ja     jump_16208
		movw   $0x5,data_edd7e
	jump_16208:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1620a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %dx,0x4(%esp)
		call   func_5d351
		mov    0x5c(%ecx),%ah
		cmp    $0xf,%ah
		jb     jump_16253
		cmp    $0x1f,%ah
		ja     jump_16253
		mov    $0x10,%eax
		mov    $0x1,%ebx
		mov    $0x8,%edx
		call   func_1033b
		movb   $0x2,0x64(%ecx)
		call   func_45559
		call   func_499e4
		mov    $0xc,%eax
		jmp    jump_16263
	jump_16253:
		mov    $0x8,%edx
		mov    $0xc,%eax
		xor    %ebx,%ebx
		movb   $0x3,0x64(%ecx)
	jump_16263:
		call   func_15c13
		movb   $0x3,data_edd82
		movb   $0x0,0x66(%ecx)
		mov    0x66(%ecx),%al
		mov    %al,0x65(%ecx)
		mov    $0x4,%edx
		mov    data_7001e,%di
		mov    data_70020,%si
		mov    %dx,data_70020
		mov    %dx,data_7001e
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11ee4
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
	jump_162b6:
		call   func_13b37
		test   %ax,%ax
		jne    jump_162fb
		call   func_13afa
		mov    %eax,(%esp)
		mov    %ecx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x1(%esp),%dl
		mov    (%esp),%al
		call   func_16123
		mov    data_edd7c,%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jle    jump_162ef
		add    $0xb,%eax
		call   func_4f4cd
	jump_162ef:
		mov    (%esp),%eax
		mov    %ecx,%edx
		call   func_15eb5
		jmp    jump_162b6
	jump_162fb:
		mov    %si,data_70020
		mov    0x4(%esp),%esi
		mov    %di,data_7001e
		test   %si,%si
		jl     jump_16319
		mov    0x4(%esp),%al
		mov    %al,0x63(%ecx)
	jump_16319:
		cmpb   $0x0,0x5c(%ecx)
		je     jump_16345
		mov    $0x18,%eax
		call   func_1033b
		movb   $0x2,0x64(%ecx)
		call   func_45559
		call   func_499e4
		movb   $0x1,0x64(%ecx)
		call   func_45559
		call   func_499e4
	jump_16345:
		mov    $0x1,%eax
		call   func_49c05
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16357:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		push   %eax
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    -0x2(%esp),%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %dx,0x24(%esp)
		sar    $0x10,%eax
		mov    %dx,0x28(%esp)
		call   func_109a3
		mov    %ax,0xc(%esp)
		mov    %ax,0x18(%esp)
		movswl %si,%eax
		mov    0x25(%esp),%edx
		call   func_109ce
		sar    $0x18,%edx
		mov    %ax,0x10(%esp)
		mov    %ax,0x14(%esp)
		mov    %edi,%eax
		call   func_49e4e
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x8,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x18,%ebx
		call   func_49eee
		call   func_5e9e8
		push   $0x8
		mov    data_e5a90,%eax
		mov    %ebx,%edx
		call   func_5d3c5
		mov    (%esp),%eax
		add    $0x22,%eax
		movswl %ax,%edx
		mov    (%esp),%eax
		sub    $0xa,%eax
		cwtl
		call   mouse_set_horizontal_range
		mov    %esi,%eax
		add    $0x1a,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		sub    $0xa,%eax
		cwtl
		mov    $0x1,%ecx
		call   mouse_set_vertical_range
		mov    (%esp),%eax
		add    $0x8,%esi
		add    $0xc,%eax
		mov    %esi,0x20(%esp)
		mov    %eax,0x1c(%esp)
		mov    $0x1e,%eax
		mov    %cx,0x4(%esp)
		call   func_1033b
	jump_1642c:
		mov    0x4(%esp),%esi
		cmp    $0x1,%si
		je     jump_16440
		cmp    $0x6,%si
		jne    jump_1652b
	jump_16440:
		mov    0x1c(%esp),%esi
		sub    0x6(%esp),%esi
		mov    0x8(%esp),%eax
		test   %si,%si
		jge    jump_16453
		neg    %esi
	jump_16453:
		mov    0x20(%esp),%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    jump_16462
		neg    %eax
	jump_16462:
		cmp    %ax,%si
		jg     jump_16470
		cmpb   $0x6,data_ba84e
		jne    jump_1648d
	jump_16470:
		mov    0x6(%esp),%eax
		cmp    0x1c(%esp),%ax
		jle    jump_16484
		movw   $0x3,0x28(%esp)
		jmp    jump_164a8
	jump_16484:
		movw   $0x1,0x28(%esp)
		jmp    jump_164a8
	jump_1648d:
		mov    0x8(%esp),%eax
		cmp    0x20(%esp),%ax
		jle    jump_164a1
		xor    %esi,%esi
		mov    %si,0x28(%esp)
		jmp    jump_164a8
	jump_164a1:
		movw   $0x2,0x28(%esp)
	jump_164a8:
		cmpb   $0x5,data_ba84e
		jne    jump_164c9
		mov    0x11(%edi),%dh
		cmp    $0x7f,%dh
		je     jump_164c9
		cmp    $0x80,%dh
		je     jump_164c9
		mov    data_edd76,%ax
		mov    %ax,0x28(%esp)
	jump_164c9:
		push   $0x8
		mov    0x2a(%esp),%esi
		mov    0x26(%esp),%eax
		mov    $0x8,%ecx
		mov    $0x18,%ebx
		mov    0x1a(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%esi
		shl    $0x2,%eax
		mov    %ebx,%edx
		mov    data_e5a90(%eax,%esi,8),%eax
		sar    $0x10,%ebp
		call   func_5d3c5
		mov    0x12(%esp),%esi
		mov    %ebp,%eax
		sar    $0x10,%esi
		xor    %ecx,%ecx
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   func_4a210
		call   func_4a321
		mov    0x25(%esp),%edx
		mov    %edi,%eax
		sar    $0x18,%edx
		call   func_49e4e
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_49eee
	jump_1652b:
		call   func_5d41e
		call   func_5e9e8
	jump_16535:
#if 1
    /* If this does not exist, game is frozen when character moves. */
    push   %eax
    call   w_game_update
    pop    %eax
#endif
		call   func_10364
		test   %ax,%ax
		je     jump_16556
		mov    0x24(%esp),%eax
		inc    %eax
		xor    %ah,%ah
		and    $0x1,%al
		mov    %ax,0x24(%esp)
		movw   $0x1,0x4(%esp)
		jmp    jump_16567
	jump_16556:
		lea    0x4(%esp),%esi
		call   func_5d22e
		cmpw   $0x0,0x4(%esp)
		je     jump_16535
	jump_16567:
		call   func_5d570
		mov    0x4(%esp),%edx
		cmp    $0x2,%dx
		je     jump_16586
		cmp    $0x3,%dx
		je     jump_16586
		cmp    $0x7,%dx
		jne    jump_1642c
	jump_16586:
		mov    $0x1,%eax
		call   func_49c05
		call   func_4a210
		call   func_5e9e8
		call   func_4a321
		mov    0x4(%esp),%esi
		cmp    $0x2,%si
		je     jump_165af
		cmp    $0x6,%si
		jne    jump_165b5
	jump_165af:
		mov    0x28(%esp),%eax
		jmp    jump_165ba
	jump_165b5:
		mov    $0xffffffff,%eax
	jump_165ba:
		add    $0x2c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_165c2:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    0x5d(%ecx),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    $data_d66a8,%ebp
		shl    $0x2,%eax
		movswl %bx,%edx
		add    %eax,%ebp
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x1(%ebp),%al
		mov    %eax,0x4(%esp)
		jmp    jump_16647
	jump_16605:
		xor    %ecx,%ecx
		mov    (%esp),%ebx
		mov    0x0(%ebp),%cl
		jmp    jump_16638
	jump_1660f:
		movswl %si,%edx
		movswl %bx,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_16622
		cmp    %edi,%eax
		jne    jump_16632
	jump_16622:
		movswl %si,%edx
		movswl %bx,%eax
		call   func_13cbd
		test   %ax,%ax
		jge    jump_16636
	jump_16632:
		xor    %eax,%eax
		jmp    jump_16654
	jump_16636:
		inc    %ebx
		dec    %ecx
	jump_16638:
		test   %cx,%cx
		jg     jump_1660f
		mov    0x4(%esp),%ebx
		dec    %ebx
		dec    %esi
		mov    %ebx,0x4(%esp)
	jump_16647:
		cmpw   $0x0,0x4(%esp)
		jg     jump_16605
		mov    $0x1,%eax
	jump_16654:
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1665b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		movl   $data_70b0d,data_edd6c
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		movsbw data_70a68(%edx),%dx
		cmp    $0x5,%dx
		jne    jump_16682
		testb  $0x1,0x14(%eax)
		jne    jump_16682
		xor    %edx,%edx
	jump_16682:
		movswl %dx,%eax
		mov    data_edd6c,%ebx
		shl    $0x8,%eax
		add    %eax,%ebx
		mov    %ebx,data_edd6c
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16699:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x18,%esp
		push   %eax
		push   %edx
		mov    0x5d(%ecx),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x4,%eax
		sub    %ecx,%eax
		mov    $data_d66a8,%edx
		shl    $0x2,%eax
		movswl %bx,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x4,%eax
		sub    %ecx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x1(%edx),%al
		mov    %eax,0x18(%esp)
		mov    (%esp),%eax
		sub    $0x4,%eax
		mov    data_ba844,%bx
		mov    %eax,0x1c(%esp)
		mov    data_ba844,%ax
		mov    %edx,0x8(%esp)
		mov    %eax,0xc(%esp)
		mov    %eax,%edx
		mov    (%esp),%eax
		imul   %ebx,%eax
		mov    %eax,0x14(%esp)
		mov    0x4(%esp),%eax
		neg    %edx
		sub    $0x2,%eax
		mov    %edx,0xc(%esp)
		mov    %eax,0x10(%esp)
		jmp    jump_167b2
	jump_16717:
		mov    0x8(%esp),%eax
		mov    0x1c(%esp),%edi
		mov    0x4(%esp),%edx
		movzbw (%eax),%si
		mov    0x14(%esp),%eax
		mov    0x10(%esp),%ebx
		add    %eax,%edx
		jmp    jump_16786
	jump_16733:
		mov    data_ba842,%eax
		xor    %ecx,%ecx
		sar    $0x10,%eax
		mov    %bx,%cx
		sub    $0x4,%eax
		cmp    %eax,%ecx
		jge    jump_1675b
		mov    data_ba83e,%eax
		xor    %ecx,%ecx
		sar    $0x10,%eax
		mov    %di,%cx
		sub    $0x8,%eax
		cmp    %eax,%ecx
		jl     jump_1675f
	jump_1675b:
		xor    %eax,%eax
		jmp    jump_167c3
	jump_1675f:
		movswl %dx,%eax
		cmpl   $0x0,data_cc998(,%eax,4)
		jne    jump_1675b
		mov    data_88bd4(%eax),%al
		mov    data_edd6c,%ecx
		and    $0xff,%eax
		cmpb   $0x0,(%ecx,%eax,1)
		jle    jump_1675b
		inc    %ebx
		inc    %edx
		dec    %esi
	jump_16786:
		test   %si,%si
		jg     jump_16733
		mov    0x1c(%esp),%edx
		mov    0xc(%esp),%eax
		mov    0x14(%esp),%ebx
		mov    (%esp),%ecx
		mov    0x18(%esp),%esi
		dec    %edx
		dec    %ecx
		dec    %esi
		add    %eax,%ebx
		mov    %edx,0x1c(%esp)
		mov    %ebx,0x14(%esp)
		mov    %ecx,(%esp)
		mov    %esi,0x18(%esp)
	jump_167b2:
		cmpw   $0x0,0x18(%esp)
		jg     jump_16717
		mov    $0x1,%eax
	jump_167c3:
		add    $0x20,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_167c9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x1,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		mov    $0xa,%esi
		call   func_1ac08
	jump_167e8:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1682a
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_167e8
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_167e8
		add    $0x1e,%esi
		jmp    jump_167e8
	jump_1682a:
		mov    %esi,%eax
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16834:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		call   func_103a8
		mov    %esi,%eax
		call   func_14032
		mov    %esi,%eax
		call   func_143f3
		mov    $0x1,%eax
		call   func_44d67
	jump_1685b:
		mov    $0x1,%ecx
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		mov    %esi,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_16893
		call   func_103a0
		xor    %eax,%eax
		call   func_44d67
		call   func_13f8a
		call   func_45559
		mov    $0xffffffff,%eax
		jmp    jump_143eb
	jump_16893:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		cmp    %esi,%eax
		je     jump_168ae
		test   %eax,%eax
		jne    jump_1685b
	jump_168ae:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jle    jump_1685b
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		test   %ax,%ax
		je     jump_1685b
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		mov    %esi,%ebx
		call   func_10971
		cwtl
		call   func_16357
		test   %al,%al
		jl     jump_169cd
		mov    -0x2(%esp),%edx
		movsbl %al,%edi
		mov    %esi,%ecx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		mov    %edi,%ebx
		sar    $0x10,%eax
		call   func_165c2
		test   %ax,%ax
		je     jump_169cd
		call   func_103a0
		xor    %eax,%eax
		call   func_44d67
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		movw   $0x0,0x57(%esi)
		call   func_1124a
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_1620a
		mov    %esi,%eax
		mov    %esi,%ebx
		call   func_12124
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_187b1
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     jump_1698c
		mov    %esi,%eax
		call   func_18b2e
	jump_1698c:
		call   func_45559
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_13cbd
		mov    %eax,%edx
		call   func_13f8a
		mov    %esi,%eax
		call   func_5401b
		test   %ax,%ax
		jne    jump_169ba
	jump_169b0:
		mov    $0xfffffffe,%eax
		jmp    jump_143eb
	jump_169ba:
		mov    %esi,%eax
		call   func_17310
		test   %ax,%ax
		je     jump_169b0
		mov    %edx,%eax
		jmp    jump_143eb
	jump_169cd:
		call   func_13b45
		jmp    jump_1685b


/*----------------------------------------------------------------*/
func_169d7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		movsbw data_70a68(%edx),%si
		mov    $data_70b0d,%ebp
		cmp    $0x5,%si
		jne    jump_16a00
		testb  $0x1,0x14(%eax)
		jne    jump_16a00
		xor    %esi,%esi
	jump_16a00:
		mov    data_ba840,%cx
		movswl %si,%eax
		mov    data_ba844,%si
		imul   %ecx,%esi
		mov    $data_88bd4,%ebx
		shl    $0x8,%eax
		mov    $data_cc998,%edx
		add    %eax,%ebp
		mov    $data_e8f48,%eax
		mov    %esi,(%esp)
		xor    %esi,%esi
		jmp    jump_16a51
	jump_16a2f:
		movzbl (%ebx),%edi
		cmpb   $0x0,(%edi,%ebp,1)
		jle    jump_16a3d
		cmpl   $0x0,(%edx)
		je     jump_16a44
	jump_16a3d:
		movw   $0xfffe,(%eax)
		jmp    jump_16a49
	jump_16a44:
		movw   $0xffff,(%eax)
	jump_16a49:
		inc    %ebx
		add    $0x2,%eax
		add    $0x4,%edx
		inc    %esi
	jump_16a51:
		cmp    (%esp),%si
		jl     jump_16a2f
		jmp    jump_15954

vtable_16a5d:
		.long   func_16a8d
		.long   func_16a93
		.long   func_16a87
		.long   func_16a99


/*----------------------------------------------------------------*/
func_16a6d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    0x63(%eax),%dl
		cmp    $0x3,%dl
		ja     jump_16a9d
		and    $0xff,%edx
		jmp    *vtable_16a5d(,%edx,4)


/*----------------------------------------------------------------*/
func_16a87:
/*----------------------------------------------------------------*/
		subb   $0x4,0x66(%eax)
		jmp    jump_16a9d


/*----------------------------------------------------------------*/
func_16a8d:
/*----------------------------------------------------------------*/
		addb   $0x4,0x66(%eax)
		jmp    jump_16a9d


/*----------------------------------------------------------------*/
func_16a93:
/*----------------------------------------------------------------*/
		subb   $0x6,0x65(%eax)
		jmp    jump_16a9d


/*----------------------------------------------------------------*/
func_16a99:
/*----------------------------------------------------------------*/
		addb   $0x6,0x65(%eax)
	jump_16a9d:
		movswl %bx,%edx
		mov    data_e5ab0(%edx),%bl
		inc    %bl
		mov    %bl,data_e5ab0(%edx)
		cmp    $0x2,%bl
		jne    jump_16aea
		mov    data_e5a70(%edx),%bl
		inc    %bl
		and    $0x3,%bl
		mov    %bl,data_e5a70(%edx)
		mov    data_e5a6d(%edx),%ecx
		mov    data_e5190(,%edx,4),%ebx
		sar    $0x18,%ecx
		mov    (%ecx,%ebx,1),%bl
		xor    %cl,%cl
		mov    %bl,0x64(%eax)
		mov    $0x1,%eax
		mov    %cl,data_e5ab0(%edx)
		pop    %ecx
		pop    %ebx
		ret
	jump_16aea:
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16aef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x63(%ebx),%dl
		cmp    $0x2,%dl
		jne    jump_16b78
		mov    0x66(%ebx),%cl
		test   %cl,%cl
		jg     jump_16b69
		jne    jump_16b21
		movswl %ax,%edx
		shl    $0x2,%edx
		mov    data_e5af0(%edx),%edi
		test   %edi,%edi
		je     jump_16b21
		movb   $0x1,0x6b(%edi)
	jump_16b21:
		movswl %ax,%ecx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_16a6d
		test   %ax,%ax
		je     jump_16c8d
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    data_e5af0(%eax),%ebp
		test   %ebp,%ebp
		je     jump_16b56
		movb   $0x0,0x6b(%ebp)
		mov    %ebx,%edx
		mov    data_e5af0(%eax),%eax
		jmp    jump_16bc1
	jump_16b56:
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		xor    %ebx,%ebx
		call   func_11f74
		jmp    jump_16c8d
	jump_16b69:
		movswl %ax,%edx
		mov    %ebx,%eax
		call   func_16a6d
		jmp    jump_16c8d
	jump_16b78:
		test   %dl,%dl
		jne    jump_16bcb
		mov    0x66(%ebx),%dl
		test   %dl,%dl
		jl     jump_16b69
		jne    jump_16b99
		movswl %ax,%edx
		shl    $0x2,%edx
		mov    data_e5af0(%edx),%ecx
		test   %ecx,%ecx
		je     jump_16b99
		movb   $0x0,0x6b(%ecx)
	jump_16b99:
		movswl %ax,%ecx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_16a6d
		test   %ax,%ax
		je     jump_16c8d
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    data_e5af0(%eax),%esi
		test   %esi,%esi
		je     jump_16b56
	jump_16bbd:
		mov    %esi,%eax
	jump_16bbf:
		mov    %ebx,%edx
	jump_16bc1:
		call   func_114d4
		jmp    jump_16c8d
	jump_16bcb:
		cmp    $0x1,%dl
		jne    jump_16c31
		mov    0x65(%ebx),%cl
		test   %cl,%cl
		jg     jump_16c1b
		jne    jump_16bef
		mov    %dl,0x6b(%ebx)
		movswl %ax,%edx
		shl    $0x2,%edx
		mov    data_e5af0(%edx),%edi
		test   %edi,%edi
		je     jump_16bef
		mov    %cl,0x6b(%edi)
	jump_16bef:
		movswl %ax,%ecx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_16a6d
		test   %ax,%ax
		je     jump_16c8d
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    data_e5af0(%eax),%ebp
		test   %ebp,%ebp
		je     jump_16b56
		mov    %ebp,%eax
		jmp    jump_16bbf
	jump_16c1b:
		movswl %ax,%edx
		mov    %ebx,%eax
		call   func_16a6d
		cmp    $0x1,%ax
		jne    jump_16c8d
		movb   $0x0,0x6b(%ebx)
		jmp    jump_16c8d
	jump_16c31:
		cmp    $0x3,%dl
		jne    jump_16c80
		mov    0x65(%ebx),%dl
		test   %dl,%dl
		jl     jump_16c1b
		jne    jump_16c57
		movswl %ax,%edx
		shl    $0x2,%edx
		movb   $0x1,0x6b(%ebx)
		mov    data_e5af0(%edx),%ecx
		test   %ecx,%ecx
		je     jump_16c57
		movb   $0x0,0x6b(%ecx)
	jump_16c57:
		movswl %ax,%ecx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_16a6d
		test   %ax,%ax
		je     jump_16c8d
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    data_e5af0(%eax),%esi
		test   %esi,%esi
		jne    jump_16bbd
		jmp    jump_16b56
	jump_16c80:
		push   $data_76e5a
		call   w_printf
		add    $0x4,%esp
	jump_16c8d:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16c93:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    0x63(%eax),%dl
		cmp    $0x2,%dl
		jne    jump_16cac
		mov    0x1(%eax),%dh
		movb   $0x8,0x66(%eax)
		dec    %dh
		mov    %dh,0x1(%eax)
		pop    %edx
		pop    %ecx
		ret
	jump_16cac:
		test   %dl,%dl
		jne    jump_16cbf
		mov    0x1(%eax),%dl
		movb   $0xf8,0x66(%eax)
		inc    %dl
		mov    %dl,0x1(%eax)
		pop    %edx
		pop    %ecx
		ret
	jump_16cbf:
		cmp    $0x1,%dl
		jne    jump_16cd1
		mov    (%eax),%ch
		movb   $0xc,0x65(%eax)
		sub    %dl,%ch
		mov    %ch,(%eax)
		pop    %edx
		pop    %ecx
		ret
	jump_16cd1:
		cmp    $0x3,%dl
		jne    jump_16ce3
		mov    (%eax),%cl
		movb   $0xf4,0x65(%eax)
		inc    %cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		ret
	jump_16ce3:
		push   $data_76e5a
		call   w_printf
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_16cf3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		movswl %cx,%ecx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		shl    $0x2,%ecx
		call   func_11db2
		mov    %eax,data_e5af0(%ecx)
		test   %eax,%eax
		je     jump_16d2f
		mov    %ebx,%edx
		call   func_114c3
		cmpb   $0x0,0x63(%ebx)
		jne    jump_16d3b
		mov    data_e5af0(%ecx),%eax
		movb   $0x1,0x6b(%eax)
		pop    %ecx
		pop    %ebx
		ret
	jump_16d2f:
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11f74
	jump_16d3b:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_16d3e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4c,%esp
		mov    $0x10,%ecx
		mov    %esp,%edi
		mov    $vtable_13889,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_5d351
		mov    data_f0b9e,%dx
		cmp    $0x1,%dx
		jne    jump_16d6d
		mov    %dx,0x44(%esp)
		jmp    jump_16d74
	jump_16d6d:
		movw   $0x4,0x44(%esp)
	jump_16d74:
		xor    %edx,%edx
		jmp    jump_16dd5
	jump_16d78:
		movswl %dx,%ebx
		shl    $0x2,%ebx
		mov    data_f0648(%ebx),%eax
		mov    0x5c(%eax),%cl
		cmp    $0xf,%cl
		jb     jump_16da2
		cmp    $0x16,%cl
		ja     jump_16da2
		mov    $data_71111,%ecx
		movb   $0x2,0x64(%eax)
		mov    %ecx,data_e5190(%ebx)
		jmp    jump_16dbb
	jump_16da2:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%ebx
		movb   $0x3,0x64(%ebx)
		movl   $data_7110d,data_e5190(,%eax,4)
	jump_16dbb:
		movswl %dx,%eax
		movb   $0x3,data_e5a70(%eax)
		cmpb   $0x0,data_e5a50(%eax)
		je     jump_16dd4
		movw   $0x3,(%esp,%eax,2)
	jump_16dd4:
		inc    %edx
	jump_16dd5:
		cmp    data_f0b9e,%dx
		jl     jump_16d78
		mov    $0x9,%eax
		xor    %edi,%edi
		call   func_1033b
		mov    %edi,0x48(%esp)
		jmp    jump_1702a
	jump_16df3:
		xor    %ecx,%ecx
		jmp    jump_16ea9
	jump_16dfa:
		movswl %cx,%ebx
		cmpb   $0x0,data_e5a50(%ebx)
		jne    jump_16e1a
		mov    %ebx,%edx
		mov    data_f0648(,%ebx,4),%eax
		call   func_16cf3
		xor    %edx,%edx
		mov    %dx,(%esp,%ebx,2)
	jump_16e1a:
		movswl %cx,%edx
		lea    (%edx,%edx,1),%ebx
		cmpw   $0x0,(%esp,%ebx,1)
		jne    jump_16e97
		mov    data_e5a4d(%edx),%esi
		mov    %edx,%eax
		sar    $0x18,%esi
		shl    $0x6,%eax
		add    %esi,%esi
		add    %esi,%eax
		mov    data_e520d(%eax),%edi
		sar    $0x18,%edi
		movsbw data_e5210(%eax),%si
		cmp    $0xffffffff,%edi
		je     jump_16e91
		movsbw data_e5211(%eax),%bx
		mov    data_f0648(,%edx,4),%eax
		movsbw 0x1(%eax),%dx
		cmp    %bx,%dx
		jle    jump_16e72
		movb   $0x2,0x63(%eax)
		jmp    jump_16e97
	jump_16e72:
		jge    jump_16e7a
		movb   $0x0,0x63(%eax)
		jmp    jump_16e97
	jump_16e7a:
		movsbw (%eax),%dx
		cmp    %si,%dx
		jle    jump_16e89
		movb   $0x1,0x63(%eax)
		jmp    jump_16e97
	jump_16e89:
		jge    jump_16e97
		movb   $0x3,0x63(%eax)
		jmp    jump_16e97
	jump_16e91:
		movw   $0x1,(%esp,%ebx,1)
	jump_16e97:
		movswl %cx,%eax
		mov    data_e5a50(%eax),%dl
		inc    %dl
		inc    %ecx
		mov    %dl,data_e5a50(%eax)
	jump_16ea9:
		cmp    data_f0b9e,%cx
		jl     jump_16dfa
		xor    %eax,%eax
		mov    %eax,0x40(%esp)
	jump_16ebc:
		call   func_4559f
		call   func_5e9e8
		call   func_499e4
		xor    %ecx,%ecx
		jmp    jump_16fb6
	jump_16ed2:
		mov    0x42(%esp),%eax
		sar    $0x10,%eax
		mov    0x40(%esp),%edx
		call   func_499bd
		cmp    %dx,%ax
		jne    jump_16f39
		movswl %cx,%eax
		cmpw   $0x0,(%esp,%eax,2)
		jne    jump_16f39
		mov    data_e5a4d(%eax),%edx
		mov    data_f0648(,%eax,4),%ebx
		sar    $0x18,%edx
		shl    $0x6,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    data_e520c(%eax),%edx
		mov    data_e520b(%eax),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_16123
		cmpw   $0x0,data_edd7e
		jl     jump_16f39
		mov    data_edd7c,%eax
		sar    $0x10,%eax
		add    $0xb,%eax
		call   func_4f4cd
	jump_16f39:
		movswl %cx,%edx
		lea    (%edx,%edx,1),%eax
		cmpw   $0x2,(%esp,%eax,1)
		jne    jump_16f57
		mov    data_f0648(,%edx,4),%edx
		movb   $0x0,0x64(%edx)
		movw   $0x3,(%esp,%eax,1)
	jump_16f57:
		movswl %cx,%edx
		lea    (%edx,%edx,1),%eax
		cmpw   $0x1,(%esp,%eax,1)
		jne    jump_16f9f
		mov    data_f0648(,%edx,4),%edi
		mov    %edx,%esi
		mov    data_e5ad0(%edx),%dl
		mov    %dl,0x63(%edi)
		mov    data_f0648(,%esi,4),%edx
		mov    0x5c(%edx),%bl
		test   %bl,%bl
		je     jump_16f93
		mov    $0x2,%edi
		movb   $0x2,0x64(%edx)
		mov    %di,(%esp,%eax,1)
		jmp    jump_16f9f
	jump_16f93:
		mov    $0x3,%esi
		mov    %bl,0x64(%edx)
		mov    %si,(%esp,%eax,1)
	jump_16f9f:
		movswl %cx,%edx
		cmpw   $0x0,(%esp,%edx,2)
		jne    jump_16fb5
		mov    data_f0648(,%edx,4),%eax
		call   func_16aef
	jump_16fb5:
		inc    %ecx
	jump_16fb6:
		cmp    data_f0b9e,%cx
		jl     jump_16ed2
		cmpw   $0x1,0x40(%esp)
		jne    jump_17013
		xor    %edx,%edx
		jmp    jump_16fe6
	jump_16fcf:
		movswl %dx,%esi
		cmpw   $0x0,(%esp,%esi,2)
		jne    jump_16fe5
		mov    data_f0648(,%esi,4),%eax
		call   func_16c93
	jump_16fe5:
		inc    %edx
	jump_16fe6:
		cmp    data_f0b9e,%dx
		jl     jump_16fcf
		xor    %ecx,%ecx
		jmp    jump_1700a
	jump_16ff3:
		movswl %cx,%edx
		cmpw   $0x0,(%esp,%edx,2)
		jne    jump_17009
		mov    data_f0648(,%edx,4),%eax
		call   func_16cf3
	jump_17009:
		inc    %ecx
	jump_1700a:
		cmp    data_f0b9e,%cx
		jl     jump_16ff3
	jump_17013:
		mov    0x40(%esp),%eax
		inc    %eax
		mov    %eax,0x40(%esp)
		cmp    $0x4,%ax
		jl     jump_16ebc
		incl   0x48(%esp)
	jump_1702a:
		mov    0x48(%esp),%eax
		cmp    data_edd74,%ax
		jl     jump_16df3
		xor    %ecx,%ecx
		jmp    jump_17056
	jump_1703f:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		inc    %ecx
		call   func_11e04
	jump_17056:
		cmp    data_f0b9e,%cx
		jl     jump_1703f
		mov    $0x1,%eax
		call   func_49c05
		add    $0x4c,%esp
		jmp    jump_15958


/*----------------------------------------------------------------*/
func_17071:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x44,%esp
		mov    $0x10,%ecx
		mov    %esp,%edi
		mov    $vtable_138c9,%esi
		xor    %edx,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_5d351
		mov    $0x2,%esi
		jmp    jump_170f1
	jump_17096:
		movswl %dx,%ebx
		shl    $0x2,%ebx
		mov    data_f0648(%ebx),%eax
		mov    0x5c(%eax),%cl
		cmp    $0xf,%cl
		jbe    jump_170c0
		cmp    $0x16,%cl
		ja     jump_170c0
		mov    $data_71111,%ecx
		movb   $0x2,0x64(%eax)
		mov    %ecx,data_e5190(%ebx)
		jmp    jump_170d9
	jump_170c0:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%ebx
		movb   $0x3,0x64(%ebx)
		movl   $data_7110d,data_e5190(,%eax,4)
	jump_170d9:
		movswl %dx,%eax
		movb   $0x3,data_e5a70(%eax)
		cmpb   $0x0,data_e5a50(%eax)
		je     jump_170f0
		mov    %si,(%esp,%eax,2)
	jump_170f0:
		inc    %edx
	jump_170f1:
		cmp    data_f0b9e,%dx
		jl     jump_17096
		mov    $0x9,%eax
		call   func_1033b
		call   func_45559
		xor    %ecx,%ecx
		call   func_499e4
		mov    %ecx,0x40(%esp)
		jmp    jump_172ed
	jump_17119:
		xor    %edx,%edx
		jmp    jump_171c1
	jump_17120:
		movswl %dx,%eax
		cmpb   $0x0,data_e5a50(%eax)
		jne    jump_17132
		xor    %ebx,%ebx
		mov    %bx,(%esp,%eax,2)
	jump_17132:
		movswl %dx,%ebx
		lea    (%ebx,%ebx,1),%ecx
		cmpw   $0x0,(%esp,%ecx,1)
		jne    jump_171af
		mov    data_e5a4d(%ebx),%esi
		mov    %ebx,%eax
		sar    $0x18,%esi
		shl    $0x6,%eax
		add    %esi,%esi
		add    %esi,%eax
		mov    data_e520d(%eax),%edi
		sar    $0x18,%edi
		movsbw data_e5210(%eax),%si
		cmp    $0xffffffff,%edi
		je     jump_171a9
		movsbw data_e5211(%eax),%cx
		mov    data_f0648(,%ebx,4),%eax
		movsbw 0x1(%eax),%bx
		cmp    %cx,%bx
		jle    jump_1718a
		movb   $0x2,0x63(%eax)
		jmp    jump_171af
	jump_1718a:
		jge    jump_17192
		movb   $0x0,0x63(%eax)
		jmp    jump_171af
	jump_17192:
		movsbw (%eax),%bx
		cmp    %si,%bx
		jle    jump_171a1
		movb   $0x1,0x63(%eax)
		jmp    jump_171af
	jump_171a1:
		jge    jump_171af
		movb   $0x3,0x63(%eax)
		jmp    jump_171af
	jump_171a9:
		movw   $0x1,(%esp,%ecx,1)
	jump_171af:
		movswl %dx,%eax
		mov    data_e5a50(%eax),%ch
		inc    %ch
		inc    %edx
		mov    %ch,data_e5a50(%eax)
	jump_171c1:
		cmp    data_f0b9e,%dx
		jl     jump_17120
		xor    %esi,%esi
		xor    %edi,%edi
	jump_171d2:
		call   func_4559f
		call   func_5e9e8
		call   func_499e4
		mov    %edi,%ecx
		jmp    jump_17285
	jump_171e8:
		movswl %cx,%edx
		cmpw   $0x1,(%esp,%edx,2)
		jne    jump_1726e
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_e5af0(%eax),%ebp
		test   %ebp,%ebp
		je     jump_1721c
		movb   $0x0,0x6b(%ebp)
		mov    data_f0648(%eax),%edx
		mov    data_e5af0(%eax),%eax
		call   func_114d4
		jmp    jump_17230
	jump_1721c:
		mov    data_f0648(%eax),%eax
		xor    %ebx,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_11f74
	jump_17230:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%eax
		call   func_197ad
		mov    data_f0648(,%ebx,4),%eax
		call   func_113e4
		mov    data_f0648(,%ebx,4),%edx
		mov    0xb(%edx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		add    $data_cc968,%eax
		call   func_113cc
		movw   $0x2,(%esp,%ebx,2)
	jump_1726e:
		movswl %cx,%edx
		cmpw   $0x0,(%esp,%edx,2)
		jne    jump_17284
		mov    data_f0648(,%edx,4),%eax
		call   func_16aef
	jump_17284:
		inc    %ecx
	jump_17285:
		cmp    data_f0b9e,%cx
		jl     jump_171e8
		cmp    $0x1,%si
		jne    jump_172de
		mov    %edi,%edx
		jmp    jump_172b2
	jump_1729c:
		movswl %dx,%ebx
		cmp    (%esp,%ebx,2),%di
		jne    jump_172b1
		mov    data_f0648(,%ebx,4),%eax
		call   func_16c93
	jump_172b1:
		inc    %edx
	jump_172b2:
		cmp    data_f0b9e,%dx
		jl     jump_1729c
		mov    %edi,%ecx
		jmp    jump_172d5
	jump_172bf:
		movswl %cx,%edx
		cmp    (%esp,%edx,2),%di
		jne    jump_172d4
		mov    data_f0648(,%edx,4),%eax
		call   func_16cf3
	jump_172d4:
		inc    %ecx
	jump_172d5:
		cmp    data_f0b9e,%cx
		jl     jump_172bf
	jump_172de:
		inc    %esi
		cmp    $0x4,%si
		jl     jump_171d2
		incl   0x40(%esp)
	jump_172ed:
		mov    0x40(%esp),%eax
		cmp    data_edd74,%ax
		jl     jump_17119
		mov    $0x1,%eax
		call   func_49c05
		add    $0x44,%esp
		jmp    jump_15957


/*----------------------------------------------------------------*/
func_17310:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		testb  $0x80,0x15(%eax)
		jne    jump_17477
		testb  $0x1,0x14(%ecx)
		jne    jump_17477
		mov    0x11(%ecx),%dh
		cmp    $0x4c,%dh
		je     jump_17477
		cmp    $0x5c,%dh
		je     jump_17477
		cmp    $0x5d,%dh
		je     jump_17477
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %ebx,%ebx
		call   func_1093d
		mov    %al,%bl
		cmp    $0x64,%bx
		jge    jump_17368
		xor    %bh,%bh
		and    $0xf,%bl
		sub    $0x9,%ebx
		jmp    jump_17373
	jump_17368:
		sub    $0x64,%ebx
		xor    %bh,%bh
		and    $0xf,%bl
		sub    $0x5,%ebx
	jump_17373:
		test   %bx,%bx
		jl     jump_17477
		cmp    $0x5,%bx
		jg     jump_17477
		test   %bx,%bx
		je     jump_17397
		cmp    $0x3,%bx
		je     jump_17397
		cmp    $0x4,%bx
		jne    jump_173a3
	jump_17397:
		mov    0x4c(%ecx),%eax
		mov    %eax,%edx
		mov    $0x14,%esi
		jmp    jump_173ad
	jump_173a3:
		mov    0x4c(%ecx),%eax
		mov    %eax,%edx
		mov    $0xa,%esi
	jump_173ad:
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%esi
		cmp    $0x1,%bx
		jle    jump_173da
		sub    $0x2,%ebx
		mov    %ecx,%eax
		movswl %bx,%edx
		call   func_1762c
		mov    %esi,%edx
		imul   %eax,%edx
		mov    $0xa,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%esi
	jump_173da:
		mov    0x48(%ecx),%edx
		mov    $0x1,%ebx
		sub    %esi,%edx
		mov    %ecx,%eax
		mov    %edx,0x48(%ecx)
		xor    %edx,%edx
		call   func_53797
		mov    data_ba83c,%dx
		movsbw (%ecx),%ax
		cmp    %dx,%ax
		jl     jump_1743d
		mov    data_ba83a,%eax
		sar    $0x10,%eax
		movsbl (%ecx),%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jge    jump_1743d
		mov    data_ba83e,%bx
		movsbw 0x1(%ecx),%ax
		cmp    %bx,%ax
		jl     jump_1743d
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movsbl 0x1(%ecx),%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jge    jump_1743d
		mov    $0x1,%eax
		jmp    jump_1743f
	jump_1743d:
		xor    %eax,%eax
	jump_1743f:
		test   %esi,%esi
		jle    jump_17467
		test   %ax,%ax
		je     jump_17451
		mov    %esi,%edx
		mov    %ecx,%eax
		call   func_46359
	jump_17451:
		cmpl   $0x0,0x48(%ecx)
		jg     jump_17477
		mov    %ecx,%edx
		xor    %eax,%eax
		call   func_1db1d
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_17467:
		test   %ax,%ax
		je     jump_17477
		mov    %esi,%edx
		mov    %ecx,%eax
		neg    %edx
		call   func_462a7
	jump_17477:
		mov    $0x1,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
		.ascii  "\x0a\x00\x0f\x00\x14\x00\x14\x00"
		.ascii  "\x19\x00\x23\x00\x23\x00\x32\x00"
		.ascii  "\x32\x00"
data_17493:
		.ascii  "\xd1\xc1\xb5\x71\x00\xa7\xb7\xd0"
		.ascii  "\x65\x00\xb8\xe5\x89\x62\x00\xd2"
		.ascii  "\x41\xa5\xa2\x00\xa5\xa1\xb9\xa1"
		.ascii  "\x00\xad\xa1\xd1\xc5\x00\xb4\x71"
		.ascii  "\xd3\x62\x00"
data_174b6:
		.ascii  "\x88\xf1\x00\x00\x00\x95\xa1\x8f"
		.ascii  "\xa1\x00\xc0\x77\x00\x00\x00\xd1"
		.ascii  "\xc9\x00\x00\x00\x8a\xa5\xa4\xf3"
		.ascii  "\x00"
.text


/*----------------------------------------------------------------*/
func_174cf:
/*----------------------------------------------------------------*/
		push   %edx
		mov    0x5c(%eax),%dl
		test   %dl,%dl
		jbe    jump_174e9
		cmp    $0x4,%dl
		ja     jump_174e9
		mov    0x77(%eax),%edx
		cmpb   $0x17,0x11(%edx)
		jne    jump_174e9
		mov    $0x5,%al
		pop    %edx
		ret
	jump_174e9:
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_72793(%eax),%al
		pop    %edx
		ret

vtable_174fd:
		.long   func_17623
		.long   func_1756b
		.long   func_17623
		.long   func_17562
		.long   func_17559
		.long   func_1761a
		.long   func_17623
		.long   func_1756b
		.long   func_17562
		.long   func_17559
		.long   func_17628
		.long   func_17623
		.long   func_1761a


/*----------------------------------------------------------------*/
func_17531:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x4,data_ba84e
		jne    jump_17574
		mov    0x11(%edx),%al
		cmp    $0x88,%al
		jb     jump_17551
		jbe    func_1756b
		cmp    $0x8a,%al
		je     func_17562
		jmp    func_17623
	jump_17551:
		cmp    $0x86,%al
		jne    func_17623


/*----------------------------------------------------------------*/
func_17559:
/*----------------------------------------------------------------*/
		mov    $0x6,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17562:
/*----------------------------------------------------------------*/
		mov    $0x5,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1756b:
/*----------------------------------------------------------------*/
		mov    $0x4,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_17574:
		xor    %ebx,%ebx
		mov    0x11(%edx),%bl
		mov    %ebx,%eax
		cmpb   $0x1,data_73b5a(%ebx,%eax,8)
		je     func_17623
		mov    %edx,%eax
		call   func_174cf
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x11(%edx),%cl
		mov    %al,%bl
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		mov    data_72794(%eax),%al
		xor    %ah,%ah
		test   %ax,%ax
		je     jump_175f5
		cmp    $0x1,%ax
		jne    jump_175b9
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_175b9:
		cmp    $0x2,%ax
		jne    jump_175c8
	jump_175bf:
		mov    $0x1,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_175c8:
		cmp    $0x3,%ax
		jne    jump_175d7
	jump_175ce:
		mov    $0x2,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_175d7:
		cmp    $0x4,%ax
		jne    jump_175e6
		mov    $0x3,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_175e6:
		cmp    $0x5,%ax
		jne    func_17628
		mov    $0xfffffffe,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_175f5:
		mov    0x15(%edx),%ch
		test   $0x1,%ch
		jne    func_17628
		test   $0x2,%ch
		jne    jump_175bf
		test   $0x4,%ch
		jne    jump_175ce
		cmp    $0xc,%bx
		ja     func_17628
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *vtable_174fd(,%edx,4)


/*----------------------------------------------------------------*/
func_1761a:
/*----------------------------------------------------------------*/
		mov    $0x7,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17623:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%eax


/*----------------------------------------------------------------*/
func_17628:
/*----------------------------------------------------------------*/
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1762c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		testb  $0x40,0x1e(%eax)
		je     jump_17640
		mov    $0xa,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_17640:
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		movswl %dx,%esi
		add    $0x3a,%edx
		movsbw data_72982(%esi,%eax,8),%cx
		movswl %dx,%esi
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x5b(%ebx),%al
		call   func_184a4
		cbtw
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x5d(%ebx),%al
		call   func_184a4
		cbtw
		add    %eax,%ecx
		movswl %cx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1767e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x3f,0x11(%eax)
		jb     jump_17690
	jump_17688:
		mov    $0x1,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_17690:
		xor    %ecx,%ecx
		mov    0x11(%ebx),%cl
		mov    %ecx,%eax
		shl    $0x2,%eax
		add    %eax,%ecx
		movswl %dx,%eax
		add    %ecx,%ecx
		mov    data_72090(%ecx,%eax,1),%al
		xor    %ah,%ah
		test   %ax,%ax
		je     jump_176da
		cmp    $0x3,%dx
		jg     jump_176cd
		xor    %edx,%edx
		mov    0x2b(%ebx),%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_17688
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_176cd:
		dec    %eax
		imul   $0x3,%eax,%eax
		mov    $0xf,%edx
		sub    %eax,%edx
		mov    %edx,%eax
	jump_176da:
		pop    %ecx
		pop    %ebx
		ret

vtable_176dd:
		.long   func_177d5
		.long   func_177e8
		.long   func_177fa
		.long   func_1780d
		.long   func_17823


/*----------------------------------------------------------------*/
func_176f1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		mov    %eax,%ebp
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_17493,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x24(%esp),%edi
		mov    $data_174b6,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmpb   $0x3f,0x11(%eax)
		jb     jump_1772a
	jump_17723:
		xor    %eax,%eax
		jmp    jump_178a7
	jump_1772a:
		cmp    $0x9,%dx
		jg     jump_17757
		xor    %ebx,%ebx
		mov    0x11(%ebp),%bl
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		movswl %dx,%ebx
		mov    data_72090(%ebx,%eax,2),%al
		xor    %ah,%ah
		test   %ax,%ax
		je     jump_178a2
	jump_17751:
		addb   $0xa,0x3f(%ebp)
		jmp    jump_177ad
	jump_17757:
		cmp    $0xa,%dx
		jne    jump_1776a
		mov    0x11(%ebp),%bl
		cmp    $0x2f,%bl
		je     jump_17751
		cmp    $0x30,%bl
		je     jump_17751
	jump_1776a:
		xor    %ebx,%ebx
		mov    0x11(%ebp),%bl
		mov    %ebx,%eax
		shl    $0x3,%eax
		mov    %edx,%ecx
		sub    %ebx,%eax
		sub    $0xb,%ecx
		mov    %eax,%ebx
		movswl %cx,%eax
		mov    data_72310(%ebx,%eax,1),%bl
		and    $0xff,%ebx
		mov    0x2e(%eax,%ebp,1),%al
		and    $0xff,%eax
		dec    %ebx
		cmp    %eax,%ebx
		jle    jump_177ad
		mov    0x3e(%ebp),%cl
		add    $0xa,%cl
		mov    %cl,0x3e(%ebp)
		cmp    $0x64,%cl
		jb     jump_17723
	jump_177ad:
		cmpb   $0x64,0x3f(%ebp)
		jb     jump_178b0
		mov    %edx,%eax
		sub    $0x6,%eax
		xor    %ebx,%ebx
		cmp    $0x4,%ax
		ja     jump_17834
		and    $0xffff,%eax
		jmp    *vtable_176dd(,%eax,4)


/*----------------------------------------------------------------*/
func_177d5:
/*----------------------------------------------------------------*/
		mov    0x38(%ebp),%cl
		cmp    $0x7,%cl
		jae    jump_17834
		mov    %cl,%ch
		inc    %ch
		mov    %ch,%bl
		mov    %ch,0x38(%ebp)
		jmp    jump_17834


/*----------------------------------------------------------------*/
func_177e8:
/*----------------------------------------------------------------*/
		mov    0x3a(%ebp),%al
		cmp    $0x4,%al
		jae    jump_17834
		mov    %al,%ah
		inc    %ah
		mov    %ah,%bl
		mov    %ah,0x3a(%ebp)
		jmp    jump_17834


/*----------------------------------------------------------------*/
func_177fa:
/*----------------------------------------------------------------*/
		mov    0x39(%ebp),%cl
		cmp    $0x4,%cl
		jae    jump_17834
		mov    %cl,%ch
		inc    %ch
		mov    %ch,%bl
		mov    %ch,0x39(%ebp)
		jmp    jump_17834


/*----------------------------------------------------------------*/
func_1780d:
/*----------------------------------------------------------------*/
		mov    0x3b(%ebp),%ah
		cmp    $0x4,%ah
		jae    jump_17834
		mov    %ah,%bl
		inc    %bl
		mov    %bl,0x3b(%ebp)
		xor    %ebx,%ebx
		mov    0x3b(%ebp),%bl
		jmp    jump_17834


/*----------------------------------------------------------------*/
func_17823:
/*----------------------------------------------------------------*/
		mov    0x3c(%ebp),%ch
		cmp    $0x6,%ch
		jae    jump_17834
		mov    %ch,%al
		inc    %al
		mov    %al,%bl
		mov    %al,0x3c(%ebp)
	jump_17834:
		test   %bx,%bx
		je     jump_1789e
		mov    data_76e60,%ax
		mov    %ax,data_fa784
		movswl %dx,%eax
		lea    -0x6(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    0x24(%esp),%edx
		add    %eax,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_76e62,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_fa784,%eax
		mov    $data_fa784,%edx
		call   w_dos_strlen
		add    %eax,%edx
		movswl %bx,%eax
		mov    $0xa,%ebx
		call   func_itoa_
		mov    $data_76e6f,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
	jump_1789e:
		movb   $0x0,0x3f(%ebp)
	jump_178a2:
		mov    $0x1,%eax
	jump_178a7:
		add    $0x40,%esp
	jump_178aa:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_178b0:
		cmpb   $0x64,0x3e(%ebp)
		jb     jump_178a2
		sub    $0xb,%edx
		movswl %dx,%edx
		lea    (%edx,%ebp,1),%ebx
		mov    0x2e(%ebx),%cl
		inc    %cl
		mov    data_76e60,%ax
		mov    %cl,0x2e(%ebx)
		mov    %ax,data_fa784
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %esp,%edx
		add    %eax,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_76e82,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_fa784,%eax
		mov    $data_fa784,%edx
		call   w_dos_strlen
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x2e(%ebx),%al
		mov    $0xa,%ebx
		call   func_itoa_
		mov    $data_76e8d,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		xor    %ebx,%ebx
		mov    $data_fa784,%edx
		mov    %ebp,%eax
		movb   $0x0,0x3e(%ebp)
		call   func_482a5
		jmp    jump_17723


/*----------------------------------------------------------------*/
func_1793d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    %esi,%eax
		call   w_dos_strcat
		cmp    $0x2,%cx
		jne    jump_17965
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   func_482a5
		movb   $0x0,(%esi)
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret
	jump_17965:
		mov    %ecx,%eax
		inc    %eax
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1796b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpl   $0x0,0x77(%eax)
		jne    jump_17a1c
		xor    %eax,%eax
		mov    0x40(%ebx),%al
		mov    %ax,0x44(%ebx)
		mov    %ebx,%eax
		call   func_174cf
		xor    %ah,%ah
		test   %ax,%ax
		je     jump_17997
		cmp    $0x6,%ax
		jne    jump_179a3
	jump_17997:
		mov    0x44(%ebx),%ax
		add    %eax,%eax
		mov    %ax,0x44(%ebx)
		jmp    jump_179b8
	jump_179a3:
		xor    %eax,%eax
		mov    $0x2c,%edx
		mov    0x5b(%ebx),%al
		call   func_184a4
		cbtw
		add    %ax,0x44(%ebx)
	jump_179b8:
		mov    $0x2d,%edx
		xor    %ecx,%ecx
		mov    %ebx,%eax
		mov    0x11(%ebx),%cl
		call   func_184f9
		mov    %eax,%edx
		mov    data_71b68(,%ecx,8),%ax
		add    %edx,%eax
		mov    %ax,0x46(%ebx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x11(%ebx),%al
		mov    0x42(%ebx),%dl
		mov    data_71b6c(,%eax,8),%ax
		add    %eax,%edx
		mov    %dx,0x54(%ebx)
		cmp    $0x3c,%dx
		jge    jump_179fd
		movw   $0x3c,0x54(%ebx)
	jump_179fd:
		mov    $0x2f,%edx
		xor    %ecx,%ecx
		mov    %ebx,%eax
		mov    0x11(%ebx),%cl
		call   func_184f9
		mov    %eax,%edx
		mov    data_71b6a(,%ecx,8),%al
		add    %dl,%al
		mov    %al,0x59(%ebx)
	jump_17a1c:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17a20:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		cmpb   $0xa1,0x11(%eax)
		je     jump_17d7a
		mov    0x77(%ebp),%edx
		mov    %ebp,0xc(%esp)
		test   %edx,%edx
		je     jump_17a55
		mov    0xc(%esp),%eax
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    0xc(%esp),%eax
		mov    0x1(%eax),%al
		mov    %edx,%ebp
		mov    %al,0x1(%edx)
	jump_17a55:
		test   %ecx,%ecx
		je     jump_17b5a
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x2b(%ecx),%dl
		mov    0x2b(%ebp),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    jump_17a79
		movw   $0x5,0x10(%esp)
		jmp    jump_17a82
	jump_17a79:
		inc    %eax
		imul   $0xa,%eax,%eax
		mov    %ax,0x10(%esp)
	jump_17a82:
		mov    0xe(%esp),%edx
		xor    %eax,%eax
		sar    $0x10,%edx
		mov    0x3d(%ebp),%al
		add    %edx,%eax
		cmp    $0x64,%eax
		jle    jump_17aa6
		xor    %eax,%eax
		mov    $0x64,%edx
		mov    0x3d(%ebp),%al
		sub    %eax,%edx
		mov    %dx,0x10(%esp)
	jump_17aa6:
		cmpb   $0x63,0x2b(%ebp)
		jne    jump_17ab7
		xor    %ebx,%ebx
		movb   $0x0,0x3d(%ebp)
		mov    %bx,0x10(%esp)
	jump_17ab7:
		cmpb   $0x1,0xe(%ebp)
		jne    jump_17b53
		mov    0xe(%esp),%eax
		mov    $0xa,%ebx
		mov    %esp,%edx
		mov    $data_fa784,%edi
		mov    $data_76e94,%esi
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		mov    %esp,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_76e9d,%edx
		mov    $data_fa784,%eax
		mov    $0xa,%ebx
		call   w_dos_strcat
		xor    %eax,%eax
		mov    %esp,%edx
		mov    0x85(%ecx),%ax
		call   func_ltoa_
		mov    %esp,%edx
		mov    $data_fa784,%eax
		call   w_dos_strcat
		mov    $data_76ea5,%edx
		mov    $data_fa784,%eax
		xor    %ebx,%ebx
		call   w_dos_strcat
		mov    $data_fa784,%edx
		mov    %ebp,%eax
		call   func_482a5
		xor    %edx,%edx
		xor    %eax,%eax
		mov    data_fdf85,%dx
		mov    0x85(%ecx),%ax
		add    %eax,data_fe36f(,%edx,4)
	jump_17b53:
		mov    0x10(%esp),%al
		add    %al,0x3d(%ebp)
	jump_17b5a:
		cmpb   $0x64,0x3d(%ebp)
		jne    jump_17d4c
		mov    0x2b(%ebp),%cl
		mov    $data_fa784,%edi
		inc    %cl
		mov    $data_76eb0,%esi
		mov    %cl,0x2b(%ebp)
		mov    $0x6,%ecx
		movb   $0x0,0x3d(%ebp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x2b(%ebp),%ch
		cmp    $0xa,%ch
		jb     jump_17ba4
		xor    %edx,%edx
		mov    %ch,%dl
		mov    $0xa,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		add    $0x30,%eax
		mov    %al,data_fa78c
	jump_17ba4:
		xor    %edx,%edx
		mov    0x2b(%ebp),%dl
		mov    $0xa,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x1,%ebx
		add    $0x30,%edx
		mov    %ebp,%eax
		mov    %dl,data_fa78d
		mov    $data_fa784,%edx
		call   func_482a5
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,data_fa784
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_1767e
		cmp    $0x1,%ax
		jne    jump_17c0b
		mov    0x40(%ebp),%ah
		cmp    $0xff,%ah
		jae    jump_17c0b
		mov    $data_76ecb,%ebx
		mov    %ah,%dl
		xor    %ecx,%ecx
		inc    %dl
		mov    %ebp,%eax
		mov    %dl,0x40(%ebp)
		mov    $data_fa784,%edx
		call   func_1793d
		mov    %eax,%ebx
	jump_17c0b:
		mov    $0x1,%edx
		mov    %ebp,%eax
		call   func_1767e
		cmp    $0x1,%ax
		jne    jump_17c42
		mov    0x42(%ebp),%dh
		cmp    $0xff,%dh
		jae    jump_17c42
		movswl %bx,%ecx
		mov    %dh,%bl
		mov    %ebp,%eax
		inc    %bl
		mov    $data_fa784,%edx
		mov    %bl,0x42(%ebp)
		mov    $data_76ed7,%ebx
		call   func_1793d
		mov    %eax,%ebx
	jump_17c42:
		mov    $0x2,%edx
		mov    %ebp,%eax
		call   func_1767e
		cmp    $0x1,%ax
		jne    jump_17c78
		cmpb   $0xff,0x41(%ebp)
		jae    jump_17c78
		mov    $data_fa784,%edx
		mov    0x41(%ebp),%al
		movswl %bx,%ecx
		inc    %al
		mov    $data_76ee5,%ebx
		mov    %al,0x41(%ebp)
		mov    %ebp,%eax
		call   func_1793d
		mov    %eax,%ebx
	jump_17c78:
		mov    $0x3,%edx
		mov    %ebp,%eax
		call   func_1767e
		cmp    $0x1,%ax
		jne    jump_17caf
		mov    0x43(%ebp),%ah
		cmp    $0xff,%ah
		jae    jump_17caf
		movswl %bx,%ecx
		mov    %ah,%dl
		mov    $data_76ef1,%ebx
		inc    %dl
		mov    %ebp,%eax
		mov    %dl,0x43(%ebp)
		mov    $data_fa784,%edx
		call   func_1793d
		mov    %eax,%ebx
	jump_17caf:
		mov    $0x4,%edx
		mov    %ebp,%eax
		call   func_1767e
		movswl %ax,%ecx
		mov    %ecx,%edx
		shl    $0x2,%edx
		sub    %ecx,%edx
		shl    $0x3,%edx
		add    %ecx,%edx
		shl    $0x2,%edx
		mov    0x4c(%ebp),%ecx
		mov    %ebp,%eax
		add    %edx,%ecx
		mov    $data_fa784,%edx
		mov    %ecx,0x4c(%ebp)
		movswl %bx,%ecx
		mov    $data_76efd,%ebx
		call   func_1793d
		mov    $0x5,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   func_1767e
		mov    0x52(%ebp),%cx
		mov    $data_fa784,%edx
		add    %eax,%ecx
		mov    %ebp,%eax
		mov    %cx,0x52(%ebp)
		movswl %bx,%ecx
		mov    $data_76f09,%ebx
		call   func_1793d
		test   %ax,%ax
		je     jump_17d28
		mov    $data_fa784,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_482a5
	jump_17d28:
		mov    $0x6,%ebx
		jmp    jump_17d3f
	jump_17d2f:
		movswl %bx,%edx
		mov    %ebp,%eax
		call   func_176f1
		test   %ax,%ax
		je     jump_17d45
		inc    %ebx
	jump_17d3f:
		cmp    $0x12,%bx
		jl     jump_17d2f
	jump_17d45:
		mov    %ebp,%eax
		call   func_1796b
	jump_17d4c:
		mov    0xc(%esp),%eax
		cmpl   $0x0,0x77(%eax)
		je     jump_17d7a
		mov    0xc(%esp),%edx
		mov    0x3d(%ebp),%al
		mov    %al,0x3d(%edx)
		cmp    $0x1,%si
		jne    jump_17d7a
		mov    0x2b(%ebp),%al
		mov    %al,0x2b(%edx)
		mov    0xc(%esp),%eax
		xor    %edx,%edx
		mov    0x5c(%eax),%dl
		call   func_17e6d
	jump_17d7a:
		add    $0x14,%esp
		jmp    jump_178aa


/*----------------------------------------------------------------*/
func_17d82:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		cmp    $0x3,%dx
		jne    jump_17dbc
		xor    %ebx,%ebx
		mov    0x5c(%eax),%bl
		xor    %edx,%edx
		shl    $0x4,%ebx
		mov    0x40(%eax),%dl
		mov    data_72e9a(%ebx),%bx
		cmp    %bx,%dx
		jle    jump_17da5
		mov    %ebx,%edx
	jump_17da5:
		mov    0x5c(%eax),%al
		and    $0xff,%eax
		shl    $0x4,%eax
		add    data_72ea0(%eax),%dx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_17dbc:
		cmp    $0x4,%dx
		jne    jump_17e03
		xor    %ebx,%ebx
		mov    0x5c(%eax),%bl
		xor    %edx,%edx
		shl    $0x4,%ebx
		mov    0x42(%eax),%dl
		mov    data_72e9c(%ebx),%bx
		cmp    %bx,%dx
		jle    jump_17ddd
		mov    %ebx,%edx
	jump_17ddd:
		xor    %ebx,%ebx
		mov    0x11(%eax),%bl
		mov    data_71b6c(,%ebx,8),%cx
		mov    0x5c(%eax),%al
		add    %ecx,%edx
		and    $0xff,%eax
		shl    $0x4,%eax
		add    data_72ea2(%eax),%dx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_17e03:
		xor    %edx,%edx
		mov    0x5c(%eax),%dl
		shl    $0x4,%edx
		mov    data_72e9e(%edx),%dx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17e17:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		cmpb   $0x27,0x5c(%eax)
		jb     jump_17e68
		cmpb   $0x32,0x5c(%ebx)
		ja     jump_17e68
		xor    %edx,%edx
		mov    0x5c(%ebx),%dl
		sub    $0x27,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_73108(,%eax,2),%ecx
		mov    0x48(%ebx),%eax
		mov    %eax,%edx
		mov    $0x64,%esi
		sar    $0x1f,%edx
		idiv   %esi
		sar    $0x11,%ecx
		mov    %ecx,%edx
		imul   %eax,%edx
		mov    $0x3e8,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		add    %ecx,%eax
		mov    %ax,0x44(%ebx)
	jump_17e68:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17e6d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    %dl,%cl
		mov    %dl,0x5c(%eax)
		xor    %eax,%eax
		mov    %dl,%al
		add    $0x12b,%eax
		mov    %ax,0x61(%ebx)
		mov    %dl,%al
		add    $0x5f,%al
		mov    %al,0x11(%ebx)
		cmpb   $0x0,0x5a(%ebx)
		je     jump_17e9b
		mov    %ebx,%eax
		xor    %edx,%edx
		call   func_18262
	jump_17e9b:
		cmpb   $0x0,0x5b(%ebx)
		je     jump_17ead
		mov    $0x1,%edx
		mov    %ebx,%eax
		call   func_18262
	jump_17ead:
		cmpb   $0x0,0x5d(%ebx)
		je     jump_17ebf
		mov    $0x2,%edx
		mov    %ebx,%eax
		call   func_18262
	jump_17ebf:
		add    $0x5f,%cl
		xor    %eax,%eax
		mov    %cl,%al
		lea    -0x86(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		movb   $0x0,0x5e(%ebx)
		sub    %edx,%eax
		movb   $0x0,0x5f(%ebx)
		mov    data_73108(,%eax,2),%esi
		sar    $0x11,%esi
		cmp    $0x86,%cl
		jae    jump_17f6e
		mov    $0x3,%edx
		mov    %ebx,%eax
		call   func_17d82
		mov    %ax,0x44(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b68(,%eax,8),%ax
		mov    %ax,0x46(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b6a(,%eax,8),%al
		mov    $0x4,%edx
		mov    %al,0x59(%ebx)
		mov    %ebx,%eax
		call   func_17d82
		mov    %ax,0x54(%ebx)
		cmp    $0x3c,%ax
		jge    jump_17f3a
		movw   $0x3c,0x54(%ebx)
	jump_17f3a:
		mov    $0x2,%edx
		mov    %ebx,%eax
		call   func_17d82
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		movw   $0x0,0x52(%ebx)
		shl    $0x2,%eax
		mov    %eax,0x4c(%ebx)
		mov    0x52(%ebx),%ax
		mov    %ax,0x50(%ebx)
		jmp    jump_1806d
	jump_17f6e:
		mov    %cl,%ch
		sub    $0x86,%ch
		cmp    $0x92,%cl
		jae    jump_17fec
		xor    %edx,%edx
		mov    %ch,%dl
		mov    %edx,%ecx
		shl    $0x2,%ecx
		sub    %edx,%ecx
		add    %ecx,%ecx
		xor    %edx,%edx
		mov    data_7310a(%ecx),%eax
		mov    0x43(%ebx),%dl
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    %eax,%edx
		mov    $0x64,%edi
		sar    $0x1f,%edx
		mov    %eax,0x4c(%ebx)
		idiv   %edi
		mov    %esi,%edx
		imul   %eax,%edx
		mov    $0x3e8,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		add    %esi,%eax
		mov    %ax,0x44(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b68(,%eax,8),%ax
		mov    %ax,0x46(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b6a(,%eax,8),%al
		mov    %al,0x59(%ebx)
		mov    data_7310e(%ecx),%ax
		mov    %ax,0x54(%ebx)
		jmp    jump_1806d
	jump_17fec:
		cmp    $0x99,%cl
		jae    jump_18000
		xor    %edx,%edx
		mov    0x43(%ebx),%dl
		imul   %esi,%edx
		mov    $0x64,%edi
		jmp    jump_1800d
	jump_18000:
		xor    %edx,%edx
		mov    0x42(%ebx),%dl
		imul   %esi,%edx
		mov    $0xc8,%edi
	jump_1800d:
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		add    %esi,%eax
		mov    %ax,0x44(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b68(,%eax,8),%ax
		mov    %ax,0x46(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		xor    %edx,%edx
		mov    data_71b6a(,%eax,8),%al
		mov    %ch,%dl
		mov    %al,0x59(%ebx)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_7310e(,%eax,2),%dx
		mov    %dx,0x54(%ebx)
		mov    data_7310a(,%eax,2),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		mov    %eax,0x4c(%ebx)
	jump_1806d:
		mov    0x5c(%ebx),%cl
		cmp    $0x5,%cl
		je     jump_18081
		cmp    $0x6,%cl
		je     jump_18081
		cmp    $0x20,%cl
		je     jump_18081
		jne    jump_18085
	jump_18081:
		orb    $0x1,0x14(%ebx)
	jump_18085:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1808a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		call   func_103a8
		cmpb   $0x6,0x5c(%ecx)
		ja     jump_180a9
		mov    0x77(%ecx),%eax
		mov    0x5d(%eax),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_180a9:
		mov    0x77(%ecx),%esi
		mov    (%ecx),%al
		mov    %al,(%esi)
		mov    0x1(%ecx),%al
		mov    %al,0x1(%esi)
		mov    0x6f(%ecx),%al
		mov    %al,0x6f(%esi)
		mov    0x70(%ecx),%al
		mov    %al,0x70(%esi)
		mov    0x71(%ecx),%al
		mov    %al,0x71(%esi)
		mov    0x72(%ecx),%al
		mov    %al,0x72(%esi)
		mov    0x73(%ecx),%eax
		mov    %eax,0x73(%esi)
		mov    0x14(%esi),%dl
		mov    0x7b(%ecx),%eax
		and    $0xfe,%dl
		mov    %eax,0x7b(%esi)
		mov    $0x88,%ebx
		mov    %dl,0x14(%esi)
		mov    %esi,%edx
		mov    %ecx,%eax
		call   w_dos_memcpy
		mov    %esi,%eax
		movb   $0x0,0x5c(%ecx)
		call   func_1134a
		mov    %ecx,%eax
		call   func_12124
		call   func_103a0
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1810d:
/*----------------------------------------------------------------*/
		incl   (%eax)
		add    %bh,%bh
		add    %eax,(%eax)
		add    %al,(%ecx)


/*----------------------------------------------------------------*/
func_18115:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x200,%edx
		mov    $data_76f18,%eax
		mov    $0x1ff8,%ebx
		call   func_4976f
		movswl %ax,%ecx
		mov    $data_edd88,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		mov    $data_efdb0,%edx
		call   w_dos_close
		xor    %ebx,%ebx
		mov    $0x7c,%ecx
		mov    $data_76f21,%eax
		call   func_4f25f
		xor    %edx,%edx
	jump_1815a:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_efdb8(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x7c,%dx
		jl     jump_1815a
		mov    $0x4,%ecx
		mov    $data_efd80,%edx
		mov    $data_76f2a,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_1818a:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_efd88(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x4,%dx
		jl     jump_1818a
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_181a6:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmp    $0x1,%bx
		jb     jump_181bd
		jbe    jump_181c7
		cmp    $0x2,%bx
		je     jump_181cc
		jmp    jump_181cf
	jump_181bd:
		test   %bx,%bx
		jne    jump_181cf
		mov    %dl,0x5a(%eax)
		jmp    jump_181cf
	jump_181c7:
		mov    %dl,0x5b(%eax)
		jmp    jump_181cf
	jump_181cc:
		mov    %dl,0x5d(%eax)
	jump_181cf:
		dec    %ecx
		movswl %cx,%ebx
		mov    %ebx,%edx
		shl    $0x5,%edx
		add    %ebx,%edx
		add    %edx,%edx
		mov    data_eddb0(%edx),%bl
		add    %bl,0x40(%eax)
		mov    data_eddb1(%edx),%bl
		add    %bl,0x41(%eax)
		mov    data_eddb2(%edx),%bl
		add    %bl,0x42(%eax)
		mov    data_eddb3(%edx),%bl
		add    %bl,0x43(%eax)
		mov    0x44(%eax),%di
		movsbw data_eddb4(%edx),%bx
		add    %ebx,%edi
		mov    %di,0x44(%eax)
		test   %si,%si
		je     jump_18223
		movsbw data_eddb5(%edx),%dx
		add    %dx,0x46(%eax)
	jump_18223:
		movswl %cx,%ebx
		mov    %ebx,%edx
		shl    $0x5,%edx
		add    %ebx,%edx
		mov    0x59(%eax),%cl
		add    data_eddb7(,%edx,2),%cl
		xor    %edx,%edx
		mov    %cl,0x59(%eax)
		xor    %ebx,%ebx
		mov    0x11(%eax),%dl
		mov    0x42(%eax),%bl
		mov    data_71b6c(,%edx,8),%dx
		add    %edx,%ebx
		mov    %bx,0x54(%eax)
		cmp    $0x3c,%bx
		jge    jump_1825e
		movw   $0x3c,0x54(%eax)
	jump_1825e:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_18262:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebx
		cmp    $0x1,%dx
		jb     jump_18278
		jbe    jump_18288
		cmp    $0x2,%dx
		je     jump_18293
		jmp    jump_1829c
	jump_18278:
		test   %dx,%dx
		jne    jump_1829c
		movzbw 0x5a(%eax),%si
		movb   $0x0,0x5a(%eax)
		jmp    jump_1829c
	jump_18288:
		movzbw 0x5b(%eax),%si
		movb   $0x0,0x5b(%eax)
		jmp    jump_1829c
	jump_18293:
		movzbw 0x5d(%eax),%si
		movb   $0x0,0x5d(%eax)
	jump_1829c:
		dec    %esi
		movswl %si,%ecx
		mov    %ecx,%edx
		shl    $0x5,%edx
		add    %ecx,%edx
		add    %edx,%edx
		mov    data_eddb0(%edx),%cl
		sub    %cl,0x40(%eax)
		mov    data_eddb1(%edx),%cl
		sub    %cl,0x41(%eax)
		mov    data_eddb2(%edx),%cl
		sub    %cl,0x42(%eax)
		mov    data_eddb3(%edx),%cl
		sub    %cl,0x43(%eax)
		mov    0x44(%eax),%di
		movsbw data_eddb4(%edx),%cx
		sub    %ecx,%edi
		mov    %di,0x44(%eax)
		test   %bx,%bx
		je     jump_182f0
		movsbw data_eddb5(%edx),%dx
		sub    %dx,0x46(%eax)
	jump_182f0:
		movswl %si,%ebx
		mov    %ebx,%edx
		shl    $0x5,%edx
		add    %ebx,%edx
		mov    data_eddb7(,%edx,2),%dl
		sub    %dl,0x59(%eax)
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x11(%eax),%dl
		mov    0x42(%eax),%bl
		mov    data_71b6c(,%edx,8),%dx
		add    %edx,%ebx
		mov    %bx,0x54(%eax)
		cmp    $0x3c,%bx
		jge    jump_18328
		movw   $0x3c,0x54(%eax)
	jump_18328:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1832d:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi
		test   %dx,%dx
		je     jump_1849c
		dec    %edx
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_edd88(%eax),%bl
		cmp    $0x5,%bl
		jg     jump_18358
		mov    $0x1,%al
		jmp    jump_18368
	jump_18358:
		cmp    $0x6,%bl
		je     jump_18362
		cmp    $0x8,%bl
		jne    jump_18366
	jump_18362:
		xor    %al,%al
		jmp    jump_18368
	jump_18366:
		mov    $0x2,%al
	jump_18368:
		movsbw %al,%bx
		cmp    %bx,%si
		je     jump_18386
		push   $data_76f37
	jump_18376:
		call   func_48083
		mov    $0xffffffff,%eax
		add    $0x4,%esp
		pop    %esi
		pop    %ecx
		ret
	jump_18386:
		cmp    $0x1,%al
		jb     jump_18399
		jbe    jump_183a2
		cmp    $0x2,%al
		je     jump_1847e
		jmp    jump_1849c
	jump_18399:
		test   %al,%al
		je     jump_183fe
		jmp    jump_1849c
	jump_183a2:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   func_174cf
		mov    %al,%bl
		mov    data_74124(%ebx),%bl
		movsbl %bl,%eax
		cmp    $0xffffffff,%eax
		jne    jump_183c2
		push   $data_76f52
		jmp    jump_18376
	jump_183c2:
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		cmp    data_edd88(%eax),%bl
		je     jump_183dd
		push   $data_76f75
		jmp    jump_18376
	jump_183dd:
		cmpb   $0x2,data_eddad(%eax)
		jne    jump_1849c
		cmpb   $0x0,0x5a(%ecx)
		je     jump_1849c
		push   $data_76f92
		jmp    jump_18376
	jump_183fe:
		cmpb   $0x0,0x5b(%ecx)
		je     jump_18424
		xor    %ebx,%ebx
		mov    0x5b(%ecx),%bl
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		cmpb   $0x2,data_eddad(,%eax,2)
		jne    jump_18424
		push   $data_76fb4
		jmp    jump_18376
	jump_18424:
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    data_edd88(%eax),%bh
		cmp    $0x6,%bh
		jne    jump_1845a
		xor    %edx,%edx
		mov    0x11(%ecx),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_72795(%eax)
		je     jump_1849c
		push   $data_76fd7
		jmp    jump_18376
	jump_1845a:
		cmp    $0x8,%bh
		jne    jump_1849c
		xor    %edx,%edx
		mov    0x11(%ecx),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpb   $0x2,data_72795(%eax)
		je     jump_1849c
		push   $data_76ff4
		jmp    jump_18376
	jump_1847e:
		movswl %dx,%eax
		mov    %eax,%ecx
		shl    $0x5,%ecx
		add    %eax,%ecx
		cmpb   $0x0,data_eddad(,%ecx,2)
		je     jump_1849c
		push   $data_77018
		jmp    jump_18376
	jump_1849c:
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_184a4:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		test   %ax,%ax
		jne    jump_184b0
		xor    %al,%al
		pop    %ebx
		ret
	jump_184b0:
		movswl %ax,%edx
		dec    %edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		movswl %bx,%edx
		add    $data_edd88,%eax
		mov    (%edx,%eax,1),%al
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_184ca:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		jne    jump_184e3
		movswl %ax,%edx
		dec    %edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $data_edd88,%eax
		inc    %eax
		ret
	jump_184e3:
		cwtl
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $data_edd88,%eax
		add    $0x10,%eax
		ret


/*----------------------------------------------------------------*/
func_184f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		movswl %dx,%ecx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x5b(%ebx),%al
		call   func_184a4
		movsbw %al,%di
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x5a(%ebx),%al
		call   func_184a4
		movsbw %al,%si
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x5d(%ebx),%al
		add    %edi,%esi
		call   func_184a4
		cbtw
		add    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18539:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %eax,%eax
	jump_1853d:
		movswl %ax,%edx
		imul   $0xc,%edx,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,data_f0382(%edx)
		cmp    $0xa,%ax
		jl     jump_1853d
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18555:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x4,%esp
		mov    $0xff,%bl
		xor    %edx,%edx
	jump_18560:
		movswl %dx,%eax
		inc    %edx
		mov    %bl,data_f03f8(,%eax,2)
		cmp    $0xa,%dx
		jl     jump_18560
		xor    %edx,%edx
		mov    %dx,(%esp)
	jump_18577:
		movswl %dx,%ebx
		imul   $0xc,%ebx,%ebx
		cmpb   $0x0,data_f0382(%ebx)
		je     jump_185e4
		mov    data_f037d(%ebx),%eax
		sar    $0x18,%eax
		call   func_10971
		mov    %eax,%ecx
		mov    data_f037e(%ebx),%eax
		sar    $0x18,%eax
		movswl %cx,%esi
		call   func_10988
		cmp    $0xfffffff8,%esi
		jl     jump_185e4
		cmp    $0x130,%cx
		jg     jump_185e4
		movswl %ax,%ecx
		cmp    $0xfffffff1,%ecx
		jl     jump_185e4
		cmp    $0xc7,%ax
		jg     jump_185e4
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0381(%ebx),%bl
		mov    %bl,data_f03f8(,%eax,2)
		mov    (%esp),%ebx
		inc    %ebx
		mov    %dl,data_f03f9(,%eax,2)
		mov    %bx,(%esp)
	jump_185e4:
		inc    %edx
		cmp    $0xa,%dx
		jl     jump_18577
		mov    (%esp),%al
		mov    %al,data_f040c
		mov    data_ba83e,%al
		mov    %al,data_f040d
		add    $0x4,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18605:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    data_e4fc4,%ax
		mov    %ax,0x8(%esp)
		mov    data_ba83a,%ax
		xor    %ebx,%ebx
		mov    %ax,0x4(%esp)
		jmp    jump_1876c
	jump_1862a:
		movswl %bx,%eax
		add    %eax,%eax
		mov    data_f040d,%dl
		cmp    data_f03f8(%eax),%dl
		jne    jump_1876b
		movsbw data_f03f9(%eax),%si
		mov    data_f03f6(%eax),%eax
		sar    $0x18,%eax
		imul   $0xc,%eax,%eax
		movswl %si,%edx
		imul   $0xc,%edx,%edx
		mov    data_f037d(%eax),%eax
		sar    $0x18,%eax
		call   func_10971
		mov    %eax,(%esp)
		mov    data_f037e(%edx),%eax
		sar    $0x18,%eax
		call   func_10988
		mov    %eax,%ecx
		mov    data_f0382(%edx),%al
		cmp    $0xfe,%al
		je     jump_1876b
		cmp    $0xff,%al
		sete   %al
		movswl %si,%edx
		imul   $0xc,%edx,%edx
		movsbw data_f0389(%edx),%si
		xor    %ah,%ah
		test   %si,%si
		jne    jump_18705
		test   %ax,%ax
		jne    jump_18760
		mov    data_f0382(%edx),%al
		dec    %eax
		movswl %ax,%edx
		imul   $0xc,%edx,%edx
		mov    (%esp),%esi
		add    $0x10,%ecx
		add    $0xc,%esi
		mov    0x2(%esp),%eax
		mov    data_efdb4(%edx),%di
		sar    $0x10,%eax
		add    %edi,%esi
		mov    0x4(%esp),%edi
		mov    %si,data_8b2e4(,%eax,8)
		mov    data_efdb2(%edx),%si
		inc    %edi
		sub    %esi,%ecx
		mov    data_efdb8(%edx),%edx
		mov    %cx,data_8b2e6(,%eax,8)
		mov    %di,0x4(%esp)
		mov    %edx,data_8b2e8(,%eax,8)
		jmp    jump_18760
	jump_18705:
		cmp    $0x3,%si
		je     jump_18760
		cmp    $0x2,%si
		jne    jump_18713
		add    %esi,%eax
	jump_18713:
		movswl %ax,%edx
		imul   $0xc,%edx,%edx
		mov    data_efd86(%edx),%ax
		add    $0x6,%eax
		add    %eax,%ecx
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		lea    (%eax,%eax,8),%eax
		mov    (%esp),%esi
		mov    %si,data_e4854(%eax)
		mov    data_efd88(%edx),%edx
		mov    %cx,data_e4856(%eax)
		mov    %edx,data_e4859(%eax)
		mov    0x8(%esp),%edx
		xor    %cl,%cl
		inc    %edx
		mov    %cl,data_e4858(%eax)
		mov    %dx,0x8(%esp)
	jump_18760:
		movswl %bx,%eax
		movb   $0xff,data_f03f8(,%eax,2)
	jump_1876b:
		inc    %ebx
	jump_1876c:
		movsbw data_f040c,%ax
		cmp    %ax,%bx
		jl     jump_1862a
		mov    0x4(%esp),%eax
		mov    %ax,data_ba83a
		mov    0x8(%esp),%eax
		mov    %ax,data_e4fc4
		incb   data_f040d
		add    $0xc,%esp
	jump_1879a:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_187a1:
		.long   func_18861
		.long   func_18864
		.long   func_18867
		.long   func_1886a


/*----------------------------------------------------------------*/
func_187b1:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %al,0x4(%esp)
		mov    %dl,0x8(%esp)
		mov    %ebx,%esi
		xor    %edx,%edx
		mov    %dx,(%esp)
		jmp    jump_18876
	jump_187cc:
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0xc,%ebx,%ebx
		mov    data_f0382(%ebx),%ah
		test   %ah,%ah
		je     jump_18872
		cmp    $0xff,%ah
		je     jump_18872
		mov    data_f0389(%ebx),%dh
		cmp    $0x2,%dh
		je     jump_187fd
		cmp    $0x3,%dh
		jne    jump_18812
	jump_187fd:
		xor    %ebx,%ebx
		mov    0x11(%esi),%bl
		lea    (%ebx,%ebx,8),%ebx
		cmpb   $0x0,data_73b57(%ebx)
		je     jump_18872
	jump_18812:
		movsbw 0x4(%esp),%dx
		movsbw 0x8(%esp),%ax
		xor    %ecx,%ecx
		jmp    jump_1886c
	jump_18822:
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0xc,%ebx,%ebx
		movsbw data_f0380(%ebx),%di
		cmp    %di,%dx
		jne    jump_1884b
		movsbw data_f0381(%ebx),%bx
		cmp    %bx,%ax
		jne    jump_1884b
		mov    (%esp),%eax
		jmp    jump_18886
	jump_1884b:
		mov    0x63(%esi),%bl
		cmp    $0x3,%bl
		ja     jump_1886b
		and    $0xff,%ebx
		jmp    *vtable_187a1(,%ebx,4)


/*----------------------------------------------------------------*/
func_18861:
/*----------------------------------------------------------------*/
		inc    %eax
		jmp    jump_1886b


/*----------------------------------------------------------------*/
func_18864:
/*----------------------------------------------------------------*/
		dec    %edx
		jmp    jump_1886b


/*----------------------------------------------------------------*/
func_18867:
/*----------------------------------------------------------------*/
		dec    %eax
		jmp    jump_1886b


/*----------------------------------------------------------------*/
func_1886a:
/*----------------------------------------------------------------*/
		inc    %edx
	jump_1886b:
		inc    %ecx
	jump_1886c:
		cmp    $0x2,%cx
		jl     jump_18822
	jump_18872:
		incw   (%esp)
	jump_18876:
		cmpw   $0xa,(%esp)
		jl     jump_187cc
		mov    $0xffffffff,%eax
	jump_18886:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1888d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		push   %eax
		push   %edx
		mov    $0x1,%edx
		mov    $0x82,%ebx
		mov    $0xa2,%ecx
		mov    $0xbd,%esi
		mov    $0xb8,%eax
		mov    0x4(%esp),%ebp
		xor    %edi,%edi
		mov    %edx,0x20(%esp)
		mov    %bx,0x2c(%esp)
		mov    %cx,0x24(%esp)
		mov    %si,0x1c(%esp)
		mov    %ax,0x10(%esp)
		add    $0x2,%ebp
		mov    $0x7d,%edx
		mov    $0x92,%ebx
		mov    $0x5d,%ecx
		mov    %dx,0x14(%esp)
		mov    %bx,0x18(%esp)
		mov    %cx,0x28(%esp)
	jump_188ef:
		cmpw   $0x0,0x20(%esp)
		je     jump_18a1a
		mov    0x1a(%esp),%ecx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x130,%ebx
		call   func_454b3
		xor    %eax,%eax
		sar    $0x10,%ecx
		call   func_6104a
		mov    $0x1,%eax
		mov    $0x78,%edx
		call   func_5ecc7
		mov    $0x10,%eax
		call   func_5edde
		mov    0xe(%esp),%ecx
		mov    0x12(%esp),%edx
		mov    $0x130,%ebx
		mov    $0x10,%eax
		sar    $0x10,%ecx
		sar    $0x10,%edx
		call   func_5edde
		mov    $0x1,%eax
		call   func_6104a
		mov    %edi,%eax
		mov    0x18(%esp),%edx
		shl    $0x4,%eax
		add    %edx,%eax
		mov    %eax,%edx
		add    $0x10,%edx
		mov    $0x12a,%ebx
		movswl %dx,%ecx
		movswl %ax,%edx
		mov    $0x18,%eax
		call   func_5edde
		xor    %eax,%eax
		mov    $0x78,%edx
		call   func_5ecc7
		mov    0x4(%esp),%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    0x10(%eax),%bl
		mov    $0x48,%eax
		call   func_48132
		push   %ebp
		mov    0x2a(%esp),%eax
		push   $data_7702c
		sar    $0x10,%eax
		push   %eax
		mov    %ebp,%eax
		mov    $0x48,%edx
		call   w_dos_strlen
		shl    $0x2,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		push   %eax
		call   func_5e048
		add    $0x10,%esp
		mov    0x2a(%esp),%eax
		push   $data_7702f
		sar    $0x10,%eax
		push   %eax
		push   $0x20
		call   func_5e048
		add    $0xc,%esp
		mov    0x16(%esp),%eax
		push   $data_77047
		sar    $0x10,%eax
		push   %eax
		push   $0x20
		call   func_5e048
		add    $0xc,%esp
		mov    0x22(%esp),%eax
		push   $data_7705f
		sar    $0x10,%eax
		push   %eax
		push   $0x20
		call   func_5e048
		add    $0xc,%esp
	jump_18a1a:
		call   func_5d41e
		call   func_5e9e8
	jump_18a24:
		lea    0x8(%esp),%esi
		call   func_5d22e
		call   func_61e7e
		test   %eax,%eax
		je     jump_18a52
		call   w_dos_getch
		mov    %ax,0x8(%esp)
		test   %ax,%ax
		jne    jump_18a52
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,0x8(%esp)
	jump_18a52:
		cmpw   $0x0,0x8(%esp)
		je     jump_18a24
		call   func_5d570
		mov    0x8(%esp),%ecx
		cmp    $0x4800,%cx
		jb     jump_18a75
		jbe    jump_18ab5
		cmp    $0x5000,%cx
		je     jump_18ab5
		jmp    jump_18aca
	jump_18a75:
		cmp    $0x2,%cx
		jne    jump_18aca
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		cmp    $0x92,%eax
		jle    jump_18ad0
		cmp    $0xb2,%eax
		jge    jump_18ad0
		lea    -0x92(%eax),%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x4,%edx
		sbb    %edx,%eax
		sar    $0x4,%eax
		cmp    %di,%ax
		jne    jump_18ab1
		movw   $0xd,0x8(%esp)
		jmp    jump_18ad0
	jump_18ab1:
		mov    %eax,%edi
		jmp    jump_18ad0
	jump_18ab5:
		test   %di,%di
		sete   %al
		mov    $0x1,%edx
		movzbw %al,%di
		mov    %edx,0x20(%esp)
		jmp    jump_18ad0
	jump_18aca:
		xor    %ecx,%ecx
		mov    %ecx,0x20(%esp)
	jump_18ad0:
		mov    0x8(%esp),%eax
		cmp    $0xd,%ax
		je     jump_18aea
		cmp    $0x1b,%ax
		je     jump_18aea
		cmp    $0x3,%ax
		jne    jump_188ef
	jump_18aea:
		call   func_45559
		cmpw   $0xd,0x8(%esp)
		jne    jump_18b23
		test   %di,%di
		jne    jump_18b08
		xor    %eax,%eax
		mov    (%esp),%al
		call   func_4ece4
		jmp    jump_18b1c
	jump_18b08:
		mov    0x4(%esp),%edx
		xor    %eax,%eax
		mov    0x5f(%edx),%al
		call   func_4ece4
		mov    (%esp),%al
		mov    %al,0x5f(%edx)
	jump_18b1c:
		mov    $0x1,%eax
		jmp    jump_18b25
	jump_18b23:
		xor    %eax,%eax
	jump_18b25:
		add    $0x30,%esp
	jump_18b28:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18b2e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    0x77(%eax),%edx
		mov    %eax,%ecx
		test   %edx,%edx
		je     jump_18b4f
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    0x1(%ecx),%al
		mov    %edx,0x4(%esp)
		mov    %al,0x1(%edx)
	jump_18b4f:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    data_f0382(%eax),%dl
		mov    $data_fa784,%ebp
		cmp    $0x96,%dl
		jae    jump_18c0a
		mov    0x4(%esp),%edx
		cmpb   $0x0,0x5e(%edx)
		jne    jump_18b89
		mov    data_f0382(%eax),%al
		mov    %al,0x5e(%edx)
		jmp    jump_18bb4
	jump_18b89:
		cmpb   $0x0,0x5f(%edx)
		jne    jump_18b9a
		mov    data_f0382(%eax),%al
		mov    %al,0x5f(%edx)
		jmp    jump_18bb4
	jump_18b9a:
		xor    %edx,%edx
		mov    data_f0382(%eax),%dl
		mov    0x4(%esp),%eax
		call   func_1888d
		test   %ax,%ax
		je     jump_18d2e
	jump_18bb4:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		mov    $data_7707f,%esi
		shl    $0x2,%eax
		mov    %ebp,%edi
		sub    %edx,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    data_f0382(,%eax,4),%dl
		dec    %edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $data_edd88,%eax
		lea    0x1(%eax),%edx
		mov    %ebp,%eax
		call   w_dos_strcat
		mov    $data_77082,%edx
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   w_dos_strcat
		mov    0x4(%esp),%eax
		mov    %ebp,%edx
		call   func_482a5
	jump_18c0a:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		movb   $0x0,0x0(%ebp)
		cmpw   $0x0,data_f0383(%ebx)
		je     jump_18c5e
		mov    $data_7708b,%edx
		mov    %ebp,%eax
		call   w_dos_strcat
		mov    %ebp,%eax
		call   w_dos_strlen
		lea    (%eax,%ebp,1),%edx
		mov    data_f0381(%ebx),%eax
		mov    $0xa,%ebx
		sar    $0x10,%eax
		call   func_itoa_
		mov    $data_77093,%edx
		mov    %ebp,%eax
		call   w_dos_strcat
	jump_18c5e:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		mov    data_f0383(%edx),%ax
		mov    data_f0385(%edx),%ebx
		mov    %ax,0x8(%esp)
		test   %ebx,%ebx
		je     jump_18caf
		mov    %ebp,%eax
		mov    $0xa,%ebx
		call   w_dos_strlen
		lea    (%eax,%ebp,1),%esi
		mov    data_f0385(%edx),%eax
		mov    %esi,%edx
		call   func_ltoa_
		mov    $data_7709e,%edx
		mov    %ebp,%eax
		call   w_dos_strcat
	jump_18caf:
		cmpb   $0x0,0x0(%ebp)
		je     jump_18cc5
		mov    $0x1,%ebx
		mov    0x4(%esp),%eax
		mov    %ebp,%edx
		call   func_482a5
	jump_18cc5:
		cmpw   $0x0,0x8(%esp)
		jle    jump_18d07
		mov    0x8(%esp),%al
		mov    0x3d(%ecx),%ah
		add    %al,%ah
		mov    0x77(%ecx),%esi
		mov    %ah,0x3d(%ecx)
		test   %esi,%esi
		je     jump_18ce3
		mov    %ah,0x3d(%esi)
	jump_18ce3:
		cmpb   $0x64,0x3d(%ecx)
		jb     jump_18cfa
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x64,0x3d(%ecx)
		call   func_17a20
		movb   $0x0,0x3d(%ecx)
	jump_18cfa:
		mov    0x77(%ecx),%edi
		test   %edi,%edi
		je     jump_18d07
		mov    0x3d(%ecx),%dl
		mov    %dl,0x3d(%edi)
	jump_18d07:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movb   $0xff,data_f0382(,%eax,4)
		mov    data_f0388(,%eax,4),%eax
		sar    $0x10,%eax
		movb   $0x1,data_fe04f(%eax)
	jump_18d2e:
		add    $0xc,%esp
		jmp    jump_18b28


/*----------------------------------------------------------------*/
func_18d36:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x11(%eax),%ah
		xor    %ebx,%ebx
		cmp    $0xc,%ah
		setae  %al
		xor    %esi,%esi
		mov    %al,%bl
		call   func_13f8a
		mov    $0xff,%cl
		jmp    jump_18d76
	jump_18d55:
		mov    data_f040e,%dx
	jump_18d5c:
		inc    %edx
		cmp    $0xa,%dx
		jl     jump_18d9e
	jump_18d63:
		cmp    $0xa,%dx
		jl     jump_18d7c
		mov    $0xffffffff,%edx
		inc    %esi
		mov    %dx,data_f040e
	jump_18d76:
		cmp    $0x2,%si
		jl     jump_18d55
	jump_18d7c:
		cmp    $0x2,%si
		jne    jump_18dcf
		push   $data_770a9
		call   func_48083
		add    $0x4,%esp
		mov    $0x1f4,%eax
		call   func_499ef
		jmp    jump_1879a
	jump_18d9e:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_f0382(%eax),%ch
		test   %ch,%ch
		je     jump_18d5c
		cmp    %ch,%cl
		je     jump_18d5c
		mov    data_f0389(%eax),%ch
		test   %ch,%ch
		je     jump_18dc6
		cmp    $0x3,%ch
		jne    jump_18d5c
		test   %bx,%bx
		jle    jump_18d5c
	jump_18dc6:
		mov    %dx,data_f040e
		jmp    jump_18d63
	jump_18dcf:
		mov    data_f040c,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $0x1,%ecx
		mov    data_f037e(,%eax,4),%edx
		mov    data_f037d(,%eax,4),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		mov    %ecx,%ebx
		call   func_1124a
		call   func_4a321
		mov    $0x5,%edx
		mov    %edi,%eax
		call   func_49e4e
		mov    $0x1,%eax
		call   func_44d6e
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f040c,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_f037d(,%eax,4),%eax
		sar    $0x18,%eax
		call   func_10971
		mov    data_f040c,%edi
		sar    $0x10,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		mov    data_f037e(,%eax,4),%eax
		sar    $0x18,%eax
		call   func_10988
		mov    %eax,%ebx
		mov    $0x1,%eax
		call   func_5ecc7
		mov    $0xa,%eax
		call   func_6104a
		mov    %ebx,%eax
		add    $0x10,%eax
		movswl %ax,%ecx
		mov    %edx,%eax
		add    $0x18,%eax
		movswl %bx,%esi
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
		mov    data_f040c,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_f037e(,%eax,4),%edx
		mov    data_f037d(,%eax,4),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_49eee
		call   func_5e9e8
		xor    %eax,%eax
		call   func_44d6e
		mov    $0x1f4,%eax
		call   func_499ef
		call   func_13f8a
		jmp    jump_1879a


/*----------------------------------------------------------------*/
func_18ef9:
/*----------------------------------------------------------------*/
		cmp    $0x4,%al
		je     jump_18f49
		cmp    $0xc,%al
		je     jump_18f49
		cmp    $0x16,%al
		je     jump_18f49
		cmp    $0x19,%al
		je     jump_18f49
		cmp    $0x1a,%al
		je     jump_18f49
		cmp    $0x1b,%al
		je     jump_18f49
		cmp    $0x1c,%al
		je     jump_18f49
		cmp    $0x1d,%al
		je     jump_18f49
		cmp    $0x20,%al
		je     jump_18f49
		cmp    $0x22,%al
		je     jump_18f49
		cmp    $0x23,%al
		je     jump_18f49
		cmp    $0x24,%al
		je     jump_18f49
		cmp    $0x2c,%al
		je     jump_18f49
		cmp    $0x31,%al
		je     jump_18f49
		cmp    $0x37,%al
		je     jump_18f49
		cmp    $0x3c,%al
		je     jump_18f49
		cmp    $0x43,%al
		je     jump_18f49
		cmp    $0x46,%al
		jne    jump_18f4f
	jump_18f49:
		mov    $0x1,%eax
		ret
	jump_18f4f:
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_18f52:
/*----------------------------------------------------------------*/
		cmp    $0x24,%al
		jb     jump_18f89
		jbe    jump_18fab
		cmp    $0x3b,%al
		jb     jump_18f7f
		jbe    jump_18fab
		cmp    $0x42,%al
		jb     jump_18f79
		jbe    jump_18fb4
		cmp    $0x43,%al
		je     jump_18fab
		jmp    jump_18fc0
	jump_18f79:
		cmp    $0x3c,%al
	jump_18f7b:
		je     jump_18fb4
		jmp    jump_18fc0
	jump_18f7f:
		cmp    $0x2d,%al
		jb     jump_18fc0
		jbe    jump_18fab
		cmp    $0x30,%al
		jmp    jump_18f7b
	jump_18f89:
		cmp    $0x16,%al
		jb     jump_18fa1
		jbe    jump_18fb4
		cmp    $0x1b,%al
		jb     jump_18f9b
		jbe    jump_18fba
		cmp    $0x20,%al
	jump_18f97:
		je     jump_18fae
		jmp    jump_18fc0
	jump_18f9b:
		cmp    $0x18,%al
		je     jump_18fba
		jmp    jump_18fc0
	jump_18fa1:
		cmp    $0x10,%al
		jb     jump_18fc0
		jbe    jump_18fb4
		cmp    $0x13,%al
		jmp    jump_18f97
	jump_18fab:
		xor    %eax,%eax
		ret
	jump_18fae:
		mov    $0x1,%eax
		ret
	jump_18fb4:
		mov    $0x2,%eax
		ret
	jump_18fba:
		mov    $0x3,%eax
		ret
	jump_18fc0:
		mov    $0xffffffff,%eax
		ret


/*----------------------------------------------------------------*/
func_18fc6:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %bx,0x8(%esp)
		mov    %cx,0x4(%esp)
		xor    %edx,%edx
		mov    %dx,0xc(%esp)
		jmp    jump_1904b
	jump_18fe2:
		mov    0xa(%esp),%edi
		mov    0x2(%esp),%eax
		mov    0x6(%esp),%ecx
		mov    %ebp,%ebx
		sar    $0x10,%edi
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		mov    data_f0648(,%edi,4),%esi
		mov    0x4(%esp),%eax
		mov    %esi,%edx
		call   func_285e4
		mov    0x48(%esi),%edx
		sub    %eax,%edx
		mov    0xc(%esp),%ecx
		mov    %edx,0x48(%esi)
		cmp    0x20(%esp),%cx
		jl     jump_19046
		mov    %edi,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_45bfb
		mov    %edi,%ebx
		mov    0x60(%esi),%edx
		mov    %esi,%eax
		sar    $0x18,%edx
		mov    $0xffffffff,%esi
		call   func_45ed2
		mov    %si,data_f0430(,%edi,2)
	jump_19046:
		incw   0xc(%esp)
	jump_1904b:
		mov    0xc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_18fe2
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_19061:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		movswl %bx,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_19079:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_190bf
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_19079
		mov    0xb(%eax),%edx
		sar    $0x18,%edx
		movsbl %cl,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_19079
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_19079
	jump_190bf:
		add    $0x8,%esp
		ret


/*----------------------------------------------------------------*/
func_190c3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %esp,%edi
		mov    $func_1810d,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsbw (%eax),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %ax,0xc(%esp)
		mov    0x60(%ebp),%ebx
		sar    $0x18,%ebx
		push   $0xa
		movsbw 0x5(%esp,%ebx,2),%dx
		mov    0xc(%esp),%esi
		add    %eax,%edx
		movsbw 0x4(%esp,%ebx,2),%ax
		mov    $0x3,%ecx
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		call   func_1a452
	jump_19114:
		lea    0xc(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1915f
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_19114
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_19114
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_19114
	jump_1915f:
		add    $0x10,%esp
		pop    %ebp
		jmp    jump_1879a


/*----------------------------------------------------------------*/
func_19168:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    data_ba83e,%ax
		add    $0x6,%eax
		mov    %ax,0x4(%esp)
		mov    data_f0b9e,%ax
		mov    data_ba83c,%di
		mov    %ax,(%esp)
		mov    0x5b(%esi),%al
		add    $0x6,%edi
		cmp    $0x28,%al
		jb     jump_191e8
		jbe    jump_192f4
		cmp    $0x31,%al
		jb     jump_191cd
		jbe    jump_19501
		cmp    $0x43,%al
		jb     jump_191c0
		jbe    jump_1944c
		cmp    $0x46,%al
		je     jump_19224
		jmp    jump_19597
	jump_191c0:
		cmp    $0x3b,%al
		je     jump_1954e
		jmp    jump_19597
	jump_191cd:
		cmp    $0x2d,%al
		jb     jump_19597
		jbe    jump_1944c
		cmp    $0x30,%al
		je     jump_194a7
		jmp    jump_19597
	jump_191e8:
		cmp    $0x1b,%al
		jb     jump_19216
		jbe    jump_192f4
		cmp    $0x22,%al
		jb     jump_19209
		jbe    jump_192f4
		cmp    $0x24,%al
		je     jump_193d4
		jmp    jump_19597
	jump_19209:
		cmp    $0x1d,%al
		je     jump_19368
		jmp    jump_19597
	jump_19216:
		cmp    $0x19,%al
		jb     jump_19597
		ja     jump_19297
	jump_19224:
		mov    $0x32,%edx
		mov    $data_770b7,%eax
		call   func_4f460
		xor    %ecx,%ecx
		jmp    jump_19288
	jump_19237:
		movswl %cx,%ebx
		shl    $0x2,%ebx
		mov    data_f0648(%ebx),%edx
		test   %edx,%edx
		je     jump_19287
		mov    0xb(%edx),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_19287
		mov    data_f0648(%ebx),%eax
		cmpb   $0x2,0xd(%eax)
		jne    jump_19287
		call   func_59675
		mov    data_f0648(%ebx),%eax
		call   func_12124
		mov    data_f0648(%ebx),%eax
		movl   $0xffffffff,0x48(%eax)
	jump_19287:
		inc    %ecx
	jump_19288:
		cmp    data_f0b9e,%cx
		jge    jump_19597
		jmp    jump_19237
	jump_19297:
		mov    $0x32,%edx
		mov    $data_770c4,%eax
		mov    $0x5,%ebx
		call   func_4f460
		mov    0xb(%esi),%ecx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ecx
		call   func_19061
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_241f7
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x2,%ecx
		sar    $0x10,%eax
		mov    $0x32,%ebx
		push   %eax
		mov    $0x6590,%edx
		jmp    jump_19590
	jump_192f4:
		mov    $0x32,%edx
		mov    $data_770d1,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_770dc,%eax
		xor    %ecx,%ecx
		call   func_4f460
		jmp    jump_19359
	jump_19316:
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_19358
		movswl %cx,%esi
		shl    $0x2,%esi
		mov    data_f0648(%esi),%ebx
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_19358
		cmpb   $0x32,0x43(%ebx)
		jae    jump_19358
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_26c9a
		mov    data_f0648(%esi),%eax
		movl   $0xffffffff,0x48(%eax)
	jump_19358:
		inc    %ecx
	jump_19359:
		cmp    data_f0b9e,%cx
		jge    jump_19597
		jmp    jump_19316
	jump_19368:
		mov    $0x32,%edx
		mov    $data_770e7,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_770f2,%eax
		mov    $0x3,%ebx
		call   func_4f460
		mov    0xb(%esi),%ecx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ecx
		call   func_19061
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_276b9
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x3,%ecx
		sar    $0x10,%eax
		mov    $0x46,%ebx
		push   %eax
		mov    $0x7530,%edx
		jmp    jump_19590
	jump_193d4:
		mov    $0x32,%edx
		mov    $data_770ff,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77108,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77113,%eax
		mov    $0x5,%ebx
		call   func_4f460
		mov    0xb(%esi),%ecx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ecx
		call   func_19061
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_56896
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x32,%ebx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    $0x61a8,%edx
		jmp    jump_19590
	jump_1944c:
		mov    $0x32,%edx
		mov    $data_7711c,%eax
		call   func_4f460
		xor    %ebx,%ebx
		jmp    jump_19476
	jump_1945f:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		inc    %ebx
		call   func_203cc
	jump_19476:
		cmp    data_f0b9e,%bx
		jl     jump_1945f
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x14,%ebx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    $0x1770,%edx
		jmp    jump_19590
	jump_194a7:
		mov    $0x32,%edx
		mov    $data_770c4,%eax
		mov    $0x3,%ebx
		call   func_4f460
		mov    0xb(%esi),%ecx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ecx
		call   func_19061
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_241f7
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x2,%ecx
		sar    $0x10,%eax
		mov    $0x32,%ebx
		push   %eax
		mov    $0x5dc0,%edx
		jmp    jump_19590
	jump_19501:
		mov    $0x32,%edx
		mov    $data_770b7,%eax
		call   func_4f460
		xor    %ecx,%ecx
		jmp    jump_19543
	jump_19514:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%eax
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_26b1f
		mov    data_f0648(,%ebx,4),%eax
		orb    $0x20,0x1e(%eax)
		mov    data_f0648(,%ebx,4),%eax
		inc    %ecx
		movw   $0x3c,0x25(%eax)
	jump_19543:
		cmp    data_f0b9e,%cx
		jge    jump_19597
		jmp    jump_19514
	jump_1954e:
		mov    $0x32,%edx
		mov    $data_77128,%eax
		call   func_4f460
		mov    %esi,%eax
		call   func_190c3
		xor    %edx,%edx
		mov    %esi,%eax
		call   func_215fe
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		mov    -0x2(%esp),%eax
		mov    $0x1e,%ebx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    $0x3a98,%edx
	jump_19590:
		mov    %esi,%eax
		call   func_18fc6
	jump_19597:
		mov    0x2(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_1124a
		add    $0x8,%esp
		jmp    jump_1879a


/*----------------------------------------------------------------*/
func_195ae:
/*----------------------------------------------------------------*/
		mov    0x5b(%eax),%al
		cmp    $0x28,%al
		jb     jump_195df
		jbe    jump_195f7
		cmp    $0x3b,%al
		jb     jump_195ce
		jbe    jump_195f7
		cmp    $0x43,%al
		jb     jump_195fd
		jbe    jump_195f7
		cmp    $0x46,%al
	jump_195c9:
		je     jump_195f7
		xor    %eax,%eax
		ret
	jump_195ce:
		cmp    $0x2d,%al
		jb     jump_195fd
		jbe    jump_195f7
		cmp    $0x30,%al
		jb     jump_195fd
		cmp    $0x31,%al
		jbe    jump_195f7
		xor    %eax,%eax
		ret
	jump_195df:
		cmp    $0x1d,%al
		jb     jump_195ef
		jbe    jump_195f7
		cmp    $0x22,%al
		jb     jump_195fd
		jbe    jump_195f7
		cmp    $0x24,%al
		jmp    jump_195c9
	jump_195ef:
		cmp    $0x19,%al
		jb     jump_195fd
		cmp    $0x1b,%al
		ja     jump_195fd
	jump_195f7:
		mov    $0x1,%eax
		ret
	jump_195fd:
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_19600:
/*----------------------------------------------------------------*/
		cmp    $0x20,%ax
		jb     jump_1962b
		cmp    $0x24,%ax
		jbe    jump_19643
		cmp    $0x46,%ax
		jb     jump_19625
		jbe    jump_19643
		cmp    $0x67,%ax
		jb     jump_19649
		jbe    jump_19643
		cmp    $0x78,%ax
	jump_19620:
		je     jump_19643
		xor    %eax,%eax
		ret
	jump_19625:
		cmp    $0x3c,%ax
		jmp    jump_19620
	jump_1962b:
		cmp    $0x19,%ax
		jb     jump_1963d
		cmp    $0x1a,%ax
		jbe    jump_19643
		cmp    $0x1d,%ax
		jmp    jump_19620
	jump_1963d:
		cmp    $0x16,%ax
		jne    jump_19649
	jump_19643:
		mov    $0x1,%eax
		ret
	jump_19649:
		xor    %eax,%eax
		ret
.data
data_1964c:
		.ascii  "\x01\x02\x04\x08\x10\x80"
.text


/*----------------------------------------------------------------*/
func_19652:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
	jump_19658:
		mov    data_f041c,%edx
		test   %edx,%edx
		je     jump_19674
		mov    %edx,%eax
		mov    0x4(%edx),%edx
		mov    %edx,data_f041c
		call   w_dos_free
		jmp    jump_19658
	jump_19674:
		mov    $0xffffffff,%edi
		mov    $0xa,%ah
		mov    %edx,data_f0414
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %esi,%esi
		mov    %ebx,data_f0418
		mov    %edi,data_74134
		mov    %ah,data_74138
		mov    %cx,data_f0424
		mov    %ebp,data_f0410
		xor    %edx,%edx
		mov    %si,data_f0420
		mov    %dx,data_f0426
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %bx,data_f0422
		mov    %dl,data_f042e
	jump_196c9:
		pop    %ebp
	jump_196ca:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_196d0:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
#if 1
    /* Workaround for %eax is 0 on quick load.
     * I do not know why %eax is 0.
     */
    test   %eax,%eax
    je     jump_19716
#endif
		cmpb   $0x1,0xe(%eax)
		jne    jump_19716
		mov    $0x8,%eax
		call   w_dos_malloc
		movl   $0x0,0x4(%eax)
		mov    %edx,(%eax)
		cmpl   $0x0,data_f041c
		jne    jump_19701
		mov    %eax,data_f0414
		mov    %eax,data_f041c
		jmp    jump_1970f
	jump_19701:
		mov    data_f0414,%edx
		mov    %eax,0x4(%edx)
		mov    %eax,data_f0414
	jump_1970f:
		incw   data_f0426
	jump_19716:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_19718:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    data_f041c,%edx
		test   %edx,%edx
		je     jump_19774
		mov    (%edx),%esi
		mov    %edx,%ecx
		cmp    %esi,%eax
		jne    jump_19747
		mov    %edx,%eax
		mov    0x4(%edx),%edx
		mov    %edx,data_f041c
		test   %edx,%edx
		jne    jump_19768
	jump_1973f:
		mov    %edx,data_f0414
		jmp    jump_19768
	jump_19747:
		mov    0x4(%edx),%eax
#if 1
    /* Workaround code when %eax is 0.
     * I do not know why %eax is 0.
     */
    test   %eax,%eax
    je     jump_19774
#endif
	jump_1974a:
		cmp    (%eax),%ebx
		je     jump_19759
		test   %eax,%eax
		je     jump_19774
		mov    %eax,%edx
		mov    0x4(%eax),%eax
#if 1
    /* Workaround code when %eax is 0.
     * I do not know why %eax is 0.
     */
    test   %eax,%eax
    je     jump_19774
#endif
		jmp    jump_1974a
	jump_19759:
		mov    0x4(%eax),%esi
		test   %esi,%esi
		jne    jump_19765
		mov    %esi,0x4(%edx)
		jmp    jump_1973f
	jump_19765:
		mov    %esi,0x4(%edx)
	jump_19768:
		call   w_dos_free
		decw   data_f0426
	jump_19774:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19779:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    data_f041c,%eax
		jmp    jump_1978b
	jump_19783:
		test   %eax,%eax
		je     jump_19790
		dec    %edx
		mov    0x4(%eax),%eax
	jump_1978b:
		test   %dx,%dx
		jg     jump_19783
	jump_19790:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_19792:
/*----------------------------------------------------------------*/
		cmpl   $0x0,data_f041c
	jump_19799:
		setne  %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_1979f:
/*----------------------------------------------------------------*/
		cwtl
		call   func_19779
		test   %eax,%eax
		jne    jump_197aa
		ret
	jump_197aa:
		mov    (%eax),%eax
		ret


/*----------------------------------------------------------------*/
func_197ad:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_19718
		movb   $0x0,0x56(%edx)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_197bb:
/*----------------------------------------------------------------*/
		mov    data_fdf82,%ax
		ret


/*----------------------------------------------------------------*/
func_197c2:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    data_fdf84,%al
		ret


/*----------------------------------------------------------------*/
func_197ca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    data_fdf84,%dl
		inc    %edx
		mov    $0x10,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,data_fdf84
		cmp    $0x8,%dl
		jne    jump_197f6
		incw   data_fdf82
	jump_197f6:
		cmpb   $0x3,data_ba84e
		je     jump_196ca
		cmpb   $0x8,data_fdf84
		jae    jump_19827
		xor    %edx,%edx
		mov    data_fdf84,%dl
		imul   $0x6,%edx,%edx
		mov    $0x64,%ecx
		sub    %edx,%ecx
		mov    %cx,data_f042c
		jmp    jump_1983f
	jump_19827:
		xor    %edx,%edx
		mov    data_fdf84,%dl
		sub    $0x8,%edx
		imul   $0x6,%edx,%edx
		add    $0x34,%edx
		mov    %dx,data_f042c
	jump_1983f:
		mov    $0x300,%ecx
		mov    $data_f9188,%esi
		mov    $data_12824c,%edi
		mov    $0x100,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    data_f042a,%ecx
		mov    %edi,%ebx
		xor    %eax,%eax
		sar    $0x10,%ecx
		call   func_5fa2c
		mov    $0x100,%edx
		mov    %edi,%ebx
		xor    %eax,%eax
		call   func_5f945
		call   func_6004e
		call   func_60275
		jmp    jump_196ca


/*----------------------------------------------------------------*/
func_19892:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x0,0x15(%eax)
		je     jump_198d3
		xor    %ebx,%ebx
	jump_198a1:
		movswl %bx,%esi
		lea    (%esi,%esi,1),%eax
		add    %edx,%eax
		mov    0x16(%eax),%cx
		test   %cx,%cx
		jne    jump_198c3
		mov    data_74139(%esi),%cl
		and    %cl,0x15(%edx)
		movw   $0xffff,0x16(%eax)
		jmp    jump_198cc
	jump_198c3:
		jle    jump_198cc
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x16(%eax)
	jump_198cc:
		inc    %ebx
		cmp    $0x4,%bx
		jl     jump_198a1
	jump_198d3:
		cmpb   $0x0,0x1e(%edx)
		je     jump_196ca
		xor    %ebx,%ebx
	jump_198df:
		movswl %bx,%eax
		add    %eax,%eax
		add    %edx,%eax
		mov    0x1f(%eax),%cx
		test   %cx,%cx
		jne    jump_19918
		testb  $0x40,0x1e(%edx)
		je     jump_19903
		mov    0x5f(%edx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%edx)
	jump_19903:
		movswl %bx,%eax
		mov    data_7413d(%eax),%cl
		and    %cl,0x1e(%edx)
		movw   $0xffff,0x1f(%edx,%eax,2)
		jmp    jump_19921
	jump_19918:
		jle    jump_19921
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x1f(%eax)
	jump_19921:
		inc    %ebx
		cmp    $0x5,%bx
		jl     jump_198df
		jmp    jump_196ca


/*----------------------------------------------------------------*/
func_1992d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    %esp,%edi
		mov    $data_1964c,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    0x23(%eax),%edx
		sar    $0x10,%edx
		mov    $0xa,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_199a2
		testb  $0x20,0x1e(%ecx)
		je     jump_199a2
		mov    $0x6,%eax
		call   func_499bd
		mov    %eax,%esi
		cmp    $0x3,%ax
		jge    jump_19981
		mov    0x1e(%ecx),%dl
		movw   $0x32,0x1f(%ecx)
		and    $0xf8,%dl
		mov    %dl,0x1e(%ecx)
		jmp    jump_19999
	jump_19981:
		cmp    $0x5,%ax
		je     jump_19993
		movswl %ax,%edx
		movw   $0x32,0x1b(%ecx,%edx,2)
		jmp    jump_19999
	jump_19993:
		movw   $0x32,0x27(%ecx)
	jump_19999:
		movswl %si,%edx
		mov    (%esp,%edx,1),%al
		or     %al,0x1e(%ecx)
	jump_199a2:
		mov    0x1e(%ecx),%al
		test   $0x2,%al
		je     jump_199af
		movb   $0x0,0x56(%ecx)
		jmp    jump_199cc
	jump_199af:
		test   $0x4,%al
		je     jump_199cc
		testb  $0x1,0x1f(%ecx)
		je     jump_199cc
		mov    0x56(%ecx),%dh
		test   %dh,%dh
		jbe    jump_199cc
		cmp    $0xff,%dh
		je     jump_199cc
		mov    %dh,%ah
		dec    %ah
		mov    %ah,0x56(%ecx)
	jump_199cc:
		cmpb   $0xff,0x56(%ecx)
		je     jump_199dc
	jump_199d2:
		mov    $0xffffffff,%eax
		jmp    jump_19ae7
	jump_199dc:
		mov    $0xffffffff,%eax
		mov    0x1e(%ecx),%dh
		xor    %esi,%esi
		test   $0x1,%dh
		je     jump_19a0f
		xor    %eax,%eax
		mov    $0x64,%edx
		mov    0x59(%ecx),%al
		sub    %eax,%edx
		imul   $0x5dc,%edx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		jmp    jump_19a39
	jump_19a0f:
		test   $0x4,%dh
		je     jump_19a39
		xor    %eax,%eax
		mov    $0x64,%edx
		mov    0x59(%ecx),%al
		sub    %eax,%edx
		imul   $0x5dc,%edx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%esi
		mov    $0x2,%eax
	jump_19a39:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     jump_19a5b
		mov    %ecx,%eax
		call   func_1762c
		mov    %esi,%edx
		imul   %eax,%edx
		mov    $0xa,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%esi
	jump_19a5b:
		testb  $0x80,0x1e(%ecx)
		je     jump_19a67
		add    $0x320,%esi
	jump_19a67:
		test   %esi,%esi
		je     jump_199d2
		sub    %esi,0x48(%ecx)
		movsbw (%ecx),%ax
		cmp    data_ba83c,%ax
		jl     jump_199d2
		mov    data_ba83a,%eax
		sar    $0x10,%eax
		movsbl (%ecx),%edx
		add    $0xd,%eax
		cmp    %eax,%edx
		jg     jump_199d2
		mov    data_ba83e,%di
		movsbw 0x1(%ecx),%ax
		cmp    %di,%ax
		jl     jump_199d2
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movsbl 0x1(%ecx),%edx
		add    $0xd,%eax
		cmp    %eax,%edx
		jg     jump_199d2
		movswl %bx,%edi
		mov    %esi,%edx
		mov    %ecx,%eax
		mov    %edi,%ebx
		call   func_45bfb
		mov    %edi,%ebx
		mov    0x60(%ecx),%edx
		mov    %ecx,%eax
		sar    $0x18,%edx
		call   func_45ed2
		mov    $0x1,%eax
	jump_19ae7:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19aef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %dx,data_f0b9e
		mov    $0x3,%ebp
		xor    %edi,%edi
	jump_19b0a:
		movswl %si,%eax
		mov    data_cc96c(,%eax,8),%edx
		push   %edx
		mov    data_cc968(,%eax,8),%ebx
		push   %ebx
		call   func_113dd
		mov    %eax,%ebx
	jump_19b24:
		test   %ebx,%ebx
		je     jump_19c77
		cmpb   $0xa2,0x11(%ebx)
		jne    jump_19b37
		mov    0x7b(%ebx),%ebx
		jmp    jump_19b24
	jump_19b37:
		mov    0x56(%ebx),%dl
		mov    0x7b(%ebx),%ecx
		cmp    $0xff,%dl
		je     jump_19c1d
		mov    %dl,%dh
		inc    %dh
		xor    %eax,%eax
		mov    %dh,0x56(%ebx)
		mov    0x11(%ebx),%al
		mov    0x15(%ebx),%dl
		mov    data_71b6e(,%eax,8),%ax
		test   $0x10,%dl
		je     jump_19b71
		movswl %ax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		inc    %eax
		jmp    jump_19b7a
	jump_19b71:
		testb  $0x2,0x14(%ebx)
		je     jump_19b7a
		sar    %ax
	jump_19b7a:
		xor    %edx,%edx
		mov    0x56(%ebx),%dl
		cmp    %ax,%dx
		jl     jump_19c1d
		mov    0x14(%ebx),%al
		movb   $0xff,0x56(%ebx)
		and    $0xfb,%al
		mov    %al,0x14(%ebx)
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		movb   $0x0,0x13(%ebx)
		lea    (%eax,%eax,8),%eax
		movb   $0x0,0x64(%ebx)
		cmpb   $0x1,data_73b5f(%eax)
		jne    jump_19c01
		mov    0x4c(%ebx),%eax
		mov    0x48(%ebx),%edx
		sar    %eax
		cmp    %edx,%eax
		jle    jump_19c01
		movw   $0x1e,0x18(%ebx)
		mov    0x15(%ebx),%dh
		movw   $0x1e,0x1a(%ebx)
		or     $0x18,%dh
		mov    %ebp,%eax
		mov    %dh,0x15(%ebx)
		call   func_499bd
		test   %ax,%ax
		je     jump_19beb
		mov    0x15(%ebx),%ah
		movw   $0x1e,0x1c(%ebx)
		or     $0x40,%ah
		mov    %ah,0x15(%ebx)
		jmp    jump_19c01
	jump_19beb:
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_19c01
		mov    0x15(%ebx),%al
		movw   $0x1e,0x1c(%ebx)
		or     $0xe0,%al
		mov    %al,0x15(%ebx)
	jump_19c01:
		cmpb   $0x1,0xe(%ebx)
		jne    jump_19c1d
		cmpb   $0x0,0x83(%ebx)
		jne    jump_19c1d
		testb  $0x10,0x1e(%ebx)
		jne    jump_19c1d
		mov    %ebx,%eax
		call   func_196d0
	jump_19c1d:
		testb  $0x40,0x15(%ebx)
		je     jump_19c27
		andb   $0xf8,0x1e(%ebx)
	jump_19c27:
		cmpb   $0x0,0x1e(%ebx)
		je     jump_19c5c
		mov    data_f0b9c,%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_1992d
		cmp    $0x1,%ax
		jne    jump_19c5c
		mov    data_f0b9e,%dx
		movswl %dx,%eax
		inc    %edx
		mov    %ebx,data_f0648(,%eax,4)
		mov    %dx,data_f0b9e
	jump_19c5c:
		mov    %ebx,%eax
		call   func_19892
		cmpb   $0xff,0x56(%ebx)
		jne    jump_19c70
		mov    %ebx,%eax
		call   func_17310
	jump_19c70:
		mov    %ecx,%ebx
		jmp    jump_19b24
	jump_19c77:
		inc    %esi
		cmp    $0x4,%si
		jl     jump_19b0a
		cmpw   $0x0,data_f0b9e
		je     jump_19d3f
		xor    %ecx,%ecx
		mov    %cx,(%esp)
	jump_19c96:
		xor    %ecx,%ecx
		mov    %cx,0x4(%esp)
		jmp    jump_19ce1
	jump_19c9f:
		mov    -0x2(%esp),%edi
		mov    0x2(%esp),%esi
		sar    $0x10,%edi
		sar    $0x10,%esi
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    data_f0648(,%esi,4),%eax
		call   func_45f29
		mov    data_f0648(,%esi,4),%eax
		mov    0xb(%eax),%edx
		sar    $0x18,%edx
		mov    data_70a5f(%edx),%ecx
		mov    %edi,%ebx
		sar    $0x18,%ecx
		mov    %esi,%edx
		call   func_45ccb
		incw   0x4(%esp)
	jump_19ce1:
		mov    0x4(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_19c9f
		call   func_5e9e8
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    (%esp),%edx
		inc    %edx
		mov    %dx,(%esp)
		cmp    $0x19,%dx
		jl     jump_19c96
		xor    %edx,%edx
		jmp    jump_19d2f
	jump_19d1f:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_19d2f:
		cmp    data_f0b9e,%dx
		jl     jump_19d1f
		xor    %eax,%eax
		call   func_1ed90
	jump_19d3f:
		add    $0x8,%esp
		jmp    jump_196c9


/*----------------------------------------------------------------*/
func_19d47:
/*----------------------------------------------------------------*/
		mov    data_f0418,%eax
		ret


/*----------------------------------------------------------------*/
func_19d4d:
/*----------------------------------------------------------------*/
		mov    %eax,data_f0418
		ret


/*----------------------------------------------------------------*/
func_19d53:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x2,data_f042e
		jne    jump_19d69
		movb   $0x3,data_f042e
	jump_19d69:
		cmpb   $0x0,data_f042e
		je     jump_19d7c
		mov    $0x1,%eax
		jmp    jump_196c9
	jump_19d7c:
		xor    %eax,%eax
		call   func_44dec
		cmpw   $0x0,data_f0422
		jne    jump_19e02
		incl   data_f0418
		call   func_44eb0
		mov    data_ba84e,%bl
		cmp    $0x4,%bl
		je     jump_19dac
		cmp    $0x5,%bl
		jne    jump_19dc0
	jump_19dac:
		mov    $0x1e,%ebx
		mov    data_f0418,%eax
		xor    %edx,%edx
		div    %ebx
		test   %edx,%edx
		jne    jump_19dd7
		jmp    jump_19dd2
	jump_19dc0:
		mov    $0x384,%ebx
		mov    data_f0418,%eax
		xor    %edx,%edx
		div    %ebx
		test   %edx,%edx
		jne    jump_19dd7
	jump_19dd2:
		call   func_197ca
	jump_19dd7:
		mov    data_74134,%ebx
		test   %ebx,%ebx
		jl     jump_19dee
		mov    %ebx,%eax
		call   func_5358f
		incl   data_74134
	jump_19dee:
		call   func_51211
		mov    data_f0418,%eax
		call   func_53523
		call   func_19aef
	jump_19e02:
		mov    $0x1,%ebx
		mov    $0xff,%cl
		mov    %bx,data_f0422
		mov    %ebx,%esi
		xor    %ebx,%ebx
		jmp    jump_19ea9
	jump_19e19:
		cmp    data_f0410,%ebx
		jne    jump_19e43
		xor    %eax,%eax
		mov    data_f0424,%ax
		mov    data_cc96c(,%eax,8),%edx
		push   %edx
		mov    data_cc968(,%eax,8),%ebp
		push   %ebp
		call   func_113dd
		mov    %eax,data_f0410
	jump_19e43:
		mov    data_f0410,%eax
		cmp    %eax,%ebx
		je     jump_19ea2
		mov    0xe(%eax),%ch
		mov    0x7b(%eax),%edx
		cmp    $0x1,%ch
		jg     jump_19e65
		cmp    0x83(%eax),%bl
		jne    jump_19e65
		testb  $0x10,0x1e(%eax)
		je     jump_19e7d
	jump_19e65:
		mov    data_f0410,%eax
		cmp    0x56(%eax),%cl
		jne    jump_19e7d
		call   func_44913
		movw   $0x1,data_f0420
	jump_19e7d:
		mov    %edx,data_f0410
		call   func_19fa3
		cmp    $0x2,%ax
		jne    jump_19e43
		mov    $0x3,%eax
		call   func_19f9d
	jump_19e98:
		mov    $0x2,%eax
		jmp    jump_196c9
	jump_19ea2:
		incw   data_f0424
	jump_19ea9:
		cmpw   $0x4,data_f0424
		jb     jump_19e19
		xor    %edx,%edx
		mov    data_f0420,%bx
		mov    %dx,data_f0422
		test   %bx,%bx
		je     jump_19ed3
		mov    $0x3,%ebx
		jmp    jump_19ed8
	jump_19ed3:
		mov    $0x1,%ebx
	jump_19ed8:
		mov    data_f0418,%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %cx,data_f0424
		mov    %cx,data_f0420
		xor    %ecx,%ecx
		inc    %eax
		mov    data_74138,%cl
		div    %ecx
		xor    %esi,%esi
		mov    %esi,data_f0410
		test   %edx,%edx
		jne    jump_19f56
		mov    data_f0426,%di
		test   %di,%di
		jle    jump_19f56
		mov    %edi,%eax
		dec    %eax
		cwtl
		call   func_1979f
		mov    %eax,%edx
		mov    $0x1d,%eax
		call   func_4f4cd
		movsbl 0x1(%edx),%ebx
		movsbl (%edx),%eax
		mov    %ebx,%edx
		mov    $0x1,%cl
		call   func_1124a
		mov    $0x1,%eax
		mov    %cl,data_f042e
		call   func_44dec
		mov    $0x1,%eax
		call   func_1a0f0
		jmp    jump_19e98
	jump_19f56:
		mov    %ebx,%eax
		jmp    jump_196c9


/*----------------------------------------------------------------*/
func_19f5d:
/*----------------------------------------------------------------*/
		push   %edx
		call   func_10392
		test   %ax,%ax
		je     jump_19f9b
		cmpb   $0x0,data_f042e
		jne    jump_19f9b
		mov    $0x39,%eax /* space key */
		call   func_5d827
		test   %al,%al
		je     jump_19f9b
		mov    $0x2,%dl
		mov    $0x32,%eax
		mov    %dl,data_f042e
		call   func_1038b
		mov    $0x1,%eax
		call   func_44dec
	jump_19f9b:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_19f9d:
/*----------------------------------------------------------------*/
		mov    %al,data_f042e
		ret


/*----------------------------------------------------------------*/
func_19fa3:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    data_f042e,%al
		ret


/*----------------------------------------------------------------*/
func_19fab:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x40,0x1e(%eax)
		je     jump_19fd9
		mov    0x52(%ebx),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		jmp    jump_19fdd
	jump_19fd9:
		mov    0x54(%ebx),%ax
	jump_19fdd:
		mov    %ax,data_f0428
		mov    0x13(%ebx),%dl
		test   $0x80,%dl
		je     jump_19ffc
		mov    %dl,%dh
		and    $0x7f,%dh
		mov    %dh,0x13(%ebx)
		movw   $0xfa,data_f0428
	jump_19ffc:
		testb  $0x2,0x14(%ebx)
		je     jump_1a00a
		addw   $0x3c,data_f0428
	jump_1a00a:
		mov    data_ba84d,%ch
		cmp    $0x1,%ch
		jne    jump_1a02f
	jump_1a015:
		mov    data_f0426,%ebx
		sar    $0x10,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		jmp    jump_1a081
	jump_1a02f:
		cmp    $0x3,%ch
		jne    jump_1a065
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_1a015
		mov    data_f0426,%ebx
		sar    $0x10,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		add    %ebx,%eax
		mov    %ax,data_f0428
		jmp    jump_1a08a
	jump_1a065:
		cmp    $0x4,%ch
		jne    jump_1a08a
		mov    data_f0426,%ebx
		sar    $0x10,%ebx
		mov    $0x3,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
	jump_1a081:
		sub    %eax,%ebx
		mov    %bx,data_f0428
	jump_1a08a:
		cmpw   $0x37,data_f0428
		jge    jump_1a09d
		movw   $0x37,data_f0428
	jump_1a09d:
		mov    data_f0428,%ax
		mov    %ax,data_f042a
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1a0ad:
/*----------------------------------------------------------------*/
		mov    data_f042a,%ax
		cmp    data_f0428,%ax
		jmp    jump_19799


/*----------------------------------------------------------------*/
func_1a0bf:
/*----------------------------------------------------------------*/
		mov    %ax,data_f0428
		ret


/*----------------------------------------------------------------*/
func_1a0c6:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    data_f0428,%dx
		sub    %eax,%edx
		mov    %dx,data_f0428
		test   %dx,%dx
		jge    jump_1a0e6
		xor    %ecx,%ecx
		mov    %cx,data_f0428
	jump_1a0e6:
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1a0e9:
/*----------------------------------------------------------------*/
		mov    data_f0428,%ax
		ret


/*----------------------------------------------------------------*/
func_1a0f0:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		cmpb   $0x1,data_f042f
		jne    jump_1a103
		call   func_45acf
		jmp    jump_1a108
	jump_1a103:
		call   func_45a41
	jump_1a108:
		mov    %dl,data_f042f
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1a110:
/*----------------------------------------------------------------*/
		mov    data_f042f,%al
		ret


/*----------------------------------------------------------------*/
func_1a116:
/*----------------------------------------------------------------*/
		mov    %al,data_74138
		ret


/*----------------------------------------------------------------*/
func_1a11c:
/*----------------------------------------------------------------*/
		mov    data_74138,%al
		ret

vtable_1a122:
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0

vtable_1a136:
		.long   func_1a195
		.long   func_1a19a
		.long   func_1a1ad
		.long   func_1a1c9


/*----------------------------------------------------------------*/
func_1a146:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		call   func_174cf
		mov    0x5d(%esi),%esi
		sar    $0x18,%esi
		mov    %al,(%esp)
		mov    %esi,%eax
		shl    $0x3,%eax
		add    %esi,%eax
		shl    $0x4,%eax
		sub    %esi,%eax
		mov    $data_d66a8,%edi
		shl    $0x2,%eax
		movswl %cx,%esi
		add    %eax,%edi
		mov    %esi,%eax
		shl    $0x3,%eax
		add    %esi,%eax
		shl    $0x4,%eax
		sub    %esi,%eax
		add    %edi,%eax
		cmp    $0x3,%cx
		ja     jump_1a1d5
		xor    %esi,%esi
		mov    %cx,%si
		jmp    *vtable_1a136(,%esi,4)


/*----------------------------------------------------------------*/
func_1a195:
/*----------------------------------------------------------------*/
		incw   (%ebx)
		jmp    jump_1a1d5


/*----------------------------------------------------------------*/
func_1a19a:
/*----------------------------------------------------------------*/
		decw   (%edx)
		mov    0x1(%eax),%al
		xor    %ah,%ah
		mov    (%ebx),%si
		dec    %eax
		sub    %eax,%esi
		mov    %si,(%ebx)
		jmp    jump_1a1d5


/*----------------------------------------------------------------*/
func_1a1ad:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		mov    (%eax),%cl
		mov    (%edx),%si
		dec    %ecx
		add    %ecx,%esi
		mov    %si,(%edx)
		mov    0x1(%eax),%al
		mov    (%ebx),%di
		xor    %ah,%ah
		sub    %eax,%edi
		mov    %di,(%ebx)
		jmp    jump_1a1d5


/*----------------------------------------------------------------*/
func_1a1c9:
/*----------------------------------------------------------------*/
		mov    (%eax),%al
		mov    (%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,(%edx)
	jump_1a1d5:
		mov    (%esp),%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1a1de:
/*----------------------------------------------------------------*/
		push   %esi
		movsbw (%eax),%si
		mov    %si,(%edx)
		movsbw 0x1(%eax),%si
		movswl %cx,%ecx
		mov    %si,(%ebx)
		call   func_1a146
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1a1f8:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %bl,%cl
		movswl %dx,%edx
		cwtl
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_1a25b
		mov    0xb(%eax),%edx
		sar    $0x18,%edx
		movsbl %cl,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_1a25b
		xor    %eax,%eax
		jmp    jump_1a22e
	jump_1a221:
		movswl %ax,%edx
		cmp    data_f0648(,%edx,4),%ebx
		je     jump_1a25b
		inc    %eax
	jump_1a22e:
		mov    data_f0b9e,%dx
		cmp    %dx,%ax
		jl     jump_1a221
		mov    data_f0b9c,%eax
		sar    $0x10,%eax
		mov    %ebx,data_f0648(,%eax,4)
		mov    $0x1,%eax
		mov    %edx,%ebx
		add    %eax,%ebx
		mov    %bx,data_f0b9e
		pop    %ecx
		ret
	jump_1a25b:
		xor    %eax,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1a25f:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %ebx,%ecx
		movswl %dx,%edx
		cwtl
		call   func_11db2
#if 1
    /* workaround for %eax is 0 */
    test   %eax,%eax
    je     jump_1a2d3
#endif
		mov    0x14(%eax),%dl
		mov    %eax,%ebx
		test   $0x1,%dl
		je     jump_1a27b
		testb  $0x1,0x14(%ecx)
		je     jump_1a2d3
	jump_1a27b:
		test   %ebx,%ebx
		je     jump_1a2d3
		mov    0xb(%ebx),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_1a2d3
		xor    %eax,%eax
		jmp    jump_1a2a6
	jump_1a299:
		movswl %ax,%edx
		cmp    data_f0648(,%edx,4),%ebx
		je     jump_1a2d3
		inc    %eax
	jump_1a2a6:
		mov    data_f0b9e,%dx
		cmp    %dx,%ax
		jl     jump_1a299
		mov    data_f0b9c,%eax
		sar    $0x10,%eax
		mov    %ebx,data_f0648(,%eax,4)
		mov    $0x1,%eax
		mov    %edx,%ebx
		add    %eax,%ebx
		mov    %bx,data_f0b9e
		pop    %ecx
		ret
	jump_1a2d3:
		xor    %eax,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1a2d7:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		call   func_1093d
		mov    %al,data_f0ba4
		cmp    $0x64,%al
		jb     jump_1a2f0
		sub    $0x64,%al
		mov    %al,data_f0ba4
	jump_1a2f0:
		mov    data_f0ba4,%al
		and    $0xf,%al
		sub    %al,data_f0ba4
		ret


/*----------------------------------------------------------------*/
func_1a2fe:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jb     jump_1a30f
		sub    $0x64,%al
	jump_1a30f:
		sub    data_f0ba4,%al
		cmp    $0x10,%al
		setb   %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_1a31d:
/*----------------------------------------------------------------*/
		mov    data_f0b92,%ax
		mov    %ax,data_f0630
		mov    data_f0b94,%ax
		mov    %ax,data_f0632
		mov    data_f0b7c,%ax
		mov    %ax,data_f0634
		mov    data_f0b7e,%ax
		mov    %ax,data_f0636
		mov    data_f0b80,%ax
		mov    %ax,data_f0638
		mov    data_f0b78,%ax
		mov    %ax,data_f063a
		mov    data_f0b7a,%ax
		mov    %ax,data_f063c
		mov    data_f0b9a,%ax
		mov    %ax,data_f063e
		mov    data_f0b96,%ax
		mov    %ax,data_f0640
		mov    data_f0b9c,%ax
		mov    %ax,data_f0642
		mov    data_f0b98,%ax
		mov    %ax,data_f0644
		mov    data_f0b90,%ax
		mov    %ax,data_f0646
		ret


/*----------------------------------------------------------------*/
func_1a3ae:
/*----------------------------------------------------------------*/
		mov    data_f0630,%ax
		mov    %ax,data_f0b92
		mov    data_f0632,%ax
		mov    %ax,data_f0b94
		mov    data_f0634,%ax
		mov    %ax,data_f0b7c
		mov    data_f0636,%ax
		mov    %ax,data_f0b7e
		mov    data_f0638,%ax
		mov    %ax,data_f0b80
		mov    data_f063a,%ax
		mov    %ax,data_f0b78
		mov    data_f063c,%ax
		mov    %ax,data_f0b7a
		mov    data_f063e,%ax
		mov    %ax,data_f0b9a
		mov    data_f0640,%ax
		mov    %ax,data_f0b96
		mov    data_f0642,%ax
		mov    %ax,data_f0b9c
		mov    data_f0644,%ax
		mov    %ax,data_f0b98
		mov    data_f0646,%ax
		mov    %ax,data_f0b90
		ret

vtable_1a442:
		.long   func_1a4ae
		.long   func_1a4d4
		.long   func_1a4fc
		.long   func_1a522


/*----------------------------------------------------------------*/
func_1a452:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    0xc(%esp),%esi
		mov    %ax,data_f0b92
		mov    %dx,data_f0b94
		mov    %cx,data_f0b7c
		test   %si,%si
		jle    jump_1a478
		mov    $0x1,%eax
		jmp    jump_1a47f
	jump_1a478:
		mov    $0xffffffff,%eax
		neg    %esi
	jump_1a47f:
		mov    %si,data_f0b7e
		xor    %edx,%edx
		dec    %ecx
		mov    %dx,data_f0b7a
		mov    %dx,data_f0b78
		cmp    $0x3,%bx
		ja     jump_1a544
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *vtable_1a442(,%edx,4)


/*----------------------------------------------------------------*/
func_1a4ae:
/*----------------------------------------------------------------*/
		mov    $0x1,%ebx
		neg    %ecx
		mov    %ax,data_f0b98
		xor    %esi,%esi
		mov    %bx,data_f0b9a
		mov    %si,data_f0b96
		mov    %cx,data_f0b9c
		jmp    jump_1a544


/*----------------------------------------------------------------*/
func_1a4d4:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		neg    %eax
		xor    %edi,%edi
		neg    %ecx
		mov    %di,data_f0b9a
		mov    %dx,data_f0b96
		mov    %ax,data_f0b9c
		mov    %cx,data_f0b98
		jmp    jump_1a544


/*----------------------------------------------------------------*/
func_1a4fc:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%ebx
		mov    %cx,data_f0b9c
		neg    %eax
		xor    %esi,%esi
		mov    %bx,data_f0b9a
		mov    %si,data_f0b96
		mov    %ax,data_f0b98
		jmp    jump_1a544


/*----------------------------------------------------------------*/
func_1a522:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%edx
		mov    %ax,data_f0b9c
		xor    %edi,%edi
		mov    %cx,data_f0b98
		mov    %di,data_f0b9a
		mov    %dx,data_f0b96
	jump_1a544:
		xor    %edi,%edi
		mov    %di,data_f0b90
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_1a552:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		cmpw   $0x0,data_f0b90
		je     jump_1a567
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_1a567:
		mov    data_f0b92,%bx
		mov    %bx,(%eax)
		mov    data_f0b94,%ax
		mov    %ax,(%edx)
		mov    data_f0b78,%cx
		inc    %ecx
		mov    data_f0b7c,%si
		mov    %cx,data_f0b78
		cmp    %si,%cx
		je     jump_1a5c2
		mov    data_f0b9a,%ax
		mov    data_f0b92,%dx
		mov    data_f0b94,%bx
		add    %eax,%edx
		add    data_f0b96,%bx
		mov    %dx,data_f0b92
		mov    %bx,data_f0b94
		jmp    jump_1a61b
	jump_1a5c2:
		mov    data_f0b9c,%ax
		mov    data_f0b92,%dx
		mov    data_f0b94,%bx
		mov    data_f0b7a,%cx
		xor    %edi,%edi
		mov    data_f0b7e,%si
		mov    %di,data_f0b78
		inc    %ecx
		add    %eax,%edx
		mov    data_f0b98,%ax
		mov    %dx,data_f0b92
		add    %eax,%ebx
		mov    %cx,data_f0b7a
		mov    %bx,data_f0b94
		cmp    %si,%cx
		jne    jump_1a61b
		movw   $0x1,data_f0b90
	jump_1a61b:
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1a625:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0xc,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    %dx,0xc(%esp)
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		add    $0x2,%edx
		mov    %ax,0x10(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		lea    0x10(%esp),%eax
		movsbl %dl,%ebx
		lea    0xc(%esp),%edx
		call   func_49abc
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,0x14(%esp)
		cmp    $0x64,%al
		jbe    jump_1a67d
		sub    $0x64,%al
		mov    %al,0x14(%esp)
	jump_1a67d:
		mov    0x14(%esp),%al
		and    $0xf,%al
		mov    0x14(%esp),%ah
		sub    %al,%ah
		mov    -0x3(%esp),%ebx
		mov    %ah,%al
		lea    0x4(%esp),%edx
		add    $0x18,%al
		sar    $0x18,%ebx
		mov    %al,0x14(%esp)
		lea    0x8(%esp),%eax
		movswl %cx,%ecx
		call   func_49abc
		mov    0x20(%esp),%eax
		mov    -0x2(%esp),%ebx
		dec    %eax
		mov    0x2(%esp),%edx
		cwtl
		sar    $0x10,%ebx
		push   %eax
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1a6c9:
		lea    0xc(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1a791
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1a6fb
		sub    $0x64,%ah
	jump_1a6fb:
		test   %ah,%ah
		je     jump_1a791
		cmp    0x14(%esp),%ah
		je     jump_1a791
		cmpw   $0x0,data_f0b8e
		jne    jump_1a731
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1a6c9
	jump_1a731:
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_1a6c9
		mov    0xb(%eax),%edx
		mov    data_f0b85,%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    data_f0b86,%ax
		jne    jump_1a6c9
		mov    data_f0b9e,%si
		mov    data_f0b9c,%eax
		inc    %esi
		sar    $0x10,%eax
		mov    %si,data_f0b9e
		mov    %ebx,data_f0648(,%eax,4)
		jmp    jump_1a6c9
	jump_1a791:
		add    $0x18,%esp
		pop    %esi
		ret    $0x4

vtable_1a79a:
		.long   func_1a838
		.long   func_1a857
		.long   func_1a871
		.long   func_1a88b

vtable_1a7aa:
		.long   func_1aa80
		.long   func_1aa8b
		.long   func_1aa93
		.long   func_1aaa2


/*----------------------------------------------------------------*/
func_1a7ba:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x28,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    %ax,0x1c(%esp)
		mov    0x4(%esp),%al
		add    $0x2,%al
		mov    %dx,0x18(%esp)
		and    $0x3,%al
		lea    0x18(%esp),%edx
		movsbl %al,%ebx
		lea    0x1c(%esp),%eax
		call   func_49abc
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1a801
		sub    $0x64,%ah
	jump_1a801:
		mov    %ah,%al
		and    $0xf,%al
		sub    %al,%ah
		mov    %ah,0x28(%esp)
		mov    %ah,%al
		add    $0x10,%al
		mov    0x4(%esp),%edx
		mov    %al,0x30(%esp)
		cmp    $0x3,%dx
		ja     jump_1a8a3
		xor    %ebx,%ebx
		mov    0x8(%esp),%eax
		mov    %dx,%bx
		mov    0xc(%esp),%edx
		inc    %eax
		dec    %edx
		jmp    *vtable_1a79a(,%ebx,4)


/*----------------------------------------------------------------*/
func_1a838:
/*----------------------------------------------------------------*/
		mov    %dx,0xc(%esp)
		mov    %edx,0x20(%esp)
		mov    0x8(%esp),%edx
		mov    $0x6,%eax
		dec    %edx
		mov    %ax,0x24(%esp)
		mov    %dx,0x8(%esp)
		jmp    jump_1a8a3


/*----------------------------------------------------------------*/
func_1a857:
/*----------------------------------------------------------------*/
		mov    0xc(%esp),%esi
		mov    $0x6,%edi
		mov    %eax,0x10(%esp)
		inc    %esi
		mov    %di,0x24(%esp)
		mov    %si,0xc(%esp)
		jmp    jump_1a8a3


/*----------------------------------------------------------------*/
func_1a871:
/*----------------------------------------------------------------*/
		mov    %ax,0x8(%esp)
		mov    0xc(%esp),%eax
		mov    $0x4,%ecx
		dec    %eax
		mov    %cx,0x24(%esp)
		mov    %eax,0x20(%esp)
		jmp    jump_1a8a3


/*----------------------------------------------------------------*/
func_1a88b:
/*----------------------------------------------------------------*/
		mov    $0x4,%ebx
		mov    %dx,0xc(%esp)
		mov    %ax,0x8(%esp)
		mov    %eax,0x10(%esp)
		mov    %bx,0x24(%esp)
	jump_1a8a3:
		xor    %ebx,%ebx
		mov    %ebx,0x14(%esp)
	jump_1a8a9:
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%ebx
		sar    $0x10,%edx
		mov    $0x2,%ecx
		add    %edx,%eax
		sar    $0x10,%ebx
		cwtl
		mov    0x6(%esp),%edx
		push   %eax
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		mov    0x30(%esp),%al
		mov    %al,0x34(%esp)
		mov    0x28(%esp),%al
		xor    %edi,%edi
		mov    %al,0x2c(%esp)
		jmp    jump_1a975
	jump_1a8fa:
		mov    0x1c(%esp),%eax
		cmp    0x20(%esp),%ax
	jump_1a903:
		jne    jump_1a975
		cmpw   $0x2,data_f0b8e
		jne    jump_1aa13
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    data_f0b86,%dx
		mov    %eax,%esi
		cmp    %dx,%ax
		jle    jump_1a975
		mov    0x2(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		mov    data_f0b74,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
	jump_1a954:
		cmp    $0x1,%ax
		jne    jump_1a975
		mov    0x1c(%esp),%eax
		mov    %ax,data_f0b84
		mov    0x18(%esp),%eax
		mov    %si,data_f0b86
		mov    %ax,data_f0b82
	jump_1a975:
		lea    0x18(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1aa5f
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1a9a6
		sub    $0x64,%al
	jump_1a9a6:
		test   %al,%al
		je     jump_1aa5f
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x2c(%esp),%bl
		mov    %al,%dl
		add    $0x8,%ebx
		cmp    %ebx,%edx
		je     jump_1aa5f
		cmp    0x2c(%esp),%al
		jae    jump_1a9d7
		mov    0x30(%esp),%ah
		cmp    0x34(%esp),%ah
		jne    jump_1aa5f
	jump_1a9d7:
		mov    0x34(%esp),%dh
		cmp    %dh,%al
		jbe    jump_1a9ec
		mov    %dh,%bl
		add    $0x10,%bl
		mov    %dh,0x2c(%esp)
		mov    %bl,0x34(%esp)
	jump_1a9ec:
		mov    0x24(%esp),%eax
		inc    %edi
		cmp    %ax,%di
		jle    jump_1a975
		testb  $0x1,0x4(%esp)
		je     jump_1a8fa
		mov    0x18(%esp),%eax
		cmp    0x10(%esp),%ax
		jmp    jump_1a903
	jump_1aa13:
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    data_f0b74,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%esi
		cmp    data_f0b86,%si
		jge    jump_1a975
		mov    0x2(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		mov    data_f0b74,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_16699
		jmp    jump_1a954
	jump_1aa5f:
		cmpw   $0x3,0x4(%esp)
		ja     jump_1aaab
		mov    0xc(%esp),%edx
		xor    %ebx,%ebx
		mov    0x8(%esp),%eax
		mov    0x4(%esp),%bx
		inc    %edx
		dec    %eax
		jmp    *vtable_1a7aa(,%ebx,4)


/*----------------------------------------------------------------*/
func_1aa80:
/*----------------------------------------------------------------*/
		mov    %dx,0xc(%esp)
		mov    %edx,0x20(%esp)
		jmp    jump_1aaab


/*----------------------------------------------------------------*/
func_1aa8b:
/*----------------------------------------------------------------*/
		mov    %ax,0x8(%esp)
		inc    %eax
		jmp    jump_1aaa7


/*----------------------------------------------------------------*/
func_1aa93:
/*----------------------------------------------------------------*/
		mov    0xc(%esp),%eax
		mov    %eax,0x20(%esp)
		mov    %dx,0xc(%esp)
		jmp    jump_1aaab


/*----------------------------------------------------------------*/
func_1aaa2:
/*----------------------------------------------------------------*/
		mov    %ax,0x8(%esp)
	jump_1aaa7:
		mov    %eax,0x10(%esp)
	jump_1aaab:
		mov    0x14(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x14(%esp)
		cmp    $0x2,%cx
		jl     jump_1a8a9
		add    $0x38,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1aac4:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %bx,0x1c(%esp)
		mov    %ecx,%esi
		call   func_13f8a
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		call   func_1b7bf
		mov    0x2e(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,(%esp)
		push   %eax
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		mov    $0x2,%ecx
		mov    %eax,0x8(%esp)
		movswl (%edi),%edx
		mov    0x8(%esp),%ebx
		movswl 0x0(%ebp),%eax
		call   func_1a625
		mov    (%esp),%ebx
		mov    $0x1,%ecx
		movswl (%edi),%edx
		push   %ebx
		movswl 0x0(%ebp),%eax
		mov    0x8(%esp),%ebx
		call   func_1a452
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
	jump_1ab3f:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1abfc
		call   func_1a31d
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cmp    $0x1,%ax
		jne    jump_1abfc
		push   $0x2
		mov    0x1e(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x2,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		xor    %ebx,%ebx
	jump_1ab9a:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1abd8
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_1ab9a
		inc    %ebx
		jmp    jump_1ab9a
	jump_1abd8:
		cmp    0xc(%esp),%bx
		jle    jump_1abf2
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x18(%esp),%eax
		mov    %ebx,0xc(%esp)
		mov    %ax,(%edi)
	jump_1abf2:
		call   func_1a3ae
		jmp    jump_1ab3f
	jump_1abfc:
		mov    0xc(%esp),%eax
		add    $0x20,%esp
		jmp    jump_1b422


/*----------------------------------------------------------------*/
func_1ac08:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    $0x1,%esi
		mov    %ax,data_f0b92
		mov    %bx,data_f0b7e
		xor    %ecx,%ecx
		sub    %ebx,%edx
		mov    %cx,data_f0b90
		mov    %dx,data_f0b94
		mov    %si,data_f0b7c
		mov    %cx,data_f0b78
		test   %bx,%bx
		je     jump_1ac4d
		movw   $0x2,data_f0b7a
		pop    %esi
		pop    %ecx
		ret
	jump_1ac4d:
		movw   $0xfffe,data_f0b7a
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1ac59:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		cmpw   $0x0,data_f0b90
		je     jump_1ac6c
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_1ac6c:
		mov    data_f0b92,%bx
		mov    %bx,(%eax)
		mov    data_f0b94,%ax
		mov    %ax,(%edx)
		mov    data_f0b78,%cx
		inc    %ecx
		mov    data_f0b7c,%ax
		mov    %cx,data_f0b78
		cmp    %cx,%ax
		jne    jump_1ad1e
		cmpw   $0x0,data_f0b7a
		jle    jump_1acb4
		mov    data_f0b7c,%ax
		sub    %ax,data_f0b92
	jump_1acb4:
		mov    data_f0b94,%bx
		mov    data_f0b7a,%ax
		mov    data_f0b7c,%cx
		xor    %esi,%esi
		inc    %ebx
		mov    %si,data_f0b78
		add    %eax,%ecx
		mov    %bx,data_f0b94
		mov    %cx,data_f0b7c
		test   %ax,%ax
		jge    jump_1acee
		sub    %cx,data_f0b92
	jump_1acee:
		mov    data_f0b7e,%bx
		dec    %bx
		mov    %bx,data_f0b7e
		jne    jump_1ad09
		movw   $0xfffe,data_f0b7a
	jump_1ad09:
		cmpw   $0x0,data_f0b7c
		jge    jump_1ad25
		movw   $0x1,data_f0b90
		jmp    jump_1ad25
	jump_1ad1e:
		incw   data_f0b92
	jump_1ad25:
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1ad2e:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_f0b7a,%eax
		mov    data_f0b78,%dx
		sar    $0x11,%eax
		cmp    %dx,%ax
		jl     jump_1ad47
		mov    %edx,%eax
		pop    %edx
		ret
	jump_1ad47:
		mov    data_f0b7c,%ax
		sub    %edx,%eax
		dec    %eax
		pop    %edx
		ret

vtable_1ad52:
		.long   func_1ad92
		.long   func_1adbd
		.long   func_1adeb
		.long   func_1ae11


/*----------------------------------------------------------------*/
func_1ad62:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %dx,data_f0b94
		xor    %edx,%edx
		mov    %ax,data_f0b92
		mov    %dx,data_f0b78
		cmp    $0x3,%bx
		ja     jump_1ae3c
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_1ad52(,%eax,4)


/*----------------------------------------------------------------*/
func_1ad92:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%ebx
		mov    $0x2,%esi
		mov    %dx,data_f0b98
		mov    %bx,data_f0b9a
		mov    %bx,data_f0b96
		mov    %si,data_f0b9c
		jmp    jump_1ae3c


/*----------------------------------------------------------------*/
func_1adbd:
/*----------------------------------------------------------------*/
		mov    $0x1,%esi
		mov    $0xffffffff,%edi
		mov    $0x2,%edx
		xor    %ebx,%eax
		mov    %si,data_f0b9a
		mov    %di,data_f0b96
		mov    %ax,data_f0b9c
		mov    %dx,data_f0b98
		jmp    jump_1ae3c


/*----------------------------------------------------------------*/
func_1adeb:
/*----------------------------------------------------------------*/
		mov    $0x1,%eax
		mov    $0xfffffffe,%ebx
		mov    %dx,data_f0b98
		mov    %ax,data_f0b9a
		mov    %ax,data_f0b96
		mov    %bx,data_f0b9c
		jmp    jump_1ae3c


/*----------------------------------------------------------------*/
func_1ae11:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%ebx
		mov    $0x1,%ecx
		mov    $0xfffffffe,%edi
		mov    %dx,data_f0b9c
		mov    %bx,data_f0b9a
		mov    %cx,data_f0b96
		mov    %di,data_f0b98
	jump_1ae3c:
		xor    %eax,%eax
		mov    %ax,data_f0b90
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1ae48:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		cmpw   $0x0,data_f0b90
		je     jump_1ae5b
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_1ae5b:
		mov    data_f0b92,%bx
		mov    %bx,(%eax)
		mov    data_f0b94,%ax
		mov    %ax,(%edx)
		mov    data_f0b78,%cx
		test   %cx,%cx
		jne    jump_1aea7
		mov    data_f0b9a,%ax
		mov    data_f0b92,%cx
		mov    data_f0b94,%si
		add    %eax,%ecx
		add    data_f0b96,%si
		mov    %cx,data_f0b92
		mov    %si,data_f0b94
		jmp    jump_1aee3
	jump_1aea7:
		cmp    $0x1,%cx
		jne    jump_1aeda
		mov    data_f0b9c,%ax
		mov    data_f0b92,%dx
		mov    data_f0b94,%bx
		add    %eax,%edx
		add    data_f0b98,%bx
		mov    %dx,data_f0b92
		mov    %bx,data_f0b94
		jmp    jump_1aee3
	jump_1aeda:
		movw   $0x1,data_f0b90
	jump_1aee3:
		mov    $0x1,%eax
		add    %ax,data_f0b78
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1aef3:
/*----------------------------------------------------------------*/
		push   %edx
		mov    0x11(%eax),%dl
		cmp    $0x15,%dl
		je     jump_1af01
		cmp    $0x16,%dl
		jne    jump_1af08
	jump_1af01:
		mov    $0x5,%eax
		pop    %edx
		ret
	jump_1af08:
		mov    $0x7,%eax
		pop    %edx
		ret

vtable_1af12:
		.long   func_1af68
		.long   func_1af8d
		.long   func_1afb8
		.long   func_1afdb


/*----------------------------------------------------------------*/
func_1af22:
/*----------------------------------------------------------------*/
		push   %esi
		mov    %ax,data_f0b92
		mov    %dx,data_f0b94
		mov    %cx,data_f0b7c
		mov    0x8(%esp),%eax
		xor    %edx,%edx
		mov    %ax,data_f0b7e
		mov    %dx,data_f0b78
		mov    %dx,data_f0b7a
		cmp    $0x3,%bx
		ja     jump_1b000
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_1af12(,%eax,4)


/*----------------------------------------------------------------*/
func_1af68:
/*----------------------------------------------------------------*/
		mov    $0x1,%esi
		mov    %dx,data_f0b96
		neg    %ecx
		mov    %si,data_f0b9a
		mov    %cx,data_f0b9c
		mov    %si,data_f0b98
		jmp    jump_1b000


/*----------------------------------------------------------------*/
func_1af8d:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		neg    %ecx
		xor    %ebx,%eax
		mov    $0xffffffff,%ebx
		mov    %ax,data_f0b9a
		mov    %dx,data_f0b96
		mov    %cx,data_f0b98
		mov    %bx,data_f0b9c
		jmp    jump_1b000


/*----------------------------------------------------------------*/
func_1afb8:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%ebx
		mov    %dx,data_f0b96
		mov    %cx,data_f0b9c
		mov    %bx,data_f0b9a
		mov    %bx,data_f0b98
		jmp    jump_1b000


/*----------------------------------------------------------------*/
func_1afdb:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%eax
		mov    %dx,data_f0b9a
		mov    %cx,data_f0b98
		mov    $0x1,%edx
		mov    %ax,data_f0b96
		mov    %dx,data_f0b9c
	jump_1b000:
		xor    %edx,%edx
		mov    %dx,data_f0b90
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_1b00d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		cmpw   $0x0,data_f0b90
		je     jump_1b022
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_1b022:
		mov    data_f0b92,%bx
		mov    %bx,(%eax)
		mov    data_f0b94,%ax
		mov    %ax,(%edx)
		mov    data_f0b78,%cx
		inc    %ecx
		mov    data_f0b7c,%ax
		mov    %cx,data_f0b78
		cmp    %cx,%ax
		je     jump_1b07f
		mov    data_f0b9a,%ax
		mov    data_f0b92,%di
		mov    data_f0b94,%dx
		add    %eax,%edi
		add    data_f0b96,%dx
		mov    %di,data_f0b92
		mov    %dx,data_f0b94
		jmp    jump_1b191
	jump_1b07f:
		mov    data_f0b7a,%di
		inc    %edi
		mov    data_f0b7e,%dx
		mov    %di,data_f0b7a
		cmp    %dx,%di
		jne    jump_1b0a8
		movw   $0x1,data_f0b90
		jmp    jump_1b188
	jump_1b0a8:
		mov    data_f0b7c,%ebx
		mov    data_f0b78,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		mov    data_f0b96,%dx
		sub    %eax,%ebx
		mov    data_f0b9a,%ax
		add    %edx,%edx
		add    %eax,%eax
		cmp    $0x1,%ebx
		jne    jump_1b12b
		mov    data_f0b7c,%cx
		sub    $0x2,%ecx
		mov    data_f0b9a,%si
		mov    %cx,data_f0b7c
		test   %si,%si
		jne    jump_1b0f7
		add    %dx,data_f0b98
		jmp    jump_1b0fe
	jump_1b0f7:
		add    %ax,data_f0b9c
	jump_1b0fe:
		mov    data_f0b9c,%ax
		mov    data_f0b92,%dx
		mov    data_f0b94,%bx
		add    %eax,%edx
		add    data_f0b98,%bx
		mov    %dx,data_f0b92
		mov    %bx,data_f0b94
		jmp    jump_1b188
	jump_1b12b:
		mov    data_f0b7c,%bx
		add    $0x2,%ebx
		mov    data_f0b92,%cx
		mov    %bx,data_f0b7c
		mov    data_f0b9c,%bx
		mov    data_f0b94,%si
		add    %ebx,%ecx
		mov    data_f0b98,%bx
		mov    data_f0b9a,%di
		add    %ebx,%esi
		mov    %cx,data_f0b92
		mov    %si,data_f0b94
		test   %di,%di
		jne    jump_1b181
		sub    %edx,%ebx
		mov    %bx,data_f0b98
		jmp    jump_1b188
	jump_1b181:
		sub    %ax,data_f0b9c
	jump_1b188:
		xor    %esi,%esi
		mov    %si,data_f0b78
	jump_1b191:
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_1b19e:
		.long   func_1b1fb
		.long   func_1b285
		.long   func_1b30f
		.long   func_1b399


/*----------------------------------------------------------------*/
func_1b1ae:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    0x3c(%esp),%edi
		mov    %ax,0x20(%esp)
		mov    %dx,0x1c(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    0x1a(%esp),%edx
		mov    0x1e(%esp),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x2,%ecx
		call   func_13d02
		cmp    $0x3,%si
		ja     jump_1b41f
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *vtable_1b19e(,%eax,4)


/*----------------------------------------------------------------*/
func_1b1fb:
/*----------------------------------------------------------------*/
		test   %di,%di
		je     jump_1b20a
		movl   $0xffffffff,0x14(%esp)
		jmp    jump_1b212
	jump_1b20a:
		movl   $0x1,0x14(%esp)
	jump_1b212:
		mov    $0x1,%eax
		mov    0x1c(%esp),%edx
		add    %eax,%edx
		mov    %ax,0x24(%esp)
		mov    %dx,0x1c(%esp)
		mov    $0xfffffffe,%ebp
		jmp    jump_1b26f
	jump_1b22e:
		mov    0x1a(%esp),%edx
		movswl %di,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		call   func_13d02
		mov    0x14(%esp),%edx
		inc    %esi
		add    %edx,%edi
	jump_1b246:
		cmp    %cx,%si
		jl     jump_1b22e
		mov    0x1c(%esp),%esi
		inc    %esi
		mov    0x24(%esp),%bl
		mov    %si,0x1c(%esp)
		test   $0x1,%bl
		je     jump_1b269
		mov    0x14(%esp),%eax
		add    %ax,0x20(%esp)
		jmp    jump_1b26a
	jump_1b269:
		inc    %ecx
	jump_1b26a:
		incw   0x24(%esp)
	jump_1b26f:
		mov    0x24(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x20(%esp),%edi
		xor    %esi,%esi
		jmp    jump_1b246


/*----------------------------------------------------------------*/
func_1b285:
/*----------------------------------------------------------------*/
		test   %di,%di
		je     jump_1b294
		movl   $0xffffffff,0x28(%esp)
		jmp    jump_1b29c
	jump_1b294:
		movl   $0x1,0x28(%esp)
	jump_1b29c:
		mov    $0x1,%edx
		mov    0x20(%esp),%ebx
		sub    %edx,%ebx
		mov    %dx,0x8(%esp)
		mov    %bx,0x20(%esp)
		mov    $0xfffffffe,%ebp
		jmp    jump_1b2f9
	jump_1b2b8:
		mov    0x1e(%esp),%eax
		movswl %si,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x28(%esp),%edx
		inc    %edi
		add    %edx,%esi
	jump_1b2d0:
		cmp    %cx,%di
		jl     jump_1b2b8
		mov    0x20(%esp),%esi
		dec    %esi
		mov    0x8(%esp),%dh
		mov    %si,0x20(%esp)
		test   $0x1,%dh
		je     jump_1b2f3
		mov    0x28(%esp),%eax
		add    %ax,0x1c(%esp)
		jmp    jump_1b2f4
	jump_1b2f3:
		inc    %ecx
	jump_1b2f4:
		incw   0x8(%esp)
	jump_1b2f9:
		mov    0x8(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x1c(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b2d0


/*----------------------------------------------------------------*/
func_1b30f:
/*----------------------------------------------------------------*/
		test   %di,%di
		je     jump_1b31e
		movl   $0x1,0x10(%esp)
		jmp    jump_1b326
	jump_1b31e:
		movl   $0xffffffff,0x10(%esp)
	jump_1b326:
		mov    $0x1,%ebx
		mov    0x1c(%esp),%esi
		sub    %ebx,%esi
		mov    %bx,0xc(%esp)
		mov    %si,0x1c(%esp)
		mov    $0xfffffffe,%ebp
		jmp    jump_1b383
	jump_1b342:
		mov    0x1a(%esp),%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		call   func_13d02
		mov    0x10(%esp),%edx
		inc    %edi
		add    %edx,%esi
	jump_1b35a:
		cmp    %cx,%di
		jl     jump_1b342
		mov    0x1c(%esp),%esi
		dec    %esi
		mov    0xc(%esp),%dl
		mov    %si,0x1c(%esp)
		test   $0x1,%dl
		je     jump_1b37d
		mov    0x10(%esp),%eax
		add    %ax,0x20(%esp)
		jmp    jump_1b37e
	jump_1b37d:
		inc    %ecx
	jump_1b37e:
		incw   0xc(%esp)
	jump_1b383:
		mov    0xc(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x20(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b35a


/*----------------------------------------------------------------*/
func_1b399:
/*----------------------------------------------------------------*/
		test   %di,%di
		je     jump_1b3a8
		movl   $0x1,0x18(%esp)
		jmp    jump_1b3b0
	jump_1b3a8:
		movl   $0xffffffff,0x18(%esp)
	jump_1b3b0:
		mov    $0x1,%esi
		mov    0x20(%esp),%edi
		add    %esi,%edi
		mov    %si,0x4(%esp)
		mov    %di,0x20(%esp)
		mov    $0xfffffffe,%ebp
		jmp    jump_1b415
	jump_1b3cc:
		mov    0x1c(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b3ec
	jump_1b3d4:
		mov    0x1e(%esp),%eax
		movswl %si,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x18(%esp),%edx
		inc    %edi
		add    %edx,%esi
	jump_1b3ec:
		cmp    %cx,%di
		jl     jump_1b3d4
		mov    0x20(%esp),%esi
		inc    %esi
		mov    0x4(%esp),%ah
		mov    %si,0x20(%esp)
		test   $0x1,%ah
		je     jump_1b40f
		mov    0x18(%esp),%eax
		add    %ax,0x1c(%esp)
		jmp    jump_1b410
	jump_1b40f:
		inc    %ecx
	jump_1b410:
		incw   0x4(%esp)
	jump_1b415:
		mov    0x4(%esp),%eax
		cmp    (%esp),%ax
		jl     jump_1b3cc
	jump_1b41f:
		add    $0x2c,%esp
	jump_1b422:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4

vtable_1b42a:
		.long   func_1b45f
		.long   func_1b4c5
		.long   func_1b532
		.long   func_1b59f


/*----------------------------------------------------------------*/
func_1b43a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		push   %eax
		push   %edx
		push   %ecx
		mov    0x3c(%esp),%edx
		mov    $0x1,%ecx
		cmp    $0x3,%bx
		ja     jump_1b41f
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_1b42a(,%eax,4)


/*----------------------------------------------------------------*/
func_1b45f:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1b46e
		movl   $0xffffffff,0x20(%esp)
		jmp    jump_1b472
	jump_1b46e:
		mov    %ecx,0x20(%esp)
	jump_1b472:
		xor    %ebx,%ebx
		mov    $0xfffffffe,%ebp
		mov    %bx,0x18(%esp)
		jmp    jump_1b4af
	jump_1b480:
		mov    0x2(%esp),%edx
		movswl %di,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		call   func_13d02
		mov    0x20(%esp),%eax
		inc    %esi
		add    %eax,%edi
	jump_1b498:
		cmp    %cx,%si
		jl     jump_1b480
		incw   0x4(%esp)
		testb  $0x1,0x18(%esp)
		je     jump_1b4aa
		inc    %ecx
	jump_1b4aa:
		incw   0x18(%esp)
	jump_1b4af:
		mov    0x18(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x8(%esp),%edi
		xor    %esi,%esi
		jmp    jump_1b498


/*----------------------------------------------------------------*/
func_1b4c5:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1b4d4
		movl   $0xffffffff,0x1c(%esp)
		jmp    jump_1b4d8
	jump_1b4d4:
		mov    %ecx,0x1c(%esp)
	jump_1b4d8:
		xor    %edi,%edi
		mov    $0xfffffffe,%ebp
		mov    %di,0x10(%esp)
		jmp    jump_1b51c
	jump_1b4e6:
		mov    0x6(%esp),%eax
		movswl %si,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x1c(%esp),%eax
		inc    %edi
		add    %eax,%esi
	jump_1b4fe:
		cmp    %cx,%di
		jl     jump_1b4e6
		mov    0x8(%esp),%ebx
		dec    %ebx
		mov    0x10(%esp),%dh
		mov    %bx,0x8(%esp)
		test   $0x1,%dh
		je     jump_1b517
		inc    %ecx
	jump_1b517:
		incw   0x10(%esp)
	jump_1b51c:
		mov    0x10(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x4(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b4fe


/*----------------------------------------------------------------*/
func_1b532:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1b53d
		mov    %ecx,0x24(%esp)
		jmp    jump_1b545
	jump_1b53d:
		movl   $0xffffffff,0x24(%esp)
	jump_1b545:
		xor    %edx,%edx
		mov    $0xfffffffe,%ebp
		mov    %dx,0x14(%esp)
		jmp    jump_1b589
	jump_1b553:
		mov    0x2(%esp),%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		call   func_13d02
		mov    0x24(%esp),%eax
		inc    %edi
		add    %eax,%esi
	jump_1b56b:
		cmp    %cx,%di
		jl     jump_1b553
		mov    0x4(%esp),%esi
		dec    %esi
		mov    0x14(%esp),%dl
		mov    %si,0x4(%esp)
		test   $0x1,%dl
		je     jump_1b584
		inc    %ecx
	jump_1b584:
		incw   0x14(%esp)
	jump_1b589:
		mov    0x14(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b41f
		mov    0x8(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b56b


/*----------------------------------------------------------------*/
func_1b59f:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1b5aa
		mov    %ecx,0x28(%esp)
		jmp    jump_1b5b2
	jump_1b5aa:
		movl   $0xffffffff,0x28(%esp)
	jump_1b5b2:
		xor    %esi,%esi
		mov    $0xfffffffe,%ebp
		mov    %si,0xc(%esp)
		jmp    jump_1b5fe
	jump_1b5c0:
		mov    0x4(%esp),%edi
		xor    %esi,%esi
		jmp    jump_1b5e0
	jump_1b5c8:
		mov    0x6(%esp),%eax
		movswl %di,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x28(%esp),%edx
		inc    %esi
		add    %edx,%edi
	jump_1b5e0:
		cmp    %cx,%si
		jl     jump_1b5c8
		mov    0x8(%esp),%edi
		inc    %edi
		mov    0xc(%esp),%ah
		mov    %di,0x8(%esp)
		test   $0x1,%ah
		je     jump_1b5f9
		inc    %ecx
	jump_1b5f9:
		incw   0xc(%esp)
	jump_1b5fe:
		mov    0xc(%esp),%eax
		cmp    (%esp),%ax
		jl     jump_1b5c0
		jmp    jump_1b41f

vtable_1b60e:
		.long   func_1b643
		.long   func_1b69d
		.long   func_1b6fe
		.long   func_1b75b


/*----------------------------------------------------------------*/
func_1b61e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %eax
		push   %edx
		push   %ecx
		mov    $0x1,%ecx
		cmp    $0x3,%bx
		ja     jump_1b7b8
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_1b60e(,%eax,4)


/*----------------------------------------------------------------*/
func_1b643:
/*----------------------------------------------------------------*/
		xor    %edi,%edi
		mov    $0xfffffffe,%ebp
		mov    %di,0x18(%esp)
		jmp    jump_1b687
	jump_1b651:
		mov    0x2(%esp),%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		inc    %edi
		call   func_13d02
		inc    %esi
	jump_1b664:
		cmp    %cx,%di
		jl     jump_1b651
		incw   0x4(%esp)
		testb  $0x1,0x18(%esp)
		je     jump_1b682
		mov    0x8(%esp),%esi
		dec    %esi
		add    $0x2,%ecx
		mov    %si,0x8(%esp)
	jump_1b682:
		incw   0x18(%esp)
	jump_1b687:
		mov    0x18(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b7b8
		mov    0x8(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b664


/*----------------------------------------------------------------*/
func_1b69d:
/*----------------------------------------------------------------*/
		xor    %esi,%esi
		mov    $0xfffffffe,%ebp
		mov    %si,0x14(%esp)
		jmp    jump_1b6e8
	jump_1b6ab:
		mov    0x6(%esp),%eax
		movswl %si,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		inc    %edi
		call   func_13d02
		inc    %esi
	jump_1b6be:
		cmp    %cx,%di
		jl     jump_1b6ab
		mov    0x8(%esp),%ebx
		dec    %ebx
		mov    0x14(%esp),%dh
		mov    %bx,0x8(%esp)
		test   $0x1,%dh
		je     jump_1b6e3
		mov    0x4(%esp),%esi
		dec    %esi
		add    $0x2,%ecx
		mov    %si,0x4(%esp)
	jump_1b6e3:
		incw   0x14(%esp)
	jump_1b6e8:
		mov    0x14(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b7b8
		mov    0x4(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b6be


/*----------------------------------------------------------------*/
func_1b6fe:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		mov    $0xfffffffe,%ebp
		mov    %bx,0x10(%esp)
		jmp    jump_1b749
	jump_1b70c:
		mov    0x2(%esp),%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		inc    %edi
		call   func_13d02
		inc    %esi
	jump_1b71f:
		cmp    %cx,%di
		jl     jump_1b70c
		mov    0x4(%esp),%ebx
		dec    %ebx
		mov    0x10(%esp),%dl
		mov    %bx,0x4(%esp)
		test   $0x1,%dl
		je     jump_1b744
		mov    0x8(%esp),%esi
		dec    %esi
		add    $0x2,%ecx
		mov    %si,0x8(%esp)
	jump_1b744:
		incw   0x10(%esp)
	jump_1b749:
		mov    0x10(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1b7b8
		mov    0x8(%esp),%esi
		xor    %edi,%edi
		jmp    jump_1b71f


/*----------------------------------------------------------------*/
func_1b75b:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    $0xfffffffe,%ebp
		mov    %dx,0xc(%esp)
		jmp    jump_1b7ae
	jump_1b769:
		mov    0x4(%esp),%edi
		xor    %esi,%esi
		jmp    jump_1b784
	jump_1b771:
		mov    0x6(%esp),%eax
		movswl %di,%edx
		mov    %ebp,%ebx
		sar    $0x10,%eax
		inc    %esi
		call   func_13d02
		inc    %edi
	jump_1b784:
		cmp    %cx,%si
		jl     jump_1b771
		mov    0x8(%esp),%ebx
		inc    %ebx
		mov    0xc(%esp),%ah
		mov    %bx,0x8(%esp)
		test   $0x1,%ah
		je     jump_1b7a9
		mov    0x4(%esp),%esi
		dec    %esi
		add    $0x2,%ecx
		mov    %si,0x4(%esp)
	jump_1b7a9:
		incw   0xc(%esp)
	jump_1b7ae:
		mov    0xc(%esp),%eax
		cmp    (%esp),%ax
		jl     jump_1b769
	jump_1b7b8:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1b7bf:
/*----------------------------------------------------------------*/
		mov    %ax,data_f0b88
		mov    %dx,data_f0b86
		mov    %bx,data_f0b8e
		ret


/*----------------------------------------------------------------*/
func_1b7d4:
/*----------------------------------------------------------------*/
		mov    %ax,data_f0b86
		mov    %dx,data_f0b8e
		mov    %ebx,data_f0b74
		ret

vtable_1b7ea:
		.long   func_1b94c
		.long   func_1ba60
		.long   func_1b94c
		.long   func_1ba60


/*----------------------------------------------------------------*/
func_1b7fa:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0xc,%esp
		push   %eax
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %dx,0x4(%esp)
		movswl %bx,%edx
		mov    %ax,0x8(%esp)
		add    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		lea    0x8(%esp),%eax
		movsbl %dl,%ebx
		lea    0x4(%esp),%edx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1b84b
		sub    $0x64,%al
	jump_1b84b:
		mov    %al,%ah
		and    $0xf,%ah
		sub    %ah,%al
		mov    %al,0xc(%esp)
		mov    0x1a(%esp),%eax
		movswl %cx,%ecx
		sar    $0x10,%eax
		movswl %si,%ebx
		push   %eax
		mov    0x2(%esp),%eax
		movswl %di,%edx
		sar    $0x10,%eax
		call   func_1af22
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1b00d
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		addb   $0x10,0xc(%esp)
		cmp    $0x64,%al
		jbe    jump_1b8a0
		sub    $0x64,%al
	jump_1b8a0:
		test   %al,%al
		je     jump_1c02e
		cmp    0xc(%esp),%al
		ja     jump_1c02e
		jmp    jump_1b9d0
	jump_1b8b7:
		cmp    $0x1,%ax
		jne    jump_1b9d0
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_1b9d0
		mov    0xb(%eax),%edx
		mov    data_f0b85,%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    data_f0b86,%ax
		jne    jump_1b9d0
		mov    data_f0b9c,%eax
		sar    $0x10,%eax
		mov    %ebx,data_f0648(,%eax,4)
		incw   data_f0b9e
		jmp    jump_1b9d0
	jump_1b919:
		mov    data_f0b7e,%ax
		mov    data_f0b7a,%dx
		mov    data_f0b78,%bx
		sub    %edx,%eax
		test   %bx,%bx
		jne    jump_1b935
		inc    %eax
	jump_1b935:
		cmp    $0x3,%si
		ja     jump_1b9d0
		xor    %edx,%edx
		mov    %si,%dx
		jmp    *vtable_1b7ea(,%edx,4)


/*----------------------------------------------------------------*/
func_1b94c:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%edx
		mov    (%esp),%ebx
		cmp    %bx,%dx
		jne    jump_1b973
	jump_1b958:
		mov    0x2(%esp),%edx
		movswl %ax,%ecx
		movswl %si,%ebx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b61e
		jmp    jump_1b9d0
	jump_1b973:
		test   %si,%si
		jne    jump_1b980
		cmp    %bx,%dx
		setl   %dl
		jmp    jump_1b986
	jump_1b980:
		cmp    %bx,%dx
		setg   %dl
	jump_1b986:
		xor    %dh,%dh
		mov    %edx,%ebx
		cmpw   $0x1,data_f0b78
		jg     jump_1b9b3
	jump_1b994:
		movswl %bx,%edx
		movswl %ax,%ecx
		mov    0x6(%esp),%eax
		push   %edx
		movswl %si,%ebx
		mov    0x6(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1b1ae
		jmp    jump_1b9d0
	jump_1b9b3:
		movswl %bx,%edx
		movswl %ax,%ecx
		mov    0x6(%esp),%eax
		push   %edx
		movswl %si,%ebx
		mov    0x6(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1b43a
	jump_1b9d0:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_1c02e
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffe,%eax
		je     jump_1b9d0
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1ba1a
		sub    $0x64,%al
	jump_1ba1a:
		cmp    0xc(%esp),%al
		jbe    jump_1ba2c
		mov    %al,%ah
		and    $0xf,%ah
		cmp    $0x8,%ah
		jne    jump_1ba2c
		xor    %al,%al
	jump_1ba2c:
		test   %al,%al
		je     jump_1b919
		mov    data_f0b8e,%ax
		test   %ax,%ax
		jne    jump_1b8b7
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1b9d0


/*----------------------------------------------------------------*/
func_1ba60:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%ecx
		cmp    %cx,%di
		je     jump_1b958
		cmp    $0x1,%si
		jne    jump_1ba7f
		cmp    %cx,%di
		setg   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		jmp    jump_1ba89
	jump_1ba7f:
		mov    %ecx,%ebx
		cmp    %cx,%di
		setl   %bl
		xor    %ch,%bh
	jump_1ba89:
		cmpw   $0x1,data_f0b78
		jle    jump_1b994
		jmp    jump_1b9b3


/*----------------------------------------------------------------*/
func_1ba9c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %ecx,%ecx
		sub    $0x2,%ebx
		mov    %bx,%cx
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		sub    $0x4,%ebx
		cmp    %ebx,%ecx
		jge    jump_1bb4e
		mov    %edx,%ebx
		sub    $0x4,%ebx
		mov    data_ba83e,%ecx
		sar    $0x10,%ecx
		and    $0xffff,%ebx
		sub    $0x8,%ecx
		cmp    %ecx,%ebx
		jge    jump_1bb4e
		imul   data_ba844,%dx
		mov    data_f0b8a,%cx
		add    %edx,%eax
		cmp    $0x2,%cx
		jne    jump_1bb20
		movswl %ax,%edx
		mov    data_e8f46(,%edx,2),%edx
		sar    $0x10,%edx
		cmp    $0xffffc5cc,%edx
		jle    jump_1bb0c
		cmp    $0xfffffff6,%edx
		jle    jump_1bb43
	jump_1bb0c:
		movswl %ax,%edx
		mov    data_e8f46(,%edx,2),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jl     jump_1bb4e
		jmp    jump_1bb43
	jump_1bb20:
		cmp    $0x3,%cx
		jne    jump_1bb43
		cwtl
		add    %eax,%eax
		mov    data_e8f46(%eax),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jl     jump_1bb4e
		movw   $0xfffe,data_e8f48(%eax)
		pop    %ecx
		pop    %ebx
		ret
	jump_1bb43:
		cwtl
		movw   $0xfffe,data_e8f48(,%eax,2)
	jump_1bb4e:
		pop    %ecx
		pop    %ebx
		ret

vtable_1bb52:
		.long   func_1bb96
		.long   func_1bbea
		.long   func_1bc4f
		.long   func_1bca3


/*----------------------------------------------------------------*/
func_1bb62:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x24,%esp
		push   %eax
		mov    %edx,%edi
		mov    %ecx,0x10(%esp)
		mov    0x34(%esp),%edx
		mov    %ebx,%eax
		mov    $0x1,%ebx
		sub    %ebx,%ecx
		mov    %ecx,0x10(%esp)
		cmp    $0x3,%ax
		ja     jump_1bd04
		and    $0xffff,%eax
		jmp    *vtable_1bb52(,%eax,4)


/*----------------------------------------------------------------*/
func_1bb96:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bba5
		movl   $0xffffffff,0x14(%esp)
		jmp    jump_1bba9
	jump_1bba5:
		mov    %ebx,0x14(%esp)
	jump_1bba9:
		xor    %eax,%eax
		inc    %edi
		mov    %eax,0xc(%esp)
		jmp    jump_1bbd4
	jump_1bbb2:
		movswl %di,%edx
		movswl %cx,%eax
		call   func_1ba9c
		mov    0x14(%esp),%eax
		inc    %esi
		add    %eax,%ecx
	jump_1bbc4:
		cmp    %bx,%si
		jl     jump_1bbb2
		mov    0xc(%esp),%ecx
		inc    %edi
		inc    %ecx
		inc    %ebx
		mov    %ecx,0xc(%esp)
	jump_1bbd4:
		mov    0xc(%esp),%eax
		cmp    0x10(%esp),%ax
		jge    jump_1bd04
		mov    (%esp),%ecx
		xor    %esi,%esi
		jmp    jump_1bbc4


/*----------------------------------------------------------------*/
func_1bbea:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bbf9
		movl   $0xffffffff,0x18(%esp)
		jmp    jump_1bbfd
	jump_1bbf9:
		mov    %ebx,0x18(%esp)
	jump_1bbfd:
		mov    (%esp),%edx
		xor    %eax,%eax
		dec    %edx
		mov    %eax,0x4(%esp)
		mov    %dx,(%esp)
		jmp    jump_1bc3a
	jump_1bc0d:
		mov    -0x2(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		call   func_1ba9c
		mov    0x18(%esp),%eax
		inc    %esi
		add    %eax,%ecx
	jump_1bc23:
		cmp    %bx,%si
		jl     jump_1bc0d
		mov    (%esp),%ecx
		mov    0x4(%esp),%esi
		inc    %ebx
		dec    %ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %esi,0x4(%esp)
	jump_1bc3a:
		mov    0x4(%esp),%eax
		cmp    0x10(%esp),%ax
		jge    jump_1bd04
		mov    %edi,%ecx
		xor    %esi,%esi
		jmp    jump_1bc23


/*----------------------------------------------------------------*/
func_1bc4f:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bc5a
		mov    %ebx,0x20(%esp)
		jmp    jump_1bc62
	jump_1bc5a:
		movl   $0xffffffff,0x20(%esp)
	jump_1bc62:
		xor    %edx,%edx
		dec    %edi
		mov    %edx,0x8(%esp)
		jmp    jump_1bc8d
	jump_1bc6b:
		movswl %di,%edx
		movswl %si,%eax
		call   func_1ba9c
		mov    0x20(%esp),%eax
		inc    %ecx
		add    %eax,%esi
	jump_1bc7d:
		cmp    %bx,%cx
		jl     jump_1bc6b
		mov    0x8(%esp),%ecx
		dec    %edi
		inc    %ecx
		inc    %ebx
		mov    %ecx,0x8(%esp)
	jump_1bc8d:
		mov    0x8(%esp),%eax
		cmp    0x10(%esp),%ax
		jge    jump_1bd04
		mov    (%esp),%esi
		xor    %ecx,%ecx
		jmp    jump_1bc7d


/*----------------------------------------------------------------*/
func_1bca3:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bcae
		mov    %ebx,0x1c(%esp)
		jmp    jump_1bcb6
	jump_1bcae:
		movl   $0xffffffff,0x1c(%esp)
	jump_1bcb6:
		mov    (%esp),%ecx
		xor    %edx,%edx
		inc    %ecx
		mov    %edx,0x24(%esp)
		mov    %cx,(%esp)
		jmp    jump_1bcf9
	jump_1bcc6:
		mov    %edi,%esi
		xor    %ecx,%ecx
		jmp    jump_1bce2
	jump_1bccc:
		mov    -0x2(%esp),%eax
		movswl %si,%edx
		sar    $0x10,%eax
		call   func_1ba9c
		mov    0x1c(%esp),%eax
		inc    %ecx
		add    %eax,%esi
	jump_1bce2:
		cmp    %bx,%cx
		jl     jump_1bccc
		mov    (%esp),%ecx
		mov    0x24(%esp),%esi
		inc    %ebx
		inc    %ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %esi,0x24(%esp)
	jump_1bcf9:
		mov    0x24(%esp),%eax
		cmp    0x10(%esp),%ax
		jl     jump_1bcc6
	jump_1bd04:
		add    $0x28,%esp
		pop    %edi
		pop    %esi
		ret    $0x4

vtable_1bd0e:
		.long   func_1bd57
		.long   func_1bdc3
		.long   func_1be3c
		.long   func_1bea8


/*----------------------------------------------------------------*/
func_1bd1e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x24,%esp
		push   %eax
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %ecx,0x4(%esp)
		mov    0x34(%esp),%ecx
		mov    -0x2(%esp),%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		mov    $0x2,%ebx
		call   func_1ba9c
		cmp    $0x3,%si
		ja     jump_1bd04
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *vtable_1bd0e(,%eax,4)


/*----------------------------------------------------------------*/
func_1bd57:
/*----------------------------------------------------------------*/
		test   %cx,%cx
		je     jump_1bd66
		movl   $0xffffffff,0x1c(%esp)
		jmp    jump_1bd6e
	jump_1bd66:
		movl   $0x1,0x1c(%esp)
	jump_1bd6e:
		mov    $0x1,%ecx
		mov    %cx,0x10(%esp)
		add    %ecx,%edi
		jmp    jump_1bdad
	jump_1bd7c:
		movswl %di,%edx
		movswl %cx,%eax
		call   func_1ba9c
		mov    0x1c(%esp),%edx
		inc    %esi
		add    %edx,%ecx
	jump_1bd8e:
		cmp    %bx,%si
		jl     jump_1bd7c
		mov    0x10(%esp),%cl
		inc    %edi
		test   $0x1,%cl
		je     jump_1bda7
		mov    0x1c(%esp),%eax
		add    %ax,(%esp)
		jmp    jump_1bda8
	jump_1bda7:
		inc    %ebx
	jump_1bda8:
		incw   0x10(%esp)
	jump_1bdad:
		mov    0x10(%esp),%eax
		cmp    0x4(%esp),%ax
		jge    jump_1bd04
		mov    (%esp),%ecx
		xor    %esi,%esi
		jmp    jump_1bd8e


/*----------------------------------------------------------------*/
func_1bdc3:
/*----------------------------------------------------------------*/
		test   %cx,%cx
		je     jump_1bdd2
		movl   $0xffffffff,0x18(%esp)
		jmp    jump_1bdda
	jump_1bdd2:
		movl   $0x1,0x18(%esp)
	jump_1bdda:
		mov    $0x1,%ecx
		mov    (%esp),%esi
		sub    %ecx,%esi
		mov    %cx,0x14(%esp)
		mov    %si,(%esp)
		jmp    jump_1be27
	jump_1bdef:
		mov    -0x2(%esp),%eax
		movswl %si,%edx
		sar    $0x10,%eax
		call   func_1ba9c
		mov    0x18(%esp),%edx
		inc    %ecx
		add    %edx,%esi
	jump_1be05:
		cmp    %bx,%cx
		jl     jump_1bdef
		mov    (%esp),%ecx
		dec    %ecx
		mov    0x14(%esp),%dh
		mov    %cx,(%esp)
		test   $0x1,%dh
		je     jump_1be21
		add    0x18(%esp),%edi
		jmp    jump_1be22
	jump_1be21:
		inc    %ebx
	jump_1be22:
		incw   0x14(%esp)
	jump_1be27:
		mov    0x14(%esp),%eax
		cmp    0x4(%esp),%ax
		jge    jump_1bd04
		mov    %edi,%esi
		xor    %ecx,%ecx
		jmp    jump_1be05


/*----------------------------------------------------------------*/
func_1be3c:
/*----------------------------------------------------------------*/
		test   %cx,%cx
		je     jump_1be4b
		movl   $0x1,0x20(%esp)
		jmp    jump_1be53
	jump_1be4b:
		movl   $0xffffffff,0x20(%esp)
	jump_1be53:
		mov    $0x1,%esi
		mov    %si,0xc(%esp)
		sub    %esi,%edi
		jmp    jump_1be92
	jump_1be61:
		movswl %di,%edx
		movswl %cx,%eax
		call   func_1ba9c
		mov    0x20(%esp),%eax
		inc    %esi
		add    %eax,%ecx
	jump_1be73:
		cmp    %bx,%si
		jl     jump_1be61
		mov    0xc(%esp),%dl
		dec    %edi
		test   $0x1,%dl
		je     jump_1be8c
		mov    0x20(%esp),%eax
		add    %ax,(%esp)
		jmp    jump_1be8d
	jump_1be8c:
		inc    %ebx
	jump_1be8d:
		incw   0xc(%esp)
	jump_1be92:
		mov    0xc(%esp),%eax
		cmp    0x4(%esp),%ax
		jge    jump_1bd04
		mov    (%esp),%ecx
		xor    %esi,%esi
		jmp    jump_1be73


/*----------------------------------------------------------------*/
func_1bea8:
/*----------------------------------------------------------------*/
		test   %cx,%cx
		je     jump_1beb7
		movl   $0x1,0x24(%esp)
		jmp    jump_1bebf
	jump_1beb7:
		movl   $0xffffffff,0x24(%esp)
	jump_1bebf:
		mov    $0x1,%esi
		mov    (%esp),%eax
		add    %esi,%eax
		mov    %si,0x8(%esp)
		mov    %ax,(%esp)
		jmp    jump_1bf0c
	jump_1bed4:
		mov    %edi,%ecx
		xor    %esi,%esi
		jmp    jump_1bef0
	jump_1beda:
		mov    -0x2(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		call   func_1ba9c
		mov    0x24(%esp),%eax
		inc    %esi
		add    %eax,%ecx
	jump_1bef0:
		cmp    %bx,%si
		jl     jump_1beda
		incw   (%esp)
		testb  $0x1,0x8(%esp)
		je     jump_1bf06
		add    0x24(%esp),%edi
		jmp    jump_1bf07
	jump_1bf06:
		inc    %ebx
	jump_1bf07:
		incw   0x8(%esp)
	jump_1bf0c:
		mov    0x8(%esp),%eax
		cmp    0x4(%esp),%ax
		jl     jump_1bed4
		jmp    jump_1bd04

vtable_1bf1e:
		.long   func_1bf53
		.long   func_1bf8d
		.long   func_1bfc7
		.long   func_1bffa


/*----------------------------------------------------------------*/
func_1bf2e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x1c(%esp),%edx
		dec    %ecx
		cmp    $0x3,%bx
		ja     jump_1c02e
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_1bf1e(,%eax,4)


/*----------------------------------------------------------------*/
func_1bf53:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bf62
		movl   $0xffffffff,0xc(%esp)
		jmp    jump_1bf6a
	jump_1bf62:
		movl   $0x1,0xc(%esp)
	jump_1bf6a:
		inc    %esi
		xor    %ebx,%ebx
		jmp    jump_1bf82
	jump_1bf6f:
		movswl %si,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %ebx
		mov    0xc(%esp),%edx
		inc    %esi
		add    %edx,%edi
	jump_1bf82:
		cmp    %cx,%bx
		jge    jump_1c02e
		jmp    jump_1bf6f


/*----------------------------------------------------------------*/
func_1bf8d:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bf9c
		movl   $0xffffffff,0x8(%esp)
		jmp    jump_1bfa4
	jump_1bf9c:
		movl   $0x1,0x8(%esp)
	jump_1bfa4:
		dec    %edi
		xor    %ebx,%ebx
		jmp    jump_1bfbc
	jump_1bfa9:
		movswl %si,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %ebx
		mov    0x8(%esp),%eax
		dec    %edi
		add    %eax,%esi
	jump_1bfbc:
		cmp    %cx,%bx
		jge    jump_1c02e
		jmp    jump_1bfa9


/*----------------------------------------------------------------*/
func_1bfc7:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1bfd5
		movl   $0x1,(%esp)
		jmp    jump_1bfdc
	jump_1bfd5:
		movl   $0xffffffff,(%esp)
	jump_1bfdc:
		dec    %esi
		xor    %ebx,%ebx
		jmp    jump_1bff3
	jump_1bfe1:
		movswl %si,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %ebx
		mov    (%esp),%edx
		dec    %esi
		add    %edx,%edi
	jump_1bff3:
		cmp    %cx,%bx
		jge    jump_1c02e
		jmp    jump_1bfe1


/*----------------------------------------------------------------*/
func_1bffa:
/*----------------------------------------------------------------*/
		test   %dx,%dx
		je     jump_1c009
		movl   $0x1,0x4(%esp)
		jmp    jump_1c011
	jump_1c009:
		movl   $0xffffffff,0x4(%esp)
	jump_1c011:
		inc    %edi
		xor    %ebx,%ebx
		jmp    jump_1c029
	jump_1c016:
		movswl %si,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %ebx
		mov    0x4(%esp),%eax
		inc    %edi
		add    %eax,%esi
	jump_1c029:
		cmp    %cx,%bx
		jl     jump_1c016
	jump_1c02e:
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		ret    $0x4

vtable_1c036:
		.long   func_1c073
		.long   func_1c0bb
		.long   func_1c108
		.long   func_1c153


/*----------------------------------------------------------------*/
func_1c046:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x18,%esp
		mov    %eax,%edi
		mov    %dx,0x14(%esp)
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		mov    $0x1,%ebx
		cmp    $0x3,%ax
		ja     jump_1c19c
		and    $0xffff,%eax
		jmp    *vtable_1c036(,%eax,4)


/*----------------------------------------------------------------*/
func_1c073:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
		jmp    jump_1c0a7
	jump_1c07c:
		mov    0x12(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		inc    %esi
		call   func_1ba9c
		inc    %ecx
	jump_1c08d:
		cmp    %bx,%si
		jl     jump_1c07c
		incw   0x14(%esp)
		testb  $0x1,0xc(%esp)
		je     jump_1c0a2
		add    $0x2,%ebx
		dec    %edi
	jump_1c0a2:
		incw   0xc(%esp)
	jump_1c0a7:
		mov    0xc(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c19c
		mov    %edi,%ecx
		xor    %esi,%esi
		jmp    jump_1c08d


/*----------------------------------------------------------------*/
func_1c0bb:
/*----------------------------------------------------------------*/
		xor    %esi,%esi
		mov    %si,0x10(%esp)
		jmp    jump_1c0f2
	jump_1c0c4:
		movswl %cx,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %esi
		inc    %ecx
	jump_1c0d1:
		cmp    %bx,%si
		jl     jump_1c0c4
		mov    0x10(%esp),%dh
		dec    %edi
		test   $0x1,%dh
		je     jump_1c0ed
		mov    0x14(%esp),%ecx
		dec    %ecx
		add    $0x2,%ebx
		mov    %cx,0x14(%esp)
	jump_1c0ed:
		incw   0x10(%esp)
	jump_1c0f2:
		mov    0x10(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c19c
		mov    0x14(%esp),%ecx
		xor    %esi,%esi
		jmp    jump_1c0d1


/*----------------------------------------------------------------*/
func_1c108:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		mov    %cx,0x8(%esp)
		jmp    jump_1c143
	jump_1c111:
		mov    0x12(%esp),%edx
		movswl %si,%eax
		sar    $0x10,%edx
		inc    %ecx
		call   func_1ba9c
		inc    %esi
	jump_1c122:
		cmp    %bx,%cx
		jl     jump_1c111
		mov    0x14(%esp),%ecx
		dec    %ecx
		mov    0x8(%esp),%dl
		mov    %cx,0x14(%esp)
		test   $0x1,%dl
		je     jump_1c13e
		add    $0x2,%ebx
		dec    %edi
	jump_1c13e:
		incw   0x8(%esp)
	jump_1c143:
		mov    0x8(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c19c
		mov    %edi,%esi
		xor    %ecx,%ecx
		jmp    jump_1c122


/*----------------------------------------------------------------*/
func_1c153:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    %dx,0x4(%esp)
		jmp    jump_1c192
	jump_1c15c:
		mov    0x14(%esp),%esi
		xor    %ecx,%ecx
		jmp    jump_1c171
	jump_1c164:
		movswl %si,%edx
		movswl %di,%eax
		call   func_1ba9c
		inc    %ecx
		inc    %esi
	jump_1c171:
		cmp    %bx,%cx
		jl     jump_1c164
		mov    0x4(%esp),%ah
		inc    %edi
		test   $0x1,%ah
		je     jump_1c18d
		mov    0x14(%esp),%ecx
		dec    %ecx
		add    $0x2,%ebx
		mov    %cx,0x14(%esp)
	jump_1c18d:
		incw   0x4(%esp)
	jump_1c192:
		mov    0x4(%esp),%eax
		cmp    (%esp),%ax
		jl     jump_1c15c
	jump_1c19c:
		add    $0x18,%esp
		pop    %edi
		pop    %esi
		ret

vtable_1c1a2:
		.long   func_1c1e0
		.long   func_1c21f
		.long   func_1c270
		.long   func_1c2b7


/*----------------------------------------------------------------*/
func_1c1b2:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x14,%esp
		push   %eax
		mov    %edx,%edi
		mov    %ecx,0x14(%esp)
		mov    %ebx,%eax
		mov    $0x1,%ebx
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    %edx,0x14(%esp)
		cmp    $0x3,%ax
		ja     jump_1c19c
		and    $0xffff,%eax
		jmp    *vtable_1c1a2(,%eax,4)


/*----------------------------------------------------------------*/
func_1c1e0:
/*----------------------------------------------------------------*/
		xor    %esi,%esi
		add    %ebx,%edi
		jmp    jump_1c209
	jump_1c1e6:
		movswl %di,%edx
		movswl %cx,%eax
		call   func_1ba9c
		inc    %esi
		inc    %ecx
	jump_1c1f3:
		cmp    %bx,%si
		jl     jump_1c1e6
		mov    (%esp),%ecx
		mov    0x4(%esp),%esi
		inc    %edi
		add    $0x2,%ebx
		dec    %ecx
		inc    %esi
		mov    %cx,(%esp)
	jump_1c209:
		mov    %esi,0x4(%esp)
		mov    0x4(%esp),%eax
		cmp    0x14(%esp),%ax
		jge    jump_1c19c
		mov    (%esp),%ecx
		xor    %esi,%esi
		jmp    jump_1c1f3


/*----------------------------------------------------------------*/
func_1c21f:
/*----------------------------------------------------------------*/
		mov    (%esp),%ecx
		xor    %edx,%edx
		sub    %ebx,%ecx
		mov    %edx,0x10(%esp)
		mov    %cx,(%esp)
		jmp    jump_1c25b
	jump_1c230:
		mov    -0x2(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_1ba9c
		inc    %ecx
	jump_1c241:
		cmp    %bx,%si
		jl     jump_1c230
		mov    (%esp),%ecx
		mov    0x10(%esp),%esi
		add    $0x2,%ebx
		dec    %edi
		dec    %ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %esi,0x10(%esp)
	jump_1c25b:
		mov    0x10(%esp),%eax
		cmp    0x14(%esp),%ax
		jge    jump_1c19c
		mov    %edi,%ecx
		xor    %esi,%esi
		jmp    jump_1c241


/*----------------------------------------------------------------*/
func_1c270:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		sub    %ebx,%edi
		mov    %eax,0xc(%esp)
		jmp    jump_1c2a1
	jump_1c27a:
		movswl %di,%edx
		movswl %si,%eax
		call   func_1ba9c
		inc    %ecx
		inc    %esi
	jump_1c287:
		cmp    %bx,%cx
		jl     jump_1c27a
		mov    (%esp),%ecx
		mov    0xc(%esp),%esi
		dec    %edi
		add    $0x2,%ebx
		dec    %ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %esi,0xc(%esp)
	jump_1c2a1:
		mov    0xc(%esp),%eax
		cmp    0x14(%esp),%ax
		jge    jump_1c19c
		mov    (%esp),%esi
		xor    %ecx,%ecx
		jmp    jump_1c287


/*----------------------------------------------------------------*/
func_1c2b7:
/*----------------------------------------------------------------*/
		mov    (%esp),%esi
		xor    %ecx,%ecx
		add    %ebx,%esi
		mov    %ecx,0x8(%esp)
		mov    %si,(%esp)
		jmp    jump_1c2f9
	jump_1c2c8:
		mov    %edi,%ecx
		xor    %esi,%esi
		jmp    jump_1c2df
	jump_1c2ce:
		mov    -0x2(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_1ba9c
		inc    %ecx
	jump_1c2df:
		cmp    %bx,%si
		jl     jump_1c2ce
		mov    (%esp),%ecx
		mov    0x8(%esp),%esi
		add    $0x2,%ebx
		dec    %edi
		inc    %ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %esi,0x8(%esp)
	jump_1c2f9:
		mov    0x8(%esp),%eax
		cmp    0x14(%esp),%ax
		jl     jump_1c2c8
		jmp    jump_1c19c

vtable_1c30a:
		.long   func_1c34a
		.long   func_1c3eb
		.long   func_1c487
		.long   func_1c523


/*----------------------------------------------------------------*/
func_1c31a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x48,%esp
		push   %eax
		push   %edx
		push   %ecx
		mov    %ecx,%edx
		dec    %edx
		mov    $0x3,%edi
		mov    %edx,(%esp)
		cmp    %di,%bx
		ja     jump_1c5c7
		xor    %ecx,%ecx
		mov    %bx,%cx
		mov    0x4(%esp),%ebx
		dec    %eax
		dec    %ebx
		jmp    *vtable_1c30a(,%ecx,4)


/*----------------------------------------------------------------*/
func_1c34a:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ebp
		mov    %eax,0x50(%esp)
		mov    0x4(%esp),%eax
		xor    %esi,%esi
		inc    %eax
		mov    %si,0x1c(%esp)
		mov    %ax,0x4(%esp)
		jmp    jump_1c3cc
	jump_1c366:
		mov    0x2(%esp),%ecx
		mov    0x26(%esp),%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffb,%eax
		jne    jump_1c38e
		mov    %ebp,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13d02
	jump_1c38e:
		mov    0x28(%esp),%ebx
		mov    0x40(%esp),%ecx
		inc    %ebx
		inc    %ecx
		mov    %bx,0x28(%esp)
		mov    %ecx,0x40(%esp)
	jump_1c3a1:
		cmp    0x40(%esp),%di
		jg     jump_1c366
		mov    0x4(%esp),%esi
		inc    %esi
		mov    0x1c(%esp),%bl
		mov    %si,0x4(%esp)
		test   $0x1,%bl
		je     jump_1c3c7
		mov    0x50(%esp),%eax
		dec    %eax
		add    $0x2,%edi
		mov    %eax,0x50(%esp)
	jump_1c3c7:
		incw   0x1c(%esp)
	jump_1c3cc:
		mov    0x1c(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c5c7
		mov    0x50(%esp),%eax
		xor    %ebx,%ebx
		mov    %ax,0x28(%esp)
		mov    %ebx,0x40(%esp)
		jmp    jump_1c3a1


/*----------------------------------------------------------------*/
func_1c3eb:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ebp
		mov    %ebx,0x4c(%esp)
		xor    %ecx,%ecx
		mov    %ax,0x18(%esp)
		mov    %cx,0x10(%esp)
		jmp    jump_1c468
	jump_1c402:
		mov    0x3a(%esp),%esi
		mov    0x16(%esp),%ecx
		sar    $0x10,%esi
		sar    $0x10,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffb,%eax
		jne    jump_1c42a
		mov    %ebp,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   func_13d02
	jump_1c42a:
		mov    0x3c(%esp),%ecx
		mov    0x34(%esp),%esi
		inc    %ecx
		inc    %esi
		mov    %cx,0x3c(%esp)
		mov    %esi,0x34(%esp)
	jump_1c43d:
		cmp    0x34(%esp),%di
		jg     jump_1c402
		mov    0x18(%esp),%eax
		dec    %eax
		mov    0x10(%esp),%dh
		mov    %ax,0x18(%esp)
		test   $0x1,%dh
		je     jump_1c463
		mov    0x4c(%esp),%edx
		dec    %edx
		add    $0x2,%edi
		mov    %edx,0x4c(%esp)
	jump_1c463:
		incw   0x10(%esp)
	jump_1c468:
		mov    0x10(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c5c7
		mov    0x4c(%esp),%eax
		xor    %ecx,%ecx
		mov    %ax,0x3c(%esp)
		mov    %ecx,0x34(%esp)
		jmp    jump_1c43d


/*----------------------------------------------------------------*/
func_1c487:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ebp
		mov    %eax,0xc(%esp)
		xor    %edx,%edx
		mov    %bx,0x48(%esp)
		mov    %dx,0x14(%esp)
		jmp    jump_1c504
	jump_1c49e:
		mov    0x46(%esp),%ecx
		mov    0x36(%esp),%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffb,%eax
		jne    jump_1c4c6
		mov    %ebp,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13d02
	jump_1c4c6:
		mov    0x38(%esp),%eax
		mov    0x24(%esp),%edx
		inc    %eax
		inc    %edx
		mov    %ax,0x38(%esp)
		mov    %edx,0x24(%esp)
	jump_1c4d9:
		cmp    0x24(%esp),%di
		jg     jump_1c49e
		mov    0x48(%esp),%ebx
		dec    %ebx
		mov    0x14(%esp),%dl
		mov    %bx,0x48(%esp)
		test   $0x1,%dl
		je     jump_1c4ff
		mov    0xc(%esp),%ecx
		dec    %ecx
		add    $0x2,%edi
		mov    %ecx,0xc(%esp)
	jump_1c4ff:
		incw   0x14(%esp)
	jump_1c504:
		mov    0x14(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_1c5c7
		mov    0xc(%esp),%eax
		mov    %ax,0x38(%esp)
		xor    %eax,%eax
		mov    %eax,0x24(%esp)
		jmp    jump_1c4d9


/*----------------------------------------------------------------*/
func_1c523:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%esi
		mov    $0xfffffffc,%ebp
		mov    %ebx,0x20(%esp)
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,0x44(%esp)
		mov    %si,0x8(%esp)
		jmp    jump_1c5b9
	jump_1c542:
		mov    0x20(%esp),%eax
		xor    %ebx,%ebx
		mov    %ax,0x2c(%esp)
		mov    %ebx,0x30(%esp)
		jmp    jump_1c58e
	jump_1c553:
		mov    0x2a(%esp),%ecx
		mov    0x6(%esp),%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffb,%eax
		jne    jump_1c57b
		mov    %ebp,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_13d02
	jump_1c57b:
		mov    0x2c(%esp),%ebx
		mov    0x30(%esp),%ecx
		inc    %ebx
		inc    %ecx
		mov    %bx,0x2c(%esp)
		mov    %ecx,0x30(%esp)
	jump_1c58e:
		cmp    0x30(%esp),%di
		jg     jump_1c553
		mov    0x8(%esp),%esi
		inc    %esi
		mov    0x44(%esp),%ah
		mov    %si,0x8(%esp)
		test   $0x1,%ah
		je     jump_1c5b4
		mov    0x20(%esp),%eax
		dec    %eax
		add    $0x2,%edi
		mov    %eax,0x20(%esp)
	jump_1c5b4:
		incw   0x44(%esp)
	jump_1c5b9:
		mov    0x44(%esp),%eax
		cmp    (%esp),%ax
		jl     jump_1c542
	jump_1c5c7:
		add    $0x54,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1c5ce:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %ecx,%ecx
		sub    $0x2,%ebx
		mov    %bx,%cx
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		sub    $0x4,%ebx
		cmp    %ebx,%ecx
		jge    jump_1c628
		mov    %edx,%ebx
		sub    $0x4,%ebx
		mov    data_ba83e,%ecx
		sar    $0x10,%ecx
		and    $0xffff,%ebx
		sub    $0x8,%ecx
		cmp    %ecx,%ebx
		jge    jump_1c628
		imul   data_ba844,%dx
		add    %edx,%eax
		cwtl
		mov    data_e8f48(,%eax,2),%dx
		add    $0x3a98,%edx
		neg    %edx
		mov    %dx,data_e8f48(,%eax,2)
	jump_1c628:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1c62b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %ecx,%ecx
		sub    $0x2,%ebx
		mov    %bx,%cx
		mov    data_ba842,%ebx
		sar    $0x10,%ebx
		sub    $0x4,%ebx
		cmp    %ebx,%ecx
		jge    jump_1c682
		mov    %edx,%ebx
		sub    $0x4,%ebx
		mov    data_ba83e,%ecx
		sar    $0x10,%ecx
		and    $0xffff,%ebx
		sub    $0x8,%ecx
		cmp    %ecx,%ebx
		jge    jump_1c682
		imul   data_ba844,%dx
		add    %edx,%eax
		cwtl
		mov    data_e8f48(,%eax,2),%dx
		add    $0xa,%edx
		neg    %edx
		mov    %dx,data_e8f48(,%eax,2)
	jump_1c682:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1c685:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    %eax,%edi
		mov    %dx,0xc(%esp)
		mov    %bx,0x18(%esp)
		mov    %ecx,%esi
		mov    %ax,0x14(%esp)
		mov    0x18(%esp),%al
		add    $0x2,%al
		mov    %dx,0x10(%esp)
		and    $0x3,%al
		lea    0x10(%esp),%edx
		movsbl %al,%ebx
		lea    0x14(%esp),%eax
		call   func_49abc
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1c6d7
		sub    $0x64,%ah
	jump_1c6d7:
		mov    %ah,%al
		and    $0xf,%al
		sub    %al,%ah
		mov    %ah,0x1c(%esp)
		mov    %ah,%al
		add    $0x8,%al
		mov    %al,0x24(%esp)
		mov    %ah,%al
		mov    0x16(%esp),%ebx
		add    $0x10,%al
		mov    0xa(%esp),%edx
		mov    %al,0x20(%esp)
		mov    %ah,%al
		mov    $0x1,%ecx
		add    $0x18,%al
		sar    $0x10,%ebx
		mov    %al,0x28(%esp)
		movswl %si,%eax
		sar    $0x10,%edx
		push   %eax
		movswl %di,%eax
		call   func_1af22
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
	jump_1c725:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_1c7d0
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1c756
		sub    $0x64,%al
	jump_1c756:
		test   %al,%al
		je     jump_1c760
		cmp    0x28(%esp),%al
		jne    jump_1c77a
	jump_1c760:
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0xfffffffb,%ebx
	jump_1c76d:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1c725
	jump_1c77a:
		cmp    0x20(%esp),%al
		jbe    jump_1c795
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1c5ce
		jmp    jump_1c725
	jump_1c795:
		cmp    0x1c(%esp),%al
		jbe    jump_1c7b3
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1c62b
		jmp    jump_1c725
	jump_1c7b3:
		cmpw   $0x3,data_f0b8e
		jne    jump_1c725
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0xffffffff,%ebx
		jmp    jump_1c76d
	jump_1c7d0:
		movswl %si,%eax
		mov    0x16(%esp),%ebp
		mov    %eax,(%esp)
		sar    $0x10,%ebp
		mov    0xa(%esp),%eax
		mov    (%esp),%ecx
		sar    $0x10,%eax
		mov    %ebp,%ebx
		mov    %eax,0x4(%esp)
		movswl %di,%eax
		mov    0x4(%esp),%edx
		mov    %eax,0x8(%esp)
		call   func_1c31a
		mov    0xc(%esp),%eax
		mov    %ax,0x10(%esp)
		mov    0x18(%esp),%al
		inc    %al
		lea    0x10(%esp),%edx
		and    $0x3,%al
		mov    $0x3,%ecx
		movsbl %al,%ebx
		lea    0x14(%esp),%eax
		mov    %di,0x14(%esp)
		call   func_49abc
		mov    (%esp),%edx
		mov    0x12(%esp),%eax
		mov    %ebp,%ebx
		push   %edx
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1af22
		mov    0x4(%esp),%edx
		mov    0x8(%esp),%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_1c857
		sub    $0x64,%ah
	jump_1c857:
		test   %ah,%ah
		je     jump_1c861
		cmp    0x20(%esp),%ah
		jbe    jump_1c87a
	jump_1c861:
		mov    0x16(%esp),%ebx
		mov    0xa(%esp),%edx
		movswl %si,%ecx
		movswl %di,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1c1b2
	jump_1c87a:
		mov    0xa(%esp),%edx
		mov    $0xfffffffe,%ebx
		movswl %di,%eax
		sar    $0x10,%edx
		call   func_13d02
		jmp    jump_1ca64
	jump_1c893:
		cmp    $0xfffffffb,%edx
		jge    jump_1c8b3
		mov    0xe(%esp),%edx
		add    $0xa,%esi
	jump_1c89f:
		mov    0x12(%esp),%eax
		neg    %esi
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl %si,%ebx
		call   func_13d02
	jump_1c8b3:
		cmp    data_f0b86,%si
		jle    jump_1ca64
		mov    0x16(%esp),%ebx
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    data_f0b74,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
	jump_1c8e0:
		cmp    $0x1,%ax
		jne    jump_1ca64
		mov    0x14(%esp),%eax
		mov    %ax,data_f0b84
		mov    0x10(%esp),%eax
		mov    %si,data_f0b86
		mov    %ax,data_f0b82
		jmp    jump_1ca64
	jump_1c90a:
		mov    0xe(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    data_f0b74,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    data_f0b86,%cx
		mov    %eax,%esi
		cmp    %cx,%ax
		jge    jump_1ca64
		mov    0x16(%esp),%ebx
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    data_f0b74,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_16699
		jmp    jump_1c8e0
	jump_1c956:
		cmp    0x28(%esp),%bl
		jne    jump_1c967
		movw   $0x2,data_f0b8a
		jmp    jump_1c981
	jump_1c967:
		cmp    0x24(%esp),%bl
		jne    jump_1c978
		movw   $0x3,data_f0b8a
		jmp    jump_1c981
	jump_1c978:
		movw   $0x1,data_f0b8a
	jump_1c981:
		mov    data_f0b7e,%ax
		mov    data_f0b7a,%dx
		mov    data_f0b78,%bx
		sub    %edx,%eax
		test   %bx,%bx
		jne    jump_1c99d
		inc    %eax
	jump_1c99d:
		testb  $0x1,0x18(%esp)
		jne    jump_1cafc
		mov    0x14(%esp),%ecx
		cmp    %cx,%di
		jne    jump_1c9d3
	jump_1c9b1:
		mov    0x16(%esp),%ebx
		mov    0xe(%esp),%edx
		movswl %ax,%ecx
		mov    0x12(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1c046
		jmp    jump_1ca64
	jump_1c9d3:
		cmpw   $0x0,0x18(%esp)
		jne    jump_1c9e3
		cmp    %cx,%di
		setg   %dl
		jmp    jump_1c9e9
	jump_1c9e3:
		cmp    %cx,%di
		setl   %dl
	jump_1c9e9:
		xor    %dh,%dh
		cmpw   $0x1,data_f0b78
		jg     jump_1ca18
	jump_1c9f5:
		mov    0x16(%esp),%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		mov    0x12(%esp),%eax
		push   %edx
		sar    $0x10,%ebx
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1bf2e
		jmp    jump_1ca64
	jump_1ca18:
		movswl %si,%ebx
		cmp    $0xfffffffc,%ebx
		jne    jump_1ca43
	jump_1ca20:
		mov    0x16(%esp),%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		mov    0x12(%esp),%eax
		push   %edx
		sar    $0x10,%ebx
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1bb62
		jmp    jump_1ca64
	jump_1ca43:
		mov    0x16(%esp),%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		mov    0x12(%esp),%eax
		push   %edx
		sar    $0x10,%ebx
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1bd1e
	jump_1ca64:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_1cb4c
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		mov    %al,%bl
		cmp    $0x64,%al
		jbe    jump_1ca96
		sub    $0x64,%bl
	jump_1ca96:
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		movswl %ax,%edx
		mov    %eax,%esi
		cmp    $0xfffffffe,%edx
		je     jump_1ca64
		test   %bl,%bl
		je     jump_1c956
		mov    %bl,%bh
		and    $0xf,%bh
		cmp    $0x8,%bh
		je     jump_1c956
		cmpw   $0x1,data_f0b78
		jle    jump_1ca64
		cmpw   $0x2,data_f0b8e
		jne    jump_1c90a
		cmp    $0xffffc5cc,%edx
		jge    jump_1c893
		mov    0xe(%esp),%edx
		add    $0x3a98,%esi
		jmp    jump_1c89f
	jump_1cafc:
		mov    0x10(%esp),%edx
		mov    0xc(%esp),%ecx
		cmp    %cx,%dx
		je     jump_1c9b1
		cmpw   $0x1,0x18(%esp)
		jne    jump_1cb21
		mov    0x10(%esp),%edx
		cmp    %cx,%dx
		setl   %dl
		jmp    jump_1cb2b
	jump_1cb21:
		mov    0x10(%esp),%edx
		cmp    %cx,%dx
		setg   %dl
	jump_1cb2b:
		xor    %dh,%dh
		cmpw   $0x1,data_f0b78
		jle    jump_1c9f5
		movswl %si,%ebx
		cmp    $0xfffffffc,%ebx
		je     jump_1ca20
		jmp    jump_1ca43
	jump_1cb4c:
		add    $0x2c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1cb53:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		mov    0xa(%esp),%eax
		mov    -0x2(%esp),%edx
		movswl %cx,%ecx
		sar    $0x10,%eax
		movswl %bx,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1af22
		xor    %ebx,%ebx
	jump_1cb78:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_1cbab
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%edx
		movswl %bx,%eax
		inc    %ebx
		mov    %dx,data_f0a48(,%eax,2)
		jmp    jump_1cb78
	jump_1cbab:
		add    $0x8,%esp
		ret    $0x4


/*----------------------------------------------------------------*/
func_1cbb1:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		mov    0xa(%esp),%eax
		mov    -0x2(%esp),%edx
		movswl %cx,%ecx
		sar    $0x10,%eax
		movswl %bx,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1af22
		xor    %ecx,%ecx
	jump_1cbd6:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_1cbab
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		movswl %cx,%ebx
		sar    $0x10,%edx
		mov    data_f0a46(,%ebx,2),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		inc    %ecx
		call   func_13d02
		jmp    jump_1cbd6


/*----------------------------------------------------------------*/
func_1cc09:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		cmpb   $0x6,data_ba84e
		jne    jump_1cc35
		mov    0x63(%esi),%dl
		test   %dl,%dl
		je     jump_1cc28
		cmp    $0x2,%dl
		jne    jump_1cc2f
	jump_1cc28:
		mov    0x63(%esi),%al
		inc    %al
		jmp    jump_1cc38
	jump_1cc2f:
		mov    %dl,0x8(%esp)
		jmp    jump_1cc3c
	jump_1cc35:
		mov    0x63(%esi),%al
	jump_1cc38:
		mov    %al,0x8(%esp)
	jump_1cc3c:
		movzbl 0x8(%esp),%edi
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		mov    %edi,%ecx
		call   func_1a1de
		mov    %al,%dl
		mov    %al,%cl
		call   func_13f8a
		cmp    $0xd,%dl
		jb     jump_1cc94
		jbe    jump_1cd9b
		cmp    $0x11,%dl
		jb     jump_1cc86
		jbe    jump_1cf46
		cmp    $0x12,%dl
		jbe    jump_1cfa5
		cmp    $0x13,%dl
		je     jump_1d0b6
		jmp    jump_1cd93
	jump_1cc86:
		cmp    $0xe,%dl
		jbe    jump_1ce40
		jmp    jump_1ce8e
	jump_1cc94:
		cmp    $0x5,%dl
		jb     jump_1ccb6
		jbe    jump_1cd55
		cmp    $0x9,%dl
		jbe    jump_1cd9b
		cmp    $0xb,%dl
		jb     jump_1cd93
		jmp    jump_1cdf9
	jump_1ccb6:
		cmp    $0x3,%dl
		ja     jump_1cd12
		sete   %al
		inc    %al
		mov    0x2(%esp),%edx
		mov    $0x1,%ecx
		xor    %ebx,%ebx
		and    $0xff,%eax
		mov    0x8(%esp),%bl
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1cce4:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1cce4
	jump_1cd12:
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ad62
	jump_1cd27:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ae48
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1cd27
	jump_1cd55:
		call   func_13f8a
		mov    $0x1,%edx
		mov    0xb(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x18,%eax
		call   func_1b7bf
		mov    %esi,%eax
		mov    $0x1,%ecx
		call   func_1aef3
		mov    0x2(%esp),%edx
		cwtl
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
	jump_1cd93:
		add    $0xc,%esp
		jmp    jump_1ebf8
	jump_1cd9b:
		cmp    $0x8,%cl
		je     jump_1cda5
		cmp    $0xd,%cl
		jne    jump_1cda9
	jump_1cda5:
		mov    $0x3,%al
		jmp    jump_1cdab
	jump_1cda9:
		mov    $0x2,%al
	jump_1cdab:
		mov    0x2(%esp),%edx
		mov    $0x2,%ecx
		and    $0xff,%eax
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1cdcf:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1cdcf
	jump_1cdf9:
		jne    jump_1cdff
		mov    $0x9,%cl
		jmp    jump_1ce01
	jump_1cdff:
		mov    $0x7,%cl
	jump_1ce01:
		call   func_13f8a
		mov    $0x1,%edx
		mov    0xb(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x18,%eax
		call   func_1b7bf
		mov    0x2(%esp),%edx
		xor    %eax,%eax
		mov    0x60(%esi),%ebx
		mov    %cl,%al
		sar    $0x18,%ebx
		sar    $0x10,%edx
		push   %eax
		mov    0x2(%esp),%eax
		mov    $0x2,%ecx
		sar    $0x10,%eax
		call   func_1a625
		jmp    jump_1cd93
	jump_1ce40:
		push   $0x2
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    $0x2,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1ce60:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1ce60
	jump_1ce8e:
		cmp    $0x10,%dl
		jne    jump_1cea1
		mov    $0x3,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		jmp    jump_1cecf
	jump_1cea1:
		mov    0x11(%esi),%bl
		cmp    $0x8c,%bl
		je     jump_1ceae
		cmp    $0x8d,%bl
		jne    jump_1cec3
	jump_1ceae:
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x4,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		jmp    jump_1cecf
	jump_1cec3:
		mov    $0x4,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
	jump_1cecf:
		call   func_1ac08
	jump_1ced4:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1cefe
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1ced4
	jump_1cefe:
		cmp    $0x10,%cl
		je     jump_1cd93
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_1cf18:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0xffffffff,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1cf18
	jump_1cf46:
		lea    0x4(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    %esp,%eax
		sar    $0x18,%ebx
		mov    $0x1,%ecx
		call   func_49abc
		push   $0x7
		mov    0x6(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1cf77:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1cf77
	jump_1cfa5:
		movsbw (%esi),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		mov    0x63(%esi),%cl
		inc    %cl
		lea    0x4(%esp),%edx
		and    $0x3,%cl
		mov    %esp,%eax
		movsbl %cl,%ebx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		xor    %ebx,%ebx
		mov    0x2(%esp),%eax
		mov    %cl,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ecx
		call   func_1a452
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
	jump_1d001:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d02b
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1d001
	jump_1d02b:
		movsbw (%esi),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		mov    0x63(%esi),%cl
		add    $0x3,%cl
		lea    0x4(%esp),%edx
		and    $0x3,%cl
		mov    %esp,%eax
		movsbl %cl,%ebx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		xor    %ebx,%ebx
		mov    0x2(%esp),%eax
		mov    %cl,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ecx
		call   func_1a452
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
	jump_1d088:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1d088
	jump_1d0b6:
		movsbw (%esi),%ax
		mov    0x5(%esp),%ebx
		mov    %ax,(%esp)
		lea    0x4(%esp),%edx
		movsbw 0x1(%esi),%ax
		sar    $0x18,%ebx
		mov    %ax,0x4(%esp)
		mov    %esp,%eax
		mov    $0x1,%ecx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d0f6:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1cd93
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_1d0f6


/*----------------------------------------------------------------*/
func_1d124:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    %ecx,%esi
		xor    %edx,%edx
		mov    data_ba84e,%ah
		mov    %dx,data_f0b9e
		cmp    $0x6,%ah
		jne    jump_1d15a
		mov    0x63(%ecx),%dl
		test   %dl,%dl
		je     jump_1d14e
		cmp    $0x2,%dl
		jne    jump_1d155
	jump_1d14e:
		mov    (%esp),%al
		inc    %al
		jmp    jump_1d15d
	jump_1d155:
		mov    (%esp),%al
		jmp    jump_1d15d
	jump_1d15a:
		mov    (%esp),%al
	jump_1d15d:
		mov    %al,0xc(%esp)
		movzbl 0xc(%esp),%edi
		lea    0x4(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		mov    %edi,%ecx
		call   func_1a146
		mov    %al,%bl
		movsbl 0x1(%esi),%edx
		mov    %al,%bh
		movsbl (%esi),%eax
		call   func_1a2d7
		cmp    $0xb,%bl
		jb     jump_1d1ce
		cmp    $0xc,%bl
		jbe    jump_1d389
		cmp    $0xf,%bl
		jb     jump_1d1c0
		cmp    $0x10,%bl
		jbe    jump_1d420
		cmp    $0x12,%bl
		jb     jump_1d4b4
		jbe    jump_1d518
		cmp    $0x13,%bl
		je     jump_1d63d
		jmp    jump_1d31b
	jump_1d1c0:
		cmp    $0xd,%bl
		jbe    jump_1d327
		jmp    jump_1d3cf
	jump_1d1ce:
		cmp    $0x4,%bl
		jb     jump_1d1f0
		jbe    jump_1d29a
		cmp    $0x5,%bl
		jbe    jump_1d2dc
		cmp    $0x9,%bl
		jbe    jump_1d327
		jmp    jump_1d31b
	jump_1d1f0:
		cmp    $0x2,%bl
		ja     jump_1d238
		push   $0x1
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		mov    %esi,%ebx
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		jmp    jump_1d31b
	jump_1d238:
		push   $0x2
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d254:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2fe
		cmp    $0x1,%ax
		jne    jump_1d254
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		jmp    jump_1d254
	jump_1d29a:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ad62
	jump_1d2af:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ae48
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		jmp    jump_1d2af
	jump_1d2dc:
		mov    0xb(%esi),%eax
		mov    $0x1,%ebx
		sar    $0x18,%eax
		mov    %ebx,%edx
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    %esi,%eax
		mov    -0x2(%esp),%ebx
		call   func_1aef3
		mov    0x2(%esp),%edx
		cwtl
		sar    $0x10,%ebx
		push   %eax
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
	jump_1d31b:
		mov    data_f0b9e,%ax
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		ret
	jump_1d327:
		cmp    $0x8,%bh
		je     jump_1d331
		cmp    $0xd,%bh
		jne    jump_1d335
	jump_1d331:
		mov    $0x3,%al
		jmp    jump_1d337
	jump_1d335:
		mov    $0x2,%al
	jump_1d337:
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		and    $0xff,%eax
		mov    $0x2,%ecx
		push   %eax
		sar    $0x10,%ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d35c:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d35c
	jump_1d389:
		cmp    $0xb,%bl
		jne    jump_1d392
		mov    $0x9,%cl
		jmp    jump_1d394
	jump_1d392:
		mov    $0x7,%cl
	jump_1d394:
		mov    0xb(%esi),%eax
		mov    $0x1,%ebx
		sar    $0x18,%eax
		mov    %ebx,%edx
		call   func_1b7bf
		mov    -0x2(%esp),%ebx
		xor    %eax,%eax
		mov    0x2(%esp),%edx
		mov    %cl,%al
		sar    $0x10,%ebx
		sar    $0x10,%edx
		push   %eax
		mov    0xa(%esp),%eax
		mov    $0x2,%ecx
		sar    $0x10,%eax
		call   func_1a625
		jmp    jump_1d31b
	jump_1d3cf:
		push   $0x2
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    $0x2,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d3ef:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d3ef
	jump_1d420:
		jne    jump_1d430
		mov    $0x3,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		jmp    jump_1d45e
	jump_1d430:
		mov    0x11(%esi),%bl
		cmp    $0x8c,%bl
		je     jump_1d43d
		cmp    $0x8d,%bl
		jne    jump_1d452
	jump_1d43d:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x4,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		jmp    jump_1d45e
	jump_1d452:
		mov    $0x4,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
	jump_1d45e:
		call   func_1ac08
	jump_1d463:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%ecx
		mov    0x6(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		call   func_49b01
		cmp    $0x1,%ax
		jle    jump_1d463
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d463
	jump_1d4b4:
		lea    0x4(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x7
		mov    0x6(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d4e7:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d4e7
	jump_1d518:
		movsbw (%esi),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		mov    0x63(%esi),%cl
		inc    %cl
		lea    0x4(%esp),%edx
		and    $0x3,%cl
		lea    0x8(%esp),%eax
		movsbl %cl,%ebx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		xor    %ebx,%ebx
		mov    0xa(%esp),%eax
		mov    %cl,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ecx
		call   func_1a452
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
	jump_1d57b:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d5a8
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d57b
	jump_1d5a8:
		movsbw (%esi),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		mov    0x63(%esi),%cl
		add    $0x3,%cl
		lea    0x4(%esp),%edx
		and    $0x3,%cl
		lea    0x8(%esp),%eax
		movsbl %cl,%ebx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		xor    %ebx,%ebx
		mov    0xa(%esp),%eax
		mov    %cl,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ecx
		call   func_1a452
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
	jump_1d60c:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d60c
	jump_1d63d:
		movsbw (%esi),%ax
		mov    0x9(%esp),%ebx
		mov    %ax,0x8(%esp)
		lea    0x4(%esp),%edx
		movsbw 0x1(%esi),%ax
		sar    $0x18,%ebx
		mov    %ax,0x4(%esp)
		lea    0x8(%esp),%eax
		mov    $0x1,%ecx
		call   func_49abc
		push   $0x5
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_1d680:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1d31b
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1d680


/*----------------------------------------------------------------*/
func_1d6b1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		testb  $0x20,0x13(%eax)
		je     jump_1d6e3
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		cmpb   $0x1,data_73b58(%edx,%eax,8)
		jne    jump_1d6d9
	jump_1d6cf:
		mov    $0x2,%eax
		jmp    jump_1ebf8
	jump_1d6d9:
		mov    $0x1,%eax
		jmp    jump_1ebf8
	jump_1d6e3:
		testb  $0x40,0x13(%ebx)
		jne    jump_1d6cf
		mov    0x2d(%ebx),%dh
		test   %dh,%dh
		jne    jump_1d700
		mov    $0xc,%eax
		call   func_499bd
		mov    %al,0x2c(%ebx)
		mov    %dh,0x2d(%ebx)
	jump_1d700:
		xor    %eax,%eax
		mov    $0x31,%edx
		mov    0x5b(%ebx),%al
		xor    %ecx,%ecx
		call   func_184a4
		mov    0x2d(%ebx),%cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x14,%edi
		inc    %edx
		movsbw %al,%si
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %dl,0x2d(%ebx)
		xor    %edx,%edx
		mov    0x2c(%ebx),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		movswl %cx,%eax
		add    $0x3,%esi
		movsbw data_74144(%edx,%eax,1),%ax
		cmp    %si,%ax
		jg     jump_1d769
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		cmpb   $0x1,data_73b58(%edx,%eax,8)
		je     jump_1d6cf
		jmp    jump_1d6d9
	jump_1d769:
		xor    %eax,%eax
		jmp    jump_1ebf8


/*----------------------------------------------------------------*/
func_1d770:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,0x4(%esp)
		mov    %ecx,0xc(%esp)
		mov    0x1e(%edx),%ah
		mov    0x46(%edx),%bx
		test   $0x40,%ah
		je     jump_1d7ad
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
	jump_1d7ad:
		movswl %bx,%edx
		mov    $0x5,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		test   %ax,%ax
		jg     jump_1d7c8
		mov    $0x1,%ecx
	jump_1d7c8:
		mov    0x63(%edi),%al
		cmp    0x63(%esi),%al
		jne    jump_1d7e4
		movswl %cx,%eax
		call   func_499bd
		cwtl
		mov    %eax,%edx
		movswl %bx,%eax
		sar    %edx
		sar    %eax
		jmp    jump_1d83a
	jump_1d7e4:
		mov    0x60(%edi),%edx
		mov    0x60(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		add    %edx,%eax
		test   $0x1,%al
		je     jump_1d819
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		movswl %cx,%eax
		call   func_499bd
		cwtl
		jmp    jump_1d83a
	jump_1d819:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		movswl %cx,%eax
		call   func_499bd
		cwtl
	jump_1d83a:
		add    %edx,%eax
		mov    %eax,%ecx
		cmpb   $0x78,0x5d(%esi)
		jne    jump_1d848
		mov    0x46(%esi),%cx
	jump_1d848:
		testb  $0x40,0x15(%esi)
		je     jump_1d851
		add    $0x14,%ecx
	jump_1d851:
		testb  $0x2,0x14(%esi)
		je     jump_1d862
		movswl %cx,%eax
		mov    %eax,%edx
		sar    %edx
		add    %edx,%eax
		mov    %eax,%ecx
	jump_1d862:
		cmpw   $0x0,0xc(%esp)
		je     jump_1d8eb
		mov    0x44(%esi),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x1,%ebx
		mov    %eax,0x10(%esp)
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
		mov    0x10(%esp),%ebx
	jump_1d8a0:
		mov    %esp,%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1d8eb
		mov    -0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_1d8a0
		cmp    %edi,%eax
		je     jump_1d8a0
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_1d8e7
		sub    0x10(%esp),%ecx
		jmp    jump_1d8a0
	jump_1d8e7:
		add    %ebx,%ecx
		jmp    jump_1d8a0
	jump_1d8eb:
		mov    0x42(%edi),%eax
		mov    0x1e(%edi),%dl
		sar    $0x10,%eax
		test   $0x40,%dl
		je     jump_1d914
		mov    %eax,%edx
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
	jump_1d914:
		testb  $0x8,0x15(%edi)
		je     jump_1d91d
		add    $0x14,%eax
	jump_1d91d:
		mov    0x15(%edi),%bl
		test   $0x1,%bl
		je     jump_1d92a
		add    $0xf,%eax
		jmp    jump_1d93c
	jump_1d92a:
		test   $0x2,%bl
		je     jump_1d934
		add    $0x5,%eax
		jmp    jump_1d93c
	jump_1d934:
		test   $0x4,%bl
		je     jump_1d93c
		add    $0xa,%eax
	jump_1d93c:
		testb  $0x2,0x14(%edi)
		je     jump_1d948
		mov    %eax,%edx
		sar    %edx
		add    %edx,%eax
	jump_1d948:
		cmpw   $0x0,0xc(%esp)
		je     jump_1d984
		mov    0xe(%edi),%dl
		cmp    $0x1,%dl
		jb     jump_1d984
		cmp    $0x2,%dl
		jbe    jump_1d964
		cmp    $0x3,%dl
		je     jump_1d96c
		jmp    jump_1d984
	jump_1d964:
		mov    data_f0b9e,%edx
		jmp    jump_1d972
	jump_1d96c:
		mov    data_f0ba0,%edx
	jump_1d972:
		sar    $0x10,%edx
		imul   %eax,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
	jump_1d984:
		cmpw   $0x1,0x4(%esp)
		jne    jump_1d9b9
		xor    %ebx,%ebx
		mov    0x11(%esi),%bl
		mov    %ebx,%edx
		cmpb   $0x0,data_73b5e(%ebx,%edx,8)
		jne    jump_1d9b9
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
	jump_1d9b9:
		xor    %ebx,%ebx
		mov    0x11(%edi),%bl
		mov    %ebx,%edx
		cmpb   $0x1,data_73b5a(%ebx,%edx,8)
		jne    jump_1d9da
		cmpb   $0x2,0xd(%esi)
		je     jump_1d9d6
		cmpb   $0x7,0x5c(%esi)
		jb     jump_1d9df
	jump_1d9d6:
		xor    %ebx,%ebx
		jmp    jump_1d9ee
	jump_1d9da:
		movswl %cx,%edx
		sub    %edx,%eax
	jump_1d9df:
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		shl    $0x3,%ebx
		add    %eax,%ebx
		shl    $0x2,%ebx
	jump_1d9ee:
		testb  $0x1,0x13(%esi)
		je     jump_1da10
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		shl    $0x2,%edx
		sub    %ebx,%edx
		add    %edx,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
	jump_1da10:
		mov    %edi,%eax
		call   func_17531
		mov    %eax,%ecx
		cmpw   $0x1,0x4(%esp)
		jne    jump_1da30
		cmp    $0x3e8,%ebx
		jge    jump_1da3a
		mov    $0x3e8,%ebx
		jmp    jump_1da3a
	jump_1da30:
		cmp    $0x64,%ebx
		jge    jump_1da3a
		mov    $0x64,%ebx
	jump_1da3a:
		xor    %eax,%eax
		mov    0x5b(%edi),%al
		call   func_18ef9
		cmp    $0x1,%ax
		jne    jump_1da4f
		mov    $0xffffffff,%ecx
	jump_1da4f:
		test   %cx,%cx
		jl     jump_1da74
		movswl %cx,%edx
		mov    %esi,%eax
		call   func_1762c
		movswl %ax,%edx
		imul   %ebx,%edx
		mov    %eax,%ecx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
	jump_1da74:
		test   %cx,%cx
		jle    jump_1da9c
		cmpb   $0x32,0x43(%esi)
		jae    jump_1da9c
		cmpw   $0x2,0x4(%esp)
		jne    jump_1da9c
		mov    0x5c(%esi),%al
		cmp    $0x7,%al
		jb     jump_1da92
		cmp    $0x26,%al
		jbe    jump_1da9c
	jump_1da92:
		mov    0x48(%esi),%edx
		cmp    %edx,%ebx
		jae    jump_1da9c
		lea    -0x64(%edx),%ebx
	jump_1da9c:
		test   %ebx,%ebx
		jge    jump_1dab5
		mov    %ebx,%eax
		mov    0x4c(%esi),%edx
		mov    0x48(%esi),%ecx
		neg    %eax
		sub    %ecx,%edx
		cmp    %edx,%eax
		jle    jump_1dab5
		mov    %ecx,%ebx
		sub    0x4c(%esi),%ebx
	jump_1dab5:
		mov    0x11(%edi),%dl
		cmp    $0x86,%dl
		jb     jump_1dad3
		cmp    $0x8b,%dl
		ja     jump_1dad3
		mov    %ebx,%eax
		shl    $0x2,%ebx
		sub    %eax,%ebx
		cmp    $0x64,%ebx
		jge    jump_1dad3
		mov    $0x64,%ebx
	jump_1dad3:
		cmpb   $0x73,0x5d(%esi)
		jne    jump_1dae6
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
	jump_1dae6:
		mov    %ebx,%eax
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1daee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
	jump_1daf7:
		movswl %bx,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_1db01:
		test   %eax,%eax
		je     jump_1db12
		cmp    0x73(%eax),%edx
		jne    jump_1db0d
		mov    %ecx,0x73(%eax)
	jump_1db0d:
		mov    0x7b(%eax),%eax
		jmp    jump_1db01
	jump_1db12:
		inc    %ebx
		cmp    $0x4,%bx
		jl     jump_1daf7
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1db1d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %edx,%eax
		call   func_197ad
		movsbw 0xe(%edx),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    $0x1,%ebx
		mov    0xf(%edx),%al
		movl   $0x0,0x48(%edx)
		mov    %eax,%edi
		mov    %esi,%edx
		mov    %ecx,%eax
		call   func_53797
		mov    -0x3(%esp),%eax
		mov    %ecx,%edx
		sar    $0x18,%eax
		add    $0xa,%edi
		call   func_11ff7
		test   %ax,%ax
		je     jump_1db71
		cmpl   $0x0,0x48(%ecx)
		jle    jump_1db8b
	jump_1db71:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		cmpl   $0x0,data_cc968(,%eax,8)
		jne    jump_1dde8
		jmp    jump_1dde3
	jump_1db8b:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1124a
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_1dba8
		mov    %ecx,%eax
		call   func_463fb
		jmp    jump_1dbc5
	jump_1dba8:
		mov    0x11(%ecx),%ah
		cmp    $0x86,%ah
		jb     jump_1dbbe
		cmp    $0x91,%ah
		ja     jump_1dbbe
		mov    %ecx,%eax
		call   func_46b2c
		jmp    jump_1dbc5
	jump_1dbbe:
		mov    %ecx,%eax
		call   func_46a11
	jump_1dbc5:
		test   %esi,%esi
		je     jump_1dbd2
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_17a20
	jump_1dbd2:
		testb  $0x40,0x1e(%ecx)
		jne    jump_1dbe3
		mov    0x5d(%ecx),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_1dbe3:
		cmpb   $0xa,0x12(%ecx)
		jb     jump_1dc0d
		mov    %ecx,%eax
		call   func_1daee
		mov    0xb(%ecx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ecx,%edx
		add    $data_cc968,%eax
		call   func_113cc
		jmp    jump_1dde8
	jump_1dc0d:
		mov    0x43(%ecx),%bh
		xor    %eax,%eax
		cmp    $0x50,%bh
		jbe    jump_1dc1e
		mov    $0x3,%eax
		jmp    jump_1dc34
	jump_1dc1e:
		cmp    $0x32,%bh
		jbe    jump_1dc2a
		mov    $0x2,%eax
		jmp    jump_1dc34
	jump_1dc2a:
		cmp    $0x1e,%bh
		jbe    jump_1dc34
		mov    $0x1,%eax
	jump_1dc34:
		mov    0xe(%ecx),%dl
		cmp    $0x1,%dl
		jb     jump_1dcf7
		cmp    $0x2,%dl
		jbe    jump_1dc4f
		cmp    $0x3,%dl
		je     jump_1dca4
		jmp    jump_1dcf7
	jump_1dc4f:
		movswl %ax,%edx
		mov    data_f0ba0,%bx
		mov    data_74234(,%edx,2),%dx
		sub    %edx,%ebx
		mov    %bx,data_f0ba0
		cmp    $0x32,%bx
		jge    jump_1dc79
		movw   $0x32,data_f0ba0
	jump_1dc79:
		cwtl
		mov    data_f0ba2,%bx
		mov    data_74234(,%eax,2),%ax
		add    %eax,%ebx
		mov    %bx,data_f0ba2
		cmp    $0x96,%bx
		jle    jump_1dcf7
		movw   $0x96,data_f0ba2
		jmp    jump_1dcf7
	jump_1dca4:
		movswl %ax,%edx
		mov    data_f0ba2,%bx
		mov    data_74234(,%edx,2),%dx
		sub    %edx,%ebx
		mov    %bx,data_f0ba2
		cmp    $0x32,%bx
		jge    jump_1dcce
		movw   $0x32,data_f0ba2
	jump_1dcce:
		cwtl
		mov    data_f0ba0,%bx
		mov    data_74234(,%eax,2),%ax
		add    %eax,%ebx
		mov    %bx,data_f0ba0
		cmp    $0x96,%bx
		jle    jump_1dcf7
		movw   $0x96,data_f0ba0
	jump_1dcf7:
		cmpl   $0x0,0x77(%ecx)
		je     jump_1dd65
		mov    %ecx,%eax
		call   func_1808a
		cmpb   $0x4,data_ba84e
		jge    jump_1dd35
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11f74
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		movl   $0x0,0x77(%ecx)
		call   func_1198d
		mov    %al,0x60(%ecx)
		jmp    jump_1ddad
	jump_1dd35:
		movb   $0x0,0x1e(%ecx)
		mov    0x1e(%ecx),%al
		mov    %al,0x15(%ecx)
		mov    %ecx,%eax
		call   func_1daee
		mov    %ecx,%eax
		call   func_113e4
	jump_1dd4d:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		shl    $0x3,%eax
		mov    %ecx,%edx
		add    $data_cc968,%eax
		call   func_113cc
		jmp    jump_1ddad
	jump_1dd65:
		movb   $0x0,0x1e(%ecx)
		mov    0x1e(%ecx),%al
		mov    %al,0x15(%ecx)
		mov    %ecx,%eax
		call   func_1daee
		mov    %ecx,%eax
		call   func_113e4
		cmpb   $0x2,0xd(%ecx)
		je     jump_1dd4d
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_1dd4d
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		shl    $0x3,%eax
		mov    %ecx,%edx
		add    $data_cc968,%eax
		call   func_1137a
		mov    $data_d6620,%eax
		mov    %ecx,%edx
		call   func_1134f
	jump_1ddad:
		call   func_53e0f
		call   func_53c12
		call   func_44df3
		call   func_5e9e8
		mov    -0x2(%esp),%ecx
		call   func_4a321
		sar    $0x10,%ecx
		movswl %di,%edx
		mov    %ecx,%eax
		call   func_29ee4
		cmpl   $0x0,data_cc968(,%ecx,8)
		jne    jump_1dde8
		mov    %ecx,%eax
	jump_1dde3:
		call   func_53f94
	jump_1dde8:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1ddf0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%esi
		cmp    $0x1,%dx
		jne    jump_1dea7
		movsbw 0xe(%eax),%cx
		xor    %ebx,%ebx
		sub    %edx,%ecx
		mov    data_f0648,%edx
		xor    %edi,%edi
		call   func_53797
		jmp    jump_1de30
	jump_1de1c:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    data_f0648(,%edx,4),%edx
		call   func_5394d
		inc    %edi
	jump_1de30:
		cmp    data_f0b9e,%di
		jl     jump_1de1c
		movsbl %cl,%eax
		mov    %esi,%edx
		call   func_11ff7
		test   %ax,%ax
		jne    jump_1de52
		mov    $0xffffffff,%eax
		jmp    jump_1e2a8
	jump_1de52:
		mov    data_f0b9e,%bx
		xor    %edi,%edi
		jmp    jump_1de8e
	jump_1de5d:
		movswl %di,%eax
		cmpl   $0x0,data_f0648(,%eax,4)
		jne    jump_1de8d
		mov    %edi,%ecx
		inc    %ecx
		jmp    jump_1de81
	jump_1de6f:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%edx
		inc    %ecx
		mov    %edx,data_f0644(,%eax,4)
	jump_1de81:
		cmp    %bx,%cx
		jl     jump_1de6f
		decw   data_f0b9e
	jump_1de8d:
		inc    %edi
	jump_1de8e:
		cmp    %bx,%di
		jl     jump_1de5d
		cmpw   $0x0,data_f0b9e
		jne    jump_1dea7
		mov    $0xfffffffe,%eax
		jmp    jump_1e2a8
	jump_1dea7:
		mov    %esi,%eax
		call   func_1d6b1
		mov    %ax,data_f0b8c
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_174cf
		mov    %al,%dl
		cmp    $0x5,%dx
		je     jump_1ded1
		cmp    $0xc,%dx
		je     jump_1ded1
		cmp    $0xb,%dx
		jne    jump_1deda
	jump_1ded1:
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
		jmp    jump_1dee1
	jump_1deda:
		movw   $0x1,0xc(%esp)
	jump_1dee1:
		cmp    $0xc,%dx
		je     jump_1df06
		cmp    $0xb,%dx
		je     jump_1df06
		cmp    $0xd,%dx
		je     jump_1df06
		mov    %esi,%eax
		call   func_195ae
		cmp    $0x1,%ax
		je     jump_1df06
		cmpb   $0x5c,0x11(%esi)
		jne    jump_1df10
	jump_1df06:
		movl   $0x1,0x10(%esp)
		jmp    jump_1df2c
	jump_1df10:
		cmp    $0x6,%dx
		jl     jump_1df26
		cmp    $0xe,%dx
		jg     jump_1df26
		movl   $0x2,0x10(%esp)
		jmp    jump_1df2c
	jump_1df26:
		xor    %edx,%edx
		mov    %edx,0x10(%esp)
	jump_1df2c:
		xor    %edi,%edi
		jmp    jump_1e296
	jump_1df33:
		movswl %di,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x61(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x12c,%dx
		jl     jump_1df57
		xor    %bl,%bl
		mov    %bl,0x14(%esp)
	jump_1df50:
		mov    $0x1,%ebx
		jmp    jump_1df7b
	jump_1df57:
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		lea    (%edx,%edx,2),%edx
		mov    data_72795(%edx),%dl
		mov    %dl,0x14(%esp)
		mov    0x1e(%eax),%dl
		test   $0x2,%dl
		jne    jump_1df50
		test   $0x4,%dl
		je     jump_1df7b
		mov    $0x2,%ebx
	jump_1df7b:
		test   %bx,%bx
		jne    jump_1dfb0
		movswl %di,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x63(%esi),%dl
		cmp    0x63(%eax),%dl
		jne    jump_1df99
		mov    $0x2,%ebx
		jmp    jump_1dfb0
	jump_1df99:
		mov    0x60(%eax),%edx
		mov    0x60(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		add    %edx,%eax
		test   $0x1,%al
		je     jump_1dfb0
		mov    $0x3,%ebx
	jump_1dfb0:
		mov    $0xffffffff,%ecx
		movswl %di,%ebp
		mov    $0x64,%eax
		mov    %cx,data_f0430(,%ebp,2)
		call   func_499bd
		mov    %eax,0x8(%esp)
		mov    0x14(%esp),%al
		mov    $0xa,%ecx
		cmp    $0x2,%al
		jne    jump_1e016
		shl    $0x2,%ebp
		mov    data_f0648(%ebp),%eax
		mov    0x5a(%eax),%al
		and    $0xff,%eax
		xor    %edx,%edx
		call   func_184a4
		cmp    $0x8,%al
		jne    jump_1e016
		mov    data_f0648(%ebp),%eax
		mov    0x5a(%eax),%al
		mov    $0x32,%edx
		and    $0xff,%eax
		call   func_184a4
		movsbw %al,%cx
		add    $0xa,%ecx
	jump_1e016:
		cmp    $0x1,%bx
		jne    jump_1e023
		mov    $0xffffffff,%ecx
		jmp    jump_1e048
	jump_1e023:
		cmp    $0x2,%bx
		jne    jump_1e02e
		sar    %cx
		jmp    jump_1e048
	jump_1e02e:
		cmp    $0x3,%bx
		jne    jump_1e048
		movswl %cx,%edx
		imul   $0x4b,%edx,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%ecx
	jump_1e048:
		mov    0x10(%esp),%eax
		cmp    $0x1,%ax
		jne    jump_1e056
		xor    %ecx,%ecx
		jmp    jump_1e070
	jump_1e056:
		cmp    $0x2,%ax
		jne    jump_1e070
		movswl %cx,%edx
		imul   $0x14,%edx,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%ecx
	jump_1e070:
		cmp    0x8(%esp),%cx
		jle    jump_1e09b
		movswl %di,%ebx
		movw   $0x2,data_f0430(,%ebx,2)
		mov    0x60(%esi),%edx
		mov    data_f0648(,%ebx,4),%eax
		sar    $0x18,%edx
		call   func_461c6
		jmp    jump_1e295
	jump_1e09b:
		cmpb   $0x1,0x14(%esp)
		jne    jump_1e135
		movswl %di,%ebp
		shl    $0x2,%ebp
		mov    data_f0648(%ebp),%eax
		mov    0x5a(%eax),%al
		and    $0xff,%eax
		xor    %edx,%edx
		call   func_184a4
		cmp    $0x6,%al
		jne    jump_1e135
		mov    data_f0648(%ebp),%eax
		mov    0x5a(%eax),%al
		and    $0xff,%eax
		mov    %eax,(%esp)
		lea    -0x4a(%eax),%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		mov    %eax,%ecx
		inc    %ecx
		imul   $0x14,%ecx,%ecx
		mov    $0x2d,%edx
		mov    (%esp),%eax
		call   func_184a4
		cbtw
		mov    %eax,0x4(%esp)
		mov    data_f0648(%ebp),%eax
		mov    0x13(%eax),%dl
		add    $0xa,%ecx
		test   $0x1,%dl
		je     jump_1e11e
		mov    0x4(%esp),%edx
		add    $0xa,%edx
		add    $0x14,%ecx
		mov    %edx,0x4(%esp)
	jump_1e11e:
		movswl %di,%eax
		mov    data_f0648(,%eax,4),%eax
		testb  $0x4,0x14(%eax)
		je     jump_1e13a
		mov    $0x64,%ecx
		jmp    jump_1e13a
	jump_1e135:
		mov    $0xffffffff,%ecx
	jump_1e13a:
		cmp    $0x1,%bx
		jne    jump_1e147
		mov    $0xffffffff,%ecx
		jmp    jump_1e16c
	jump_1e147:
		cmp    $0x2,%bx
		jne    jump_1e152
		sar    %cx
		jmp    jump_1e16c
	jump_1e152:
		cmp    $0x3,%bx
		jne    jump_1e16c
		movswl %cx,%edx
		imul   $0x4b,%edx,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
	jump_1e16c:
		cmpw   $0x2,0x10(%esp)
		jne    jump_1e188
		movswl %cx,%edx
		imul   $0x14,%edx,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
	jump_1e188:
		cmp    0x8(%esp),%cx
		jle    jump_1e236
		movswl %di,%ebx
		movw   $0x1,data_f0430(,%ebx,2)
		mov    %ebx,%ecx
		mov    0x60(%esi),%edx
		shl    $0x2,%ecx
		sar    $0x18,%edx
		mov    data_f0648(%ecx),%eax
		call   func_4609a
		mov    data_f0648(%ecx),%eax
		mov    0x4(%esp),%edx
		add    %dx,0x46(%eax)
		cmpw   $0x0,data_f0b8c
		je     jump_1e1e2
		mov    0xa(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%eax
		mov    data_f0648(%ecx),%edx
		jmp    jump_1e1f1
	jump_1e1e2:
		mov    0xa(%esp),%eax
		mov    data_f0648(%ecx),%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
	jump_1e1f1:
		mov    %eax,%ecx
		mov    %esi,%eax
		call   func_1d770
		mov    %eax,%ecx
		movswl %di,%ebp
		mov    data_f0648(,%ebp,4),%eax
		mov    0x4(%esp),%ebx
		sub    %bx,0x46(%eax)
		mov    data_f0648(,%ebp,4),%eax
		sub    %ecx,0x48(%eax)
		mov    data_f0648(,%ebp,4),%eax
		mov    %ecx,%edx
		call   func_17e17
		mov    %ebp,%ebx
		mov    data_f0648(,%ebp,4),%eax
		call   func_45bfb
		jmp    jump_1e295
	jump_1e236:
		mov    0xa(%esp),%ecx
		mov    data_f0b8a,%ebx
		movswl %di,%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		mov    %eax,%ebp
		mov    data_f0648(,%eax,4),%edx
		mov    %esi,%eax
		call   func_1d770
		mov    %eax,%ecx
		mov    %ebp,%ebx
		mov    %ecx,%edx
		mov    data_f0648(,%ebp,4),%eax
		call   func_45bfb
		mov    data_f0648(,%ebp,4),%eax
		sub    %ecx,0x48(%eax)
		mov    data_f0648(,%ebp,4),%eax
		call   func_17e17
		mov    %ebp,%ebx
		mov    0x60(%esi),%edx
		mov    data_f0648(,%ebp,4),%eax
		sar    $0x18,%edx
		call   func_45ed2
	jump_1e295:
		inc    %edi
	jump_1e296:
		cmp    data_f0b9e,%di
		jl     jump_1df33
		mov    $0x1,%eax
	jump_1e2a8:
		add    $0x18,%esp
	jump_1e2ab:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1e2b1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		jmp    jump_1e2de
	jump_1e2b7:
		movswl %bx,%eax
		shl    $0x2,%eax
		mov    data_f0648(%eax),%edx
		test   %edx,%edx
		je     jump_1e2dd
		testb  $0x2,0x1e(%edx)
		je     jump_1e2dd
		movw   $0xffff,0x1f(%edx)
		mov    data_f0648(%eax),%eax
		andb   $0xf8,0x1e(%eax)
	jump_1e2dd:
		inc    %ebx
	jump_1e2de:
		cmp    data_f0b9e,%bx
		jl     jump_1e2b7
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1e2ea:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%ecx
		dec    %edx
		test   %bx,%bx
		je     jump_1e2fe
		mov    $0x1,%ebx
	jump_1e2fe:
		cmp    $0x1,%dx
		jne    jump_1e33a
		mov    0x5d(%ecx),%esi
		sar    $0x18,%esi
		mov    %esi,%edi
		shl    $0x2,%edi
		add    %esi,%edi
		mov    0x60(%ecx),%esi
		sar    $0x18,%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		movswl %bx,%esi
		add    %eax,%edi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		movsbw data_ba8b3(%edi,%eax,1),%si
		jmp    jump_1e36e
	jump_1e33a:
		mov    0x5d(%ecx),%esi
		sar    $0x18,%esi
		mov    %esi,%edi
		shl    $0x2,%edi
		add    %esi,%edi
		mov    0x60(%ecx),%esi
		sar    $0x18,%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		movswl %bx,%esi
		add    %eax,%edi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		movsbw data_ba8b1(%edi,%eax,1),%si
	jump_1e36e:
		movsbl (%ecx),%eax
		call   func_10971
		add    $0xc,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		cmp    $0x1,%dx
		jne    jump_1e3bb
		mov    0x5d(%ecx),%edi
		sar    $0x18,%edi
		mov    %edi,%ebp
		shl    $0x2,%ebp
		add    %edi,%ebp
		mov    0x60(%ecx),%edi
		sar    $0x18,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		shl    $0x3,%ebp
		add    %eax,%eax
		movswl %bx,%edi
		add    %eax,%ebp
		mov    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		movsbw data_ba8b4(%eax,%ebp,1),%di
		jmp    jump_1e3ef
	jump_1e3bb:
		mov    0x5d(%ecx),%edi
		sar    $0x18,%edi
		mov    %edi,%ebp
		shl    $0x2,%ebp
		add    %edi,%ebp
		mov    0x60(%ecx),%edi
		sar    $0x18,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		shl    $0x3,%ebp
		add    %eax,%eax
		movswl %bx,%edi
		add    %eax,%ebp
		mov    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		movsbw data_ba8b2(%eax,%ebp,1),%di
	jump_1e3ef:
		movsbl 0x1(%ecx),%eax
		call   func_10988
		add    $0x2,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		mov    0x5d(%ecx),%eax
		sar    $0x18,%eax
		mov    %eax,(%esp)
		mov    (%esp),%ebp
		shl    $0x2,%eax
		add    %eax,%ebp
		mov    0x60(%ecx),%eax
		sar    $0x18,%eax
		mov    %eax,%ecx
		movswl %bx,%ebx
		shl    $0x2,%ecx
		shl    $0x3,%ebp
		add    %eax,%ecx
		mov    %ebx,%eax
		add    %ecx,%ecx
		shl    $0x2,%eax
		add    %ebp,%ecx
		add    %ebx,%eax
		mov    data_ba8ad(%ecx,%eax,1),%eax
		movswl %dx,%edx
		sar    $0x18,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movswl %di,%edx
		mov    data_bba30(,%eax,4),%ebx
		movswl %si,%eax
		call   func_5f3fd
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1e460:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%esi
		add    $0x10,%esi
		movsbw 0x65(%ebx),%ax
		add    %eax,%esi
		movsbl 0x1(%ebx),%eax
		call   func_10988
		mov    %eax,%ecx
		add    $0x4,%ecx
		movsbw 0x66(%ebx),%ax
		add    %eax,%ecx
		cmpb   $0x0,0x5a(%ebx)
		je     jump_1e4dc
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x5a(%ebx),%al
		call   func_184a4
		cmp    $0x6,%al
		jne    jump_1e4dc
		xor    %eax,%eax
		mov    0x5a(%ebx),%al
		dec    %eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		shl    $0x2,%ebx
		add    $data_efdb0,%ebx
		mov    0x6(%ebx),%ax
		add    %ecx,%eax
		add    $0x18,%eax
		movswl %ax,%ecx
		mov    0x4(%ebx),%ax
		mov    0x8(%ebx),%edx
		add    %esi,%eax
		mov    %edx,%ebx
		cwtl
		mov    %ecx,%edx
		call   func_5f3fd
	jump_1e4dc:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1e4e1:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %edx,%ecx
		mov    0x15(%eax),%dl
		test   $0x7,%dl
		je     jump_1e55f
		mov    %dl,%al
		and    $0x7,%al
		movsbl %al,%edx
		sar    %edx
		mov    %edx,%eax
		shl    $0x2,%eax
		movswl %bx,%esi
		sub    %edx,%eax
		lea    0x4(%esp),%ebx
		add    $0x15,%eax
		mov    %esp,%edx
		add    %eax,%esi
		mov    %ecx,%eax
		call   func_135eb
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		mov    (%esp),%ebx
		mov    data_bb87c(%edx),%ax
		mov    0x4(%esp),%ecx
		add    %eax,%ebx
		mov    data_bb87e(%edx),%ax
		mov    %bx,(%esp)
		add    %eax,%ecx
		mov    data_bb880(%edx),%ebx
		mov    %cx,0x4(%esp)
		mov    -0x2(%esp),%eax
		mov    0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_5f3fd
	jump_1e55f:
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1e565:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x304,%esp
		mov    %eax,%edx
		test   %ax,%ax
		je     jump_1e612
		mov    $0x3f,%ah
		xor    %bl,%bl
		mov    %ah,0x300(%esp)
		mov    %bl,0x301(%esp)
		mov    %bl,0x302(%esp)
		xor    %eax,%eax
	jump_1e596:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		lea    0x300(%esp),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_1e596
		cmp    $0x2,%dx
		jne    jump_1e5e4
		push   $0x32
		lea    0x4(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		push   $0x19
		mov    $data_12824c,%ecx
		lea    0x4(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
	jump_1e5e4:
		push   $0x14
		lea    0x4(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		push   $0xa
		mov    $data_12824c,%ecx
		lea    0x4(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
	jump_1e612:
		add    $0x304,%esp
		jmp    jump_1ebf8


/*----------------------------------------------------------------*/
func_1e61d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    %eax,%esi
		call   func_174cf
		movb   $0x5,0x64(%esi)
		mov    %al,0x1c(%esp)
		mov    0x61(%esi),%dx
		movb   $0x1,0x6b(%esi)
		cmp    $0x12c,%dx
		jge    jump_1e64a
		cmpb   $0x0,0x5c(%esi)
		je     jump_1e654
	jump_1e64a:
		movl   $0x2,0x14(%esp)
		jmp    jump_1e65c
	jump_1e654:
		movl   $0x1,0x14(%esp)
	jump_1e65c:
		cmpb   $0x5,0x1c(%esp)
		jne    jump_1e677
		mov    %esi,%eax
		call   func_1f179
		test   %ax,%ax
		jne    jump_1e677
		mov    %eax,0x14(%esp)
		movb   $0x6,0x64(%esi)
	jump_1e677:
		mov    0x5d(%esi),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_ba8ad(,%eax,8),%eax
		sar    $0x18,%eax
		cmp    $0xffffffff,%eax
		setne  %al
		xor    %ah,%ah
		mov    %eax,(%esp)
		cmpw   $0x0,data_f0b8c
		je     jump_1e6c6
		cmpw   $0x1,0x14(%esp)
		jne    jump_1e6c6
		mov    $0x18,%eax
		call   func_1033b
		movb   $0x7,0x64(%esi)
		call   func_45559
		call   func_499e4
		incb   0x64(%esi)
	jump_1e6c6:
		mov    $0x10,%eax
		mov    0x1c(%esp),%bl
		call   func_1033b
		xor    %edx,%edx
		cmp    $0xe,%bl
		je     jump_1e6e8
		mov    0x11(%esi),%bh
		cmp    $0x7f,%bh
		je     jump_1e6e8
		cmp    $0x80,%bh
		jne    jump_1e6f4
	jump_1e6e8:
		movw   $0x22,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e6f4:
		cmp    $0x1,%bl
		je     jump_1e703
		cmp    $0x3,%bl
		je     jump_1e703
		cmp    $0x4,%bl
		jne    jump_1e729
	jump_1e703:
		cmpb   $0x4,data_ba84e
		je     jump_1e71d
		mov    $0x1,%ecx
		mov    %cx,0xc(%esp)
		mov    %ecx,%edx
		jmp    jump_1e7bd
	jump_1e71d:
		movw   $0x9,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e729:
		cmp    $0x5,%bl
		jne    jump_1e748
		cmpb   $0x4,data_ba84e
		je     jump_1e71d
		movw   $0x3,0xc(%esp)
		mov    $0x1,%edx
		jmp    jump_1e7bd
	jump_1e748:
		cmp    $0x33,%bh
		jne    jump_1e761
		mov    $0x4,%edi
		mov    $0x1,%edx
		mov    %di,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e761:
		test   %bl,%bl
		jne    jump_1e776
		mov    $0x2,%ecx
		mov    $0x1,%edx
		mov    %cx,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e776:
		cmp    $0xb,%bl
		je     jump_1e785
		cmp    $0x11,%bl
		je     jump_1e785
		cmp    $0x12,%bl
		jne    jump_1e78e
	jump_1e785:
		movw   $0x5,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e78e:
		cmp    $0xc,%bl
		jne    jump_1e79c
		movw   $0x6,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e79c:
		cmp    $0xd,%bl
		jne    jump_1e7aa
		movw   $0x7,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e7aa:
		cmp    $0x13,%bl
		jne    jump_1e7b8
		movw   $0x8,0xc(%esp)
		jmp    jump_1e7bd
	jump_1e7b8:
		mov    %dx,0xc(%esp)
	jump_1e7bd:
		cmp    $0x1,%dx
		jne    jump_1e83c
		cmpw   $0x0,data_f0b8c
		je     jump_1e83c
		mov    0x11(%esi),%ah
		cmp    $0x3f,%ah
		jb     jump_1e7e2
		cmp    $0x44,%ah
		jbe    jump_1e7ea
	jump_1e7e2:
		mov    0x11(%esi),%dh
		cmp    $0x52,%dh
		jne    jump_1e7f1
	jump_1e7ea:
		mov    $0x21,%eax
		jmp    jump_1e837
	jump_1e7f1:
		cmp    $0x45,%dh
		jb     jump_1e7fb
		cmp    $0x47,%dh
		jbe    jump_1e80f
	jump_1e7fb:
		mov    0x11(%esi),%cl
		cmp    $0x53,%cl
		jb     jump_1e808
		cmp    $0x57,%cl
		jbe    jump_1e80f
	jump_1e808:
		mov    0x11(%esi),%al
		cmp    $0x5f,%al
		jne    jump_1e816
	jump_1e80f:
		mov    $0x20,%eax
		jmp    jump_1e837
	jump_1e816:
		cmp    $0x5b,%al
		jne    jump_1e825
		cmp    $0x5d,%al
		ja     jump_1e825
		mov    $0x22,%eax
		jmp    jump_1e837
	jump_1e825:
		cmpb   $0x1,0xd(%esi)
		jne    jump_1e832
		mov    $0x15,%eax
		jmp    jump_1e837
	jump_1e832:
		mov    $0x14,%eax
	jump_1e837:
		call   func_4f4cd
	jump_1e83c:
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		mov    %dx,0x4(%esp)
		mov    %dx,0x10(%esp)
		mov    %ecx,0x18(%esp)
		mov    $0xa,%ebp
	jump_1e856:
		mov    0x10(%esp),%ecx
		cmp    $0x1,%cx
		jne    jump_1e8af
		xor    %edi,%edi
		jmp    jump_1e87d
	jump_1e864:
		cmp    $0x1,%cx
		jne    jump_1e87c
		mov    %ebp,%eax
		call   func_4f4cd
		mov    data_f0648(%ebx),%eax
		call   func_46108
	jump_1e87c:
		inc    %edi
	jump_1e87d:
		cmp    data_f0b9e,%di
		jge    jump_1ea0c
		movswl %di,%edx
		lea    (%edx,%edx,1),%eax
		mov    %edx,%ebx
		mov    data_f0430(%eax),%cx
		shl    $0x2,%ebx
		cmp    $0x2,%cx
		jne    jump_1e864
		mov    data_f0648(%ebx),%eax
		call   func_4627e
		jmp    jump_1e87c
	jump_1e8af:
		cmp    $0x2,%cx
		jne    jump_1ea0c
		cmpw   $0x0,0xc(%esp)
		je     jump_1e8cd
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   func_4f4cd
	jump_1e8cd:
		mov    0x1c(%esp),%cl
		cmp    $0x5,%cl
		je     jump_1e8e5
		cmp    $0xf,%cl
		je     jump_1e8e5
		cmp    $0x11,%cl
		je     jump_1e8e5
		cmp    $0x12,%cl
		jne    jump_1e90d
	jump_1e8e5:
		cmpw   $0x2,data_f0430
		setne  %al
		mov    0x14(%esp),%ebx
		xor    %ah,%ah
		test   %bx,%bx
		jne    jump_1e8fe
		mov    %ah,0x64(%esi)
	jump_1e8fe:
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_46e27
		jmp    jump_1e989
	jump_1e90d:
		mov    0x11(%esi),%dl
		cmp    $0xa1,%dl
		jne    jump_1e921
		mov    %esi,%eax
		call   func_47712
		jmp    jump_1e989
	jump_1e921:
		cmp    $0xb,%cl
		jne    jump_1e932
		mov    %esi,%eax
		call   func_47372
		jmp    jump_1e989
	jump_1e932:
		cmp    $0xc,%cl
		jne    jump_1e940
		mov    %esi,%eax
		call   func_47a96
		jmp    jump_1e989
	jump_1e940:
		cmp    $0x10,%cl
		jne    jump_1e94c
		call   func_47e79
		jmp    jump_1e989
	jump_1e94c:
		cmp    $0x13,%cl
		jne    jump_1e95a
		mov    %esi,%eax
		call   func_47f3c
		jmp    jump_1e989
	jump_1e95a:
		cmp    $0x5c,%dl
		jne    jump_1e968
		mov    %esi,%eax
		call   func_47fdc
		jmp    jump_1e989
	jump_1e968:
		cmp    $0x7f,%dl
		je     jump_1e972
		cmp    $0x80,%dl
		jne    jump_1e97b
	jump_1e972:
		mov    $0x1,%edx
		mov    %esi,%eax
		jmp    jump_1e984
	jump_1e97b:
		cmp    $0xe,%cl
		jne    jump_1e989
		mov    %esi,%eax
		xor    %edx,%edx
	jump_1e984:
		call   func_4798a
	jump_1e989:
		cmpw   $0x1,data_f0b8c
		jne    jump_1e99a
		mov    %esi,%eax
		call   func_19168
	jump_1e99a:
		mov    $0x10,%eax
		call   func_1033b
		xor    %edi,%edi
		jmp    jump_1ea03
	jump_1e9a8:
		movswl %di,%edx
		lea    (%edx,%edx,1),%ebx
		mov    %edx,%eax
		mov    data_f0430(%ebx),%cx
		shl    $0x2,%eax
		cmp    $0x1,%cx
		jne    jump_1e9dc
		mov    data_f0648(%eax),%eax
		call   func_46108
		cmpw   $0x0,data_f0b8c
		je     jump_1ea02
		mov    %cx,0x4(%esp)
		jmp    jump_1ea02
	jump_1e9dc:
		mov    data_f042e(%ebx),%ebx
		sar    $0x10,%ebx
		cmp    $0xffffffff,%ebx
		jne    jump_1ea02
		mov    data_f0648(%eax),%eax
		xor    %ebx,%ebx
		call   func_45f29
		mov    data_f0b8c,%ax
		mov    %ax,0x4(%esp)
	jump_1ea02:
		inc    %edi
	jump_1ea03:
		cmp    data_f0b9e,%di
		jl     jump_1e9a8
	jump_1ea0c:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x14(%esp),%edi
		call   func_454b3
		cmp    0x10(%esp),%di
		jle    jump_1ea35
		incb   0x64(%esi)
		jmp    jump_1eaa6
	jump_1ea35:
		mov    0x18(%esp),%ecx
		xor    %edi,%edi
		jmp    jump_1ea77
	jump_1ea3d:
		movswl %di,%edx
		lea    (%edx,%edx,1),%eax
		mov    data_f0430(%eax),%bx
		cmp    $0x2,%bx
		je     jump_1ea76
		cmp    $0x1,%bx
		jne    jump_1ea62
		mov    data_f0648(,%edx,4),%eax
		call   func_1e460
	jump_1ea62:
		movswl %di,%eax
		movswl %cx,%ebx
		mov    data_f0648(,%eax,4),%edx
		mov    %esi,%eax
		call   func_1e4e1
	jump_1ea76:
		inc    %edi
	jump_1ea77:
		cmp    data_f0b9e,%di
		jl     jump_1ea3d
		cmpw   $0x0,(%esp)
		je     jump_1eaa6
		cmpw   $0x3,0x10(%esp)
		jge    jump_1eaa6
		mov    0xe(%esp),%edx
		mov    data_f0b8a,%ebx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1e2ea
	jump_1eaa6:
		call   func_5e9e8
		mov    0x10(%esp),%ecx
		call   func_499e4
		test   %cx,%cx
		jne    jump_1eaca
		mov    0x5c(%esi),%bl
		test   %bl,%bl
		je     jump_1eac5
		cmp    $0x6,%bl
		jbe    jump_1eaca
	jump_1eac5:
		call   func_499e4
	jump_1eaca:
		cmpw   $0x1,0x10(%esp)
		jne    jump_1eaed
		mov    0x5c(%esi),%cl
		test   %cl,%cl
		jbe    jump_1eaed
		cmp    $0x6,%cl
		ja     jump_1eaed
		call   func_499e4
		call   func_499e4
		call   func_499e4
	jump_1eaed:
		mov    0x18(%esp),%edi
		mov    0x10(%esp),%eax
		inc    %edi
		inc    %eax
		mov    %edi,0x18(%esp)
		mov    %ax,0x10(%esp)
		cmp    $0x4,%ax
		jl     jump_1e856
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_1e565
		mov    0x5c(%esi),%bl
		cmp    $0xf,%bl
		jb     jump_1eb27
		cmp    $0x16,%bl
		ja     jump_1eb27
		movb   $0x5,0x64(%esi)
	jump_1eb27:
		mov    $0x3,%eax
		mov    $0x1,%ebx
		call   func_1033b
		mov    %bx,0x8(%esp)
	jump_1eb3b:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_454b3
		jmp    jump_1ebc5
	jump_1eb55:
		movswl %di,%eax
		lea    (%eax,%eax,1),%edx
		mov    data_f0430(%edx),%cx
		cmp    $0x2,%cx
		je     jump_1ebc4
		cmp    $0x1,%cx
		jne    jump_1eb7a
		mov    data_f0648(,%eax,4),%eax
		call   func_1e460
	jump_1eb7a:
		movswl %di,%edx
		mov    data_f042e(,%edx,2),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jne    jump_1eb9f
		mov    0x6(%esp),%ebx
		mov    data_f0648(,%edx,4),%eax
		sar    $0x10,%ebx
		call   func_45f29
	jump_1eb9f:
		movswl %di,%edx
		mov    data_f0648(,%edx,4),%eax
		mov    0xb(%eax),%ebx
		sar    $0x18,%ebx
		mov    data_70a5f(%ebx),%ecx
		mov    0x6(%esp),%ebx
		sar    $0x18,%ecx
		sar    $0x10,%ebx
		call   func_45ccb
	jump_1ebc4:
		inc    %edi
	jump_1ebc5:
		cmp    data_f0b9e,%di
		jl     jump_1eb55
		call   func_5e9e8
		call   func_499e4
		mov    0x8(%esp),%eax
		inc    %eax
		mov    %ax,0x8(%esp)
		cmp    $0x19,%ax
		jl     jump_1eb3b
		movb   $0x0,0x6b(%esi)
		movb   $0x0,0x64(%esi)
		add    $0x20,%esp
	jump_1ebf7:
		pop    %ebp
	jump_1ebf8:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1ebfe:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		cmpw   $0x0,data_f0b8c
		je     jump_1ed40
		xor    %eax,%eax
		mov    0x5b(%ebx),%al
		call   func_18f52
		mov    %eax,%ecx
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_1ec37
		mov    %ebx,%eax
		call   func_17531
		mov    %eax,%ecx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_1ed40
	jump_1ec37:
		xor    %esi,%esi
		jmp    jump_1ed33
	jump_1ec3e:
		movswl %si,%eax
		cmpw   $0x2,data_f0430(,%eax,2)
		je     jump_1ed32
		mov    data_f0648(,%eax,4),%ebx
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_1ed32
		test   %cx,%cx
		jne    jump_1ec92
		mov    %ebx,%eax
		xor    %edx,%edx
		call   func_1762c
		test   %eax,%eax
		jle    jump_1ed32
		mov    0x1e(%ebx),%ah
		and    $0xf8,%ah
		movw   $0x64,0x1f(%ebx)
		mov    %ah,%dl
		or     $0x1,%dl
	jump_1ec8a:
		mov    %dl,0x1e(%ebx)
		jmp    jump_1ed32
	jump_1ec92:
		cmp    $0x1,%cx
		jne    jump_1eccb
		mov    $0x1,%edx
		mov    %ebx,%eax
		call   func_1762c
		test   %eax,%eax
		jle    jump_1ed32
		mov    0x1e(%ebx),%dh
		and    $0xf8,%dh
		mov    %dh,%al
		or     $0x2,%al
		mov    %al,0x1e(%ebx)
		mov    %ebx,%eax
		movw   $0x64,0x1f(%ebx)
		call   func_197ad
		jmp    jump_1ed32
	jump_1eccb:
		cmp    $0x2,%cx
		jne    jump_1ecf4
		mov    $0x2,%edx
		mov    %ebx,%eax
		call   func_1762c
		test   %eax,%eax
		jle    jump_1ed32
		mov    0x1e(%ebx),%ah
		and    $0xf8,%ah
		movw   $0x64,0x1f(%ebx)
		mov    %ah,%dl
		or     $0x4,%dl
		jmp    jump_1ec8a
	jump_1ecf4:
		cmp    $0x3,%cx
		jne    jump_1ed1b
		orb    $0x10,0x1e(%ebx)
		mov    0xe(%ebx),%dh
		movw   $0x64,0x23(%ebx)
		cmp    $0x1,%dh
		jne    jump_1ed32
		cmpb   $0xff,0x56(%ebx)
		jne    jump_1ed32
		mov    %ebx,%eax
		call   func_19718
		jmp    jump_1ed32
	jump_1ed1b:
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jne    jump_1ed32
		mov    0x1e(%ebx),%ah
		movw   $0x64,0x27(%ebx)
		or     $0x80,%ah
		mov    %ah,0x1e(%ebx)
	jump_1ed32:
		inc    %esi
	jump_1ed33:
		cmp    data_f0b9e,%si
		jl     jump_1ec3e
	jump_1ed40:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1ed45:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %esi,%esi
		jmp    jump_1ed82
	jump_1ed50:
		movswl %si,%ebx
		shl    $0x2,%ebx
		mov    data_f0648(%ebx),%eax
		cmpl   $0x0,0x48(%eax)
		jg     jump_1ed75
		mov    %eax,%edx
		mov    %ecx,%eax
		xor    %edi,%edi
		call   func_1db1d
		mov    %edi,data_f0648(%ebx)
		jmp    jump_1ed81
	jump_1ed75:
		mov    $0x1,%ebx
		mov    %ecx,%edx
		call   func_53797
	jump_1ed81:
		inc    %esi
	jump_1ed82:
		cmp    data_f0b9e,%si
		jl     jump_1ed50
		jmp    jump_1ebf8


/*----------------------------------------------------------------*/
func_1ed90:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%ecx
		test   %eax,%eax
		jne    jump_1eda6
		xor    %edx,%edx
		mov    %edx,(%esp)
		jmp    jump_1edae
	jump_1eda6:
		movsbw 0xe(%eax),%ax
		mov    %eax,(%esp)
	jump_1edae:
		xor    %edi,%edi
		xor    %ebp,%ebp
	jump_1edb2:
		mov    (%esp),%ebx
		cmp    $0x1,%bx
		je     jump_1edc1
		cmp    $0x2,%bx
		jne    jump_1edc7
	jump_1edc1:
		cmp    $0x2,%di
		jl     jump_1ee14
	jump_1edc7:
		cmpw   $0x3,(%esp)
		jne    jump_1edd4
		cmp    $0x2,%di
		je     jump_1ee14
	jump_1edd4:
		cmpw   $0x4,(%esp)
		jne    jump_1ede1
		cmp    $0x3,%di
		je     jump_1ee14
	jump_1ede1:
		movswl %di,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_1edeb:
		test   %eax,%eax
		je     jump_1ee14
		mov    0x48(%eax),%edx
		mov    0x7b(%eax),%esi
		cmp    %edx,%ebp
		jl     jump_1ee04
		mov    %eax,%edx
		mov    %ecx,%eax
		call   func_1db1d
		jmp    jump_1ee10
	jump_1ee04:
		mov    $0x1,%ebx
		mov    %ecx,%edx
		call   func_53797
	jump_1ee10:
		mov    %esi,%eax
		jmp    jump_1edeb
	jump_1ee14:
		inc    %edi
		cmp    $0x4,%di
		jl     jump_1edb2
		add    $0x4,%esp
		jmp    jump_1ebf7


/*----------------------------------------------------------------*/
func_1ee23:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ecx
		call   func_174cf
		cmp    $0x4,%al
		jne    jump_1ef14
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,(%esp)
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		inc    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x2(%esp)
		mov    (%esp),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x4(%esp)
		movsbw (%ecx),%ax
		mov    %ax,0xc(%esp)
		movsbw 0x1(%ecx),%ax
		mov    %ax,0x8(%esp)
		lea    0x8(%esp),%edx
		mov    0x60(%ecx),%ebx
		lea    0xc(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x6(%esp),%edx
		mov    0x60(%ecx),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_1ad62
	jump_1eebd:
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1ae48
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_1ef0b
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_1ef0b
		movswl %si,%edx
		mov    -0x2(%esp,%edx,2),%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_137b0
	jump_1ef0b:
		inc    %esi
		cmp    $0x3,%si
		jge    jump_1ef54
		jmp    jump_1eebd
	jump_1ef14:
		mov    $0x4,%edi
		xor    %esi,%esi
		jmp    jump_1ef4b
	jump_1ef1d:
		movswl %si,%ebx
		shl    $0x2,%ebx
		cmpl   $0x0,data_f0648(%ebx)
		je     jump_1ef4a
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		movswl %dx,%edx
		mov    data_f0648(%ebx),%eax
		call   func_137b0
	jump_1ef4a:
		inc    %esi
	jump_1ef4b:
		cmp    data_f0b9e,%si
		jl     jump_1ef1d
	jump_1ef54:
		add    $0x10,%esp
		jmp    jump_1ebf8


/*----------------------------------------------------------------*/
func_1ef5c:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		jmp    jump_1ef71
	jump_1ef61:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_1ef71:
		cmp    data_f0b9e,%dx
		jl     jump_1ef61
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1ef7c:
/*----------------------------------------------------------------*/
		cmp    $0x8,%al
		jne    jump_1ef86
		mov    $0x3,%eax
		ret
	jump_1ef86:
		cmp    $0x3,%al
		je     jump_1ef8e
		cmp    $0x7,%al
		jb     jump_1ef94
	jump_1ef8e:
		mov    $0x2,%eax
		ret
	jump_1ef94:
		mov    $0x1,%eax
		ret


/*----------------------------------------------------------------*/
func_1ef9a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		mov    %eax,%ecx
		lea    0x28(%esp),%edi
		mov    $vtable_1a122,%esi
		xor    %edx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %dx,0x44(%esp)
		xor    %edi,%edi
		jmp    jump_1f0f1
	jump_1efc1:
		movswl %di,%esi
		mov    data_f0648(,%esi,4),%esi
		test   %esi,%esi
		je     jump_1f0f0
		mov    0x11(%esi),%ah
		cmp    $0x86,%ah
		jb     jump_1f01e
		cmp    $0x8b,%ah
		ja     jump_1f01e
		mov    0x60(%esi),%eax
		sar    $0x18,%eax
		mov    0x60(%ecx),%edx
		add    $0x2,%eax
		sar    $0x18,%edx
		and    $0x3,%eax
		cmp    %eax,%edx
		jne    jump_1f0f0
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1,%ebx
		mov    %esi,(%esp,%edx,4)
		mov    0x44(%esp),%esi
		add    %ebx,%esi
		mov    %bx,0x28(%esp,%edx,2)
		mov    %si,0x44(%esp)
		jmp    jump_1f0f0
	jump_1f01e:
		mov    %esi,%eax
		call   func_174cf
		and    $0xff,%eax
		call   func_1ef7c
		mov    %eax,0x48(%esp)
		movsbl 0x1(%ecx),%ebx
		movsbl (%ecx),%edx
		mov    %esi,%eax
		call   func_49adf
		cmp    0x48(%esp),%ax
		jg     jump_1f0f0
		testb  $0x22,0x1e(%esi)
		jne    jump_1f0f0
		movsbw (%esi),%ax
		mov    %ax,0x40(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4c(%esp)
		lea    0x4c(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x40(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		testb  $0x2,0x13(%esi)
		je     jump_1f099
		mov    0x4a(%esp),%edx
		mov    0x3e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		cmp    %ecx,%eax
		je     jump_1f0a1
	jump_1f099:
		mov    0x13(%esi),%bh
		test   $0x4,%bh
		je     jump_1f0b1
	jump_1f0a1:
		mov    0x42(%esp),%eax
		sar    $0x10,%eax
		movw   $0x1,0x28(%esp,%eax,2)
		jmp    jump_1f0d9
	jump_1f0b1:
		test   $0x4,%bh
		je     jump_1f0c6
		mov    0x42(%esp),%eax
		sar    $0x10,%eax
		movw   $0x2,0x28(%esp,%eax,2)
		jmp    jump_1f0d9
	jump_1f0c6:
		test   $0x4,%bh
		je     jump_1f0d9
		mov    0x42(%esp),%eax
		sar    $0x10,%eax
		movw   $0x3,0x28(%esp,%eax,2)
	jump_1f0d9:
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		cmpw   $0x0,0x28(%esp,%edx,2)
		jle    jump_1f0f0
		mov    %esi,(%esp,%edx,4)
		incw   0x44(%esp)
	jump_1f0f0:
		inc    %edi
	jump_1f0f1:
		cmp    data_f0b9e,%di
		jl     jump_1efc1
		mov    %ecx,%eax
		call   func_1ee23
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		mov    %cx,0x3c(%esp)
		jmp    jump_1f166
	jump_1f110:
		mov    0x3a(%esp),%eax
		sar    $0x10,%eax
		mov    (%esp,%eax,4),%esi
		mov    0x28(%esp,%eax,2),%di
		jmp    jump_1f15c
	jump_1f121:
		mov    %esi,%ecx
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		jle    jump_1f161
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_1ddf0
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
		dec    %edi
		call   func_1ed45
		call   func_1e2b1
	jump_1f15c:
		test   %di,%di
		jg     jump_1f121
	jump_1f161:
		incw   0x3c(%esp)
	jump_1f166:
		mov    0x3c(%esp),%eax
		cmp    0x44(%esp),%ax
		jl     jump_1f110
		add    $0x50,%esp
		jmp    jump_1ebf7


/*----------------------------------------------------------------*/
func_1f179:
/*----------------------------------------------------------------*/
		push   %edx
		mov    0x11(%eax),%dl
		cmp    $0x15,%dl
		je     jump_1f191
		cmp    $0x16,%dl
		je     jump_1f191
		cmp    $0x17,%dl
		je     jump_1f191
		cmp    $0x18,%dl
		jne    jump_1f195
	jump_1f191:
		xor    %eax,%eax
		pop    %edx
		ret
	jump_1f195:
		mov    $0x1,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1f19c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,0x8(%esp)
		call   func_103a8
		mov    $0x5,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %esp,%esi
		call   func_49e4e
		call   mouse_get_state
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %ax,0xc(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_109ce
		mov    %ax,0x10(%esp)
		mov    $0x1,%eax
		call   func_44d67
		call   func_45559
		mov    %ebp,%eax
		xor    %edi,%edi
		call   func_1f179
		test   %ax,%ax
		jne    jump_1f225
		mov    $0x20,%eax
		call   func_1033b
		movb   $0x5,0x64(%ebp)
		call   func_45559
		call   func_499e4
		movb   $0x6,0x64(%ebp)
		call   func_45559
	jump_1f225:
		test   %edi,%edi
		jne    jump_1f23e
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49eee
		jmp    jump_1f243
	jump_1f23e:
		call   func_4a106
	jump_1f243:
		call   func_5d41e
		call   func_5e9e8
	jump_1f24d:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_1f278
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_1f278
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_1f278:
		cmpw   $0x0,(%esp)
		je     jump_1f24d
		call   func_5d570
		call   func_4a210
		mov    (%esp),%ebx
		cmp    $0x4800,%bx
		jb     jump_1f2b1
		jbe    jump_1f2cc
		cmp    $0x4d00,%bx
		jb     jump_1f2aa
		jbe    jump_1f2cc
		cmp    $0x5000,%bx
	jump_1f2a3:
		je     jump_1f2cc
		jmp    jump_1f3ca
	jump_1f2aa:
		cmp    $0x4b00,%bx
		jmp    jump_1f2a3
	jump_1f2b1:
		cmp    $0x1,%bx
		jb     jump_1f3ca
		jbe    jump_1f2d8
		cmp    $0x2,%bx
		je     jump_1f3fa
		jmp    jump_1f3ca
	jump_1f2cc:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_4a3ff
	jump_1f2d8:
		cmpw   $0x1,(%esp)
		jne    jump_1f32c
		mov    $0x1,%eax
		call   func_49c05
		mov    0x2(%esp),%eax
		cmp    $0x28,%ax
		jge    jump_1f2fa
		mov    $0x4b00,%eax
		jmp    jump_1f305
	jump_1f2fa:
		cmp    $0x118,%ax
		jle    jump_1f30a
		mov    $0x4d00,%eax
	jump_1f305:
		call   func_4a32c
	jump_1f30a:
		mov    0x4(%esp),%ebx
		cmp    $0x14,%bx
		jge    jump_1f31b
		mov    $0x4800,%eax
		jmp    jump_1f327
	jump_1f31b:
		cmp    $0xb4,%bx
		jle    jump_1f32c
		mov    $0x5000,%eax
	jump_1f327:
		call   func_4a32c
	jump_1f32c:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%esi
		mov    %ax,0xc(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%esi
		call   func_109ce
		mov    %eax,%ebx
		mov    %ax,0x10(%esp)
		call   func_4a321
		movswl %bx,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1f3c8
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_11db2
		mov    %eax,%esi
		mov    %eax,%edx
		cmp    %eax,%edi
		je     jump_1f382
		call   func_45559
		mov    %esi,%edi
	jump_1f382:
		mov    0xb(%edx),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_1f39a
		xor    %edi,%edi
	jump_1f39a:
		test   %edi,%edi
		je     jump_1f3b6
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49fe1
		jmp    jump_1f3ca
	jump_1f3b6:
		mov    $0x5,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_49e4e
		jmp    jump_1f3ca
	jump_1f3c8:
		xor    %edi,%edi
	jump_1f3ca:
		mov    (%esp),%esi
		cmp    $0x1b,%si
		je     jump_1f3dd
		cmp    $0x3,%si
		jne    jump_1f225
	jump_1f3dd:
		xor    %eax,%eax
		call   func_44d67
		call   func_103a0
		mov    %ebp,%eax
		call   func_12124
		xor    %eax,%eax
	jump_1f3f2:
		add    $0x14,%esp
		jmp    jump_1e2ab
	jump_1f3fa:
		test   %edi,%edi
		jne    jump_1f406
		cmpw   $0x0,0x8(%esp)
		jne    jump_1f3ca
	jump_1f406:
		mov    0x8(%esp),%ebx
		cmp    $0x1,%bx
		jne    jump_1f41d
		mov    %bx,data_f0b9e
		mov    %edi,data_f0648
	jump_1f41d:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_109ce
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   func_46e19
		xor    %eax,%eax
		call   func_44d67
		call   func_103a0
		mov    $0x1,%eax
		jmp    jump_1f3f2

vtable_1f456:
		.long   func_1f4b8
		.long   func_1f4c0
		.long   func_1f4c8
		.long   func_1f4d0


/*----------------------------------------------------------------*/
func_1f466:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edi
		call   func_103a8
		call   func_4a321
		mov    $0x20,%ecx
		mov    $0x30,%ebx
		mov    $0x4,%edx
		mov    %edi,%eax
		call   func_49e4e
		movsbw (%edi),%ax
		mov    %ax,0xc(%esp)
		movsbw 0x1(%edi),%ax
		mov    %ax,0x10(%esp)
		mov    0x63(%edi),%al
		cmp    $0x3,%al
		ja     jump_1f4d6
		and    $0xff,%eax
		jmp    *vtable_1f456(,%eax,4)


/*----------------------------------------------------------------*/
func_1f4b8:
/*----------------------------------------------------------------*/
		addw   $0x2,0x10(%esp)
		jmp    jump_1f4d6


/*----------------------------------------------------------------*/
func_1f4c0:
/*----------------------------------------------------------------*/
		subw   $0x2,0xc(%esp)
		jmp    jump_1f4d6


/*----------------------------------------------------------------*/
func_1f4c8:
/*----------------------------------------------------------------*/
		subw   $0x2,0x10(%esp)
		jmp    jump_1f4d6


/*----------------------------------------------------------------*/
func_1f4d0:
/*----------------------------------------------------------------*/
		addw   $0x2,0xc(%esp)
	jump_1f4d6:
		mov    $0x1,%eax
		call   func_44d67
		call   func_45559
		xor    %eax,%eax
		mov    %eax,0x18(%esp)
		mov    %ax,data_f0b9e
	jump_1f4f1:
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49eee
		call   func_5d41e
		call   func_5e9e8
	jump_1f50e:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_1f539
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_1f539
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_1f539:
		cmpw   $0x0,(%esp)
		je     jump_1f50e
		call   func_5d570
		call   func_4a210
		mov    (%esp),%ecx
		cmp    $0x4800,%cx
		jb     jump_1f572
		jbe    jump_1f58d
		cmp    $0x4d00,%cx
		jb     jump_1f56b
		jbe    jump_1f58d
		cmp    $0x5000,%cx
	jump_1f564:
		je     jump_1f58d
		jmp    jump_1f698
	jump_1f56b:
		cmp    $0x4b00,%cx
		jmp    jump_1f564
	jump_1f572:
		cmp    $0x1,%cx
		jb     jump_1f698
		jbe    jump_1f599
		cmp    $0x2,%cx
		je     jump_1f6d6
		jmp    jump_1f698
	jump_1f58d:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_4a3ff
	jump_1f599:
		cmpw   $0x1,(%esp)
		jne    jump_1f5ee
		mov    $0x1,%eax
		call   func_49c05
		mov    0x2(%esp),%esi
		cmp    $0x28,%si
		jge    jump_1f5bb
		mov    $0x4b00,%eax
		jmp    jump_1f5c7
	jump_1f5bb:
		cmp    $0x118,%si
		jle    jump_1f5cc
		mov    $0x4d00,%eax
	jump_1f5c7:
		call   func_4a32c
	jump_1f5cc:
		mov    0x4(%esp),%edx
		cmp    $0x14,%dx
		jge    jump_1f5dd
		mov    $0x4800,%eax
		jmp    jump_1f5e9
	jump_1f5dd:
		cmp    $0xb4,%dx
		jle    jump_1f5ee
		mov    $0x5000,%eax
	jump_1f5e9:
		call   func_4a32c
	jump_1f5ee:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %ax,0x14(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_109ce
		mov    %ax,0x8(%esp)
		call   func_4a321
		mov    0x6(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ecx,0x18(%esp)
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1f698
		mov    $0x20,%ecx
		mov    $0x30,%ebx
		mov    $0x4,%edx
		mov    %edi,%eax
		mov    $0x1,%esi
		call   func_49e4e
		mov    0x14(%esp),%eax
		mov    0x6(%esp),%edx
		add    %esi,%eax
		sar    $0x10,%edx
		cwtl
		mov    %esi,0x18(%esp)
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1f676
		mov    0x14(%esp),%eax
		mov    %ax,0xc(%esp)
	jump_1f676:
		mov    0x8(%esp),%eax
		dec    %eax
		movswl %ax,%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1f698
		mov    0x8(%esp),%eax
		mov    %ax,0x10(%esp)
	jump_1f698:
		mov    (%esp),%eax
		cmp    $0x1b,%ax
		je     jump_1f6b5
		cmp    $0x3,%ax
		je     jump_1f6b5
		cmpw   $0x0,data_f0b9e
		je     jump_1f4f1
	jump_1f6b5:
		xor    %eax,%eax
		call   func_44d67
		call   func_103a0
		mov    %edi,%eax
		call   func_12124
		mov    data_f0b9e,%ax
		add    $0x1c,%esp
		jmp    jump_1ebf7
	jump_1f6d6:
		cmpw   $0x0,0x18(%esp)
		je     jump_1f698
		mov    0xe(%esp),%esi
		mov    0xa(%esp),%ebp
		mov    $0x2,%ecx
		sar    $0x10,%esi
		sar    $0x10,%ebp
		mov    %esi,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_46e19
		push   $0xfffffffe
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_1a452
	jump_1f707:
		lea    0x8(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_1f698
		mov    0x6(%esp),%edx
		mov    0xb(%edi),%ebx
		mov    0x12(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1f707


/*----------------------------------------------------------------*/
func_1f738:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    0xe(%eax),%al
		dec    %al
		mov    data_f0648,%ebp
		mov    %al,0x8(%esp)
		mov    %esi,%eax
		mov    0x48(%ebp),%ebp
		call   func_174cf
		mov    %al,%cl
		cmp    $0x5,%al
		je     jump_1f776
		cmp    $0xf,%al
		je     jump_1f776
		cmp    $0x11,%al
		je     jump_1f776
		cmp    $0x12,%al
		je     jump_1f776
		cmp    $0x13,%al
		jne    jump_1f87e
	jump_1f776:
		cmp    $0x11,%cl
		je     jump_1f784
		cmp    $0x12,%cl
		jne    jump_1f85b
	jump_1f784:
		mov    $0x1,%edi
	jump_1f789:
		mov    %esi,%eax
		call   func_1cc09
	jump_1f790:
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_1f19c
		test   %ax,%ax
		je     jump_1f9fa
		mov    data_fa8b2,%edx
		mov    data_fa8b0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_1f790
		call   func_13f8a
		mov    data_fa8b0,%eax
		xor    %edx,%edx
		mov    %edi,%ebx
		mov    %dx,data_f0b9e
		mov    data_fa8b2,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1ac08
	jump_1f7e3:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_1f823
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_1f7e3
	jump_1f823:
		mov    data_fa8b2,%ebx
		mov    data_fa8b0,%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_1f84b
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
	jump_1f84b:
		cmpw   $0x0,data_f0b9e
		je     jump_1f789
		jmp    jump_1f877
	jump_1f85b:
		mov    %esi,%eax
		mov    $0x1,%edx
		call   func_1cc09
		mov    %esi,%eax
		call   func_1f19c
		test   %ax,%ax
		je     jump_1f9fa
	jump_1f877:
		movb   $0x1,0xc(%esp)
		jmp    jump_1f8a8
	jump_1f87e:
		cmp    $0xb,%al
		je     jump_1f886
		cmp    $0xc,%al
		jne    jump_1f89e
	jump_1f886:
		mov    %esi,%eax
		call   func_1cc09
		mov    %esi,%eax
		call   func_1f466
		test   %ax,%ax
		jne    jump_1f877
		jmp    jump_1f9fa
	jump_1f89e:
		cmp    $0x10,%al
		je     jump_1f877
		xor    %ah,%ah
		mov    %ah,0xc(%esp)
	jump_1f8a8:
		cmpb   $0x1,0xc(%esp)
		jne    jump_1f8ec
		cmp    $0x10,%cl
		je     jump_1f8ec
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    data_fa8b2,%ecx
		mov    data_fa8b0,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_46df1
	jump_1f8ec:
		mov    0x11(%esi),%cl
		cmp    $0x86,%cl
		jb     jump_1f973
		cmp    $0x8b,%cl
		ja     jump_1f973
		xor    %edi,%edi
		jmp    jump_1f964
	jump_1f905:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1ddf0
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_1f921
	jump_1f917:
		mov    $0x2,%eax
		jmp    jump_1f9fa
	jump_1f921:
		cmp    $0xfffffffe,%eax
		je     jump_1f9f5
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
		call   func_1ed45
		cmp    $0x2,%di
		jge    jump_1f94a
		mov    %esi,%eax
		call   func_1ef9a
	jump_1f94a:
		mov    %esi,%ecx
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     jump_1f96a
		inc    %edi
	jump_1f964:
		cmp    $0x3,%di
		jl     jump_1f905
	jump_1f96a:
		mov    %esi,%eax
		call   func_1ed45
		jmp    jump_1f9b7
	jump_1f973:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1ddf0
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_1f917
		cmp    $0xfffffffe,%eax
		je     jump_1f9f5
		mov    %esi,%eax
		call   func_1e61d
		mov    %esi,%eax
		call   func_1ebfe
		call   func_1ef5c
		mov    %esi,%eax
		call   func_1ed45
		cmpb   $0x0,0xc(%esp)
		jne    jump_1f9b2
		mov    %esi,%eax
		call   func_1ef9a
	jump_1f9b2:
		call   func_1e2b1
	jump_1f9b7:
		xor    %edx,%edx
		mov    0x11(%esi),%dl
		mov    %edx,%eax
		cmpb   $0x1,data_73b5a(%edx,%eax,8)
		jne    jump_1f9de
		mov    data_f0648,%edx
		test   %edx,%edx
		je     jump_1f9d5
		sub    0x48(%edx),%ebp
	jump_1f9d5:
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_462a7
	jump_1f9de:
		mov    0x5(%esp),%eax
		mov    %esi,%edx
		sar    $0x18,%eax
		call   func_11ff7
		test   %ax,%ax
		je     jump_1f917
	jump_1f9f5:
		mov    $0x1,%eax
	jump_1f9fa:
		add    $0x10,%esp
		jmp    jump_1ebf7
.data
data_1fa02:
		.ascii  "\x10\x11\x12\x13\x14"
data_1fa07:
		.ascii  "\x0f\x12\x16\x1a\x1e\x19\x1c\x20"
		.ascii  "\x24\x28\x0f\x12\x16\x1a\x1e\x0f"
		.ascii  "\x12\x16\x1a\x1e"
		.ascii   "#&*.2"
data_1fa20:
		.ascii  "\xff\x01\x00\x00\xfe\x02\x00\x00"
		.ascii  "\xfd\x03\x00\x00\xff\xff\xfe\x01"
		.ascii  "\x01\x02\xff\xff\xfe\x01\x01\x02"
		.ascii  "\x00"
data_1fa39:
		.ascii  "\x00\x00\xff\x01\x00\x00\xfe\x02"
		.ascii  "\x00\x00\xfd\x03\xfe\xff\xff\xff"
		.ascii  "\xfe\xff\x02\x01\x01\x02\x01\x01"
		.ascii  "\x00"
data_1fa52:
		.ascii  "\x0f\x12\x16\x1a\x19\x1e\x19\x1c"
		.ascii  "\x20\x24\x28\x0f\x12\x16\x1a\x1e"
		.ascii  "\x0f\x12\x16\x1a\x1e"
		.ascii   "#&*.2 "
data_1fa6d:
		.ascii  "\xfc\xfd\xfe\xff\x00\x01\x02\x03"
		.ascii  "\x04\xfc\xfd\xfe\xff\x00\x01\x02"
		.ascii  "\x03\x04\xfc\xfd\xfe\xff\x00\x01"
		.ascii  "\x02\x03\x04"
data_1fa88:
		.fill   0x9
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xfe\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe"
data_1faa3:
		.ascii  "\x0f\x12\x16\x1a\x1e\x19\x1c\x20"
		.ascii  "\x24\x28\x0f\x12\x16\x1a\x1e\x0f"
		.ascii  "\x12\x16\x1a\x1e"
		.ascii   "#&*.2"
		.ascii  "\x0f\x12\x16\x1a\x1e\x19\x1c\x20"
		.ascii  "\x24\x28\x0f\x12\x16\x1a\x1e\x0f"
		.ascii  "\x12\x16\x1a\x1e"
		.ascii   "#&*.2"
		.ascii  "\x0f\x16\x1e\x1c\x24\x0f\x16\x1e"
		.ascii  "\x16\x0f\x16"
data_1fae0:
		.ascii  "\xff\x01\x00\x00\xfe\x02\x00\x00"
		.ascii  "\xfd\x03\x00\x00\xff\xff\xfe\x01"
		.ascii  "\x01\x02\xff\xff\xfe\x01\x01\x02"
		.ascii  "\x00\xfb\xfc\xfc\xfd\xfd\xfe\xfe"
		.ascii  "\xff\xff\x00\xfc\xfd\xfd\xfe\xfe"
		.ascii  "\xff\xff\x00\x05\x04\x04\x03\x03"
		.ascii  "\x02\x02\x01\x01\x04\x03\x03\x02"
		.ascii  "\x02\x01\x01\x00\x00"
data_1fb1d:
		.ascii  "\x00\x00\xff\x01\x00\x00\xfe\x02"
		.ascii  "\x00\x00\xfd\x03\xfe\xff\xff\xff"
		.ascii  "\xfe\xff\x02\x01\x01\x02\x01\x01"
		.ascii  "\x00\x00\x00\xff\xff\xfe\xfe\xfd"
		.ascii  "\xfd\xfc\xfb\x01\x01\x02\x02\x03"
		.ascii  "\x03\x04\x05\x00\x00\xff\xff\xfe"
		.ascii  "\xfe\xfd\xfd\xfc\x01\x01\x02\x02"
		.ascii  "\x03\x03\x04\xfc\x04"
data_1fb5a:
		.fill   0x5
		.ascii  "\xff\xfe\xfd\xfc\xfb"
		.fill   0x5
		.ascii  "\x01\x02\x03\x04\x05"
data_1fb6e:
		.ascii  "\x01\x02\x03\x04\x05"
		.fill   0x5
		.ascii  "\xff\xfe\xfd\xfc\xfb"
		.fill   0x5
data_1fb82:
		.ascii  "\xff\x00\x01\xfe\xff\x00\x01\x02"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\xfc"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\x04"
		.ascii  "\xff\xff\xff\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfd\xfd\xfd\xfd\xfd\xfd\xfd\xfc"
		.ascii  "\xfc\xfc\xfc\xfc\xfc\xfc\xfc\xfc"
		.ascii  "\xff\x00\x01\xfe\xff\x00\x01\x02"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\xfc"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\x04"
		.ascii  "\x01\x01\x01\x02\x02\x02\x02\x02"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
data_1fbe2:
		.ascii  "\x01\x01\x01\x02\x02\x02\x02\x02"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\x00\x01\xfe\xff\x00\x01\x02"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\xfc"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\x04"
		.ascii  "\xff\xff\xff\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfd\xfd\xfd\xfd\xfd\xfd\xfd\xfc"
		.ascii  "\xfc\xfc\xfc\xfc\xfc\xfc\xfc\xfc"
		.ascii  "\xff\x00\x01\xfe\xff\x00\x01\x02"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\xfc"
		.ascii  "\xfd\xfe\xff\x00\x01\x02\x03\x04"
data_1fc42:
		.ascii  "\xff\x01\xff\x00\x01\xff\x00\x01"
		.ascii  "\xff\x00\x01\xff\x00\x01\xff\x00"
		.ascii  "\x01\xff\x00\x01\xff\x00\x01\xff"
		.ascii  "\x00\x01\xff\x00\x01\x00\x00\xff"
		.ascii  "\xff\xff\xfe\xfe\xfe\xfd\xfd\xfd"
		.ascii  "\xfc\xfc\xfc\xfb\xfb\xfb\xfa\xfa"
		.ascii  "\xfa\xf9\xf9\xf9\xf8\xf8\xf8\xf7"
		.ascii  "\xf7\xf7\xff\x01\xff\x00\x01\xff"
		.ascii  "\x00\x01\xff\x00\x01\xff\x00\x01"
		.ascii  "\xff\x00\x01\xff\x00\x01\xff\x00"
		.ascii  "\x01\xff\x00\x01\xff\x00\x01\x00"
		.ascii  "\x00\x01\x01\x01\x02\x02\x02\x03"
		.ascii  "\x03\x03\x04\x04\x04\x05\x05\x05"
		.ascii  "\x06\x06\x06\x07\x07\x07\x08\x08"
		.ascii  "\x08\x09\x09\x09"
data_1fcb6:
		.ascii  "\x00\x00\x01\x01\x01\x02\x02\x02"
		.ascii  "\x03\x03\x03\x04\x04\x04\x05\x05"
		.ascii  "\x05\x06\x06\x06\x07\x07\x07\x08"
		.ascii  "\x08\x08\x09\x09\x09\xff\x01\xff"
		.ascii  "\x00\x01\xff\x00\x01\xff\x00\x01"
		.ascii  "\xff\x00\x01\xff\x00\x01\xff\x00"
		.ascii  "\x01\xff\x00\x01\xff\x00\x01\xff"
		.ascii  "\x00\x01\x00\x00\xff\xff\xff\xfe"
		.ascii  "\xfe\xfe\xfd\xfd\xfd\xfc\xfc\xfc"
		.ascii  "\xfb\xfb\xfb\xfa\xfa\xfa\xf9\xf9"
		.ascii  "\xf9\xf8\xf8\xf8\xf7\xf7\xf7\xff"
		.ascii  "\x01\xff\x00\x01\xff\x00\x01\xff"
		.ascii  "\x00\x01\xff\x00\x01\xff\x00\x01"
		.ascii  "\xff\x00\x01\xff\x00\x01\xff\x00"
		.ascii  "\x01\xff\x00\x01"
data_1fd2a:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x04\x00\x05\x00\x00\x00"
data_1fd38:
		.ascii  "\x64\x00\xc8\x00\x2c\x01"
data_1fd3e:
		.ascii  "\x78\x00\x5a\x00\x32\x00"
data_1fd44:
		.ascii  "\x14\x00\x3c\x00\x64\x00"
data_1fd4a:
		.fill   0x6
data_1fd50:
		.fill   0x6
		.ascii  "\x01\x00\x02\x00"
data_1fd5a:
		.ascii  "\x04\x03\x02\x01\x00\xff\xfe\xfd"
		.ascii  "\xfc\x03\x02\x01\x00\xff\xfe\xfd"
data_1fd6a:
		.ascii  "\x00\x01\x02\x03\x04\x03\x02\x01"
		.ascii  "\x00\xff\xfe\xfd\xfc\xfd\xfe\xff"
data_1fd7a:
		.ascii  "\x14\x00\x12\x00\x10\x00\x18\x00"
		.ascii  "\x09\x00\x0a\x00\x08\x00\x06\x00"
		.ascii  "\x04\x00\x0c\x00\x04\x00\x10\x00"
		.ascii  "\x08\x00\x14\x00\x0c\x00\x0e\x00"
data_1fd9a:
		.ascii  "\x05\x00\x0a\x00\x0f\x00\x14\x00"
		.ascii  "\x08"
		.fill   0x7
		.ascii  "\x01\x00\x02\x00"
data_1fdae:
		.ascii  "\xff\xff\x01\x00\xff\xff\x01\x00"
		.ascii  "\xff\xff\x01"
		.fill   0x5
		.ascii  "\xfe\xff\x02\x00\xfe\xff\x02\x00"
		.ascii  "\xfe\xff\x02"
		.fill   0x5
data_1fdce:
		.ascii  "\xff\xff\xff\xff\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff\xff\x01\x00\xfe\xff\xfe\xff"
		.ascii  "\x02\x00\x02"
		.fill   0x5
		.ascii  "\xfe\xff\x02\x00"
data_1fdee:
		.fill   0x10
data_1fdfe:
		.ascii  "\xff\xff\x01\x00\xff\xff\x01\x00"
		.ascii  "\xff\xff\x01"
		.fill   0x5
		.ascii  "\xfe\xff\x02\x00\xfe\xff\x02\x00"
		.ascii  "\xfe\xff\x02"
		.fill   0x5
data_1fe1e:
		.ascii  "\xff\xff\xff\xff\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff\xff\x01\x00\xfe\xff\xfe\xff"
		.ascii  "\x02\x00\x02"
		.fill   0x5
		.ascii  "\xfe\xff\x02\x00"
data_1fe3e:
		.ascii  "\x01\x00\x03\x02\x05\x04\x07\x06"
data_1fe46:
		.fill   0xa
data_1fe50:
		.ascii  "\x08\x00\x00\x00\x02\x00\x04\x00"
		.ascii  "\x06\x00"
data_1fe5a:
		.ascii  "\x00\x00\xf6\xff\x0a\x00\x05\x00"
		.ascii  "\xfb\xff"
data_1fe64:
		.ascii  "\x00\x00\xf6\xff\x07\x00\x05\x00"
		.ascii  "\xfb\xff"
data_1fe6e:
		.ascii  "\x00\x57"
data_1fe70:
		.ascii  "\x00\x03\x05\x07"
data_1fe74:
		.ascii  "\x04\x03\x02\x01\x00\xff\xfe\xfd"
		.ascii  "\xfc\x03\x02\x01\x00\xff\xfe\xfd"
data_1fe84:
		.ascii  "\x00\x01\x02\x03\x04\x03\x02\x01"
		.ascii  "\x00\xff\xfe\xfd\xfc\xfd\xfe\xff"
.text


/*----------------------------------------------------------------*/
func_1fe94:
/*----------------------------------------------------------------*/
		adc    $0x12,%al
		adc    %bl,(%eax)
		or     %ecx,(%edx)
		or     %al,(%esi)
		add    $0xc,%al
		add    $0x10,%al
		or     %dl,(%esp,%ecx,1)
		push   %cs


/*----------------------------------------------------------------*/
func_1fea4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    $0x200,%ebx
		mov    %eax,%edx
		mov    $data_77134,%eax
		call   func_4979b
		mov    $0x42,%edx
		mov    %ax,0x8(%esp)
		movswl %ax,%ecx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x4(%esp),%edx
		add    data_f0da8,%dx
		mov    $0x1,%ebx
		mov    %edx,0x4(%esp)
		mov    %ecx,%eax
		mov    $0x3c,%edx
		call   w_dos_lseek
		mov    data_f0da8,%di
		jmp    jump_1ffa5
	jump_1ff0f:
		movswl %di,%esi
		imul   $0xc,%esi,%esi
		mov    0x6(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		add    $data_f0daa,%esi
		mov    %ecx,%eax
		mov    %esi,%edx
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x2(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x4(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x6(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x10,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%eax
		call   w_dos_malloc
		mov    %eax,0x8(%esi)
		mov    %eax,%edx
		mov    (%esp),%ebx
		mov    %ecx,%eax
		inc    %edi
		call   w_dos_read
	jump_1ffa5:
		mov    0x4(%esp),%ebx
		cmp    %bx,%di
		jl     jump_1ff0f
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		mov    %bx,data_f0da8
		call   w_dos_close
		add    $0xc,%esp
		jmp    jump_21e10


/*----------------------------------------------------------------*/
func_1ffcd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %edx,%edx
		jmp    jump_1ffe2
	jump_1ffd3:
		imul   $0xc,%eax,%eax
		mov    data_f0db2(%eax),%eax
		inc    %edx
		call   w_dos_free
	jump_1ffe2:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    data_f0da8,%bx
		cmp    %ebx,%eax
		jl     jump_1ffd3
		xor    %edx,%edx
		mov    %dx,data_f0da8
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1fffe:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		movswl %dx,%edx
		cwtl
		mov    0x8(%ebx),%ecx
		mov    0x4(%ebx),%esi
		mov    0x2(%ebx),%ebx
		sar    $0x10,%esi
		sar    $0x10,%ebx
		add    %esi,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		call   func_5ee51
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_20021:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		mov    $0x200,%ebx
		mov    %eax,%edx
		mov    $data_77134,%eax
		call   func_4979b
		mov    $0x2,%ebx
		lea    0xc(%esp),%edx
		movswl %ax,%ecx
		mov    %eax,%esi
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x8(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0xc(%esp),%eax
		movswl %si,%ecx
		mov    %ax,0x4(%esp)
		jmp    jump_200b3
	jump_2006c:
		mov    $0x1,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x1(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x2(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%edx
		mov    0x4(%esp),%ebx
		xor    %eax,%eax
		push   %edx
		mov    0x8(%esp),%al
		inc    %ebx
		call   func_5f986
		mov    %bx,0x4(%esp)
	jump_200b3:
		mov    0x4(%esp),%eax
		cmp    0x8(%esp),%ax
		jle    jump_2006c
		movswl %si,%eax
		call   w_dos_close
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_200ce:
		.long   func_200f5
		.long   func_20104
		.long   func_20113
		.long   func_20122


/*----------------------------------------------------------------*/
func_200de:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    0x63(%eax),%bl
		cmp    $0x3,%bl
		ja     jump_20134
		and    $0xff,%ebx
		jmp    *vtable_200ce(,%ebx,4)


/*----------------------------------------------------------------*/
func_200f5:
/*----------------------------------------------------------------*/
		movsbw 0x1(%eax),%bx
		add    %ebx,%edx
		movsbl (%eax),%eax
		movswl %dx,%edx
		jmp    jump_2012f


/*----------------------------------------------------------------*/
func_20104:
/*----------------------------------------------------------------*/
		movsbl 0x1(%eax),%ebx
		movsbw (%eax),%ax
		sub    %edx,%eax
		cwtl
		mov    %ebx,%edx
		jmp    jump_2012f


/*----------------------------------------------------------------*/
func_20113:
/*----------------------------------------------------------------*/
		movsbw 0x1(%eax),%bx
		sub    %edx,%ebx
		movsbl (%eax),%eax
		movswl %bx,%edx
		jmp    jump_2012f


/*----------------------------------------------------------------*/
func_20122:
/*----------------------------------------------------------------*/
		movsbl 0x1(%eax),%ebx
		movsbw (%eax),%ax
		add    %edx,%eax
		cwtl
		mov    %ebx,%edx
	jump_2012f:
		call   func_1124a
	jump_20134:
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_20136:
/*----------------------------------------------------------------*/
		imul   $0x18,%eax,%eax
		add    data_7001c,%ax
		add    $0x4,%eax
		ret


/*----------------------------------------------------------------*/
func_20146:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_ba838,%dx
		shl    $0x4,%eax
		add    %edx,%eax
		add    $0x4,%eax
		pop    %edx
		ret

vtable_2015a:
		.long   func_20234
		.long   func_2025a
		.long   func_20280
		.long   func_202a4


/*----------------------------------------------------------------*/
func_2016a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%edi
		mov    %dx,0x14(%esp)
		mov    $data_7713e,%eax
		xor    %edx,%edx
		call   func_1fea4
		mov    %dx,(%esp)
		mov    %edi,%eax
		mov    $0x3,%edx
		call   func_200de
		movsbl (%edi),%eax
		call   func_10971
		mov    %eax,%ecx
		movsbl 0x1(%edi),%eax
		call   func_10988
		mov    %eax,%esi
		mov    0x12(%esp),%eax
		movswl %bx,%edx
		sar    $0x10,%eax
		lea    0x8(%esp),%ebx
		call   func_11db2
		lea    0x10(%esp),%edx
		call   func_135eb
		mov    $0x32,%eax
		add    $0xc,%ecx
		call   func_4f4cd
		mov    $0x3,%eax
		add    $0x2,%esi
		call   func_1033b
	jump_201df:
		mov    0xe(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x6(%esp),%edx
		mov    %eax,0xc(%esp)
		sar    $0x10,%edx
		movswl %si,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    0x63(%edi),%al
		cmp    $0x3,%al
		ja     jump_202c9
		mov    0xc(%esp),%edx
		and    $0xff,%eax
		add    %ecx,%edx
		add    %esi,%ebx
		mov    %edx,0x4(%esp)
		jmp    *vtable_2015a(,%eax,4)


/*----------------------------------------------------------------*/
func_20234:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		mov    0x4(%esp),%ecx
		add    $0x6,%esi
		jmp    jump_202c7


/*----------------------------------------------------------------*/
func_2025a:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		add    $0x8,%edx
		imul   $0xc,%edx,%ebp
		mov    %ebx,%esi
		sub    $0x6,%ecx
		add    $data_f0daa,%ebp
		jmp    jump_202c9


/*----------------------------------------------------------------*/
func_20280:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		mov    0x4(%esp),%ecx
		sub    $0x6,%esi
		jmp    jump_202c7


/*----------------------------------------------------------------*/
func_202a4:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		add    $0xc,%edx
		imul   $0xc,%edx,%edx
		mov    %ebx,%esi
		mov    $data_f0daa,%ebp
		add    $0x6,%ecx
	jump_202c7:
		add    %edx,%ebp
	jump_202c9:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ebp,%ebx
		call   func_454b3
		movswl %si,%edx
		movswl %cx,%eax
		call   func_1fffe
		call   func_5e9e8
		cmp    0x10(%esp),%cx
		jne    jump_202ff
		cmp    0x8(%esp),%si
		je     jump_20358
	jump_202ff:
		mov    0x63(%edi),%ah
		test   %ah,%ah
		je     jump_2030b
		cmp    $0x2,%ah
		jne    jump_20323
	jump_2030b:
		mov    0x6(%esp),%eax
		movswl %si,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jle    jump_20358
	jump_20323:
		mov    0x63(%edi),%dh
		cmp    $0x1,%dh
		je     jump_20330
		cmp    $0x3,%dh
		jne    jump_20346
	jump_20330:
		mov    0xe(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jle    jump_20358
	jump_20346:
		mov    (%esp),%edx
		inc    %edx
		call   func_499e4
		mov    %dx,(%esp)
		jmp    jump_201df
	jump_20358:
		mov    $0x9,%eax
		call   func_1033b
		mov    $0x33,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
	jump_2036e:
		xor    %eax,%eax
		movswl %cx,%edi
		mov    data_f0da8,%ax
		add    $0x10,%edi
		cmp    %eax,%edi
		jge    jump_203bf
		imul   $0xc,%edi,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		jmp    jump_2036e
	jump_203bf:
		call   func_1ffcd
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_203cc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		push   %eax
		mov    %edx,%ecx
		lea    0x4(%esp),%edi
		mov    $0x40,%ebx
		mov    $data_1fa02,%esi
		mov    $0x5,%edx
		lea    0x4(%esp),%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_611aa
		mov    $data_7714a,%eax
		movswl %cx,%ebx
		mov    -0x2(%esp),%ecx
		call   func_1fea4
		sar    $0x10,%ecx
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_1124a
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_11db2
		lea    0x10(%esp),%ebx
		lea    0xc(%esp),%edx
		mov    $0xfffffffe,%edi
		call   func_135eb
		mov    0xc(%esp),%edx
		xor    %ecx,%ecx
		sub    $0x10,%edx
		mov    $0x5,%eax
		mov    %dx,0xc(%esp)
		call   func_1033b
	jump_20444:
		test   $0x1,%cl
		je     jump_20453
		xor    %eax,%eax
		mov    %ax,data_ba838
		jmp    jump_2045a
	jump_20453:
		mov    %di,data_ba838
	jump_2045a:
		movswl %cx,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_20477
		mov    $0x32,%eax
		call   func_4f4cd
	jump_20477:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		sar    %edx
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		mov    0x10(%esp),%eax
		add    0x6(%edx),%ax
		mov    0x8(%edx),%ebx
		movswl %ax,%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		inc    %ecx
		call   func_5f305
		call   func_5e9e8
		call   func_499e4
		cmp    $0x32,%cx
		jl     jump_20444
		call   func_1ffcd
		call   func_61115
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_204e8:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x28,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    %cl,0x30(%esp)
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x4(%esp),%ebx
		call   func_1124a
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0xc(%esp),%edi
		call   func_11db2
		lea    0x8(%esp),%edx
		mov    $data_77156,%esi
		call   func_135eb
		mov    -0x2(%esp),%eax
		mov    $0xa,%ebx
		lea    0x2c(%esp),%edx
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		lea    0x2c(%esp),%edx
		lea    0xc(%esp),%eax
		call   w_dos_strcat
		mov    $data_7715c,%edx
		lea    0xc(%esp),%eax
		call   w_dos_strcat
		lea    0xc(%esp),%eax
		call   func_1fea4
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0xa,%eax
		movzbw 0x40(%esp),%di
		call   func_1033b
		mov    data_f0da8,%dx
		xor    %ecx,%ecx
		imul   %edx,%edi
		jmp    jump_2060e
	jump_20597:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		cmpb   $0x1,0x30(%esp)
		jne    jump_205b9
		call   func_12bee
	jump_205b9:
		xor    %ebx,%ebx
		movswl %cx,%edx
		mov    data_f0da8,%bx
		cmp    %ebx,%edx
		jl     jump_205d0
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
	jump_205d0:
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		mov    0x2(%esp),%eax
		mov    0x6(%esp),%esi
		mov    %edx,%ebx
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_1fffe
		cmpb   $0x0,0x30(%esp)
		jne    jump_205fe
		call   func_12bee
	jump_205fe:
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		inc    %ecx
	jump_2060e:
		cmp    %di,%cx
		jl     jump_20597
	jump_20613:
		call   func_1ffcd
		add    $0x34,%esp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_20620:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1fc,%esp
		push   %eax
		push   %edx
		mov    $0x6,%ecx
		lea    0x1c4(%esp),%edi
		mov    $data_1fa07,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x1a8(%esp),%edi
		mov    $data_1fa20,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x1e0(%esp),%edi
		mov    $data_1fa39,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %bl,%bl
		jne    jump_2067d
		mov    $data_77161,%eax
		mov    $0xd,%edi
		mov    $0x1,%esi
		jmp    jump_2068c
	jump_2067d:
		mov    $data_7716d,%eax
		mov    $0x3,%edi
		mov    $0x6,%esi
	jump_2068c:
		call   func_1fea4
		mov    (%esp),%eax
		dec    %eax
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_1124a
	jump_206a6:
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x1a8(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0xa4(%esp,%edx,2)
		mov    (%esp),%eax
		movsbw 0x1e0(%esp,%edx,1),%dx
		add    %edx,%eax
		cwtl
		inc    %ecx
		call   func_10988
		mov    %ax,0x70(%esp,%ebx,2)
		cmp    $0x19,%cx
		jl     jump_206a6
		xor    %ecx,%ecx
		mov    %cx,0x200(%esp)
	jump_206f2:
		mov    0x1fe(%esp),%eax
		sar    $0x10,%eax
		xor    %edx,%edx
		mov    %dx,0x10c(%esp,%eax,2)
		movsbw 0x1c4(%esp,%eax,1),%dx
		imul   $0xa,%edx,%edx
		mov    0x70(%esp,%eax,2),%cx
		mov    %eax,%ebx
		sub    %edx,%ecx
		mov    0xa2(%esp,%eax,2),%edx
		mov    %cx,0xd8(%esp,%eax,2)
		mov    0x1c1(%esp,%eax,1),%eax
		sar    $0x18,%eax
		mov    %eax,0x1fc(%esp)
		sar    $0x10,%edx
		mov    0x1fc(%esp),%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0xd6(%esp,%ebx,2),%edx
		mov    %ax,0x174(%esp,%ebx,2)
		mov    0x6e(%esp,%ebx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ax,0x140(%esp,%ebx,2)
		mov    0x200(%esp),%ebx
		inc    %ebx
		mov    %bx,0x200(%esp)
		cmp    $0x19,%bx
		jl     jump_206f2
		mov    $0x5,%eax
		call   func_1033b
	jump_207a1:
		mov    0x1d9(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xffffffd8,%eax
		jle    jump_20929
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_10aeb
		call   func_12bee
	jump_207d1:
		movswl %cx,%edx
		cmpb   $0x0,0x1c4(%esp,%edx,1)
		jle    jump_20814
		mov    0x174(%esp,%edx,2),%bx
		add    %bx,0x10c(%esp,%edx,2)
		mov    0x140(%esp,%edx,2),%bx
		add    %bx,0xd8(%esp,%edx,2)
		mov    0x1c1(%esp,%edx,1),%edx
		sar    $0x18,%edx
		movswl %si,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		jmp    jump_20834
	jump_20814:
		mov    0x1c1(%esp,%edx,1),%edx
		sar    $0x18,%edx
		cmp    $0xffffffd8,%edx
		jle    jump_2083e
		neg    %edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%eax
		add    %eax,%edx
	jump_20834:
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		add    %edx,%ebp
	jump_2083e:
		movswl %cx,%eax
		cmpb   $0xf,0x1c4(%esp,%eax,1)
		jne    jump_20864
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_20864
		mov    $0x34,%eax
		call   func_4f4cd
	jump_20864:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x10c(%esp,%eax,1),%dx
		add    $0xc,%edx
		mov    %dx,0x3c(%esp,%eax,1)
		mov    0xd8(%esp,%eax,1),%dx
		mov    %dx,0x8(%esp,%eax,1)
		mov    0x6(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_208a0
		mov    0x3a(%esp,%eax,1),%eax
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_1fffe
	jump_208a0:
		movswl %cx,%eax
		mov    0x1c4(%esp,%eax,1),%dh
		dec    %dh
		mov    %dh,0x1c4(%esp,%eax,1)
		jne    jump_2090a
		mov    $0x5,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_208ce
		mov    $0x32,%eax
		call   func_4f4cd
	jump_208ce:
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x1a8(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x10c(%esp,%edx,2)
		movsbw 0x1e0(%esp,%edx,1),%ax
		add    (%esp),%eax
		cwtl
		call   func_10988
		mov    %ax,0xd8(%esp,%ebx,2)
	jump_2090a:
		inc    %ecx
		cmp    $0x19,%cx
		jl     jump_207d1
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_207a1
	jump_20929:
		call   func_1ffcd
		add    $0x204,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_2093a:
		.long   func_20a04
		.long   func_20a39
		.long   func_20a69
		.long   func_20a9b

vtable_2094a:
		.long   func_20cf9
		.long   func_20d26
		.long   func_20d85
		.long   func_20db6


/*----------------------------------------------------------------*/
func_2095a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x21c,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    %cl,%al
		mov    $0x6,%ecx
		lea    0x1e8(%esp),%edi
		mov    $data_1fa52,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x204(%esp),%edi
		mov    $data_1fa6d,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x1cc(%esp),%edi
		mov    $data_1fa88,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %al,%al
		jne    jump_209bf
		mov    $data_77161,%eax
		mov    $0xd,%edi
		mov    $0x1,%esi
		jmp    jump_209ce
	jump_209bf:
		mov    $data_7716d,%eax
		mov    $0x3,%edi
		mov    $0x6,%esi
	jump_209ce:
		call   func_1fea4
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		xor    %edx,%edx
	jump_209e8:
		mov    0x8(%esp),%eax
		mov    0x63(%eax),%al
		cmp    $0x3,%al
		ja     jump_20adb
		and    $0xff,%eax
		jmp    *vtable_2093a(,%eax,4)


/*----------------------------------------------------------------*/
func_20a04:
/*----------------------------------------------------------------*/
		movswl %dx,%ebx
		mov    0x4(%esp),%ecx
		movsbw 0x204(%esp,%ebx,1),%ax
		add    %ecx,%eax
		cwtl
		call   func_10971
		mov    %ebx,%ecx
		mov    %ax,0x124(%esp,%ebx,2)
		mov    (%esp),%eax
		movsbw 0x1cc(%esp,%ebx,1),%bx
	jump_20a32:
		sub    %ebx,%eax
		jmp    jump_20acd


/*----------------------------------------------------------------*/
func_20a39:
/*----------------------------------------------------------------*/
		movswl %dx,%ebx
		mov    0x4(%esp),%ecx
		movsbw 0x1cc(%esp,%ebx,1),%ax
		add    %ecx,%eax
		cwtl
		call   func_10971
		mov    %ebx,%ecx
		mov    %ax,0x124(%esp,%ebx,2)
		mov    (%esp),%eax
		movsbw 0x204(%esp,%ebx,1),%bx
		jmp    jump_20a32


/*----------------------------------------------------------------*/
func_20a69:
/*----------------------------------------------------------------*/
		movswl %dx,%ebx
		mov    0x4(%esp),%ecx
		movsbw 0x204(%esp,%ebx,1),%ax
		add    %ecx,%eax
		cwtl
		call   func_10971
		mov    %ebx,%ecx
		mov    %ax,0x124(%esp,%ebx,2)
		mov    (%esp),%eax
		movsbw 0x1cc(%esp,%ebx,1),%bx
		add    %ebx,%eax
		jmp    jump_20acd


/*----------------------------------------------------------------*/
func_20a9b:
/*----------------------------------------------------------------*/
		movswl %dx,%ebx
		mov    0x4(%esp),%ecx
		movsbw 0x1cc(%esp,%ebx,1),%ax
		sub    %eax,%ecx
		movswl %cx,%eax
		call   func_10971
		mov    %ebx,%ecx
		mov    %ax,0x124(%esp,%ebx,2)
		mov    (%esp),%eax
		movsbw 0x204(%esp,%ebx,1),%bx
		sub    %ebx,%eax
	jump_20acd:
		cwtl
		call   func_10988
		mov    %ax,0xec(%esp,%ecx,2)
	jump_20adb:
		inc    %edx
		cmp    $0x1b,%dx
		jl     jump_209e8
		xor    %edx,%edx
		mov    %dx,0x224(%esp)
	jump_20af0:
		mov    0x222(%esp),%eax
		sar    $0x10,%eax
		xor    %edx,%edx
		mov    %dx,0x194(%esp,%eax,2)
		movsbw 0x1e8(%esp,%eax,1),%dx
		imul   $0xa,%edx,%edx
		mov    0xec(%esp,%eax,2),%cx
		mov    %eax,%ebx
		sub    %edx,%ecx
		mov    0x122(%esp,%eax,2),%edx
		mov    %cx,0x15c(%esp,%eax,2)
		mov    0x1e5(%esp,%eax,1),%eax
		sar    $0x18,%eax
		mov    %eax,0x220(%esp)
		sar    $0x10,%edx
		mov    0x220(%esp),%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x15a(%esp,%ebx,2),%edx
		mov    %ax,0x44(%esp,%ebx,2)
		mov    0xea(%esp,%ebx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ax,0xc(%esp,%ebx,2)
		mov    0x224(%esp),%ebx
		inc    %ebx
		mov    %bx,0x224(%esp)
		cmp    $0x1b,%bx
		jl     jump_20af0
		mov    $0x5,%eax
		call   func_1033b
	jump_20b9f:
		mov    0x1fd(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xffffffd8,%eax
		jle    jump_20dd0
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_10aeb
		call   func_12bee
	jump_20bcf:
		movswl %cx,%edx
		cmpb   $0x0,0x1e8(%esp,%edx,1)
		jle    jump_20c0c
		mov    0x44(%esp,%edx,2),%bx
		add    %bx,0x194(%esp,%edx,2)
		mov    0xc(%esp,%edx,2),%bx
		add    %bx,0x15c(%esp,%edx,2)
		mov    0x1e5(%esp,%edx,1),%edx
		sar    $0x18,%edx
		movswl %si,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		jmp    jump_20c2c
	jump_20c0c:
		mov    0x1e5(%esp,%edx,1),%edx
		sar    $0x18,%edx
		cmp    $0xffffffd8,%edx
		jle    jump_20c36
		neg    %edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%eax
		add    %eax,%edx
	jump_20c2c:
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		add    %edx,%ebp
	jump_20c36:
		movswl %cx,%eax
		cmpb   $0xf,0x1e8(%esp,%eax,1)
		jne    jump_20c5c
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_20c5c
		mov    $0x34,%eax
		call   func_4f4cd
	jump_20c5c:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x194(%esp,%eax,1),%dx
		add    $0xc,%edx
		mov    %dx,0xb4(%esp,%eax,1)
		mov    0x15c(%esp,%eax,1),%dx
		mov    %dx,0x7c(%esp,%eax,1)
		mov    0x7a(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_20c9e
		mov    0xb2(%esp,%eax,1),%eax
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_1fffe
	jump_20c9e:
		movswl %cx,%eax
		mov    0x1e8(%esp,%eax,1),%dl
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x1e8(%esp,%eax,1)
		test   %dl,%dl
		jne    jump_20d66
		mov    $0x5,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_20cdd
		mov    $0x2,%eax
		call   func_499bd
		cwtl
		add    $0x32,%eax
		call   func_4f4cd
	jump_20cdd:
		mov    0x8(%esp),%eax
		mov    0x63(%eax),%al
		cmp    $0x3,%al
		ja     jump_20d66
		and    $0xff,%eax
		jmp    *vtable_2094a(,%eax,4)


/*----------------------------------------------------------------*/
func_20cf9:
/*----------------------------------------------------------------*/
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x204(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x194(%esp,%edx,2)
		movsbw 0x1cc(%esp,%edx,1),%ax
		jmp    jump_20d51


/*----------------------------------------------------------------*/
func_20d26:
/*----------------------------------------------------------------*/
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x1cc(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
	jump_20d39:
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x194(%esp,%edx,2)
		movsbw 0x204(%esp,%edx,1),%ax
	jump_20d51:
		mov    (%esp),%edx
		sub    %eax,%edx
		movswl %dx,%eax
	jump_20d59:
		call   func_10988
		mov    %ax,0x15c(%esp,%ebx,2)
	jump_20d66:
		inc    %ecx
		cmp    $0x1b,%cx
		jl     jump_20bcf
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_20b9f


/*----------------------------------------------------------------*/
func_20d85:
/*----------------------------------------------------------------*/
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x204(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x194(%esp,%edx,2)
		movsbw 0x1cc(%esp,%edx,1),%ax
		add    (%esp),%eax
		cwtl
		jmp    jump_20d59


/*----------------------------------------------------------------*/
func_20db6:
/*----------------------------------------------------------------*/
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x1cc(%esp,%edx,1),%ax
		sub    %eax,%ebx
		movswl %bx,%eax
		jmp    jump_20d39
	jump_20dd0:
		call   func_1ffcd
		add    $0x228,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_20ddf:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4a8,%esp
		push   %eax
		push   %edx
		mov    $0xf,%ecx
		lea    0x428(%esp),%edi
		mov    $data_1faa3,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0xf,%ecx
		lea    0x3e8(%esp),%edi
		mov    $data_1fae0,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0xf,%ecx
		lea    0x468(%esp),%edi
		mov    $data_1fb1d,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %bl,%bl
		jne    jump_20e3c
		mov    $data_77161,%eax
		mov    $0xd,%edi
		mov    $0x1,%esi
		jmp    jump_20e4b
	jump_20e3c:
		mov    $data_7716d,%eax
		mov    $0x3,%edi
		mov    $0x6,%esi
	jump_20e4b:
		call   func_1fea4
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_1124a
	jump_20e65:
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x3e8(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x100(%esp,%edx,2)
		mov    (%esp),%eax
		movsbw 0x468(%esp,%edx,1),%dx
		add    %eax,%edx
		movswl %dx,%eax
		inc    %ecx
		call   func_10988
		mov    %ax,0x84(%esp,%ebx,2)
		cmp    $0x3d,%cx
		jl     jump_20e65
		xor    %edx,%edx
		mov    %dx,0x4ac(%esp)
	jump_20eb6:
		mov    0x4aa(%esp),%eax
		sar    $0x10,%eax
		movsbw 0x428(%esp,%eax,1),%dx
		imul   $0xa,%edx,%edx
		xor    %ecx,%ecx
		mov    %cx,0x1f8(%esp,%eax,2)
		mov    0x84(%esp,%eax,2),%cx
		mov    %eax,%ebx
		sub    %edx,%ecx
		mov    0xfe(%esp,%eax,2),%edx
		mov    %cx,0x17c(%esp,%eax,2)
		mov    0x425(%esp,%eax,1),%eax
		sar    $0x18,%eax
		mov    %eax,0x4a8(%esp)
		sar    $0x10,%edx
		mov    0x4a8(%esp),%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x82(%esp,%ebx,2),%edx
		mov    %ax,0x2f0(%esp,%ebx,2)
		mov    0x17a(%esp,%ebx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ax,0x274(%esp,%ebx,2)
		mov    0x4ac(%esp),%eax
		inc    %eax
		mov    %ax,0x4ac(%esp)
		cmp    $0x3d,%ax
		jl     jump_20eb6
		mov    $0x5,%eax
		call   func_1033b
	jump_20f69:
		mov    0x43d(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xffffffd8,%eax
		jle    jump_21104
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_10aeb
		call   func_12bee
	jump_20f99:
		movswl %cx,%edx
		cmpb   $0x0,0x428(%esp,%edx,1)
		jle    jump_20fdc
		mov    0x2f0(%esp,%edx,2),%bx
		add    %bx,0x1f8(%esp,%edx,2)
		mov    0x274(%esp,%edx,2),%bx
		add    %bx,0x17c(%esp,%edx,2)
		mov    0x425(%esp,%edx,1),%edx
		sar    $0x18,%edx
		movswl %si,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		jmp    jump_20ffc
	jump_20fdc:
		mov    0x425(%esp,%edx,1),%edx
		sar    $0x18,%edx
		cmp    $0xffffffd8,%edx
		jle    jump_21006
		neg    %edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%eax
		add    %eax,%edx
	jump_20ffc:
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		add    %edx,%ebp
	jump_21006:
		movswl %cx,%eax
		cmpb   $0xf,0x428(%esp,%eax,1)
		jne    jump_2102c
		mov    $0x5,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_2102c
		mov    $0x34,%eax
		call   func_4f4cd
	jump_2102c:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x1f8(%esp,%eax,1),%dx
		add    $0xc,%edx
		mov    %dx,0x8(%esp,%eax,1)
		mov    0x17c(%esp,%eax,1),%dx
		mov    %dx,0x36c(%esp,%eax,1)
		mov    0x36a(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_2106e
		mov    0x6(%esp,%eax,1),%eax
		mov    %ebp,%ebx
		sar    $0x10,%eax
		call   func_1fffe
	jump_2106e:
		movswl %cx,%eax
		mov    0x428(%esp,%eax,1),%dl
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x428(%esp,%eax,1)
		test   %dl,%dl
		jne    jump_210e5
		mov    $0x5,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_210a9
		mov    $0x2,%eax
		call   func_499bd
		cwtl
		add    $0x32,%eax
		call   func_4f4cd
	jump_210a9:
		movswl %cx,%edx
		mov    0x4(%esp),%ebx
		movsbw 0x3e8(%esp,%edx,1),%ax
		add    %ebx,%eax
		cwtl
		call   func_10971
		mov    %edx,%ebx
		mov    %ax,0x1f8(%esp,%edx,2)
		movsbw 0x468(%esp,%edx,1),%ax
		add    (%esp),%eax
		cwtl
		call   func_10988
		mov    %ax,0x17c(%esp,%ebx,2)
	jump_210e5:
		inc    %ecx
		cmp    $0x3d,%cx
		jl     jump_20f99
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_20f69
	jump_21104:
		call   func_1ffcd
		add    $0x4b0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_21114:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x54,%esp
		mov    %eax,%ebx
		mov    %esp,%edi
		mov    $data_1fb5a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x14(%esp),%edi
		mov    $data_1fb6e,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		test   %dl,%dl
		jne    jump_21152
		mov    $data_7717a,%eax
		mov    $0xd,%edi
		mov    $0x1,%esi
		call   func_1fea4
		jmp    jump_21163
	jump_21152:
		mov    $data_77183,%eax
		mov    $0x7,%edi
		call   func_1fea4
		xor    %esi,%esi
	jump_21163:
		mov    $0x3,%edx
		mov    %ebx,%eax
		call   func_200de
		mov    $0x2,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_2117b:
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		movswl %cx,%ebp
		lea    (%eax,%eax,4),%eax
		add    %ebp,%eax
		movsbw (%esp,%eax,1),%ax
		imul   $0x18,%eax,%eax
		mov    %eax,0x50(%esp)
		movsbl (%ebx),%eax
		mov    0x50(%esp),%edx
		call   func_10971
		add    %edx,%eax
		lea    0x0(%ebp,%ebp,1),%edx
		add    $0xc,%eax
		mov    %ax,0x34(%esp,%edx,1)
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		lea    (%eax,%eax,4),%eax
		add    %eax,%ebp
		movsbw 0x14(%esp,%ebp,1),%ax
		shl    $0x4,%eax
		mov    %eax,0x50(%esp)
		movsbl 0x1(%ebx),%eax
		call   func_10988
		add    0x50(%esp),%eax
		add    $0x4,%eax
		mov    %ax,0x40(%esp,%edx,1)
		test   %si,%si
		je     jump_211ee
		movw   $0xffff,0x28(%esp,%edx,1)
		jmp    jump_211f5
	jump_211ee:
		movw   $0x7,0x28(%esp,%edx,1)
	jump_211f5:
		inc    %ecx
		cmp    $0x5,%cx
		jl     jump_2117b
		xor    %edx,%edx
		movswl %di,%ebp
		mov    %dx,0x4c(%esp)
	jump_2120a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		test   %si,%si
		je     jump_2122c
		incw   0x28(%esp)
		jmp    jump_21231
	jump_2122c:
		decw   0x28(%esp)
	jump_21231:
		mov    $0x4,%ecx
	jump_21236:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x28(%esp,%eax,1),%bx
		test   %bx,%bx
		jl     jump_2126e
		cmp    %bx,%di
		jle    jump_2126e
		mov    0x26(%esp,%eax,1),%edx
		sar    $0x10,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    0x3e(%esp,%eax,1),%edx
		mov    0x32(%esp,%eax,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
	jump_2126e:
		test   %si,%si
		je     jump_21287
		movswl %cx,%eax
		add    %eax,%eax
		cmpw   $0x2,0x28(%esp,%eax,1)
		jle    jump_21299
		incw   0x2a(%esp,%eax,1)
		jmp    jump_21299
	jump_21287:
		movswl %cx,%eax
		add    %eax,%eax
		cmpw   $0x6,0x28(%esp,%eax,1)
		jge    jump_21299
		decw   0x2a(%esp,%eax,1)
	jump_21299:
		dec    %ecx
		test   %cx,%cx
		jge    jump_21236
		incw   0x4c(%esp)
		mov    0x4a(%esp),%ebx
		call   func_5e9e8
		sar    $0x10,%ebx
		call   func_499e4
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		test   %edx,%edx
		jne    jump_212db
		lea    0x6(%ebx),%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		and    $0xffff,%eax
		call   func_1033b
	jump_212db:
		mov    0x4a(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_212fc
		mov    $0x32,%eax
		call   func_4f4cd
	jump_212fc:
		test   %si,%si
		je     jump_2130d
		cmp    0x30(%esp),%di
		jl     jump_21319
		jmp    jump_2120a
	jump_2130d:
		cmpw   $0x0,0x30(%esp)
		jne    jump_2120a
	jump_21319:
		call   func_499e4
		call   func_1ffcd
		add    $0x54,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_2132b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x138,%esp
		mov    %eax,%ebx
		mov    $0x18,%ecx
		lea    0x60(%esp),%edi
		mov    $data_1fb82,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x18,%ecx
		mov    %esp,%edi
		mov    $data_1fbe2,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		test   %dl,%dl
		jne    jump_2137e
		mov    $data_7717a,%eax
		mov    $0xd,%esi
		mov    $0x1,%edi
		call   func_1fea4
		mov    %esi,0x12c(%esp)
		mov    %edi,0x134(%esp)
		jmp    jump_2139d
	jump_2137e:
		mov    $data_77183,%eax
		mov    $0x7,%edx
		call   func_1fea4
		xor    %ecx,%ecx
		mov    %edx,0x12c(%esp)
		mov    %ecx,0x134(%esp)
	jump_2139d:
		mov    $0x2,%edx
		mov    %ebx,%eax
		call   func_200de
		cmpw   $0x0,0x134(%esp)
		je     jump_213bb
		mov    $0x4,%eax
		jmp    jump_213c0
	jump_213bb:
		mov    $0x9,%eax
	jump_213c0:
		call   func_1033b
		xor    %ecx,%ecx
	jump_213c7:
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		imul   $0x18,%eax,%eax
		movswl %cx,%esi
		add    %esi,%eax
		movsbw 0x60(%esp,%eax,1),%ax
		imul   $0x18,%eax,%edx
		movsbl (%ebx),%eax
		call   func_10971
		add    %edx,%eax
		add    $0xc,%eax
		mov    %ax,0xf0(%esp,%esi,2)
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		imul   $0x18,%eax,%eax
		mov    %esi,%edx
		add    %eax,%esi
		movsbw (%esp,%esi,1),%ax
		mov    %eax,%esi
		movsbl 0x1(%ebx),%eax
		shl    $0x4,%esi
		call   func_10988
		add    %esi,%eax
		inc    %ecx
		mov    %ax,0xc0(%esp,%edx,2)
		cmp    $0x18,%cx
		jl     jump_213c7
		xor    %eax,%eax
	jump_21428:
		cmpw   $0x0,0x134(%esp)
		je     jump_21440
		movswl %ax,%edx
		movb   $0xff,0x120(%esp,%edx,1)
		jmp    jump_2144b
	jump_21440:
		movswl %ax,%edx
		movb   $0x7,0x120(%esp,%edx,1)
	jump_2144b:
		inc    %eax
		cmp    $0x4,%ax
		jl     jump_21428
		xor    %edx,%edx
		mov    $data_f0daa,%ebp
		mov    %dx,0x128(%esp)
	jump_21461:
		mov    $0x3,%ecx
		mov    0x134(%esp),%edi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_10aeb
		call   func_12bee
		mov    %ecx,0x130(%esp)
		test   %di,%di
		je     jump_2149f
		incb   0x120(%esp)
		jmp    jump_214a6
	jump_2149f:
		decb   0x120(%esp)
	jump_214a6:
		xor    %edi,%edi
	jump_214a8:
		xor    %ecx,%ecx
		jmp    jump_214f7
	jump_214ac:
		movswl %di,%eax
		mov    0x120(%esp,%eax,1),%dl
		test   %dl,%dl
		jl     jump_214f5
		mov    0x12c(%esp),%ebx
		movsbw %dl,%dx
		cmp    %bx,%dx
		jge    jump_214f5
		mov    0x11d(%esp,%eax,1),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		movswl %si,%eax
		mov    0xbe(%esp,%eax,2),%edx
		mov    0xee(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_214f5:
		inc    %esi
		inc    %ecx
	jump_214f7:
		mov    0x130(%esp),%eax
		cmp    %ax,%cx
		jl     jump_214ac
		mov    %eax,%edx
		add    $0x2,%edx
		mov    0x134(%esp),%ebx
		mov    %edx,0x130(%esp)
		test   %bx,%bx
		je     jump_21531
		movswl %di,%eax
		cmpb   $0x2,0x120(%esp,%eax,1)
		jle    jump_21545
		incb   0x121(%esp,%eax,1)
		jmp    jump_21545
	jump_21531:
		movswl %di,%eax
		cmpb   $0x5,0x120(%esp,%eax,1)
		jge    jump_21545
		decb   0x121(%esp,%eax,1)
	jump_21545:
		inc    %edi
		cmp    $0x4,%di
		jl     jump_214a8
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		incw   0x128(%esp)
		mov    0x126(%esp),%ebx
		sar    $0x10,%ebx
		mov    $0x6,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_21599
		lea    (%ebx,%esi,1),%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		and    $0xffff,%eax
		call   func_1033b
	jump_21599:
		mov    0x126(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_215bd
		mov    $0x32,%eax
		call   func_4f4cd
	jump_215bd:
		cmpw   $0x0,0x134(%esp)
		je     jump_215e0
		movsbw 0x123(%esp),%ax
		cmp    0x12c(%esp),%ax
		jg     jump_215ee
		jmp    jump_21461
	jump_215e0:
		cmpb   $0x0,0x123(%esp)
		jne    jump_21461
	jump_215ee:
		call   func_1ffcd
		add    $0x138,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_215fe:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x184,%esp
		mov    %eax,%ebx
		mov    $0x1d,%ecx
		mov    %esp,%edi
		mov    $data_1fc42,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x1d,%ecx
		lea    0x74(%esp),%edi
		mov    $data_1fcb6,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		test   %dl,%dl
		jne    jump_21652
		mov    $data_7717a,%eax
		mov    $0xd,%esi
		mov    $0x1,%edi
		call   func_1fea4
		mov    %si,0x180(%esp)
		mov    %edi,0x17c(%esp)
		jmp    jump_21672
	jump_21652:
		mov    $data_77183,%eax
		mov    $0x7,%edx
		call   func_1fea4
		xor    %ecx,%ecx
		mov    %dx,0x180(%esp)
		mov    %ecx,0x17c(%esp)
	jump_21672:
		mov    $0x5,%edx
		mov    %ebx,%eax
		call   func_200de
		mov    $0x2,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_2168a:
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		imul   $0x1d,%eax,%eax
		movswl %cx,%esi
		add    %esi,%eax
		movsbw (%esp,%eax,1),%dx
		imul   $0x18,%edx,%edx
		movsbl (%ebx),%eax
		call   func_10971
		add    %edx,%eax
		add    $0xc,%eax
		mov    %ax,0xe8(%esp,%esi,2)
		mov    0x60(%ebx),%eax
		sar    $0x18,%eax
		imul   $0x1d,%eax,%eax
		mov    %esi,%edx
		add    %eax,%esi
		movsbw 0x74(%esp,%esi,1),%ax
		mov    %eax,%esi
		movsbl 0x1(%ebx),%eax
		shl    $0x4,%esi
		call   func_10988
		add    %esi,%eax
		add    $0x4,%eax
		inc    %ecx
		mov    %ax,0x124(%esp,%edx,2)
		cmp    $0x1d,%cx
		jl     jump_2168a
		mov    $0xffffffff,%ecx
		mov    $0x7,%ebx
		xor    %eax,%eax
	jump_216fa:
		cmpw   $0x0,0x17c(%esp)
		je     jump_21712
		movswl %ax,%edx
		mov    %cx,0x160(%esp,%edx,2)
		jmp    jump_2171d
	jump_21712:
		movswl %ax,%edx
		mov    %bx,0x160(%esp,%edx,2)
	jump_2171d:
		inc    %eax
		cmp    $0xa,%ax
		jl     jump_216fa
		xor    %eax,%eax
		mov    $data_f0daa,%ebp
		mov    %ax,0x178(%esp)
	jump_21733:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x17c(%esp),%esi
		call   func_10aeb
		call   func_12bee
		test   %si,%si
		je     jump_21764
		incw   0x160(%esp)
		jmp    jump_2176c
	jump_21764:
		decw   0x160(%esp)
	jump_2176c:
		xor    %esi,%esi
	jump_2176e:
		mov    0x160(%esp),%edx
		test   %dx,%dx
		jl     jump_217af
		cmp    0x180(%esp),%dx
		jge    jump_217af
		mov    0x15e(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0xc,%ebx,%ebx
		movswl %si,%eax
		mov    0x122(%esp,%eax,2),%edx
		mov    0xe6(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_217af:
		inc    %esi
		cmp    $0x2,%si
		jl     jump_2176e
		cmpw   $0x0,0x17c(%esp)
		je     jump_217d6
		cmpw   $0x1,0x160(%esp)
		jle    jump_217e9
		incw   0x162(%esp)
		jmp    jump_217e9
	jump_217d6:
		cmpw   $0x5,0x160(%esp)
		jge    jump_217e9
		decw   0x162(%esp)
	jump_217e9:
		mov    $0x1,%edi
	jump_217ee:
		xor    %ecx,%ecx
	jump_217f0:
		movswl %di,%eax
		add    %eax,%eax
		mov    0x160(%esp,%eax,1),%dx
		test   %dx,%dx
		jl     jump_21837
		cmp    0x180(%esp),%dx
		jge    jump_21837
		mov    0x15e(%esp,%eax,1),%ebx
		sar    $0x10,%ebx
		imul   $0xc,%ebx,%ebx
		movswl %si,%eax
		mov    0x122(%esp,%eax,2),%edx
		mov    0xe6(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_21837:
		inc    %ecx
		inc    %esi
		cmp    $0x3,%cx
		jl     jump_217f0
		cmpw   $0x0,0x17c(%esp)
		je     jump_21864
		movswl %di,%eax
		add    %eax,%eax
		cmpw   $0x1,0x160(%esp,%eax,1)
		jle    jump_2187c
		incw   0x162(%esp,%eax,1)
		jmp    jump_2187c
	jump_21864:
		movswl %di,%eax
		add    %eax,%eax
		cmpw   $0x5,0x160(%esp,%eax,1)
		jge    jump_2187c
		decw   0x162(%esp,%eax,1)
	jump_2187c:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_217ee
		mov    0x178(%esp),%ecx
		call   func_454d5
		inc    %ecx
		call   func_5e9e8
		mov    %cx,0x178(%esp)
		call   func_499e4
		mov    0x176(%esp),%ebx
		mov    0x17e(%esp),%esi
		sar    $0x10,%ebx
		sar    $0x10,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_218e0
		lea    0x9(%ebx),%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		and    $0xffff,%eax
		call   func_1033b
	jump_218e0:
		mov    0x176(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_21904
		mov    $0x32,%eax
		call   func_4f4cd
	jump_21904:
		cmpw   $0x0,0x17c(%esp)
		je     jump_21925
		mov    0x172(%esp),%eax
		cmp    0x180(%esp),%ax
		jg     jump_21934
		jmp    jump_21733
	jump_21925:
		cmpw   $0x0,0x172(%esp)
		jne    jump_21733
	jump_21934:
		call   func_1ffcd
		add    $0x184,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_21944:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		push   %eax
		push   %edx
		xor    %edx,%edx
		mov    $0x1,%eax
		mov    %dx,0x14(%esp)
		movswl %bx,%edx
		call   func_44d6e
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    $data_d66a8,%edx
		shl    $0x2,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0xc(%esp)
		mov    0x3(%edx),%al
		mov    (%edx),%dl
		mov    %ax,0x10(%esp)
		cmp    $0x1,%dl
		jbe    jump_21993
		movw   $0xc,0x14(%esp)
	jump_21993:
		mov    $0x7,%eax
		mov    0x4(%esp),%esi
		mov    0x14(%esp),%edi
		call   func_1033b
		xor    %ecx,%ecx
		add    %edi,%esi
	jump_219a9:
		movswl %cx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    -0x2(%esp),%edx
		movswl %si,%eax
		sar    $0x10,%edx
		add    $data_f0daa,%ebx
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0x9,%cx
		jl     jump_219a9
		movw   $0x1,0x1c(%esp)
		mov    $0x32,%eax
		call   func_4f4cd
		mov    (%esp),%eax
		xor    %edx,%edx
		sub    $0xc,%eax
		mov    %dx,0x18(%esp)
		mov    %eax,0x24(%esp)
		jmp    jump_21bac
	jump_21a12:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0xe(%esp),%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %eax
		cmp    %eax,%edx
		jne    jump_21a42
		mov    $data_f0dfe,%eax
		jmp    jump_21a59
	jump_21a42:
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x9,%edx
		imul   $0xc,%edx,%eax
		add    $data_f0daa,%eax
	jump_21a59:
		mov    -0x2(%esp),%ebp
		mov    0x2(%esp),%ecx
		mov    0x12(%esp),%esi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebp
		mov    0x2(%eax),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %ecx,%eax
		add    %ebp,%edx
		add    %esi,%eax
		call   func_5f29d
		mov    0xc(%esp),%eax
		mov    0x24(%esp),%edi
		movsbw 0x5(%eax),%ax
		add    %edi,%eax
		mov    0xc(%esp),%edi
		xor    %edx,%edx
		mov    0x3(%edi),%dl
		mov    0x1c(%esp),%edi
		add    %edx,%eax
		sub    %edi,%eax
		movswl %ax,%edx
		mov    0xc(%esp),%eax
		mov    %ecx,0x8(%esp)
		mov    0x1a(%esp),%ecx
		movsbw 0x4(%eax),%ax
		mov    0xc(%esp),%ebx
		mov    %eax,0x28(%esp)
		mov    0x4(%esp),%eax
		mov    0x28(%esp),%edi
		sar    $0x10,%ecx
		add    %edi,%eax
		mov    0x9(%ebx),%ebx
		cwtl
		call   func_5f4af
		mov    0xe(%esp),%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %eax
		cmp    %eax,%edx
		je     jump_21b8e
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xe,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%edi
		add    %edx,%edi
		mov    0x4(%edi),%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    0x8(%esp),%eax
		mov    0x8(%edi),%ebx
		add    %esi,%eax
		call   func_5f29d
		mov    0x4(%esp),%eax
		mov    (%esp),%esi
		mov    %ax,0x20(%esp)
		add    0x6(%edi),%si
		xor    %ecx,%ecx
		sub    $0x8,%esi
	jump_21b3b:
		mov    0x16(%esp),%edx
		sar    $0x10,%edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x13,%edx
		imul   $0xc,%edx,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		movswl %si,%edi
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		add    %edi,%edx
		mov    0x2(%eax),%edi
		mov    0x1e(%esp),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		add    %eax,%edi
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		inc    %ecx
		add    %edi,%eax
		sub    $0x10,%esi
		call   func_5f29d
		cmp    $0x8,%cx
		jl     jump_21b3b
	jump_21b8e:
		call   func_5e9e8
		call   func_499e4
		mov    0x1c(%esp),%edx
		mov    0x18(%esp),%ebx
		inc    %edx
		inc    %ebx
		mov    %dx,0x1c(%esp)
		mov    %bx,0x18(%esp)
	jump_21bac:
		mov    0x18(%esp),%eax
		cmp    0x10(%esp),%ax
		jl     jump_21a12
		mov    $0x1e,%eax
		call   func_1033b
		call   func_499e4
		mov    $0x33,%eax
		call   func_4f4cd
		call   func_284a3
		xor    %eax,%eax
		call   func_44d6e
		add    $0x2c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_21be8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    $0xc7,%edx
		lea    0x20(%esp),%edi
		mov    $0x5a,%ecx
		mov    $data_1fd2a,%esi
		xor    %eax,%eax
		mov    %dx,0x30(%esp)
		mov    $0x32,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_61147
		mov    $data_77190,%eax
		mov    $data_12824c,%ebx
		call   func_1fea4
		mov    $0x5,%eax
		mov    $0x100,%edx
		call   func_1033b
		xor    %eax,%eax
		mov    $0x50,%esi
		call   func_5fa2c
		mov    $0x32,%eax
		mov    $data_f0daa,%edi
		call   func_4f4cd
	jump_21c53:
		mov    0x2e(%esp),%ecx
		sar    $0x10,%ecx
		cmp    $0xffffff9c,%ecx
		jle    jump_21ca1
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    $0x2d,%eax
		mov    %ecx,%edx
		mov    0x8(%edi),%ebx
		call   func_5f305
		mov    0x30(%esp),%ebx
		sub    $0xf,%ebx
		call   func_5e9e8
		mov    %bx,0x30(%esp)
	jump_21c95:
		call   func_10364
		test   %ax,%ax
		je     jump_21c95
		jmp    jump_21c53
	jump_21ca1:
		mov    $0x64,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fa2c
		xor    %ebx,%ebx
	jump_21cb9:
		mov    $0x91,%eax
		call   func_499bd
		movswl %bx,%edx
		add    $0x28,%eax
		mov    %ax,(%esp,%edx,2)
		mov    $0x118,%eax
		call   func_499bd
		add    $0x14,%eax
		inc    %ebx
		mov    %ax,0x10(%esp,%edx,2)
		cmp    $0x7,%bx
		jl     jump_21cb9
		mov    $0x6,%eax
		call   func_1033b
		mov    $0x91,%ebp
	jump_21cf9:
		test   %si,%si
		jle    jump_21de8
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_454b3
	jump_21d1a:
		movswl %cx,%edx
		add    %edx,%edx
		mov    0x20(%esp,%edx,1),%ax
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x20(%esp,%edx,1)
		cmp    $0x6,%ax
		jne    jump_21d7b
		xor    %edi,%edi
		mov    %ebp,%eax
		mov    %di,0x20(%esp,%edx,1)
		call   func_499bd
		add    $0x28,%eax
		mov    %ax,(%esp,%edx,1)
		mov    $0x118,%eax
		call   func_499bd
		add    $0x14,%eax
		dec    %esi
		mov    %ax,0x10(%esp,%edx,1)
		movswl %si,%edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_21d7b
		mov    $0x33,%eax
		call   func_4f4cd
	jump_21d7b:
		cmpw   $0x0,data_ba838
		jne    jump_21d90
		movw   $0xfffa,data_ba838
		jmp    jump_21d99
	jump_21d90:
		xor    %edx,%edx
		mov    %dx,data_ba838
	jump_21d99:
		movswl %cx,%edx
		mov    0x1e(%esp,%edx,2),%ebx
		sar    $0x10,%ebx
		inc    %ebx
		imul   $0xc,%ebx,%ebx
		mov    -0x2(%esp,%edx,2),%eax
		mov    0xe(%esp,%edx,2),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		add    $data_f0daa,%ebx
		inc    %ecx
		call   func_1fffe
		cmp    $0x7,%cx
		jl     jump_21d1a
		call   func_454d5
		call   func_5e9e8
	jump_21dd9:
		call   func_10364
		test   %ax,%ax
		je     jump_21dd9
		jmp    jump_21cf9
	jump_21de8:
		call   func_1ffcd
		call   func_61115
		mov    $0xc,%ecx
		xor    %esi,%esi
		mov    %cx,data_7001c
		mov    %si,data_ba838
		call   func_45559
		add    $0x34,%esp
	jump_21e0f:
		pop    %ebp
	jump_21e10:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_21e16:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x324,%esp
		lea    0x300(%esp),%edi
		mov    $data_1fd38,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		lea    0x310(%esp),%edi
		mov    $data_1fd3e,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		lea    0x308(%esp),%edi
		mov    $data_1fd44,%esi
		movswl %dx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		lea    0x318(%esp),%edi
		mov    $data_1fd4a,%esi
		cwtl
		mov    %ebx,0x320(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1124a
		mov    $data_7719d,%eax
		mov    %esp,%ebx
		call   func_1fea4
		mov    $0x5,%eax
		mov    $0x100,%edx
		call   func_1033b
		xor    %eax,%eax
		call   func_5f945
		mov    $0x32,%ebp
	jump_21e96:
		cmpw   $0x15,0x320(%esp)
		jge    jump_22119
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		xor    %eax,%eax
	jump_21ebd:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    (%esp,%ebx,1),%dl
		cmp    $0x3e,%dl
		jae    jump_21ed4
		mov    %dl,%cl
		inc    %cl
		mov    %cl,(%esp,%ebx,1)
		jmp    jump_21edc
	jump_21ed4:
		mov    %dl,%dh
		sub    $0xa,%dh
		mov    %dh,(%esp,%ebx,1)
	jump_21edc:
		inc    %eax
		cmp    $0x100,%ax
		jl     jump_21ebd
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %esi,%esi
	jump_21ef3:
		movswl %si,%ebx
		add    %ebx,%ebx
		cmpw   $0x0,0x308(%esp,%ebx,1)
		jge    jump_21f4c
		movw   $0x64,0x308(%esp,%ebx,1)
		mov    $0x6e,%eax
		call   func_499bd
		neg    %eax
		sub    $0x1e,%eax
		mov    %ax,0x310(%esp,%ebx,1)
		mov    $0x12c,%eax
		xor    %edx,%edx
		call   func_499bd
		add    $0xdc,%eax
		mov    %dx,0x318(%esp,%ebx,1)
		mov    %ax,0x300(%esp,%ebx,1)
		incl   0x320(%esp)
	jump_21f4c:
		movswl %si,%ebx
		add    %ebx,%ebx
		cmpw   $0xe,0x308(%esp,%ebx,1)
		jge    jump_2204a
		mov    0x306(%esp,%ebx,1),%edx
		sar    $0x10,%edx
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_21f85
		movw   $0xfffa,data_ba838
		jmp    jump_21f8e
	jump_21f85:
		xor    %edi,%edi
		mov    %di,data_ba838
	jump_21f8e:
		movswl %si,%ebx
		add    %ebx,%ebx
		mov    0x306(%esp,%ebx,1),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x7,%edx
		sub    %eax,%edx
		imul   $0xc,%edx,%eax
		mov    0x30e(%esp,%ebx,1),%edx
		sar    $0x10,%edx
		add    $data_f0daa,%eax
		cmp    $0xffffffce,%edx
		jle    jump_21ffd
		cmpw   $0xfa,0x310(%esp,%ebx,1)
		jge    jump_21ffd
		push   %ebp
		mov    0x8(%eax),%edi
		mov    0x4(%eax),%ecx
		mov    0x302(%esp,%ebx,1),%ebx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		sar    $0x10,%eax
		sub    $0xa,%edx
		add    %ebx,%eax
		mov    %ebp,%ecx
		sub    $0xa,%eax
		mov    %edi,%ebx
		call   func_5f570
	jump_21ffd:
		movswl %si,%ebx
		add    %ebx,%ebx
		mov    0x308(%esp,%ebx,1),%di
		dec    %edi
		mov    0x318(%esp,%ebx,1),%ax
		mov    %di,0x308(%esp,%ebx,1)
		cmp    $0x4,%ax
		jge    jump_220fa
		mov    0x306(%esp,%ebx,1),%edx
		sar    $0x10,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_220fa
		mov    %ebp,%eax
		jmp    jump_220ed
	jump_2204a:
		mov    0x306(%esp,%ebx,1),%edx
		sar    $0x10,%edx
		mov    $0x5,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x3,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		imul   $0xc,%edx,%edx
		mov    0x310(%esp,%ebx,1),%di
		add    $0xa,%edi
		mov    %di,0x310(%esp,%ebx,1)
		mov    $data_f0daa,%ecx
		mov    0x300(%esp,%ebx,1),%ax
		add    %edx,%ecx
		mov    0x30e(%esp,%ebx,1),%edx
		sub    $0xc,%eax
		sar    $0x10,%edx
		mov    %ax,0x300(%esp,%ebx,1)
		cmp    $0xffffffce,%edx
		jle    jump_220c3
		cmp    $0xc8,%di
		jge    jump_220c3
		mov    0x2fe(%esp,%ebx,1),%eax
		sar    $0x10,%eax
		mov    %ecx,%ebx
		call   func_1fffe
	jump_220c3:
		movswl %si,%ebx
		add    %ebx,%ebx
		mov    0x308(%esp,%ebx,1),%ax
		sub    $0x5,%eax
		mov    0x318(%esp,%ebx,1),%dx
		mov    %ax,0x308(%esp,%ebx,1)
		test   %dx,%dx
		jne    jump_220fa
		mov    $0x33,%eax
	jump_220ed:
		call   func_4f4cd
		incw   0x318(%esp,%ebx,1)
	jump_220fa:
		inc    %esi
		cmp    $0x3,%si
		jl     jump_21ef3
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_21e96
	jump_22119:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		call   func_1ffcd
		xor    %ecx,%ecx
		mov    $0xc,%ebx
		mov    %cx,data_ba838
		mov    %bx,data_7001c
		add    $0x324,%esp
		jmp    jump_27994

vtable_22152:
		.long   func_22214
		.long   func_2221e
		.long   func_22216
		.long   func_2221c

vtable_22162:
		.long   func_22294
		.long   func_222c0
		.long   func_222e4
		.long   func_2230c


/*----------------------------------------------------------------*/
func_22172:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		push   %eax
		push   %edx
		mov    %cl,0x38(%esp)
		lea    0x8(%esp),%edi
		mov    $data_1fd50,%esi
		mov    $data_771a7,%eax
		mov    $0x3,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    0x4(%esp),%eax
		call   func_200de
		mov    0x4(%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x34(%esp)
		mov    0x4(%esp),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    %ax,0x24(%esp)
		mov    -0x2(%esp),%eax
		movswl %bx,%edx
		sar    $0x10,%eax
		lea    0x18(%esp),%ebx
		call   func_11db2
		lea    0x1c(%esp),%edx
		call   func_135eb
		xor    %edx,%edx
		mov    %edx,0x30(%esp)
		mov    %edx,0x28(%esp)
		mov    0x4(%esp),%edx
		movsbw %cl,%ax
		mov    0x63(%edx),%dl
		add    $0x3,%eax
		cmp    $0x3,%dl
		ja     jump_22222
		and    $0xff,%edx
		jmp    *vtable_22152(,%edx,4)


/*----------------------------------------------------------------*/
func_22214:
/*----------------------------------------------------------------*/
		neg    %eax


/*----------------------------------------------------------------*/
func_22216:
/*----------------------------------------------------------------*/
		mov    %eax,0x30(%esp)
		jmp    jump_22222


/*----------------------------------------------------------------*/
func_2221c:
/*----------------------------------------------------------------*/
		neg    %eax


/*----------------------------------------------------------------*/
func_2221e:
/*----------------------------------------------------------------*/
		mov    %eax,0x28(%esp)
	jump_22222:
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x5,%eax
		call   func_1033b
	jump_22236:
		mov    0x1a(%esp),%eax
		mov    0x32(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x16(%esp),%edx
		mov    %eax,%esi
		mov    0x22(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    0x4(%esp),%eax
		mov    0x63(%eax),%al
		cmp    $0x3,%al
		ja     jump_22333
		xor    %ebx,%ebx
		mov    0x34(%esp),%edx
		mov    %al,%bl
		mov    0x24(%esp),%eax
		add    %esi,%edx
		add    %ecx,%eax
		jmp    *vtable_22162(,%ebx,4)


/*----------------------------------------------------------------*/
func_22294:
/*----------------------------------------------------------------*/
		mov    0x35(%esp),%eax
		sar    $0x18,%eax
		shl    $0x2,%eax
		add    $0x3,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebp
		add    %eax,%ebp
		mov    0x24(%esp),%eax
		add    $0x3,%eax
		mov    %dx,0x34(%esp)
		mov    %ax,0x24(%esp)
		jmp    jump_22333


/*----------------------------------------------------------------*/
func_222c0:
/*----------------------------------------------------------------*/
		mov    0x35(%esp),%edx
		sar    $0x18,%edx
		imul   $0x30,%edx,%edx
		mov    0x34(%esp),%edi
		mov    $data_f0daa,%ebp
		sub    $0x3,%edi
		mov    %ax,0x24(%esp)
		mov    %di,0x34(%esp)
		add    %edx,%ebp
		jmp    jump_22333


/*----------------------------------------------------------------*/
func_222e4:
/*----------------------------------------------------------------*/
		mov    0x35(%esp),%eax
		sar    $0x18,%eax
		shl    $0x2,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    0x24(%esp),%esi
		mov    $data_f0daa,%ebp
		sub    $0x3,%esi
		mov    %dx,0x34(%esp)
		mov    %si,0x24(%esp)
		add    %eax,%ebp
		jmp    jump_22333


/*----------------------------------------------------------------*/
func_2230c:
/*----------------------------------------------------------------*/
		mov    0x35(%esp),%edx
		sar    $0x18,%edx
		shl    $0x2,%edx
		add    $0x2,%edx
		imul   $0xc,%edx,%ebp
		mov    0x34(%esp),%ecx
		add    $0x3,%ecx
		mov    %ax,0x24(%esp)
		mov    %cx,0x34(%esp)
		add    $data_f0daa,%ebp
	jump_22333:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ebp,%ebx
		call   func_454b3
		mov    0x22(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		mov    0x30(%esp),%eax
		mov    %eax,0x2c(%esp)
		imul   $0x0,%eax,%edi
		mov    0x24(%esp),%ebx
		shl    $0x2,%eax
		add    %ebx,%edi
		add    %eax,%edi
		mov    0x28(%esp),%eax
		mov    %eax,0x20(%esp)
		imul   $0x0,%eax,%esi
		imul   $0x5,%eax,%eax
		add    0x34(%esp),%esi
		xor    %ecx,%ecx
		add    %eax,%esi
	jump_2238a:
		movswl %cx,%edx
		cmpw   $0x0,0x8(%esp,%edx,2)
		jne    jump_223bb
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x8,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebp
		movswl %si,%eax
		add    %edx,%ebp
		movswl %di,%edx
		mov    %ebp,%ebx
		call   func_1fffe
	jump_223bb:
		movswl %cx,%ebx
		mov    0x6(%esp,%ebx,2),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		movl   $0x3,0x14(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x14(%esp)
		inc    %ecx
		mov    0x2c(%esp),%eax
		mov    %dx,0x8(%esp,%ebx,2)
		mov    0x20(%esp),%edx
		add    %eax,%edi
		add    %edx,%esi
		cmp    $0x5,%cx
		jl     jump_2238a
		call   func_5e9e8
		call   func_499e4
		mov    0x34(%esp),%eax
		cmp    0x1c(%esp),%ax
		jne    jump_22411
		mov    0x24(%esp),%eax
		cmp    0x18(%esp),%ax
		je     jump_22470
	jump_22411:
		mov    0x4(%esp),%eax
		mov    0x63(%eax),%dl
		test   %dl,%dl
		je     jump_22421
		cmp    $0x2,%dl
		jne    jump_2243d
	jump_22421:
		mov    0x22(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jle    jump_22470
	jump_2243d:
		mov    0x4(%esp),%eax
		mov    0x63(%eax),%bl
		cmp    $0x1,%bl
		je     jump_22452
		cmp    $0x3,%bl
		jne    jump_22236
	jump_22452:
		mov    0x32(%esp),%eax
		mov    0x1a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jg     jump_22236
	jump_22470:
		call   func_1ffcd
		mov    $0x33,%eax
		call   func_4f4cd
		add    $0x3c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_22486:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4c,%esp
		mov    %eax,%ebp
		mov    %dx,0x48(%esp)
		mov    %bx,0x44(%esp)
		lea    0x30(%esp),%edi
		mov    $data_1fd5a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x20(%esp),%edi
		mov    $data_1fd6a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_1fd7a,%esi
		mov    $data_771b3,%eax
		mov    $0x3,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    %ebp,%eax
		call   func_200de
		mov    0x42(%esp),%edx
		mov    0x46(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x44(%esp),%ebx
		call   func_11db2
		lea    0x48(%esp),%edx
		call   func_135eb
		mov    $0x5,%eax
		xor    %esi,%esi
		call   func_1033b
		mov    $0x3,%ebp
	jump_22508:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_454b3
	jump_22520:
		cmp    $0xa,%si
		jle    jump_22556
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		add    $0x3,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    0x42(%esp),%edx
		add    %eax,%ebx
		mov    0x46(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
	jump_22556:
		movswl %cx,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		imul   $0xc,%edx,%edx
		lea    (%ebx,%ebx,1),%eax
		mov    (%esp,%eax,1),%di
		add    $data_f0daa,%edx
		test   %di,%di
		jle    jump_225bb
		mov    -0x2(%esp,%eax,1),%eax
		mov    0x1d(%esp,%ebx,1),%edi
		sar    $0x10,%eax
		sar    $0x18,%edi
		imul   %eax,%edi
		mov    0x2d(%esp,%ebx,1),%ebx
		sar    $0x18,%ebx
		imul   %ebx,%eax
		mov    0x8(%edx),%edx
		mov    %edi,0x40(%esp)
		mov    0x42(%esp),%edi
		mov    0x46(%esp),%ebx
		sar    $0x10,%edi
		sar    $0x10,%ebx
		sub    $0x4,%edi
		sub    %eax,%ebx
		sub    0x40(%esp),%edi
		mov    %ebx,%eax
		mov    %edx,%ebx
		mov    %edi,%edx
		call   func_5ee51
	jump_225bb:
		movswl %cx,%eax
		add    %eax,%eax
		mov    (%esp,%eax,1),%dx
		sub    $0x2,%edx
		mov    %dx,(%esp,%eax,1)
		cmp    $0x2,%dx
		jge    jump_225e5
		cmp    $0x28,%si
		jge    jump_225df
		movw   $0x10,(%esp,%eax,1)
		jmp    jump_225e5
	jump_225df:
		movw   $0xd8f0,(%esp,%eax,1)
	jump_225e5:
		inc    %ecx
		cmp    $0x10,%cx
		jl     jump_22520
		call   func_5e9e8
		call   func_499e4
		cmp    $0x5,%si
		jne    jump_2260a
		mov    $0x32,%eax
		call   func_4f4cd
	jump_2260a:
		inc    %esi
		cmp    $0x32,%si
		jl     jump_22508
		call   func_1ffcd
		mov    $0x33,%eax
		call   func_4f4cd
	jump_22624:
		add    $0x4c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2262c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x28,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    %cl,0x30(%esp)
		mov    0x2(%esp),%ebx
		mov    0x6(%esp),%esi
		sar    $0x10,%ebx
		sar    $0x10,%esi
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_1124a
		mov    %esi,%eax
		call   func_10971
		add    $0xc,%eax
		lea    0xc(%esp),%edi
		mov    %ax,0x8(%esp)
		mov    %ebx,%eax
		lea    0x2c(%esp),%edx
		call   func_10988
		sub    $0x2,%eax
		mov    $data_77156,%esi
		mov    %ax,0x4(%esp)
		mov    -0x2(%esp),%eax
		mov    $0xa,%ebx
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		lea    0x2c(%esp),%edx
		lea    0xc(%esp),%eax
		call   w_dos_strcat
		mov    $data_7715c,%edx
		lea    0xc(%esp),%eax
		call   w_dos_strcat
		lea    0xc(%esp),%eax
		call   func_1fea4
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0xa,%eax
		xor    %ecx,%ecx
		call   func_1033b
		jmp    jump_22746
	jump_226cf:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		cmpb   $0x1,0x30(%esp)
		jne    jump_226f1
		call   func_12bee
	jump_226f1:
		xor    %ebx,%ebx
		movswl %cx,%edx
		mov    data_f0da8,%bx
		cmp    %ebx,%edx
		jl     jump_22708
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
	jump_22708:
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		mov    0x2(%esp),%eax
		mov    0x6(%esp),%esi
		mov    %edx,%ebx
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_1fffe
		cmpb   $0x0,0x30(%esp)
		jne    jump_22736
		call   func_12bee
	jump_22736:
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		inc    %ecx
	jump_22746:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x40(%esp),%dl
		mov    data_f0da8,%ax
		imul   %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     jump_226cf
		jmp    jump_20613


/*----------------------------------------------------------------*/
func_22767:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		push   %eax
		push   %edx
		mov    $0xa0,%edx
		mov    $data_771c0,%eax
		mov    -0x2(%esp),%esi
		mov    0x2(%esp),%ebx
		call   func_1fea4
		mov    %edx,0x3c(%esp)
		sar    $0x10,%esi
		sar    $0x10,%ebx
		mov    %esi,%edx
		mov    %ebx,%eax
		call   func_1124a
		mov    %ebx,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		mov    %esi,%eax
		call   func_10988
		mov    %eax,0x34(%esp)
		mov    %ax,(%esp)
		mov    $0x3,%eax
		call   func_1033b
		fild   0x38(%esp)
		fdivs  data_771cc
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fxch   %st(1)
		fmull  data_771d0
		fild   0x4(%esp)
		faddp  %st,%st(1)
		mov    0x38(%esp),%ebx
		call   func___CHP
		fistpl 0x30(%esp)
		fmull  data_771d0
		add    $0x14,%ebx
		mov    0x30(%esp),%eax
		fild   0x34(%esp)
		faddp  %st,%st(1)
		mov    %ax,0x14(%esp)
		call   func___CHP
		fistpl 0x30(%esp)
		mov    0x30(%esp),%eax
		mov    %ebx,0x38(%esp)
		mov    %ax,0x8(%esp)
		cmp    $0x280,%bx
		jl     jump_2282d
		xor    %esi,%esi
		mov    %esi,0x38(%esp)
	jump_2282d:
		mov    $0x1,%ebx
	jump_22832:
		movswl %bx,%edx
		mov    0x14(%esp),%eax
		mov    %ax,0x14(%esp,%edx,2)
		mov    0x8(%esp),%eax
		inc    %ebx
		mov    %ax,0x8(%esp,%edx,2)
		cmp    $0x6,%bx
		jl     jump_22832
		mov    $0x32,%eax
		mov    $data_f0daa,%ebp
		call   func_4f4cd
	jump_2285d:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x4,%ecx
		call   func_454b3
	jump_22878:
		movswl %cx,%eax
		mov    0x14(%esp,%eax,2),%dx
		mov    %dx,0x16(%esp,%eax,2)
		mov    0x8(%esp,%eax,2),%dx
		dec    %ecx
		mov    %dx,0xa(%esp,%eax,2)
		test   %cx,%cx
		jge    jump_22878
		fild   0x38(%esp)
		fdivs  data_771cc
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x3c(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x4(%esp)
		faddp  %st,%st(1)
		mov    0x38(%esp),%edi
		call   func___CHP
		fistpl 0x30(%esp)
		fmulp  %st,%st(1)
		add    $0x14,%edi
		mov    0x30(%esp),%eax
		fild   (%esp)
		faddp  %st,%st(1)
		mov    %ax,0x14(%esp)
		call   func___CHP
		fistpl 0x30(%esp)
		mov    0x30(%esp),%eax
		mov    %edi,0x38(%esp)
		mov    %ax,0x8(%esp)
		cmp    $0x280,%di
		jl     jump_228f8
		xor    %edx,%edx
		mov    %edx,0x38(%esp)
	jump_228f8:
		mov    $0x5,%ecx
	jump_228fd:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x12(%esp,%eax,1),%esi
		sar    $0x10,%esi
		cmp    $0xfffffffb,%esi
		jle    jump_22939
		cmpw   $0x140,0x14(%esp,%eax,1)
		jge    jump_22939
		mov    0x6(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xfffffffb,%edx
		jle    jump_22939
		cmpw   $0xc8,0x8(%esp,%eax,1)
		jge    jump_22939
		imul   $0xc,%ebx,%ebx
		mov    %esi,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_22939:
		dec    %ecx
		test   %cx,%cx
		jge    jump_228fd
		mov    0x3c(%esp),%ebx
		sub    $0x2,%ebx
		mov    %ebx,0x3c(%esp)
		test   %bx,%bx
		jge    jump_2295e
		xor    %eax,%eax
	jump_22951:
		add    $0x40,%eax
		cmp    $0x280,%ax
		je     jump_2296d
		jmp    jump_22951
	jump_2295e:
		call   func_5e9e8
		call   func_499e4
		jmp    jump_2285d
	jump_2296d:
		mov    $0x1e,%eax
		call   func_1033b
		xor    %ecx,%ecx
	jump_22979:
		movswl %cx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0x6,%cx
		jl     jump_22979
		call   func_1ffcd
		add    $0x40,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_229cc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%edi
		mov    %dx,0x4(%esp)
		mov    0x2(%esp),%ebx
		movswl %ax,%esi
		sar    $0x10,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   func_1124a
		mov    data_ba83c,%ax
		mov    %ax,(%esp)
		mov    data_ba83e,%ax
		mov    %ax,0x8(%esp)
		mov    $data_771d8,%eax
		call   func_1fea4
		mov    $0xa,%eax
		call   func_1033b
		mov    %esi,%eax
		call   func_10971
		mov    %eax,%edi
		mov    %ebx,%eax
		call   func_10988
		add    $0x8,%eax
		xor    %ecx,%ecx
		mov    %ax,0x4(%esp)
		mov    $0x32,%eax
		add    $0xc,%edi
		call   func_4f4cd
	jump_22a3f:
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		cmp    $0x7,%cx
		jle    jump_22a7b
		mov    %ecx,%eax
		xor    %ch,%ah
		and    $0x1,%al
		cwtl
		add    $0x7,%eax
		imul   $0xc,%eax,%eax
		mov    0x2(%esp),%edx
		mov    $data_f0daa,%ebx
		sar    $0x10,%edx
		add    %eax,%ebx
		movswl %di,%eax
		call   func_1fffe
	jump_22a7b:
		cmp    $0xa,%cx
		jle    jump_22aa6
		movswl %cx,%edx
		call   func_12bee
		sub    $0x8,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x9,%edx
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		jmp    jump_22ab4
	jump_22aa6:
		movswl %cx,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edx
		add    %eax,%edx
	jump_22ab4:
		mov    0x2(%esp),%esi
		movswl %di,%eax
		sar    $0x10,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		call   func_1fffe
		cmp    $0xa,%cx
		jg     jump_22ad2
		call   func_12bee
	jump_22ad2:
		call   func_454d5
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x19,%cx
		jl     jump_22a3f
		call   func_1ffcd
	jump_22af1:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_22af9:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xd4,%esp
		mov    %bl,0xd0(%esp)
		movswl %dx,%edx
		cwtl
		call   func_1124a
		xor    %edi,%edi
		cmp    $0x1,%bl
		jb     jump_22b23
		jbe    jump_22b2e
		cmp    $0x2,%bl
		je     jump_22b35
		jmp    jump_22b3f
	jump_22b23:
		test   %bl,%bl
		jne    jump_22b3f
		mov    $data_771e5,%eax
		jmp    jump_22b3a
	jump_22b2e:
		mov    $data_771f1,%eax
		jmp    jump_22b3a
	jump_22b35:
		mov    $data_771fd,%eax
	jump_22b3a:
		call   func_1fea4
	jump_22b3f:
		mov    $0x5,%eax
		mov    $0x4,%ebp
		call   func_1033b
		xor    %esi,%esi
	jump_22b50:
		movswl %si,%ebx
		mov    $0xa,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		shl    $0x5,%ecx
		shl    $0x2,%edx
		add    %edx,%ecx
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebx,%ecx
		sar    $0x1f,%edx
		mov    %ax,(%esp,%ebx,2)
		mov    %ebx,%eax
		mov    $0xa,%ebx
		idiv   %ebx
		imul   $0x28,%eax,%eax
		inc    %esi
		mov    %ax,0x64(%esp,%ecx,2)
		cmp    $0x32,%si
		jl     jump_22b50
		mov    $0x3c,%eax
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    data_f0da8,%bx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $data_f0daa,%ebp
		mov    %ax,0xc8(%esp)
		mov    $0x32,%eax
		xor    %edx,%edx
		call   func_4f4cd
		mov    %dx,0xcc(%esp)
	jump_22bcf:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0xca(%esp),%edx
		mov    0xc6(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_22c17
		xor    %eax,%eax
		mov    data_f0da8,%ax
		movswl %di,%edx
		sub    $0x2,%eax
		cmp    %eax,%edx
		je     jump_22c17
		inc    %edi
	jump_22c17:
		mov    0xca(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_22c46
		xor    %eax,%eax
		mov    0xd0(%esp),%al
		add    %eax,%eax
		neg    %eax
		mov    %ax,data_ba838
		jmp    jump_22c4f
	jump_22c46:
		xor    %esi,%esi
		mov    %si,data_ba838
	jump_22c4f:
		xor    %esi,%esi
	jump_22c51:
		movswl %di,%eax
		imul   $0xc,%eax,%eax
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    0x62(%esp,%ecx,1),%edx
		lea    (%eax,%ebp,1),%ebx
		mov    -0x2(%esp,%ecx,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		xor    %eax,%eax
		mov    0xd0(%esp),%al
		imul   $0x3,%eax,%eax
		mov    (%esp,%ecx,1),%dx
		add    $0x8,%eax
		add    %eax,%edx
		mov    %dx,(%esp,%ecx,1)
		cmp    $0x13f,%dx
		jle    jump_22c9a
		xor    %eax,%eax
		mov    %ax,(%esp,%ecx,1)
	jump_22c9a:
		xor    %eax,%eax
		mov    0xd0(%esp),%al
		imul   $0x3,%eax,%eax
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    0x64(%esp,%ecx,1),%dx
		add    $0x4,%eax
		add    %eax,%edx
		mov    %dx,0x64(%esp,%ecx,1)
		cmp    $0xbe,%dx
		jle    jump_22cca
		movw   $0xa,0x64(%esp,%ecx,1)
	jump_22cca:
		inc    %esi
		cmp    $0x32,%si
		jl     jump_22c51
		call   func_454d5
		mov    0xcc(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,0xcc(%esp)
		cmp    $0x3c,%bx
		jl     jump_22bcf
		xor    %edx,%edx
		call   func_1ffcd
		mov    %dx,data_ba838
		call   func_45559
		add    $0xd4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_22d18:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc4,%esp
		lea    0x9c(%esp),%edi
		mov    $0x28,%edx
		mov    $0x18,%eax
		mov    $data_1fd9a,%esi
		mov    %edx,0xc0(%esp)
		mov    $0x32,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_61147
		mov    $data_7720a,%eax
		mov    $0xc7,%ecx
		call   func_1fea4
		mov    $0x5,%eax
		mov    $data_f0daa,%edi
		call   func_1033b
	jump_22d6d:
		movswl %cx,%esi
		cmp    $0xffffff9c,%esi
		jle    jump_22da9
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    $0x2d,%eax
		mov    %esi,%edx
		mov    0x8(%edi),%ebx
		sub    $0xf,%ecx
		call   func_5f305
		call   func_5e9e8
		call   func_499e4
		jmp    jump_22d6d
	jump_22da9:
		xor    %ebx,%ebx
	jump_22dab:
		mov    $0x82,%eax
		call   func_499bd
		neg    %eax
		movswl %bx,%edx
		sub    $0x32,%eax
		mov    %ax,0xb4(%esp,%edx,2)
		mov    $0x118,%eax
		call   func_499bd
		add    $0x14,%eax
		inc    %ebx
		mov    %ax,0xa8(%esp,%edx,2)
		cmp    $0x5,%bx
		jl     jump_22dab
		mov    $0x3,%eax
		call   func_1033b
		mov    $0x82,%ebp
	jump_22df2:
		cmpw   $0x0,0xc0(%esp)
		jle    jump_23045
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_454b3
	jump_22e19:
		movswl %di,%eax
		mov    0x9c(%esp,%eax,2),%dx
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x9c(%esp,%eax,2)
		cmp    $0x14,%dx
		jne    jump_22eb6
		xor    %ebx,%ebx
	jump_22e3b:
		movswl %di,%eax
		lea    (%eax,%eax,1),%edx
		lea    (%eax,%eax,4),%esi
		movswl %bx,%eax
		mov    0xa8(%esp,%edx,1),%cx
		add    %esi,%eax
		add    $0xa,%ecx
		mov    %cx,0x34(%esp,%eax,2)
		mov    0xb4(%esp,%edx,1),%cx
		add    $0xa,%ecx
		mov    %cx,(%esp,%eax,2)
		mov    $0x1,%ecx
		add    %ecx,%ebx
		mov    %cx,0x68(%esp,%eax,2)
		cmp    $0x5,%bx
		jl     jump_22e3b
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %si,0x9c(%esp,%edx,1)
		call   func_499bd
		neg    %eax
		sub    $0x32,%eax
		mov    %ax,0xb4(%esp,%edx,1)
		mov    $0x118,%eax
		call   func_499bd
		add    $0x14,%eax
		mov    %ax,0xa8(%esp,%edx,1)
		sub    %ecx,0xc0(%esp)
	jump_22eb6:
		movswl %di,%eax
		addw   $0xa,0xb4(%esp,%eax,2)
		cmpw   $0x0,data_ba838
		jne    jump_22ed7
		movw   $0xfffa,data_ba838
		jmp    jump_22ee0
	jump_22ed7:
		xor    %ecx,%ecx
		mov    %cx,data_ba838
	jump_22ee0:
		movswl %di,%eax
		add    %eax,%eax
		mov    0xb2(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_22f14
		cmpw   $0xc8,0xb4(%esp,%eax,1)
		jge    jump_22f14
		mov    0xa6(%esp,%eax,1),%eax
		mov    $data_f0db6,%ebx
		sar    $0x10,%eax
		call   func_1fffe
	jump_22f14:
		inc    %edi
		cmp    $0x5,%di
		jl     jump_22e19
		xor    %ebx,%ebx
	jump_22f21:
		movswl %bx,%eax
		imul   $0xa,%eax,%eax
		cmpw   $0x0,0x68(%esp,%eax,1)
		jle    jump_22f34
		subw   $0xa,(%esp,%eax,1)
	jump_22f34:
		movswl %bx,%eax
		lea    (%eax,%eax,4),%eax
		add    %eax,%eax
		cmpw   $0x0,0x6a(%esp,%eax,1)
		jle    jump_22f5e
		mov    0x36(%esp,%eax,1),%dx
		mov    0x2(%esp,%eax,1),%cx
		sub    $0xa,%edx
		sub    $0xa,%ecx
		mov    %dx,0x36(%esp,%eax,1)
		mov    %cx,0x2(%esp,%eax,1)
	jump_22f5e:
		movswl %bx,%eax
		lea    (%eax,%eax,4),%eax
		add    %eax,%eax
		cmpw   $0x0,0x6c(%esp,%eax,1)
		jle    jump_22f88
		mov    0x38(%esp,%eax,1),%di
		mov    0x4(%esp,%eax,1),%dx
		add    $0xa,%edi
		sub    $0xa,%edx
		mov    %di,0x38(%esp,%eax,1)
		mov    %dx,0x4(%esp,%eax,1)
	jump_22f88:
		movswl %bx,%eax
		lea    (%eax,%eax,4),%eax
		add    %eax,%eax
		cmpw   $0x0,0x6e(%esp,%eax,1)
		jle    jump_22fb2
		mov    0x3a(%esp,%eax,1),%si
		mov    0x6(%esp,%eax,1),%di
		sub    $0xa,%esi
		add    $0xa,%edi
		mov    %si,0x3a(%esp,%eax,1)
		mov    %di,0x6(%esp,%eax,1)
	jump_22fb2:
		movswl %bx,%eax
		lea    (%eax,%eax,4),%eax
		add    %eax,%eax
		cmpw   $0x0,0x70(%esp,%eax,1)
		jle    jump_22fdc
		mov    0x3c(%esp,%eax,1),%cx
		mov    0x8(%esp,%eax,1),%si
		add    $0xa,%ecx
		add    $0xa,%esi
		mov    %cx,0x3c(%esp,%eax,1)
		mov    %si,0x8(%esp,%eax,1)
	jump_22fdc:
		inc    %ebx
		cmp    $0x5,%bx
		jl     jump_22f21
		xor    %ecx,%ecx
	jump_22fe9:
		movswl %cx,%esi
		mov    $0x5,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x2,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		lea    (%esi,%esi,1),%eax
		add    %edx,%ebx
		mov    -0x2(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_2302a
		cmpw   $0xc8,(%esp,%eax,1)
		jge    jump_2302a
		mov    0x32(%esp,%eax,1),%eax
		sar    $0x10,%eax
		call   func_1fffe
	jump_2302a:
		inc    %ecx
		cmp    $0x19,%cx
		jl     jump_22fe9
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_22df2
	jump_23045:
		call   func_1ffcd
		call   func_61115
		mov    $0xc,%ecx
		xor    %esi,%esi
		mov    %cx,data_7001c
		mov    %si,data_ba838
		call   func_45559
		add    $0xc4,%esp
		jmp    jump_21e0f


/*----------------------------------------------------------------*/
func_23074:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3cc,%esp
		mov    %eax,%ebx
		mov    $data_77217,%eax
		call   func_1fea4
		movswl %dx,%edx
		xor    %esi,%esi
		mov    $0x5,%eax
		xor    %ecx,%ecx
		call   func_1033b
		movswl %bx,%eax
		xor    %edi,%edi
		call   func_1124a
	jump_230a6:
		movswl %di,%edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_230bc
		add    $0x2,%esi
	jump_230bc:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		add    %esi,%ecx
		mov    $data_f0daa,%ebx
		mov    $0xab,%eax
		add    %edx,%ebx
		movswl %cx,%edx
		inc    %edi
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0x19,%di
		jl     jump_230a6
		mov    $0x32,%eax
		call   func_4f4cd
		xor    %edi,%edi
	jump_23117:
		movswl %di,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_2312d
		sub    $0x2,%esi
	jump_2312d:
		movswl %di,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		sub    %esi,%ecx
		test   %edx,%edx
		jne    jump_2314d
		movw   $0xfffc,data_ba838
		jmp    jump_23155
	jump_2314d:
		xor    %eax,%eax
		mov    %ax,data_ba838
	jump_23155:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    $0xab,%eax
		add    %edx,%ebx
		movswl %cx,%edx
		inc    %edi
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0xf,%di
		jl     jump_23117
		mov    $0x9c,%edx
		mov    $0xba,%ebx
		mov    $0xab,%esi
		mov    %cx,0x300(%esp)
		mov    %cx,0x302(%esp)
		mov    %ecx,%eax
		mov    %dx,0x35c(%esp)
		mov    %bx,0x35e(%esp)
		mov    %si,0x360(%esp)
		add    $0x14,%eax
		mov    $0x3,%ebx
		mov    %ax,0x304(%esp)
	jump_231f1:
		mov    $0x118,%eax
		call   func_499bd
		movswl %bx,%edx
		add    $0x3c,%eax
		mov    %ax,0x35c(%esp,%edx,2)
		mov    $0x32,%eax
		call   func_499bd
		add    %ecx,%eax
		sub    $0x19,%eax
		inc    %ebx
		mov    %ax,0x300(%esp,%edx,2)
		cmp    $0x1e,%bx
		jl     jump_231f1
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f945
		xor    %eax,%eax
	jump_23239:
		movswl %ax,%edi
		lea    (%edi,%edi,2),%edi
		mov    $data_12824f,%esi
		lea    (%esp,%edi,1),%edi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_23239
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		mov    $0xfffffff8,%ecx
		mov    $0x33,%eax
		xor    %ebx,%ebx
		call   func_4f4cd
		mov    %bx,0x3c8(%esp)
		mov    %ecx,0x3c4(%esp)
		mov    %bx,0x3c0(%esp)
		mov    $data_f0daa,%ebp
		jmp    jump_233b3
	jump_23296:
		call   func_5e943
		mov    0x3c6(%esp),%eax
		mov    %esp,%ecx
		sar    $0x10,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0xfe,%edx
		xor    %eax,%eax
		call   func_5fd1c
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x3be(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		addw   $0x3,0x3c8(%esp)
		mov    0x35c(%esp),%edi
		mov    0x35e(%esp),%eax
		sub    $0x2,%edi
		add    $0x2,%eax
		mov    %di,0x35c(%esp)
		mov    %ax,0x35e(%esp)
		test   %edx,%edx
		jne    jump_23320
		addl   $0x2,0x3c4(%esp)
	jump_23320:
		mov    0x3c0(%esp),%ebx
		inc    %ebx
		xor    %esi,%esi
		mov    %bx,0x3c0(%esp)
	jump_23332:
		movswl %si,%edx
		lea    (%edx,%edx,1),%ecx
		mov    0x3c4(%esp),%eax
		add    %ax,0x300(%esp,%ecx,1)
		cmp    $0x3,%si
		jge    jump_23352
		lea    0x4(%edx),%eax
		jmp    jump_2336b
	jump_23352:
		mov    0x2fe(%esp,%ecx,1),%edx
		sar    $0x10,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		lea    0xe(%edx),%eax
	jump_2336b:
		imul   $0xc,%eax,%eax
		add    %ebp,%eax
		movswl %si,%edx
		mov    %eax,%ebx
		mov    0x2fe(%esp,%edx,2),%edi
		mov    0x35a(%esp,%edx,2),%ecx
		sar    $0x10,%edi
		sar    $0x10,%ecx
		mov    %edi,%edx
		mov    %ecx,%eax
		inc    %esi
		call   func_1fffe
		cmp    $0x1e,%si
		jl     jump_23332
		mov    0x3c0(%esp),%ecx
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		mov    %cx,0x3c0(%esp)
	jump_233b3:
		cmpw   $0x1e,0x3c0(%esp)
		jl     jump_23296
		mov    0x35e(%esp),%edx
		mov    %dx,0x3bc(%esp)
		mov    0x360(%esp),%edx
		mov    0x35c(%esp),%eax
		mov    %edx,0x3b8(%esp)
		mov    %eax,%edx
		add    $0x8,%eax
		mov    %ax,0x35e(%esp)
		mov    0x3bc(%esp),%eax
		sub    $0x8,%eax
		mov    %ax,0x360(%esp)
		mov    0x3bc(%esp),%eax
		add    $0x8,%eax
		mov    %ax,0x362(%esp)
		mov    0x3b8(%esp),%eax
		sub    $0x8,%eax
		mov    %ax,0x364(%esp)
		mov    0x3b8(%esp),%eax
		sub    $0x8,%edx
		add    $0x8,%eax
		mov    %dx,0x35c(%esp)
		mov    %ax,0x366(%esp)
		mov    0x300(%esp),%eax
		mov    0x302(%esp),%edx
		mov    %eax,%ebx
		add    $0x8,%eax
		mov    %dx,0x3bc(%esp)
		mov    %ax,0x302(%esp)
		mov    0x3bc(%esp),%eax
		sub    $0x8,%eax
		mov    0x304(%esp),%edx
		mov    %ax,0x304(%esp)
		mov    0x3bc(%esp),%eax
		add    $0x8,%eax
		xor    %ecx,%ecx
		mov    %ax,0x306(%esp)
		mov    %edx,%eax
		mov    %edx,0x3b8(%esp)
		sub    $0x8,%eax
		mov    %ecx,0x3b8(%esp)
		mov    %ax,0x308(%esp)
		mov    %edx,%eax
		sub    $0x8,%ebx
		add    $0x8,%eax
		mov    %bx,0x300(%esp)
		mov    %ax,0x30a(%esp)
		mov    $data_f0daa,%ebp
	jump_234da:
		call   func_5e943
		mov    0x3c6(%esp),%eax
		mov    %esp,%ecx
		sar    $0x10,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0xfe,%edx
		xor    %eax,%eax
		call   func_5fd1c
		mov    0x3c8(%esp),%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x3,%ebx
		call   func_454b3
		mov    %bx,0x3c8(%esp)
		xor    %eax,%eax
	jump_23527:
		movswl %ax,%ecx
		mov    0x35c(%esp,%ecx,2),%dx
		mov    0x35e(%esp,%ecx,2),%bx
		sub    $0x2,%edx
		add    $0x2,%ebx
		mov    %dx,0x35c(%esp,%ecx,2)
		add    $0x2,%eax
		mov    %bx,0x35e(%esp,%ecx,2)
		cmp    $0x6,%ax
		jl     jump_23527
		mov    0x3ba(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_2357d
		addl   $0x2,0x3c4(%esp)
	jump_2357d:
		mov    0x3bc(%esp),%edi
		inc    %edi
		xor    %esi,%esi
		mov    %di,0x3bc(%esp)
	jump_2358f:
		movswl %si,%edx
		lea    (%edx,%edx,1),%ecx
		mov    0x3c4(%esp),%eax
		add    %ax,0x300(%esp,%ecx,1)
		cmp    $0x6,%si
		jge    jump_235af
		add    $0x7,%edx
		jmp    jump_235c8
	jump_235af:
		mov    0x2fe(%esp,%ecx,1),%edx
		sar    $0x10,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xe,%edx
	jump_235c8:
		imul   $0xc,%edx,%edx
		add    %ebp,%edx
		movswl %si,%ecx
		mov    %edx,%ebx
		mov    0x2fe(%esp,%ecx,2),%edi
		mov    0x35a(%esp,%ecx,2),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		inc    %esi
		call   func_1fffe
		cmp    $0x1e,%si
		jl     jump_2358f
		call   func_5e9e8
		call   func_499e4
		mov    0x3b8(%esp),%eax
		inc    %eax
		mov    %eax,0x3b8(%esp)
		cmp    $0x14,%ax
		jl     jump_234da
		xor    %ebx,%ebx
	jump_23619:
		mov    $0xfa,%eax
		call   func_499bd
		movswl %bx,%edx
		add    $0x28,%eax
		mov    %ax,0x35c(%esp,%edx,2)
		mov    $0x64,%eax
		call   func_499bd
		sub    $0x3c,%eax
		inc    %ebx
		mov    %ax,0x300(%esp,%edx,2)
		cmp    $0x2e,%bx
		jl     jump_23619
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
		xor    %edx,%edx
	jump_23669:
		movswl %dx,%eax
		mov    0x35c(%esp,%eax,2),%cx
		mov    0x35e(%esp,%eax,2),%di
		sub    $0x2,%ecx
		add    $0x2,%edi
		mov    %cx,0x35c(%esp,%eax,2)
		add    $0x3,%edx
		mov    %di,0x35e(%esp,%eax,2)
		cmp    $0x2e,%dx
		jl     jump_23669
		mov    0x3ba(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_236b8
		add    $0x2,%esi
	jump_236b8:
		xor    %ecx,%ecx
	jump_236ba:
		movswl %cx,%edx
		add    %edx,%edx
		add    %si,0x300(%esp,%edx,1)
		cmp    $0x1e,%cx
		jge    jump_236e8
		mov    0x2fe(%esp,%edx,1),%edx
		sar    $0x10,%edx
		mov    $0x6,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xe,%edx
		jmp    jump_23701
	jump_236e8:
		mov    0x2fe(%esp,%edx,1),%edx
		sar    $0x10,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x16,%edx
	jump_23701:
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		movswl %cx,%eax
		mov    %edx,%ebx
		mov    0x2fe(%esp,%eax,2),%edi
		mov    0x35a(%esp,%eax,2),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		inc    %ecx
		call   func_1fffe
		cmp    $0x2e,%cx
		jl     jump_236ba
		call   func_5e9e8
		call   func_499e4
		xor    %ecx,%ecx
	jump_2373d:
		mov    $0x122,%eax
		call   func_499bd
		movswl %cx,%edx
		add    $0x14,%eax
		mov    %ax,0x35c(%esp,%edx,2)
		mov    $0xc8,%eax
		inc    %ecx
		call   func_499bd
		mov    %ax,0x300(%esp,%edx,2)
		cmp    $0x2e,%cx
		jl     jump_2373d
		xor    %edi,%edi
		mov    $data_f0daa,%ebp
	jump_23777:
		call   func_5e943
		mov    0x3c6(%esp),%eax
		mov    %esp,%ecx
		sar    $0x10,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0xfe,%edx
		xor    %eax,%eax
		call   func_5fd1c
		mov    0x3c8(%esp),%ecx
		test   %cx,%cx
		jle    jump_237b3
		mov    %ecx,%esi
		sub    $0x3,%esi
		mov    %si,0x3c8(%esp)
	jump_237b3:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
	jump_237cb:
		movswl %si,%ecx
		mov    0x2fe(%esp,%ecx,2),%edx
		sar    $0x10,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xe,%edx
		imul   $0xc,%edx,%ebx
		mov    0x300(%esp,%ecx,2),%ax
		sub    $0x1e,%eax
		movswl %ax,%edx
		mov    0x35a(%esp,%ecx,2),%eax
		add    %ebp,%ebx
		sar    $0x10,%eax
		call   func_1fffe
		mov    0x300(%esp,%ecx,2),%ax
		inc    %eax
		inc    %esi
		mov    %ax,0x300(%esp,%ecx,2)
		cmp    $0x2e,%si
		jl     jump_237cb
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x32,%di
		jl     jump_23777
		call   func_1ffcd
		mov    $0xc,%edx
		xor    %ebx,%ebx
		mov    %dx,data_7001c
		mov    %bx,data_ba838
		call   func_45559
		add    $0x3cc,%esp
		jmp    jump_27994

vtable_23862:
		.long   func_238fa
		.long   func_238fa
		.long   func_238fa
		.long   func_238fa

vtable_23872:
		.long   func_2397f
		.long   func_2398c
		.long   func_2399f
		.long   func_239b2


/*----------------------------------------------------------------*/
func_23882:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %cl,0x10(%esp)
		mov    $data_77224,%eax
		mov    $0x3,%edx
		call   func_1fea4
		mov    %esi,%eax
		call   func_200de
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		movsbl 0x1(%esi),%eax
		movswl %bx,%edx
		call   func_10988
		mov    %ax,0xc(%esp)
		movswl %di,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $0x32,%eax
		call   func_4f4cd
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     func_238fa
		and    $0xff,%eax
		jmp    *vtable_23862(,%eax,4)


/*----------------------------------------------------------------*/
func_238fa:
/*----------------------------------------------------------------*/
		mov    $0x2,%eax
		call   func_1033b
		mov    0x10(%esp),%ah
		inc    %ah
		mov    $data_f0daa,%ebp
		mov    %ah,0x10(%esp)
		mov    $0x5,%edi
	jump_23918:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    0xa(%esp),%edx
		mov    %eax,%ebx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %edi
		mov    %eax,%ecx
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_239c3
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x8(%esp),%eax
		add    %ebx,%eax
		mov    0xc(%esp),%ebx
		add    %ecx,%ebx
		jmp    *vtable_23872(,%edx,4)


/*----------------------------------------------------------------*/
func_2397f:
/*----------------------------------------------------------------*/
		mov    %ax,0x8(%esp)
		addw   $0x3,0xc(%esp)
		jmp    jump_239c3


/*----------------------------------------------------------------*/
func_2398c:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%ecx
		sub    $0x3,%ecx
		mov    %bx,0xc(%esp)
		mov    %cx,0x8(%esp)
		jmp    jump_239c3


/*----------------------------------------------------------------*/
func_2399f:
/*----------------------------------------------------------------*/
		mov    0xc(%esp),%ebx
		sub    $0x3,%ebx
		mov    %ax,0x8(%esp)
		mov    %bx,0xc(%esp)
		jmp    jump_239c3


/*----------------------------------------------------------------*/
func_239b2:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%edx
		add    $0x3,%edx
		mov    %bx,0xc(%esp)
		mov    %dx,0x8(%esp)
	jump_239c3:
		xor    %ecx,%ecx
		jmp    jump_23a0a
	jump_239c7:
		mov    $0x3,%eax
		mov    0x60(%esi),%edx
		call   func_499bd
		sar    $0x18,%edx
		cwtl
		lea    (%edx,%edx,2),%edx
		add    %edx,%eax
		imul   $0xc,%eax,%ebx
		mov    %edi,%eax
		mov    0xc(%esp),%edx
		call   func_499bd
		add    %edx,%eax
		sub    $0x2,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		call   func_499bd
		add    0x8(%esp),%eax
		sub    $0x2,%eax
		add    %ebp,%ebx
		cwtl
		inc    %ecx
		call   func_1fffe
	jump_23a0a:
		movsbw 0x10(%esp),%ax
		cmp    %ax,%cx
		jle    jump_239c7
		call   func_5e9e8
		call   func_499e4
		mov    0x8(%esp),%eax
		cmp    0x4(%esp),%ax
		jne    jump_23a34
		mov    0xc(%esp),%eax
		cmp    (%esp),%ax
		je     jump_23a8d
	jump_23a34:
		mov    0x63(%esi),%dl
		test   %dl,%dl
		je     jump_23a40
		cmp    $0x2,%dl
		jne    jump_23a5c
	jump_23a40:
		mov    0xa(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jl     jump_23a8d
	jump_23a5c:
		mov    0x63(%esi),%bl
		cmp    $0x1,%bl
		je     jump_23a6d
		cmp    $0x3,%bl
		jne    jump_23918
	jump_23a6d:
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x6,%eax
		jge    jump_23918
	jump_23a8d:
		call   func_1ffcd
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret

vtable_23a9a:
		.long   func_23b23
		.long   func_23b28
		.long   func_23b2d
		.long   func_23b32

vtable_23aaa:
		.long   func_23bc7
		.long   func_23bcc
		.long   func_23bd1
		.long   func_23bd6


/*----------------------------------------------------------------*/
func_23aba:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		mov    $data_7722e,%eax
		call   func_1fea4
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    %dx,0x8(%esp)
		mov    $0x3,%edx
		call   func_200de
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%esi
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    %eax,%edx
		mov    %eax,%edi
		mov    $0x5,%eax
		call   func_1033b
		mov    (%esp),%eax
		mov    0x63(%eax),%al
		add    $0xc,%esi
		cmp    $0x3,%al
		ja     jump_23b35
		and    $0xff,%eax
		jmp    *vtable_23a9a(,%eax,4)


/*----------------------------------------------------------------*/
func_23b23:
/*----------------------------------------------------------------*/
		add    $0x10,%edi
		jmp    jump_23b35


/*----------------------------------------------------------------*/
func_23b28:
/*----------------------------------------------------------------*/
		sub    $0x18,%esi
		jmp    jump_23b35


/*----------------------------------------------------------------*/
func_23b2d:
/*----------------------------------------------------------------*/
		sub    $0x10,%edi
		jmp    jump_23b35


/*----------------------------------------------------------------*/
func_23b32:
/*----------------------------------------------------------------*/
		add    $0x18,%esi
	jump_23b35:
		xor    %ebx,%ebx
		mov    %bx,0xc(%esp)
	jump_23b3c:
		mov    0x6(%esp),%ecx
		mov    $0x6,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		call   func_454b3
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		movswl %di,%ebp
		mov    $data_f0daa,%ebx
		movswl %si,%eax
		add    %edx,%ebx
		mov    %ebp,%edx
		mov    %eax,0x4(%esp)
		call   func_1fffe
		lea    0x6(%ecx),%ebx
		imul   $0xc,%ebx,%ebx
		mov    0x4(%esp),%eax
		mov    %ebp,%edx
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    0x8(%esp),%edx
		inc    %edx
		mov    %dx,0x8(%esp)
		cmp    $0x9,%dx
		jne    jump_23bd9
		mov    (%esp),%eax
		xor    %ecx,%ecx
		mov    0x63(%eax),%al
		mov    %cx,0x8(%esp)
		cmp    $0x3,%al
		ja     jump_23bd9
		and    $0xff,%eax
		jmp    *vtable_23aaa(,%eax,4)


/*----------------------------------------------------------------*/
func_23bc7:
/*----------------------------------------------------------------*/
		add    $0x10,%edi
		jmp    jump_23bd9


/*----------------------------------------------------------------*/
func_23bcc:
/*----------------------------------------------------------------*/
		sub    $0x18,%esi
		jmp    jump_23bd9


/*----------------------------------------------------------------*/
func_23bd1:
/*----------------------------------------------------------------*/
		sub    $0x10,%edi
		jmp    jump_23bd9


/*----------------------------------------------------------------*/
func_23bd6:
/*----------------------------------------------------------------*/
		add    $0x18,%esi
	jump_23bd9:
		call   func_5e9e8
		mov    0xa(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_23c04
		mov    $0x32,%eax
		call   func_4f4cd
	jump_23c04:
		mov    0xc(%esp),%ecx
		inc    %ecx
		mov    %cx,0xc(%esp)
		cmp    $0x36,%cx
		jl     jump_23b3c
		call   func_1ffcd
		add    $0x10,%esp
		jmp    jump_21e0f

vtable_23c26:
		.long   func_23ccf
		.long   func_23d26
		.long   func_23d84
		.long   func_23dd7


/*----------------------------------------------------------------*/
func_23c36:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		mov    %eax,%ebp
		mov    $data_7722e,%eax
		xor    %edx,%edx
		call   func_1fea4
		mov    %dx,0x30(%esp)
		mov    %ebp,%eax
		mov    $0x4,%edx
		call   func_200de
		mov    $0x5,%eax
		xor    %ebx,%ebx
		call   func_1033b
		movsbw 0x0(%ebp),%ax
		mov    %bx,0x3c(%esp)
		mov    %eax,%ebx
		dec    %ebx
		movsbw 0x1(%ebp),%dx
		mov    %bx,0x34(%esp)
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x20(%esp)
		mov    %eax,%ebx
		xor    %edi,%edi
		sub    $0x6,%ebx
		inc    %eax
		mov    %bx,0x28(%esp)
		mov    %edx,%ebx
		mov    %ax,0x24(%esp)
		dec    %ebx
		sub    $0x6,%edx
		mov    %bx,0x1c(%esp)
		mov    %dx,0x2c(%esp)
	jump_23cab:
		cmpw   $0x0,0x30(%esp)
		jne    jump_23e2f
		mov    0x63(%ebp),%al
		cmp    $0x3,%al
		ja     jump_23e2f
		and    $0xff,%eax
		jmp    *vtable_23c26(,%eax,4)


/*----------------------------------------------------------------*/
func_23ccf:
/*----------------------------------------------------------------*/
		mov    $0x6,%esi
		xor    %ecx,%ecx
		xor    %ebx,%ebx
	jump_23cd8:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		imul   $0x18,%eax,%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		cwtl
		add    %edx,%eax
		movswl %cx,%edx
		add    $0xc,%eax
		mov    %ax,(%esp,%edx,2)
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    %ebx,%eax
		inc    %ecx
		add    $0x4,%eax
		add    $0x10,%ebx
		mov    %ax,0xc(%esp,%edx,2)
		cmp    $0x6,%cx
		jge    jump_23e2f
		jmp    jump_23cd8


/*----------------------------------------------------------------*/
func_23d26:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		xor    %esi,%esi
	jump_23d2a:
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		movl   $0x6,0x18(%esp)
		call   func_10971
		add    %esi,%eax
		movswl %cx,%ebx
		add    $0xc,%eax
		movswl %di,%edx
		mov    %ax,(%esp,%ebx,2)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x18(%esp)
		mov    %eax,%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		shl    $0x4,%edx
		call   func_10988
		cwtl
		add    %edx,%eax
		inc    %ecx
		add    $0x4,%eax
		add    $0x18,%esi
		mov    %ax,0xc(%esp,%ebx,2)
		cmp    $0x6,%cx
		jge    jump_23e2f
		jmp    jump_23d2a


/*----------------------------------------------------------------*/
func_23d84:
/*----------------------------------------------------------------*/
		mov    $0x6,%esi
		xor    %ecx,%ecx
		xor    %ebx,%ebx
	jump_23d8d:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		imul   $0x18,%eax,%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		cwtl
		add    %edx,%eax
		movswl %cx,%edx
		add    $0xc,%eax
		mov    %ax,(%esp,%edx,2)
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    %ebx,%eax
		inc    %ecx
		add    $0x4,%eax
		add    $0x10,%ebx
		mov    %ax,0xc(%esp,%edx,2)
		cmp    $0x6,%cx
		jge    jump_23e2f
		jmp    jump_23d8d


/*----------------------------------------------------------------*/
func_23dd7:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		xor    %esi,%esi
	jump_23ddb:
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		movl   $0x6,0x18(%esp)
		call   func_10971
		add    %esi,%eax
		movswl %cx,%ebx
		add    $0xc,%eax
		movswl %di,%edx
		mov    %ax,(%esp,%ebx,2)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x18(%esp)
		mov    %eax,%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		shl    $0x4,%edx
		call   func_10988
		cwtl
		add    %edx,%eax
		inc    %ecx
		add    $0x4,%eax
		add    $0x18,%esi
		mov    %ax,0xc(%esp,%ebx,2)
		cmp    $0x6,%cx
		jl     jump_23ddb
	jump_23e2f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		xor    %edx,%edx
		mov    %dx,0x38(%esp)
	jump_23e4c:
		mov    0x2e(%esp),%esi
		sar    $0x10,%esi
		mov    $0x6,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    0x36(%esp),%ecx
		sar    $0x10,%ecx
		mov    $data_f0daa,%ebx
		mov    -0x2(%esp,%ecx,2),%eax
		add    %edx,%ebx
		mov    0xa(%esp,%ecx,2),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x6,%esi
		call   func_1fffe
		imul   $0xc,%esi,%ebx
		mov    0xa(%esp,%ecx,2),%edx
		mov    -0x2(%esp,%ecx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    0x38(%esp),%ebx
		inc    %ebx
		mov    %bx,0x38(%esp)
		cmp    $0x6,%bx
		jl     jump_23e4c
		mov    0x30(%esp),%esi
		inc    %esi
		mov    %si,0x30(%esp)
		cmp    $0x3,%si
		jne    jump_23ecc
		xor    %edx,%edx
		inc    %edi
		mov    %dx,0x30(%esp)
	jump_23ecc:
		call   func_5e9e8
		mov    0x3a(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_23ef7
		mov    $0x32,%eax
		call   func_4f4cd
	jump_23ef7:
		mov    0x3c(%esp),%ecx
		inc    %ecx
		mov    %cx,0x3c(%esp)
		cmp    $0x36,%cx
		jl     jump_23cab
		call   func_1ffcd
		add    $0x40,%esp
		jmp    jump_21e0f

vtable_23f1a:
		.long   func_23fbc
		.long   func_23fd2
		.long   func_23fe8
		.long   func_23ffe

vtable_23f2a:
		.long   func_24117
		.long   func_24143
		.long   func_24166
		.long   func_24189


/*----------------------------------------------------------------*/
func_23f3a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		xor    %edx,%edx
		mov    %dx,0x18(%esp)
		mov    $0x5,%edx
		call   func_200de
		mov    $data_7722e,%eax
		call   func_1fea4
		mov    $0x5,%eax
		xor    %edx,%edx
		call   func_1033b
	jump_23f6b:
		mov    (%esp),%eax
		movsbw (%eax),%bx
		movswl %dx,%eax
		mov    %bx,0x4(%esp,%eax,2)
		mov    (%esp),%ebx
		movsbw 0x1(%ebx),%bx
		inc    %edx
		mov    %bx,0xc(%esp,%eax,2)
		cmp    $0x3,%dx
		jl     jump_23f6b
		mov    (%esp),%eax
		mov    0x63(%eax),%al
		cmp    $0x3,%al
		ja     jump_24012
		mov    0x10(%esp),%ecx
		mov    0x6(%esp),%edx
		xor    %ebx,%ebx
		mov    0xe(%esp),%esi
		mov    %al,%bl
		inc    %ecx
		dec    %edx
		mov    0x8(%esp),%eax
		dec    %esi
		inc    %eax
		jmp    *vtable_23f1a(,%ebx,4)


/*----------------------------------------------------------------*/
func_23fbc:
/*----------------------------------------------------------------*/
		mov    0xc(%esp),%ebx
		mov    %dx,0x6(%esp)
		inc    %ebx
		mov    %ax,0x8(%esp)
		mov    %bx,0xc(%esp)
		jmp    jump_24012


/*----------------------------------------------------------------*/
func_23fd2:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%edi
		mov    %si,0xe(%esp)
		dec    %edi
		mov    %cx,0x10(%esp)
		mov    %di,0x4(%esp)
		jmp    jump_24012


/*----------------------------------------------------------------*/
func_23fe8:
/*----------------------------------------------------------------*/
		mov    0xc(%esp),%ecx
		mov    %dx,0x6(%esp)
		dec    %ecx
		mov    %ax,0x8(%esp)
		mov    %cx,0xc(%esp)
		jmp    jump_24012


/*----------------------------------------------------------------*/
func_23ffe:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%ebx
		mov    %si,0xe(%esp)
		inc    %ebx
		mov    %cx,0x10(%esp)
		mov    %bx,0x4(%esp)
	jump_24012:
		xor    %ebx,%ebx
	jump_24014:
		movswl %bx,%edx
		mov    0x2(%esp,%edx,2),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp,%edx,2)
		mov    0xa(%esp,%edx,2),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		inc    %ebx
		mov    %ax,0xc(%esp,%edx,2)
		cmp    $0x3,%bx
		jl     jump_24014
		xor    %ecx,%ecx
		mov    %cx,0x14(%esp)
	jump_2404f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
	jump_24067:
		mov    0x16(%esp),%ebp
		movswl %si,%ecx
		sar    $0x10,%ebp
		lea    (%ecx,%ebp,1),%edx
		mov    $0x6,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%eax
		add    $data_f0daa,%eax
		mov    0xc(%esp,%ecx,2),%dx
		add    0x6(%eax),%dx
		movswl %dx,%edi
		mov    0x4(%esp,%ecx,2),%dx
		add    0x4(%eax),%dx
		mov    0x8(%eax),%ebx
		movswl %dx,%eax
		mov    %edi,%edx
		call   func_5efb9
		lea    0x6(%ebp),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0xc(%esp,%ecx,2),%dx
		add    0x6(%eax),%dx
		add    $0x3,%edx
		movswl %dx,%edi
		mov    0x4(%esp,%ecx,2),%dx
		add    0x4(%eax),%dx
		mov    0x8(%eax),%ebx
		movswl %dx,%eax
		mov    %edi,%edx
		inc    %esi
		call   func_5efb9
		cmp    $0x3,%si
		jl     jump_24067
		mov    0x18(%esp),%esi
		inc    %esi
		mov    %si,0x18(%esp)
		cmp    $0x9,%si
		jne    jump_241ab
		xor    %eax,%eax
		mov    %ax,0x18(%esp)
		mov    (%esp),%eax
		mov    0x63(%eax),%al
		cmp    $0x3,%al
		ja     jump_241ab
		and    $0xff,%eax
		jmp    *vtable_23f2a(,%eax,4)


/*----------------------------------------------------------------*/
func_24117:
/*----------------------------------------------------------------*/
		cmpw   $0xa8,0xc(%esp)
		jg     jump_241ab
		xor    %edx,%edx
	jump_24126:
		movswl %dx,%eax
		mov    0xc(%esp,%eax,2),%si
		add    $0x10,%esi
		inc    %edx
		mov    %si,0xc(%esp,%eax,2)
		cmp    $0x3,%dx
		jge    jump_241ab
		jmp    jump_24126


/*----------------------------------------------------------------*/
func_24143:
/*----------------------------------------------------------------*/
		cmpw   $0x30,0x4(%esp)
		jl     jump_241ab
		xor    %edx,%edx
	jump_2414d:
		movswl %dx,%eax
		mov    0x4(%esp,%eax,2),%cx
		sub    $0x18,%ecx
		inc    %edx
		mov    %cx,0x4(%esp,%eax,2)
		cmp    $0x3,%dx
		jge    jump_241ab
		jmp    jump_2414d


/*----------------------------------------------------------------*/
func_24166:
/*----------------------------------------------------------------*/
		cmpw   $0x20,0xc(%esp)
		jl     jump_241ab
		xor    %edx,%edx
	jump_24170:
		movswl %dx,%eax
		mov    0xc(%esp,%eax,2),%bx
		sub    $0x10,%ebx
		inc    %edx
		mov    %bx,0xc(%esp,%eax,2)
		cmp    $0x3,%dx
		jge    jump_241ab
		jmp    jump_24170


/*----------------------------------------------------------------*/
func_24189:
/*----------------------------------------------------------------*/
		cmpw   $0x110,0x4(%esp)
		jg     jump_241ab
		xor    %edx,%edx
	jump_24194:
		movswl %dx,%eax
		mov    0x4(%esp,%eax,2),%di
		add    $0x18,%edi
		inc    %edx
		mov    %di,0x4(%esp,%eax,2)
		cmp    $0x3,%dx
		jl     jump_24194
	jump_241ab:
		call   func_5e9e8
		mov    0x12(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_241d6
		mov    $0x32,%eax
		call   func_4f4cd
	jump_241d6:
		mov    0x14(%esp),%esi
		inc    %esi
		mov    %si,0x14(%esp)
		cmp    $0x5a,%si
		jl     jump_2404f
		call   func_1ffcd
		add    $0x1c,%esp
		jmp    jump_21e0f


/*----------------------------------------------------------------*/
func_241f7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x60,%esp
		mov    %eax,%ebx
		mov    %dl,0x5c(%esp)
		mov    $0x8,%ecx
		lea    0x20(%esp),%edi
		mov    $data_1fdae,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_1fdce,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		lea    0x40(%esp),%edi
		mov    $data_1fdee,%esi
		mov    $data_7723b,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    $0x5,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    0x5c(%esp),%ah
		mov    %edx,0x50(%esp)
		inc    %ah
		xor    %ecx,%ecx
		mov    %ah,0x5c(%esp)
	jump_24256:
		movswl %cx,%edx
		movsbw (%ebx),%ax
		add    0x20(%esp,%edx,2),%ax
		cwtl
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x20(%esp,%edx,2)
		mov    (%esp,%edx,2),%di
		movsbw 0x1(%ebx),%ax
		add    %edi,%eax
		cwtl
		inc    %ecx
		call   func_10988
		mov    %ax,(%esp,%edx,2)
		cmp    $0x10,%cx
		jl     jump_24256
		xor    %eax,%eax
		mov    $data_f0daa,%ebp
		mov    %ax,0x54(%esp)
		jmp    jump_2443e
	jump_2429f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpw   $0x0,0x50(%esp)
		jne    jump_242f3
		mov    $0x1,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9e9
		call   func_499e4
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		mov    $0x32,%eax
		call   func_4f4cd
	jump_242f3:
		xor    %ebx,%ebx
		mov    %bx,0x58(%esp)
		jmp    jump_24400
	jump_242ff:
		cmpb   $0xc,0x40(%esp,%eax,1)
		jae    jump_243fb
		mov    %eax,%ebx
		mov    0x52(%esp),%edx
		shl    $0x2,%ebx
		sar    $0x10,%edx
		cmp    %ebx,%edx
		jl     jump_243fb
		cmpb   $0x8,0x40(%esp,%eax,1)
		jae    jump_24344
		xor    %edx,%edx
		mov    0x40(%esp,%eax,1),%dl
		imul   $0xc,%edx,%edx
		lea    (%edx,%ebp,1),%ebx
		mov    -0x2(%esp,%eax,2),%edx
		mov    0x1e(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
	jump_24344:
		mov    0x56(%esp),%esi
		sar    $0x10,%esi
		xor    %eax,%eax
		mov    0x40(%esp,%esi,1),%al
		add    $0x8,%eax
		imul   $0xc,%eax,%eax
		lea    (%eax,%ebp,1),%edi
		xor    %eax,%eax
		mov    0x40(%esp,%esi,1),%al
		mov    (%esp,%esi,2),%dx
		shl    $0x2,%eax
		mov    0x20(%esp,%esi,2),%bx
		sub    %eax,%edx
		sub    %eax,%ebx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %edi,%ebx
		call   func_1fffe
		xor    %eax,%eax
		mov    0x40(%esp,%esi,1),%al
		mov    (%esp,%esi,2),%dx
		shl    $0x2,%eax
		mov    0x20(%esp,%esi,2),%bx
		sub    %eax,%edx
		add    %ebx,%eax
		movswl %dx,%edx
		cwtl
		mov    %edi,%ebx
		call   func_1fffe
		xor    %eax,%eax
		mov    0x40(%esp,%esi,1),%al
		mov    (%esp,%esi,2),%dx
		shl    $0x2,%eax
		mov    0x20(%esp,%esi,2),%bx
		add    %eax,%edx
		sub    %eax,%ebx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %edi,%ebx
		call   func_1fffe
		xor    %eax,%eax
		mov    0x40(%esp,%esi,1),%al
		mov    (%esp,%esi,2),%dx
		shl    $0x2,%eax
		mov    0x20(%esp,%esi,2),%bx
		add    %eax,%edx
		add    %ebx,%eax
		movswl %dx,%edx
		cwtl
		mov    %edi,%ebx
		call   func_1fffe
		mov    %edi,%ebx
		mov    -0x2(%esp,%esi,2),%edx
		mov    0x1e(%esp,%esi,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		incb   0x40(%esp,%esi,1)
	jump_243fb:
		incw   0x58(%esp)
	jump_24400:
		xor    %eax,%eax
		mov    0x5c(%esp),%al
		mov    %eax,%edx
		mov    0x56(%esp),%eax
		shl    $0x3,%edx
		sar    $0x10,%eax
		cmp    %edx,%eax
		jl     jump_242ff
		mov    0x50(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x50(%esp)
		cmp    $0x5,%cx
		jne    jump_2442f
		xor    %edi,%edi
		mov    %edi,0x50(%esp)
	jump_2442f:
		call   func_5e9e8
		call   func_499e4
		incw   0x54(%esp)
	jump_2443e:
		xor    %eax,%eax
		mov    0x5c(%esp),%al
		mov    0x52(%esp),%edx
		shl    $0x5,%eax
		sar    $0x10,%edx
		add    $0xb,%eax
		cmp    %eax,%edx
		jl     jump_2429f
		call   func_1ffcd
		add    $0x60,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_24466:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x54,%esp
		mov    %eax,%ebx
		mov    $0x8,%ecx
		lea    0x20(%esp),%edi
		mov    $data_1fdfe,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_1fe1e,%esi
		mov    $data_7723b,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    $0x5,%eax
		call   func_1033b
		movsbl (%ebx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x40(%esp)
		movsbl 0x1(%ebx),%eax
		xor    %ecx,%ecx
		call   func_10988
		mov    %eax,0x44(%esp)
	jump_244c3:
		movswl %cx,%edx
		movsbw (%ebx),%ax
		add    0x20(%esp,%edx,2),%ax
		cwtl
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x20(%esp,%edx,2)
		mov    (%esp,%edx,2),%di
		movsbw 0x1(%ebx),%ax
		add    %edi,%eax
		cwtl
		inc    %ecx
		call   func_10988
		mov    %ax,(%esp,%edx,2)
		cmp    $0x10,%cx
		jl     jump_244c3
		xor    %eax,%eax
		mov    $data_f0daa,%ebp
		mov    %ax,0x48(%esp)
	jump_24507:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x48(%esp),%ecx
		call   func_454b3
		test   %cx,%cx
		je     jump_2452c
		cmp    $0x8,%cx
		jne    jump_24562
	jump_2452c:
		mov    $0x1,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9e9
		call   func_499e4
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		mov    $0x32,%eax
		call   func_4f4cd
	jump_24562:
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		mov    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_245e0
		xor    %ebx,%ebx
	jump_2457f:
		movswl %bx,%eax
		add    %eax,%eax
		mov    0x40(%esp),%edi
		mov    0x20(%esp,%eax,1),%dx
		cmp    %di,%dx
		jge    jump_2459e
		mov    %edx,%edi
		sub    $0x18,%edi
		mov    %di,0x20(%esp,%eax,1)
		jmp    jump_245aa
	jump_2459e:
		jle    jump_245aa
		mov    %edx,%esi
		add    $0x18,%esi
		mov    %si,0x20(%esp,%eax,1)
	jump_245aa:
		inc    %ebx
		cmp    $0x10,%bx
		jl     jump_2457f
		mov    0x44(%esp),%ecx
		xor    %ebx,%ebx
	jump_245b7:
		movswl %bx,%eax
		add    %eax,%eax
		mov    (%esp,%eax,1),%dx
		cmp    %cx,%dx
		jge    jump_245ce
		sub    $0x10,%edx
		mov    %dx,(%esp,%eax,1)
		jmp    jump_245d9
	jump_245ce:
		jle    jump_245d9
		mov    %edx,%edi
		add    $0x10,%edi
		mov    %di,(%esp,%eax,1)
	jump_245d9:
		inc    %ebx
		cmp    $0x10,%bx
		jl     jump_245b7
	jump_245e0:
		mov    0x48(%esp),%ebx
		cmp    $0x8,%bx
		jge    jump_24645
		xor    %esi,%esi
	jump_245ec:
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    -0x2(%esp,%ecx,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffce,%edx
		jle    jump_24638
		cmpw   $0xc8,(%esp,%ecx,1)
		jge    jump_24638
		mov    0x46(%esp),%edi
		sar    $0x10,%edi
		imul   $0xc,%edi,%ebx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
		lea    0x8(%edi),%ebx
		imul   $0xc,%ebx,%ebx
		mov    -0x2(%esp,%ecx,1),%edx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_24638:
		inc    %esi
		cmp    $0x8,%si
		jge    jump_24720
		jmp    jump_245ec
	jump_24645:
		cmp    $0x10,%bx
		jge    jump_246b3
		mov    %ebx,%eax
		sub    $0x8,%eax
		mov    $0x8,%esi
		mov    %ax,0x50(%esp)
	jump_2465a:
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    -0x2(%esp,%ecx,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffce,%edx
		jle    jump_246a6
		cmpw   $0xc8,(%esp,%ecx,1)
		jge    jump_246a6
		mov    0x4e(%esp),%edi
		sar    $0x10,%edi
		imul   $0xc,%edi,%ebx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
		lea    0x8(%edi),%ebx
		imul   $0xc,%ebx,%ebx
		mov    -0x2(%esp,%ecx,1),%edx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_246a6:
		inc    %esi
		cmp    $0x10,%si
		jge    jump_24720
		jmp    jump_2465a
	jump_246b3:
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		mov    $0x8,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		xor    %esi,%esi
		mov    %dx,0x4c(%esp)
	jump_246cd:
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    -0x2(%esp,%ecx,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffce,%edx
		jle    jump_24719
		cmpw   $0xc8,(%esp,%ecx,1)
		jge    jump_24719
		mov    0x4a(%esp),%edi
		sar    $0x10,%edi
		imul   $0xc,%edi,%ebx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%eax
		add    %ebp,%ebx
		add    $0x8,%edi
		call   func_1fffe
		imul   $0xc,%edi,%ebx
		mov    -0x2(%esp,%ecx,1),%edx
		mov    0x1e(%esp,%ecx,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%ebx
		call   func_1fffe
	jump_24719:
		inc    %esi
		cmp    $0x10,%si
		jl     jump_246cd
	jump_24720:
		mov    0x48(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x48(%esp)
		cmp    $0x30,%dx
		jl     jump_24507
		call   func_1ffcd
		add    $0x54,%esp
		jmp    jump_21e0f

vtable_2474e:
		.long   func_24b82
		.long   func_24b8b
		.long   func_24ba8
		.long   func_24b9a
		.long   func_24b8f
		.long   func_24b93
		.long   func_24ba1
		.long   func_24baf


/*----------------------------------------------------------------*/
func_2476e:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xa8,%esp
		mov    %eax,%ecx
		mov    %dx,0x7c(%esp)
		mov    %bx,0x88(%esp)
		lea    0x40(%esp),%edi
		mov    $data_77247,%eax
		xor    %edx,%edx
		mov    $data_1fe3e,%esi
		mov    %edx,0x5c(%esp)
		mov    %edx,0x98(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1124a
		movsbl (%ecx),%eax
		call   func_20136
		add    $0xc,%eax
		mov    %ax,0x94(%esp)
		movsbl 0x1(%ecx),%eax
		mov    0x86(%esp),%edx
		call   func_20146
		mov    %ax,0x6c(%esp)
		mov    0x7a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x74(%esp),%ebx
		call   func_11db2
		lea    0x58(%esp),%edx
		call   func_135eb
		mov    data_ba83c,%si
		imul   $0x18,%esi,%eax
		mov    0x58(%esp),%edi
		add    %eax,%edi
		mov    data_ba83e,%ax
		mov    0x74(%esp),%edx
		shl    $0x4,%eax
		mov    %di,0x58(%esp)
		add    %eax,%edx
		mov    data_ba83e,%ax
		mov    %dx,0x74(%esp)
		mov    %ax,0x8c(%esp)
		movsbl (%ecx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x70(%esp)
		xor    %ebx,%ebx
		movsbl 0x1(%ecx),%eax
		mov    %si,0x90(%esp)
		call   func_10988
		mov    %ax,0x64(%esp)
	jump_2485c:
		movswl %bx,%edx
		mov    0x70(%esp),%eax
		mov    %ax,0x20(%esp,%edx,2)
		mov    0x64(%esp),%eax
		inc    %ebx
		mov    %ax,(%esp,%edx,2)
		cmp    $0x10,%bx
		jl     jump_2485c
		mov    $0x2,%eax
		call   func_1033b
	jump_24881:
		mov    0x92(%esp),%ecx
		mov    0x56(%esp),%edx
		mov    0x6a(%esp),%esi
		mov    0x72(%esp),%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		mov    %ecx,%eax
		sar    $0x10,%esi
		sub    %edx,%eax
		sar    $0x10,%ebx
		mov    %eax,0x4c(%esp)
		mov    %esi,%eax
		sub    %ebx,%eax
		imul   %eax,%eax
		fildl  0x4c(%esp)
		fmul   %st(0),%st
		mov    %eax,0x4c(%esp)
		fildl  0x4c(%esp)
		faddp  %st,%st(1)
		fsqrt
		fdivl  data_77259
		sub    %ecx,%edx
		imul   $0xa,%edx,%edx
		fsts   0x48(%esp)
		call   func___CHP
		fistpl 0x4c(%esp)
		mov    0x4c(%esp),%eax
		mov    %ax,0x78(%esp)
		mov    0x76(%esp),%ecx
		mov    %edx,%eax
		sar    $0x10,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ebx,%edx
		sub    %esi,%edx
		imul   $0xa,%edx,%edx
		mov    %al,0xa0(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edi,%edi
		mov    %al,0x9c(%esp)
		mov    0x94(%esp),%eax
		mov    %di,0x60(%esp)
		mov    %ax,0x50(%esp)
		mov    0x6c(%esp),%eax
		mov    0x5c(%esp),%ecx
		mov    %ax,0x54(%esp)
		test   %cx,%cx
		jne    jump_24a7e
		cmpw   $0x0,0x98(%esp)
		jne    jump_24a7e
		mov    0x9d(%esp),%eax
		sar    $0x18,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x5,%eax
		jg     jump_24970
		cmpb   $0x0,0x9c(%esp)
		jle    jump_24970
		xor    %al,%al
		mov    %al,0xa4(%esp)
		jmp    jump_24a7e
	jump_24970:
		mov    0x9d(%esp),%eax
		sar    $0x18,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x5,%eax
		jg     jump_2499b
		cmpb   $0x0,0x9c(%esp)
		jge    jump_2499b
		movb   $0x1,0xa4(%esp)
		jmp    jump_24a7e
	jump_2499b:
		mov    0x99(%esp),%eax
		sar    $0x18,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x5,%eax
		jg     jump_249c6
		cmpb   $0x0,0xa0(%esp)
		jle    jump_249c6
		movb   $0x2,0xa4(%esp)
		jmp    jump_24a7e
	jump_249c6:
		mov    0x99(%esp),%eax
		sar    $0x18,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x5,%eax
		jg     jump_249f1
		cmpb   $0x0,0xa0(%esp)
		jge    jump_249f1
		movb   $0x3,0xa4(%esp)
		jmp    jump_24a7e
	jump_249f1:
		mov    0x9d(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xfffffffb,%eax
		jge    jump_24a1c
		mov    0x99(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xfffffffb,%eax
		jge    jump_24a1c
		movb   $0x4,0xa4(%esp)
		jmp    jump_24a7e
	jump_24a1c:
		cmpb   $0x5,0xa0(%esp)
		jle    jump_24a3a
		cmpb   $0x5,0x9c(%esp)
		jle    jump_24a3a
		movb   $0x5,0xa4(%esp)
		jmp    jump_24a7e
	jump_24a3a:
		mov    0x9d(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xfffffffb,%eax
		jge    jump_24a5d
		cmpb   $0x5,0x9c(%esp)
		jle    jump_24a5d
		movb   $0x6,0xa4(%esp)
		jmp    jump_24a7e
	jump_24a5d:
		cmpb   $0x5,0xa0(%esp)
		jle    jump_24a7e
		mov    0x99(%esp),%eax
		sar    $0x18,%eax
		cmp    $0xfffffffb,%eax
		jge    jump_24a7e
		movb   $0x7,0xa4(%esp)
	jump_24a7e:
		flds   0x48(%esp)
		fld    %st(0)
		call   func___CHP
		fistpl 0x4c(%esp)
		mov    0x4c(%esp),%eax
		mov    %eax,0x78(%esp)
		fild   0x78(%esp)
		fmull  data_77251
		call   func___CHP
		fistpl 0x4c(%esp)
		mov    0x4c(%esp),%eax
		mov    %ax,0x68(%esp)
		fcomps data_77261
		fnstsw %ax
		sahf
		jbe    jump_24add
		mov    0x66(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		movl   $0x1,0x98(%esp)
		mov    %eax,0x5c(%esp)
		jmp    jump_24b0f
	jump_24add:
		flds   0x48(%esp)
		fcomps data_77265
		fnstsw %ax
		sahf
		jbe    jump_24b02
		mov    0x68(%esp),%eax
		mov    $0x2,%ebx
		mov    %eax,0x5c(%esp)
		mov    %ebx,0x98(%esp)
		jmp    jump_24b0f
	jump_24b02:
		xor    %eax,%eax
		mov    %eax,0x5c(%esp)
		mov    %eax,0x98(%esp)
	jump_24b0f:
		xor    %esi,%esi
		mov    %si,0x84(%esp)
		jmp    jump_24f4d
	jump_24b1e:
		movsbw 0xa0(%esp),%ax
		mov    0x60(%esp),%esi
		add    %eax,%edi
		movsbw 0x9c(%esp),%ax
		add    %eax,%esi
		mov    0xa4(%esp),%ah
		mov    %si,0x60(%esp)
		cmp    $0x7,%ah
		ja     jump_24bba
		mov    0x98(%esp),%edx
		movzbl %ah,%ebp
		mov    0x5c(%esp),%eax
		sub    %edx,%eax
		mov    0x5c(%esp),%edx
		mov    %edi,%ebx
		add    %edx,%edx
		mov    %edi,%ecx
		add    %edx,%ebx
		sub    %edx,%ecx
		mov    %ebx,0x80(%esp)
		mov    %esi,%ebx
		sub    %edx,%esi
		add    %edx,%ebx
		mov    %esi,%edx
		jmp    *vtable_2474e(,%ebp,4)


/*----------------------------------------------------------------*/
func_24b82:
/*----------------------------------------------------------------*/
		mov    0x80(%esp),%edi
		jmp    jump_24bb6


/*----------------------------------------------------------------*/
func_24b8b:
/*----------------------------------------------------------------*/
		mov    %ecx,%edi
		jmp    jump_24bb6


/*----------------------------------------------------------------*/
func_24b8f:
/*----------------------------------------------------------------*/
		mov    %ecx,%edi
		jmp    func_24ba8


/*----------------------------------------------------------------*/
func_24b93:
/*----------------------------------------------------------------*/
		mov    0x80(%esp),%edi


/*----------------------------------------------------------------*/
func_24b9a:
/*----------------------------------------------------------------*/
		mov    %si,0x60(%esp)
		jmp    jump_24bb6


/*----------------------------------------------------------------*/
func_24ba1:
/*----------------------------------------------------------------*/
		mov    0x80(%esp),%edi


/*----------------------------------------------------------------*/
func_24ba8:
/*----------------------------------------------------------------*/
		mov    %bx,0x60(%esp)
		jmp    jump_24bb6


/*----------------------------------------------------------------*/
func_24baf:
/*----------------------------------------------------------------*/
		mov    %ecx,%edi
		mov    %si,0x60(%esp)
	jump_24bb6:
		mov    %eax,0x5c(%esp)
	jump_24bba:
		movswl %di,%eax
		mov    0x4e(%esp),%edx
		sar    $0x4,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		mov    0x52(%esp),%edx
		mov    %ax,0x94(%esp)
		mov    0x5e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x14,%eax
		add    %edx,%eax
		mov    0x70(%esp),%ebx
		mov    %ax,0x6c(%esp)
		cmp    $0x5a,%bx
		jge    jump_24c49
		cmpw   $0x0,0x90(%esp)
		jle    jump_24c49
		mov    0x1e(%esp),%edx
		mov    0x6e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x3,%eax
		jge    jump_24c21
		addw   $0x2,data_7001c
		jmp    jump_24c29
	jump_24c21:
		addw   $0x4,data_7001c
	jump_24c29:
		cmpw   $0x10,data_7001c
		jl     jump_24cc7
		mov    0x90(%esp),%ecx
		mov    $0xfffffff8,%ebx
		dec    %ecx
		jmp    jump_24cb8
	jump_24c49:
		cmpw   $0xe6,0x70(%esp)
		jle    jump_24cc7
		mov    0x8e(%esp),%eax
		mov    data_ba842,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xc,%eax
		cmp    %edx,%eax
		jge    jump_24cc7
		mov    0x1e(%esp),%edx
		mov    0x6e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x3,%eax
		jge    jump_24c96
		subw   $0x2,data_7001c
		jmp    jump_24c9e
	jump_24c96:
		subw   $0x4,data_7001c
	jump_24c9e:
		mov    data_7001a,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff8,%eax
		jg     jump_24cc7
		mov    0x90(%esp),%ecx
		mov    $0x10,%ebx
		inc    %ecx
	jump_24cb8:
		mov    %bx,data_7001c
		mov    %cx,0x90(%esp)
	jump_24cc7:
		cmpw   $0x5a,0x64(%esp)
		jge    jump_24d25
		cmpw   $0x0,0x8c(%esp)
		jle    jump_24d25
		mov    -0x2(%esp),%edx
		mov    0x62(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x3,%eax
		jge    jump_24d00
		addw   $0x2,data_ba838
		jmp    jump_24d08
	jump_24d00:
		addw   $0x4,data_ba838
	jump_24d08:
		cmpw   $0x0,data_ba838
		jl     jump_24d98
		mov    0x8c(%esp),%eax
		mov    $0xfffffff1,%esi
		dec    %eax
		jmp    jump_24d89
	jump_24d25:
		cmpw   $0x6e,0x64(%esp)
		jle    jump_24d98
		mov    0x8a(%esp),%edx
		mov    data_ba83e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		cmp    %eax,%edx
		jge    jump_24d98
		mov    -0x2(%esp),%eax
		mov    0x62(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x3,%eax
		jge    jump_24d6a
		subw   $0x2,data_ba838
		jmp    jump_24d72
	jump_24d6a:
		subw   $0x4,data_ba838
	jump_24d72:
		mov    data_ba836,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff1,%eax
		jg     jump_24d98
		mov    0x8c(%esp),%eax
		xor    %esi,%esi
		inc    %eax
	jump_24d89:
		mov    %si,data_ba838
		mov    %ax,0x8c(%esp)
	jump_24d98:
		mov    $0xf,%edx
	jump_24d9d:
		movswl %dx,%eax
		mov    0x1e(%esp,%eax,2),%bx
		mov    %bx,0x20(%esp,%eax,2)
		mov    -0x2(%esp,%eax,2),%bx
		dec    %edx
		mov    %bx,(%esp,%eax,2)
		test   %dx,%dx
		jg     jump_24d9d
		mov    0x70(%esp),%eax
		mov    %ax,0x20(%esp)
		mov    0x64(%esp),%eax
		mov    0x90(%esp),%edx
		mov    %ax,(%esp)
		imul   $0x18,%edx,%eax
		mov    0x94(%esp),%edx
		sub    %eax,%edx
		mov    data_7001c,%bx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x8,%eax
		mov    %ax,0x70(%esp)
		mov    0x8c(%esp),%eax
		mov    0x6c(%esp),%edx
		shl    $0x4,%eax
		sub    %eax,%edx
		mov    data_ba838,%cx
		mov    %edx,%eax
		mov    0x82(%esp),%esi
		add    %ecx,%eax
		sar    $0x10,%esi
		add    $0x6,%eax
		mov    0x8a(%esp),%edx
		mov    %ax,0x64(%esp)
		mov    0x8e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x4,%ebx
		call   func_454b3
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%ebp
		lea    0x9(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edx
		add    %eax,%edx
		mov    0x3c(%esp),%eax
		mov    %edx,0x4c(%esp)
		mov    0x1c(%esp),%edx
		mov    0x4c(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1fffe
		mov    $0x3,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x9,%edx
		imul   $0xc,%edx,%ebx
		mov    0x36(%esp),%eax
		sar    $0x10,%eax
		mov    0x16(%esp),%edx
		add    $data_f0daa,%ebx
		sar    $0x10,%edx
		call   func_1fffe
		mov    0x10(%esp),%edx
		mov    0x30(%esp),%eax
		mov    0x4c(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		lea    0x4(%ebp),%eax
		imul   $0xc,%eax,%eax
		mov    0xa(%esp),%edx
		mov    $data_f0daa,%ecx
		sar    $0x10,%edx
		add    %eax,%ecx
		mov    0x2a(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x10,%eax
		call   func_1fffe
		mov    0x4(%esp),%edx
		mov    0x24(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		mov    $0x5,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x4,%edx
		imul   $0xc,%edx,%ecx
		add    $data_f0daa,%ecx
		mov    -0x2(%esp),%edx
		mov    0x1e(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		imul   $0xc,%ebp,%ebx
		mov    0x84(%esp),%esi
		inc    %esi
		mov    0x62(%esp),%edx
		mov    0x6e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		mov    %si,0x84(%esp)
		call   func_1fffe
		call   func_5e9e8
	jump_24f4d:
		mov    0x84(%esp),%eax
		cmp    0x68(%esp),%ax
		jl     jump_24b1e
		cmpw   $0x0,0x5c(%esp)
		jne    jump_24f72
		cmpw   $0x0,0x98(%esp)
		je     jump_24f91
	jump_24f72:
		mov    0xa1(%esp),%eax
		sar    $0x18,%eax
		mov    0x40(%esp,%eax,1),%al
		mov    %al,0xa4(%esp)
		call   func_499e4
		jmp    jump_24881
	jump_24f91:
		mov    0x86(%esp),%edx
		mov    0x7a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x64(%esp),%ebx
		call   func_11db2
		lea    0x70(%esp),%edx
		call   func_135eb
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x5,%eax
		xor    %edi,%edi
		call   func_1033b
	jump_24fca:
		mov    0x8a(%esp),%edx
		mov    0x8e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		mov    $0x6,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xc,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    0x6e(%esp),%eax
		add    %edx,%ebx
		mov    0x62(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %edi
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0xf,%di
		jl     jump_24fca
		call   func_1ffcd
		mov    $0xc,%edi
		xor    %eax,%eax
		mov    %di,data_7001c
		mov    %ax,data_ba838
		add    $0xa8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_25047:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x58,%esp
		push   %eax
		push   %edx
		mov    %bl,0x5c(%esp)
		mov    $0xa0,%edx
		xor    %eax,%eax
		mov    %dx,0x58(%esp)
		xor    %edx,%edx
	jump_25061:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,0x30(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0xa,%ax
		jl     jump_25061
		mov    $data_77247,%eax
		call   func_1fea4
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $0x2,%eax
		call   func_1033b
	jump_250b8:
		cmpw   $0x0,0x58(%esp)
		jle    jump_251dc
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpb   $0x1,0x5c(%esp)
		jne    jump_250f1
		mov    0x56(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		jmp    jump_2510c
	jump_250f1:
		mov    0x56(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		mov    %eax,%edx
		mov    $0x4,%ebx
	jump_2510c:
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%edi
		add    %edx,%edi
		xor    %ecx,%ecx
	jump_2511d:
		movswl %cx,%edx
		add    %edx,%edx
		fild   0x30(%esp,%edx,1)
		fdivs  data_77269
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x58(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x4(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x54(%esp)
		mov    0x54(%esp),%eax
		fmulp  %st,%st(1)
		fild   (%esp)
		faddp  %st,%st(1)
		mov    %ax,0x1c(%esp,%edx,1)
		call   func___CHP
		fistpl 0x54(%esp)
		mov    0x54(%esp),%eax
		mov    0x5c(%esp),%bl
		mov    %ax,0x8(%esp,%edx,1)
		cmp    $0x1,%bl
		jne    jump_25192
		mov    0x30(%esp,%edx,1),%ax
		add    $0xa,%eax
		mov    %ax,0x30(%esp,%edx,1)
		cmp    $0x280,%ax
		jl     jump_25192
		xor    %esi,%esi
		mov    %si,0x30(%esp,%edx,1)
	jump_25192:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x6(%esp,%edx,2),%eax
		mov    0x1a(%esp,%edx,2),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_1fffe
		cmp    $0xa,%cx
		jl     jump_2511d
		cmpb   $0x1,0x5c(%esp)
		jne    jump_251c7
		decw   0x58(%esp)
		jmp    jump_251cd
	jump_251c7:
		subw   $0x4,0x58(%esp)
	jump_251cd:
		call   func_5e9e8
		call   func_499e4
		jmp    jump_250b8
	jump_251dc:
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x5,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_251f2:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0x6,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0xc,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    0x2(%esp),%eax
		add    %edx,%ebx
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0xf,%cx
		jl     jump_251f2
		call   func_1ffcd
		add    $0x60,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_25254:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x5c,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,0x54(%esp)
	jump_25268:
		movswl %ax,%esi
		inc    %eax
		mov    %dx,0x14(%esp,%esi,2)
		add    $0x40,%edx
		cmp    $0xa,%ax
		jl     jump_25268
		mov    $data_7726d,%eax
		call   func_1fea4
		movswl %di,%edi
		movswl %cx,%esi
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_1124a
		mov    %esi,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x58(%esp)
		mov    %edi,%eax
		call   func_10988
		mov    %eax,0x50(%esp)
		mov    $0x5,%eax
		call   func_1033b
	jump_252b8:
		cmpw   $0xa0,0x54(%esp)
		jge    jump_253cf
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x52(%esp),%edx
		sar    $0x11,%edx
		mov    $0x5,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%edi
		xor    %ecx,%ecx
		add    %edx,%edi
	jump_252fa:
		movswl %cx,%edx
		add    %edx,%edx
		fild   0x14(%esp,%edx,1)
		fdivs  data_7727a
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x54(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x58(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x4c(%esp)
		fmulp  %st,%st(1)
		mov    0x14(%esp,%edx,1),%si
		mov    0x4c(%esp),%eax
		add    $0xa,%esi
		fild   0x50(%esp)
		faddp  %st,%st(1)
		mov    %ax,(%esp,%edx,1)
		call   func___CHP
		fistpl 0x4c(%esp)
		mov    0x4c(%esp),%eax
		mov    %si,0x14(%esp,%edx,1)
		mov    %ax,0x28(%esp,%edx,1)
		cmp    $0x280,%si
		jl     jump_25365
		xor    %ebx,%ebx
		mov    %bx,0x14(%esp,%edx,1)
	jump_25365:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x26(%esp,%edx,2),%esi
		mov    -0x2(%esp,%edx,2),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    %esi,%edx
		inc    %ecx
		call   func_1fffe
		cmp    $0xa,%cx
		jl     jump_252fa
		mov    0x54(%esp),%ecx
		add    $0x2,%ecx
		call   func_454d5
		mov    %cx,0x54(%esp)
		call   func_5e9e8
		mov    0x52(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0x8,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_252b8
		mov    $0x32,%eax
		call   func_4f4cd
		jmp    jump_252b8
	jump_253cf:
		call   func_1ffcd
		add    $0x5c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_253dc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xbc,%esp
		mov    %eax,%ebx
		mov    $data_7726d,%eax
		call   func_1fea4
		movswl %dx,%esi
		movswl %bx,%ebx
		mov    %esi,%edx
		mov    %ebx,%eax
		call   func_1124a
		mov    %ebx,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0xb8(%esp)
		mov    %esi,%eax
		call   func_10988
		mov    %eax,0xb4(%esp)
		xor    %eax,%eax
	jump_25425:
		movswl %ax,%edx
		xor    %ebx,%ebx
		inc    %eax
		mov    %bx,0x90(%esp,%edx,2)
		cmp    $0x12,%ax
		jl     jump_25425
		mov    $0x5,%eax
		call   func_1033b
		xor    %edi,%edi
		mov    $0xa,%ebp
	jump_2544a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%esi
		xor    %ecx,%ecx
		add    %edx,%esi
	jump_2547d:
		cmp    $0x48,%di
		jge    jump_254da
		movswl %cx,%edx
		add    %edx,%edx
		cmpw   $0x0,0x90(%esp,%edx,1)
		jne    jump_254da
		mov    0xb8(%esp),%eax
		mov    %ax,0x48(%esp,%edx,1)
		mov    0xb4(%esp),%eax
		mov    %ax,0x24(%esp,%edx,1)
		mov    $0xc,%eax
		call   func_499bd
		add    $0x4,%eax
		mov    %ax,(%esp,%edx,1)
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   func_499bd
		sub    $0x5,%eax
		mov    %bx,0x90(%esp,%edx,1)
		mov    %ax,0x6c(%esp,%edx,1)
	jump_254da:
		movswl %cx,%eax
		add    %eax,%eax
		mov    (%esp,%eax,1),%dx
		mov    0x24(%esp,%eax,1),%bx
		sub    %edx,%ebx
		mov    0x6c(%esp,%eax,1),%dx
		mov    %bx,0x24(%esp,%eax,1)
		mov    0x48(%esp,%eax,1),%bx
		add    %edx,%ebx
		mov    (%esp,%eax,1),%dx
		mov    %bx,0x48(%esp,%eax,1)
		dec    %edx
		mov    0x24(%esp,%eax,1),%bx
		mov    %dx,(%esp,%eax,1)
		cmp    $0xc7,%bx
		jle    jump_2551f
		xor    %edx,%edx
		mov    %dx,0x90(%esp,%eax,1)
	jump_2551f:
		movswl %cx,%eax
		add    %eax,%eax
		cmpw   $0x1,0x90(%esp,%eax,1)
		jne    jump_25544
		mov    %esi,%ebx
		mov    0x22(%esp,%eax,1),%edx
		mov    0x46(%esp,%eax,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
	jump_25544:
		inc    %ecx
		cmp    $0x12,%cx
		jl     jump_2547d
		call   func_454d5
		call   func_5e9e8
		movswl %di,%edx
		call   func_499e4
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		test   %edx,%edx
		jne    jump_25576
		mov    $0x32,%eax
		call   func_4f4cd
	jump_25576:
		inc    %edi
		cmp    $0x64,%di
		jl     jump_2544a
		call   func_1ffcd
		add    $0xbc,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_25591:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x15c,%esp
		mov    %eax,%ecx
		mov    %dx,0x150(%esp)
		lea    0x12c(%esp),%edi
		mov    $data_1fe46,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
	jump_255b9:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0xa,%ax
		jl     jump_255b9
		mov    $0xa,%eax
		xor    %edx,%edx
	jump_255d1:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x14,%ax
		jl     jump_255d1
		mov    $0x14,%eax
		xor    %edx,%edx
	jump_255e9:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x1e,%ax
		jl     jump_255e9
		mov    $0x1e,%eax
		xor    %edx,%edx
	jump_25601:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x28,%ax
		jl     jump_25601
		mov    $0x28,%eax
		xor    %edx,%edx
	jump_25619:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x32,%ax
		jl     jump_25619
		mov    $data_7726d,%eax
		mov    0x14e(%esp),%ebx
		call   func_1fea4
		movswl %cx,%esi
		sar    $0x10,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   func_1124a
		mov    %esi,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x154(%esp)
		mov    %ebx,%eax
		xor    %edx,%edx
		call   func_10988
		mov    %eax,0x158(%esp)
		mov    $0x5,%eax
		mov    %dx,0x14c(%esp)
		call   func_1033b
	jump_2567f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x12a(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x4,%edx
		sub    %eax,%edx
		lea    0xa(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		xor    %ecx,%ecx
		add    %eax,%edi
	jump_256c1:
		movswl %cx,%edx
		add    %edx,%edx
		fild   (%esp,%edx,1)
		fdivs  data_7727e
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x12c(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x154(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		fmulp  %st,%st(1)
		fild   0x158(%esp)
		faddp  %st,%st(1)
		mov    %ax,0xc8(%esp,%edx,1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		mov    %ax,0x64(%esp,%edx,1)
		mov    (%esp,%edx,1),%ax
		add    $0x5,%eax
		mov    %ax,(%esp,%edx,1)
		cmp    $0x280,%ax
		jl     jump_25742
		xor    %esi,%esi
		mov    %si,(%esp,%edx,1)
	jump_25742:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x62(%esp,%edx,2),%esi
		mov    0xc6(%esp,%edx,2),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    %esi,%edx
		inc    %ecx
		call   func_1fffe
		cmp    $0xa,%cx
		jl     jump_256c1
		mov    0x12c(%esp),%esi
		add    $0x7,%esi
		mov    %si,0x12c(%esp)
		cmp    $0xa0,%si
		jle    jump_257a2
		xor    %eax,%eax
		xor    %edx,%edx
	jump_25787:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0xa,%ax
		jl     jump_25787
		xor    %edi,%edi
		mov    %di,0x12c(%esp)
	jump_257a2:
		cmpw   $0xa,0x14c(%esp)
		jle    jump_258c3
		mov    0x12c(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x4,%edx
		sub    %eax,%edx
		lea    0xa(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		mov    $0xa,%ecx
		add    %eax,%edi
	jump_257e0:
		movswl %cx,%edx
		add    %edx,%edx
		fild   (%esp,%edx,1)
		fdivs  data_7727e
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x12e(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x154(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x148(%esp)
		fmulp  %st,%st(1)
		mov    (%esp,%edx,1),%si
		mov    0x148(%esp),%eax
		add    $0x4,%esi
		fild   0x158(%esp)
		faddp  %st,%st(1)
		mov    %ax,0xc8(%esp,%edx,1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		mov    %si,(%esp,%edx,1)
		mov    %ax,0x64(%esp,%edx,1)
		cmp    $0x280,%si
		jl     jump_25860
		xor    %ebx,%ebx
		mov    %bx,(%esp,%edx,1)
	jump_25860:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x62(%esp,%edx,2),%esi
		mov    0xc6(%esp,%edx,2),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    %esi,%edx
		inc    %ecx
		call   func_1fffe
		cmp    $0x14,%cx
		jl     jump_257e0
		mov    0x12e(%esp),%edx
		add    $0x5,%edx
		mov    %dx,0x12e(%esp)
		cmp    $0xa0,%dx
		jle    jump_258c3
		mov    $0xa,%eax
		xor    %edx,%edx
	jump_258a8:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x14,%ax
		jl     jump_258a8
		xor    %ecx,%ecx
		mov    %cx,0x12e(%esp)
	jump_258c3:
		cmpw   $0x14,0x14c(%esp)
		jle    jump_259e4
		mov    0x12e(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x4,%edx
		sub    %eax,%edx
		lea    0xa(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		mov    $0x14,%ecx
		add    %eax,%edi
	jump_25901:
		movswl %cx,%edx
		add    %edx,%edx
		fild   (%esp,%edx,1)
		fdivs  data_7727e
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x130(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x154(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x148(%esp)
		fmulp  %st,%st(1)
		mov    (%esp,%edx,1),%bx
		mov    0x148(%esp),%eax
		add    $0x4,%ebx
		fild   0x158(%esp)
		faddp  %st,%st(1)
		mov    %ax,0xc8(%esp,%edx,1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		mov    %bx,(%esp,%edx,1)
		mov    %ax,0x64(%esp,%edx,1)
		cmp    $0x280,%bx
		jl     jump_25981
		xor    %eax,%eax
		mov    %ax,(%esp,%edx,1)
	jump_25981:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x62(%esp,%edx,2),%esi
		mov    0xc6(%esp,%edx,2),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    %esi,%edx
		inc    %ecx
		call   func_1fffe
		cmp    $0x1e,%cx
		jl     jump_25901
		mov    0x130(%esp),%edi
		add    $0x5,%edi
		mov    %di,0x130(%esp)
		cmp    $0xa0,%di
		jle    jump_259e4
		mov    $0x14,%eax
		xor    %edx,%edx
	jump_259c9:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x1e,%ax
		jl     jump_259c9
		xor    %edx,%edx
		mov    %dx,0x130(%esp)
	jump_259e4:
		cmpw   $0x1e,0x14c(%esp)
		jle    jump_25b07
		mov    0x130(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x4,%edi
		sub    %eax,%edi
		add    $0xa,%edi
		imul   $0xc,%edi,%edi
		mov    $0x1e,%ecx
		add    $data_f0daa,%edi
	jump_25a21:
		movswl %cx,%edx
		add    %edx,%edx
		fild   (%esp,%edx,1)
		fdivs  data_7727e
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x132(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x154(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		fmulp  %st,%st(1)
		fild   0x158(%esp)
		faddp  %st,%st(1)
		mov    %ax,0xc8(%esp,%edx,1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		mov    %ax,0x64(%esp,%edx,1)
		mov    (%esp,%edx,1),%ax
		add    $0x4,%eax
		mov    %ax,(%esp,%edx,1)
		cmp    $0x280,%ax
		jl     jump_25aa2
		xor    %esi,%esi
		mov    %si,(%esp,%edx,1)
	jump_25aa2:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x62(%esp,%edx,2),%eax
		mov    0xc6(%esp,%edx,2),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_1fffe
		cmp    $0x28,%cx
		jl     jump_25a21
		mov    0x132(%esp),%ecx
		add    $0x5,%ecx
		mov    %cx,0x132(%esp)
		cmp    $0xa0,%cx
		jle    jump_25b07
		mov    $0x1e,%eax
		xor    %edx,%edx
	jump_25aec:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x28,%ax
		jl     jump_25aec
		xor    %edi,%edi
		mov    %di,0x132(%esp)
	jump_25b07:
		cmpw   $0x28,0x14c(%esp)
		jle    jump_25c2a
		mov    0x132(%esp),%edx
		sar    $0x10,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x4,%edx
		sub    %eax,%edx
		lea    0xa(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		mov    $0x28,%ecx
		add    %eax,%edi
	jump_25b45:
		movswl %cx,%edx
		add    %edx,%edx
		fild   (%esp,%edx,1)
		fdivs  data_7727e
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0x134(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x154(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0x148(%esp)
		fmulp  %st,%st(1)
		mov    (%esp,%edx,1),%si
		mov    0x148(%esp),%eax
		add    $0x4,%esi
		fild   0x158(%esp)
		faddp  %st,%st(1)
		mov    %ax,0xc8(%esp,%edx,1)
		call   func___CHP
		fistpl 0x148(%esp)
		mov    0x148(%esp),%eax
		mov    %si,(%esp,%edx,1)
		mov    %ax,0x64(%esp,%edx,1)
		cmp    $0x280,%si
		jl     jump_25bc5
		xor    %ebx,%ebx
		mov    %bx,(%esp,%edx,1)
	jump_25bc5:
		movswl %cx,%edx
		mov    %edi,%ebx
		mov    0x62(%esp,%edx,2),%eax
		mov    0xc6(%esp,%edx,2),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_1fffe
		cmp    $0x32,%cx
		jl     jump_25b45
		mov    0x134(%esp),%edx
		add    $0x5,%edx
		mov    %dx,0x134(%esp)
		cmp    $0xa0,%dx
		jle    jump_25c2a
		mov    $0x28,%eax
		xor    %edx,%edx
	jump_25c0f:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,(%esp,%ebx,2)
		add    $0x40,%edx
		cmp    $0x32,%ax
		jl     jump_25c0f
		xor    %ecx,%ecx
		mov    %cx,0x134(%esp)
	jump_25c2a:
		call   func_454d5
		call   func_5e9e8
		mov    0x14a(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_25c5d
		mov    $0x32,%eax
		call   func_4f4cd
	jump_25c5d:
		mov    0x14c(%esp),%ebx
		inc    %ebx
		mov    %bx,0x14c(%esp)
		cmp    $0x96,%bx
		jl     jump_2567f
		call   func_1ffcd
		add    $0x15c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_25c88:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		push   %eax
		push   %edx
		push   %ebx
		lea    0x18(%esp),%edi
		mov    $data_1fe50,%esi
		mov    $data_77282,%eax
		mov    0x2(%esp),%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		call   func_1124a
	jump_25cbe:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		mov    %eax,%edx
		mov    $0x15,%eax
		add    $0x2,%edx
		call   func_499bd
		add    %edx,%eax
		movswl %bx,%edx
		mov    %ax,0x24(%esp,%edx,2)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%ecx
		mov    $0x15,%eax
		sub    $0xc,%ecx
		call   func_499bd
		add    %ecx,%eax
		inc    %ebx
		mov    %ax,0xc(%esp,%edx,2)
		cmp    $0x5,%bx
		jl     jump_25cbe
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x6,%eax
		xor    %edi,%edi
		call   func_1033b
		mov    $0x15,%ebp
	jump_25d27:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_454b3
	jump_25d3f:
		movswl %cx,%edx
		add    %edx,%edx
		mov    0x18(%esp,%edx,1),%bx
		inc    %ebx
		mov    %bx,0x18(%esp,%edx,1)
		cmp    $0x9,%bx
		jne    jump_25d9a
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		mov    %eax,%ebx
		mov    %ebp,%eax
		add    $0x2,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,0x24(%esp,%edx,1)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%ebx
		mov    %ebp,%eax
		sub    $0xc,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,0xc(%esp,%edx,1)
		xor    %eax,%eax
		mov    %ax,0x18(%esp,%edx,1)
	jump_25d9a:
		movswl %cx,%edx
		mov    -0x2(%esp),%eax
		mov    0x16(%esp,%edx,2),%ebx
		sar    $0x10,%eax
		sar    $0x11,%ebx
		lea    (%eax,%eax,4),%eax
		add    %ebx,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		add    %eax,%ebx
		mov    0xa(%esp,%edx,2),%eax
		mov    0x22(%esp,%edx,2),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_1fffe
		cmp    $0x5,%cx
		jl     jump_25d3f
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x32,%di
		jl     jump_25d27
		call   func_1ffcd
		add    $0x30,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_25dfe:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x570,%esp
		mov    %eax,%ebp
		mov    %dl,0x56c(%esp)
		mov    $data_7728b,%eax
		mov    $0x6e,%edx
		call   func_1fea4
		mov    %dx,0x560(%esp)
		movsbl 0x0(%ebp),%eax
		movsbl 0x1(%ebp),%edx
		call   func_1124a
		mov    0x56c(%esp),%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %bx,0x564(%esp)
		mov    %ah,0x56c(%esp)
		mov    $0x8,%eax
		xor    %edx,%edx
		call   func_1033b
	jump_25e5c:
		movswl %dx,%eax
		xor    %ecx,%ecx
		inc    %edx
		mov    %cx,0x398(%esp,%eax,2)
		mov    %cx,0x430(%esp,%eax,2)
		cmp    $0x4b,%dx
		jl     jump_25e5c
		xor    %eax,%eax
	jump_25e7a:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_25e7a
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		xor    %esi,%esi
		call   func_5fc21
		mov    %si,0x568(%esp)
	jump_25eaf:
		mov    0x566(%esp),%eax
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		mov    0x568(%esp),%edi
		sar    $0x10,%eax
		add    $0x14,%edi
		push   %eax
		xor    %eax,%eax
		mov    %di,0x56c(%esp)
		call   func_5fd1c
		cmp    $0x64,%di
		jl     jump_25eaf
		mov    $0x32,%eax
		call   func_4f4cd
	jump_25eef:
		cmpw   $0x0,0x568(%esp)
		jle    jump_25f23
		mov    0x566(%esp),%eax
		mov    %esp,%ecx
		sar    $0x10,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		subw   $0xa,0x568(%esp)
		jmp    jump_25eef
	jump_25f23:
		xor    %eax,%eax
		mov    0x56c(%esp),%al
		imul   $0x19,%eax,%eax
		mov    0x562(%esp),%ecx
		sar    $0x10,%ecx
		cmp    %eax,%ecx
		jge    jump_261b5
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ecx,%eax
		mov    %ecx,%edx
		mov    $0x3,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%esi
		mov    $0xab,%eax
		add    %edx,%esi
		mov    0x55e(%esp),%edx
		mov    %esi,%ebx
		sar    $0x10,%edx
		call   func_1fffe
		xor    %eax,%eax
		jmp    jump_25fea
	jump_25f89:
		add    %ecx,%ecx
		cmpw   $0x0,0x430(%esp,%ecx,1)
		jne    jump_25fe9
		cmpw   $0x0,0x398(%esp,%ecx,1)
		jne    jump_25fe9
		mov    0x560(%esp),%eax
		mov    $0xab,%ebx
		mov    %ax,0x300(%esp,%ecx,1)
		mov    $0x15,%eax
		mov    %bx,0x4c8(%esp,%ecx,1)
		call   func_499bd
		sub    $0xa,%eax
		mov    %ax,0x430(%esp,%ecx,1)
		mov    $0x15,%eax
		call   func_499bd
		sub    $0xa,%eax
		mov    %ax,0x398(%esp,%ecx,1)
		jmp    jump_25ffd
	jump_25fe9:
		inc    %eax
	jump_25fea:
		xor    %edx,%edx
		mov    0x56c(%esp),%dl
		imul   $0x19,%edx,%edx
		movswl %ax,%ecx
		cmp    %edx,%ecx
		jl     jump_25f89
	jump_25ffd:
		xor    %edi,%edi
		jmp    jump_2615a
	jump_26004:
		lea    (%eax,%eax,1),%ecx
		cmpw   $0x0,0x430(%esp,%ecx,1)
		je     jump_26159
		cmpw   $0x0,0x398(%esp,%ecx,1)
		je     jump_26159
		mov    0x300(%esp,%ecx,1),%dx
		cmp    $0xbe,%dx
		jg     jump_260ce
		cmp    $0x5,%dx
		jl     jump_260ce
		mov    0x4c8(%esp,%ecx,1),%dx
		cmp    $0x5,%dx
		jl     jump_260ce
		cmp    $0x13b,%dx
		jg     jump_260ce
		mov    0x562(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		mov    $0x5,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		add    $0x3,%edx
		imul   $0xc,%edx,%esi
		mov    0x4c6(%esp,%ecx,1),%eax
		sar    $0x10,%eax
		mov    0x2fe(%esp,%ecx,1),%edx
		add    $data_f0daa,%esi
		sar    $0x10,%edx
		mov    %esi,%ebx
		call   func_1fffe
		mov    0x430(%esp,%ecx,1),%ax
		mov    0x4c8(%esp,%ecx,1),%dx
		mov    0x300(%esp,%ecx,1),%bx
		add    %eax,%edx
		add    0x398(%esp,%ecx,1),%bx
		mov    %dx,0x4c8(%esp,%ecx,1)
		mov    %bx,0x300(%esp,%ecx,1)
		jmp    jump_26140
	jump_260ce:
		movswl %di,%ecx
		xor    %eax,%eax
		mov    %ax,0x430(%esp,%ecx,2)
		mov    %ax,0x398(%esp,%ecx,2)
		mov    0x4(%esi),%ax
		add    $0xab,%eax
		mov    %ax,0x4c8(%esp,%ecx,2)
		mov    0x6(%esi),%ax
		mov    0x564(%esp),%ebx
		add    $0x65,%eax
		inc    %ebx
		mov    %ax,0x300(%esp,%ecx,2)
		mov    0x568(%esp),%ecx
		mov    %bx,0x564(%esp)
		cmp    $0x60,%cx
		je     jump_26140
		xor    %eax,%eax
		mov    $0x4,%edx
		mov    0x56c(%esp),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %dx,0x568(%esp)
	jump_26140:
		mov    $0xa,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_26159
		mov    $0x33,%eax
		call   func_4f4cd
	jump_26159:
		inc    %edi
	jump_2615a:
		xor    %edx,%edx
		mov    0x56c(%esp),%dl
		imul   $0x19,%edx,%edx
		movswl %di,%eax
		cmp    %edx,%eax
		jl     jump_26004
		call   func_5e9e8
		call   func_5e943
		mov    0x560(%esp),%ecx
		mov    0x566(%esp),%eax
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		dec    %ecx
		sar    $0x10,%eax
		mov    %cx,0x560(%esp)
		push   %eax
		lea    0x4(%esp),%ecx
		xor    %eax,%eax
		call   func_5fd1c
		call   func_499e4
		jmp    jump_25f23
	jump_261b5:
		call   func_45559
		mov    $0x64,%esi
	jump_261bf:
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		movswl %si,%eax
		mov    $0x100,%edx
		push   %eax
		xor    %eax,%eax
		sub    $0x4,%esi
		call   func_5fd1c
		cmp    $0x4,%si
		jg     jump_261bf
		call   func_1ffcd
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		add    $0x570,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_261fc:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		push   %eax
		push   %edx
		push   %ebx
		lea    0xc(%esp),%edi
		mov    $data_1fe5a,%esi
		mov    $0x28,%edx
		mov    $0x1,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_61147
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x4(%esp),%ebx
		call   func_11db2
		lea    0x8(%esp),%edx
		call   func_135eb
		mov    0x4(%esp),%ecx
		xor    %edx,%edx
		sub    $0x28,%ecx
	jump_2625d:
		mov    0x8(%esp),%ebx
		movswl %dx,%eax
		inc    %edx
		mov    0xc(%esp,%eax,2),%si
		mov    %cx,0x18(%esp,%eax,2)
		add    %esi,%ebx
		add    $0xa,%ecx
		mov    %bx,0xc(%esp,%eax,2)
		cmp    $0x5,%dx
		jl     jump_2625d
		mov    0x18(%esp),%eax
		sub    $0xa,%eax
		mov    %eax,0x2c(%esp)
		mov    0x20(%esp),%eax
		mov    %eax,0x28(%esp)
		mov    $data_77298,%eax
		call   func_1fea4
		mov    $0x32,%eax
		xor    %edi,%edi
		call   func_4f4cd
		mov    $0x4,%eax
		mov    %di,0x24(%esp)
		call   func_1033b
	jump_262b7:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x24(%esp),%ebx
		call   func_454b3
		cmp    $0x4,%bx
		jge    jump_262e9
		mov    0x22(%esp),%edi
		sar    $0x10,%edi
		imul   $0xc,%edi,%edi
		add    $data_f0daa,%edi
		jmp    jump_262ee
	jump_262e9:
		mov    $data_f0dda,%edi
	jump_262ee:
		mov    0x4(%esp),%eax
		add    0x6(%edi),%ax
		mov    0x4(%edi),%si
		movswl %ax,%edx
		mov    0x8(%esp),%eax
		add    %esi,%eax
		mov    0x8(%edi),%ebx
		cwtl
		call   func_5f305
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		add    $0x5,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		xor    %esi,%esi
		add    %eax,%edi
	jump_26322:
		movswl %si,%ecx
		add    %ecx,%ecx
		mov    %edi,%ebx
		mov    0x16(%esp,%ecx,1),%edx
		mov    0xa(%esp,%ecx,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		mov    0x18(%esp,%ecx,1),%ax
		sub    $0x4,%eax
		mov    0x2c(%esp),%edx
		mov    %ax,0x18(%esp,%ecx,1)
		cmp    %dx,%ax
		jge    jump_2635b
		mov    0x28(%esp),%eax
		mov    %ax,0x18(%esp,%ecx,1)
	jump_2635b:
		inc    %esi
		cmp    $0x5,%si
		jl     jump_26322
		call   func_5e9e8
		call   func_499e4
		mov    0x24(%esp),%eax
		inc    %eax
		mov    %ax,0x24(%esp)
		cmp    $0x1e,%ax
		jl     jump_262b7
	jump_26380:
		call   func_1ffcd
		call   func_61115
		add    $0x30,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_26391:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %edx
		mov    %bl,0x18(%esp)
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		xor    %edx,%edx
	jump_263d1:
		mov    (%esp),%eax
		sub    %edx,%eax
		cwtl
		call   func_10988
		mov    %eax,%ecx
		add    $0x4,%ecx
		movswl %dx,%eax
		inc    %edx
		mov    %cx,0x8(%esp,%eax,2)
		cmp    $0x3,%dx
		jl     jump_263d1
		mov    $data_772a4,%eax
		call   func_1fea4
		mov    $0x7,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    $0x32,%eax
		mov    %dx,0x10(%esp)
		call   func_4f4cd
		mov    $0x3,%ebp
	jump_2641a:
		mov    0xe(%esp),%ecx
		mov    $0x2,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		call   func_10aeb
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x6,%ebx
		mov    %edx,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		sar    %ecx
		test   %esi,%esi
		jne    jump_26491
		mov    0x15(%esp),%eax
		sar    $0x18,%eax
		imul   %ebx,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%esi
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		sub    %ecx,%eax
		add    $data_f0daa,%esi
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_12bee
		jmp    jump_264c6
	jump_26491:
		call   func_12bee
		mov    0x15(%esp),%eax
		sar    $0x18,%eax
		imul   %ebx,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%esi
		add    %eax,%esi
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		sub    %ecx,%eax
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
		call   func_1fffe
	jump_264c6:
		xor    %edi,%edi
		mov    %edi,0x14(%esp)
	jump_264cc:
		movswl %di,%eax
		add    %eax,%eax
		mov    0x8(%esp,%eax,1),%cx
		mov    %ecx,%edx
		inc    %edx
		mov    %dx,0x8(%esp,%eax,1)
		cmp    (%esp),%cx
		jle    jump_26501
		mov    0x4(%esi),%ecx
		mov    -0x2(%esp),%edx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		add    %edx,%ecx
		mov    0xe(%esp),%edx
		sar    $0x11,%edx
		sub    %edx,%ecx
		mov    %cx,0x8(%esp,%eax,1)
	jump_26501:
		movswl %di,%ecx
		mov    0x6(%esp,%ecx,2),%ecx
		sar    $0x10,%ecx
		mov    $0x3,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x12,%edx
		imul   $0xc,%edx,%esi
		mov    0x4(%esp),%eax
		add    $0x4,%eax
		mov    0x14(%esp),%edx
		add    $data_f0daa,%esi
		sub    %edx,%eax
		mov    %esi,%ebx
		cwtl
		mov    %ecx,%edx
		call   func_1fffe
		mov    0x14(%esp),%ebx
		add    $0x6,%ebx
		inc    %edi
		mov    %ebx,0x14(%esp)
		cmp    $0x3,%di
		jl     jump_264cc
		call   func_454d5
		mov    0x10(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,0x10(%esp)
		cmp    $0x28,%bx
		jl     jump_2641a
		call   func_1ffcd
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_26584:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    (%esp),%edx
		add    $0x6,%edx
		mov    $data_772b0,%eax
		mov    %dx,(%esp)
		call   func_1fea4
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0xa,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_265e8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		movswl %cx,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%eax
		imul   %ebx,%eax
		mov    %dl,0x8(%esp)
		xor    %edx,%edx
		mov    0x8(%esp),%dl
		add    %edx,%eax
		imul   $0xc,%eax,%ebx
		add    $data_f0daa,%ebx
		cmp    $0x5,%dl
		jae    jump_26632
		call   func_12bee
	jump_26632:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		cmpb   $0x4,0x8(%esp)
		jbe    jump_26651
		call   func_12bee
	jump_26651:
		call   func_454d5
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x1e,%cx
		jl     jump_265e8
		call   func_1ffcd
		add    $0xc,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_26672:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		push   %eax
		push   %edx
		push   %ebx
		lea    0x18(%esp),%edi
		mov    $data_1fe64,%esi
		mov    $0x28,%edx
		mov    $0x1,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_61147
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x4(%esp),%ebx
		call   func_11db2
		lea    0x8(%esp),%edx
		call   func_135eb
		mov    0x4(%esp),%ebx
		xor    %edx,%edx
		sub    $0x28,%ebx
	jump_266d3:
		mov    0x8(%esp),%ecx
		movswl %dx,%eax
		inc    %edx
		mov    0x18(%esp,%eax,2),%si
		mov    %bx,0xc(%esp,%eax,2)
		add    %esi,%ecx
		add    $0xa,%ebx
		mov    %cx,0x18(%esp,%eax,2)
		cmp    $0x5,%dx
		jl     jump_266d3
		mov    0x14(%esp),%eax
		mov    %eax,0x2c(%esp)
		mov    $data_772bb,%eax
		mov    0xc(%esp),%edi
		call   func_1fea4
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x4,%eax
		call   func_1033b
		xor    %eax,%eax
		sub    $0xa,%edi
		mov    %ax,0x28(%esp)
	jump_26729:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x28(%esp),%ecx
		call   func_454b3
		cmp    $0x4,%cx
		jge    jump_2675a
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		jmp    jump_2675f
	jump_2675a:
		mov    $data_f0dda,%eax
	jump_2675f:
		mov    0x4(%esp),%edx
		mov    0x8(%esp),%ecx
		mov    0x6(%eax),%si
		mov    0x8(%eax),%ebx
		add    %esi,%edx
		mov    0x4(%eax),%si
		mov    %ecx,%eax
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f305
		xor    %esi,%esi
	jump_26783:
		mov    -0x2(%esp),%eax
		movl   $0x3,0x24(%esp)
		movswl %si,%ecx
		sar    $0x10,%eax
		mov    %ecx,%edx
		lea    (%eax,%eax,2),%ebx
		sar    $0x1f,%edx
		mov    %ecx,%eax
		idivl  0x24(%esp)
		lea    0x5(%ebx),%eax
		add    %eax,%edx
		imul   $0xc,%edx,%ebx
		add    %ecx,%ecx
		mov    0x16(%esp,%ecx,1),%eax
		sar    $0x10,%eax
		mov    0xa(%esp,%ecx,1),%edx
		add    $data_f0daa,%ebx
		sar    $0x10,%edx
		mov    0x8(%ebx),%ebx
		call   func_5ee51
		mov    0xc(%esp,%ecx,1),%ax
		add    $0x4,%eax
		mov    0x2c(%esp),%edx
		mov    %ax,0xc(%esp,%ecx,1)
		cmp    %dx,%ax
		jle    jump_267e6
		mov    %di,0xc(%esp,%ecx,1)
	jump_267e6:
		inc    %esi
		cmp    $0x5,%si
		jl     jump_26783
		mov    0x28(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x28(%esp)
		cmp    $0x1e,%dx
		jl     jump_26729
		jmp    jump_26380


/*----------------------------------------------------------------*/
func_26810:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    %ebx,%edi
		mov    $0x28,%ebx
		mov    data_1fe6e,%ax
		mov    $0x2,%edx
		mov    %eax,0x8(%esp)
		lea    0x8(%esp),%eax
		call   func_611aa
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_772c5,%eax
		call   func_1fea4
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x4,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_26888:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %di,%eax
		shl    $0x2,%eax
		and    $0xff,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    -0x2(%esp),%esi
		add    $data_f0daa,%eax
		sar    $0x10,%esi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %esi,%edx
		mov    0x2(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		inc    %ecx
		call   func_5f29d
		call   func_5e9e8
		call   func_499e4
		cmp    $0x1e,%cx
		jl     jump_26888
	jump_268fa:
		call   func_1ffcd
		call   func_61115
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2690b:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		push   %edx
		mov    %bl,0xc(%esp)
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_772d1,%eax
		call   func_20021
		mov    $data_772dd,%eax
		call   func_1fea4
		mov    $0x5,%eax
		mov    $0xf,%edx
		call   func_1033b
		mov    $0xf0,%eax
		mov    $data_f0daa,%esi
		call   func_601e5
		mov    $0x32,%eax
		mov    $0x3c,%edi
		call   func_4f4cd
	jump_2698a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl %di,%ecx
		call   func_10aeb
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		cwtl
		mov    %ecx,%edx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x2,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    0x4(%esi),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		mov    %ecx,%eax
		sar    %eax
		mov    %eax,0xc(%esp)
		mov    0x6(%esp),%eax
		mov    0xc(%esp),%ebp
		sar    $0x10,%eax
		add    %eax,%ebp
		mov    0x2(%esi),%eax
		sub    $0x4,%edi
		sar    $0x10,%eax
		mov    0x8(%esi),%ebx
		add    %ebp,%eax
		call   func_5f611
		call   func_12bee
		call   func_454d5
		call   func_5e9e8
		call   func_602e3
		call   func_499e4
		cmp    $0x1,%di
		jg     jump_2698a
		cmpb   $0x0,0xc(%esp)
		jle    jump_26ab6
		mov    $0x2,%edi
		jmp    jump_26a9f
	jump_26a23:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		cwtl
		mov    %ecx,%edx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x2,%edx
		sar    $0x10,%eax
		sub    %edx,%eax
		mov    0x4(%esi),%edx
		sar    $0x10,%edx
		mov    0x6(%esp),%ebp
		add    %eax,%edx
		mov    %ecx,%eax
		sar    $0x10,%ebp
		sar    %eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x2(%esi),%ebp
		sar    $0x10,%ebp
		mov    0x8(%esi),%ebx
		add    %ebp,%eax
		call   func_5f570
		call   func_12bee
		call   func_454d5
		call   func_5e9e8
		call   func_602e3
		call   func_499e4
		movsbw 0xc(%esp),%ax
		shl    $0x2,%eax
		add    %eax,%edi
	jump_26a9f:
		mov    0x9(%esp),%eax
		sar    $0x18,%eax
		imul   $0x3c,%eax,%eax
		movswl %di,%ecx
		cmp    %eax,%ecx
		jl     jump_26a23
		jmp    jump_26afa
	jump_26ab6:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ebx
		call   func_10aeb
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_12bee
		call   func_454d5
		call   func_5e9e8
		call   func_602e3
		call   func_499e4
	jump_26afa:
		xor    %ecx,%ecx
	jump_26afc:
		call   func_602e3
		inc    %ecx
		call   func_499e4
		cmp    $0x1e,%cx
		jl     jump_26afc
		call   func_602bf
		call   func_1ffcd
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_26b1f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    $0x28,%ebx
		mov    data_1fe70,%eax
		mov    $0x4,%edx
		mov    %eax,0x8(%esp)
		lea    0x8(%esp),%eax
		call   func_611aa
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_772e9,%eax
		call   func_1fea4
		mov    $data_772f5,%eax
		call   func_20021
		mov    $0x5,%eax
		mov    $0xe,%edx
		call   func_1033b
		mov    $0xf0,%eax
		call   func_601e5
		mov    $0x32,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
	jump_26bae:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $data_f0daa,%ebx
		call   func_10aeb
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_12bee
		cmp    $0x9,%cx
		jge    jump_26bf6
		movswl %cx,%eax
		sar    %eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		jmp    jump_26bfb
	jump_26bf6:
		mov    $data_f0de6,%eax
	jump_26bfb:
		mov    (%esp),%edx
		mov    0x6(%eax),%si
		mov    0x8(%eax),%ebx
		add    %esi,%edx
		mov    0x4(%esp),%esi
		mov    0x4(%eax),%di
		mov    %esi,%eax
		add    %edi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f305
		cmp    $0x13,%cx
		jle    jump_26c67
		movswl %cx,%eax
		sub    $0x14,%eax
		mov    $0x9,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x6,%dx
		jge    jump_26c48
		mov    $0x1,%eax
		call   func_499bd
		add    $0x6,%eax
	jump_26c48:
		movswl %ax,%ebx
		imul   $0xc,%ebx,%ebx
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		call   func_1fffe
	jump_26c67:
		call   func_602e3
		call   func_454d5
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x30,%cx
		jl     jump_26bae
		call   func_602bf
		call   func_1ffcd
		call   func_61115
		jmp    jump_22af1


/*----------------------------------------------------------------*/
func_26c9a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x300,%esp
		push   %eax
		push   %edx
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_772ff,%eax
		call   func_1fea4
		xor    %eax,%eax
	jump_26ce4:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    0x8(%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_26ce4
		lea    0x8(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		mov    $0x33,%eax
		call   func_4f4cd
		mov    $0x1,%eax
		xor    %edi,%edi
		call   func_44d6e
		mov    $data_12824c,%ebp
		jmp    jump_26e00
	jump_26d32:
		xor    %esi,%esi
	jump_26d34:
		lea    0x8(%esp),%ecx
		mov    $0x100,%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		push   %eax
		xor    %eax,%eax
		add    $0x14,%esi
		call   func_5fd1c
		cmp    $0x64,%si
		jl     jump_26d34
		call   func_45559
	jump_26d58:
		test   %si,%si
		jle    jump_26d78
		lea    0x8(%esp),%ecx
		mov    $0x100,%edx
		movswl %si,%eax
		mov    %ebp,%ebx
		push   %eax
		xor    %eax,%eax
		sub    $0xa,%esi
		call   func_5fd1c
		jmp    jump_26d58
	jump_26d78:
		cmp    $0x1,%di
		je     jump_26e0a
		mov    $0x10,%eax
		call   func_1033b
		xor    %ecx,%ecx
		jmp    jump_26de9
	jump_26d90:
		imul   $0xc,%ebx,%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    (%esp),%eax
		sub    $0x20,%eax
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		add    $data_f0daa,%ebx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0x5,%cx
		jne    jump_26de8
		call   func_499e4
		call   func_499e4
		mov    $0x32,%eax
		call   func_4f4cd
	jump_26de8:
		inc    %ecx
	jump_26de9:
		xor    %eax,%eax
		movswl %cx,%ebx
		mov    data_f0da8,%ax
		cmp    %eax,%ebx
		jl     jump_26d90
		xor    %eax,%eax
		call   func_44d6e
		inc    %edi
	jump_26e00:
		cmp    $0x2,%di
		jl     jump_26d32
	jump_26e0a:
		call   func_45559
		call   func_1ffcd
		add    $0x308,%esp
		jmp    jump_27994


/*----------------------------------------------------------------*/
func_26e1f:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x44,%esp
		push   %eax
		push   %edx
		mov    %bl,0x48(%esp)
		lea    0x8(%esp),%edi
		mov    $data_1fe74,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    $data_77309,%eax
		lea    0x18(%esp),%edi
		mov    $data_1fe84,%esi
		mov    -0x2(%esp),%ecx
		mov    0x2(%esp),%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		sar    $0x10,%ecx
		lea    0x28(%esp),%edi
		mov    $func_1fe94,%esi
		sar    $0x10,%ebx
		mov    %ecx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    %ebx,%eax
		call   func_1124a
		mov    %ebx,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		mov    %ecx,%eax
		call   func_10988
		add    $0x4,%eax
		mov    $data_f0daa,%ebp
		mov    %ax,(%esp)
		mov    $0x7,%eax
		mov    $0x3c,%edx
		call   func_1033b
		mov    $0x32,%eax
		mov    %dx,0x44(%esp)
		call   func_4f4cd
	jump_26eb8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x42(%esp),%ecx
		call   func_10aeb
		sar    $0x10,%ecx
		call   func_12d65
		mov    %ecx,%eax
		mov    -0x2(%esp),%edx
		sar    %eax
		sar    $0x10,%edx
		lea    (%edx,%eax,1),%esi
		mov    data_f0e6e,%edx
		sar    $0x10,%edx
		add    %esi,%edx
		mov    0x2(%esp),%esi
		sar    $0x10,%esi
		add    %eax,%esi
		mov    data_f0e6c,%eax
		push   %ecx
		sar    $0x10,%eax
		mov    data_f0e72,%ebx
		add    %esi,%eax
		call   func_5f611
		xor    %esi,%esi
	jump_26f14:
		movswl %si,%ecx
		imul   $0xc,%ecx,%ebx
		mov    0x15(%esp,%ecx,1),%edx
		mov    0x25(%esp,%ecx,1),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		imul   %eax,%edx
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		sub    %edx,%edi
		mov    %edi,%edx
		mov    0x5(%esp,%ecx,1),%edi
		sar    $0x18,%edi
		imul   %edi,%eax
		mov    0x2(%esp),%edi
		sar    $0x10,%edi
		sub    %eax,%edi
		mov    0x8(%ebx,%ebp,1),%ebx
		mov    %edi,%eax
		call   func_5ee51
		mov    0x28(%esp,%ecx,1),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x28(%esp,%ecx,1)
		cmp    $0x4,%al
		jge    jump_26f69
		movb   $0xa,0x28(%esp,%ecx,1)
	jump_26f69:
		inc    %esi
		cmp    $0x10,%si
		jl     jump_26f14
		call   func_12e01
		call   func_454d5
		mov    0x44(%esp),%ebx
		call   func_5e9e8
		sub    $0x4,%ebx
		call   func_499e4
		mov    %bx,0x44(%esp)
		cmp    $0x1,%bx
		jg     jump_26eb8
		cmpb   $0x0,0x48(%esp)
		jle    jump_271e3
		mov    $0x2,%edi
		jmp    jump_27090
	jump_26faf:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12d65
		mov    -0x2(%esp),%edx
		mov    %ecx,%eax
		mov    data_f0e6e,%esi
		sar    %eax
		sar    $0x10,%edx
		sar    $0x10,%esi
		sub    %eax,%edx
		add    %esi,%edx
		mov    0x2(%esp),%esi
		sar    $0x10,%esi
		sub    %eax,%esi
		mov    data_f0e6c,%eax
		push   %ecx
		sar    $0x10,%eax
		mov    data_f0e72,%ebx
		add    %esi,%eax
		call   func_5f570
		xor    %esi,%esi
	jump_27003:
		movswl %si,%ecx
		imul   $0xc,%ecx,%eax
		add    $data_f0daa,%eax
		mov    0x15(%esp,%ecx,1),%edx
		mov    0x8(%eax),%ebx
		mov    0x25(%esp,%ecx,1),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		imul   %eax,%edx
		mov    %edx,0x38(%esp)
		mov    -0x2(%esp),%edx
		mov    0x38(%esp),%ebp
		sar    $0x10,%edx
		sub    %ebp,%edx
		mov    0x5(%esp,%ecx,1),%ebp
		sar    $0x18,%ebp
		imul   %ebp,%eax
		mov    0x2(%esp),%ebp
		sar    $0x10,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		call   func_5ee51
		mov    0x28(%esp,%ecx,1),%bl
		sub    $0x2,%bl
		mov    %bl,0x28(%esp,%ecx,1)
		cmp    $0x4,%bl
		jge    jump_2706a
		movswl %di,%eax
		sar    $0x3,%eax
		add    $0xa,%eax
		mov    %al,0x28(%esp,%ecx,1)
	jump_2706a:
		inc    %esi
		cmp    $0x10,%si
		jl     jump_27003
		call   func_12e01
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		movsbw 0x48(%esp),%ax
		shl    $0x2,%eax
		add    %eax,%edi
	jump_27090:
		mov    0x45(%esp),%eax
		sar    $0x18,%eax
		imul   $0x28,%eax,%eax
		movswl %di,%ecx
		cmp    %eax,%ecx
		jl     jump_26faf
		xor    %edx,%edx
		mov    %edx,0x40(%esp)
	jump_270ab:
		mov    -0x2(%esp),%esi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl %di,%ecx
		call   func_10aeb
		call   func_12d65
		sar    $0x10,%esi
		mov    %ecx,%eax
		mov    data_f0e6e,%edx
		sar    %eax
		sar    $0x10,%edx
		sub    %eax,%esi
		add    %esi,%edx
		mov    0x2(%esp),%esi
		sar    $0x10,%esi
		sub    %eax,%esi
		mov    %esi,%eax
		mov    data_f0e6c,%esi
		push   %ecx
		sar    $0x10,%esi
		mov    data_f0e72,%ebx
		add    %esi,%eax
		call   func_5f570
		xor    %esi,%esi
	jump_27105:
		movswl %si,%ecx
		imul   $0xc,%ecx,%eax
		add    $data_f0daa,%eax
		mov    0x15(%esp,%ecx,1),%edx
		mov    0x8(%eax),%ebx
		mov    0x25(%esp,%ecx,1),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		imul   %eax,%edx
		mov    %edx,0x38(%esp)
		mov    -0x2(%esp),%edx
		mov    0x38(%esp),%ebp
		sar    $0x10,%edx
		sub    %ebp,%edx
		mov    0x5(%esp,%ecx,1),%ebp
		sar    $0x18,%ebp
		imul   %ebp,%eax
		mov    0x2(%esp),%ebp
		sar    $0x10,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		call   func_5ee51
		mov    0x28(%esp,%ecx,1),%al
		sub    $0x2,%al
		mov    %al,0x28(%esp,%ecx,1)
		cmp    $0x4,%al
		jge    jump_2716a
		movswl %di,%eax
		sar    $0x3,%eax
		add    $0xa,%eax
		mov    %al,0x28(%esp,%ecx,1)
	jump_2716a:
		inc    %esi
		cmp    $0x10,%si
		jl     jump_27105
		mov    0x40(%esp),%eax
		xor    %ah,%ah
		and    $0x1,%al
		cwtl
		add    $0x11,%eax
		imul   $0xc,%eax,%ebx
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    0x2(%esp),%eax
		add    $data_f0daa,%ebx
		sar    $0x10,%eax
		call   func_1fffe
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_271b7
		mov    $0x33,%eax
		call   func_4f4cd
		call   func_499e4
	jump_271b7:
		call   func_12e01
		call   func_454d5
		mov    0x40(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %ebx,0x40(%esp)
		cmp    $0x1e,%bx
		jge    jump_272a3
		jmp    jump_270ab
	jump_271e3:
		xor    %esi,%esi
		mov    $data_f0daa,%ebp
		mov    %esi,0x3c(%esp)
	jump_271ee:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12d65
		mov    $0x4b,%edx
		mov    $0x82,%eax
		mov    data_f0e72,%ebx
		xor    %esi,%esi
		call   func_5ee51
	jump_27220:
		movswl %si,%ecx
		imul   $0xc,%ecx,%eax
		mov    0x15(%esp,%ecx,1),%edx
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x25(%esp,%ecx,1),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		imul   %eax,%edx
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		sub    %edx,%edi
		mov    %edi,%edx
		mov    0x5(%esp,%ecx,1),%edi
		sar    $0x18,%edi
		imul   %edi,%eax
		mov    0x2(%esp),%edi
		sar    $0x10,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		call   func_5ee51
		mov    0x28(%esp,%ecx,1),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x28(%esp,%ecx,1)
		cmp    $0x4,%al
		jge    jump_27275
		movb   $0xa,0x28(%esp,%ecx,1)
	jump_27275:
		inc    %esi
		cmp    $0x10,%si
		jl     jump_27220
		call   func_12e01
		call   func_454d5
		mov    0x3c(%esp),%edi
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		mov    %edi,0x3c(%esp)
		cmp    $0x1e,%di
		jl     jump_271ee
	jump_272a3:
		call   func_1ffcd
		jmp    jump_22624


/*----------------------------------------------------------------*/
func_272ad:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xd4,%esp
		push   %eax
		push   %edx
		mov    $0xa0,%edx
		mov    $data_77314,%eax
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%esi
		call   func_1fea4
		mov    %dx,0xd0(%esp)
		sar    $0x10,%ebx
		sar    $0x10,%esi
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_1124a
		mov    %esi,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		mov    %ebx,%eax
		call   func_10988
		add    $0x2,%eax
		mov    %ax,(%esp)
		mov    $0x3,%eax
		call   func_1033b
		flds   data_77321
		fdivs  data_77325
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fxch   %st(1)
		fmull  data_77329
		fild   0x4(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0xc8(%esp)
		fmull  data_77329
		mov    $data_f0daa,%edx
		xor    %ebx,%ebx
		mov    0xc8(%esp),%eax
		fild   (%esp)
		faddp  %st,%st(1)
		mov    %ax,0xd8(%esp)
		call   func___CHP
		fistpl 0xc8(%esp)
		mov    0xc8(%esp),%eax
		mov    %ebx,0xcc(%esp)
		mov    %eax,0xd4(%esp)
	jump_27382:
		mov    0xd8(%esp),%eax
		movswl %bx,%esi
		inc    %ebx
		mov    %ax,0x60(%esp,%esi,2)
		mov    0xd4(%esp),%eax
		mov    %edx,0x8(%esp,%esi,4)
		mov    %ax,0x8c(%esp,%esi,2)
		cmp    $0x15,%bx
		jl     jump_27382
		mov    $0x32,%eax
		call   func_4f4cd
	jump_273b5:
		mov    0xce(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffd6,%eax
		jle    jump_27546
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0xd0(%esp),%edi
		call   func_454b3
		test   %di,%di
		jl     jump_274ba
		fild   0xcc(%esp)
		fdivs  data_77325
		fld    %st(0)
		fcos
		fxch   %st(1)
		fsin
		fild   0xd0(%esp)
		fxch   %st(2)
		fmul   %st(2),%st
		fild   0x4(%esp)
		faddp  %st,%st(1)
		call   func___CHP
		fistpl 0xc8(%esp)
		fmulp  %st,%st(1)
		mov    0xc8(%esp),%eax
		fild   (%esp)
		faddp  %st,%st(1)
		mov    %ax,0xd8(%esp)
		call   func___CHP
		fistpl 0xc8(%esp)
		mov    0xc8(%esp),%eax
		mov    %eax,0xd4(%esp)
		mov    0xcc(%esp),%eax
		add    $0x14,%eax
		mov    %eax,0xcc(%esp)
		cmp    $0x280,%ax
		jl     jump_27472
		xor    %ebx,%ebx
		mov    %ebx,0xcc(%esp)
	jump_27472:
		mov    0xd8(%esp),%eax
		mov    0xce(%esp),%edx
		mov    %ax,0x60(%esp)
		mov    0xd4(%esp),%eax
		sar    $0x10,%edx
		mov    %ax,0x8c(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    $0x8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%eax
		add    %edx,%eax
		mov    %eax,0x8(%esp)
	jump_274ba:
		mov    $0x15,%edx
	jump_274bf:
		movswl %dx,%ebx
		mov    0x5e(%esp,%ebx,2),%cx
		mov    %cx,0x60(%esp,%ebx,2)
		mov    0x8a(%esp,%ebx,2),%cx
		mov    %ebx,%eax
		mov    %cx,0x8c(%esp,%ebx,2)
		mov    0x4(%esp,%ebx,4),%ebx
		dec    %edx
		mov    %ebx,0x8(%esp,%eax,4)
		test   %dx,%dx
		jg     jump_274bf
		xor    %ecx,%ecx
	jump_274ee:
		movswl %cx,%edx
		mov    0x8(%esp,%edx,4),%eax
		mov    0x8c(%esp,%edx,2),%bx
		add    0x6(%eax),%bx
		mov    0x60(%esp,%edx,2),%dx
		movswl %bx,%edi
		add    0x4(%eax),%dx
		mov    0x8(%eax),%esi
		movswl %dx,%eax
		mov    %esi,%ebx
		mov    %edi,%edx
		add    $0x3,%ecx
		call   func_5efb9
		cmp    $0x16,%cx
		jl     jump_274ee
		mov    0xd0(%esp),%ecx
		call   func_5e9e8
		sub    $0x2,%ecx
		call   func_499e4
		mov    %cx,0xd0(%esp)
		jmp    jump_273b5
	jump_27546:
		mov    0xd4(%esp),%esi
		mov    %esi,%ecx
		sub    $0x1e,%esi
	jump_27552:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $data_f0daa,%ebx
		call   func_454b3
		mov    0xd6(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_5e9e8
		dec    %ecx
		call   func_499e4
		cmp    %si,%cx
		jne    jump_27552
		call   func_284a3
		call   func_1ffcd
		add    $0xdc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_275a4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    %bl,0x8(%esp)
		mov    $0x28,%edx
		mov    $0x1,%eax
		call   func_61147
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		call   func_11db2
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_77331,%eax
		call   func_1fea4
		mov    $0x4,%eax
		call   func_1033b
		mov    $0x32,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
	jump_27610:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmp    $0x4,%cx
		jge    jump_27639
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		jmp    jump_2763e
	jump_27639:
		mov    $data_f0dda,%eax
	jump_2763e:
		mov    (%esp),%edx
		mov    0x6(%eax),%si
		mov    0x8(%eax),%ebx
		add    %esi,%edx
		mov    0x4(%esp),%esi
		mov    0x4(%eax),%di
		mov    %esi,%eax
		add    %edi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f305
		cmp    $0x5,%cx
		jle    jump_2769f
		movswl %cx,%edx
		mov    $0x6,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    0x5(%esp),%ebx
		sar    $0x18,%ebx
		imul   $0x6,%ebx,%ebx
		add    $0x5,%ebx
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    0x2(%esp),%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $data_f0daa,%ebx
		call   func_1fffe
	jump_2769f:
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x1e,%cx
		jl     jump_27610
		jmp    jump_268fa


/*----------------------------------------------------------------*/
func_276b9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30c,%esp
		mov    %eax,%ebx
		mov    $data_77339,%eax
		mov    $0xa,%ecx
		call   func_1fea4
		movswl %dx,%edx
		mov    %cx,0x304(%esp)
		movswl %bx,%eax
		mov    %ecx,%esi
		call   func_1124a
		mov    $0x5,%eax
		mov    %cx,0x308(%esp)
		call   func_1033b
		mov    $0x32,%eax
		xor    %ecx,%esi
		call   func_4f4cd
	jump_27708:
		movswl %si,%eax
		sar    %eax
		test   $0x1,%al
		je     jump_2771c
		xor    %edx,%edx
		mov    %dx,data_ba838
		jmp    jump_27725
	jump_2771c:
		movw   $0xfffc,data_ba838
	jump_27725:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12d65
		movswl %si,%eax
		sar    $0x2,%eax
		imul   $0xc,%eax,%eax
		mov    0x302(%esp),%ecx
		mov    0x308(%esp),%edi
		mov    0x306(%esp),%edx
		inc    %edi
		sar    $0x10,%edx
		mov    %di,0x308(%esp)
		mov    0x304(%esp),%edi
		push   %edx
		mov    0x30a(%esp),%edx
		inc    %edi
		sar    $0x11,%edx
		mov    %di,0x308(%esp)
		mov    $0x64,%edi
		sub    %edx,%edi
		add    $data_f0daa,%eax
		mov    %edi,%edx
		mov    0x4(%eax),%edi
		mov    $0xa6,%ebp
		sar    $0x10,%edi
		mov    0x8(%eax),%ebx
		add    %edi,%edx
		mov    0x306(%esp),%edi
		mov    0x2(%eax),%eax
		sar    $0x11,%edi
		sar    $0x10,%eax
		sub    %edi,%ebp
		sar    $0x10,%ecx
		add    %ebp,%eax
		inc    %esi
		call   func_5f570
		call   func_12e01
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		cmp    $0x1c,%si
		jl     jump_27708
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f945
		xor    %eax,%eax
	jump_277ee:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_277ee
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		xor    %esi,%esi
		mov    $0x33,%eax
		xor    %edi,%edi
		call   func_4f4cd
	jump_27827:
		call   func_5e943
		mov    %esp,%ecx
		movswl %si,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0xfe,%edx
		xor    %eax,%eax
		call   func_5fd1c
		movswl %di,%eax
		sar    %eax
		test   $0x1,%al
		je     jump_27857
		xor    %edx,%edx
		mov    %dx,data_ba838
		jmp    jump_27860
	jump_27857:
		movw   $0xfffc,data_ba838
	jump_27860:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x3,%ebx
		call   func_454b3
		movswl %di,%edx
		call   func_12d65
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		lea    0x4(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    0x308(%esp),%ebx
		mov    0x304(%esp),%ecx
		add    $0x3,%ebx
		mov    $0x64,%ebp
		mov    %bx,0x308(%esp)
		add    $0x2,%esi
		mov    0x306(%esp),%edx
		add    $0x3,%ecx
		sar    $0x10,%edx
		mov    %cx,0x304(%esp)
		push   %edx
		sar    %edx
		add    $data_f0daa,%eax
		mov    0x306(%esp),%ecx
		sub    %edx,%ebp
		mov    0x4(%eax),%edx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		add    %ebp,%edx
		mov    %ecx,%ebp
		mov    0x8(%eax),%ebx
		sar    %ebp
		mov    0x2(%eax),%eax
		mov    %ebp,0x304(%esp)
		mov    $0xa6,%ebp
		sar    $0x10,%eax
		sub    0x304(%esp),%ebp
		inc    %edi
		add    %ebp,%eax
		call   func_5f570
		call   func_12e01
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		cmp    $0x64,%si
		jl     jump_27827
		mov    $0xc,%eax
		call   func_1033b
		call   func_45559
		call   func_499e4
	jump_2793c:
		cmp    $0x3,%si
		jle    jump_27963
		call   func_5e943
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		movswl %si,%eax
		mov    $0xfe,%edx
		push   %eax
		xor    %eax,%eax
		sub    $0x3,%esi
		call   func_5fd1c
		jmp    jump_2793c
	jump_27963:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %ecx,%ecx
		mov    $0xc,%ebx
		mov    %cx,data_ba838
		mov    %bx,data_7001c
	jump_27989:
		call   func_1ffcd
		add    $0x30c,%esp
	jump_27994:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2799a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30c,%esp
		mov    %eax,%ebx
		mov    $0xc,%ecx
		xor    %eax,%eax
		movswl %dx,%edx
		mov    %ax,data_ba838
		mov    $data_77346,%eax
		mov    %cx,data_7001c
		call   func_1fea4
		movswl %bx,%eax
		call   func_1124a
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0xa,%esi
		call   func_5f945
		mov    $0x5,%eax
		mov    %esi,%edi
		call   func_1033b
		mov    $0x32,%eax
		xor    %edx,%edx
		call   func_4f4cd
		mov    %dx,0x304(%esp)
	jump_27a03:
		mov    0x302(%esp),%eax
		sar    $0x11,%eax
		test   $0x1,%al
		je     jump_27a1c
		xor    %ebx,%ebx
		mov    %bx,data_ba838
		jmp    jump_27a25
	jump_27a1c:
		movw   $0xfffc,data_ba838
	jump_27a25:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12d65
		mov    0x302(%esp),%eax
		sar    $0x12,%eax
		imul   $0xc,%eax,%eax
		movswl %di,%edx
		inc    %edi
		push   %edx
		movswl %di,%edx
		mov    $0x64,%ebp
		sar    %edx
		add    $data_f0daa,%eax
		movswl %si,%ecx
		sub    %edx,%ebp
		mov    0x4(%eax),%edx
		inc    %esi
		sar    $0x10,%edx
		add    %ebp,%edx
		movswl %si,%ebp
		mov    0x8(%eax),%ebx
		sar    %ebp
		mov    0x2(%eax),%eax
		mov    %ebp,0x304(%esp)
		mov    $0xa6,%ebp
		sar    $0x10,%eax
		sub    0x304(%esp),%ebp
		add    %ebp,%eax
		call   func_5f570
		call   func_12e01
		call   func_454d5
		mov    0x304(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,0x304(%esp)
		cmp    $0x18,%bx
		jl     jump_27a03
		xor    %eax,%eax
		mov    %ax,0x308(%esp)
	jump_27acf:
		mov    0x306(%esp),%eax
		sar    $0x11,%eax
		test   $0x1,%al
		je     jump_27ae8
		xor    %ebx,%ebx
		mov    %bx,data_ba838
		jmp    jump_27af1
	jump_27ae8:
		movw   $0xfffc,data_ba838
	jump_27af1:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    0x306(%esp),%edx
		mov    $0x2,%ebx
		sar    $0x10,%edx
		call   func_12d65
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x4,%edx
		imul   $0xc,%edx,%eax
		add    $0x3,%edi
		mov    $0x64,%ebp
		movswl %di,%edx
		add    $data_f0daa,%eax
		push   %edx
		sar    %edx
		add    $0x3,%esi
		sub    %edx,%ebp
		mov    0x4(%eax),%edx
		movswl %si,%ecx
		sar    $0x10,%edx
		add    %ebp,%edx
		mov    %ecx,%ebp
		mov    0x8(%eax),%ebx
		sar    %ebp
		mov    0x2(%eax),%eax
		mov    %ebp,0x304(%esp)
		mov    $0xa6,%ebp
		sar    $0x10,%eax
		sub    0x304(%esp),%ebp
		add    %ebp,%eax
		call   func_5f570
		call   func_12e01
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		xor    %edx,%edx
	jump_27b88:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    (%esp,%eax,1),%bl
		cmp    $0x3e,%bl
		jae    jump_27b9f
		mov    %bl,%cl
		inc    %cl
		mov    %cl,(%esp,%eax,1)
		jmp    jump_27ba7
	jump_27b9f:
		mov    %bl,%bh
		sub    $0xa,%bh
		mov    %bh,(%esp,%eax,1)
	jump_27ba7:
		inc    %edx
		cmp    $0x100,%dx
		jl     jump_27b88
		mov    %esp,%ebx
		mov    $0x100,%edx
		mov    0x308(%esp),%ecx
		xor    %eax,%eax
		inc    %ecx
		call   func_5f9ae
		mov    %cx,0x308(%esp)
		cmp    $0x18,%cx
		jl     jump_27acf
		xor    %edx,%edx
	jump_27bd9:
		movswl %dx,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%dx
		jl     jump_27bd9
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0x64,%esi
		call   func_5fc21
		call   func_45559
	jump_27c0f:
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		movswl %si,%eax
		mov    $0x100,%edx
		push   %eax
		xor    %eax,%eax
		sub    $0x4,%esi
		call   func_5fd1c
		cmp    $0x4,%si
		jg     jump_27c0f
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0xc,%ecx
		call   func_5f9ae
		xor    %esi,%esi
		mov    %cx,data_7001c
		mov    %si,data_ba838
		jmp    jump_27989


/*----------------------------------------------------------------*/
func_27c5a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x320,%esp
		mov    %eax,%ebx
		mov    $data_77339,%eax
		mov    $0x1,%ecx
		call   func_1fea4
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %edi,%edi
		call   func_1124a
		mov    $0x5,%eax
		mov    %cx,0x314(%esp)
		call   func_1033b
		mov    $0x32,%eax
		mov    %cx,0x31c(%esp)
		call   func_4f4cd
	jump_27ca7:
		movswl %di,%eax
		sar    %eax
		test   $0x1,%al
		je     jump_27cbb
		xor    %ecx,%ecx
		mov    %cx,data_ba838
		jmp    jump_27cc4
	jump_27cbb:
		movw   $0xfffc,data_ba838
	jump_27cc4:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12d65
		movswl %di,%eax
		sar    $0x2,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%esi
		add    %eax,%esi
		mov    0x31a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x320(%esp),%eax
		mov    0x316(%esp),%ecx
		inc    %eax
		mov    0x318(%esp),%edx
		mov    %ax,0x320(%esp)
		inc    %edx
		mov    0x31e(%esp),%eax
		mov    %dx,0x318(%esp)
		sar    $0x10,%eax
		mov    $0x46,%edx
		mov    %eax,0x30c(%esp)
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		mov    0x316(%esp),%ebp
		sar    $0x10,%edx
		sar    $0x10,%ebp
		add    %eax,%edx
		mov    %ebp,%eax
		sar    %eax
		mov    %eax,0x304(%esp)
		mov    $0x64,%eax
		sub    0x304(%esp),%eax
		mov    %eax,0x308(%esp)
		mov    0x2(%esi),%eax
		sar    $0x10,%eax
		mov    %eax,0x304(%esp)
		mov    0x308(%esp),%eax
		sar    $0x10,%ecx
		add    0x304(%esp),%eax
		mov    0x8(%esi),%ebx
		call   func_5f570
		incw   0x31c(%esp)
		mov    0x31a(%esp),%eax
		mov    0x308(%esp),%edx
		sar    $0x10,%eax
		push   %edx
		mov    %eax,0x308(%esp)
		mov    %eax,%edx
		mov    0x318(%esp),%eax
		inc    %eax
		sar    %edx
		mov    %ax,0x318(%esp)
		mov    $0x46,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x4(%esi),%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%eax
		mov    $0xe8,%ecx
		mov    %eax,0x304(%esp)
		sar    %eax
		sub    %eax,%ecx
		mov    0x2(%esi),%eax
		mov    0x8(%esi),%ebx
		sar    $0x10,%eax
		add    %ecx,%eax
		mov    %ebp,%ecx
		call   func_5f570
		mov    0x31c(%esp),%edx
		inc    %edx
		mov    0x304(%esp),%ebp
		mov    %dx,0x31c(%esp)
		push   %ebp
		mov    0x31e(%esp),%ebp
		sar    $0x10,%ebp
		mov    %ebp,%eax
		mov    $0x64,%edx
		sar    %eax
		sub    %eax,%edx
		mov    0x318(%esp),%ecx
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		inc    %ecx
		sar    $0x10,%edx
		mov    %cx,0x318(%esp)
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%eax
		mov    $0xa6,%ecx
		mov    %eax,0x314(%esp)
		sar    %eax
		sub    %eax,%ecx
		mov    0x2(%esi),%eax
		mov    0x8(%esi),%ebx
		sar    $0x10,%eax
		add    %ecx,%eax
		mov    0x304(%esp),%ecx
		call   func_5f570
		incw   0x31c(%esp)
		mov    0x31a(%esp),%eax
		mov    0x314(%esp),%ecx
		sar    $0x10,%eax
		push   %ebp
		mov    %eax,0x304(%esp)
		mov    %eax,%edx
		mov    $0x82,%eax
		sar    %edx
		inc    %ecx
		sub    %edx,%eax
		mov    %cx,0x318(%esp)
		mov    %eax,%edx
		mov    0x4(%esi),%eax
		mov    0x316(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %eax,%edx
		mov    %ebp,%eax
		mov    $0x64,%ecx
		sar    %eax
		sub    %eax,%ecx
		mov    0x2(%esi),%eax
		mov    0x8(%esi),%ebx
		sar    $0x10,%eax
		add    %ecx,%eax
		mov    0x314(%esp),%ecx
		call   func_5f570
		mov    0x300(%esp),%eax
		push   %eax
		mov    0x320(%esp),%eax
		mov    0x318(%esp),%edx
		inc    %eax
		inc    %edx
		mov    %ax,0x320(%esp)
		mov    %dx,0x318(%esp)
		mov    0x31e(%esp),%eax
		mov    $0x82,%edx
		sar    $0x11,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		mov    $0xe8,%ecx
		sar    $0x10,%edx
		mov    0x8(%esi),%ebx
		add    %eax,%edx
		mov    0x316(%esp),%eax
		mov    0x2(%esi),%esi
		sar    $0x11,%eax
		sar    $0x10,%esi
		sub    %eax,%ecx
		lea    (%ecx,%esi,1),%eax
		mov    %ebp,%ecx
		inc    %edi
		call   func_5f570
		call   func_12e01
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%di
		jl     jump_27ca7
		xor    %eax,%eax
	jump_27f70:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_27f70
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0x1,%edi
		call   func_5fc21
		mov    $0x33,%eax
		mov    %di,0x318(%esp)
		call   func_4f4cd
	jump_27fb2:
		mov    %esp,%ecx
		movswl %di,%eax
		mov    $data_12824c,%ebx
		push   %eax
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		mov    0x316(%esp),%eax
		sar    $0x11,%eax
		add    $0x3,%edi
		test   $0x1,%al
		je     jump_27fe5
		xor    %esi,%esi
		mov    %si,data_ba838
		jmp    jump_27fee
	jump_27fe5:
		movw   $0xfffc,data_ba838
	jump_27fee:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    0x316(%esp),%edx
		mov    $0x3,%ebx
		sar    $0x10,%edx
		call   func_12d65
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x4,%edx
		imul   $0xc,%edx,%edx
		mov    0x31a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x320(%esp),%eax
		inc    %eax
		mov    $data_f0daa,%esi
		mov    %ax,0x320(%esp)
		mov    0x316(%esp),%ecx
		mov    0x31e(%esp),%eax
		add    %edx,%esi
		sar    $0x10,%eax
		mov    0x318(%esp),%edx
		mov    %eax,0x304(%esp)
		inc    %edx
		sar    %eax
		mov    %dx,0x318(%esp)
		mov    $0x46,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		mov    0x316(%esp),%ebp
		sar    $0x10,%edx
		sar    $0x10,%ebp
		add    %eax,%edx
		mov    %ebp,%eax
		sar    %eax
		mov    %eax,0x308(%esp)
		mov    $0x64,%eax
		sub    0x308(%esp),%eax
		mov    %eax,0x30c(%esp)
		mov    0x2(%esi),%eax
		sar    $0x10,%eax
		mov    %eax,0x308(%esp)
		mov    0x30c(%esp),%eax
		sar    $0x10,%ecx
		add    0x308(%esp),%eax
		mov    0x8(%esi),%ebx
		call   func_5f570
		mov    0x31c(%esp),%ecx
		inc    %ecx
		mov    0x300(%esp),%eax
		mov    %cx,0x31c(%esp)
		push   %eax
		mov    0x31e(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x308(%esp)
		mov    %eax,%edx
		mov    0x318(%esp),%eax
		inc    %eax
		sar    %edx
		mov    %ax,0x318(%esp)
		mov    $0x46,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x4(%esi),%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%eax
		mov    $0xe8,%ecx
		mov    %eax,0x304(%esp)
		sar    %eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x2(%esi),%ecx
		sar    $0x10,%ecx
		mov    0x8(%esi),%ebx
		add    %ecx,%eax
		mov    %ebp,%ecx
		call   func_5f570
		mov    0x31c(%esp),%edx
		inc    %edx
		mov    0x304(%esp),%ebp
		mov    %dx,0x31c(%esp)
		mov    0x314(%esp),%ecx
		mov    0x31a(%esp),%eax
		push   %ebp
		sar    $0x10,%eax
		mov    $0x64,%edx
		mov    %eax,0x310(%esp)
		sar    %eax
		inc    %ecx
		sub    %eax,%edx
		mov    %cx,0x318(%esp)
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		mov    0x316(%esp),%ebp
		sar    $0x10,%edx
		sar    $0x10,%ebp
		add    %eax,%edx
		mov    %ebp,%eax
		mov    $0xa6,%ecx
		sar    %eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x2(%esi),%ecx
		sar    $0x10,%ecx
		mov    0x8(%esi),%ebx
		add    %ecx,%eax
		mov    0x304(%esp),%ecx
		call   func_5f570
		mov    0x30c(%esp),%eax
		push   %eax
		mov    0x320(%esp),%eax
		inc    %eax
		mov    0x318(%esp),%edx
		mov    %ax,0x320(%esp)
		inc    %edx
		mov    0x31e(%esp),%eax
		mov    %dx,0x318(%esp)
		sar    $0x10,%eax
		mov    $0x82,%edx
		mov    %eax,0x308(%esp)
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x4(%esi),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%eax
		mov    $0x64,%ecx
		mov    %eax,0x30c(%esp)
		sar    %eax
		sub    %eax,%ecx
		mov    0x2(%esi),%eax
		mov    0x8(%esi),%ebx
		sar    $0x10,%eax
		add    %ecx,%eax
		mov    %ebp,%ecx
		call   func_5f570
		mov    0x31c(%esp),%ecx
		mov    0x314(%esp),%edx
		inc    %ecx
		inc    %edx
		mov    %cx,0x31c(%esp)
		mov    %dx,0x314(%esp)
		mov    0x31a(%esp),%eax
		mov    $0x82,%edx
		sar    $0x11,%eax
		sub    %eax,%edx
		mov    0x4(%esi),%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    0x312(%esp),%eax
		mov    $0xe8,%ecx
		sar    $0x11,%eax
		mov    0x304(%esp),%ebp
		sub    %eax,%ecx
		mov    0x2(%esi),%eax
		mov    0x8(%esi),%ebx
		sar    $0x10,%eax
		push   %ebp
		add    %ecx,%eax
		mov    0x30c(%esp),%ecx
		call   func_5f570
		call   func_12e01
		mov    0x318(%esp),%ebx
		call   func_454d5
		inc    %ebx
		call   func_5e9e8
		mov    %bx,0x318(%esp)
		cmp    $0x64,%di
		jl     jump_27fb2
		call   func_45559
	jump_282d5:
		cmp    $0x3,%di
		jle    jump_282fc
		call   func_5e943
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		movswl %di,%eax
		mov    $0xfe,%edx
		push   %eax
		xor    %eax,%eax
		sub    $0x3,%edi
		call   func_5fd1c
		jmp    jump_282d5
	jump_282fc:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0xc,%esi
		call   func_5f9ae
		xor    %edi,%edi
		mov    %si,data_7001c
		mov    %di,data_ba838
		call   func_1ffcd
		add    $0x320,%esp
		jmp    jump_27994
.data
data_28332:
		.ascii  "\x10\x11\x12\x13\x14\x15\x16\x17"
		.ascii  "\x1f\x1e\x1d\x1d\x1b\x1a\x19\x18"
		.ascii  "\x0f\x07\x06\x05\x04\x03\x02\x01"
data_2834a:
		.ascii  "\xff\x00\x00\xff\x01\x00\x00\x01"
data_28352:
		.ascii  "\x98\x3a\x10\x27\xe0\x2e"
data_28358:
		.ascii  "\x01"
data_28359:
		.ascii  "\x14\x00\x1e\x00\x04"
		.fill   0xa
		.ascii  "\x28\x00\x1a\x0a\x08"
		.fill   0xa
		.ascii  "\x1e\x00\x1e\x00\x0a"
		.fill   0xa
		.ascii  "\x28\x00\x23\x00\x0f"
		.fill   0xa
		.ascii  "\x3c\x00\x1e\x00\x14"
		.fill   0xa
		.ascii  "\x46\x1e\x14\x00\x1e\x0a\x03\x03"
		.ascii  "\x03"
		.fill   0x6
		.ascii  "\x3c\x1e\x34\x00\x20\x0a"
		.fill   0x9
		.ascii  "\x28\x3c\x28\x00\x14\x14\x04"
		.fill   0x8
		.ascii  "\x1e\x46\x1e\x00\x14\x14\x00\x04"
		.fill   0x7
		.ascii  "\x1e\x32\x46\x00\x0f\x14\x00\x00"
		.ascii  "\x04"
		.fill   0x6
		.ascii  "\x1e\x00\x23\x00\x08\x00\x00\x00"
		.ascii  "\x04"
		.fill   0x6
data_283fe:
		.ascii  "\xd0\x07\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\x58\x1b\x00\x00"
data_2840a:
		.ascii  "\x88\x13\x00\x00\x40\x1f\x00\x00"
		.ascii  "\xe0\x2e\x00\x00\x98\x3a\x00\x00"
		.ascii  "\x50\x46\x00\x00\x20\x4e\x00\x00"
.text


/*----------------------------------------------------------------*/
func_28422:
/*----------------------------------------------------------------*/
		mov    %ax,data_74492
		ret


/*----------------------------------------------------------------*/
func_28429:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x11(%eax),%cl
		mov    %ecx,%eax
		shl    $0x3,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		movswl %dx,%eax
		cmpb   $0x0,data_72310(%ecx,%eax,1)
		setne  %al
		movswl %dx,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    0x2e(%ecx,%ebx,1),%dl
		add    %edx,%eax
		cmp    $0x3,%ax
		jle    jump_28461
		mov    $0x3,%eax
	jump_28461:
		dec    %eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_28465:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		mov    0x5b(%eax),%al
		mov    $0x36,%edx
		and    $0xff,%eax
		call   func_184a4
		cbtw
		add    %ebx,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_28480:
/*----------------------------------------------------------------*/
		call   func_174cf
		cmp    $0x2,%al
		jne    jump_28495
		movswl %dx,%eax
		mov    data_753a8(,%eax,2),%ax
		ret
	jump_28495:
		movswl %dx,%eax
		mov    data_753a8(,%eax,2),%ax
		add    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_284a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x304,%esp
		xor    %edx,%edx
		mov    %dx,0x300(%esp)
	jump_284b8:
		mov    0x2fe(%esp),%esi
		sar    $0x10,%esi
		mov    0x300(%esp),%ebx
		lea    (%esi,%esi,2),%esi
		inc    %ebx
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		mov    %bx,0x300(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%bx
		jl     jump_284b8
		call   func_45559
		push   $0x2
		lea    0x4(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		mov    0x2fe(%esp),%ebx
		mov    $data_12824c,%ecx
		sar    $0x10,%ebx
		mov    $0x100,%edx
		push   %ebx
		xor    %eax,%eax
		lea    0x4(%esp),%ebx
		call   func_49a3e
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		add    $0x304,%esp
	jump_2853a:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_28540:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		lea    0x4(%esp),%ebx
		mov    0x60(%eax),%ecx
		mov    %esp,%edx
		sar    $0x18,%ecx
		call   func_1a1de
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    0x2(%esp),%edx
		movswl %di,%eax
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		jmp    jump_2ba86


/*----------------------------------------------------------------*/
func_28596:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		testb  $0x80,0x15(%eax)
		jne    jump_285a6
		cmpb   $0x7,0x5c(%ebx)
		jb     jump_285ab
	jump_285a6:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_285ab:
		xor    %eax,%eax
		jmp    jump_285bc
	jump_285af:
		movswl %ax,%edx
		cmp    data_f0648(,%edx,4),%ebx
		je     jump_285a6
		inc    %eax
	jump_285bc:
		cmp    data_f0b9e,%ax
		jl     jump_285af
		mov    data_f0b9c,%edx
		sar    $0x10,%edx
		mov    $0x1,%eax
		mov    %ebx,data_f0648(,%edx,4)
		add    %ax,data_f0b9e
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_285e4:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		xor    %edx,%edx
		mov    0x41(%eax),%dl
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x3,%ebx
		add    %ebx,%edx
		shl    $0x2,%edx
		movswl %cx,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		cmp    $0x64,%ax
		jge    jump_2861a
		mov    $0x64,%ebx
		jmp    jump_28625
	jump_2861a:
		cmp    $0xc8,%ax
		jle    jump_28625
		mov    $0xc8,%ebx
	jump_28625:
		movswl %bx,%edx
		imul   %ebp,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		xor    %ecx,%ecx
		mov    %eax,%ebx
		mov    0x15(%edi),%ah
		mov    0x59(%edi),%cl
		test   $0x20,%ah
		je     jump_28649
		add    $0x14,%ecx
	jump_28649:
		mov    $0x64,%eax
		sub    %ecx,%eax
		mov    0x10(%esp),%edx
		mov    %eax,%ecx
		cmp    $0x3,%dx
		jne    jump_28661
		mov    $0x64,%ecx
	jump_28661:
		movswl %cx,%edx
		imul   %ebx,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5b(%esi),%al
		call   func_184a4
		movsbw %al,%cx
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5a(%esi),%al
		call   func_184a4
		cbtw
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5d(%esi),%al
		call   func_184a4
		cbtw
		mov    data_ba84d,%dl
		add    %eax,%ecx
		cmp    $0x1,%dl
		jne    jump_286c1
		cmpw   $0x2,0x10(%esp)
		je     jump_286e3
	jump_286c1:
		cmpb   $0x2,data_ba84d
		jne    jump_286d2
		cmpw   $0x1,0x10(%esp)
		je     jump_286e3
	jump_286d2:
		cmpb   $0x3,data_ba84d
		jne    jump_286e6
		cmpw   $0x0,0x10(%esp)
		jne    jump_286e6
	jump_286e3:
		add    $0x32,%ecx
	jump_286e6:
		movswl %cx,%edx
		imul   %ebx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%ebx
		cmp    $0xffffffff,%edx
		je     jump_28720
		mov    %edi,%eax
		call   func_1762c
		mov    %ebx,%edx
		imul   %eax,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
	jump_28720:
		mov    %ebx,%eax
	jump_28722:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_28728:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %bx,0xc(%esp)
		mov    %cx,0x4(%esp)
		xor    %edx,%edx
		mov    %dx,0x8(%esp)
		jmp    jump_2879b
	jump_28744:
		mov    0x6(%esp),%edi
		mov    0x2(%esp),%edx
		mov    0xa(%esp),%ecx
		mov    (%esp),%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%edi
		push   %edx
		mov    data_f0648(,%edi,4),%esi
		sar    $0x10,%ecx
		mov    %esi,%edx
		call   func_285e4
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_45bfb
		mov    0x48(%esi),%edx
		sub    %ecx,%edx
		mov    %edi,%ebx
		mov    %edx,0x48(%esi)
		mov    %esi,%eax
		mov    0x60(%esi),%edx
		mov    0x8(%esp),%ecx
		sar    $0x18,%edx
		inc    %ecx
		call   func_45ed2
		mov    %cx,0x8(%esp)
	jump_2879b:
		mov    0x8(%esp),%edx
		cmp    data_f0b9e,%dx
		jl     jump_28744
	jump_287a8:
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_287af:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    $0x3,%eax
		mov    $0x1,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_287ca:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
		mov    %si,0x4(%esp)
		jmp    jump_2882b
	jump_287e9:
		mov    -0x2(%esp),%edi
		mov    0x2(%esp),%esi
		sar    $0x10,%edi
		sar    $0x10,%esi
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    data_f0648(,%esi,4),%eax
		call   func_45f29
		mov    data_f0648(,%esi,4),%eax
		mov    0xb(%eax),%ecx
		sar    $0x18,%ecx
		mov    %edi,%ebx
		mov    data_70a5f(%ecx),%ecx
		mov    %esi,%edx
		sar    $0x18,%ecx
		call   func_45ccb
		incw   0x4(%esp)
	jump_2882b:
		mov    0x4(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_287e9
		mov    (%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,(%esp)
		cmp    $0x19,%bx
		jl     jump_287ca
		xor    %edx,%edx
		jmp    jump_28868
	jump_28858:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_28868:
		cmp    data_f0b9e,%dx
		jl     jump_28858
		mov    $0x24,%eax
		call   func_499da
		add    $0x8,%esp
		jmp    jump_2853a


/*----------------------------------------------------------------*/
func_28883:
/*----------------------------------------------------------------*/
		mov    %eax,data_f13ac
		ret


/*----------------------------------------------------------------*/
func_28889:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1124a
		movsbl (%ebx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,(%esp)
		movsbl 0x1(%ebx),%eax
		call   func_10988
		mov    %eax,%edi
		mov    0x61(%ebx),%dx
		sub    $0x14,%edi
		cmp    $0x12c,%dx
		jge    jump_288f2
		mov    $0x20,%eax
		movb   $0x7,0x64(%ebx)
		call   func_1033b
		xor    %esi,%esi
	jump_288d9:
		call   func_45559
		mov    0x64(%ebx),%ah
		inc    %ah
		inc    %esi
		mov    %ah,0x64(%ebx)
		call   func_499e4
		cmp    $0x2,%si
		jl     jump_288d9
	jump_288f2:
		mov    $0x4,%eax
		call   func_1033b
		xor    %esi,%esi
	jump_288fe:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_454b3
		movswl %si,%ecx
		push   $0x11
		mov    0x2(%esp),%eax
		mov    data_f13ac,%ebx
		movswl %di,%edx
		sar    $0x10,%eax
		call   func_484f9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x24,%si
		jl     jump_288fe
		add    $0x4,%esp
		jmp    jump_2853a


/*----------------------------------------------------------------*/
func_28947:
/*----------------------------------------------------------------*/
		push   %ecx
		xor    %ecx,%ecx
		mov    0x2b(%eax),%cl
		xor    %eax,%eax
		mov    0x2b(%edx),%al
		sub    %eax,%ecx
		add    %ecx,%ebx
		cmp    $0xa,%bx
		jge    jump_28963
		mov    $0xa,%ebx
		jmp    jump_2896e
	jump_28963:
		cmp    $0x46,%bx
		jle    jump_2896e
		mov    $0x46,%ebx
	jump_2896e:
		mov    $0x64,%eax
		call   func_499bd
		cmp    %bx,%ax
		setl   %al
		xor    %ah,%ah
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_28982:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    data_74492,%bx
		mov    %dx,data_f0b9e
		cmp    $0x1,%bx
		jne    jump_289db
		movswl %cx,%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_41715
		test   %ax,%ax
		jne    jump_289c0
	jump_289b6:
		mov    $0xffffffff,%eax
		jmp    jump_28722
	jump_289c0:
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_11db2
		call   func_28596
		test   %ax,%ax
		jne    jump_28a7f
		jmp    jump_289b6
	jump_289db:
		movswl %cx,%edx
		mov    %ebp,%eax
		call   func_28465
		movswl %ax,%edx
		mov    %ebp,%eax
		mov    0x10(%esp),%ecx
		call   func_28540
		test   %cx,%cx
		jne    jump_28a0a
		mov    $0x1,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_13d02
	jump_28a0a:
		mov    $0x1,%eax
		call   func_44d67
		call   func_45559
	jump_28a19:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28a35
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_289b6
	jump_28a35:
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_28a19
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_28a75
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    0x10(%esp),%ax
		jne    jump_28a75
		mov    %ebx,%eax
		call   func_28596
	jump_28a75:
		cmpw   $0x0,data_f0b9e
		je     jump_28a19
	jump_28a7f:
		xor    %eax,%eax
		call   func_44d67
		mov    %ebp,%eax
		call   func_28889
		mov    $0x1,%eax
		jmp    jump_28722


/*----------------------------------------------------------------*/
func_28a97:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		xor    %edx,%edx
		movswl %bx,%ebx
		mov    %dx,data_f0b9e
		call   func_13f8a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_28abd:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_28b1e
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_28abd
		mov    0xb(%eax),%edx
		mov    0x9(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    %cx,%ax
		jne    jump_28abd
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_28abd
	jump_28b1e:
		add    $0x8,%esp
		ret    $0x4


/*----------------------------------------------------------------*/
func_28b24:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x4(%esp)
		cmpw   $0x0,data_74492
		je     jump_28b94
		mov    0x16(%esp),%eax
		mov    0x2(%esp),%ecx
		mov    %edi,%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		mov    %eax,0x4(%esp)
		mov    %esi,%eax
		call   func_419f1
		test   %ax,%ax
		jne    jump_28b6a
	jump_28b60:
		mov    $0xffffffff,%eax
		jmp    jump_28c70
	jump_28b6a:
		mov    $0x1,%ecx
		mov    0xb(%ebp),%eax
		mov    (%esp),%ebx
		sar    $0x18,%eax
		movswl (%edi),%edx
		push   %eax
		movswl (%esi),%eax
		call   func_28a97
		cmpw   $0x0,data_f0b9e
		jne    jump_28c64
		jmp    jump_28b60
	jump_28b94:
		mov    0x2(%esp),%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_28465
		mov    %ax,0x4(%esp)
	jump_28ba7:
		mov    $0x1,%eax
		mov    0x2(%esp),%edx
		call   func_44d67
		sar    $0x10,%edx
		mov    %ebp,%eax
		mov    0x1c(%esp),%ecx
		call   func_28540
		test   %cx,%cx
		jne    jump_28bda
		mov    $0x1,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_13d02
	jump_28bda:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28bf9
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_28b60
	jump_28bf9:
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_28bda
		mov    0x1a(%esp),%ecx
		mov    0x16(%esp),%ebx
		mov    0xb(%ebp),%eax
		movswl (%edi),%edx
		sar    $0x18,%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		push   %eax
		movswl (%esi),%eax
		call   func_28a97
		cmpw   $0x0,data_f0b9e
		jle    jump_28c4f
		mov    %ebp,%eax
		movswl (%edi),%ebx
		movswl (%esi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28c4f
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_28c4f:
		cmpw   $0x0,data_f0b9e
		je     jump_28ba7
		xor    %eax,%eax
		call   func_44d67
	jump_28c64:
		mov    %ebp,%eax
		call   func_28889
		mov    $0x1,%eax
	jump_28c70:
		add    $0x8,%esp
	jump_28c73:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8

vtable_28c7a:
		.long   func_28cb8
		.long   func_28cc7
		.long   func_28cce
		.long   func_28cd5


/*----------------------------------------------------------------*/
func_28c8a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %cx,0x4(%esp)
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    0x63(%ebx),%al
		cmp    $0x3,%al
		ja     jump_28ce2
		and    $0xff,%eax
		jmp    *vtable_28c7a(,%eax,4)


/*----------------------------------------------------------------*/
func_28cb8:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%eax
	jump_28cbd:
		mov    %edx,0xc(%esp)
		mov    %eax,0x8(%esp)
		jmp    jump_28ce2


/*----------------------------------------------------------------*/
func_28cc7:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ecx
		jmp    jump_28cda


/*----------------------------------------------------------------*/
func_28cce:
/*----------------------------------------------------------------*/
		mov    $0x4,%eax
		jmp    jump_28cbd


/*----------------------------------------------------------------*/
func_28cd5:
/*----------------------------------------------------------------*/
		mov    $0x4,%ecx
	jump_28cda:
		mov    %edx,0x8(%esp)
		mov    %ecx,0xc(%esp)
	jump_28ce2:
		cmpw   $0x1,data_74492
		jne    jump_28d9e
		mov    0x2(%esp),%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
		sar    $0x10,%ecx
		call   func_41bf5
		test   %ax,%ax
		jne    jump_28d11
	jump_28d07:
		mov    $0xffffffff,%eax
		jmp    jump_28ecf
	jump_28d11:
		xor    %ecx,%ecx
		push   $0x3
		mov    %cx,data_f0b9e
		mov    0x10(%esp),%edx
		mov    0x0(%ebp),%ax
		mov    0xc(%esp),%ecx
		add    %edx,%eax
		mov    0x60(%esi),%ebx
		movswl %ax,%edx
		mov    (%edi),%ax
		sar    $0x18,%ebx
		add    %ecx,%eax
		mov    $0x9,%ecx
		cwtl
		call   func_1a452
	jump_28d43:
		mov    %esp,%edx
		lea    0x10(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_28d8b
		mov    -0x2(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_28d43
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_28d43
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_28d43
	jump_28d8b:
		cmpw   $0x0,data_f0b9e
		jne    jump_28ebc
		jmp    jump_28d07
	jump_28d9e:
		mov    $0x1,%eax
		mov    0x2(%esp),%edx
		call   func_44d67
		sar    $0x10,%edx
		mov    %esi,%eax
		call   func_28465
		mov    %ax,0x4(%esp)
	jump_28dbb:
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_28540
	jump_28dc9:
		mov    %esi,%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28de8
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_28d07
	jump_28de8:
		movswl 0x0(%ebp),%edx
		movswl (%edi),%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_28dc9
		call   func_13f8a
		push   $0x3
		mov    0x10(%esp),%edx
		mov    0x0(%ebp),%ax
		mov    0xc(%esp),%ecx
		add    %edx,%eax
		mov    0x60(%esi),%ebx
		movswl %ax,%edx
		mov    (%edi),%ax
		sar    $0x18,%ebx
		add    %ecx,%eax
		mov    $0x9,%ecx
		cwtl
		call   func_1a452
	jump_28e27:
		mov    %esp,%edx
		lea    0x10(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_28e87
		mov    -0x2(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    -0x2(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_28e27
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_28e27
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_28e27
	jump_28e87:
		cmpw   $0x0,data_f0b9e
		jle    jump_28eae
		mov    %esi,%eax
		movswl 0x0(%ebp),%ebx
		movswl (%edi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28eae
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_28eae:
		cmpw   $0x0,data_f0b9e
		je     jump_28dbb
	jump_28ebc:
		xor    %eax,%eax
		call   func_44d67
		mov    %esi,%eax
		call   func_28889
	jump_28eca:
		mov    $0x1,%eax
	jump_28ecf:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_28ed6:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    %ebx,%edi
		test   %dx,%dx
		jle    jump_28ef1
		mov    $0x7,%eax
		jmp    jump_28ef6
	jump_28ef1:
		mov    $0x5,%eax
	jump_28ef6:
		push   $0x1
		lea    0xc(%esp),%edx
		movswl %ax,%ecx
		mov    %esi,%ebx
		lea    0x4(%esp),%eax
		call   func_28982
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_28f1a
		mov    $0xffffffff,%eax
		jmp    jump_29143
	jump_28f1a:
		cmp    $0x1,%di
		jb     jump_28f35
		jbe    jump_29019
		cmp    $0x2,%di
		je     jump_290dc
		jmp    jump_2912b
	jump_28f35:
		test   %di,%di
		jne    jump_2912b
		mov    0x4(%esp),%ebx
		cmp    $0x1,%bx
		jb     jump_28f59
		jbe    jump_28fa3
		cmp    $0x2,%bx
		je     jump_28fe4
		jmp    jump_2912b
	jump_28f59:
		test   %bx,%bx
		jne    jump_2912b
		mov    $0x32,%edx
		mov    $data_7767b,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77687,%eax
		call   func_4f460
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		xor    %ecx,%ecx
		call   func_2016a
		mov    $0x14,%ebx
		mov    $0xbb8,%edx
		jmp    jump_29012
	jump_28fa3:
		mov    $0x32,%edx
		mov    $data_7767b,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77687,%eax
		call   func_4f460
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		xor    %ecx,%ecx
		call   func_2016a
		mov    $0x14,%ebx
		mov    $0x1194,%edx
		jmp    jump_29012
	jump_28fe4:
		mov    $0x32,%edx
		mov    $data_77692,%eax
		mov    $0x14,%ebx
		call   func_4f460
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_203cc
	jump_2900d:
		mov    $0x1770,%edx
	jump_29012:
		mov    %esi,%eax
		jmp    jump_29126
	jump_29019:
		cmpw   $0x2,0x4(%esp)
		jge    jump_2902d
		mov    $0x32,%edx
		mov    $data_7769e,%eax
		jmp    jump_29037
	jump_2902d:
		mov    $0x32,%edx
		mov    $data_776aa,%eax
	jump_29037:
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_776b6,%eax
		mov    0x4(%esp),%ecx
		call   func_4f460
		cmp    $0x1,%cx
		jb     jump_29062
		jbe    jump_29095
		cmp    $0x2,%cx
		je     jump_290bb
		jmp    jump_2912b
	jump_29062:
		test   %cx,%cx
		jne    jump_2912b
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_22172
		mov    $0x14,%ebx
		mov    $0xbb8,%edx
	jump_2908c:
		mov    %esi,%eax
		xor    %ecx,%ecx
		jmp    jump_29126
	jump_29095:
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		mov    $0x1,%ecx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_22172
		mov    $0x14,%ebx
		mov    $0x1194,%edx
		jmp    jump_2908c
	jump_290bb:
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		xor    %ecx,%ecx
		call   func_22486
		mov    $0x14,%ebx
		jmp    jump_2900d
	jump_290dc:
		mov    $0x32,%edx
		mov    $data_776c1,%eax
		mov    0x1(%esp),%ecx
		call   func_4f460
		mov    0x6(%esp),%ebx
		mov    -0x2(%esp),%edx
		sar    $0x18,%ecx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_23882
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		imul   $0x5dc,%edx,%edx
		mov    $0x2,%ecx
		mov    $0x14,%ebx
		mov    %esi,%eax
		add    $0xbb8,%edx
	jump_29126:
		call   func_28728
	jump_2912b:
		mov    %esi,%eax
		call   func_12124
		call   func_287af
		mov    %esi,%eax
		call   func_1ed45
		mov    $0x1,%eax
	jump_29143:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2914a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		mov    %al,%bl
		mov    $0x6,%ecx
		mov    %esp,%edi
		mov    $data_28332,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    data_f0648,%eax
		cmpb   $0x7,0x5c(%eax)
		jae    jump_2926b
		add    $0x2,%dl
		cmp    $0x2,%bl
		jb     jump_29181
		jbe    jump_2919a
		cmp    $0x4,%bl
		je     jump_291b1
		jmp    jump_291ca
	jump_29181:
		cmp    $0x1,%bl
		jne    jump_291ca
		movsbl %dl,%edx
		xor    %edi,%edi
		mov    data_74488(,%edx,2),%dx
		mov    %di,0x18(%esp)
		jmp    jump_291c6
	jump_2919a:
		movsbl %dl,%edx
		mov    $0x1,%esi
		mov    data_74488(,%edx,2),%dx
		mov    %si,0x18(%esp)
		jmp    jump_291c6
	jump_291b1:
		movsbl %dl,%edx
		mov    $0x2,%ecx
		mov    data_74488(,%edx,2),%dx
		mov    %cx,0x18(%esp)
	jump_291c6:
		mov    %dx,0x16(%eax)
	jump_291ca:
		mov    data_f0648,%eax
		testb  $0x7,0x15(%eax)
		je     jump_29205
		call   func_45559
		mov    data_f0648,%eax
		mov    0x12(%eax),%eax
		sar    $0x18,%eax
		push   %eax
		push   $data_776cb
		push   $0x1
		push   $0x1
		push   $0x0
		push   $0x0
		call   func_60944
		add    $0x18,%esp
		call   func_5e9e8
		call   w_dos_getch
	jump_29205:
		mov    data_f0648,%eax
		andb   $0xf8,0x15(%eax)
		mov    data_f0648,%eax
		or     %bl,0x15(%eax)
		mov    $0xc,%eax
		call   func_1033b
		mov    data_f0648,%eax
		xor    %ebx,%ebx
		movb   $0x0,0x64(%eax)
		call   func_45559
	jump_29230:
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		movswl %bx,%edx
		shl    $0x3,%eax
		add    %eax,%edx
		mov    -0x3(%esp,%edx,1),%edx
		mov    data_f0648,%eax
		sar    $0x18,%edx
		inc    %ebx
		call   func_13669
		call   func_5e9e8
		call   func_499e4
		cmp    $0x8,%bx
		jl     jump_29230
		mov    data_f0648,%eax
		call   func_12124
	jump_2926b:
		add    $0x1c,%esp
	jump_2926e:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_29273:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    %bx,(%esp)
		cmp    $0x1,%dx
		jle    jump_29291
		mov    $0x7,%edi
		jmp    jump_29296
	jump_29291:
		mov    $0x5,%edi
	jump_29296:
		cmpw   $0x1,data_74492
		jne    jump_292ca
		lea    0xc(%esp),%edx
		lea    0x8(%esp),%eax
		movswl %di,%ecx
		mov    %esi,%ebx
		call   func_4189c
		test   %ax,%ax
		jne    jump_292c1
	jump_292b7:
		mov    $0xffffffff,%eax
		jmp    jump_29430
	jump_292c1:
		mov    %esi,%eax
		call   func_28889
		jmp    jump_292ea
	jump_292ca:
		push   $0x0
		lea    0x10(%esp),%edx
		lea    0xc(%esp),%eax
		movswl %di,%ecx
		mov    %esi,%ebx
		call   func_28982
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_292b7
		cmpb   $0x4,0x5c(%esi)
		ja     jump_292ca
	jump_292ea:
		mov    $0x32,%edx
		mov    $data_776d8,%eax
		call   func_4f460
		mov    $0x32,%eax
		mov    (%esp),%ecx
		call   func_4f4cd
		cmp    $0x2,%cx
		jb     jump_2931d
		jbe    jump_29374
		cmp    $0x4,%cx
		je     jump_293d4
		jmp    jump_29411
	jump_2931d:
		cmp    $0x1,%cx
		jne    jump_29411
		mov    0x4(%esp),%ebx
		cmp    $0x2,%bx
		je     jump_2935a
		push   $0x1
		mov    %ebx,%eax
		mov    0xe(%esp),%edx
		add    $0x8,%eax
		mov    $0x1,%ecx
		movswl %ax,%ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_204e8
		jmp    jump_29411
	jump_2935a:
		mov    0xa(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_5637d
		jmp    jump_29411
	jump_29374:
		mov    0x4(%esp),%ebx
		cmp    $0x1,%bx
		jb     jump_2938b
		jbe    jump_293aa
		cmp    $0x2,%bx
		je     jump_293bf
		jmp    jump_29411
	jump_2938b:
		test   %bx,%bx
		jne    jump_29411
		push   $0x2
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		mov    $0x5,%ebx
		jmp    jump_29406
	jump_293aa:
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_22767
		jmp    jump_29411
	jump_293bf:
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_229cc
		jmp    jump_29411
	jump_293d4:
		cmpw   $0x2,0x4(%esp)
		jne    jump_293f2
		push   $0x2
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		mov    $0x7,%ebx
		jmp    jump_29406
	jump_293f2:
		push   $0x2
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		mov    $0x6,%ebx
	jump_29406:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2262c
	jump_29411:
		mov    %esi,%eax
		mov    0x1(%esp),%edx
		call   func_12124
		mov    -0x3(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_2914a
	jump_2942b:
		mov    $0x1,%eax
	jump_29430:
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_29437:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ebp
		mov    %dx,0x4(%esp)
		mov    %bx,(%esp)
		mov    %ecx,%edi
		cmp    $0x2,%dx
		jne    jump_29457
		sub    $0x14,%ebx
		mov    %bx,(%esp)
	jump_29457:
		xor    %esi,%esi
		jmp    jump_29500
	jump_2945e:
		mov    -0x2(%esp),%ebx
		movswl %si,%ecx
		mov    %ebp,%eax
		shl    $0x2,%ecx
		sar    $0x10,%ebx
		mov    data_f0648(%ecx),%edx
		call   func_28947
		cmp    $0x1,%ax
		jne    jump_294ff
		mov    data_f0648(%ecx),%eax
		cmpw   $0x12c,0x61(%eax)
		jge    jump_294ff
		andb   $0xf8,0x1e(%eax)
		mov    data_f0648(%ecx),%eax
		mov    0x4(%esp),%dl
		mov    0x1e(%eax),%dh
		or     %dl,%dh
		mov    0x4(%esp),%ebx
		mov    %dh,0x1e(%eax)
		cmp    $0x2,%bx
		jb     jump_294be
		jbe    jump_294df
		cmp    $0x4,%bx
		je     jump_294c4
		jmp    jump_294ff
	jump_294be:
		cmp    $0x1,%bx
		jne    jump_294ff
	jump_294c4:
		movswl %si,%eax
		movswl %di,%edx
		mov    data_f0648(,%eax,4),%eax
		mov    data_7448a(,%edx,2),%dx
		mov    %dx,0x1f(%eax)
		jmp    jump_294ff
	jump_294df:
		movswl %di,%eax
		mov    data_f0648(%ecx),%edx
		mov    data_74488(,%eax,2),%ax
		mov    %ax,0x1f(%edx)
		mov    data_f0648(%ecx),%eax
		call   func_197ad
	jump_294ff:
		inc    %esi
	jump_29500:
		cmp    data_f0b9e,%si
		jl     jump_2945e
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_29514:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %dx,0xc(%esp)
		mov    %bx,0x8(%esp)
		cmp    $0x1,%dx
		jne    jump_29552
		mov    $0x5,%ecx
		mov    %esp,%edx
		mov    %eax,%ebx
		lea    0x4(%esp),%eax
		call   func_28c8a
	jump_2953e:
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_295f5
	jump_29548:
		mov    $0xffffffff,%eax
		jmp    jump_29430
	jump_29552:
		mov    0xc(%esp),%eax
		mov    data_74492,%bx
		add    $0x5,%edx
		add    $0x3,%eax
		cmp    $0x1,%bx
		jne    jump_295da
		movswl %ax,%edi
		movswl %dx,%ecx
		mov    %esi,%ebx
		push   %edi
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_419f1
		test   %ax,%ax
		je     jump_29548
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0x1,%ecx
		call   func_11ee4
		mov    0xb(%esi),%eax
		mov    -0x2(%esp),%edx
		sar    $0x18,%eax
		mov    %edi,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_28a97
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		cmpw   $0x0,data_f0b9e
		je     jump_29548
		mov    %esi,%eax
		call   func_28889
		jmp    jump_295f5
	jump_295da:
		push   $0x1
		cwtl
		movswl %dx,%ecx
		mov    %esi,%ebx
		push   %eax
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_28b24
		jmp    jump_2953e
	jump_295f5:
		cmpw   $0x1,0x8(%esp)
		je     jump_296a1
		mov    0xc(%esp),%eax
		cmp    $0x1,%ax
		jb     jump_29618
		jbe    jump_29652
		cmp    $0x2,%ax
		je     jump_29682
		jmp    jump_296d2
	jump_29618:
		test   %ax,%ax
		jne    jump_296d2
		mov    -0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    0x2(%esp),%eax
		mov    0x8(%esp),%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x6(%esp),%ecx
		call   func_20620
	jump_2963e:
		sar    $0x10,%ecx
		mov    $0x1e,%ebx
		mov    $0x7d0,%edx
		mov    %esi,%eax
		jmp    jump_296cd
	jump_29652:
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    0x8(%esp),%cl
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_2095a
		mov    0x6(%esp),%ecx
		mov    $0x1e,%ebx
		mov    $0x7d0,%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
		jmp    jump_296cd
	jump_29682:
		mov    -0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    0x2(%esp),%eax
		mov    0x8(%esp),%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x6(%esp),%ecx
		call   func_20ddf
		jmp    jump_2963e
	jump_296a1:
		mov    -0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    0x2(%esp),%eax
		mov    0xc(%esp),%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x6(%esp),%ecx
		call   func_22af9
		sar    $0x10,%ecx
		mov    $0x1e,%ebx
		mov    $0x3e8,%edx
		mov    %esi,%eax
	jump_296cd:
		call   func_28728
	jump_296d2:
		mov    %esi,%eax
		mov    0x8(%esp),%edi
		call   func_12124
		call   func_287af
		cmp    $0x2,%di
		je     jump_296fe
		mov    0xa(%esp),%ecx
		mov    %edi,%eax
		mov    $0x32,%ebx
		inc    %eax
		sar    $0x10,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		jmp    jump_29711
	jump_296fe:
		mov    0xa(%esp),%ecx
		mov    $0x32,%ebx
		mov    $0x4,%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
	jump_29711:
		call   func_29437
		mov    %esi,%eax
		call   func_1ed45
		jmp    jump_2942b


/*----------------------------------------------------------------*/
func_29722:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%ebp
		mov    %dx,0x24(%esp)
		mov    %bx,0x20(%esp)
		mov    %esp,%edi
		mov    $data_2834a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x8(%esp),%edi
		mov    $data_28352,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    data_74492,%bx
		mov    %dx,data_f0b9e
		cmp    $0x1,%bx
		jne    jump_2977f
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		call   func_41e41
		test   %ax,%ax
	jump_2976f:
		jne    jump_298d9
		mov    $0xffffffff,%eax
		jmp    jump_299d2
	jump_2977f:
		movsbw (%eax),%ax
		mov    %ax,0x18(%esp)
		movsbw 0x1(%ebp),%ax
		mov    0x24(%esp),%ecx
		mov    %ax,0x10(%esp)
		cmp    $0x2,%cx
		je     jump_297b1
		lea    0x10(%esp),%ebx
		lea    0x18(%esp),%edx
		mov    0x60(%ebp),%ecx
		mov    %ebp,%eax
		sar    $0x18,%ecx
		call   func_1a146
	jump_297b1:
		mov    0x24(%esp),%esi
		test   %si,%si
		jne    jump_297d7
		push   $0x5
		mov    0x12(%esp),%edx
		mov    0x1a(%esp),%eax
		mov    0x60(%ebp),%ebx
		mov    $0x1,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		jmp    jump_29836
	jump_297d7:
		cmp    $0x1,%si
		jne    jump_2980d
		push   $0x4
		mov    0x60(%ebp),%ebx
		mov    0x14(%esp),%edi
		sar    $0x18,%ebx
		mov    0x1c(%esp),%ecx
		movsbw 0x5(%esp,%ebx,2),%dx
		movsbw 0x4(%esp,%ebx,2),%ax
		add    %edi,%edx
		add    %ecx,%eax
		mov    $0x3,%ecx
		movswl %dx,%edx
		cwtl
		call   func_1af22
		jmp    jump_2983b
	jump_2980d:
		push   $0xa
		mov    0x60(%ebp),%ebx
		mov    0x14(%esp),%ecx
		sar    $0x18,%ebx
		mov    0x1c(%esp),%esi
		movsbw 0x5(%esp,%ebx,2),%dx
		movsbw 0x4(%esp,%ebx,2),%ax
		add    %ecx,%edx
		add    %esi,%eax
		mov    $0x3,%ecx
		movswl %dx,%edx
		cwtl
	jump_29836:
		call   func_1a452
	jump_2983b:
		call   func_13f8a
		mov    0x24(%esp),%esi
	jump_29844:
		cmp    $0x1,%si
		je     jump_29859
		lea    0x1c(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1a552
		jmp    jump_29866
	jump_29859:
		lea    0x1c(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
	jump_29866:
		test   %ax,%ax
		je     jump_298bb
		mov    0x1a(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    0x1a(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_29844
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_29844
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_29844
	jump_298bb:
		mov    0xe(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jmp    jump_2976f
	jump_298d9:
		mov    %ebp,%eax
		mov    0x20(%esp),%edi
		call   func_28889
		cmp    $0x2,%di
		je     jump_29937
		mov    0x24(%esp),%esi
		cmp    $0x1,%si
		jb     jump_29901
		jbe    jump_29919
		cmp    $0x2,%si
		je     jump_29928
		jmp    jump_29968
	jump_29901:
		test   %si,%si
		jne    jump_29968
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x20(%esp),%dl
		call   func_21114
		jmp    jump_29968
	jump_29919:
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x20(%esp),%dl
		call   func_2132b
		jmp    jump_29968
	jump_29928:
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x20(%esp),%dl
		call   func_215fe
		jmp    jump_29968
	jump_29937:
		mov    0x24(%esp),%eax
		cmp    $0x1,%ax
		jb     jump_2994a
		jbe    jump_29958
		cmp    %di,%ax
		je     jump_29961
		jmp    jump_29968
	jump_2994a:
		test   %ax,%ax
		jne    jump_29968
		mov    %ebp,%eax
		call   func_23aba
		jmp    jump_29968
	jump_29958:
		mov    %ebp,%eax
		call   func_23c36
		jmp    jump_29968
	jump_29961:
		mov    %ebp,%eax
		call   func_23f3a
	jump_29968:
		mov    0x1e(%esp),%ecx
		sar    $0x10,%ecx
		mov    $0x1e,%ebx
		mov    0x6(%esp,%ecx,2),%edx
		mov    %ebp,%eax
		sar    $0x10,%edx
		call   func_28728
		mov    %ebp,%eax
		mov    0x20(%esp),%ebx
		call   func_12124
		call   func_287af
		cmp    $0x2,%bx
		jge    jump_299ae
		mov    0x22(%esp),%ecx
		mov    %ebx,%eax
		mov    $0x1e,%ebx
		inc    %eax
		sar    $0x10,%ecx
		movswl %ax,%edx
		mov    %ebp,%eax
		jmp    jump_299c1
	jump_299ae:
		mov    0x22(%esp),%ecx
		mov    $0x1e,%ebx
		mov    $0x4,%edx
		mov    %ebp,%eax
		sar    $0x10,%ecx
	jump_299c1:
		call   func_29437
		mov    %ebp,%eax
		call   func_1ed45
		mov    $0x1,%eax
	jump_299d2:
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_299da:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xac,%esp
		push   %eax
		push   %edx
		push   %ecx
		mov    $0x29,%ecx
		lea    0xc(%esp),%edi
		mov    data_28358,%al
		mov    $data_28359,%esi
		mov    %al,0xb4(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_112fd
		mov    $0x88,%ecx
		mov    0x8(%esp),%esi
		mov    %eax,%edx
		mov    %eax,%edi
		mov    %eax,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x4(%esp),%al
		mov    %bl,0x1(%edx)
		mov    $data_776e4,%esi
		lea    0x2(%edx),%edi
		mov    %al,(%edx)
		mov    0x8(%esp),%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0xe(%eax),%al
		mov    %al,0xe(%edx)
		mov    (%esp),%al
		mov    %al,0x11(%edx)
		mov    0xc6(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%ebx
		shl    $0x4,%ebx
		sub    %eax,%ebx
		movb   $0x1,0xd(%edx)
		mov    0xc(%esp,%ebx,1),%al
		mov    %al,0x40(%edx)
		mov    0xd(%esp,%ebx,1),%al
		mov    %al,0x41(%edx)
		mov    0xe(%esp,%ebx,1),%al
		mov    %al,0x42(%edx)
		mov    0xf(%esp,%ebx,1),%al
		mov    %al,0x43(%edx)
		xor    %eax,%eax
		mov    0x40(%edx),%al
		add    %eax,%eax
		mov    %ax,0x44(%edx)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    data_71b68(,%eax,8),%cx
		mov    %cx,0x46(%edx)
		xor    %ecx,%ecx
		mov    data_71b6c(,%eax,8),%ax
		mov    0x42(%edx),%cl
		add    %eax,%ecx
		mov    %cx,0x54(%edx)
		mov    0xd(%esp,%ebx,1),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%eax
		shl    $0x5,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		add    %ecx,%eax
		shl    $0x3,%eax
		mov    %eax,0x4c(%edx)
		mov    %eax,0x48(%edx)
		movsbw 0x11(%esp,%ebx,1),%ax
		imul   $0xa,%eax,%eax
		movb   $0x0,0x56(%edx)
		movw   $0x0,0x57(%edx)
		movb   $0x0,0x13(%edx)
		movb   $0x0,0x1e(%edx)
		movb   $0xff,0x71(%edx)
		movl   $0x0,0x73(%edx)
		movb   $0x0,0x6b(%edx)
		mov    %ax,0x52(%edx)
		mov    %ax,0x50(%edx)
		mov    0x13(%edx),%al
		mov    %al,0x14(%edx)
		mov    0x1e(%edx),%al
		mov    %al,0x15(%edx)
		mov    0x71(%edx),%al
		mov    0xc8(%esp),%ebx
		mov    %al,0x6f(%edx)
		cmp    $0x6,%bx
		jne    jump_29b20
		orb    $0x1,0x14(%edx)
		jmp    jump_29b2a
	jump_29b20:
		cmp    $0xa,%bx
		jne    jump_29b2a
		movb   $0x2,0xd(%edx)
	jump_29b2a:
		xor    %eax,%eax
	jump_29b2c:
		mov    0xc6(%esp),%edx
		sar    $0x10,%edx
		imul   $0xf,%edx,%ebx
		movswl %ax,%edx
		add    %edx,%ebx
		mov    0x12(%esp,%ebx,1),%bl
		inc    %eax
		mov    %bl,0x2e(%edx,%ebp,1)
		cmp    $0x6,%ax
		jl     jump_29b2c
		mov    0x8(%esp),%eax
		mov    0xf(%eax),%al
		movb   $0x0,0x6e(%ebp)
		movb   $0x0,0x64(%ebp)
		movl   $0x0,0x77(%ebp)
		movb   $0x0,0x81(%ebp)
		add    $0xa,%al
		movb   $0xff,0x82(%ebp)
		mov    %al,0x12(%ebp)
		mov    0x6e(%ebp),%al
		mov    %al,0x6d(%ebp)
		mov    %al,0x6c(%ebp)
		mov    0xcc(%esp),%eax
		mov    %ax,0x61(%ebp)
		mov    0x64(%ebp),%al
		mov    %al,0x63(%ebp)
		mov    0x77(%ebp),%eax
		mov    %eax,0x67(%ebp)
		mov    0x81(%ebp),%al
		mov    %al,0x7f(%ebp)
		mov    0x82(%ebp),%al
		mov    %al,0x80(%ebp)
		mov    0x8(%esp),%eax
		cmpb   $0x1,0xe(%eax)
		jne    jump_29bbc
		movb   $0x2,0x83(%ebp)
	jump_29bbc:
		mov    0x5f(%ebp),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ebp)
		mov    0x8(%esp),%eax
		mov    0xb(%eax),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebp,%edx
		add    $data_cc968,%eax
		mov    $0x1e,%ebx
		call   func_1134f
		mov    $0x1,%edx
		lea    0xb4(%esp),%eax
		call   func_611aa
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		movsbl 0x0(%ebp),%eax
		call   func_10971
		mov    %eax,%ecx
		movsbl 0x1(%ebp),%eax
		add    $0xc,%ecx
		call   func_10988
		mov    0x5d(%ebp),%ebx
		add    $0xc,%eax
		sar    $0x18,%ebx
		movswl %ax,%edx
		movswl %cx,%eax
		call   func_21944
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		call   func_45559
		call   func_61115
		add    $0xb8,%esp
		jmp    jump_28c73


/*----------------------------------------------------------------*/
func_29c5a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,0x4(%esp)
		mov    $0xc,%eax
		call   func_14300
		mov    %ecx,%eax
		call   func_14032
		mov    %ecx,%eax
		call   func_143f3
		mov    0x63(%ecx),%al
		mov    %al,(%edx)
		cmp    $0x1,%bx
		jle    jump_29ca1
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,0x1(%edi)
	jump_29ca1:
		cmpw   $0x2,0x4(%esp)
		jle    jump_29cc1
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		add    $0x3,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,0x2(%edi)
	jump_29cc1:
		xor    %esi,%esi
		jmp    jump_29d1a
	jump_29cc5:
		movsbw (%ecx),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%ecx),%ax
		mov    %ax,0x8(%esp)
		movswl %si,%eax
		lea    0x8(%esp),%edx
		movsbl (%edi,%eax,1),%ebx
		mov    %esp,%eax
		call   func_49abc
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_29d19
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x3e8,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
	jump_29d19:
		inc    %esi
	jump_29d1a:
		cmp    0x4(%esp),%si
		jl     jump_29cc5
		mov    $0x3,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1ac08
	jump_29d32:
		lea    0x8(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_29143
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cmp    $0x3e8,%ax
		jne    jump_29d79
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x1,%ebx
	jump_29d6c:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_29d32
	jump_29d79:
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0xffffffff,%ebx
		jmp    jump_29d6c


/*----------------------------------------------------------------*/
func_29d88:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		mov    $0x18,%eax
		call   func_14300
		mov    %ecx,%eax
		call   func_14032
		mov    %ecx,%eax
		call   func_143f3
		movb   $0x1,(%edx)
		xor    %edi,%edi
		movb   $0x3,0x1(%edx)
		jmp    jump_29e6d
	jump_29dbd:
		movsbw (%ecx),%ax
		mov    %ax,0x10(%esp)
		lea    0xc(%esp),%edx
		movsbw 0x1(%ecx),%ax
		movswl %di,%esi
		mov    %ax,0xc(%esp)
		lea    0x10(%esp),%eax
		movsbl (%esi,%ebp,1),%ebx
		call   func_49abc
		mov    0x10(%esp),%eax
		mov    %ax,0x8(%esp)
		mov    0xc(%esp),%eax
		mov    %esp,%edx
		mov    %ax,(%esp)
		lea    0x8(%esp),%eax
		movsbl (%esi,%ebp,1),%ebx
		call   func_49abc
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_29e64
		mov    -0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_29e64
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x3e8,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    -0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x3e8,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
	jump_29e64:
		cmpw   $0x3,0x4(%esp)
		jl     jump_29e77
		inc    %edi
	jump_29e6d:
		cmp    $0x2,%di
		jl     jump_29dbd
	jump_29e77:
		mov    $0x6,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1ac08
	jump_29e88:
		lea    0xc(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_29edc
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cmp    $0x3e8,%ax
		jne    jump_29ecd
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x1,%ebx
	jump_29ec0:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_29e88
	jump_29ecd:
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0xffffffff,%ebx
		jmp    jump_29ec0
	jump_29edc:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_29ee4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %ax,%ebx
		mov    data_cc968(,%ebx,8),%ebx
	jump_29ef6:
		test   %ebx,%ebx
		je     jump_2926e
		xor    %eax,%eax
		mov    0x12(%ebx),%al
		mov    0x7b(%ebx),%ecx
		cmp    %ax,%di
		jne    jump_29f49
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		mov    %ebx,%eax
		call   func_197ad
		mov    %ebx,%eax
		call   func_463fb
		mov    0x5d(%ebx),%eax
		sar    $0x18,%eax
		call   func_119b6
		mov    %ebx,%eax
		call   func_1daee
		movswl %si,%eax
		shl    $0x3,%eax
		mov    %ebx,%edx
		add    $data_cc968,%eax
		call   func_113cc
	jump_29f49:
		mov    %ecx,%ebx
		jmp    jump_29ef6


/*----------------------------------------------------------------*/
func_29f4d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		mov    %eax,%esi
		mov    %dx,0x8(%esp)
		mov    %bx,0x10(%esp)
		mov    %cx,0x14(%esp)
		mov    $0x1,%edx
		mov    0x8(%esp),%ebx
		add    %edx,%ebx
		mov    %edx,0xc(%esp)
		mov    %bx,0x8(%esp)
		cmp    $0x4,%cx
		jl     jump_29f83
		cmp    $0x6,%cx
		jle    jump_29f89
	jump_29f83:
		xor    %eax,%eax
		mov    %eax,0xc(%esp)
	jump_29f89:
		cmpw   $0x0,0xc(%esp)
		jne    jump_29fa3
		mov    0x6(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		call   func_29c5a
		jmp    jump_29fb3
	jump_29fa3:
		mov    0x6(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		call   func_29d88
	jump_29fb3:
		cmpw   $0x0,data_74492
		jne    jump_29fdb
		mov    %esi,%eax
		movsbl 0x1(%esi),%ebx
		movsbl (%esi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_29fdb
		mov    $0xffffffff,%eax
		jmp    jump_2a1a3
	jump_29fdb:
		mov    %esi,%eax
		call   func_28889
		xor    %eax,%eax
		mov    0xf(%esi),%al
		add    $0xa,%eax
		movswl %ax,%edx
		movsbw 0xe(%esi),%ax
		dec    %eax
		cwtl
		call   func_29ee4
		mov    $data_776ed,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_776f8,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77702,%eax
		xor    %edi,%edi
		call   func_4f460
		jmp    jump_2a187
	jump_2a02a:
		movsbw (%esi),%ax
		mov    %ax,0x18(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		cmpw   $0x0,0xc(%esp)
		je     jump_2a0aa
		test   $0x1,%di
		jne    jump_2a0aa
		movswl %di,%ecx
		sar    %ecx
		lea    0x4(%esp),%edx
		mov    -0x3(%esp,%ecx,1),%ebx
		lea    0x18(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_2a186
		mov    0x2(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2a186
		lea    0x4(%esp),%edx
		mov    -0x3(%esp,%ecx,1),%ebx
		lea    0x18(%esp),%eax
		jmp    jump_2a0b9
	jump_2a0aa:
		movswl %di,%edx
		lea    0x18(%esp),%eax
		mov    -0x3(%esp,%edx,1),%ebx
		lea    0x4(%esp),%edx
	jump_2a0b9:
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_2a186
		mov    0x2(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2a186
		cmpw   $0x0,0xc(%esp)
		je     jump_2a15a
		test   %di,%di
		jne    jump_2a12c
		mov    0x26(%esp),%eax
		mov    0xe(%esp),%ecx
		mov    0x2(%esp),%ebx
		sar    $0x10,%eax
		mov    0x16(%esp),%edx
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		jmp    jump_2a17f
	jump_2a12c:
		cmp    $0x2,%di
		jne    jump_2a186
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x16(%esp),%eax
		mov    0x12(%esp),%ecx
		sar    $0x10,%eax
		mov    0x6(%esp),%ebx
		push   %eax
		mov    0x20(%esp),%eax
		sar    $0x10,%ecx
		dec    %eax
		sar    $0x10,%ebx
		movswl %ax,%edx
		jmp    jump_2a17f
	jump_2a15a:
		mov    0x26(%esp),%eax
		mov    0xe(%esp),%ecx
		mov    0x2(%esp),%ebx
		sar    $0x10,%eax
		mov    0x16(%esp),%edx
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
	jump_2a17f:
		mov    %esi,%eax
		call   func_299da
	jump_2a186:
		inc    %edi
	jump_2a187:
		cmp    0x8(%esp),%di
		jl     jump_2a02a
		call   func_1ffcd
		mov    %esi,%eax
		call   func_12124
		mov    $0x1,%eax
	jump_2a1a3:
		add    $0x1c,%esp
		pop    %edi
		pop    %esi
		ret    $0x4

vtable_2a1ae:
		.long   func_2a275
		.long   func_2a2c8
		.long   func_2a30f
		.long   func_2a36a
		.long   func_2a3cd
		.long   func_2a427


/*----------------------------------------------------------------*/
func_2a1c6:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%eax
		cmpw   $0x1,data_74492
		jne    jump_2a202
		mov    -0x2(%esp),%edx
		movswl %cx,%ecx
		movswl %bx,%ebx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_42025
		test   %ax,%ax
	jump_2a1f6:
		jne    jump_2a257
		mov    $0xffffffff,%eax
		jmp    jump_2a4fa
	jump_2a202:
		mov    (%esp),%eax
		add    %eax,%eax
		add    $0x3,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_28465
		mov    %eax,%ebx
		cmp    $0x4,%di
		jne    jump_2a225
		sub    $0x2,%ebx
		xor    %edx,%edx
		jmp    jump_2a22a
	jump_2a225:
		mov    $0x1,%edx
	jump_2a22a:
		movswl %dx,%ecx
		mov    0xb(%esi),%eax
		movswl %bx,%ebx
		sar    $0x18,%eax
		movsbl 0x1(%esi),%edx
		push   %eax
		movsbl (%esi),%eax
		call   func_28a97
		mov    %esi,%eax
		movsbl 0x1(%esi),%ebx
		movsbl (%esi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jmp    jump_2a1f6
	jump_2a257:
		mov    %esi,%eax
		call   func_28889
		cmp    $0x5,%di
		ja     jump_2a4ae
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *vtable_2a1ae(,%eax,4)


/*----------------------------------------------------------------*/
func_2a275:
/*----------------------------------------------------------------*/
		mov    (%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_2a288
		jbe    jump_2a29b
		cmp    $0x2,%cx
		je     jump_2a2a9
		jmp    jump_2a2b5
	jump_2a288:
		test   %cx,%cx
		jne    jump_2a2b5
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_5666e
		jmp    jump_2a2b5
	jump_2a29b:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_56896
		jmp    jump_2a2b5
	jump_2a2a9:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_56bd4
	jump_2a2b5:
		mov    $0x32,%ebx
		mov    $0x61a8,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		jmp    jump_2a4a9


/*----------------------------------------------------------------*/
func_2a2c8:
/*----------------------------------------------------------------*/
		mov    (%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_2a2db
		jbe    jump_2a2e9
		cmp    $0x2,%cx
		je     jump_2a2f2
		jmp    jump_2a2f9
	jump_2a2db:
		test   %cx,%cx
		jne    jump_2a2f9
		mov    %esi,%eax
		call   func_57766
		jmp    jump_2a2f9
	jump_2a2e9:
		mov    %esi,%eax
		call   func_57ac4
		jmp    jump_2a2f9
	jump_2a2f2:
		mov    %esi,%eax
		call   func_57f18
	jump_2a2f9:
		mov    $0x1,%ecx
		mov    $0x32,%ebx
		mov    $0x4e20,%edx
	jump_2a308:
		mov    %esi,%eax
		jmp    jump_2a4a9


/*----------------------------------------------------------------*/
func_2a30f:
/*----------------------------------------------------------------*/
		mov    (%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_2a322
		jbe    jump_2a332
		cmp    $0x2,%cx
		je     jump_2a33b
		jmp    jump_2a342
	jump_2a322:
		test   %cx,%cx
		jne    jump_2a342
		mov    %esi,%eax
		xor    %edx,%edx
	jump_2a32b:
		call   func_241f7
		jmp    jump_2a342
	jump_2a332:
		mov    $0x1,%edx
		mov    %esi,%eax
		jmp    jump_2a32b
	jump_2a33b:
		mov    %esi,%eax
		call   func_24466
	jump_2a342:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $0x2,%ecx
		lea    0x5dc0(%eax),%edx
		mov    $0x32,%ebx
		jmp    jump_2a308


/*----------------------------------------------------------------*/
func_2a36a:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		jmp    jump_2a3bf
	jump_2a36e:
		movswl %cx,%ebx
		shl    $0x2,%ebx
		mov    data_f0648(%ebx),%eax
		call   func_59675
		mov    data_f0648(%ebx),%eax
		call   func_12124
		mov    data_f0648(%ebx),%edx
		test   %edx,%edx
		je     jump_2a3be
		mov    0xb(%edx),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_2a3be
		mov    data_f0648(%ebx),%edx
		cmpb   $0x2,0xd(%edx)
		jne    jump_2a3be
		mov    %esi,%eax
		call   func_1db1d
	jump_2a3be:
		inc    %ecx
	jump_2a3bf:
		cmp    data_f0b9e,%cx
		jl     jump_2a36e
		jmp    jump_2a4f5


/*----------------------------------------------------------------*/
func_2a3cd:
/*----------------------------------------------------------------*/
		mov    -0x3(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ebx
		call   func_2690b
		mov    %esi,%eax
		call   func_12124
		xor    %eax,%eax
		jmp    jump_2a419
	jump_2a3eb:
		movswl %ax,%ebx
		mov    data_f0648(,%ebx,4),%ebx
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_2a418
		orb    $0xe0,0x15(%ebx)
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    data_7448a(,%edx,2),%dx
		movb   $0x0,0x1e(%ebx)
		mov    %dx,0x1c(%ebx)
	jump_2a418:
		inc    %eax
	jump_2a419:
		cmp    data_f0b9e,%ax
		jl     jump_2a3eb
		jmp    jump_2a4f5


/*----------------------------------------------------------------*/
func_2a427:
/*----------------------------------------------------------------*/
		cmpw   $0x1,(%esp)
		je     jump_2a449
		mov    $0x32,%edx
		mov    $data_7770d,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77718,%eax
		jmp    jump_2a453
	jump_2a449:
		mov    $0x32,%edx
		mov    $data_77725,%eax
	jump_2a453:
		call   func_4f460
		mov    (%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_2a46b
		jbe    jump_2a47e
		cmp    $0x2,%cx
		je     jump_2a48c
		jmp    jump_2a498
	jump_2a46b:
		test   %cx,%cx
		jne    jump_2a498
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_276b9
		jmp    jump_2a498
	jump_2a47e:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_2799a
		jmp    jump_2a498
	jump_2a48c:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_27c5a
	jump_2a498:
		mov    $0x3,%ecx
		mov    $0x46,%ebx
		mov    $0x7530,%edx
		mov    %esi,%eax
	jump_2a4a9:
		call   func_28728
	jump_2a4ae:
		mov    %esi,%eax
		call   func_12124
		call   func_287af
		cmp    $0x2,%di
		jge    jump_2a4d4
		mov    -0x2(%esp),%ecx
		mov    $0x1e,%ebx
		inc    %edi
		mov    %esi,%eax
		sar    $0x10,%ecx
		movswl %di,%edx
		jmp    jump_2a4e9
	jump_2a4d4:
		jne    jump_2a4ee
		mov    -0x2(%esp),%ecx
		mov    $0x1e,%ebx
		mov    $0x4,%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
	jump_2a4e9:
		call   func_29437
	jump_2a4ee:
		mov    %esi,%eax
		call   func_1ed45
	jump_2a4f5:
		mov    $0x1,%eax
	jump_2a4fa:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2a500:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		mov    %bx,0x8(%esp)
		mov    %cx,0x4(%esp)
		movw   $0x1,0xc(%esp)
	jump_2a51c:
		mov    0x9(%esp),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_2a5a5
		mov    0xa(%esp),%esi
		sar    $0x10,%esi
		mov    data_cc960(,%esi,8),%esi
		jmp    jump_2a576
	jump_2a547:
		movswl %ax,%edx
		cmp    data_f0648(,%edx,4),%esi
		je     jump_2a559
		inc    %eax
	jump_2a554:
		cmp    %di,%ax
		jl     jump_2a547
	jump_2a559:
		mov    data_f0b9e,%dx
		mov    0x7b(%esi),%edi
		cmp    %dx,%ax
		jne    jump_2a574
		testb  $0x80,0x15(%esi)
		jne    jump_2a574
		cmpb   $0x7,0x5c(%esi)
		jb     jump_2a585
	jump_2a574:
		mov    %edi,%esi
	jump_2a576:
		test   %esi,%esi
		je     jump_2a5a5
		mov    data_f0b9e,%di
		xor    %eax,%eax
		jmp    jump_2a554
	jump_2a585:
		mov    0x2(%esp),%eax
		mov    0x6(%esp),%ecx
		mov    (%esp),%ebx
		sar    $0x10,%eax
		mov    %esi,%edx
		push   %eax
		sar    $0x10,%ecx
		mov    %ebp,%eax
		call   func_285e4
		sub    %eax,0x48(%esi)
		jmp    jump_2a574
	jump_2a5a5:
		mov    0xc(%esp),%ebx
		inc    %ebx
		mov    %bx,0xc(%esp)
		cmp    $0x4,%bx
		jle    jump_2a51c
		jmp    jump_287a8


/*----------------------------------------------------------------*/
func_2a5be:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    %bx,0x8(%esp)
		mov    %ecx,%edi
		movw   $0x1,(%esp)
	jump_2a5d7:
		mov    -0x3(%esp),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_2a6a8
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    data_cc960(,%ecx,8),%ecx
		jmp    jump_2a632
	jump_2a602:
		movswl %ax,%edx
		cmp    data_f0648(,%edx,4),%ecx
		je     jump_2a618
		inc    %eax
	jump_2a60f:
		cmp    data_f0b9e,%ax
		jl     jump_2a602
	jump_2a618:
		cmp    data_f0b9e,%ax
		jne    jump_2a62f
		testb  $0x80,0x15(%ecx)
		jne    jump_2a62f
		cmpw   $0x12c,0x61(%ecx)
		jl     jump_2a63e
	jump_2a62f:
		mov    0x7b(%ecx),%ecx
	jump_2a632:
		test   %ecx,%ecx
		je     jump_2a6a8
		xor    %eax,%eax
		jmp    jump_2a60f
	jump_2a63e:
		mov    0x6(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		call   func_28947
		cmp    $0x1,%ax
		jne    jump_2a62f
		mov    0x1e(%ecx),%dl
		and    $0xf8,%dl
		mov    0x4(%esp),%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x1e(%ecx)
		mov    0x4(%esp),%edx
		cmp    $0x2,%dx
		jb     jump_2a679
		jbe    jump_2a690
		cmp    $0x4,%dx
		je     jump_2a67f
		jmp    jump_2a62f
	jump_2a679:
		cmp    $0x1,%dx
		jne    jump_2a62f
	jump_2a67f:
		movswl %di,%edx
		mov    data_7448c(,%edx,2),%ax
		mov    %ax,0x1f(%ecx)
		jmp    jump_2a62f
	jump_2a690:
		movswl %di,%edx
		mov    data_7448a(,%edx,2),%ax
		mov    %ax,0x1f(%ecx)
		mov    %ecx,%eax
		call   func_197ad
		jmp    jump_2a62f
	jump_2a6a8:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x4,%bx
		jle    jump_2a5d7
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2a6c0:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %ebx,(%esp)
		mov    $0xff,%bl
		xor    %bh,%bh
	jump_2a6cf:
		mov    (%esp),%esi
		cmp    $0x1,%si
		je     jump_2a6de
		cmp    $0x2,%si
		jne    jump_2a6e3
	jump_2a6de:
		cmp    $0x2,%bh
		jl     jump_2a72b
	jump_2a6e3:
		cmpw   $0x3,(%esp)
		jne    jump_2a6ef
		cmp    $0x2,%bh
		je     jump_2a72b
	jump_2a6ef:
		cmpw   $0x4,(%esp)
		jne    jump_2a6fb
		cmp    $0x3,%bh
		je     jump_2a72b
	jump_2a6fb:
		movsbl %bh,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_2a705:
		test   %eax,%eax
		je     jump_2a72b
		movsbl %bl,%edi
		movzbl 0x43(%eax),%esi
		cmp    %esi,%edi
		jge    jump_2a726
		movsbw (%eax),%si
		mov    0x43(%eax),%bl
		mov    %si,(%ecx)
		movsbw 0x1(%eax),%si
		mov    %si,(%edx)
	jump_2a726:
		mov    0x7b(%eax),%eax
		jmp    jump_2a705
	jump_2a72b:
		inc    %bh
		cmp    $0x4,%bh
		jl     jump_2a6cf
		movsbl %bl,%eax
		cmp    $0xffffffff,%eax
		setne  %al
		xor    %ah,%ah
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_2a746:
		.long   func_2a938
		.long   func_2a9c1
		.long   func_2aac8
		.long   func_2ab7a
		.long   func_2ab8e


/*----------------------------------------------------------------*/
func_2a75a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%ebp
		mov    %dx,0x10(%esp)
		mov    %bx,0xc(%esp)
		mov    %esp,%edi
		mov    $data_283fe,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_ba83e,%si
		mov    $0x1,%edi
		jmp    jump_2a7ad
	jump_2a785:
		mov    data_ba83c,%cx
		jmp    jump_2a799
	jump_2a78e:
		movswl %si,%edx
		mov    %edi,%ebx
		call   func_13d02
		inc    %ecx
	jump_2a799:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_2a78e
		inc    %esi
	jump_2a7ad:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %si,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_2a785
		cmpw   $0x0,data_74492
		jne    jump_2a7e8
		mov    %ebp,%eax
		movsbl 0x1(%ebp),%ebx
		movsbl 0x0(%ebp),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2a7e8
		mov    $0xffffffff,%eax
		jmp    jump_2acc3
	jump_2a7e8:
		mov    %ebp,%eax
		mov    0xc(%esp),%ebx
		call   func_28889
		cmp    $0x4,%bx
		je     jump_2a811
		lea    0x14(%esp),%edx
		mov    0xb(%ebp),%ebx
		lea    0x18(%esp),%eax
		sar    $0x18,%ebx
		call   func_2a6c0
		test   %ax,%ax
		jne    jump_2a825
	jump_2a811:
		movsbw 0x0(%ebp),%ax
		mov    %ax,0x18(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %ax,0x14(%esp)
	jump_2a825:
		mov    0x18(%esp),%ecx
		mov    0x14(%esp),%esi
		sub    $0x6,%ecx
		sub    $0x6,%esi
		mov    %cx,0x18(%esp)
		mov    %si,0x14(%esp)
		test   %cx,%cx
		jge    jump_2a846
		xor    %eax,%eax
		jmp    jump_2a865
	jump_2a846:
		mov    data_ba842,%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_2a86a
		mov    data_ba844,%ax
		sub    $0xc,%eax
	jump_2a865:
		mov    %ax,0x18(%esp)
	jump_2a86a:
		cmpw   $0x0,0x14(%esp)
		jge    jump_2a87b
		xor    %ebx,%ebx
		mov    %bx,0x14(%esp)
		jmp    jump_2a89f
	jump_2a87b:
		mov    data_ba83e,%eax
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_2a89f
		mov    data_ba840,%ax
		sub    $0xc,%eax
		mov    %ax,0x14(%esp)
	jump_2a89f:
		xor    %ecx,%ecx
		mov    0x14(%esp),%esi
		mov    %cx,data_f0b9e
		jmp    jump_2a8f2
	jump_2a8ae:
		mov    0x18(%esp),%ecx
		jmp    jump_2a8e0
	jump_2a8b4:
		movswl %si,%edx
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_2a8df
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_2a8df
		mov    %ebx,%eax
		call   func_28596
	jump_2a8df:
		inc    %ecx
	jump_2a8e0:
		mov    0x16(%esp),%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_2a8b4
		inc    %esi
	jump_2a8f2:
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_2a8ae
		mov    0x18(%esp),%esi
		mov    0x14(%esp),%edi
		mov    0xc(%esp),%eax
		add    $0x6,%esi
		add    $0x6,%edi
		mov    %si,0x18(%esp)
		mov    %di,0x14(%esp)
		cmp    $0x4,%ax
		ja     jump_2aa58
		xor    %eax,%eax
		mov    0xc(%esp),%ax
		jmp    *vtable_2a746(,%eax,4)


/*----------------------------------------------------------------*/
func_2a938:
/*----------------------------------------------------------------*/
		mov    0x10(%esp),%eax
		cmp    $0x1,%ax
		jbe    jump_2a94a
		cmp    $0x2,%ax
		je     jump_2a97d
		jmp    jump_2a9ae
	jump_2a94a:
		mov    $0x32,%edx
		mov    $data_77732,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77725,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_21e16
		jmp    jump_2a9ae
	jump_2a97d:
		mov    $0x32,%edx
		mov    $data_7773f,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7774b,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_570a1
	jump_2a9ae:
		mov    0xe(%esp),%eax
		mov    $0x46,%ebx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		jmp    jump_2aa4e


/*----------------------------------------------------------------*/
func_2a9c1:
/*----------------------------------------------------------------*/
		mov    0x10(%esp),%esi
		cmp    $0x1,%si
		jbe    jump_2a9d3
		cmp    $0x2,%si
		je     jump_2aa06
		jmp    jump_2aa3d
	jump_2a9d3:
		mov    $0x32,%edx
		mov    $data_77757,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77760,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_23074
		jmp    jump_2aa3d
	jump_2aa06:
		mov    $0x32,%edx
		mov    $data_776f8,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7776b,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x16(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_58619
	jump_2aa3d:
		mov    0xe(%esp),%eax
		mov    $0x1,%ecx
	jump_2aa46:
		sar    $0x10,%eax
		mov    $0x46,%ebx
	jump_2aa4e:
		mov    (%esp,%eax,4),%edx
		mov    %ebp,%eax
		call   func_28728
	jump_2aa58:
		mov    %ebp,%eax
		mov    0xc(%esp),%ebx
		call   func_12124
		call   func_287af
		cmp    $0x3,%bx
		jge    jump_2acb9
		mov    0xe(%esp),%esi
		mov    0xc(%esp),%cl
		mov    $0x1,%eax
		mov    $0x1e,%ebx
		shl    %cl,%eax
		sar    $0x10,%esi
		movswl %ax,%edi
		mov    %esi,%ecx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_29437
		mov    $0x1e,%ebx
		mov    %esi,%ecx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_2a5be
		mov    %esi,%eax
		mov    0xc(%esp),%ecx
		shl    $0x2,%eax
		test   %cx,%cx
		jne    jump_2ac83
		mov    $0x46,%ebx
		mov    (%esp,%eax,1),%edx
		xor    %ecx,%ecx
		jmp    jump_2acab


/*----------------------------------------------------------------*/
func_2aac8:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77776,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_776c1,%eax
		call   func_4f460
		mov    0x10(%esp),%eax
		cmp    $0x1,%ax
		jb     jump_2aafa
		jbe    jump_2ab1a
		cmp    $0x2,%ax
		je     jump_2ab44
		jmp    jump_2ab6c
	jump_2aafa:
		test   %ax,%ax
		jne    jump_2ab6c
		mov    0x12(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x16(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_58c87
		jmp    jump_2ab6c
	jump_2ab1a:
		mov    $0x34,%edx
		mov    $data_77783,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x16(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_58e95
		jmp    jump_2ab6c
	jump_2ab44:
		mov    $0x34,%edx
		mov    $data_7778d,%eax
		call   func_4f460
		mov    0x12(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x16(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_592b0
	jump_2ab6c:
		mov    0xe(%esp),%eax
		mov    $0x2,%ecx
		jmp    jump_2aa46


/*----------------------------------------------------------------*/
func_2ab7a:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x10(%esp),%dl
		call   func_25dfe
		mov    %ebp,%eax
		call   func_12124


/*----------------------------------------------------------------*/
func_2ab8e:
/*----------------------------------------------------------------*/
		cmpw   $0x4,0xc(%esp)
		jne    jump_2ac03
		cmpw   $0x0,0x10(%esp)
		jne    jump_2aba7
		mov    %ebp,%eax
		call   func_5a267
		jmp    jump_2abae
	jump_2aba7:
		mov    %ebp,%eax
		call   func_5a566
	jump_2abae:
		mov    $0xffffffff,%ecx
		mov    $0x46,%ebx
		mov    %ebp,%eax
		mov    $0x2328,%edx
		call   func_12124
		mov    %ebp,%eax
		call   func_28728
		call   func_287af
		mov    $0xffffffff,%ecx
		mov    $0x46,%ebx
		mov    $0x2328,%edx
		mov    %ebp,%eax
		call   func_2a500
		mov    %ebp,%eax
		mov    0x10(%esp),%ecx
		call   func_1ed90
		cmp    $0x1,%cx
		jl     jump_2acbe
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x10(%esp)
	jump_2ac03:
		xor    %edi,%edi
		mov    %di,data_f0b9e
		cmpb   $0x3,0xe(%ebp)
		jge    jump_2ac41
		mov    $0x2,%ecx
		xor    %ebx,%ebx
	jump_2ac19:
		movswl %bx,%edx
		mov    data_cc968(,%edx,8),%edx
	jump_2ac23:
		test   %edx,%edx
		je     jump_2ac38
		cmp    0xd(%edx),%cl
		je     jump_2ac33
		mov    %edx,%eax
		call   func_28596
	jump_2ac33:
		mov    0x7b(%edx),%edx
		jmp    jump_2ac23
	jump_2ac38:
		inc    %ebx
		cmp    $0x2,%bx
		jge    jump_2ac64
		jmp    jump_2ac19
	jump_2ac41:
		mov    0xb(%ebp),%edx
		sar    $0x18,%edx
		mov    data_cc960(,%edx,8),%edx
	jump_2ac4e:
		test   %edx,%edx
		je     jump_2ac64
		cmpb   $0x2,0xd(%edx)
		je     jump_2ac5f
		mov    %edx,%eax
		call   func_28596
	jump_2ac5f:
		mov    0x7b(%edx),%edx
		jmp    jump_2ac4e
	jump_2ac64:
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		mov    $0x32,%ebx
		mov    (%esp,%eax,4),%edx
		mov    %ebp,%eax
		call   func_2accb
		mov    %ebp,%eax
		call   func_12124
		jmp    jump_2acbe
	jump_2ac83:
		cmp    $0x1,%cx
		jne    jump_2ac98
		mov    $0x1,%ecx
		mov    $0x46,%ebx
		mov    (%esp,%eax,1),%edx
		jmp    jump_2acab
	jump_2ac98:
		cmp    $0x2,%cx
		jne    jump_2acb2
		mov    $0x2,%ecx
		mov    $0x46,%ebx
		mov    (%esp,%eax,1),%edx
	jump_2acab:
		mov    %ebp,%eax
		call   func_2a500
	jump_2acb2:
		mov    %ebp,%eax
		call   func_1ed90
	jump_2acb9:
		call   func_45559
	jump_2acbe:
		mov    $0x1,%eax
	jump_2acc3:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2accb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %bx,0x8(%esp)
		mov    $0x1e,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    %edx,0xc(%esp)
		mov    %dx,0x4(%esp)
		jmp    jump_2ae17
	jump_2acf6:
		mov    0x2(%esp),%ebp
		sar    $0x10,%ebp
		mov    data_f0648(,%ebp,4),%esi
		cmpb   $0x2,0xd(%esi)
		jne    jump_2ad51
		push   $0xffffffff
		mov    0xa(%esp),%ecx
		mov    0x4(%esp),%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		sar    $0x10,%ecx
		call   func_285e4
		mov    0x48(%esi),%ecx
		lea    (%eax,%eax,1),%edx
		mov    %ebp,%ebx
		sub    %edx,%ecx
		mov    %esi,%eax
		mov    %ecx,0x48(%esi)
		call   func_45bfb
		mov    %ebp,%ebx
		mov    0x60(%esi),%edx
		mov    %esi,%eax
		sar    $0x18,%edx
		mov    $0x1,%esi
		call   func_45ed2
		mov    %esi,0xc(%esp)
		jmp    jump_2ae12
	jump_2ad51:
		cmpb   $0x4,0x5c(%esi)
		ja     jump_2ae12
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5b(%edi),%al
		call   func_184a4
		movsbw %al,%bx
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5a(%edi),%al
		call   func_184a4
		cbtw
		add    %eax,%ebx
		xor    %eax,%eax
		mov    $0x37,%edx
		mov    0x5d(%edi),%al
		call   func_184a4
		cbtw
		add    %eax,%ebx
		movswl %bx,%edx
		mov    (%esp),%ebx
		imul   %ebx,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x48(%esi),%edx
		add    %ebx,%eax
		mov    0x4c(%esi),%ebp
		add    %eax,%edx
		cmp    %ebp,%edx
		jle    jump_2adbc
		mov    %ebp,%eax
		sub    0x48(%esi),%eax
	jump_2adbc:
		mov    data_ba83c,%bx
		movsbw (%esi),%dx
		cmp    %bx,%dx
		jl     jump_2ae04
		mov    data_ba83a,%ecx
		sar    $0x10,%ecx
		movsbl (%esi),%edx
		add    $0xb,%ecx
		cmp    %ecx,%edx
		jg     jump_2ae04
		mov    data_ba83e,%cx
		movsbw 0x1(%esi),%dx
		cmp    %cx,%dx
		jl     jump_2ae04
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		movsbl 0x1(%esi),%ecx
		add    $0xb,%edx
		cmp    %edx,%ecx
		jle    jump_2ae09
	jump_2ae04:
		add    %eax,0x48(%esi)
		jmp    jump_2ae12
	jump_2ae09:
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_462a7
	jump_2ae12:
		incw   0x4(%esp)
	jump_2ae17:
		mov    0x4(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_2acf6
		cmpw   $0x1,0xc(%esp)
		jne    jump_2ae3c
		call   func_287af
		mov    %edi,%eax
		call   func_1ed45
	jump_2ae3c:
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2ae44:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    data_74492,%bx
		mov    %dx,data_f0b9e
		cmp    $0x1,%bx
		jne    jump_2ae9d
		movswl %cx,%ecx
		mov    %ebp,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_42151
		test   %ax,%ax
		jne    jump_2ae82
	jump_2ae78:
		mov    $0xffffffff,%ebx
		jmp    jump_2af4d
	jump_2ae82:
		movswl (%esi),%edx
		movswl (%edi),%eax
		call   func_11db2
		call   func_28596
		test   %ax,%ax
		jne    jump_2af41
		jmp    jump_2ae78
	jump_2ae9d:
		movswl %cx,%edx
		mov    %ebp,%eax
		call   func_28465
		movswl %ax,%edx
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   func_28540
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_13d02
		mov    $0x1,%eax
		call   func_44d67
		call   func_45559
	jump_2aed2:
		mov    %ebp,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2aef3
		xor    %eax,%eax
		mov    $0xffffffff,%ebx
		call   func_44d67
		jmp    jump_2af4d
	jump_2aef3:
		movswl (%esi),%edx
		movswl (%edi),%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2aed2
		movswl (%esi),%edx
		movswl (%edi),%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_2aed2
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_2af33
		cmpb   $0x2,0xd(%ebx)
		jne    jump_2aed2
	jump_2af33:
		mov    %ecx,%eax
		call   func_28596
		xor    %eax,%eax
		call   func_44d67
	jump_2af41:
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   func_28889
	jump_2af4d:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2af53:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		xor    %edx,%edx
		movswl %bx,%ebx
		mov    %dx,data_f0b9e
		call   func_13f8a
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_2af79:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2afdc
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_2af79
		mov    0xb(%eax),%edx
		sar    $0x18,%edx
		movsbl %cl,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_2af79
		cmpb   $0x2,0xd(%ebx)
		je     jump_2af79
		mov    %ebx,%eax
		call   func_28596
		jmp    jump_2af79
	jump_2afdc:
		add    $0x8,%esp
		ret


/*----------------------------------------------------------------*/
func_2afe0:
/*----------------------------------------------------------------*/
		push   %eax
		push   %edx
		mov    0x2(%esp),%eax
		xor    %edx,%edx
		movswl %bx,%ebx
		mov    %dx,data_f0b9e
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1ac08
	jump_2b001:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2afdc
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		cmpb   $0x2,0xd(%eax)
		jne    jump_2b001
		call   func_28596
		jmp    jump_2b001


/*----------------------------------------------------------------*/
func_2b031:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x8(%esp)
		cmpw   $0x1,data_74492
		jne    jump_2b0c1
		mov    0x1a(%esp),%eax
		mov    0x6(%esp),%ecx
		mov    %edi,%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		mov    %eax,0x8(%esp)
		mov    %esi,%eax
		call   func_42375
		test   %ax,%ax
		jne    jump_2b077
	jump_2b06d:
		mov    $0xffffffff,%eax
		jmp    jump_2b1c8
	jump_2b077:
		mov    0x4(%esp),%ebx
		mov    0xb(%ebp),%ecx
		movswl (%edi),%edx
		movswl (%esi),%eax
		sar    $0x18,%ecx
		call   func_2af53
		cmpw   $0x0,data_f0b9e
		jne    jump_2b1bc
		mov    0x4(%esp),%ebx
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_2afe0
		cmpw   $0x0,data_f0b9e
		je     jump_2b06d
		xor    %esi,%esi
		mov    %si,data_f0b9e
		jmp    jump_2b1bc
	jump_2b0c1:
		mov    0x6(%esp),%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_28465
		mov    %ax,0x8(%esp)
	jump_2b0d4:
		mov    $0x1,%eax
		mov    0x6(%esp),%edx
		call   func_44d67
		sar    $0x10,%edx
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   func_28540
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_13d02
	jump_2b0fe:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2b11d
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_2b06d
	jump_2b11d:
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2b0fe
		mov    0x1a(%esp),%eax
		mov    0xb(%ebp),%ecx
		sar    $0x10,%eax
		movswl (%edi),%edx
		mov    %eax,(%esp)
		sar    $0x18,%ecx
		mov    (%esp),%ebx
		movswl (%esi),%eax
		call   func_2af53
		cmpw   $0x0,data_f0b9e
		jle    jump_2b173
		mov    %ebp,%eax
		movswl (%edi),%ebx
		movswl (%esi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2b1a7
		xor    %ecx,%ecx
		mov    %cx,data_f0b9e
		jmp    jump_2b1a7
	jump_2b173:
		mov    (%esp),%ebx
		movswl (%edi),%edx
		movswl (%esi),%eax
		call   func_2afe0
		cmpw   $0x0,data_f0b9e
		jle    jump_2b1a7
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		mov    %ebp,%eax
		movswl (%edi),%ebx
		movswl (%esi),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2b1b5
	jump_2b1a7:
		cmpw   $0x0,data_f0b9e
		je     jump_2b0d4
	jump_2b1b5:
		xor    %eax,%eax
		call   func_44d67
	jump_2b1bc:
		mov    %ebp,%eax
		call   func_28889
		mov    $0x1,%eax
	jump_2b1c8:
		add    $0xc,%esp
		jmp    jump_28c73


/*----------------------------------------------------------------*/
func_2b1d0:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %bx,0x8(%esp)
		cmpw   $0x1,data_74492
		jne    jump_2b27d
		test   %bx,%bx
		jne    jump_2b21f
		mov    -0x2(%esp),%eax
		mov    $0x5,%ecx
		sar    $0x10,%eax
		lea    0x10(%esp),%edx
		push   %eax
		mov    %edi,%ebx
		lea    0x10(%esp),%eax
		call   func_4258c
	jump_2b210:
		test   %ax,%ax
		jne    jump_2b242
	jump_2b215:
		mov    $0xffffffff,%eax
		jmp    jump_2b38a
	jump_2b21f:
		push   $0x1000
		mov    0x2(%esp),%eax
		mov    $0x5,%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%edx
		push   %eax
		mov    %edi,%ebx
		lea    0x14(%esp),%eax
		call   func_42743
		jmp    jump_2b210
	jump_2b242:
		mov    0x6(%esp),%ecx
		mov    -0x2(%esp),%ebx
		mov    0xb(%edi),%eax
		mov    0xe(%esp),%edx
		sar    $0x18,%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		push   %eax
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_28a97
		cmpw   $0x0,data_f0b9e
		je     jump_2b215
		mov    %edi,%eax
		call   func_28889
		jmp    jump_2b2ab
	jump_2b27d:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%esp),%eax
		mov    $0x5,%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%edx
		push   %eax
		mov    %edi,%ebx
		lea    0x14(%esp),%eax
		call   func_28b24
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2b215
	jump_2b2ab:
		mov    (%esp),%eax
		add    $0x3,%eax
		xor    %esi,%esi
		mov    %ax,0x4(%esp)
		jmp    jump_2b371
	jump_2b2bf:
		movswl %si,%ecx
		mov    data_f0648(,%ecx,4),%ecx
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_2b370
		cmpw   $0x0,0x8(%esp)
		jne    jump_2b318
		mov    -0x2(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x10,%ebx
		call   func_25c88
		cmpb   $0x1,0xe(%ecx)
		jne    jump_2b312
		cmpb   $0xff,0x56(%ecx)
		jne    jump_2b312
		cmpb   $0x0,0x83(%ecx)
		jne    jump_2b312
		testb  $0x10,0x1e(%ecx)
		je     jump_2b312
		mov    %ecx,%eax
		call   func_196d0
	jump_2b312:
		movb   $0x0,0x1e(%ecx)
		jmp    jump_2b370
	jump_2b318:
		mov    0x2(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x10,%ebx
		call   func_25c88
		mov    $0x1e,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   func_28947
		cmp    $0x1,%ax
		jne    jump_2b370
		mov    0x1e(%ecx),%ah
		mov    -0x2(%esp),%edx
		or     $0x10,%ah
		sar    $0x10,%edx
		mov    %ah,0x1e(%ecx)
		mov    data_7448c(,%edx,2),%ax
		mov    0xe(%ecx),%dl
		mov    %ax,0x23(%ecx)
		cmp    $0x1,%dl
		jne    jump_2b370
		cmpb   $0xff,0x56(%ecx)
		jne    jump_2b370
		mov    %ecx,%eax
		call   func_19718
	jump_2b370:
		inc    %esi
	jump_2b371:
		cmp    data_f0b9e,%si
		jl     jump_2b2bf
		mov    %edi,%eax
		call   func_12124
		mov    $0x1,%eax
	jump_2b38a:
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2b391:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %dx,0xc(%esp)
		mov    %bx,0x10(%esp)
		mov    %cx,0x8(%esp)
		testb  $0x28,0x11(%esp)
		setne  %al
		mov    data_74492,%dx
		movzbw %al,%si
		cmp    $0x1,%dx
		jne    jump_2b426
		mov    0xe(%esp),%eax
		mov    0xa(%esp),%edi
		sar    $0x10,%eax
		mov    $0x5,%ecx
		push   %eax
		sar    $0x10,%edi
		lea    0x8(%esp),%edx
		push   %edi
		mov    %ebp,%ebx
		lea    0x8(%esp),%eax
		call   func_42743
		test   %ax,%ax
		jne    jump_2b3f4
	jump_2b3ea:
		mov    $0xffffffff,%eax
		jmp    jump_28ecf
	jump_2b3f4:
		mov    0x2(%esp),%edx
		mov    0xb(%ebp),%eax
		movswl %si,%ecx
		sar    $0x18,%eax
		mov    %edi,%ebx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_28a97
		cmpw   $0x0,data_f0b9e
		je     jump_2b3ea
		mov    %ebp,%eax
		call   func_28889
		jmp    jump_2b44c
	jump_2b426:
		movswl %si,%eax
		push   %eax
		mov    0xe(%esp),%eax
		mov    $0x5,%ecx
		sar    $0x10,%eax
		lea    0x8(%esp),%edx
		push   %eax
		mov    %ebp,%ebx
		lea    0x8(%esp),%eax
		call   func_28b24
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2b3ea
	jump_2b44c:
		xor    %esi,%esi
		jmp    jump_2b53f
	jump_2b453:
		movswl %si,%ecx
		mov    data_f0648(,%ecx,4),%ecx
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_2b53e
		mov    0x10(%esp),%eax
		cmp    $0x20,%ax
		jb     jump_2b49b
		jbe    jump_2b4e2
		cmp    $0x800,%ax
		jb     jump_2b490
		jbe    jump_2b558
		cmp    $0x2000,%ax
		je     jump_2b58f
		jmp    jump_2b517
	jump_2b490:
		cmp    $0x40,%ax
		je     jump_2b504
		jmp    jump_2b517
	jump_2b49b:
		cmp    $0x8,%ax
		jb     jump_2b517
		jbe    jump_2b4b2
		cmp    $0x10,%ax
		je     jump_2b4ca
		jmp    jump_2b517
	jump_2b4b2:
		mov    0xa(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x10,%ebx
		call   func_261fc
		jmp    jump_2b517
	jump_2b4ca:
		mov    0x9(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x18,%ebx
		call   func_26391
		jmp    jump_2b517
	jump_2b4e2:
		testb  $0x40,0x15(%ecx)
		jne    jump_2b53e
		mov    0xa(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x10,%ebx
		call   func_26584
		jmp    jump_2b517
	jump_2b504:
		mov    0xa(%esp),%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		sar    $0x10,%ebx
		call   func_26672
	jump_2b517:
		mov    0x10(%esp),%al
		mov    0x15(%ecx),%bh
		mov    0x6(%esp),%edx
		or     %al,%bh
		mov    0xa(%esp),%eax
		mov    %bh,0x15(%ecx)
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    data_7448a(,%eax,2),%ax
		mov    %ax,0x16(%ecx,%edx,2)
	jump_2b53e:
		inc    %esi
	jump_2b53f:
		cmp    data_f0b9e,%si
		jl     jump_2b453
		mov    %ebp,%eax
		call   func_12124
		jmp    jump_28eca
	jump_2b558:
		mov    0xa(%esp),%edi
		movsbl 0x1(%ecx),%edx
		sar    $0x10,%edi
		movsbl (%ecx),%eax
		mov    %edi,%ebx
		call   func_26810
		mov    0x6(%esp),%eax
		mov    0x1e(%ecx),%dh
		sar    $0x10,%eax
		or     $0x8,%dh
		add    %eax,%eax
		mov    %dh,0x1e(%ecx)
		add    %eax,%ecx
		mov    data_7448a(,%edi,2),%ax
		mov    %ax,0x1f(%ecx)
		jmp    jump_2b53e
	jump_2b58f:
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_26b1f
		mov    0x1e(%ecx),%dl
		or     $0x20,%dl
		mov    0xa(%esp),%eax
		mov    %dl,0x1e(%ecx)
		mov    0x6(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    data_74488(,%eax,2),%ax
		mov    %ax,0x1f(%ecx,%edx,2)
		jmp    jump_2b53e


/*----------------------------------------------------------------*/
func_2b5c4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,0x8(%esp)
		mov    %bx,0x4(%esp)
		xor    %eax,%eax
		call   func_137e7
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_29143
		mov    %eax,%edx
		mov    $data_d6620,%eax
		call   func_1137a
		mov    0x8(%esp),%al
		movb   $0x2,0xd(%ebx)
		mov    %al,(%ebx)
		mov    0x4(%esp),%al
		mov    %al,0x1(%ebx)
		mov    0xe(%esi),%al
		mov    %al,0xe(%ebx)
		mov    0x63(%esi),%al
		movb   $0x3,0x64(%ebx)
		mov    %al,0x63(%ebx)
		mov    0xf(%esi),%al
		movb   $0x0,0x14(%ebx)
		movb   $0xff,0xf(%ebx)
		movw   $0x0,0x50(%ebx)
		movb   $0x0,0x56(%ebx)
		movw   $0x0,0x57(%ebx)
		movb   $0x0,0x81(%ebx)
		add    $0xa,%al
		movb   $0xff,0x82(%ebx)
		mov    %al,0x12(%ebx)
		mov    0x4c(%ebx),%eax
		mov    %eax,0x48(%ebx)
		mov    0x81(%ebx),%al
		mov    %al,0x7f(%ebx)
		mov    0x82(%ebx),%al
		mov    %al,0x80(%ebx)
		cmpb   $0x1,0xe(%esi)
		jne    jump_2b66c
		movb   $0x2,0x83(%ebx)
	jump_2b66c:
		mov    0xb(%esi),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ecx,%edx
		add    $data_cc968,%eax
		call   func_1134f
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		movsbw data_e502d(%eax),%dx
		mov    %dx,(%esp)
		movb   $0xff,data_e502d(%eax)
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ecx)
		mov    $0x2,%eax
		xor    %ebx,%ebx
		call   func_6104a
	jump_2b6b7:
		movswl %bx,%eax
		imul   $0xd,%eax,%eax
		mov    0x5d(%ecx),%edx
		sar    $0x18,%edx
		imul   $0x23c,%edx,%edx
		mov    data_d66b1(%edx,%eax,1),%eax
		inc    %ebx
		call   func_100f2
		cmp    $0x2c,%bx
		jl     jump_2b6b7
		mov    (%esp),%dl
		mov    0x5f(%ecx),%eax
		mov    0x2(%esp),%esi
		sar    $0x10,%eax
		mov    0x6(%esp),%edi
		mov    %dl,data_e502d(%eax)
		mov    $0x32,%edx
		mov    $data_776f8,%eax
		sar    $0x10,%esi
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77702,%eax
		sar    $0x10,%edi
		call   func_4f460
		mov    %esi,%edx
		mov    %edi,%eax
		mov    %ecx,%ebx
		call   func_272ad
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_11e04
		mov    $0x33,%eax
		call   func_4f4cd
		call   func_1ffcd
		jmp    jump_29143


/*----------------------------------------------------------------*/
func_2b73f:
/*----------------------------------------------------------------*/
		push   %ebx
		movswl %dx,%edx
		xor    %ebx,%ebx
		jmp    jump_2b836


/*----------------------------------------------------------------*/
func_2b74a:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x1,%ebx
	jump_2b750:
		movswl %dx,%edx
		call   func_29273
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b75a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_7779a,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_777a6,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_777b1,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
	jump_2b794:
		call   func_29514
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b79c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77687,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
	jump_2b7b8:
		call   func_29722
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b7c0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x17a
		mov    $0x7,%ecx
		mov    $0x5a,%ebx
	jump_2b7d1:
		movswl %dx,%edx
	jump_2b7d4:
		call   func_29f4d
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b7dc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_777bd,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_777c6,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_777d1,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    0xb(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		xor    %ebx,%ebx
		jmp    jump_2b8ea


/*----------------------------------------------------------------*/
func_2b822:
/*----------------------------------------------------------------*/
		push   %ebx
		movswl %dx,%edx
		xor    %ebx,%ebx
		jmp    jump_2b8fc


/*----------------------------------------------------------------*/
func_2b82d:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x1,%ebx
	jump_2b833:
		movswl %dx,%edx
	jump_2b836:
		call   func_28ed6
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b83d:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x2,%ebx
		jmp    jump_2b750


/*----------------------------------------------------------------*/
func_2b848:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_777c6,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x1,%ebx
		jmp    jump_2b794


/*----------------------------------------------------------------*/
func_2b86c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_7776b,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x1,%ebx
		jmp    jump_2b7b8


/*----------------------------------------------------------------*/
func_2b890:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x176
		mov    $0x8,%ecx
		mov    $0x59,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2b8a6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77692,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_777c6,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_777da,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    0xb(%esi),%ecx
		mov    $0x1,%ebx
	jump_2b8e7:
		sar    $0x18,%ecx
	jump_2b8ea:
		call   func_2a1c6
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b8f3:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x1,%ebx
	jump_2b8f9:
		movswl %dx,%edx
	jump_2b8fc:
		call   func_2a75a
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b903:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x2,%ebx
		jmp    jump_2b833


/*----------------------------------------------------------------*/
func_2b90e:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x4,%ebx
		jmp    jump_2b750


/*----------------------------------------------------------------*/
func_2b919:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_7779a,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_777a6,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_777e3,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x2,%ebx
		jmp    jump_2b794


/*----------------------------------------------------------------*/
func_2b95b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_777ed,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x2,%ebx
		jmp    jump_2b7b8


/*----------------------------------------------------------------*/
func_2b97f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x16e
		mov    $0x9,%ecx
		mov    $0x58,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2b995:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_7778d,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    0xb(%esi),%ecx
		mov    $0x2,%ebx
		jmp    jump_2b8e7


/*----------------------------------------------------------------*/
func_2b9bd:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x2,%ebx
		jmp    jump_2b8f9


/*----------------------------------------------------------------*/
func_2b9c8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		cmp    $0x1,%dx
		jle    jump_2b9e0
		mov    $0x7,%eax
		jmp    jump_2b9e5
	jump_2b9e0:
		mov    $0x5,%eax
	jump_2b9e5:
		mov    %esp,%edx
		movswl %ax,%ecx
		mov    %esi,%ebx
		lea    0x4(%esp),%eax
		call   func_2ae44
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2ba05
		mov    $0xffffffff,%eax
		jmp    jump_2ba86
	jump_2ba05:
		mov    $0x32,%edx
		mov    $data_777f7,%eax
		call   func_4f460
		cmp    $0x1,%di
		jb     jump_2ba24
		jbe    jump_2ba40
		cmp    $0x2,%di
		je     jump_2ba4c
		jmp    jump_2ba64
	jump_2ba24:
		test   %di,%di
		jne    jump_2ba64
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_2476e
		jmp    jump_2ba64
	jump_2ba40:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		xor    %ebx,%ebx
		jmp    jump_2ba59
	jump_2ba4c:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
	jump_2ba59:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_25047
	jump_2ba64:
		mov    %esi,%eax
		call   func_12124
		movswl %di,%eax
		inc    %eax
		imul   $0x1388,%eax,%edx
		mov    $0x1e,%ebx
		mov    %esi,%eax
		call   func_2accb
	jump_2ba81:
		mov    $0x1,%eax
	jump_2ba86:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2ba8e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ebp
		mov    %dx,0x14(%esp)
		mov    %esp,%edi
		push   $0x2
		mov    $0x5,%ecx
		mov    %edx,%eax
		mov    $data_2840a,%esi
		add    $0x2,%eax
		mov    %ebp,%ebx
		cwtl
		lea    0x14(%esp),%edx
		push   %eax
		lea    0x14(%esp),%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_2b031
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2bad6
		mov    $0xffffffff,%eax
		jmp    jump_2bbae
	jump_2bad6:
		mov    $0x32,%edx
		mov    $data_777f7,%eax
		call   func_4f460
		mov    0x14(%esp),%edx
		cmp    $0x1,%dx
		jb     jump_2baf9
		jbe    jump_2bb13
		cmp    $0x2,%dx
		je     jump_2bb28
		jmp    jump_2bb3b
	jump_2baf9:
		test   %dx,%dx
		jne    jump_2bb3b
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_25254
		jmp    jump_2bb3b
	jump_2bb13:
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_253dc
		jmp    jump_2bb3b
	jump_2bb28:
		mov    0xe(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_25591
	jump_2bb3b:
		mov    %ebp,%eax
		call   func_12124
		cmpw   $0x0,data_f0b9e
		jle    jump_2bb62
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		mov    $0x1e,%ebx
		mov    (%esp,%eax,4),%edx
		mov    %ebp,%eax
		call   func_2accb
	jump_2bb62:
		xor    %eax,%eax
		mov    %ax,data_f0b9e
		mov    0x14(%esp),%eax
		add    $0x2,%eax
		mov    0xe(%esp),%edx
		movswl %ax,%ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2afe0
		cmpw   $0x0,data_f0b9e
		jle    jump_2bba9
		mov    0x12(%esp),%edx
		mov    $0x1e,%ebx
		sar    $0x10,%edx
		mov    %ebp,%eax
		mov    (%esp,%edx,4),%edx
		call   func_2accb
	jump_2bba9:
		mov    $0x1,%eax
	jump_2bbae:
		add    $0x18,%esp
	jump_2bbb1:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2bbb7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77757,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
	jump_2bbd3:
		call   func_2b1d0
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2bbdb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77800,%eax
		mov    $0x1,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x3,%ebx
		jmp    jump_2b8ea


/*----------------------------------------------------------------*/
func_2bc05:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_777f7,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77757,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x3,%ebx
	jump_2bc33:
		call   func_2a75a
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2bc3b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    data_d6624,%edx
		push   %edx
		mov    data_d6620,%ebx
		push   %ebx
		call   func_113dd
		test   %eax,%eax
		jne    jump_2bc68
	jump_2bc5e:
		mov    $0xffffffff,%eax
		jmp    jump_2bdf1
	jump_2bc68:
		mov    %esi,%eax
		call   func_169d7
		movsbw (%esi),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,(%esp)
		mov    %esp,%edx
		mov    0x60(%esi),%ebx
		lea    0x4(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_2bc5e
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2bc5e
		mov    0xb(%esi),%eax
		sar    $0x18,%eax
		call   func_137e7
		mov    %eax,%ecx
		mov    %eax,%ebp
		test   %eax,%eax
		je     jump_2bc5e
		mov    %eax,%edx
		mov    $data_d6620,%eax
		call   func_1137a
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ecx)
		mov    %esi,%eax
		mov    $0x32,%edx
		call   func_28889
		mov    $data_777f7,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7780d,%eax
		call   func_4f460
		mov    0x5d(%ecx),%edx
		mov    %esi,%eax
		sar    $0x18,%edx
		call   func_59a70
		mov    0x4(%esp),%al
		mov    %al,(%ecx)
		mov    (%esp),%al
		mov    %al,0x1(%ecx)
		mov    %ecx,%ebx
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11e04
		cmp    $0x1,%di
		jb     jump_2bd55
		jbe    jump_2bd91
		cmp    $0x2,%di
		je     jump_2bdc1
		jmp    jump_2bdcf
	jump_2bd55:
		test   %di,%di
		jne    jump_2bdcf
		mov    0x4c(%ecx),%eax
		mov    %eax,%esi
		shl    $0x4,%esi
		sub    %eax,%esi
		add    %esi,%esi
		mov    $0x64,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x50(%ecx),%edx
		sar    $0x10,%edx
		mov    %edx,%esi
		shl    $0x4,%esi
		sub    %edx,%esi
		add    %esi,%esi
		mov    %eax,0x48(%ecx)
	jump_2bd86:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		jmp    jump_2bdcb
	jump_2bd91:
		mov    0x4c(%ecx),%eax
		mov    %eax,%esi
		shl    $0x4,%esi
		sub    %eax,%esi
		shl    $0x2,%esi
		mov    $0x64,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,0x48(%ecx)
		mov    0x50(%ecx),%eax
		sar    $0x10,%eax
		mov    %eax,%esi
		shl    $0x4,%esi
		sub    %eax,%esi
		shl    $0x2,%esi
		jmp    jump_2bd86
	jump_2bdc1:
		mov    0x4c(%ecx),%eax
		mov    %eax,0x48(%ecx)
		mov    0x52(%ecx),%ax
	jump_2bdcb:
		mov    %ax,0x50(%ecx)
	jump_2bdcf:
		mov    0xb(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebp,%edx
		add    $data_cc968,%eax
		call   func_1134f
		call   func_45559
		mov    $0x1,%eax
	jump_2bdf1:
		add    $0x8,%esp
		jmp    jump_2bbb1


/*----------------------------------------------------------------*/
func_2bdf9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77816,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7780d,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_7781f,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x4,%ebx
		jmp    jump_2bc33


/*----------------------------------------------------------------*/
func_2be3b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77827,%eax
		mov    $0x1,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x8,%ebx
	jump_2be60:
		call   func_2b391
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2be69:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77827,%eax
		mov    $0x2,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x10,%ebx
		jmp    jump_2be60


/*----------------------------------------------------------------*/
func_2be90:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77827,%eax
		mov    $0x3,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x20,%ebx
		jmp    jump_2be60


/*----------------------------------------------------------------*/
func_2beb7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77827,%eax
		mov    $0x3,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x40,%ebx
		jmp    jump_2be60


/*----------------------------------------------------------------*/
func_2bede:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77800,%eax
		mov    $0x1,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x800,%ebx
		jmp    jump_2be60


/*----------------------------------------------------------------*/
func_2bf08:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77827,%eax
		call   func_4f460
		xor    %ecx,%ecx
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x4,%ebx
		jmp    jump_2b8ea


/*----------------------------------------------------------------*/
func_2bf2f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77800,%eax
		mov    $0x3,%ecx
		call   func_4f460
		movswl %bx,%edx
		mov    %esi,%eax
		mov    $0x2000,%ebx
		jmp    jump_2be60


/*----------------------------------------------------------------*/
func_2bf59:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x72
		mov    $0x4c,%ebx
		movswl %dx,%edx
		xor    %ecx,%ecx
		jmp    jump_2b7d4


/*----------------------------------------------------------------*/
func_2bf6c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x80
		mov    $0x1,%ecx
		mov    $0x48,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bf82:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x6d
		mov    $0x2,%ecx
		mov    $0x3f,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bf95:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x6f
		mov    $0x3,%ecx
		mov    $0x41,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bfa8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x177
		mov    $0x4,%ecx
		mov    $0x43,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bfbe:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x173
		mov    $0x5,%ecx
		mov    $0x53,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bfd4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x16f
		mov    $0x6,%ecx
		mov    $0x52,%ebx
		jmp    jump_2b7d1


/*----------------------------------------------------------------*/
func_2bfea:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $0x32,%edx
		mov    $data_77834,%eax
		call   func_4f460
		movswl %bx,%edx
		mov    %ecx,%eax
		mov    $0x1,%ebx
		jmp    jump_2bbd3


/*----------------------------------------------------------------*/
func_2c00e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %dx,0xc(%esp)
		cmpw   $0x1,data_74492
		jne    jump_2c055
		push   $0x0
		mov    $0x5,%ecx
		lea    0x8(%esp),%edx
		mov    %eax,%ebx
		lea    0xc(%esp),%eax
		call   func_42a1d
		test   %ax,%ax
		jne    jump_2c04c
	jump_2c042:
		mov    $0xffffffff,%eax
		jmp    jump_2c287
	jump_2c04c:
		mov    %ebp,%eax
		call   func_28889
		jmp    jump_2c071
	jump_2c055:
		push   $0x1
		mov    $0x5,%ecx
		lea    0x8(%esp),%edx
		mov    %eax,%ebx
		lea    0xc(%esp),%eax
		call   func_28982
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2c042
	jump_2c071:
		mov    $0x32,%edx
		mov    $data_77800,%eax
		call   func_4f460
		mov    0xc(%esp),%al
		inc    %al
		mov    data_f0648,%ebx
		and    $0xff,%eax
		mov    $0x1,%ecx
		push   %eax
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		mov    $0xb,%ebx
		call   func_204e8
		mov    0xa(%esp),%ecx
		mov    $0x8,%eax
		sar    $0x10,%ecx
		sar    %cl,%eax
		cwtl
		mov    $0xffffffff,%esi
		call   func_499bd
		test   %ax,%ax
		jne    jump_2c195
		mov    data_f0648,%ebx
		cmpb   $0x0,0x5e(%ebx)
		je     jump_2c0f3
		xor    %eax,%eax
		mov    0x5e(%ebx),%al
		call   func_19600
		test   %ax,%ax
		jne    jump_2c0f3
		movzbw 0x5e(%ebx),%si
		movb   $0x0,0x5e(%ebx)
		jmp    jump_2c195
	jump_2c0f3:
		mov    0x5f(%ebx),%dl
		test   %dl,%dl
		je     jump_2c116
		xor    %eax,%eax
		mov    %dl,%al
		call   func_19600
		test   %ax,%ax
		jne    jump_2c116
		movzbw 0x5f(%ebx),%si
		movb   $0x0,0x5f(%ebx)
		jmp    jump_2c195
	jump_2c116:
		mov    0x5d(%ebx),%dh
		test   %dh,%dh
		je     jump_2c142
		xor    %eax,%eax
		mov    %dh,%al
		call   func_19600
		test   %ax,%ax
		jne    jump_2c142
		mov    $0x2,%edx
		mov    %ebx,%eax
		movzbw 0x5d(%ebx),%si
		call   func_18262
		movb   $0x0,0x5d(%ebx)
		jmp    jump_2c195
	jump_2c142:
		mov    0x5a(%ebx),%cl
		test   %cl,%cl
		je     jump_2c16b
		xor    %eax,%eax
		mov    %cl,%al
		call   func_19600
		test   %ax,%ax
		jne    jump_2c16b
		mov    %ebx,%eax
		xor    %edx,%edx
		movzbw 0x5a(%ebx),%si
		call   func_18262
		movb   $0x0,0x5a(%ebx)
		jmp    jump_2c195
	jump_2c16b:
		mov    0x5b(%ebx),%ch
		test   %ch,%ch
		je     jump_2c195
		xor    %eax,%eax
		mov    %ch,%al
		call   func_19600
		test   %ax,%ax
		jne    jump_2c195
		mov    $0x1,%edx
		mov    %ebx,%eax
		movzbw 0x5b(%ebx),%si
		call   func_18262
		movb   $0x0,0x5b(%ebx)
	jump_2c195:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     jump_2c27b
		mov    $0x78,%ecx
		xor    %eax,%eax
		mov    $0x13f,%ebx
		call   func_6104a
		mov    $0x1,%eax
		mov    $0x50,%edx
		call   func_5ecc7
		xor    %eax,%eax
		call   func_5edde
		mov    $0x78,%ecx
		mov    $0x13f,%ebx
		mov    $0x50,%edx
		xor    %eax,%eax
		call   func_5edde
		xor    %eax,%eax
		dec    %esi
		call   func_5ecc7
		mov    %esi,%eax
		inc    %eax
		cwtl
		xor    %edx,%edx
		mov    %eax,(%esp)
		call   func_184ca
		mov    %eax,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x7c,%eax
		shl    $0x2,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		movswl %si,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		mov    data_efdb6(,%ebx,4),%ax
		add    $0x7c,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		mov    data_efdb4(,%ebx,4),%di
		add    $0xc,%eax
		mov    data_efdb8(,%ebx,4),%esi
		add    %edi,%eax
		mov    %esi,%ebx
		cwtl
		call   func_5f3fd
		mov    (%esp),%eax
		xor    %edx,%edx
		call   func_184ca
		push   %eax
		push   $data_7783f
		add    $0x1e,%ecx
		push   $0x5c
		movswl %cx,%eax
		push   %eax
		call   func_5e048
		add    $0x10,%esp
		call   func_5e9e8
		mov    $0x12c,%eax
		call   func_499ef
		call   func_45559
	jump_2c27b:
		mov    %ebp,%eax
		call   func_12124
		mov    $0x1,%eax
	jump_2c287:
		add    $0x10,%esp
		jmp    jump_2bbb1


/*----------------------------------------------------------------*/
func_2c28f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		cmpw   $0x1,data_74492
		jne    jump_2c2d2
		push   $0x1
		mov    $0x5,%ecx
		lea    0x4(%esp),%edx
		mov    %eax,%ebx
		lea    0x8(%esp),%eax
		call   func_42a1d
		test   %ax,%ax
		jne    jump_2c2c9
	jump_2c2bf:
		mov    $0xffffffff,%eax
		jmp    jump_2ba86
	jump_2c2c9:
		mov    %esi,%eax
		call   func_28889
		jmp    jump_2c2ee
	jump_2c2d2:
		push   $0x1
		mov    $0x5,%ecx
		lea    0x4(%esp),%edx
		mov    %eax,%ebx
		lea    0x8(%esp),%eax
		call   func_28982
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2c2bf
	jump_2c2ee:
		mov    $0x32,%edx
		mov    $data_77849,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77854,%eax
		call   func_4f460
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl %di,%ecx
		call   func_26c9a
		mov    $0x8,%eax
		sar    %cl,%eax
		cwtl
		call   func_499bd
		test   %ax,%ax
		jne    jump_2c35e
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		cmpw   $0x12c,0x61(%eax)
		jge    jump_2c35e
		cmpb   $0x32,0x43(%eax)
		jae    jump_2c35e
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_1db1d
	jump_2c35e:
		mov    %esi,%eax
		call   func_12124
		jmp    jump_2ba81


/*----------------------------------------------------------------*/
func_2c36a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    data_d6624,%ebx
		push   %ebx
		mov    data_d6620,%esi
		push   %esi
		call   func_113dd
		test   %eax,%eax
		jne    jump_2c393
	jump_2c389:
		mov    $0xffffffff,%eax
		jmp    jump_2c461
	jump_2c393:
		inc    %edx
		mov    %ecx,%eax
		movswl %dx,%ebx
		mov    %esp,%edx
		call   func_29c5a
		cmpw   $0x0,data_74492
		jne    jump_2c3be
		mov    %ecx,%eax
		movsbl 0x1(%ecx),%ebx
		movsbl (%ecx),%edx
		call   func_4a815
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2c389
	jump_2c3be:
		mov    %ecx,%eax
		call   func_28889
		xor    %eax,%eax
		mov    0xf(%ecx),%al
		add    $0xa,%eax
		movswl %ax,%edx
		movsbw 0xe(%ecx),%ax
		dec    %eax
		cwtl
		xor    %esi,%esi
		call   func_29ee4
	jump_2c3e0:
		lea    0x4(%esp),%edx
		movsbw (%ecx),%ax
		movswl %si,%ebx
		mov    %ax,0x8(%esp)
		mov    -0x3(%esp,%ebx,1),%ebx
		movsbw 0x1(%ecx),%ax
		sar    $0x18,%ebx
		mov    %ax,0x4(%esp)
		lea    0x8(%esp),%eax
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_2c44e
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2c44e
		mov    0x2(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %ecx,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_2b5c4
	jump_2c44e:
		inc    %esi
		cmp    $0x3,%si
		jl     jump_2c3e0
		mov    %ecx,%eax
	jump_2c457:
		call   func_12124
	jump_2c45c:
		mov    $0x1,%eax
	jump_2c461:
		add    $0xc,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2c468:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		cmpw   $0x1,data_74492
		jne    jump_2c4c6
		push   $0x4000
		mov    $0x5,%ecx
		lea    0x8(%esp),%edx
		push   $0x0
		mov    %eax,%ebx
		lea    0x10(%esp),%eax
		call   func_42743
		test   %ax,%ax
		jne    jump_2c4a5
	jump_2c49e:
		mov    $0xffffffff,%eax
		jmp    jump_2c461
	jump_2c4a5:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		call   func_28596
		mov    %esi,%eax
		call   func_28889
		jmp    jump_2c4e2
	jump_2c4c6:
		push   $0x1
		mov    $0x5,%ecx
		lea    0x8(%esp),%edx
		mov    %eax,%ebx
		lea    0xc(%esp),%eax
		call   func_28982
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2c49e
	jump_2c4e2:
		mov    data_f0648,%eax
		cmpw   $0x12c,0x61(%eax)
		jge    jump_2c55f
		mov    0x1e(%eax),%dl
		test   $0x20,%dl
		jne    jump_2c55f
		test   $0x40,%dl
		jne    jump_2c55f
		mov    $0x32,%edx
		mov    $data_77800,%eax
		mov    -0x3(%esp),%ebx
		call   func_4f460
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_275a4
		mov    data_f0648,%eax
		orb    $0x40,0x1e(%eax)
		mov    data_f0648,%eax
		mov    0x5d(%eax),%eax
		sar    $0x18,%eax
		call   func_119b6
		mov    data_f0648,%eax
		mov    -0x2(%esp),%edx
		movb   $0x64,0x60(%eax)
		sar    $0x10,%edx
		mov    data_f0648,%eax
		mov    data_7448c(,%edx,2),%dx
		mov    %dx,0x25(%eax)
	jump_2c55f:
		mov    %esi,%eax
		jmp    jump_2c457


/*----------------------------------------------------------------*/
func_2c566:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,0x8(%esp)
		mov    %edx,%eax
		push   $0x1
		add    $0x3,%eax
		mov    $0x5,%ecx
		cwtl
		mov    %esi,%ebx
		push   %eax
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_28b24
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2c5a2
		mov    $0xffffffff,%eax
		jmp    jump_2c461
	jump_2c5a2:
		mov    $0x32,%edx
		mov    $data_7785f,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_777e3,%eax
		mov    0x5(%esp),%ebx
		call   func_4f460
		sar    $0x18,%ebx
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_26e1f
		mov    %esi,%eax
		call   func_12124
		xor    %ebx,%ebx
		jmp    jump_2c61e
	jump_2c5e5:
		mov    0x6(%esp),%ecx
		mov    $0x8,%eax
		sar    $0x10,%ecx
		sar    %cl,%eax
		cwtl
		call   func_499bd
		test   %ax,%ax
		jne    jump_2c61d
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%edx
		cmpw   $0x12c,0x61(%edx)
		jge    jump_2c61d
		cmpb   $0x32,0x43(%edx)
		jae    jump_2c61d
		mov    %esi,%eax
		call   func_1db1d
	jump_2c61d:
		inc    %ebx
	jump_2c61e:
		cmp    data_f0b9e,%bx
		jl     jump_2c5e5
		jmp    jump_2c45c


/*----------------------------------------------------------------*/
func_2c62c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    $0x1,%ecx
		mov    $0x5,%ebx
		movswl %dx,%edx
		call   func_2a1c6
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2c643:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $func_2b73f,%edx
		mov    $func_2b74a,%ebx
		mov    $func_2b75a,%ecx
		mov    $func_2b79c,%esi
		mov    $func_2b7c0,%edi
		mov    $func_2b7dc,%ebp
		mov    $func_2b822,%eax
		mov    %edx,data_f13b0
		mov    %ebx,data_f13b4
		mov    %ecx,data_f13b8
		mov    %esi,data_f13bc
		mov    %edi,data_f13c0
		mov    %ebp,data_f13c4
		mov    %eax,data_f13c8
		mov    $func_2b82d,%edx
		mov    $func_2b83d,%ebx
		mov    $func_2b848,%ecx
		mov    $func_2b86c,%esi
		mov    $func_2b890,%edi
		mov    $func_2b8a6,%ebp
		mov    $func_2b8f3,%eax
		mov    %edx,data_f13cc
		mov    %ebx,data_f13d0
		mov    %ecx,data_f13d4
		mov    %esi,data_f13d8
		mov    %edi,data_f13dc
		mov    %ebp,data_f13e0
		mov    %eax,data_f13e4
		mov    $func_2b903,%edx
		mov    $func_2b90e,%ebx
		mov    $func_2b919,%ecx
		mov    $func_2b95b,%esi
		mov    $func_2b97f,%edi
		mov    $func_2b995,%ebp
		mov    $func_2b9bd,%eax
		mov    %edx,data_f13e8
		mov    %ebx,data_f13ec
		mov    %ecx,data_f13f0
		mov    %esi,data_f13f4
		mov    %edi,data_f13f8
		mov    %ebp,data_f13fc
		mov    %eax,data_f1400
		mov    $func_2b9c8,%edx
		mov    $func_2ba8e,%ebx
		mov    $func_2bbb7,%ecx
		mov    $func_2bbdb,%esi
		mov    $func_2bc05,%edi
		mov    $func_2bc3b,%ebp
		mov    $func_2bdf9,%eax
		mov    %edx,data_f1404
		mov    %ebx,data_f1408
		mov    %ecx,data_f140c
		mov    %esi,data_f1410
		mov    %edi,data_f1414
		mov    %ebp,data_f1418
		mov    %eax,data_f141c
		mov    $func_2be3b,%edx
		mov    $func_2be69,%ebx
		mov    $func_2be90,%ecx
		mov    $func_2beb7,%esi
		mov    $func_2bede,%edi
		mov    $func_2bf08,%ebp
		mov    $func_2bf2f,%eax
		mov    %edx,data_f1420
		mov    %ebx,data_f1424
		mov    %ecx,data_f1428
		mov    %esi,data_f142c
		mov    %edi,data_f1430
		mov    %ebp,data_f1434
		mov    %eax,data_f1438
		mov    $func_2bf59,%edx
		mov    $func_2bf6c,%ebx
		mov    $func_2bf82,%ecx
		mov    $func_2bf95,%esi
		mov    $func_2bfa8,%edi
		mov    $func_2bfbe,%ebp
		mov    $func_2bfd4,%eax
		mov    %edx,data_f143c
		mov    %ebx,data_f1440
		mov    %ecx,data_f1444
		mov    %esi,data_f1448
		mov    %edi,data_f144c
		mov    %ebp,data_f1450
		mov    %eax,data_f1454
		mov    $func_2bfea,%edx
		mov    $func_2c00e,%ebx
		mov    $func_2c28f,%ecx
		mov    $func_2c36a,%esi
		mov    $func_2c468,%edi
		mov    $func_2c566,%ebp
		mov    $func_2c62c,%eax
		mov    %edx,data_f1458
		mov    %ebx,data_f145c
		mov    %ecx,data_f1460
		mov    %esi,data_f1464
		mov    %edi,data_f1468
		mov    %ebp,data_f146c
		mov    %eax,data_f1470
		pop    %ebp
		jmp    jump_2853a


/*----------------------------------------------------------------*/
func_2c863:
/*----------------------------------------------------------------*/
		push   %edx
		mov    $0x3,%eax
		call   func_1033b
		xor    %edx,%edx
	jump_2c870:
		mov    $0x5,%eax
		call   func_499bd
		sub    $0x2,%eax
		inc    %edx
		mov    %ax,data_ba838
		call   func_45559
		call   func_499e4
		cmp    $0x40,%dx
		jl     jump_2c870
		xor    %edx,%edx
		mov    %dx,data_ba838
		call   func_45559
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_2c8a4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		test   %ax,%ax
		jne    jump_2c8d3
		mov    $0x32,%edx
		mov    $data_7786a,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77725,%eax
		call   func_4f460
		call   func_21be8
		jmp    jump_2c8d8
	jump_2c8d3:
		call   func_2c863
	jump_2c8d8:
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %dx,data_f0b9e
	jump_2c8e3:
		movswl %di,%ecx
		mov    data_cc968(,%ecx,8),%ecx
	jump_2c8ed:
		test   %ecx,%ecx
		je     jump_2c9c1
		xor    %eax,%eax
		mov    0x15(%ecx),%dl
		mov    0x59(%ecx),%al
		test   $0x20,%dl
		je     jump_2c907
		add    $0x14,%eax
	jump_2c907:
		mov    $0x64,%edx
		sub    %eax,%edx
		movswl %dx,%edx
		imul   $0x2710,%edx,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_ba83c,%dx
		mov    %eax,%esi
		movsbw (%ecx),%ax
		cmp    %dx,%ax
		jl     jump_2c9b6
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movsbl (%ecx),%ebx
		add    $0xc,%edx
		cmp    %edx,%ebx
		jge    jump_2c9b6
		mov    data_ba83e,%bx
		movsbw 0x1(%ecx),%ax
		cmp    %bx,%ax
		jl     jump_2c9b6
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		movsbl 0x1(%ecx),%ebx
		add    $0xc,%edx
		cmp    %edx,%ebx
		jge    jump_2c9b6
		mov    data_f0b9c,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		sar    $0x10,%ebx
		call   func_45bfb
		mov    data_f0b9c,%ebx
		mov    %ecx,%eax
		mov    0x60(%ecx),%edx
		sar    $0x10,%ebx
		sar    $0x18,%edx
		call   func_45ed2
		mov    data_f0b9e,%ax
		mov    data_f0b9c,%edx
		inc    %eax
		sar    $0x10,%edx
		mov    %ax,data_f0b9e
		mov    %ecx,data_f0648(,%edx,4)
	jump_2c9b6:
		sub    %esi,0x48(%ecx)
		mov    0x7b(%ecx),%ecx
		jmp    jump_2c8ed
	jump_2c9c1:
		inc    %edi
		cmp    $0x4,%di
		jl     jump_2c8e3
		call   func_287af
		xor    %ecx,%ecx
		jmp    jump_2c9e5
	jump_2c9d5:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %ecx
	jump_2c9e5:
		cmp    data_f0b9e,%cx
		jl     jump_2c9d5
		xor    %eax,%eax
		call   func_1ed90
		jmp    jump_2853a
.data
data_2c9fa:
		.ascii  "\x06\x00\x10\x00\x02\x00\x0c\x00"
		.ascii  "\x00\x00\x0a\x00\x00\x00\x06\x00"
		.ascii  "\x00\x00\x02\x00"
data_2ca0e:
		.ascii   "====<<<<::::99998888"
data_2ca22:
		.ascii  "\x11\x13\x15"
data_2ca25:
		.ascii   "====<<<<::::999988"
.text


/*----------------------------------------------------------------*/
func_2ca39:
/*----------------------------------------------------------------*/
		mov    %ax,data_f14d8
		ret


/*----------------------------------------------------------------*/
func_2ca40:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%ebx
		mov    %esp,%edi
		mov    $data_2c9fa,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpb   $0x0,0x37(%eax)
		jne    jump_2ca69
		mov    $0xc,%eax
		call   func_499bd
		mov    %al,0x36(%ebx)
	jump_2ca69:
		xor    %edx,%edx
		mov    0x36(%ebx),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x37(%ebx),%dl
		movsbw data_74144(%edx,%eax,4),%dx
		xor    %eax,%eax
		mov    0x35(%ebx),%al
		shl    $0x2,%eax
		cmp    (%esp,%eax,1),%dx
		jge    jump_2ca98
		mov    $0x3,%ecx
		jmp    jump_2caab
	jump_2ca98:
		cmp    0x2(%esp,%eax,1),%dx
		jge    jump_2caa6
		mov    $0x2,%ecx
		jmp    jump_2caab
	jump_2caa6:
		mov    $0x1,%ecx
	jump_2caab:
		xor    %edx,%edx
		mov    0x37(%ebx),%dl
		inc    %edx
		mov    $0x14,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %ecx,%eax
		mov    %dl,0x37(%ebx)
		add    $0x14,%esp
		jmp    jump_2d7cc


/*----------------------------------------------------------------*/
func_2caca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    0x5b(%eax),%al
		mov    $0x39,%edx
		and    $0xff,%eax
		call   func_184a4
		movsbl %al,%edx
		imul   %ebx,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2caf7:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%ebp
		mov    %dx,0x4(%esp)
		mov    0x44(%eax),%ax
		mov    %eax,(%esp)
		imul   %ebx,%eax
		xor    %edx,%edx
		mov    %dx,0x8(%esp)
		mov    %ax,0x44(%ebp)
		jmp    jump_2cb7a
	jump_2cb1b:
		mov    0x6(%esp),%edi
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x10,%edi
		xor    %ebx,%ebx
		mov    data_f0648(,%edi,4),%edx
		call   func_1d770
		mov    0x2(%esp),%ecx
		sar    $0x10,%ecx
		add    %eax,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    data_f0648(,%edi,4),%eax
		call   func_45bfb
		mov    data_f0648(,%edi,4),%eax
		mov    0x48(%eax),%edx
		sub    %ecx,%edx
		mov    %edi,%ebx
		mov    %edx,0x48(%eax)
		mov    0x8(%esp),%ecx
		mov    0x60(%ebp),%edx
		mov    data_f0648(,%edi,4),%eax
		sar    $0x18,%edx
		inc    %ecx
		call   func_45ed2
		mov    %cx,0x8(%esp)
	jump_2cb7a:
		mov    0x8(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_2cb1b
		mov    (%esp),%eax
		mov    %ax,0x44(%ebp)
		call   func_287af
		mov    %ebp,%eax
		call   func_1ed45
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2cba1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		jmp    jump_2cbc2
	jump_2cbaa:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x1(%edx),%cl
		cmp    0x1(%eax),%cl
		jl     jump_2cbc1
		call   func_44d89
	jump_2cbc1:
		inc    %ebx
	jump_2cbc2:
		cmp    data_f0b9e,%bx
		jl     jump_2cbaa
		mov    %edx,%eax
		call   func_44d89
		xor    %ebx,%ebx
		jmp    jump_2cbee
	jump_2cbd6:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x1(%edx),%cl
		cmp    0x1(%eax),%cl
		jge    jump_2cbed
		call   func_44d89
	jump_2cbed:
		inc    %ebx
	jump_2cbee:
		cmp    data_f0b9e,%bx
		jl     jump_2cbd6
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2cbfb:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		mov    0x5b(%eax),%al
		mov    $0x38,%edx
		and    $0xff,%eax
		call   func_184a4
		cbtw
		add    %ebx,%eax
		pop    %ebx
		ret

vtable_2cc16:
		.long   func_2d183
		.long   func_2cfcd
		.long   func_2d092
		.long   func_2d1b8
		.long   func_2d0c4

vtable_2cc2a:
		.long   func_2d1fd
		.long   func_2d209
		.long   func_2d215
		.long   func_2d221


/*----------------------------------------------------------------*/
func_2cc3a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x90,%esp
		mov    %eax,%ebp
		mov    %edx,0x8c(%esp)
		mov    %bx,0x78(%esp)
		mov    %cx,0x68(%esp)
		mov    %esp,%edi
		mov    $data_2ca0e,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %ebp,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1d124
		test   %ax,%ax
		jne    jump_2cc85
		mov    $0xffffffff,%edx
		jmp    jump_2d47e
	jump_2cc85:
		mov    $0xbb8,%eax
		call   w_dos_malloc
		xor    %edx,%edx
		mov    %eax,0x58(%esp)
		jmp    jump_2cca7
	jump_2cc97:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_2cca7:
		cmp    data_f0b9e,%dx
		jl     jump_2cc97
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		xor    %ebx,%ebx
		call   func_11f74
		movsbl 0x0(%ebp),%eax
		movb   $0x5,0x64(%ebp)
		call   func_10971
		mov    %eax,%esi
		movsbl 0x1(%ebp),%eax
		xor    %ebx,%ebx
		call   func_10988
		sub    $0x2,%eax
		add    $0xc,%esi
		mov    %eax,0x84(%esp)
	jump_2cce6:
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		imul   $0xb,%eax,%edx
		movswl %bx,%eax
		add    $0x5,%edx
		add    %eax,%edx
		imul   $0xd,%edx,%ecx
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		imul   $0x23c,%edx,%edx
		add    $data_d66a8,%edx
		add    %edx,%ecx
		mov    %ecx,0x14(%esp,%eax,4)
		mov    %ecx,%edx
		movsbw 0x4(%ecx),%cx
		add    %esi,%ecx
		mov    %cx,0x34(%esp,%eax,2)
		mov    0x84(%esp),%ecx
		movsbw 0x5(%edx),%dx
		add    %ecx,%edx
		inc    %ebx
		mov    %dx,0x28(%esp,%eax,2)
		cmp    $0x5,%bx
		jl     jump_2cce6
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_ba8ad(,%eax,8),%eax
		sar    $0x18,%eax
		cmp    $0xffffffff,%eax
		setne  %al
		movsbw 0x0(%ebp),%si
		xor    %ah,%ah
		xor    %edi,%edi
		mov    %eax,0x6c(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %di,0x60(%esp)
		mov    %ax,0x88(%esp)
	jump_2cd76:
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		imul   $0x28,%edx,%edx
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		imul   $0xa,%eax,%eax
		add    %eax,%edx
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x54(%esp)
		lea    (%eax,%eax,4),%ecx
		movsbw data_ba8b1(%ecx,%edx,1),%ax
		movswl %si,%edi
		mov    %ax,0x80(%esp)
		mov    %edi,%eax
		mov    0x80(%esp),%edx
		call   func_10971
		add    $0xc,%eax
		sub    %edx,%eax
		mov    0x54(%esp),%edx
		mov    %ax,0x40(%esp,%edx,4)
		mov    0x5d(%ebp),%eax
		sar    $0x18,%eax
		imul   $0x28,%eax,%eax
		mov    %eax,0x5c(%esp)
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		imul   $0xa,%eax,%eax
		add    0x5c(%esp),%eax
		movsbw data_ba8b3(%ecx,%eax,1),%ax
		mov    %ax,0x80(%esp)
		mov    %edi,%eax
		mov    0x80(%esp),%ebx
		call   func_10971
		add    $0xc,%eax
		sub    %ebx,%eax
		mov    %ax,0x42(%esp,%edx,4)
		mov    0x5d(%ebp),%ebx
		sar    $0x18,%ebx
		imul   $0x28,%ebx,%ebx
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		imul   $0xa,%eax,%eax
		add    %ebx,%eax
		mov    0x86(%esp),%edi
		movsbw data_ba8b2(%ecx,%eax,1),%ax
		sar    $0x10,%edi
		mov    %ax,0x80(%esp)
		mov    %edi,%eax
		mov    0x80(%esp),%ebx
		call   func_10988
		add    $0x2,%eax
		sub    %ebx,%eax
		mov    %ax,0x48(%esp,%edx,4)
		mov    0x5d(%ebp),%eax
		sar    $0x18,%eax
		imul   $0x28,%eax,%eax
		mov    0x60(%ebp),%ebx
		sar    $0x18,%ebx
		imul   $0xa,%ebx,%ebx
		add    %ebx,%eax
		movsbw data_ba8b4(%ecx,%eax,1),%ax
		mov    %ax,0x80(%esp)
		mov    %edi,%eax
		call   func_10988
		mov    0x80(%esp),%edi
		add    $0x2,%eax
		sub    %edi,%eax
		mov    %ax,0x4a(%esp,%edx,4)
		mov    0x5d(%ebp),%eax
		sar    $0x18,%eax
		imul   $0x28,%eax,%eax
		mov    0x60(%ebp),%edx
		sar    $0x18,%edx
		imul   $0xa,%edx,%edx
		add    %edx,%eax
		movsbw data_ba8b0(%ecx,%eax,1),%dx
		mov    0x54(%esp),%eax
		mov    %dx,0x50(%esp,%eax,2)
		mov    0x60(%esp),%eax
		inc    %eax
		mov    %ax,0x60(%esp)
		cmp    $0x2,%ax
		jl     jump_2cd76
		mov    $0x1,%eax
		mov    $0x1,%edi
		call   func_44d6e
		xor    %ebx,%ebx
		mov    $0xc,%eax
		mov    %bx,0x80(%esp)
		call   func_1033b
		jmp    jump_2d26c
	jump_2cef9:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %bx,0x74(%esp)
		call   func_454b3
		test   %bx,%bx
		jge    jump_2cf1e
		mov    %cx,0x74(%esp)
	jump_2cf1e:
		mov    $0x1,%esi
		jmp    jump_2cf87
	jump_2cf25:
		mov    0x72(%esp),%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x74(%esp)
		movswl %di,%eax
		mov    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %si,%edx
		add    %edx,%eax
		mov    0x72(%esp),%edx
		sar    $0x10,%edx
		mov    -0x2(%esp,%eax,4),%ecx
		mov    0x14(%esp,%edx,4),%eax
		mov    0x9(%eax),%eax
		sar    $0x10,%ecx
		mov    %eax,0x5c(%esp)
		mov    0x26(%esp,%edx,2),%eax
		mov    0x32(%esp,%edx,2),%edx
		mov    0x5c(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %edx,0x5c(%esp)
		mov    %eax,%edx
		mov    0x5c(%esp),%eax
		inc    %esi
		call   func_5f517
	jump_2cf87:
		cmp    %di,%si
		jl     jump_2cf25
		mov    0x7e(%esp),%edx
		sar    $0x10,%edx
		mov    0x14(%esp,%edx,4),%eax
		mov    0x9(%eax),%ebx
		mov    %edx,%eax
		mov    0x26(%esp,%edx,2),%edx
		mov    0x32(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    0x80(%esp),%ebx
		cmp    $0x4,%bx
		ja     func_2d1b8
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_2cc16(,%eax,4)


/*----------------------------------------------------------------*/
func_2cfcd:
/*----------------------------------------------------------------*/
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		call   func_4f4cd
		cmpw   $0x1,0x6c(%esp)
		jne    func_2d1b8
		mov    0x58(%esp),%eax
		push   %eax
		mov    0x52(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    data_bba28(%eax),%ecx
		mov    data_bba26(%eax),%eax
		mov    0x4a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x60(%esp)
		mov    0x42(%esp),%eax
		mov    0x60(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %eax,%ebx
		add    %edx,%ecx
		call   func_5eecf
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x46(%esp),%edx
		mov    data_bba30(%eax),%ebx
		mov    0x3e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    0x46(%esp),%edx
		mov    0x3e(%esp),%eax
		mov    0x58(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee51
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    0x48(%esp),%edx
		mov    data_bba30(%eax),%ebx
		mov    0x40(%esp),%eax
		sar    $0x10,%edx
	jump_2d085:
		sar    $0x10,%eax
		call   func_5f3fd
		jmp    func_2d1b8


/*----------------------------------------------------------------*/
func_2d092:
/*----------------------------------------------------------------*/
		xor    %ebx,%eax
		jmp    jump_2d0b5
	jump_2d096:
		movswl %ax,%edx
		shl    $0x2,%edx
		mov    data_f0648(%edx),%ebx
		test   %ebx,%ebx
		je     jump_2d0b4
		mov    %ebx,%edx
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_2d0b4
		movb   $0x3,0x64(%edx)
	jump_2d0b4:
		inc    %eax
	jump_2d0b5:
		cmp    data_f0b9e,%ax
		jge    func_2d1b8
		jmp    jump_2d096


/*----------------------------------------------------------------*/
func_2d0c4:
/*----------------------------------------------------------------*/
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		mov    0x6c(%esp),%ecx
		call   func_4f4cd
		cmp    $0x1,%cx
		jne    func_2d1b8
		mov    0x50(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x58(%esp),%ecx
		push   %ecx
		mov    data_bba28(%eax),%ecx
		mov    data_bba26(%eax),%eax
		mov    0x4e(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x60(%esp)
		mov    0x46(%esp),%eax
		mov    0x60(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %eax,%ebx
		add    %edx,%ecx
		call   func_5eecf
		mov    0x50(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x4a(%esp),%edx
		mov    data_bba30(%eax),%ebx
		mov    0x42(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    0x4a(%esp),%edx
		mov    0x42(%esp),%eax
		mov    0x58(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee51
		mov    0x50(%esp),%eax
		sar    $0x10,%eax
		inc    %eax
		imul   $0xc,%eax,%ebx
		mov    0x4c(%esp),%edx
		sar    $0x10,%edx
		mov    0x44(%esp),%eax
		mov    data_bba30(%ebx),%ebx
		jmp    jump_2d085


/*----------------------------------------------------------------*/
func_2d183:
/*----------------------------------------------------------------*/
		cmp    $0x2,%di
		jle    func_2d1b8
		xor    %ebx,%eax
		jmp    jump_2d1af
	jump_2d18d:
		movswl %ax,%edx
		shl    $0x2,%edx
		mov    data_f0648(%edx),%ecx
		test   %ecx,%ecx
		je     jump_2d1ae
		mov    0x61(%ecx),%bx
		mov    %ecx,%edx
		cmp    $0x12c,%bx
		jge    jump_2d1ae
		movb   $0x3,0x64(%ecx)
	jump_2d1ae:
		inc    %eax
	jump_2d1af:
		cmp    data_f0b9e,%ax
		jl     jump_2d18d


/*----------------------------------------------------------------*/
func_2d1b8:
/*----------------------------------------------------------------*/
		mov    0x80(%esp),%ecx
		cmp    $0x2,%cx
		je     jump_2d1d4
		test   %cx,%cx
		jne    jump_2d23a
		cmp    $0x2,%di
		jle    jump_2d23a
	jump_2d1d4:
		xor    %ebx,%ebx
		jmp    jump_2d22c
	jump_2d1d8:
		movswl %bx,%edx
		shl    $0x2,%edx
		mov    data_f0648(%edx),%eax
		call   func_1214f
		mov    0x63(%ebp),%al
		cmp    $0x3,%al
		ja     jump_2d22b
		and    $0xff,%eax
		jmp    *vtable_2cc2a(,%eax,4)


/*----------------------------------------------------------------*/
func_2d1fd:
/*----------------------------------------------------------------*/
		mov    data_f0648(%edx),%edx
		addb   $0x2,0x66(%edx)
		jmp    jump_2d22b


/*----------------------------------------------------------------*/
func_2d209:
/*----------------------------------------------------------------*/
		mov    data_f0648(%edx),%edx
		subb   $0x3,0x65(%edx)
		jmp    jump_2d22b


/*----------------------------------------------------------------*/
func_2d215:
/*----------------------------------------------------------------*/
		mov    data_f0648(%edx),%edx
		subb   $0x2,0x66(%edx)
		jmp    jump_2d22b


/*----------------------------------------------------------------*/
func_2d221:
/*----------------------------------------------------------------*/
		mov    data_f0648(%edx),%edx
		addb   $0x3,0x65(%edx)
	jump_2d22b:
		inc    %ebx
	jump_2d22c:
		cmp    data_f0b9e,%bx
		jl     jump_2d1d8
		call   func_499e4
	jump_2d23a:
		cmp    $0x6,%di
		jge    jump_2d241
		inc    %edi
	jump_2d241:
		mov    0x7e(%esp),%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		call   func_5e9e8
		mov    0x64(%esp),%ebx
		call   func_499e4
		inc    %ebx
		mov    %dx,0x80(%esp)
	jump_2d26c:
		mov    %ebx,0x64(%esp)
		mov    0x80(%esp),%ebx
		sub    %edi,%ebx
		mov    0x64(%esp),%eax
		mov    %ebx,%ecx
		mov    0x8c(%esp),%edx
		add    $0x5,%ecx
		cmp    %dx,%ax
		jl     jump_2cef9
		mov    %bx,0x7c(%esp)
		test   %bx,%bx
		jge    jump_2d2a1
		mov    %cx,0x7c(%esp)
	jump_2d2a1:
		test   %di,%di
		jle    jump_2d361
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%esi
		call   func_454b3
		jmp    jump_2d329
	jump_2d2c7:
		mov    0x7a(%esp),%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x7c(%esp)
		movswl %di,%eax
		mov    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %si,%edx
		add    %edx,%eax
		mov    0x7a(%esp),%edx
		sar    $0x10,%edx
		mov    -0x2(%esp,%eax,4),%ecx
		mov    0x14(%esp,%edx,4),%eax
		mov    0x9(%eax),%eax
		sar    $0x10,%ecx
		mov    %eax,0x5c(%esp)
		mov    0x26(%esp,%edx,2),%eax
		mov    0x32(%esp,%edx,2),%edx
		mov    0x5c(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %edx,0x5c(%esp)
		mov    %eax,%edx
		mov    0x5c(%esp),%eax
		inc    %esi
		call   func_5f517
	jump_2d329:
		cmp    %di,%si
		jl     jump_2d2c7
		mov    0x7e(%esp),%edx
		sar    $0x10,%edx
		mov    0x14(%esp,%edx,4),%ebx
		mov    %edx,%eax
		mov    0x9(%ebx),%ebx
		mov    0x26(%esp,%edx,2),%edx
		mov    0x32(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		dec    %edi
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		jmp    jump_2d2a1
	jump_2d361:
		mov    $0x40,%eax
		call   func_499da
		call   func_44d75
		xor    %eax,%eax
		call   func_44d6e
		mov    0x80(%esp),%al
		add    $0x5,%al
		mov    %al,0x64(%ebp)
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		mov    0x8c(%esp),%ecx
		call   func_11e04
		cmp    $0x7,%cx
		jb     jump_2d3a9
		jbe    jump_2d3b6
		cmp    $0xc,%cx
		je     jump_2d3bd
		jmp    jump_2d3c2
	jump_2d3a9:
		cmp    $0x5,%cx
		jne    jump_2d3c2
		mov    $0x14,%esi
		jmp    jump_2d3c2
	jump_2d3b6:
		mov    $0x19,%esi
		jmp    jump_2d3c2
	jump_2d3bd:
		mov    $0x1e,%esi
	jump_2d3c2:
		xor    %ebx,%ebx
		mov    %bx,0x70(%esp)
		jmp    jump_2d442
	jump_2d3cb:
		mov    0x6e(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		mov    %eax,%edi
		mov    data_f0648(,%eax,4),%edx
		mov    %ebp,%eax
		call   func_1d770
		movswl %si,%edx
		imul   %eax,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x76(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		call   func_2caca
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    data_f0648(,%edi,4),%eax
		call   func_45bfb
		mov    data_f0648(,%edi,4),%eax
		sub    %ecx,0x48(%eax)
		mov    %edi,%ebx
		mov    0x60(%ebp),%edx
		mov    data_f0648(,%edi,4),%eax
		mov    0x70(%esp),%edi
		sar    $0x18,%edx
		inc    %edi
		call   func_45ed2
		mov    %di,0x70(%esp)
	jump_2d442:
		mov    0x70(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_2d3cb
		call   func_287af
		mov    $0x6,%eax
		call   func_1033b
		mov    %ebp,%eax
		call   func_1ed45
		mov    %ebp,%eax
		call   func_12124
		mov    0x58(%esp),%eax
		mov    $0x1,%edx
		call   w_dos_free
	jump_2d47e:
		mov    %edx,%eax
		add    $0x90,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2d48a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x300,%esp
		mov    %al,%cl
		mov    $0x3f,%bl
		xor    %edx,%edx
	jump_2d499:
		xor    %eax,%eax
		mov    %dx,%ax
		lea    (%eax,%eax,2),%eax
		mov    %bl,0x2(%esp,%eax,1)
		mov    %bl,0x1(%esp,%eax,1)
		inc    %edx
		mov    %bl,(%esp,%eax,1)
		cmp    $0x100,%dx
		jb     jump_2d499
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		mov    $data_12824c,%ebx
		mov    %cl,%al
		mov    $0x100,%edx
		call   func_1033b
		call   func_499e4
		xor    %eax,%eax
		call   func_5f9ae
		add    $0x300,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d4eb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    $0x19,%eax
		call   func_1033b
		xor    %ebx,%ebx
	jump_2d500:
		mov    %bl,%al
		add    $0x7,%al
		movswl %si,%edx
		mov    %al,0x64(%ecx)
		movswl %di,%eax
		inc    %ebx
		call   func_454b3
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%bx
		jb     jump_2d500
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2d527:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		call   func_135eb
		xor    %ecx,%ecx
	jump_2d53a:
		mov    $0xa,%eax
		mov    $0x8,%ebx
		movswl %cx,%edx
		call   func_1033b
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    data_ba83a,%eax
		add    %edx,%ebx
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_454b3
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0x18,%cx
		jl     jump_2d53a
		mov    $0x1,%eax
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d5a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    %esp,%ebx
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_77878,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_77884,%eax
		call   func_4f460
		mov    $0x1,%eax
		call   func_44d6e
		mov    %edi,%eax
		xor    %ecx,%ecx
		call   func_44d89
		movb   $0x8,0x64(%edi)
	jump_2d5e8:
		mov    $0xf,%eax
		mov    $0x5,%ebx
		movswl %cx,%edx
		call   func_1033b
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%esi
		imul   $0xc,%edx,%ebx
		mov    data_ba83a,%eax
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $data_f0daa,%ebx
		call   func_454b3
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_5e9e8
		cmp    $0x4,%esi
		jne    jump_2d653
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0xa,%eax
		call   func_2d48a
	jump_2d653:
		inc    %ecx
		call   func_499e4
		cmp    $0xa,%cx
		jl     jump_2d5e8
		call   func_44d75
		xor    %eax,%eax
		call   func_44d6e
		mov    %edi,%eax
		call   func_12124
		call   func_1ffcd
		mov    $0x1,%eax
		add    $0x8,%esp
		jmp    jump_2d7cc


/*----------------------------------------------------------------*/
func_2d684:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%ebp
		lea    0x8(%esp),%ebx
		mov    %esp,%edx
		call   func_135eb
		mov    $data_77890,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_7789d,%eax
		call   func_4f460
		mov    $0x1,%eax
		xor    %ecx,%ecx
		call   func_44d6e
		mov    %ebp,%eax
		xor    %edi,%edi
		call   func_44d89
		mov    $0x32,%eax
		movb   $0x8,0x64(%ebp)
		call   func_4f4cd
		mov    $0x7,%eax
		xor    %esi,%esi
		call   func_1033b
	jump_2d6e2:
		movswl %cx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    data_ba83c,%edx
		add    %eax,%ebx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x8(%esp),%eax
		sub    $0x46,%eax
		add    %esi,%eax
		movswl %ax,%edx
		mov    (%esp),%eax
		add    $0x32,%eax
		sub    %edi,%eax
		mov    %ax,0x4(%esp)
		inc    %ecx
		mov    0x2(%esp),%eax
		add    $0x7,%esi
		sar    $0x10,%eax
		add    $0x5,%edi
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0xa,%cx
		jl     jump_2d6e2
		mov    $0x14,%eax
		mov    $0x5,%ecx
		call   func_2d48a
	jump_2d75b:
		movswl %cx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    $0xf,%eax
		call   func_1033b
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		inc    %ecx
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		cmp    $0xb,%cx
		jl     jump_2d75b
		call   func_44d75
		xor    %eax,%eax
		call   func_44d6e
		mov    %ebp,%eax
		call   func_12124
		call   func_1ffcd
		mov    $0x1,%eax
		add    $0xc,%esp
	jump_2d7cb:
		pop    %ebp
	jump_2d7cc:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d7d2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %dl,%cl
		mov    %esp,%ebx
		lea    0x4(%esp),%edx
		call   func_135eb
		mov    $data_778a9,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_778b3,%eax
		xor    %ebx,%ebx
		call   func_4f460
		mov    data_ba83e,%bx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    data_ba83c,%dx
		call   func_2d4eb
		mov    $0x23,%eax
		call   func_2d48a
		movsbw 0x63(%edi),%ax
		add    %eax,%eax
		mov    %ax,0xc(%esp)
		xor    %eax,%eax
		mov    %cl,%al
		shl    $0x3,%eax
		add    $0xc,%eax
		xor    %esi,%esi
		mov    %ax,0x8(%esp)
		mov    $0x8,%eax
		movb   $0x9,0x64(%edi)
		call   func_1033b
		jmp    jump_2da19
	jump_2d856:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edx
		sub    $0x4,%eax
		cmp    %eax,%edx
		jge    jump_2d882
		incw   0xc(%esp)
	jump_2d882:
		cmp    $0x2,%si
		jle    jump_2d8e4
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edx
		sub    $0x3,%eax
		cmp    %eax,%edx
		jge    jump_2d8e4
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		sub    $0x3,%edx
		mov    $0x8,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ecx
		add    %edx,%ecx
		mov    -0x2(%esp),%eax
		mov    0x4(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x8(%ecx),%ebx
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		mov    0x2(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		mov    $0x1c,%ecx
		call   func_5f093
	jump_2d8e4:
		cmp    $0x1,%si
		jle    jump_2d946
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edx
		sub    $0x2,%eax
		cmp    %eax,%edx
		jge    jump_2d946
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		sub    $0x2,%edx
		mov    $0x8,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ecx
		add    %edx,%ecx
		mov    -0x2(%esp),%eax
		mov    0x4(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x8(%ecx),%ebx
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		mov    0x2(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		mov    $0x1b,%ecx
		call   func_5f093
	jump_2d946:
		test   %si,%si
		jle    jump_2d9a3
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edx
		dec    %eax
		cmp    %eax,%edx
		jge    jump_2d9a3
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		dec    %edx
		mov    $0x8,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ecx
		add    %edx,%ecx
		mov    0x4(%ecx),%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x8(%ecx),%ebx
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		mov    0x2(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		mov    $0x1a,%ecx
		call   func_5f093
	jump_2d9a3:
		mov    0xa(%esp),%ecx
		sar    $0x10,%ecx
		mov    $0x8,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    0x2(%esp),%eax
		add    %edx,%ebx
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1fffe
		mov    %edi,%eax
		mov    $0x2,%ebx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_2da18
		mov    0x60(%edi),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x32,%eax
		mov    %dl,0x63(%edi)
		call   func_4f4cd
	jump_2da18:
		inc    %esi
	jump_2da19:
		cmp    0x8(%esp),%si
		jl     jump_2d856
		mov    %edi,%eax
		call   func_12124
	jump_2da2b:
		call   func_1ffcd
	jump_2da30:
		mov    $0x1,%eax
	jump_2da35:
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_2da3e:
		.long   func_2db0a
		.long   func_2db12
		.long   func_2db1a
		.long   func_2db22

vtable_2da4e:
		.long   func_2dc46
		.long   func_2dc4e
		.long   func_2dc56
		.long   func_2dc5e


/*----------------------------------------------------------------*/
func_2da5e:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    %eax,%ebp
		mov    %edx,0x24(%esp)
		mov    %ebx,%ecx
		lea    0x14(%esp),%edi
		mov    $data_2ca22,%esi
		lea    0x1c(%esp),%ebx
		lea    0x18(%esp),%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_135eb
		mov    $0x32,%edx
		mov    $data_778bf,%eax
		call   func_4f460
		test   %cx,%cx
		jne    jump_2daa1
		mov    $data_778ca,%eax
		jmp    jump_2dab3
	jump_2daa1:
		cmp    $0x1,%cx
		jne    jump_2daae
		mov    $data_778d5,%eax
		jmp    jump_2dab3
	jump_2daae:
		mov    $data_778e2,%eax
	jump_2dab3:
		call   func_1fea4
		mov    %ebp,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    data_ba83e,%bx
		mov    data_ba83c,%dx
		call   func_2d4eb
		mov    $0x5,%eax
		movb   $0x9,0x64(%ebp)
		call   func_1033b
		mov    0x24(%esp),%eax
		add    %eax,%eax
		xor    %edx,%edx
		inc    %eax
		mov    %edx,0x20(%esp)
		mov    %eax,0x24(%esp)
		cmp    $0x1,%cx
		jne    jump_2db28
		mov    0x63(%ebp),%al
		cmp    $0x3,%al
		ja     jump_2db28
		and    $0xff,%eax
		jmp    *vtable_2da3e(,%eax,4)


/*----------------------------------------------------------------*/
func_2db0a:
/*----------------------------------------------------------------*/
		addw   $0x8,0x1c(%esp)
		jmp    jump_2db28


/*----------------------------------------------------------------*/
func_2db12:
/*----------------------------------------------------------------*/
		subw   $0xc,0x18(%esp)
		jmp    jump_2db28


/*----------------------------------------------------------------*/
func_2db1a:
/*----------------------------------------------------------------*/
		subw   $0x8,0x1c(%esp)
		jmp    jump_2db28


/*----------------------------------------------------------------*/
func_2db22:
/*----------------------------------------------------------------*/
		addw   $0xc,0x18(%esp)
	jump_2db28:
		mov    $0x32,%eax
		call   func_4f4cd
		xor    %eax,%eax
		mov    %ax,0x28(%esp)
		jmp    jump_2dc69
	jump_2db3e:
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		movswl %si,%ebx
		add    $0x3,%edx
		sub    %ebx,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    (%esp,%ebx,4),%edi
		add    $data_f0daa,%eax
		sar    $0x10,%edi
		mov    0x8(%eax),%edx
		xor    %ecx,%ecx
		mov    %edx,0x10(%esp)
		mov    %ebx,%edx
		mov    0x14(%esp,%ebx,1),%cl
		mov    0x4(%eax),%ebx
		mov    -0x2(%esp,%edx,4),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		add    %ebx,%edi
		mov    0x10(%esp),%ebx
		add    %edx,%eax
		mov    %edi,%edx
		dec    %esi
		call   func_5f093
	jump_2dba4:
		test   %si,%si
		jge    jump_2db3e
		mov    0x20(%esp),%edx
		jmp    jump_2dbc6
	jump_2dbaf:
		movswl %dx,%eax
		mov    -0x4(%esp,%eax,4),%bx
		mov    %bx,(%esp,%eax,4)
		mov    -0x2(%esp,%eax,4),%bx
		dec    %edx
		mov    %bx,0x2(%esp,%eax,4)
	jump_2dbc6:
		test   %dx,%dx
		jg     jump_2dbaf
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x60(%ebp),%ebx
		sar    $0x18,%ebx
		shl    $0x2,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    0x16(%esp),%eax
		add    %edx,%ebx
		mov    0x1a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1fffe
		call   func_5e9e8
		mov    0x20(%esp),%ebx
		call   func_499e4
		cmp    $0x3,%bx
		jge    jump_2dc21
		mov    %ebx,%ecx
		inc    %ecx
		mov    %ecx,0x20(%esp)
	jump_2dc21:
		mov    0x18(%esp),%eax
		mov    %ax,(%esp)
		mov    0x1c(%esp),%eax
		mov    %ax,0x2(%esp)
		mov    0x63(%ebp),%al
		cmp    $0x3,%al
		ja     jump_2dc64
		and    $0xff,%eax
		jmp    *vtable_2da4e(,%eax,4)


/*----------------------------------------------------------------*/
func_2dc46:
/*----------------------------------------------------------------*/
		addw   $0x8,0x1c(%esp)
		jmp    jump_2dc64


/*----------------------------------------------------------------*/
func_2dc4e:
/*----------------------------------------------------------------*/
		subw   $0xc,0x18(%esp)
		jmp    jump_2dc64


/*----------------------------------------------------------------*/
func_2dc56:
/*----------------------------------------------------------------*/
		subw   $0x8,0x1c(%esp)
		jmp    jump_2dc64


/*----------------------------------------------------------------*/
func_2dc5e:
/*----------------------------------------------------------------*/
		addw   $0xc,0x18(%esp)
	jump_2dc64:
		incw   0x28(%esp)
	jump_2dc69:
		mov    0x28(%esp),%eax
		cmp    0x24(%esp),%ax
		jge    jump_2dd31
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x20(%esp),%esi
		call   func_454b3
		dec    %esi
		jmp    jump_2dba4
	jump_2dc98:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ecx,%esi
		call   func_454b3
		dec    %esi
		jmp    jump_2dd19
	jump_2dcb3:
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		movswl %si,%ebx
		add    $0x3,%edx
		sub    %ebx,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    (%esp,%ebx,4),%edi
		add    $data_f0daa,%eax
		sar    $0x10,%edi
		mov    0x8(%eax),%edx
		xor    %ecx,%ecx
		mov    %edx,0x10(%esp)
		mov    %ebx,%edx
		mov    0x14(%esp,%ebx,1),%cl
		mov    0x4(%eax),%ebx
		mov    -0x2(%esp,%edx,4),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		add    %ebx,%edi
		mov    0x10(%esp),%ebx
		add    %edx,%eax
		mov    %edi,%edx
		dec    %esi
		call   func_5f093
	jump_2dd19:
		test   %si,%si
		jge    jump_2dcb3
		mov    0x20(%esp),%esi
		call   func_5e9e8
		dec    %esi
		call   func_499e4
		mov    %esi,0x20(%esp)
	jump_2dd31:
		mov    0x20(%esp),%ecx
		test   %cx,%cx
		jg     jump_2dc98
		mov    %ebp,%eax
		call   func_12124
		call   func_1ffcd
		mov    $0x1,%eax
		add    $0x2c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_2dd5a:
		.long   func_2de19
		.long   func_2de26
		.long   func_2de30
		.long   func_2de3d

vtable_2dd6a:
		.long   func_2de5f
		.long   func_2df05
		.long   func_2df3b
		.long   func_2df6c


/*----------------------------------------------------------------*/
func_2dd7a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %dl,0xc(%esp)
		mov    %esp,%ebx
		lea    0x4(%esp),%edx
		mov    $0xf,%edi
		call   func_135eb
		mov    $data_778ee,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_778bf,%eax
		xor    %ebx,%ebx
		call   func_4f460
		mov    data_ba83e,%bx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    data_ba83c,%dx
		xor    %ecx,%ecx
		call   func_2d4eb
		mov    $0x32,%eax
		mov    $0xc,%edx
		movb   $0x9,0x64(%esi)
		call   func_4f4cd
		mov    %edx,0x8(%esp)
		jmp    jump_2def0
	jump_2dde7:
		cmpb   $0x0,0xc(%esp)
		je     jump_2ddf5
		mov    $0xc,%eax
		jmp    jump_2ddfa
	jump_2ddf5:
		mov    $0x8,%eax
	jump_2ddfa:
		movswl %cx,%edx
		cmp    %eax,%edx
		jge    jump_2de47
		mov    0x63(%esi),%dl
		cmp    $0x3,%dl
		ja     jump_2de8f
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *vtable_2dd5a(,%eax,4)


/*----------------------------------------------------------------*/
func_2de19:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%eax
		add    %ax,(%esp)
		jmp    jump_2de8f


/*----------------------------------------------------------------*/
func_2de26:
/*----------------------------------------------------------------*/
		sub    %di,0x4(%esp)
		jmp    jump_2de8f


/*----------------------------------------------------------------*/
func_2de30:
/*----------------------------------------------------------------*/
		mov    0x8(%esp),%eax
		sub    %ax,(%esp)
		jmp    jump_2de8f


/*----------------------------------------------------------------*/
func_2de3d:
/*----------------------------------------------------------------*/
		add    %di,0x4(%esp)
		jmp    jump_2de8f
	jump_2de47:
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_2de8f
		and    $0xff,%eax
		jmp    *vtable_2dd6a(,%eax,4)


/*----------------------------------------------------------------*/
func_2de5f:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0xc(%esp)
		je     jump_2de6d
		mov    $0xc,%eax
		jmp    jump_2de72
	jump_2de6d:
		mov    $0x8,%eax
	jump_2de72:
		movswl %cx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0xc,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		sub    %eax,%edx
	jump_2de8b:
		mov    %dx,(%esp)
	jump_2de8f:
		mov    $0x5,%eax
		mov    $0x6,%ebx
		movswl %cx,%edx
		call   func_1033b
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    data_ba83a,%eax
		add    %edx,%ebx
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %edi
		call   func_454b3
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_1fffe
		mov    0x8(%esp),%ebx
		call   func_5e9e8
		dec    %ebx
		call   func_499e4
		mov    %ebx,0x8(%esp)
	jump_2def0:
		cmpb   $0x0,0xc(%esp)
		je     jump_2df96
		mov    $0x8,%eax
		jmp    jump_2df98


/*----------------------------------------------------------------*/
func_2df05:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0xc(%esp)
		je     jump_2df13
		mov    $0xc,%eax
		jmp    jump_2df18
	jump_2df13:
		mov    $0x8,%eax
	jump_2df18:
		movswl %cx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0xf,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%edx
	jump_2df31:
		mov    %dx,0x4(%esp)
		jmp    jump_2de8f


/*----------------------------------------------------------------*/
func_2df3b:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0xc(%esp)
		je     jump_2df49
		mov    $0xc,%eax
		jmp    jump_2df4e
	jump_2df49:
		mov    $0x8,%eax
	jump_2df4e:
		movswl %cx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0xc,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		jmp    jump_2de8b


/*----------------------------------------------------------------*/
func_2df6c:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0xc(%esp)
		je     jump_2df7a
		mov    $0xc,%eax
		jmp    jump_2df7f
	jump_2df7a:
		mov    $0x8,%eax
	jump_2df7f:
		movswl %cx,%edx
		sub    %eax,%edx
		mov    $0xf,%eax
		sub    %edx,%eax
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		sub    %eax,%edx
		jmp    jump_2df31
	jump_2df96:
		xor    %eax,%eax
	jump_2df98:
		movswl %cx,%edx
		add    $0x10,%eax
		cmp    %eax,%edx
		jl     jump_2dde7
		mov    %esi,%eax
		call   func_12124
		call   func_45559
		mov    $0x20,%eax
		call   func_499da
		jmp    jump_2da2b


/*----------------------------------------------------------------*/
func_2dfc1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		lea    0x4(%esp),%ebx
		lea    0x8(%esp),%edx
		call   func_135eb
		mov    0x4(%esp),%edx
		sub    $0x3,%edx
		mov    $data_778f9,%eax
		mov    %dx,0x4(%esp)
		call   func_1fea4
		mov    $0x32,%edx
		mov    $data_77904,%eax
		xor    %ebx,%ebx
		call   func_4f460
		mov    data_ba83e,%bx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    data_ba83c,%dx
		mov    $0x4,%ebp
		call   func_2d4eb
		mov    $0x7,%eax
		movb   $0x9,0x64(%ecx)
		call   func_1033b
		movsbw 0x63(%ecx),%ax
		xor    %esi,%esi
		mov    %ax,(%esp)
		jmp    jump_2e0bc
	jump_2e03b:
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_2e055
		mov    $0x32,%eax
		call   func_4f4cd
	jump_2e055:
		movswl %si,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		test   $0x1,%si
		je     jump_2e088
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		add    $0x3,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %dl,0x63(%ecx)
	jump_2e088:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
	jump_2e0bc:
		movswl %di,%eax
		imul   $0xa,%eax,%eax
		movswl %si,%edx
		add    $0xa,%eax
		cmp    %eax,%edx
		jl     jump_2e03b
		mov    %ecx,%eax
		call   func_12124
		mov    (%esp),%al
		mov    %al,0x63(%ecx)
		call   func_1ffcd
		mov    $0x1,%eax
	jump_2e0e7:
		add    $0xc,%esp
	jump_2e0ea:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2e0f0:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movsbw (%eax),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%esi),%ax
		xor    %ecx,%ecx
		mov    %ax,0x4(%esp)
		jmp    jump_2e12a
	jump_2e116:
		lea    0x4(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		inc    %ecx
		call   func_49abc
	jump_2e12a:
		cmp    %di,%cx
		jl     jump_2e116
		movsbw 0x63(%esi),%ax
		add    $0x2,%eax
		xor    %ah,%ah
		and    $0x3,%al
		mov    0x2(%esp),%edx
		mov    %ax,0xc(%esp)
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_2e174
		mov    0x9(%esp),%ebx
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x1,%ecx
		call   func_49abc
		jmp    jump_2e176
	jump_2e174:
		xor    %ecx,%ecx
	jump_2e176:
		xor    %edx,%edx
		mov    %edx,0x10(%esp)
		jmp    jump_2e202
	jump_2e181:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_2e1b9
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_2e1ed
		cmpw   $0x1,0x10(%esp)
		je     jump_2e20b
		jmp    jump_2e1ed
	jump_2e1b9:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2e1ed
		mov    0x8(%esp),%eax
		mov    $0x1,%ebx
		mov    %ax,0x0(%ebp)
		mov    (%esp),%edx
		mov    0x4(%esp),%eax
		mov    %ebx,0x10(%esp)
		mov    %ax,(%edx)
	jump_2e1ed:
		mov    0x9(%esp),%ebx
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		inc    %ecx
		call   func_49abc
	jump_2e202:
		cmp    %di,%cx
		jl     jump_2e181
	jump_2e20b:
		cmp    %di,%cx
		jne    jump_2e214
		xor    %eax,%eax
		jmp    jump_2e254
	jump_2e214:
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		jmp    jump_2e249
	jump_2e21f:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		mov    0x9(%esp),%ebx
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		inc    %ecx
		call   func_49abc
	jump_2e249:
		cmp    %di,%cx
		jl     jump_2e21f
		mov    data_f0b9e,%ax
	jump_2e254:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2e25b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x7c,%esp
		mov    %eax,%ebp
		mov    %bx,0x6c(%esp)
		mov    %cx,0x68(%esp)
		lea    0x30(%esp),%edi
		add    $0x5,%edx
		mov    $data_2ca25,%esi
		movswl %dx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_2cbfb
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %ebp,%eax
		call   func_169d7
		cmpw   $0x1,data_f14d8
		jne    jump_2e2c0
		lea    0x74(%esp),%ecx
		lea    0x60(%esp),%ebx
		movswl %si,%edx
		mov    %ebp,%eax
		call   func_2e0f0
		test   %ax,%ax
		jne    jump_2e40f
	jump_2e2b6:
		mov    $0xffffffff,%eax
		jmp    jump_2e805
	jump_2e2c0:
		xor    %esi,%esi
		jmp    jump_2e405
	jump_2e2c7:
		mov    $0x1,%eax
		lea    0x64(%esp),%ebx
		lea    0x5c(%esp),%edx
		call   func_44d67
		mov    0x60(%ebp),%ecx
		mov    %ebp,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    0x62(%esp),%edx
		mov    $0x1,%ecx
		xor    %ebx,%ebx
		movswl %di,%eax
		mov    %bx,data_f0b9e
		push   %eax
		sar    $0x10,%edx
		mov    0x60(%ebp),%ebx
		mov    0x5e(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%eax
		call   func_1a452
	jump_2e311:
		lea    0x64(%esp),%edx
		lea    0x5c(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2e36b
		mov    0x62(%esp),%edx
		mov    0x5a(%esp),%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		mov    0x62(%esp),%edx
		mov    0x5a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2e311
		mov    0x62(%esp),%edx
		mov    0x5a(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_2e311
	jump_2e36b:
		cmp    $0x1,%si
		jne    jump_2e37d
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_2e40f
	jump_2e37d:
		mov    $0x1,%ecx
		lea    0x74(%esp),%edx
		lea    0x60(%esp),%eax
		mov    %ebp,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2e3a3
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_2e2b6
	jump_2e3a3:
		mov    0x72(%esp),%edx
		mov    0x5e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2e37d
		mov    0x72(%esp),%ebx
		mov    0x5e(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		cmp    $0x2,%ax
		jl     jump_2e37d
		mov    0x72(%esp),%edx
		mov    0x5e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_2e37d
		mov    0x72(%esp),%ebx
		mov    0x5e(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		inc    %esi
		call   func_49adf
		mov    %eax,%edi
	jump_2e405:
		cmp    $0x2,%si
		jl     jump_2e2c7
	jump_2e40f:
		mov    $0x1,%eax
		call   func_44d6e
		mov    %ebp,%eax
		call   func_2cba1
		mov    $data_7790f,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_77917,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77921,%eax
		call   func_4f460
		mov    $0x3,%edx
		mov    %ebp,%eax
		call   func_200de
		xor    %eax,%eax
	jump_2e456:
		mov    0x60(%ebp),%edx
		sar    $0x18,%edx
		imul   $0xb,%edx,%ebx
		movswl %ax,%edx
		add    $0x5,%ebx
		lea    (%ebx,%edx,1),%ecx
		imul   $0xd,%ecx,%ecx
		mov    0x5d(%ebp),%ebx
		sar    $0x18,%ebx
		imul   $0x23c,%ebx,%ebx
		add    $data_d66a8,%ebx
		add    %ecx,%ebx
		inc    %eax
		mov    %ebx,0x44(%esp,%edx,4)
		cmp    $0x5,%ax
		jl     jump_2e456
		mov    $0x1e,%eax
		call   func_1033b
		xor    %ebx,%ebx
		movb   $0x6,0x64(%ebp)
	jump_2e49a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
		call   func_499e4
		mov    0x64(%ebp),%ah
		inc    %ah
		inc    %ebx
		mov    %ah,0x64(%ebp)
		cmp    $0x3,%bx
		jl     jump_2e49a
		call   func_44d75
		xor    %edx,%edx
		jmp    jump_2e4e2
	jump_2e4d2:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_2e4e2:
		cmp    data_f0b9e,%dx
		jl     jump_2e4d2
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		xor    %ebx,%ebx
		call   func_11f74
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x5c(%esp)
		movsbl 0x1(%ebp),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x64(%esp)
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x60(%esp)
		mov    0x72(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    $0xb,%ebx
		mov    %ax,0x74(%esp)
	jump_2e54d:
		mov    0x5e(%esp),%edx
		mov    0x5a(%esp),%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		sub    %ecx,%edx
		mov    $0x5,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    0x72(%esp),%edx
		add    %ecx,%eax
		mov    0x62(%esp),%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		sub    %ecx,%edx
		mov    %ax,0x5c(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		add    %ecx,%eax
		mov    %ax,0x64(%esp)
		mov    0x54(%esp),%eax
		mov    0x5c(%esp),%esi
		movsbw 0x4(%eax),%dx
		movswl %bx,%eax
		add    %esi,%edx
		mov    %dx,0x18(%esp,%eax,2)
		mov    0x54(%esp),%edx
		mov    0x64(%esp),%edi
		movsbw 0x5(%edx),%dx
		add    %edi,%edx
		dec    %ebx
		mov    %dx,(%esp,%eax,2)
		test   %bx,%bx
		jge    jump_2e54d
		mov    $0x32,%eax
		call   func_4f4cd
		movw   $0xb,0x70(%esp)
		mov    $0x3,%edi
	jump_2e5d4:
		mov    0x6e(%esp),%eax
		mov    $0xf,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    %eax
		and    $0xffff,%eax
		call   func_1033b
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
		jmp    jump_2e642
	jump_2e60a:
		movswl %si,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    0x2e(%esp,%eax,4),%ecx
		mov    -0x2(%esp,%ebx,2),%edx
		mov    0x54(%esp),%eax
		sar    $0x10,%ecx
		mov    0x16(%esp,%ebx,2),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		mov    0x9(%eax),%eax
		mov    %ebx,0x58(%esp)
		mov    %eax,%ebx
		mov    0x58(%esp),%eax
		inc    %esi
		call   func_5f517
	jump_2e642:
		mov    0x70(%esp),%eax
		cmp    %ax,%si
		jl     jump_2e60a
		cmp    $0xb,%ax
		jne    jump_2e658
		mov    $0x4,%eax
		jmp    jump_2e65d
	jump_2e658:
		mov    $0x1,%eax
	jump_2e65d:
		cwtl
		mov    0x44(%esp,%eax,4),%eax
		mov    0x74(%esp),%ecx
		mov    0x60(%esp),%esi
		mov    0x9(%eax),%ebx
		movsbw 0x5(%eax),%dx
		movsbw 0x4(%eax),%ax
		add    %ecx,%edx
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
		cmpw   $0xb,0x70(%esp)
		jne    jump_2e69d
		mov    $0x14,%eax
		call   func_2d48a
		mov    %edi,%eax
		call   func_1033b
	jump_2e69d:
		mov    0x70(%esp),%edx
		call   func_5e9e8
		dec    %edx
		call   func_499e4
		mov    %dx,0x70(%esp)
		test   %dx,%dx
		jge    jump_2e5d4
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %al,0x0(%ebp)
		mov    0x74(%esp),%eax
		add    $0x4,%eax
		cwtl
		mov    %ebp,%ebx
		call   func_109ce
		mov    %al,0x1(%ebp)
		movsbl %al,%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		movb   $0x6,0x64(%ebp)
		call   func_44d75
		mov    %ebp,%eax
		xor    %esi,%esi
		call   func_2cba1
		jmp    jump_2e726
	jump_2e6fd:
		movswl %si,%ecx
		mov    %esp,%ebx
		lea    (%ecx,%ecx,1),%eax
		lea    0x18(%esp),%edx
		add    %eax,%ebx
		add    %eax,%edx
		mov    data_f0648(,%ecx,4),%eax
		call   func_135eb
		mov    data_f0648(,%ecx,4),%eax
		inc    %esi
		call   func_1214f
	jump_2e726:
		cmp    data_f0b9e,%si
		jl     jump_2e6fd
		mov    $0x9,%eax
		call   func_1033b
		mov    $0x33,%eax
		xor    %esi,%esi
		call   func_4f4cd
		mov    %si,0x78(%esp)
	jump_2e74a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x76(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ecx
		xor    %esi,%esi
		add    %eax,%ecx
		jmp    jump_2e78e
	jump_2e775:
		movswl %si,%ebx
		mov    -0x2(%esp,%ebx,2),%edx
		mov    0x16(%esp,%ebx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ecx,%ebx
		inc    %esi
		call   func_1fffe
	jump_2e78e:
		cmp    data_f0b9e,%si
		jl     jump_2e775
		mov    0x78(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x78(%esp)
		cmp    $0x5,%dx
		jl     jump_2e74a
		call   func_44d75
		mov    0x6a(%esp),%ebx
		xor    %eax,%eax
		mov    0x66(%esp),%edx
		call   func_44d6e
		sar    $0x10,%ebx
		sar    $0x10,%edx
		mov    %ebp,%eax
		call   func_2caf7
		mov    %ebp,%eax
		call   func_12124
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
		call   func_1ffcd
		mov    %ebp,%eax
		call   func_5401b
		mov    $0x1,%eax
	jump_2e805:
		add    $0x7c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret
	jump_2e80c:
		mov    %ecx,%eax
		call   func_2cba1
		mov    $0x1,%eax
		xor    %ebx,%ebx
		call   func_44d6e
		jmp    jump_2e847
	jump_2e821:
		mov    $0x32,%eax
		movswl %bx,%edx
		call   func_4f4cd
		mov    data_f0648(,%edx,4),%eax
		call   func_2d527
		mov    data_f0648(,%edx,4),%eax
		inc    %ebx
		call   func_197ad
	jump_2e847:
		cmp    data_f0b9e,%bx
		jl     jump_2e821
		xor    %eax,%eax
		call   func_44d6e
		call   func_44d75
		mov    %ecx,%eax
		call   func_12124
		call   func_1ffcd
		cmpw   $0x0,data_f0b9e
		jne    jump_2e879
		mov    $0xffffffff,%eax
		jmp    jump_2e87e
	jump_2e879:
		mov    $0x1,%eax
	jump_2e87e:
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_2e886:
		.long   func_2e990
		.long   func_2e999
		.long   func_2e9a2
		.long   func_2e9a7


/*----------------------------------------------------------------*/
func_2e896:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ecx
		mov    %dx,0xc(%esp)
		cmpw   $0x12c,0x61(%eax)
		jge    jump_2da35
		cmpb   $0x0,0x5c(%eax)
		jne    jump_2da35
		mov    %ecx,%eax
		movb   $0xa,0x64(%ecx)
		call   func_169d7
		movsbw (%ecx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x4(%esp)
		xor    %esi,%esi
		movsbw 0x1(%ecx),%ax
		mov    %bx,(%esp)
		mov    %ax,0x8(%esp)
		jmp    jump_2e932
	jump_2e8e2:
		mov    0x9(%esp),%ebx
		lea    0x8(%esp),%edx
		lea    0x4(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xfffffffe,%eax
		jne    jump_2e929
		mov    0xc(%esp),%al
		add    $0x2,%al
		and    $0x3,%al
		lea    0x8(%esp),%edx
		movsbl %al,%ebx
		lea    0x4(%esp),%eax
		call   func_49abc
		jmp    jump_2e938
	jump_2e929:
		mov    (%esp),%edi
		inc    %edi
		inc    %esi
		mov    %di,(%esp)
	jump_2e932:
		cmp    $0x3,%si
		jl     jump_2e8e2
	jump_2e938:
		cmpw   $0x0,(%esp)
		je     jump_2da35
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11ee4
		mov    0x4(%esp),%al
		mov    %al,(%ecx)
		mov    0x8(%esp),%al
		mov    %al,0x1(%ecx)
		mov    %ecx,%ebx
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11e04
		mov    0xc(%esp),%edx
		cmp    $0x3,%dx
		ja     jump_2e9b3
		xor    %eax,%eax
		mov    %dx,%ax
		mov    (%esp),%dl
		shl    $0x4,%dl
		jmp    *vtable_2e886(,%eax,4)


/*----------------------------------------------------------------*/
func_2e990:
/*----------------------------------------------------------------*/
		mov    %dl,%al
		neg    %al
		mov    %al,0x66(%ecx)
		jmp    jump_2e9b3


/*----------------------------------------------------------------*/
func_2e999:
/*----------------------------------------------------------------*/
		mov    (%esp),%al
		mov    $0x18,%ah
		imul   %ah
		jmp    jump_2e9b0


/*----------------------------------------------------------------*/
func_2e9a2:
/*----------------------------------------------------------------*/
		mov    %dl,0x66(%ecx)
		jmp    jump_2e9b3


/*----------------------------------------------------------------*/
func_2e9a7:
/*----------------------------------------------------------------*/
		mov    (%esp),%al
		mov    $0x18,%ah
		imul   %ah
		neg    %al
	jump_2e9b0:
		mov    %al,0x65(%ecx)
	jump_2e9b3:
		mov    $0x7,%eax
		mov    $0x64,%ebx
		call   func_1033b
		xor    %esi,%esi
	jump_2e9c4:
		call   func_45559
		mov    0x62(%ecx),%edx
		sar    $0x18,%edx
		imul   $0x46,%edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %al,0x65(%ecx)
		mov    0x63(%ecx),%edx
		sar    $0x18,%edx
		imul   $0x46,%edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		inc    %esi
		mov    %al,0x66(%ecx)
		call   func_499e4
		cmp    $0x9,%si
		jl     jump_2e9c4
		mov    %ecx,%eax
		call   func_12124
		call   func_45559
		jmp    jump_2da35


/*----------------------------------------------------------------*/
func_2ea0c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    $0x1,%ecx
		inc    %edx
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    %bx,data_f0b9e
		push   %eax
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1a452
		lea    0x4(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		lea    0x4(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1a552
	jump_2ea55:
		lea    0x4(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2ea82
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2ea55
	jump_2ea82:
		mov    $0x7fff,%ecx
		mov    %esi,%eax
		mov    $0xa,%ebp
		call   func_17531
		xor    %ebx,%ebx
		mov    %ecx,0x8(%esp)
		mov    %eax,%edi
		jmp    jump_2eb1e
	jump_2eaa0:
		test   %di,%di
		jl     jump_2eabb
		movswl %bx,%eax
		movswl %di,%edx
		mov    data_f0648(,%eax,4),%eax
		call   func_1762c
		mov    %eax,%edi
		jmp    jump_2eac0
	jump_2eabb:
		mov    $0xa,%edi
	jump_2eac0:
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%edx
		mov    0x63(%esi),%cl
		mov    0x63(%edx),%ch
		mov    0x46(%edx),%ax
		cmp    %ch,%cl
		jne    jump_2eadd
		cwtl
		sar    %eax
		jmp    jump_2eaf8
	jump_2eadd:
		mov    0x60(%edx),%edx
		mov    0x60(%esi),%ecx
		sar    $0x18,%edx
		sar    $0x18,%ecx
		add    %ecx,%edx
		test   $0x1,%dl
		je     jump_2eaf8
		cwtl
		mov    %eax,%edx
		sar    $0x2,%edx
		sub    %edx,%eax
	jump_2eaf8:
		movswl %ax,%ecx
		movswl %di,%edx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		add    %ecx,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		cmp    0x8(%esp),%ax
		jge    jump_2eb1d
		mov    %eax,0x8(%esp)
		mov    %bx,(%esp)
	jump_2eb1d:
		inc    %ebx
	jump_2eb1e:
		cmp    data_f0b9e,%bx
		jl     jump_2eaa0
		cmpw   $0x7fff,0x8(%esp)
		je     jump_2eb57
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    $0x1,%ebx
		mov    data_f0648(,%eax,4),%eax
		mov    %bx,data_f0b9e
		mov    %eax,data_f0648
		mov    %ebx,%eax
		jmp    jump_2eb59
	jump_2eb57:
		xor    %eax,%eax
	jump_2eb59:
		add    $0x10,%esp
		jmp    jump_2e0ea


/*----------------------------------------------------------------*/
func_2eb61:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,(%esp)
		mov    %cx,0xc(%esp)
		mov    %edx,%eax
		add    $0x6,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_2cbfb
		mov    $0x3,%edx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   func_200de
		cmpw   $0x1,data_f14d8
		jne    jump_2ebd2
		movswl %bx,%edx
		mov    %esi,%eax
		call   func_2ea0c
		test   %ax,%ax
		jne    jump_2ebb4
	jump_2ebaa:
		mov    $0xffffffff,%eax
		jmp    jump_2ed77
	jump_2ebb4:
		mov    data_f0648,%edx
		movsbw (%edx),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0x10(%esp)
		jmp    jump_2ecb5
	jump_2ebd2:
		call   func_13f8a
		mov    $0x1,%ecx
		movswl %bx,%eax
		movsbl 0x1(%esi),%edx
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1a452
		lea    0x10(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1a552
	jump_2ebff:
		lea    0x10(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2ec42
		mov    0xe(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		test   %al,%al
		je     jump_2ec42
		mov    0xe(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_2ebff
	jump_2ec42:
		mov    $0x1,%eax
		xor    %ebx,%ebx
		call   func_44d67
		mov    %bx,data_f0b9e
	jump_2ec55:
		lea    0x10(%esp),%edx
		lea    0x4(%esp),%eax
		mov    %esi,%ebx
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_2ec78
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_2ebaa
	jump_2ec78:
		mov    0xe(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		test   %ax,%ax
		je     jump_2ec55
		mov    0xe(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_2ec55
		xor    %eax,%eax
		call   func_44d67
	jump_2ecb5:
		mov    0xe(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%edx
		mov    %esi,%eax
		movswl %di,%ebx
		call   func_2cba1
		mov    $0x1,%eax
		movswl %dx,%edx
		call   func_44d6e
		mov    %esi,%eax
		call   func_2da5e
		xor    %eax,%eax
		call   func_44d6e
		call   func_44d75
		mov    0x44(%esi),%ax
		mov    (%esp),%ecx
		mov    %eax,0x8(%esp)
		cmp    $0x1,%cx
		jle    jump_2ed0d
		add    %eax,%eax
		mov    %ax,0x44(%esi)
	jump_2ed0d:
		mov    data_f0648,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_1d770
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		add    %eax,%edx
		mov    %esi,%eax
		call   func_2caca
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    data_f0648,%eax
		sub    %edx,0x48(%eax)
		mov    0x8(%esp),%eax
		mov    %ax,0x44(%esi)
		cmp    $0x2,%di
		jge    jump_2ed58
		mov    0x60(%esi),%edx
		mov    data_f0648,%eax
		sar    $0x18,%edx
		call   func_2e896
	jump_2ed58:
		mov    data_f0648,%eax
		mov    %ebx,%edx
		call   func_46359
		mov    %esi,%eax
		call   func_1ed45
		mov    %esi,%eax
		call   func_12124
		mov    $0x1,%eax
	jump_2ed77:
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		ret

vtable_2ed7e:
		.long   func_2ee0a
		.long   func_2ee0a
		.long   func_2ee82
		.long   func_2ee9a
		.long   func_2eeef
		.long   func_2ee0a
		.long   func_2ee0a


/*----------------------------------------------------------------*/
func_2ed9a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %esp,%ebx
		mov    0x60(%eax),%ecx
		lea    0x4(%esp),%edx
		sar    $0x18,%ecx
		call   func_1a1de
		mov    $0x1,%edx
		mov    0xb(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x18,%eax
		call   func_1b7bf
		mov    %esi,%eax
		mov    $0x1,%ecx
		call   func_17531
		mov    -0x2(%esp),%edx
		mov    %eax,0x8(%esp)
		mov    0x60(%esi),%ebx
		movswl %di,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_1af22
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		mov    $0x7fff,%ecx
		call   func_1b00d
		jmp    jump_2ee28


/*----------------------------------------------------------------*/
func_2ee0a:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
	jump_2ee1f:
		cmp    %cx,%ax
		jge    jump_2ee28
		mov    %ebp,%edi
	jump_2ee26:
		mov    %eax,%ecx
	jump_2ee28:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_2ef0f
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ebp
		test   %eax,%eax
		je     jump_2ee28
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_2ee28
		mov    0x6c(%esi),%al
		cmp    $0x6,%al
		ja     jump_2ee28
		and    $0xff,%eax
		jmp    *vtable_2ed7e(,%eax,4)


/*----------------------------------------------------------------*/
func_2ee82:
/*----------------------------------------------------------------*/
		mov    0x48(%ebx),%eax
		mov    %eax,%edx
		mov    $0x64,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		cmp    %cx,%ax
		jge    jump_2ee28
		mov    %ebx,%edi
		jmp    jump_2ee26


/*----------------------------------------------------------------*/
func_2ee9a:
/*----------------------------------------------------------------*/
		mov    0x63(%ebx),%al
		cmp    0x63(%esi),%al
		jne    jump_2eeac
		mov    0x44(%ebx),%eax
		sar    $0x11,%eax
	jump_2eea8:
		mov    %eax,%ebx
		jmp    jump_2eed1
	jump_2eeac:
		mov    0x60(%ebx),%eax
		mov    0x60(%esi),%edx
		sar    $0x18,%eax
		sar    $0x18,%edx
		add    %edx,%eax
		test   $0x1,%al
		je     jump_2eecd
		mov    0x44(%ebx),%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		sar    $0x2,%edx
		sub    %edx,%eax
		jmp    jump_2eea8
	jump_2eecd:
		mov    0x46(%ebx),%bx
	jump_2eed1:
		mov    $0x12c,%eax
		sub    %ebx,%eax
		mov    0x8(%esp),%edx
		mov    %eax,%ebx
		imul   %edx,%ebx
		mov    $0xbb8,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    jump_2ee1f


/*----------------------------------------------------------------*/
func_2eeef:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    $0xc8,%edx
		mov    0x43(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    %cx,%dx
		jge    jump_2ee28
		mov    %ebx,%edi
		mov    %edx,%ecx
		jmp    jump_2ee28
	jump_2ef0f:
		test   %edi,%edi
		jne    jump_2ef17
		xor    %ebx,%ebx
		jmp    jump_2ef31
	jump_2ef17:
		movsbw (%edi),%ax
		mov    %ax,data_fa8b2
		movsbw 0x1(%edi),%ax
		mov    $0x1,%ebx
		mov    %ax,data_fa8b4
	jump_2ef31:
		mov    %ebx,%eax
		jmp    jump_2e0e7

vtable_2ef3a:
		.long   func_2f291
		.long   func_2f296
		.long   func_2f28c
		.long   func_2f29b


/*----------------------------------------------------------------*/
func_2ef4a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bx,0x14(%esp)
		mov    %cx,0x8(%esp)
		movsbw 0x64(%eax),%ax
		mov    %ax,0x1c(%esp)
		cmp    $0x3,%bx
		jne    jump_2ef7c
		test   %dx,%dx
		je     jump_2ef7c
		movw   $0x1,0x20(%esp)
		jmp    jump_2ef83
	jump_2ef7c:
		xor    %ebx,%ebx
		mov    %bx,0x20(%esp)
	jump_2ef83:
		mov    %esi,%eax
		call   func_1aef3
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_2cbfb
		mov    %ax,0x10(%esp)
		cmpw   $0x1,data_f14d8
		jne    jump_2eff3
		mov    0xe(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_2ed9a
		test   %ax,%ax
		jne    jump_2efc0
		mov    $0xffffffff,%eax
		jmp    jump_2f3ab
	jump_2efc0:
		mov    %esi,%eax
		call   func_1f179
		test   %ax,%ax
		jne    jump_2f069
		mov    $0x20,%eax
		call   func_1033b
		movb   $0x5,0x64(%esi)
		call   func_45559
		call   func_499e4
		movb   $0x6,0x64(%esi)
		call   func_45559
		jmp    jump_2f069
	jump_2eff3:
		lea    0xc(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    $0x1,%edx
		mov    0xb(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x18,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    0xe(%esp),%eax
		mov    0xa(%esp),%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1f19c
		test   %ax,%ax
		jne    jump_2f069
		mov    0x1c(%esp),%al
		mov    %al,0x64(%esi)
		call   func_45559
		xor    %eax,%eax
		jmp    jump_2f3ab
	jump_2f069:
		mov    0x1e(%esp),%ebx
		xor    %edx,%edx
		mov    data_fa8b0,%eax
		mov    %dx,data_f0b9e
		sar    $0x10,%ebx
		mov    data_fa8b2,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1ac08
	jump_2f08f:
		lea    0xc(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2f0bc
		mov    0xa(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f08f
	jump_2f0bc:
		xor    %edx,%edx
		jmp    jump_2f0d0
	jump_2f0c0:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_2f0d0:
		cmp    data_f0b9e,%dx
		jl     jump_2f0c0
		mov    %esi,%eax
		call   func_2cba1
		mov    $0x1,%eax
		call   func_44d6e
		mov    data_fa8b2,%ecx
		mov    data_fa8b0,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		call   func_46df1
		mov    $0x3,%eax
		mov    $0x1,%edx
		call   func_4f4cd
		mov    %esi,%eax
		call   func_46e27
		mov    data_f0648,%ebp
		test   %di,%di
		je     jump_2f2c1
		mov    0x6(%esp),%eax
		mov    0x14(%esp),%edx
		sar    $0x10,%eax
		mov    %ebp,%edi
		mov    %eax,(%esp)
		cmp    $0x1,%dx
		jne    jump_2f155
		mov    %ebp,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_1d770
		add    %eax,(%esp)
		jmp    jump_2f16c
	jump_2f155:
		mov    %ebp,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_1d770
		mov    (%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %edx,(%esp)
	jump_2f16c:
		mov    (%esp),%edx
		mov    %esi,%eax
		mov    0x14(%esp),%ebx
		call   func_2caca
		mov    %eax,(%esp)
		cmp    $0x2,%bx
		jne    jump_2f18c
		movw   $0x4,0x14(%esp)
		jmp    jump_2f199
	jump_2f18c:
		cmp    $0x3,%bx
		jne    jump_2f199
		movw   $0xf,0x14(%esp)
	jump_2f199:
		mov    $0x2,%eax
		call   func_1033b
		xor    %ecx,%ecx
		mov    $0x3,%ebx
	jump_2f1aa:
		cmp    0x14(%esp),%cx
		jge    jump_2f2b3
		mov    0x14(%esp),%edx
		inc    %ecx
		movb   $0x5,0x64(%esi)
		call   func_45559
		movb   $0x6,0x64(%esi)
		call   func_45559
		cmp    $0xf,%dx
		jne    jump_2f261
		movsbw 0x0(%ebp),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %ax,0xc(%esp)
		mov    $0x2,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_2f20e
		mov    %ebx,%eax
		call   func_499bd
		mov    0x4(%esp),%edx
		dec    %eax
		add    %eax,%edx
		mov    %dx,0x4(%esp)
		jmp    jump_2f221
	jump_2f20e:
		mov    %ebx,%eax
		call   func_499bd
		mov    0xc(%esp),%edi
		dec    %eax
		add    %eax,%edi
		mov    %di,0xc(%esp)
	jump_2f221:
		mov    0xa(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%edi
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_2f24e
		xor    %edi,%edi
	jump_2f24e:
		mov    0xa(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_46e19
	jump_2f261:
		mov    %ebx,%eax
		call   func_4f4cd
		test   %edi,%edi
		je     jump_2f2a0
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_46e27
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_2f2a9
		and    $0xff,%eax
		jmp    *vtable_2ef3a(,%eax,4)


/*----------------------------------------------------------------*/
func_2f28c:
/*----------------------------------------------------------------*/
		decb   0x66(%edi)
		jmp    jump_2f2a9


/*----------------------------------------------------------------*/
func_2f291:
/*----------------------------------------------------------------*/
		incb   0x66(%edi)
		jmp    jump_2f2a9


/*----------------------------------------------------------------*/
func_2f296:
/*----------------------------------------------------------------*/
		decb   0x65(%edi)
		jmp    jump_2f2a9


/*----------------------------------------------------------------*/
func_2f29b:
/*----------------------------------------------------------------*/
		incb   0x65(%edi)
		jmp    jump_2f2a9
	jump_2f2a0:
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_46e27
	jump_2f2a9:
		call   func_499e4
		jmp    jump_2f1aa
	jump_2f2b3:
		call   func_44d75
		xor    %eax,%eax
		call   func_44d6e
		jmp    jump_2f318
	jump_2f2c1:
		cmpw   $0x3,0x14(%esp)
		jne    jump_2f2d8
		mov    0x2b(%ebp),%al
		cmp    0x2b(%esi),%al
		jb     jump_2f2d8
		movw   $0x2,0x14(%esp)
	jump_2f2d8:
		mov    0x14(%esp),%eax
		mov    %ebp,%edx
		dec    %eax
		xor    %ecx,%ecx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   func_1d770
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		mov    %eax,(%esp)
		call   func_44d75
		xor    %eax,%eax
		call   func_44d6e
		cmpw   $0x1,0x14(%esp)
		jle    jump_2f318
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		dec    %eax
		call   func_1e565
	jump_2f318:
		xor    %ebx,%ebx
		mov    %bx,0x18(%esp)
		jmp    jump_2f369
	jump_2f321:
		mov    0x16(%esp),%ecx
		sar    $0x10,%ecx
		mov    (%esp),%edx
		mov    %ecx,%ebx
		mov    data_f0648(,%ecx,4),%eax
		call   func_45bfb
		mov    data_f0648(,%ecx,4),%eax
		mov    (%esp),%edx
		mov    0x48(%eax),%ebp
		mov    0x18(%esp),%edi
		sub    %edx,%ebp
		inc    %edi
		mov    %ebp,0x48(%eax)
		mov    %ecx,%ebx
		mov    0x60(%esi),%edx
		mov    data_f0648(,%ecx,4),%eax
		sar    $0x18,%edx
		mov    %di,0x18(%esp)
		call   func_45ed2
	jump_2f369:
		mov    0x18(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_2f321
		call   func_287af
		xor    %edx,%edx
		jmp    jump_2f38f
	jump_2f37f:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_2f38f:
		cmp    data_f0b9e,%dx
		jl     jump_2f37f
		mov    %esi,%eax
		call   func_1ed45
		mov    0x1c(%esp),%al
		mov    %al,0x64(%esi)
		mov    $0x1,%eax
	jump_2f3ab:
		add    $0x24,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2f3b2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		test   %dx,%dx
		jne    jump_2f3c6
		mov    $data_77941,%eax
		jmp    jump_2f3cb
	jump_2f3c6:
		mov    $data_7794d,%eax
	jump_2f3cb:
		call   func_1fea4
		mov    $0x1,%eax
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		call   func_44d6e
		mov    $0xc,%eax
		xor    %ecx,%ecx
		call   func_1033b
		call   func_45559
		call   func_499e4
		mov    %esi,%eax
		movb   $0x6,0x64(%esi)
		call   func_135eb
	jump_2f401:
		mov    0x60(%esi),%eax
		sar    $0x18,%eax
		movswl %cx,%edx
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    data_ba83c,%edx
		add    %eax,%ebx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		mov    data_f0648,%eax
		call   func_12f2a
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		call   func_5e9e8
		call   func_499e4
		test   %cx,%cx
		jne    jump_2f467
		call   func_499e4
	jump_2f467:
		inc    %ecx
		cmp    $0x3,%cx
		jl     jump_2f401
		xor    %eax,%eax
		call   func_44d6e
		call   func_1ffcd
		jmp    jump_2e87e


/*----------------------------------------------------------------*/
func_2f47f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		cmp    $0x2,%dx
		jb     jump_2f491
		jbe    jump_2f4b2
		cmp    $0x3,%dx
		je     jump_2f4c4
		jmp    jump_2f4d6
	jump_2f491:
		cmp    $0x1,%dx
		jne    jump_2f4d6
		mov    $0x1,%ecx
		mov    data_74492,%ebx
		mov    $0x5,%edx
	jump_2f4a7:
		sar    $0x10,%ebx
		call   func_2cc3a
		pop    %ecx
		pop    %ebx
		ret
	jump_2f4b2:
		mov    $0x1,%ecx
		mov    data_74492,%ebx
		mov    $0x7,%edx
		jmp    jump_2f4a7
	jump_2f4c4:
		mov    $0x1,%ecx
		mov    data_74492,%ebx
		mov    $0xc,%edx
		jmp    jump_2f4a7
	jump_2f4d6:
		mov    $0xffffffff,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f4de:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    data_ba83e,%bx
		mov    data_ba83c,%dx
		call   func_2d4eb
		mov    $data_7792a,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_77937,%eax
		call   func_4f460
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    %dx,data_f0b9e
		movswl %si,%edx
		call   func_2cbfb
		movswl %ax,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1ac08
	jump_2f53d:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2e80c
		mov    -0x2(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f53d


/*----------------------------------------------------------------*/
func_2f56c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   func_2d5a3
		mov    %dl,%cl
		mov    0x13(%ebx),%ah
		mov    $0x4,%dl
		dec    %cl
		and    $0xe3,%ah
		shl    %cl,%dl
		mov    %ah,%dh
		or     %dl,%dh
		mov    $0x1,%eax
		mov    %dh,0x13(%ebx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f592:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_74498,%ecx
		movswl %dx,%ebx
		sar    $0x10,%ecx
		xor    %edx,%edx
		jmp    jump_2f6fe


/*----------------------------------------------------------------*/
func_2f5a7:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		call   func_2d684
		mov    0x13(%ebx),%ah
		and    $0x9f,%ah
		mov    %ah,0x13(%ebx)
		cmp    $0x3,%dx
		jge    jump_2f5cd
		mov    %ah,%dh
		or     $0x20,%dh
		mov    %dh,0x13(%ebx)
	jump_2f5c6:
		mov    $0x1,%eax
		pop    %ebx
		ret
	jump_2f5cd:
		mov    %ah,%dl
		or     $0x40,%dl
		mov    %dl,0x13(%ebx)
		jmp    jump_2f5c6


/*----------------------------------------------------------------*/
func_2f5d7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_7449c,%ecx
		movswl %dx,%ebx
		sar    $0x10,%ecx
		xor    %edx,%edx
	jump_2f5e7:
		call   func_2e25b
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f5ef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %dx,0x4(%esp)
		mov    $0x5,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_2f615:
		lea    0x8(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2f640
		mov    0x6(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f615
	jump_2f640:
		mov    %ecx,%eax
		call   func_2cba1
		xor    %edx,%edx
		mov    $0x1,%eax
		mov    0x4(%esp),%dl
		call   func_44d6e
		mov    %ecx,%eax
		mov    0x2(%esp),%ebx
		call   func_2d7d2
		xor    %eax,%eax
		sar    $0x10,%ebx
		call   func_44d6e
		call   func_44d75
		mov    data_7449e,%edx
		mov    %ecx,%eax
		sar    $0x10,%edx
		call   func_2caf7
		mov    $0x1,%eax
		add    $0xc,%esp
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f68c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		cmp    $0x2,%dx
		jb     jump_2f69e
		jbe    jump_2f6bf
		cmp    $0x3,%dx
		je     jump_2f6d1
		jmp    jump_2f6e3
	jump_2f69e:
		cmp    $0x1,%dx
		jne    jump_2f6e3
		mov    $0x1,%ecx
		mov    data_744a0,%ebx
		mov    $0x5,%edx
	jump_2f6b4:
		sar    $0x10,%ebx
		call   func_2cc3a
		pop    %ecx
		pop    %ebx
		ret
	jump_2f6bf:
		mov    $0x1,%ecx
		mov    data_744a0,%ebx
		mov    $0x7,%edx
		jmp    jump_2f6b4
	jump_2f6d1:
		mov    $0x1,%ecx
		mov    data_744a0,%ebx
		mov    $0xc,%edx
		jmp    jump_2f6b4
	jump_2f6e3:
		mov    $0xffffffff,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f6eb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_744a2,%ecx
		movswl %dx,%ebx
		mov    $0x1,%edx
	jump_2f6fb:
		sar    $0x10,%ecx
	jump_2f6fe:
		call   func_2eb61
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f706:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_744a4,%ecx
		movswl %dx,%ebx
		mov    $0x1,%edx
		sar    $0x10,%ecx
		jmp    jump_2f5e7


/*----------------------------------------------------------------*/
func_2f71e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %esi,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1d124
		test   %ax,%ax
		jne    jump_2f749
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_2f749:
		cmp    $0x1,%di
		jne    jump_2f751
		xor    %edi,%edi
	jump_2f751:
		mov    $0x10,%eax
		movb   $0x7,0x64(%esi)
		call   func_1033b
		call   func_45559
		call   func_499e4
		movb   $0x8,0x64(%esi)
		call   func_45559
		call   func_499e4
		mov    $0x14,%eax
		call   func_4f4cd
		call   func_499e4
		mov    $0x1,%eax
		call   func_4f4cd
		movb   $0x9,0x64(%esi)
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ebx
		call   func_454b3
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_1e2ea
		call   func_5e9e8
		call   func_499e4
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ebx
		call   func_454b3
		mov    $0x2,%edx
		mov    %esi,%eax
		call   func_1e2ea
		call   func_5e9e8
		mov    data_744a6,%edx
		movswl %di,%ebx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_2caf7
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f80b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		cmp    $0x1,%dx
		setg   %al
		xor    %ah,%ah
		add    $0x5,%eax
		mov    %ax,0xc(%esp)
		mov    0xa(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		lea    0x4(%esp),%ebx
		call   func_2cbfb
		mov    %esp,%edx
		mov    %ax,0x8(%esp)
		mov    0x60(%esi),%ecx
		mov    %ax,0xc(%esp)
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_1a1de
		mov    0x6(%esp),%eax
		mov    0x2(%esp),%edx
		mov    $0x1,%ecx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_2f883:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2f8ae
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f883
	jump_2f8ae:
		mov    %esi,%eax
		call   func_2cba1
		mov    $0x1,%eax
		call   func_44d6e
		cmp    $0x1,%di
		jle    jump_2f8ce
		mov    $0x1,%edx
		mov    %esi,%eax
		jmp    jump_2f8d2
	jump_2f8ce:
		mov    %esi,%eax
		xor    %edx,%edx
	jump_2f8d2:
		call   func_2dd7a
		xor    %eax,%eax
		call   func_44d6e
		call   func_44d75
		cmpw   $0x0,data_f0b9e
		jle    jump_2f900
		mov    data_744ac,%edx
		movswl %di,%ebx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_2caf7
	jump_2f900:
		cmp    $0x2,%di
		jle    jump_2da30
		mov    0xa(%esp),%eax
		mov    0x2(%esp),%edx
		mov    $0x1,%ecx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		xor    %ecx,%ecx
		mov    %cx,data_f0b9e
	jump_2f939:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2f964
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f939
	jump_2f964:
		cmpw   $0x0,data_f0b9e
		jle    jump_2da30
		mov    data_744ac,%edx
		movswl %di,%ebx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_2caf7
		jmp    jump_2da30


/*----------------------------------------------------------------*/
func_2f98a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x1,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_2f9ae:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_2f9d9
		mov    -0x2(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2f9ae
	jump_2f9d9:
		mov    %ecx,%eax
		call   func_2cba1
		mov    $0x1,%eax
		call   func_44d6e
		mov    %esi,%eax
		dec    %eax
		movswl %ax,%edx
		mov    %ecx,%eax
		add    $0x2,%esi
		call   func_2dfc1
		xor    %eax,%eax
		movswl %si,%ebx
		call   func_44d6e
		call   func_44d75
		mov    data_744ae,%edx
		mov    %ecx,%eax
		sar    $0x10,%edx
		call   func_2caf7
		jmp    jump_2e879


/*----------------------------------------------------------------*/
func_2fa1e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		call   func_2d684
		mov    data_744b0,%ecx
		movswl %dx,%ebx
		mov    %esi,%eax
		sar    $0x10,%ecx
		xor    %edx,%edx
		call   func_2ef4a
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2fa41:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_744b2,%ecx
		movswl %dx,%ebx
		mov    $0x1,%edx
		sar    $0x10,%ecx
		call   func_2ef4a
		pop    %ecx
		pop    %ebx
		ret

vtable_2fa5e:
		.long   func_2fb62
		.long   func_2fb6c
		.long   func_2fb76
		.long   func_2fb80


/*----------------------------------------------------------------*/
func_2fa6e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%esi
		mov    %dx,0x18(%esp)
		mov    $0x5,%edx
		lea    0x8(%esp),%ebx
		call   func_200de
		mov    %esp,%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %dx,data_f0b9e
		mov    $0x9,%edx
		mov    $0x1,%ecx
		call   func_2cbfb
		mov    0x6(%esp),%edx
		cwtl
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_2facf:
		lea    0x4(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_2fafc
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x12(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_2facf
	jump_2fafc:
		cmpw   $0x1,data_f14d8
		jne    jump_2fb1a
		cmpw   $0x0,data_f0b9e
		jne    jump_2fb1a
		mov    $0xffffffff,%eax
		jmp    jump_2fcfb
	jump_2fb1a:
		mov    %esi,%eax
		call   func_2cba1
		mov    $0x1,%eax
		mov    $0x32,%edx
		call   func_44d6e
		mov    $data_77959,%eax
		xor    %edi,%edi
		call   func_1fea4
		mov    $data_77965,%eax
		mov    %edi,0x10(%esp)
		call   func_4f460
		mov    0x63(%esi),%al
		mov    %edi,0xc(%esp)
		cmp    $0x3,%al
		ja     jump_2fb88
		and    $0xff,%eax
		jmp    *vtable_2fa5e(,%eax,4)


/*----------------------------------------------------------------*/
func_2fb62:
/*----------------------------------------------------------------*/
		movl   $0x4,0x10(%esp)
		jmp    jump_2fb88


/*----------------------------------------------------------------*/
func_2fb6c:
/*----------------------------------------------------------------*/
		movl   $0xfffffffc,0xc(%esp)
		jmp    jump_2fb88


/*----------------------------------------------------------------*/
func_2fb76:
/*----------------------------------------------------------------*/
		movl   $0xfffffffc,0x10(%esp)
		jmp    jump_2fb88


/*----------------------------------------------------------------*/
func_2fb80:
/*----------------------------------------------------------------*/
		movl   $0x4,0xc(%esp)
	jump_2fb88:
		mov    0x2(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%edi
		mov    0x63(%esi),%ah
		dec    %edi
		test   $0x1,%ah
		je     jump_2fbad
		imul   $0x6,%edi,%edi
		jmp    jump_2fbb0
	jump_2fbad:
		shl    $0x2,%edi
	jump_2fbb0:
		mov    $0x20,%eax
		movb   $0x7,0x64(%esi)
		call   func_1033b
		xor    %edx,%edx
	jump_2fbc0:
		call   func_45559
		mov    0x64(%esi),%bl
		inc    %bl
		inc    %edx
		mov    %bl,0x64(%esi)
		call   func_499e4
		cmp    $0x3,%dx
		jl     jump_2fbc0
		mov    $0x10,%eax
		call   func_1033b
		mov    %esi,%eax
		movb   $0x9,0x64(%esi)
		call   func_1f179
		test   %ax,%ax
		jne    jump_2fbfa
		mov    %esi,%eax
		call   func_12124
	jump_2fbfa:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,(%esp)
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x8(%esp)
		mov    $0x3,%eax
		mov    $0x5,%ebp
		call   func_1033b
		mov    $0x32,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
		jmp    jump_2fcae
	jump_2fc40:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x60(%esi),%eax
		sar    $0x18,%eax
		movswl %cx,%edx
		lea    (%eax,%eax,4),%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    -0x2(%esp),%eax
		mov    0x6(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    0xc(%esp),%eax
		mov    (%esp),%edx
		mov    0x8(%esp),%ebx
		add    %eax,%edx
		mov    0x10(%esp),%eax
		inc    %ecx
		add    %eax,%ebx
		mov    %dx,(%esp)
		mov    %bx,0x8(%esp)
		call   func_5e9e8
		call   func_499e4
	jump_2fcae:
		cmp    %di,%cx
		jl     jump_2fc40
		call   func_44d75
		xor    %eax,%eax
		mov    0x16(%esp),%ebx
		call   func_44d6e
		mov    data_744b6,%edx
		sar    $0x10,%ebx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_2caf7
		mov    $0x2,%ebx
		mov    $0x1e,%edx
		mov    $0x4,%eax
		call   func_29437
		mov    %esi,%eax
		call   func_12124
		call   func_1ffcd
		mov    $0x1,%eax
	jump_2fcfb:
		add    $0x1c,%esp
		jmp    jump_2e0ea


/*----------------------------------------------------------------*/
func_2fd03:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x304,%esp
		mov    %eax,%ebp
		mov    %dx,0x300(%esp)
		cmpw   $0x1,data_f14d8
		jne    jump_2fd2c
	jump_2fd22:
		mov    $0xffffffff,%edx
		jmp    jump_2feca
	jump_2fd2c:
		mov    data_ba840,%ax
		sub    $0x4,%eax
		movswl %ax,%ecx
		mov    data_ba844,%ax
		push   $0x1
		sub    $0x4,%eax
		mov    $0x2,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		call   func_13f08
		mov    $0x1,%edx
		mov    %ebp,%eax
		call   func_1f19c
		test   %ax,%ax
		je     jump_2fd22
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		mov    $0x18,%eax
		call   func_1033b
		mov    %ebp,%eax
		call   func_1f179
		test   %ax,%ax
		jne    jump_2fd9b
		call   func_499e4
		call   func_499e4
		movb   $0x0,0x64(%ebp)
		call   func_45559
		jmp    jump_2fdb4
	jump_2fd9b:
		mov    $0x7,%edx
	jump_2fda0:
		mov    %dl,0x64(%ebp)
		call   func_45559
		inc    %edx
		call   func_499e4
		cmp    $0xa,%dx
		jl     jump_2fda0
	jump_2fdb4:
		mov    $0x3,%eax
		call   func_4f4cd
		xor    %edx,%edx
	jump_2fdc0:
		movswl %dx,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%dx
		jl     jump_2fdc0
		push   $0xa
		lea    0x4(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		mov    data_fa8b2,%ax
		sub    $0x6,%eax
		mov    %ax,data_ba83c
		test   %ax,%ax
		jge    jump_2fe0f
		xor    %ecx,%ecx
		mov    %cx,data_ba83c
		jmp    jump_2fe36
	jump_2fe0f:
		mov    data_ba842,%eax
		mov    data_ba83a,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_2fe36
		mov    data_ba844,%ax
		sub    $0xc,%eax
		mov    %ax,data_ba83c
	jump_2fe36:
		mov    data_fa8b4,%ax
		sub    $0x6,%eax
		mov    %ax,data_ba83e
		test   %ax,%ax
		jge    jump_2fe55
		xor    %edi,%edi
		mov    %di,data_ba83e
		jmp    jump_2fe7c
	jump_2fe55:
		mov    data_ba83e,%eax
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0xc,%eax
		cmp    %eax,%edx
		jle    jump_2fe7c
		mov    data_ba840,%ax
		sub    $0xc,%eax
		mov    %ax,data_ba83e
	jump_2fe7c:
		push   $0x14
		mov    $data_12824c,%ecx
		lea    0x4(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		mov    0x2fe(%esp),%ebx
		mov    data_744b4,%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_2caf7
		mov    %ebp,%eax
		mov    $0x1,%edx
		call   func_12124
	jump_2feca:
		mov    %edx,%eax
		add    $0x304,%esp
		jmp    jump_2e0ea


/*----------------------------------------------------------------*/
func_2fed7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		cmp    $0x2,%dx
		jb     jump_2fee9
		jbe    jump_2ff0a
		cmp    $0x3,%dx
		je     jump_2ff1c
		jmp    jump_2ff2e
	jump_2fee9:
		cmp    $0x1,%dx
		jne    jump_2ff2e
		mov    $0x2,%ecx
		mov    data_744b8,%ebx
		mov    $0x5,%edx
	jump_2feff:
		sar    $0x10,%ebx
		call   func_2cc3a
		pop    %ecx
		pop    %ebx
		ret
	jump_2ff0a:
		mov    $0x2,%ecx
		mov    data_744b8,%ebx
		mov    $0x7,%edx
		jmp    jump_2feff
	jump_2ff1c:
		mov    $0x2,%ecx
		mov    data_744b8,%ebx
		mov    $0xc,%edx
		jmp    jump_2feff
	jump_2ff2e:
		mov    $0xffffffff,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2ff36:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    data_744be,%ecx
		movswl %dx,%ebx
		mov    $0x2,%edx
		jmp    jump_2f6fb


/*----------------------------------------------------------------*/
func_2ff4b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    $data_7796f,%eax
		call   func_1fea4
		mov    $0x9,%eax
		call   func_1033b
		mov    $0x1,%eax
		lea    0x4(%esp),%ebx
		call   func_44d6e
		mov    $0x9,%eax
		mov    %esp,%edx
		call   func_1033b
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_135eb
	jump_2ff8a:
		movswl %cx,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    data_ba83a,%eax
		add    %edx,%ebx
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_454b3
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1fffe
		mov    %esi,%eax
		inc    %ecx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0x9,%cx
		jl     jump_2ff8a
		xor    %eax,%eax
		call   func_44d6e
		call   func_1ffcd
		orb    $0x80,0x13(%esi)
		jmp    jump_2e879


/*----------------------------------------------------------------*/
func_2fff9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %esi,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1d124
		test   %ax,%ax
		jne    jump_30020
		mov    $0xffffffff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_30020:
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_2f3b2
		mov    0x60(%esi),%edx
		mov    data_f0648,%eax
		sar    $0x18,%edx
		call   func_2e896
		mov    %esi,%eax
		call   func_12124
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30049:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %esi,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1d124
		test   %ax,%ax
		jne    jump_30074
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_30074:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_2f3b2
		movswl %di,%ebx
		mov    $0x7d00,%edx
		mov    %esi,%eax
		call   func_2caf7
		mov    %esi,%eax
		call   func_12124
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_300a0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $func_2f47f,%edx
		mov    $func_2f4de,%ebx
		mov    $func_2f56c,%ecx
		mov    $func_2f592,%esi
		mov    $func_2f5a7,%edi
		mov    $func_2f5d7,%ebp
		mov    $func_2f5ef,%eax
		mov    %edx,data_f1474
		mov    %ebx,data_f1478
		mov    %ecx,data_f147c
		mov    %esi,data_f1480
		mov    %edi,data_f1484
		mov    %ebp,data_f1488
		mov    %eax,data_f148c
		mov    $func_2f4de,%edx
		mov    $func_2f68c,%ebx
		mov    $func_2f6eb,%ecx
		mov    $func_2f706,%esi
		mov    $func_2f71e,%edi
		mov    $func_2f5a7,%ebp
		mov    $func_2f80b,%eax
		mov    %edx,data_f1490
		mov    %ebx,data_f1494
		mov    %ecx,data_f1498
		mov    %esi,data_f149c
		mov    %edi,data_f14a0
		mov    %ebp,data_f14a4
		mov    %eax,data_f14a8
		mov    $func_2f98a,%edx
		mov    $func_2fa1e,%ebx
		mov    $func_2fa41,%ecx
		mov    $func_2fa6e,%esi
		mov    $func_2fd03,%edi
		mov    $func_2fed7,%ebp
		mov    $func_2f5a7,%eax
		mov    %edx,data_f14ac
		mov    %ebx,data_f14b0
		mov    %ecx,data_f14b4
		mov    %esi,data_f14b8
		mov    %edi,data_f14bc
		mov    %ebp,data_f14c0
		mov    %eax,data_f14c4
		mov    $func_2ff36,%edx
		mov    $func_2ff4b,%ebx
		mov    $func_2fff9,%ecx
		mov    $func_30049,%esi
		mov    %edx,data_f14c8
		mov    %ebx,data_f14cc
		mov    %ecx,data_f14d0
		mov    %esi,data_f14d4
		jmp    jump_2d7cb


/*----------------------------------------------------------------*/
func_301bb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		test   %bx,%bx
		jne    jump_301d4
		movswl %dx,%ecx
		mov    data_753f4(,%ecx,2),%ecx
		jmp    jump_301de
	jump_301d4:
		movswl %dx,%ecx
		mov    data_75440(,%ecx,2),%ecx
	jump_301de:
		sar    $0x10,%ecx
		test   %ecx,%ecx
		jle    jump_302aa
		mov    0x48(%esi),%eax
		sub    $0x64,%eax
		cmp    %ecx,%eax
		jge    jump_301f5
		mov    %eax,%ecx
	jump_301f5:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		xor    %ebx,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_45bfb
		sub    %ecx,0x48(%esi)
		mov    %esi,%eax
		mov    0x60(%esi),%edx
		xor    %ebx,%ebx
		sar    $0x18,%edx
		call   func_45ed2
		mov    $0x3,%eax
		mov    $0x1,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_30231:
		mov    -0x2(%esp),%edi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%edi
		call   func_454b3
		mov    %edi,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_45f29
		mov    0xb(%esi),%eax
		sar    $0x18,%eax
		mov    %edi,%ebx
		mov    data_70a5f(%eax),%ecx
		xor    %edx,%edx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_45ccb
		mov    (%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,(%esp)
		cmp    $0x19,%bx
		jl     jump_30231
		mov    %esi,%eax
		mov    $0x1,%ebx
		call   func_12124
		xor    %edx,%edx
		mov    %esi,%eax
		call   func_53797
		mov    $0x24,%eax
		call   func_499da
	jump_302aa:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_302b2:
		.long   func_30300
		.long   func_30318
		.long   func_3034e
		.long   func_30375
		.long   func_303ab
		.long   func_303f0
		.long   func_30408
		.long   func_3042f
		.long   func_30456
		.long   func_3048c
		.long   func_304b3
		.long   func_304cb
		.long   func_30501


/*----------------------------------------------------------------*/
func_302e6:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		cmp    $0xc,%dx
		ja     jump_30519
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *vtable_302b2(,%eax,4)


/*----------------------------------------------------------------*/
func_30300:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_7797b,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_308ee
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30318:
/*----------------------------------------------------------------*/
		mov    $0x33,%edx
		mov    $data_77984,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_778b3,%eax
		call   func_4f460
		mov    $0x35,%edx
		mov    $data_7798d,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_31283
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3034e:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77997,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7798d,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_32589
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30375:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_7789d,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_7798d,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_779a1,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_32bcb
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_303ab:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_779a9,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_778b3,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_779b6,%eax
		call   func_4f460
		mov    $0x35,%edx
		mov    $data_779c3,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_341c7
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_303f0:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_779cc,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_34c48
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30408:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_779d3,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_779df,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_356db
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3042f:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77904,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_779e9,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_35fc2
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30456:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_779f4,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_779d3,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_779fe,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_367ee
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3048c:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77a08,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_778b3,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_377a6
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_304b3:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77a14,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_37fa4
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_304cb:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_7797b,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77a1e,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77a2a,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_39a49
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30501:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_778b3,%eax
		call   func_4f460
		mov    %ebx,%eax
		call   func_3aee8
		pop    %ebx
		ret
	jump_30519:
		mov    $0xffffffff,%eax
		pop    %ebx
		ret
.data
data_30520:
		.ascii  "\x05\x00\x07\x00\x06\x00\x00\x00"
data_30528:
		.ascii  "\x00\x00\xff\xff\xff\xff"
		.fill   0x6
		.ascii  "\x01\x00\x00\x00\xff\xff\x01\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x01\x00"
.text


/*----------------------------------------------------------------*/
func_30544:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    %dx,data_f1ba2
		mov    %dx,data_f1ba0
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_305a2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    data_f1ba0,%dx
	jump_305b7:
		cmp    data_f1ba2,%dx
		je     jump_305f4
		movswl %dx,%ecx
		mov    data_f14dc(,%ecx,4),%ebx
		mov    data_f156a(,%ecx,2),%edx
		mov    data_f153a(,%ecx,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		lea    0x1(%ecx),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		jmp    jump_305b7
	jump_305f4:
		test   %esi,%esi
		jne    jump_30624
		mov    data_f1b9c,%eax
		call   func_12f2a
		mov    data_f1b9e,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,data_f1ba0
		jmp    jump_306de
	jump_30624:
		mov    0x4(%esp),%al
		mov    %al,0x64(%esi)
		mov    %esi,%eax
		call   func_12f2a
		mov    0x5d(%esi),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		sub    %ebx,%eax
		mov    $data_d66a8,%ecx
		shl    $0x2,%eax
		add    %eax,%ecx
		movsbw 0x63(%esi),%ax
		imul   $0xb,%eax,%eax
		add    %ax,0x4(%esp)
		mov    0x2(%esp),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		lea    (%ecx,%eax,1),%ebx
		movsbl (%esi),%eax
		movsbw 0x4(%ebx),%cx
		call   func_10971
		add    $0xc,%eax
		add    %ecx,%eax
		movswl %dx,%ecx
		mov    %ax,data_f153c(,%ecx,2)
		movsbw 0x5(%ebx),%ax
		mov    %eax,(%esp)
		movsbl 0x1(%esi),%eax
		mov    (%esp),%edi
		call   func_10988
		sub    $0x2,%eax
		mov    data_f1ba0,%edx
		add    %edi,%eax
		sar    $0x10,%edx
		mov    %ax,data_f156c(,%ecx,2)
		inc    %edx
		mov    0x9(%ebx),%eax
		mov    $0x18,%ebx
		mov    %eax,data_f14dc(,%ecx,4)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %esi,data_f1b9c
		mov    %dx,data_f1ba2
	jump_306de:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_306e6:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x5d(%ebx),%edx
		mov    data_f1ba2,%ax
		sar    $0x18,%edx
		mov    %ax,(%esp)
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    $data_d66a8,%ebp
		shl    $0x2,%eax
		add    %eax,%ebp
		movsbw 0x63(%ebx),%ax
		imul   $0xb,%eax,%eax
		add    %eax,%ecx
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    -0x2(%esp),%ecx
		movsbw 0x4(%eax,%ebp,1),%dx
		sar    $0x10,%ecx
		add    %edx,%edi
		mov    %di,data_f153c(,%ecx,2)
		movsbw 0x5(%eax,%ebp,1),%di
		add    %edi,%esi
		mov    %si,data_f156c(,%ecx,2)
		lea    0x1(%ecx),%edx
		mov    0x9(%eax,%ebp,1),%eax
		mov    %ebx,data_f1b9c
		mov    %eax,data_f14dc(,%ecx,4)
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,data_f1ba2
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_30784:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_f1b9e,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,data_f1ba0
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_307a6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %dx,(%esp)
		mov    $data_f189c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f945
		xor    %eax,%eax
	jump_307c6:
		movswl %ax,%esi
		movswl %cx,%edx
		lea    (%esi,%esi,2),%esi
		lea    (%edx,%edx,2),%edx
		lea    data_f159c(%esi),%edi
		lea    data_f189c(%edx),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x68,%ax
		jl     jump_307c6
		mov    $data_f159c,%ecx
		mov    $data_f189c,%ebx
		mov    $0x68,%edx
		xor    %eax,%eax
		call   func_5fc21
		mov    -0x2(%esp),%edx
		mov    $data_f159c,%ecx
		sar    $0x10,%edx
		mov    $data_f189c,%ebx
		push   %edx
		xor    %eax,%eax
		mov    $0x68,%edx
	jump_30817:
		call   func_5fd1c
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30824:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %dx,(%esp)
		mov    $data_f189c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f945
		mov    $0x60,%eax
	jump_30847:
		movswl %ax,%esi
		movswl %cx,%edx
		lea    (%esi,%esi,2),%esi
		lea    (%edx,%edx,2),%edx
		lea    data_f159c(%esi),%edi
		lea    data_f189c(%edx),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_30847
		mov    $data_f159c,%ecx
		mov    $data_f189c,%ebx
		mov    $0x100,%edx
		mov    $0x60,%eax
		call   func_5fc21
		mov    -0x2(%esp),%edx
		mov    $data_f159c,%ecx
		sar    $0x10,%edx
		mov    $data_f189c,%ebx
		push   %edx
		mov    $0x60,%eax
		mov    $0x100,%edx
		jmp    jump_30817


/*----------------------------------------------------------------*/
func_308a3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %eax
		mov    %edx,%ecx
		mov    %ebx,%esi
		xor    %edi,%edi
	jump_308ad:
		movswl %cx,%edx
		cmp    $0xffffffd8,%edx
		jl     jump_308bc
		cmp    $0xb4,%cx
		jle    jump_308cf
	jump_308bc:
		mov    -0x2(%esp),%eax
		movswl %cx,%edx
		mov    %esi,%ebx
		sar    $0x10,%eax
		call   func_5efb9
		jmp    jump_308dd
	jump_308cf:
		mov    -0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
		call   func_5ee51
	jump_308dd:
		inc    %edi
		add    $0x40,%ecx
		cmp    $0x4,%di
		jl     jump_308ad
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_308ee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x58,%esp
		mov    %eax,%ebp
		call   func_169d7
		cmpw   $0x1,data_f14d8
		jne    jump_30946
		lea    0x34(%esp),%ecx
		lea    0x3c(%esp),%ebx
		mov    $0x7,%edx
		mov    %ebp,%eax
		call   func_2e0f0
		test   %eax,%eax
		jne    jump_3092a
	jump_30920:
		mov    $0xffffffff,%eax
		jmp    jump_30f57
	jump_3092a:
		mov    0x32(%esp),%ebx
		mov    0x3a(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%edi
		jmp    jump_30aa5
	jump_30946:
		xor    %esi,%esi
		jmp    jump_30a8d
	jump_3094d:
		mov    $0x1,%eax
		lea    0x38(%esp),%ebx
		lea    0x40(%esp),%edx
		call   func_44d67
		mov    0x60(%ebp),%ecx
		mov    %ebp,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		push   $0x7
		mov    0x3a(%esp),%edx
		mov    0x42(%esp),%eax
		xor    %ebx,%ebx
		mov    $0x1,%ecx
		mov    %bx,data_f0b9e
		sar    $0x10,%edx
		mov    0x60(%ebp),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1a452
	jump_30995:
		lea    0x38(%esp),%edx
		lea    0x40(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_309f3
		mov    0x36(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x3e(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		mov    0x36(%esp),%edx
		mov    0x3e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_30995
		mov    0x36(%esp),%edx
		mov    0x3e(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_30995
	jump_309f3:
		cmp    $0x1,%si
		jne    jump_30a05
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_30a97
	jump_30a05:
		mov    $0x1,%ecx
		lea    0x34(%esp),%edx
		lea    0x3c(%esp),%eax
		mov    %ebp,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_30a2b
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_30920
	jump_30a2b:
		mov    0x32(%esp),%edx
		mov    0x3a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_30a05
		mov    0x32(%esp),%ebx
		mov    0x3a(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		cmp    $0x2,%ax
		jl     jump_30a05
		mov    0x32(%esp),%edx
		mov    0x3a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_30a05
		mov    0x32(%esp),%ebx
		mov    0x3a(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		inc    %esi
		call   func_49adf
		mov    %eax,%edi
	jump_30a8d:
		cmp    $0x2,%si
		jl     jump_3094d
	jump_30a97:
		cmpw   $0x0,data_f0b9e
		je     jump_30920
	jump_30aa5:
		mov    $data_77a38,%eax
		call   func_1fea4
		call   func_103a8
		xor    %eax,%eax
	jump_30ab6:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x20(%esp,%edx,1)
		cmp    $0x7,%ax
		jl     jump_30ab6
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x40(%esp)
		movsbl 0x1(%ebp),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x38(%esp)
		mov    0x63(%ebp),%bh
		cmp    $0x3,%bh
		jne    jump_30b0a
		xor    %esi,%esi
		mov    %si,0x4c(%esp)
		jmp    jump_30b47
	jump_30b0a:
		cmp    $0x1,%bh
		jne    jump_30b18
		movw   $0x7,0x4c(%esp)
		jmp    jump_30b47
	jump_30b18:
		test   %bh,%bh
		jne    jump_30b31
		mov    %eax,%ebx
		mov    $0xe,%edx
		add    %edi,%ebx
		mov    %dx,0x4c(%esp)
		mov    %bx,0x38(%esp)
		jmp    jump_30b47
	jump_30b31:
		cmp    $0x2,%bh
		jne    jump_30b47
		mov    $0x15,%esi
		sub    %edi,%eax
		mov    %si,0x4c(%esp)
		mov    %ax,0x38(%esp)
	jump_30b47:
		mov    $0x1,%eax
		mov    $0x23,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		mov    $0x5,%eax
		mov    %di,0x50(%esp)
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_30b80
	jump_30b70:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_30b80:
		cmp    data_f0b9e,%dx
		jl     jump_30b70
		xor    %eax,%eax
		mov    %ax,0x44(%esp)
	jump_30b90:
		mov    0x42(%esp),%eax
		mov    0x4a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%esi
		xor    %ecx,%ecx
		add    %eax,%esi
	jump_30bac:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x4(%esi),%eax
		mov    0x36(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x2(%esi),%edi
		add    %eax,%edx
		mov    0x3e(%esp),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    0x8(%esi),%ebx
		add    %edi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_30bac
		mov    0x44(%esp),%edx
		inc    %edx
		mov    %dx,0x44(%esp)
		cmp    $0x6,%dx
		jl     jump_30b90
		mov    0x50(%esp),%eax
		xor    %ecx,%ecx
		add    $0x5,%eax
		mov    %cx,0x48(%esp)
		mov    %eax,0x54(%esp)
		jmp    jump_30e8c
	jump_30c22:
		cmp    0x50(%esp),%ax
		jge    jump_30c51
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		movb   $0x1c,0x20(%esp,%edx,1)
		mov    0x40(%esp),%eax
		mov    %ax,(%esp,%edx,2)
		mov    0x38(%esp),%eax
		add    $0xf,%eax
		mov    %ax,0x10(%esp,%edx,2)
		xor    %ah,%ah
		mov    %ah,0x28(%esp,%edx,1)
	jump_30c51:
		xor    %esi,%esi
		mov    %esi,0x30(%esp)
	jump_30c57:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x4c(%esp),%ecx
		call   func_454b3
		cmp    $0x15,%cx
		jne    jump_30cfa
		mov    $0x6,%ecx
	jump_30c80:
		movswl %cx,%eax
		cmpb   $0x0,0x20(%esp,%eax,1)
		jle    jump_30cee
		mov    0x1d(%esp,%eax,1),%edx
		sar    $0x18,%edx
		imul   $0xc,%edx,%edx
		mov    0x28(%esp,%eax,1),%bl
		inc    %bl
		mov    %bl,0x28(%esp,%eax,1)
		add    $data_f0daa,%edx
		cmp    $0x2,%bl
		jle    jump_30cb3
		xor    %bl,%bl
		mov    %bl,0x28(%esp,%eax,1)
		incb   0x20(%esp,%eax,1)
	jump_30cb3:
		movswl %cx,%eax
		cmpb   $0x23,0x20(%esp,%eax,1)
		jle    jump_30cc3
		xor    %bh,%bh
		mov    %bh,0x20(%esp,%eax,1)
	jump_30cc3:
		movswl %cx,%eax
		mov    0x4(%edx),%edi
		mov    0xe(%esp,%eax,2),%esi
		sar    $0x10,%edi
		sar    $0x10,%esi
		mov    0x8(%edx),%ebx
		add    %edi,%esi
		mov    -0x2(%esp,%eax,2),%edi
		mov    0x2(%edx),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %esi,%edx
		add    %edi,%eax
		call   func_5ee51
	jump_30cee:
		dec    %ecx
		test   %cx,%cx
		jl     jump_30d71
		jmp    jump_30c80
	jump_30cfa:
		xor    %ecx,%ecx
	jump_30cfc:
		movswl %cx,%eax
		cmpb   $0x0,0x20(%esp,%eax,1)
		jle    jump_30d6a
		mov    0x1d(%esp,%eax,1),%edx
		sar    $0x18,%edx
		imul   $0xc,%edx,%edx
		mov    0x28(%esp,%eax,1),%bl
		inc    %bl
		mov    %bl,0x28(%esp,%eax,1)
		add    $data_f0daa,%edx
		cmp    $0x2,%bl
		jle    jump_30d2f
		xor    %bl,%bl
		mov    %bl,0x28(%esp,%eax,1)
		incb   0x20(%esp,%eax,1)
	jump_30d2f:
		movswl %cx,%eax
		cmpb   $0x23,0x20(%esp,%eax,1)
		jle    jump_30d3f
		xor    %bh,%bh
		mov    %bh,0x20(%esp,%eax,1)
	jump_30d3f:
		movswl %cx,%eax
		mov    0x4(%edx),%esi
		mov    0x8(%edx),%ebx
		sar    $0x10,%esi
		mov    0xe(%esp,%eax,2),%edi
		mov    0x2(%edx),%edx
		sar    $0x10,%edi
		mov    -0x2(%esp,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edi,%esi
		add    %edx,%eax
		mov    %esi,%edx
		call   func_5ee51
	jump_30d6a:
		inc    %ecx
		cmp    $0x7,%cx
		jl     jump_30cfc
	jump_30d71:
		mov    0x48(%esp),%eax
		cmp    0x50(%esp),%ax
		jge    jump_30df6
		mov    0x4a(%esp),%eax
		sar    $0x10,%eax
		add    $0x6,%eax
		imul   $0xc,%eax,%eax
		mov    0x36(%esp),%edx
		add    $data_f0daa,%eax
		sar    $0x10,%edx
		mov    0x4(%eax),%esi
		mov    0x8(%eax),%ebx
		sar    $0x10,%esi
		mov    0x2(%eax),%eax
		add    %esi,%edx
		mov    0x3e(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		mov    0x4c(%esp),%edi
		call   func_5ee51
		cmp    $0x7,%di
		jne    jump_30dcd
		subw   $0x8,0x40(%esp)
		jmp    jump_30e44
	jump_30dcd:
		test   %di,%di
		jne    jump_30dda
		addw   $0x8,0x40(%esp)
		jmp    jump_30e44
	jump_30dda:
		cmp    $0xe,%di
		jne    jump_30de8
		addw   $0x5,0x38(%esp)
		jmp    jump_30e44
	jump_30de8:
		cmp    $0x15,%di
		jne    jump_30e44
		subw   $0x5,0x38(%esp)
		jmp    jump_30e44
	jump_30df6:
		mov    0x46(%esp),%eax
		mov    0x4e(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    $0x5,%edx
		sub    %eax,%edx
		mov    0x4a(%esp),%eax
		sar    $0x10,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x36(%esp),%esi
		add    $data_f0daa,%eax
		sar    $0x10,%esi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %esi,%edx
		mov    0x3e(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		call   func_5ee51
	jump_30e44:
		mov    0x30(%esp),%eax
		inc    %eax
		mov    %eax,0x30(%esp)
		cmp    $0x3,%ax
		jl     jump_30c57
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		mov    $0x5,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_30e78
		mov    $0x32,%eax
		call   func_4f4cd
	jump_30e78:
		mov    0x48(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,0x48(%esp)
	jump_30e8c:
		mov    0x48(%esp),%eax
		cmp    0x54(%esp),%ax
		jl     jump_30c22
		mov    0x4c(%esp),%edi
		cmp    $0x7,%di
		jne    jump_30eae
		mov    0x50(%esp),%al
		sub    %al,0x0(%ebp)
		jmp    jump_30ed8
	jump_30eae:
		test   %di,%di
		jne    jump_30ebc
		mov    0x50(%esp),%al
		add    %al,0x0(%ebp)
		jmp    jump_30ed8
	jump_30ebc:
		cmp    $0xe,%di
		jne    jump_30ecb
		mov    0x50(%esp),%al
		add    %al,0x1(%ebp)
		jmp    jump_30ed8
	jump_30ecb:
		cmp    $0x15,%di
		jne    jump_30ed8
		mov    0x50(%esp),%al
		sub    %al,0x1(%ebp)
	jump_30ed8:
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		call   func_44d75
		xor    %ebx,%ebx
		jmp    jump_30f0c
	jump_30ef0:
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%eax
		orb    $0x1,0x1e(%eax)
		mov    data_f0648(,%edx,4),%eax
		inc    %ebx
		movw   $0x5a,0x1f(%eax)
	jump_30f0c:
		cmp    data_f0b9e,%bx
		jl     jump_30ef0
		mov    $0x2,%ebx
		mov    $0x2710,%edx
		mov    %ebp,%eax
		call   func_2caf7
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_5e9e8
		call   func_499e4
		call   func_103a0
		call   func_1ffcd
		mov    $0x1,%eax
	jump_30f57:
		add    $0x58,%esp
	jump_30f5a:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30f61:
/*----------------------------------------------------------------*/
		push   %edx
		cmpw   $0x1,data_ba838
		je     jump_30f77
		movw   $0x1,data_ba838
		jmp    jump_30f80
	jump_30f77:
		movw   $0xffff,data_ba838
	jump_30f80:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_30f98:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpw   $0x1,data_ba838
		je     jump_30faf
		movw   $0x1,data_ba838
		jmp    jump_30fb8
	jump_30faf:
		movw   $0xffff,data_ba838
	jump_30fb8:
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		xor    %edx,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30fd1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		movswl (%edx),%eax
		mov    data_f0648(,%eax,4),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%edi
		movswl (%edx),%eax
		mov    data_f0648(,%eax,4),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		add    $0xc,%eax
		movswl (%esi),%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_f0daa,%ecx
		shl    $0x2,%eax
		add    %eax,%ecx
		add    $0xc,%edi
		mov    (%esp),%eax
		mov    0x8(%ecx),%ebx
		mov    0x6(%ecx),%dx
		mov    0x4(%ecx),%cx
		add    %edx,%eax
		add    %edi,%ecx
		movswl %ax,%edx
		movswl %cx,%eax
		call   func_5f305
		movswl (%esi),%eax
		lea    0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_f0daa,%ecx
		shl    $0x2,%eax
		add    %eax,%ecx
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0xc9,%eax
		sub    $0x19,%esi
		mov    %eax,0x4(%esp)
	jump_31067:
		mov    0x6(%ecx),%ax
		add    %esi,%eax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %edi,%eax
		mov    0x8(%ecx),%ebx
		cwtl
		sub    $0x10,%esi
		call   func_5f305
		cmp    0x4(%esp),%si
		jne    jump_31067
		jmp    jump_306de


/*----------------------------------------------------------------*/
func_3108e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl (%edx),%eax
		lea    (%ecx,%eax,1),%ebx
		shl    $0x2,%eax
		cmpb   $0x0,(%ebx)
		jne    jump_310ac
		mov    data_f0648(%eax),%eax
		subb   $0x2,0x65(%eax)
		jmp    jump_310d4
	jump_310ac:
		cmpb   $0x1,(%ebx)
		jne    jump_310c5
		mov    data_f0648(%eax),%eax
		addb   $0x4,0x65(%eax)
		movswl (%edx),%eax
		movb   $0x2,(%ecx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret
	jump_310c5:
		cmpb   $0x2,(%ebx)
		jne    jump_310db
		mov    data_f0648(%eax),%eax
		subb   $0x4,0x65(%eax)
	jump_310d4:
		movswl (%edx),%eax
		movb   $0x1,(%ecx,%eax,1)
	jump_310db:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_310de:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    $0xfa00,%eax
		mov    $0xfa00,%ebx
		call   w_dos_malloc
		xor    %edx,%edx
		mov    %eax,(%esp)
		call   w_dos_memset
		xor    %edx,%edx
	jump_31102:
		movswl %dx,%eax
		lea    0x64(%eax),%ecx
		imul   $0x1e0,%ecx,%ecx
		imul   $0x140,%eax,%eax
		mov    data_755cc,%esi
		mov    (%esp),%edi
		add    %ecx,%esi
		add    %eax,%edi
		mov    $0x140,%ecx
		inc    %edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0xc8,%dx
		jl     jump_31102
		xor    %edx,%edx
		mov    %dx,0x8(%esp)
	jump_31145:
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		mov    %ax,0x4(%esp)
		imul   $0x5,%eax,%eax
		mov    $0x17700,%ebx
		mov    %ax,0x4(%esp)
		mov    data_755cc,%eax
		xor    %edx,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
		mov    0x4(%esp),%ebx
		jmp    jump_311d9
	jump_31182:
		mov    $0xc8,%eax
		sub    %ebx,%eax
		shl    $0x3,%eax
		mov    $0x5,%ecx
		cwtd
		idiv   %cx
		movswl %ax,%ecx
		movswl %bx,%eax
		imul   $0x140,%eax,%esi
		add    (%esp),%esi
		mov    0x2(%esp),%edx
		add    $0x64,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		imul   $0x1e0,%eax,%eax
		mov    0x6(%esp),%edi
		mov    data_755cc,%edx
		sar    $0x10,%edi
		add    %edx,%eax
		add    %eax,%edi
		inc    %ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
	jump_311d9:
		cmp    $0xc8,%bx
		jl     jump_31182
		xor    %ebx,%ebx
		jmp    jump_3123e
	jump_311e4:
		mov    %ebx,%eax
		shl    $0x3,%eax
		mov    $0x5,%esi
		cwtd
		idiv   %si
		imul   $0x140,%ecx,%esi
		add    $0x64,%ecx
		add    %edi,%ecx
		imul   $0x1e0,%ecx,%ecx
		mov    (%esp),%ebp
		movswl %ax,%edx
		cwtl
		add    %ebp,%esi
		mov    $0x140,%ebp
		mov    data_755cc,%edi
		sub    %eax,%ebp
		add    %ecx,%edi
		mov    0x6(%esp),%ecx
		mov    %ebp,%eax
		sar    $0x10,%ecx
		add    %ebp,%esi
		sub    %ecx,%eax
		mov    %edx,%ecx
		add    %eax,%edi
		inc    %ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
	jump_3123e:
		mov    0x2(%esp),%edi
		mov    $0xc8,%eax
		sar    $0x10,%edi
		movswl %bx,%ecx
		sub    %edi,%eax
		cmp    %eax,%ecx
		jl     jump_311e4
		mov    0x8(%esp),%ebx
		call   func_5e9e8
		add    $0x8,%ebx
		call   func_499e4
		mov    %bx,0x8(%esp)
		cmp    $0x32,%bx
		jl     jump_31145
		mov    (%esp),%eax
		call   w_dos_free
		add    $0xc,%esp
		jmp    jump_30f5a


/*----------------------------------------------------------------*/
func_31283:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2f8,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    data_ba83e,%cx
		mov    %dx,data_f0b9e
		jmp    jump_312e4
	jump_312a3:
		mov    data_ba83c,%ax
		mov    %ax,0x2cc(%esp)
		jmp    jump_312c9
	jump_312b3:
		mov    0xb(%ebp),%ebx
		movswl %cx,%edx
		sar    $0x18,%ebx
		call   func_1a1f8
		incw   0x2cc(%esp)
	jump_312c9:
		mov    data_ba83a,%edx
		mov    0x2ca(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_312b3
		inc    %ecx
	jump_312e4:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %cx,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_312a3
		cmpw   $0x0,data_f0b9e
		jne    jump_3130a
		mov    $0xffffffff,%ebx
		jmp    jump_3257c
	jump_3130a:
		mov    $0x32,%ecx
		xor    %eax,%eax
		mov    %ecx,0x2b8(%esp)
	jump_31318:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x228(%esp,%edx,1)
		cmp    $0x32,%ax
		jl     jump_31318
		movsbw 0x63(%ebp),%ax
		mov    $0x50,%edx
		mov    %ax,0x2d0(%esp)
		mov    $0x1,%eax
		call   func_61147
		call   func_103a8
		mov    $data_77a41,%eax
		mov    %ebp,%ebx
		call   func_1fea4
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		xor    %ecx,%ecx
		call   func_11ee4
		movb   $0x0,0x63(%ebp)
		jmp    jump_31384
	jump_3136d:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		inc    %ecx
		call   func_11ee4
	jump_31384:
		cmp    data_f0b9e,%cx
		jl     jump_3136d
		mov    $0x5,%eax
		call   func_1033b
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		call   func_454b3
		jmp    jump_313d7
	jump_313c7:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		inc    %ebx
	jump_313d7:
		cmp    data_f0b9e,%bx
		jl     jump_313c7
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		movl   $0x1,0x2a0(%esp)
		movsbw 0x0(%ebp),%ax
		mov    %ax,0x29c(%esp)
		movsbw 0x1(%ebp),%ax
		xor    %ebx,%ebx
		mov    %ax,0x2e0(%esp)
		jmp    jump_3143a
	jump_3141a:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%edx
		movsbw (%edx),%cx
		mov    %cx,(%esp,%eax,2)
		movsbw 0x1(%edx),%dx
		inc    %ebx
		mov    %dx,0x12c(%esp,%eax,2)
	jump_3143a:
		cmp    data_f0b9e,%bx
		jl     jump_3141a
		xor    %ebx,%ebx
		mov    %bx,0x2ec(%esp)
	jump_3144d:
		xor    %edi,%edi
		call   func_30f61
		mov    %di,0x294(%esp)
		jmp    jump_3147c
	jump_3145e:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x294(%esp)
	jump_3147c:
		mov    0x294(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_3145e
		mov    %ebp,%eax
		mov    0x2ec(%esp),%ebx
		call   func_12f2a
		cmp    $0x64,%bx
		jge    jump_3158d
		mov    0x2ea(%esp),%edx
		sar    $0x10,%edx
		mov    $0x9,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x8,%edx
		jne    jump_314c6
		incl   0x2a0(%esp)
	jump_314c6:
		xor    %edi,%edi
		mov    %di,0x2cc(%esp)
		jmp    jump_31576
	jump_314d5:
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x0,0x228(%esp,%eax,1)
		jne    jump_3156e
		movb   $0x1,0x228(%esp,%eax,1)
		mov    $0x5,%eax
		call   func_499bd
		mov    %al,%dl
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		add    $0x2,%dl
		mov    %dl,0x25c(%esp,%eax,1)
		mov    0x2a0(%esp),%edx
		mov    %dx,0xc8(%esp,%eax,2)
		mov    $0x3,%eax
		call   func_499bd
		mov    %al,%dl
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		add    $0x10,%dl
		mov    %dl,0x1f4(%esp,%eax,1)
		mov    $0x19,%eax
		call   func_499bd
		mov    %eax,%edx
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		mov    %dx,0x64(%esp,%eax,2)
		mov    %di,0x190(%esp,%eax,2)
		jmp    jump_315f5
	jump_3156e:
		incw   0x2cc(%esp)
	jump_31576:
		mov    0x2cc(%esp),%eax
		cmp    0x2b8(%esp),%ax
		jl     jump_314d5
		jmp    jump_315f5
	jump_3158d:
		xor    %ecx,%ecx
		mov    %cx,0x294(%esp)
		jmp    jump_315d4
	jump_31599:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		test   %ax,%ax
		jle    jump_315cc
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		decb   0x1(%eax)
	jump_315cc:
		incw   0x294(%esp)
	jump_315d4:
		mov    0x294(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_31599
		movsbl 0x1(%ebp),%eax
		call   func_10988
		test   %ax,%ax
		jle    jump_315f5
		decb   0x1(%ebp)
	jump_315f5:
		xor    %eax,%eax
		mov    %ax,0x2cc(%esp)
		jmp    jump_317f7
	jump_31604:
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x1,0x228(%esp,%eax,1)
		jne    jump_317ef
		mov    0x29a(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		mov    %eax,%esi
		mov    0x2de(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%edx
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    0x18e(%esp,%eax,2),%ebx
		sar    $0x10,%ebx
		add    $0xc,%edx
		cmp    $0xffffff6a,%ebx
		jge    jump_31666
		xor    %bl,%bl
		mov    %bl,0x228(%esp,%eax,1)
	jump_31666:
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    0x1f1(%esp,%eax,1),%eax
		sar    $0x18,%eax
		call   func_5eb4a
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    0x18e(%esp,%eax,1),%ebx
		mov    0xc6(%esp,%eax,1),%ecx
		sar    $0x10,%ebx
		sar    $0x10,%ecx
		add    %ebx,%ecx
		test   %ecx,%ecx
		jle    jump_316c5
		movswl %dx,%ecx
		mov    0x64(%esp,%eax,1),%di
		mov    0x190(%esp,%eax,1),%bx
		add    %edi,%esi
		add    %ebx,%edx
		movswl %si,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		mov    %esi,%eax
		jmp    jump_316f3
	jump_316c5:
		movswl %dx,%ecx
		add    %ecx,%ebx
		cmp    $0x4,%ebx
		jl     jump_316f8
		mov    0x190(%esp,%eax,1),%di
		mov    0xc8(%esp,%eax,1),%bx
		add    %edi,%edx
		add    %edx,%ebx
		movswl %bx,%ecx
		add    0x64(%esp,%eax,1),%si
		movswl %si,%eax
		movswl %dx,%edx
		mov    %eax,%ebx
	jump_316f3:
		call   func_5eb58
	jump_316f8:
		xor    %ecx,%ecx
		mov    %cx,0x294(%esp)
		jmp    jump_317be
	jump_31707:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    -0x2(%esp,%eax,2),%eax
		sar    $0x10,%eax
		call   func_10971
		mov    %eax,%ebx
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    0x12a(%esp,%eax,2),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%edx
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    0x18e(%esp,%eax,1),%ecx
		mov    0xc6(%esp,%eax,1),%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		add    %ecx,%esi
		add    $0xc,%edx
		test   %esi,%esi
		jle    jump_31781
		add    0x64(%esp,%eax,1),%bx
		movswl %bx,%esi
		mov    0x190(%esp,%eax,1),%bx
		movswl %dx,%ecx
		add    %ebx,%edx
		mov    %esi,%eax
		movswl %dx,%edx
		mov    %esi,%ebx
		jmp    jump_317b1
	jump_31781:
		movswl %dx,%esi
		add    %esi,%ecx
		cmp    $0x4,%ecx
		jl     jump_317b6
		mov    0x190(%esp,%eax,1),%cx
		mov    0x64(%esp,%eax,1),%si
		add    %ecx,%edx
		mov    0xc8(%esp,%eax,1),%cx
		add    %esi,%ebx
		add    %edx,%ecx
		movswl %bx,%eax
		movswl %cx,%ecx
		movswl %dx,%edx
		mov    %eax,%ebx
	jump_317b1:
		call   func_5eb58
	jump_317b6:
		incw   0x294(%esp)
	jump_317be:
		mov    0x294(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_31707
		mov    0x2ca(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		movsbw 0x25c(%esp,%edx,1),%dx
		sub    %dx,0x190(%esp,%eax,2)
	jump_317ef:
		incw   0x2cc(%esp)
	jump_317f7:
		mov    0x2cc(%esp),%eax
		cmp    0x2b8(%esp),%ax
		jl     jump_31604
		cmpw   $0x64,0x2ec(%esp)
		jle    jump_31861
		xor    %ecx,%ecx
		mov    0x2b8(%esp),%esi
		mov    %cx,0x294(%esp)
		jmp    jump_31846
	jump_3182a:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x1,0x228(%esp,%eax,1)
		je     jump_31850
		incw   0x294(%esp)
	jump_31846:
		cmp    0x294(%esp),%si
		jg     jump_3182a
	jump_31850:
		mov    0x294(%esp),%eax
		cmp    0x2b8(%esp),%ax
		je     jump_318a0
	jump_31861:
		incw   0x2ec(%esp)
		call   func_5e9e8
		mov    0x2ea(%esp),%edx
		call   func_499e4
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_3144d
		mov    $0x34,%eax
		call   func_4f4cd
		jmp    jump_3144d
	jump_318a0:
		mov    0x29c(%esp),%al
		mov    %al,0x0(%ebp)
		mov    0x2e0(%esp),%al
		xor    %ebx,%ebx
		mov    %al,0x1(%ebp)
		jmp    jump_318db
	jump_318b8:
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%esi
		mov    (%esp,%edx,2),%cl
		mov    %cl,(%esi)
		mov    %edx,%eax
		mov    data_f0648(,%edx,4),%edx
		mov    0x12c(%esp,%eax,2),%al
		inc    %ebx
		mov    %al,0x1(%edx)
	jump_318db:
		cmp    data_f0b9e,%bx
		jl     jump_318b8
		mov    $0x1,%eax
		mov    $0x32,%esi
		call   func_1033b
	jump_318f3:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		sub    $0x4,%esi
		call   func_499e4
		test   %si,%si
		jge    jump_318f3
		call   func_30f98
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,0x2f4(%esp)
		mov    %si,0x2cc(%esp)
		jmp    jump_3194c
	jump_3192e:
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_3194c:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_3192e
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		xor    %esi,%esi
	jump_3196f:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		add    $0x4,%esi
		call   func_499e4
		cmp    $0x64,%si
		jle    jump_3196f
		mov    $0x5,%eax
		call   func_1033b
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xb,%eax
		mov    $0x3,%edx
		mov    %ax,0x2e4(%esp)
		movsbl 0x1(%ebp),%eax
		xor    %ebx,%ebx
		call   func_10988
		add    $0xe,%eax
		movb   $0x9,0x64(%ebp)
		mov    %ax,0x2dc(%esp)
		mov    %edx,0x2c4(%esp)
		mov    %bx,0x2cc(%esp)
		jmp    jump_31a45
	jump_319e3:
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		mov    $0x6,%eax
		call   func_499bd
		mov    0x2cc(%esp),%edi
		imul   $0x64,%edi,%ebx
		mov    %al,%dl
		mov    0x2ca(%esp),%eax
		add    $0xf,%dl
		sar    $0x10,%eax
		xor    %ch,%ch
		mov    %dl,0x25c(%esp,%eax,1)
		add    $0xc8,%ebx
		mov    %ch,0x1f4(%esp,%eax,1)
		mov    %bx,0xc8(%esp,%eax,2)
		mov    %edi,%eax
		inc    %eax
		mov    %ax,0x2cc(%esp)
	jump_31a45:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_319e3
		xor    %esi,%esi
		mov    %esi,0x2f0(%esp)
	jump_31a5e:
		mov    0x2f0(%esp),%eax
		cmp    data_f0b9e,%ax
		jge    jump_31d6d
		mov    data_f0b9e,%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,0x2f0(%esp)
		jmp    jump_31a9c
	jump_31a86:
		movswl %ax,%edx
		cmpw   $0x0,0xc8(%esp,%edx,2)
		jne    jump_31a9b
		incl   0x2f0(%esp)
	jump_31a9b:
		inc    %eax
	jump_31a9c:
		cmp    %bx,%ax
		jl     jump_31a86
		mov    $0x33,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
		mov    %cx,0x2e8(%esp)
	jump_31ab5:
		mov    0x2c4(%esp),%ebx
		add    $0x2,%ebx
		mov    %ebx,0x2c4(%esp)
		cmp    $0x8,%bx
		jle    jump_31ad7
		movl   $0x3,0x2c4(%esp)
	jump_31ad7:
		xor    %edi,%edi
		mov    %di,0x2cc(%esp)
		jmp    jump_31d35
	jump_31ae6:
		xor    %edx,%edx
		call   func_30f98
		mov    %dx,0x294(%esp)
		jmp    jump_31cb8
	jump_31afa:
		mov    0x292(%esp),%edx
		sar    $0x10,%edx
		lea    (%edx,%edx,1),%eax
		movsbw 0x25c(%esp,%edx,1),%dx
		mov    0xc8(%esp,%eax,1),%di
		sub    %edx,%edi
		mov    %di,0xc8(%esp,%eax,1)
		test   %di,%di
		jge    jump_31b31
		xor    %ebx,%ebx
		mov    %bx,0xc8(%esp,%eax,1)
	jump_31b31:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%ecx
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		mov    data_f0648(,%eax,4),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    %eax,%ebx
		mov    0x292(%esp),%eax
		add    $0xf,%ecx
		sar    $0x10,%eax
		mov    0xc8(%esp,%edx,2),%si
		mov    0xc8(%esp,%eax,2),%di
		sub    %esi,%ebx
		test   %di,%di
		jne    jump_31c79
		lea    0x294(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    0x25c(%esp,%eax,1),%dl
		cmp    $0x64,%dl
		jge    jump_31bc8
		movb   $0x64,0x25c(%esp,%eax,1)
		jmp    jump_31c9a
	jump_31bc8:
		mov    %ebx,%esi
		add    $0xa,%esi
		cmp    $0x67,%dl
		jge    jump_31c3e
		add    data_f0e7c,%bx
		movswl %bx,%edx
		mov    data_f0e7a,%bx
		add    %ecx,%ebx
		mov    data_f0e7e,%eax
		movswl %bx,%edi
		mov    %eax,%ebx
		mov    %edi,%eax
	jump_31bf1:
		call   func_5f305
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    0x259(%esp,%eax,1),%eax
		sar    $0x18,%eax
		sub    $0x51,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		add    0x6(%eax),%si
		movswl %si,%edx
		add    0x4(%eax),%cx
		mov    0x8(%eax),%ebx
		movswl %cx,%eax
		call   func_5f305
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		incb   0x25c(%esp,%eax,1)
		jmp    jump_31c9a
	jump_31c3e:
		cmp    $0x68,%dl
		jge    jump_31c64
		mov    data_f0e8a,%edx
		mov    data_f0e88,%di
		mov    data_f0e86,%ax
		add    %edi,%ebx
		add    %ecx,%eax
		movswl %bx,%edi
		cwtl
		mov    %edx,%ebx
		mov    %edi,%edx
		jmp    jump_31bf1
	jump_31c64:
		lea    0x294(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		jmp    jump_31c9a
	jump_31c79:
		add    data_f0e70,%bx
		movswl %bx,%edx
		add    data_f0e6e,%cx
		mov    data_f0e72,%esi
		movswl %cx,%eax
		mov    %esi,%ebx
		call   func_5f305
	jump_31c9a:
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x294(%esp)
	jump_31cb8:
		mov    0x294(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_31afa
		cmpw   $0x3,0x2e8(%esp)
		jne    jump_31cde
		mov    $data_f0daa,%eax
		jmp    jump_31cf0
	jump_31cde:
		mov    0x2e6(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
	jump_31cf0:
		mov    0x2da(%esp),%ecx
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		mov    0x2e2(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5ee51
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		incw   0x2cc(%esp)
	jump_31d35:
		cmpw   $0x3,0x2cc(%esp)
		jl     jump_31ae6
		mov    0x2e8(%esp),%eax
		inc    %eax
		mov    %ax,0x2e8(%esp)
		cmp    $0x4,%ax
		jl     jump_31ab5
		mov    $0x34,%eax
		call   func_4f4cd
		jmp    jump_31a5e
	jump_31d6d:
		xor    %eax,%eax
		mov    %eax,0x2c8(%esp)
	jump_31d76:
		xor    %edi,%edi
	jump_31d78:
		mov    0x2c4(%esp),%ecx
		add    $0x2,%ecx
		mov    %ecx,0x2c4(%esp)
		cmp    $0x8,%cx
		jle    jump_31d9a
		movl   $0x3,0x2c4(%esp)
	jump_31d9a:
		cmp    $0x3,%di
		jne    jump_31da7
		mov    $data_f0daa,%esi
		jmp    jump_31db3
	jump_31da7:
		movswl %di,%esi
		imul   $0xc,%esi,%esi
		add    $data_f0daa,%esi
	jump_31db3:
		xor    %edx,%edx
		mov    %dx,0x2cc(%esp)
		jmp    jump_31e6c
	jump_31dc2:
		xor    %ecx,%ecx
		call   func_30f98
		mov    %cx,0x294(%esp)
		jmp    jump_31e17
	jump_31dd3:
		lea    0x294(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x294(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x292(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x294(%esp)
	jump_31e17:
		mov    0x294(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_31dd3
		mov    0x4(%esi),%edx
		mov    0x2da(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x2(%esi),%ecx
		add    %eax,%edx
		mov    0x2e2(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    0x8(%esi),%ebx
		add    %ecx,%eax
		call   func_5ee51
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		incw   0x2cc(%esp)
	jump_31e6c:
		cmpw   $0x3,0x2cc(%esp)
		jl     jump_31dc2
		inc    %edi
		cmp    $0x4,%di
		jl     jump_31d78
		mov    $0x34,%eax
		call   func_4f4cd
		mov    0x2c8(%esp),%eax
		inc    %eax
		mov    %eax,0x2c8(%esp)
		cmp    $0x3,%ax
		jl     jump_31d76
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    $0x3,%edi
		mov    %ax,0x2b0(%esp)
		movsbl 0x1(%ebp),%eax
		xor    %ebx,%ebx
		call   func_10988
		add    $0x16,%eax
		mov    %ebx,0x2a4(%esp)
		mov    %ax,0x2d8(%esp)
	jump_31ee3:
		mov    $0x9,%esi
	jump_31ee8:
		mov    0x2c4(%esp),%edx
		add    $0x2,%edx
		mov    %edx,0x2c4(%esp)
		cmp    $0x8,%dx
		jle    jump_31f06
		mov    %edi,0x2c4(%esp)
	jump_31f06:
		xor    %ecx,%ecx
		mov    %cx,0x294(%esp)
		jmp    jump_31fca
	jump_31f15:
		xor    %edx,%edx
		call   func_30f98
		mov    %dx,0x2cc(%esp)
		jmp    jump_31f6a
	jump_31f26:
		lea    0x2cc(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x2cc(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_31f6a:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_31f26
		movswl %si,%eax
		imul   $0xc,%eax,%eax
		mov    0x2d6(%esp),%ecx
		add    $data_f0daa,%eax
		sar    $0x10,%ecx
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		mov    0x2ae(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5f29d
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		incw   0x294(%esp)
	jump_31fca:
		cmp    0x294(%esp),%di
		jg     jump_31f15
		inc    %esi
		cmp    $0xb,%si
		jle    jump_31ee8
		mov    0x2a4(%esp),%esi
		mov    $0x34,%eax
		inc    %esi
		call   func_4f4cd
		mov    %esi,0x2a4(%esp)
		cmp    $0x6,%si
		jl     jump_31ee3
		movb   $0x7,0x64(%ebp)
		movsbw 0x1(%ebp),%ax
		xor    %esi,%esi
		mov    %ax,0x2e0(%esp)
	jump_32019:
		test   %si,%si
		jne    jump_320c1
		mov    0x1(%ebp),%cl
		dec    %cl
		movsbl %cl,%eax
		mov    %cl,0x1(%ebp)
		call   func_10988
		test   %ax,%ax
		jge    jump_3203c
		mov    $0x1,%esi
	jump_3203c:
		call   func_30f98
		xor    %eax,%eax
		mov    %ax,0x2cc(%esp)
		jmp    jump_32091
	jump_3204d:
		lea    0x2cc(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x2cc(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_32091:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_3204d
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		mov    $0x34,%eax
		call   func_4f4cd
		jmp    jump_32019
	jump_320c1:
		mov    $data_d66a8,%esi
		mov    $0x12c,%ebx
		mov    0x5d(%ebp),%edx
		xor    %eax,%eax
		sar    $0x18,%edx
		mov    %eax,0x298(%esp)
		mov    %edx,%eax
		mov    $0x1e,%ecx
		shl    $0x3,%eax
		mov    $0x14,%edi
		add    %edx,%eax
		mov    %bx,0x2c0(%esp)
		shl    $0x4,%eax
		mov    %ecx,0x2ac(%esp)
		sub    %edx,%eax
		mov    %edi,0x2a8(%esp)
		shl    $0x2,%eax
		xor    %edx,%edx
		add    %eax,%esi
		mov    %edx,0x2d4(%esp)
		add    $0xd0,%esi
		jmp    jump_322a9
	jump_3211f:
		xor    %ecx,%ecx
		call   func_30f98
		mov    %cx,0x2cc(%esp)
		jmp    jump_32174
	jump_32130:
		lea    0x2cc(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x2cc(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_32174:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_32130
		mov    0x2d4(%esp),%eax
		test   %ax,%ax
		jle    jump_32232
		cmp    $0x6,%ax
		jge    jump_321a7
		movl   $0x6,0x2bc(%esp)
		jmp    jump_321ae
	jump_321a7:
		mov    %eax,0x2bc(%esp)
	jump_321ae:
		mov    $0x2f,%ecx
		mov    $0x5,%edi
		mov    %cx,0x2b4(%esp)
	jump_321c0:
		decl   0x2bc(%esp)
		mov    0x2b2(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x290(%esp)
		mov    0x2bc(%esp),%eax
		imul   %edi,%eax
		mov    %eax,%edx
		add    %eax,%edx
		imul   $0x3,%eax,%eax
		mov    0x298(%esp),%ecx
		sub    %edx,%ecx
		movsbw 0x5(%esi),%dx
		add    %ecx,%edx
		mov    0x2c0(%esp),%ecx
		mov    0x9(%esi),%ebx
		add    %ecx,%eax
		movsbw 0x4(%esi),%cx
		movswl %dx,%edx
		add    %ecx,%eax
		mov    0x290(%esp),%ecx
		cwtl
		call   func_5f517
		mov    0x2b4(%esp),%eax
		dec    %eax
		dec    %edi
		mov    %ax,0x2b4(%esp)
		test   %di,%di
		jge    jump_321c0
	jump_32232:
		mov    0x298(%esp),%edx
		movsbw 0x5(%esi),%ax
		add    %edx,%eax
		mov    0x2c0(%esp),%ecx
		movswl %ax,%edx
		movsbw 0x4(%esi),%ax
		add    %ecx,%eax
		mov    0x9(%esi),%ebx
		cwtl
		mov    0x2d4(%esp),%edi
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    0x2a8(%esp),%eax
		mov    0x298(%esp),%edx
		inc    %edi
		add    %eax,%edx
		mov    %edi,0x2d4(%esp)
		mov    %edx,0x298(%esp)
		cmp    $0x64,%cx
		jle    jump_3229a
		mov    $0x34,%eax
		call   func_4f4cd
	jump_3229a:
		mov    0x2ac(%esp),%eax
		sub    %ax,0x2c0(%esp)
	jump_322a9:
		mov    0x2be(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffff9c,%eax
		jge    jump_3211f
		mov    $0x35,%eax
		mov    $0xc,%edi
		call   func_4f4cd
	jump_322cb:
		xor    %eax,%eax
		mov    %ax,0x294(%esp)
		jmp    jump_32394
	jump_322da:
		cmp    $0xd,%di
		je     jump_32347
		xor    %ebx,%ebx
		call   func_30f98
		mov    %bx,0x2cc(%esp)
		jmp    jump_32335
	jump_322f1:
		lea    0x2cc(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x2cc(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_32335:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_322f1
		jmp    jump_32360
	jump_32347:
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		mov    $0x1,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
	jump_32360:
		movswl %di,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    $0x61,%edx
		sar    $0x10,%eax
		call   func_5f29d
		call   func_5e9e8
		call   func_499e4
		incw   0x294(%esp)
	jump_32394:
		cmpw   $0x3,0x294(%esp)
		jl     jump_322da
		inc    %edi
		cmp    $0xf,%di
		jle    jump_322cb
		mov    0x2e0(%esp),%al
		mov    0x2f1(%esp),%edx
		mov    %al,0x1(%ebp)
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		sar    $0x18,%edx
		add    $0xbb80,%eax
		xor    %esi,%esi
		call   w_dos_memset
		mov    %si,0x2cc(%esp)
		jmp    jump_32426
	jump_323e2:
		lea    0x2cc(%esp),%edx
		lea    0x2c4(%esp),%eax
		call   func_30fd1
		lea    0x2cc(%esp),%edx
		lea    0x1f4(%esp),%eax
		call   func_3108e
		mov    0x2ca(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		incw   0x2cc(%esp)
	jump_32426:
		mov    0x2cc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_323e2
		call   func_5e9e8
		call   func_499e4
		call   func_1ffcd
		call   func_310de
		mov    $0x1,%eax
		mov    $0x64,%esi
		call   func_1033b
	jump_32459:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		sub    $0x4,%esi
		call   func_499e4
		test   %si,%si
		jge    jump_32459
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
		jmp    jump_324a4
	jump_32494:
		movswl %si,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12f2a
		inc    %esi
	jump_324a4:
		cmp    data_f0b9e,%si
		jl     jump_32494
		mov    %ebp,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		xor    %esi,%esi
	jump_324c0:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		add    $0x4,%esi
		call   func_499e4
		cmp    $0x64,%si
		jle    jump_324c0
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %esi,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		call   func_44d6e
		mov    %si,data_ba838
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		movb   $0x4,0x64(%ebp)
		jmp    jump_32527
	jump_32515:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		inc    %ecx
	jump_32527:
		call   func_11e04
		cmp    data_f0b9e,%cx
		jl     jump_32515
		mov    0x2d0(%esp),%al
		xor    %ebx,%ebx
		mov    %al,0x63(%ebp)
		jmp    jump_32553
	jump_32543:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %ebx
	jump_32553:
		cmp    data_f0b9e,%bx
		jl     jump_32543
		mov    $0xa,%ebx
		mov    $0x3e8,%edx
		mov    %ebp,%eax
		call   func_2caf7
		call   func_103a0
		call   func_61115
		mov    $0x1,%ebx
	jump_3257c:
		mov    %ebx,%eax
		add    $0x2f8,%esp
		jmp    jump_30f5a


/*----------------------------------------------------------------*/
func_32589:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		movsbw (%eax),%ax
		mov    %ax,0x8(%esp)
		mov    $0x7,%edx
		movsbw 0x1(%esi),%ax
		mov    %dx,0x1c(%esp)
		mov    %ax,0xc(%esp)
		lea    0xc(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0xa(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		cmp    $0x1,%ax
		je     jump_325f6
		mov    $0xffffffff,%eax
		jmp    jump_32bc3
	jump_325f6:
		mov    $data_77a4c,%eax
		call   func_1fea4
		call   func_103a8
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    data_f0648,%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11ee4
		mov    0x63(%esi),%ah
		test   %ah,%ah
		jne    jump_32635
		xor    %edx,%edx
		mov    %dx,0x18(%esp)
		jmp    jump_3265d
	jump_32635:
		cmp    $0x2,%ah
		jne    jump_32643
		movw   $0xa,0x18(%esp)
		jmp    jump_3265d
	jump_32643:
		cmp    $0x3,%ah
		jne    jump_32651
		movw   $0x14,0x18(%esp)
		jmp    jump_3265d
	jump_32651:
		cmp    $0x1,%ah
		jne    jump_3265d
		movw   $0x1e,0x18(%esp)
	jump_3265d:
		mov    $0x1,%eax
		mov    $0xa,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		mov    $0x5,%eax
		call   func_1033b
		movsbl (%esi),%eax
		call   func_10971
		add    $0xb,%eax
		mov    %ax,0x20(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    $data_f0daa,%ebp
		mov    %ax,0x4(%esp)
		mov    $0x32,%eax
		xor    %ebx,%ebx
		call   func_4f4cd
		mov    %bx,0x8(%esp)
		mov    $0x3,%edi
		jmp    jump_32769
	jump_326c0:
		mov    $0x6,%edx
		xor    %eax,%eax
		call   func_30824
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
		jmp    jump_32759
	jump_326d8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpb   $0x0,0x63(%esi)
		je     jump_326fe
		mov    data_f0648,%eax
		call   func_12f2a
	jump_326fe:
		mov    0x6(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x8(%eax,%ebp,1),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax,%ebp,1),%eax
		add    %ecx,%edx
		mov    0x1e(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5ee51
		cmpb   $0x0,0x63(%esi)
		jne    jump_3274a
		mov    data_f0648,%eax
		call   func_12f2a
	jump_3274a:
		call   func_5e9e8
		call   func_499e4
		incw   0xc(%esp)
	jump_32759:
		cmp    0xc(%esp),%di
		jg     jump_326d8
		incw   0x8(%esp)
	jump_32769:
		cmpw   $0x8,0x8(%esp)
		jle    jump_326c0
		mov    $0x28,%edi
		mov    $data_f0daa,%ebp
		jmp    jump_3288c
	jump_32784:
		xor    %edx,%edx
		mov    %dx,0xc(%esp)
		jmp    jump_32864
	jump_32790:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpb   $0x0,0x63(%esi)
		je     jump_327b6
		mov    data_f0648,%eax
		call   func_12f2a
	jump_327b6:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x2(%esp),%ecx
		mov    0x1e(%esp),%edi
		sar    $0x10,%ecx
		sar    $0x10,%edi
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
		mov    0x1a(%esp),%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
		cmpw   $0x2c,0x8(%esp)
		jle    jump_32845
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
	jump_32845:
		cmpb   $0x0,0x63(%esi)
		jne    jump_32855
		mov    data_f0648,%eax
		call   func_12f2a
	jump_32855:
		call   func_5e9e8
		call   func_499e4
		incw   0xc(%esp)
	jump_32864:
		cmpw   $0x3,0xc(%esp)
		jl     jump_32790
		cmpw   $0x7,0x1c(%esp)
		sete   %al
		xor    %ah,%ah
		mov    0x8(%esp),%edi
		add    $0x7,%eax
		add    $0x2,%edi
		mov    %ax,0x1c(%esp)
	jump_3288c:
		mov    %di,0x8(%esp)
		cmpw   $0x30,0x8(%esp)
		jle    jump_32784
		xor    %eax,%eax
		mov    $data_f0daa,%ebp
		mov    %eax,0x10(%esp)
	jump_328a8:
		movw   $0x32,0x8(%esp)
		jmp    jump_329b9
	jump_328b4:
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
		jmp    jump_3298c
	jump_328c0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpb   $0x0,0x63(%esi)
		je     jump_328e6
		mov    data_f0648,%eax
		call   func_12f2a
	jump_328e6:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x2(%esp),%ecx
		mov    0x1e(%esp),%edi
		sar    $0x10,%ecx
		sar    $0x10,%edi
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
		mov    0x1a(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x4(%eax,%ebp,1),%edx
		mov    0x2(%eax,%ebp,1),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		add    %edi,%eax
		call   func_5ee51
		cmpb   $0x0,0x63(%esi)
		jne    jump_3297d
		mov    data_f0648,%eax
		call   func_12f2a
	jump_3297d:
		call   func_5e9e8
		call   func_499e4
		incw   0xc(%esp)
	jump_3298c:
		cmpw   $0x3,0xc(%esp)
		jl     jump_328c0
		cmpw   $0x7,0x1c(%esp)
		sete   %al
		xor    %ah,%ah
		mov    0x8(%esp),%ecx
		add    $0x7,%eax
		add    $0x2,%ecx
		mov    %ax,0x1c(%esp)
		mov    %cx,0x8(%esp)
	jump_329b9:
		cmpw   $0x36,0x8(%esp)
		jle    jump_328b4
		mov    0x10(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x10(%esp)
		cmp    $0x5,%bx
		jl     jump_328a8
		xor    %edi,%edi
		mov    %di,0x8(%esp)
		jmp    jump_32a09
	jump_329e1:
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		mov    $0x1,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
		call   func_5e9e8
		call   func_499e4
		incw   0x8(%esp)
	jump_32a09:
		cmpw   $0x6,0x8(%esp)
		jl     jump_329e1
		mov    data_f0648,%edx
		mov    0x5d(%edx),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%ebp
		sub    %ebx,%eax
		mov    0x60(%edx),%ebx
		shl    $0x2,%eax
		sar    $0x18,%ebx
		add    %eax,%ebp
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		sub    %ebx,%eax
		add    %eax,%ebp
		movsbl (%edx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		mov    data_f0648,%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0xc(%esp)
		mov    $0x33,%eax
		call   func_4f4cd
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		lea    0x9(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    $data_f0daa,%edi
		sub    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x2,%eax
		mov    %ebx,0x14(%esp)
		add    %eax,%edi
	jump_32a9a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpb   $0x0,0x63(%esi)
		jne    jump_32ae2
		mov    0x4(%edi),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%eax
		mov    %eax,(%esp)
		mov    0x1e(%esp),%eax
		mov    (%esp),%ecx
		sar    $0x10,%eax
		mov    0x8(%edi),%ebx
		add    %ecx,%eax
		call   func_5ee51
	jump_32ae2:
		mov    0xc(%esp),%ecx
		movsbw 0x5(%ebp),%ax
		add    %ecx,%eax
		mov    0x8(%esp),%ecx
		movswl %ax,%edx
		movsbw 0x4(%ebp),%ax
		add    %ecx,%eax
		mov    0x9(%ebp),%ebx
		sub    $0x4,%eax
		mov    $0xc,%ecx
		cwtl
		call   func_5f42d
		mov    0xc(%esp),%edx
		movsbw 0x5(%ebp),%ax
		add    %edx,%eax
		mov    0x8(%esp),%ecx
		movswl %ax,%edx
		movsbw 0x4(%ebp),%ax
		add    %ecx,%eax
		mov    0x9(%ebp),%ebx
		add    $0x4,%eax
		mov    $0xc,%ecx
		cwtl
		call   func_5f4af
		cmpb   $0x0,0x63(%esi)
		je     jump_32b64
		mov    0x4(%edi),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x1e(%esp),%ecx
		add    %eax,%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    0x8(%edi),%ebx
		add    %ecx,%eax
		call   func_5ee51
	jump_32b64:
		call   func_5e9e8
		call   func_499e4
		mov    0x14(%esp),%eax
		inc    %eax
		mov    %eax,0x14(%esp)
		cmp    $0x24,%ax
		jl     jump_32a9a
		mov    $data_12824c,%ebx
		xor    %eax,%eax
		mov    $0x100,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_5f9ae
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    data_f0648,%edx
		mov    %esi,%eax
		call   func_1db1d
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%eax
	jump_32bc3:
		add    $0x24,%esp
		jmp    jump_30f5a


/*----------------------------------------------------------------*/
func_32bcb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x5c8,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    data_ba83e,%si
		mov    %dx,data_f0b9e
		jmp    jump_32c21
	jump_32beb:
		mov    data_ba83c,%cx
		jmp    jump_32c03
	jump_32bf4:
		mov    0xb(%ebp),%ebx
		movswl %si,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_1a1f8
	jump_32c03:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_32bf4
		cmpw   $0x32,data_f0b9e
		jge    jump_32c34
		inc    %esi
	jump_32c21:
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		movswl %si,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_32beb
	jump_32c34:
		cmpw   $0x0,data_f0b9e
		jne    jump_32c48
		mov    $0xffffffff,%ebx
		jmp    jump_33a20
	jump_32c48:
		mov    $0x46,%edx
		mov    $0x1f,%eax
		call   func_61147
		xor    %eax,%eax
	jump_32c59:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x528(%esp,%edx,1)
		cmp    $0x3c,%ax
		jl     jump_32c59
		xor    %bh,%bh
	jump_32c6e:
		mov    $0x64,%eax
		movswl %bx,%edx
		call   w_dos_malloc
		mov    %eax,0x2d0(%esp,%edx,4)
		mov    $0x64,%eax
		inc    %ebx
		call   w_dos_malloc
		mov    %eax,0x1e0(%esp,%edx,4)
		cmp    $0x3c,%bx
		jl     jump_32c6e
		mov    $data_77a57,%eax
		call   func_1fea4
		call   func_103a8
		mov    %ebp,%ebx
		movsbw 0x63(%ebp),%ax
		movsbl 0x1(%ebp),%edx
		mov    %ax,0x5ac(%esp)
		movsbl 0x0(%ebp),%eax
		movb   $0x0,0x63(%ebp)
		call   func_11ee4
		xor    %edx,%edx
		jmp    jump_32cdd
	jump_32ccd:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_32cdd:
		cmp    data_f0b9e,%dx
		jl     jump_32ccd
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		movsbl 0x0(%ebp),%eax
		movb   $0x8,0x64(%ebp)
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x574(%esp)
		movsbl 0x1(%ebp),%eax
		xor    %ecx,%ecx
		call   func_10988
		mov    %eax,%esi
		mov    $0xc,%eax
		sub    $0x2,%esi
		call   func_1033b
	jump_32d30:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebp,%eax
		call   func_12f2a
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		mov    %edx,0x564(%esp)
		movswl %si,%edx
		mov    0x564(%esp),%edi
		sub    $0x20,%edx
		mov    0x2(%eax),%eax
		add    %edi,%edx
		mov    0x572(%esp),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		inc    %ecx
		add    %edi,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x6,%cx
		jle    jump_32d30
		mov    $0x5,%ecx
	jump_32da4:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		test   %cx,%cx
		jne    jump_32dd8
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		mov    $0x1,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
	jump_32dd8:
		movswl %cx,%edi
		imul   $0xc,%edi,%edi
		mov    %ebp,%eax
		call   func_12f2a
		movswl %si,%eax
		add    $data_f0daa,%edi
		mov    0x4(%edi),%edx
		sub    $0x20,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%eax
		mov    %eax,0x564(%esp)
		mov    0x572(%esp),%eax
		sar    $0x10,%eax
		dec    %ecx
		add    0x564(%esp),%eax
		mov    0x8(%edi),%ebx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		test   %cx,%cx
		jge    jump_32da4
		xor    %ebx,%ebx
	jump_32e35:
		mov    $0x1,%cl
		mov    0x572(%esp),%eax
		movswl %bx,%edx
		sar    $0x10,%eax
		mov    %cl,0x4ec(%esp,%edx,1)
		add    $0x2,%eax
		xor    %ch,%ch
		mov    %eax,0x564(%esp)
		mov    %ch,0x4b0(%esp,%edx,1)
		mov    %ch,0x438(%esp,%edx,1)
		movswl %si,%ecx
		fildl  0x564(%esp)
		sub    $0x1f,%ecx
		mov    $0x6,%eax
		mov    %ecx,0x564(%esp)
		fstps  0xf0(%esp,%edx,4)
		fildl  0x564(%esp)
		fstps  (%esp,%edx,4)
		call   func_499bd
		add    $0x2,%al
		mov    %al,0x474(%esp,%edx,1)
		mov    $0x168,%eax
		inc    %ebx
		call   func_499bd
		mov    %ax,0x3c0(%esp,%edx,2)
		cmp    $0x3c,%bx
		jl     jump_32e35
		mov    $0x5,%eax
		call   func_1033b
		xor    %eax,%eax
		mov    %ax,0x56c(%esp)
		mov    $0x32,%eax
		xor    %esi,%esi
		call   func_4f4cd
	jump_32eda:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		mov    %ebp,%eax
		call   func_12f2a
		lea    0x438(%esp),%eax
		push   %eax
		lea    0x3c4(%esp),%eax
		push   %eax
		lea    0x4b8(%esp),%eax
		push   %eax
		lea    0x1ec(%esp),%eax
		lea    0x480(%esp),%ecx
		push   %eax
		lea    0x2e0(%esp),%eax
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x104(%esp),%edx
		lea    0x500(%esp),%eax
		call   func_33e06
		call   func_5e9e8
		call   func_499e4
		xor    %bl,%bl
		xor    %eax,%eax
		jmp    jump_32f72
	jump_32f62:
		movswl %ax,%edx
		cmpb   $0x1a,0x528(%esp,%edx,1)
		jle    jump_32f71
		inc    %bl
	jump_32f71:
		inc    %eax
	jump_32f72:
		mov    data_f0b9e,%dx
		cmp    %dx,%ax
		jl     jump_32f62
		movsbw %bl,%ax
		cmp    %dx,%ax
		jne    jump_32faa
		xor    %bl,%bl
		xor    %edx,%eax
	jump_32f8b:
		movswl %ax,%edx
		cmpb   $0x0,0x4ec(%esp,%edx,1)
		jne    jump_32f9a
		inc    %bl
	jump_32f9a:
		inc    %eax
		cmp    $0x3c,%ax
		jl     jump_32f8b
		cmp    $0x3c,%bl
		je     jump_33027
	jump_32faa:
		incw   0x56c(%esp)
		mov    0x56a(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x9,%edx
		jne    jump_32fe9
		xor    %edx,%edx
	jump_32fcf:
		movswl %dx,%eax
		mov    0x474(%esp,%eax,1),%ch
		inc    %ch
		inc    %edx
		mov    %ch,0x474(%esp,%eax,1)
		cmp    $0x3c,%dx
		jl     jump_32fcf
	jump_32fe9:
		mov    0x56a(%esp),%edx
		sar    $0x10,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1,%edx
		jne    jump_32eda
		cmp    data_f0b9e,%si
		jge    jump_32eda
		mov    $0x13,%dl
		movswl %si,%eax
		inc    %esi
		mov    %dl,0x528(%esp,%eax,1)
		jmp    jump_32eda
	jump_33027:
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		lea    0x68(%eax),%esi
		movsbw 0x5(%esi),%ax
		xor    %ecx,%ecx
		mov    %ax,0x580(%esp)
		movsbl 0x1(%ebp),%eax
		mov    0x580(%esp),%edx
		call   func_10988
		add    %eax,%edx
		mov    %ecx,0x5b0(%esp)
		mov    %dx,0x588(%esp)
	jump_33074:
		mov    0x588(%esp),%ebx
		cmp    $0x14,%bx
		jl     jump_33215
		cmp    $0x29,%bx
		jl     jump_330ad
		mov    0x5b0(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x5b0(%esp)
		cmp    $0x7,%cx
		jle    jump_330cd
		movl   $0x7,0x5b0(%esp)
		jmp    jump_330cd
	jump_330ad:
		mov    0x5b0(%esp),%eax
		dec    %eax
		mov    %eax,0x5b0(%esp)
		cmp    $0x1,%ax
		jge    jump_330cd
		movl   $0xffffffff,0x5b0(%esp)
	jump_330cd:
		mov    0x580(%esp),%ebx
		movsbl 0x1(%ebp),%eax
		sub    $0x3,%ebx
		call   func_10988
		mov    %ebx,%edx
		mov    %bx,0x580(%esp)
		add    %eax,%edx
		mov    data_ba83a,%eax
		mov    %dx,0x588(%esp)
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		mov    0x5b0(%esp),%eax
		add    %eax,%eax
		mov    0x588(%esp),%ecx
		add    $0x2,%eax
		add    %ecx,%eax
		mov    %ax,0x58c(%esp)
		mov    0x5b0(%esp),%eax
		add    $0x28,%eax
		mov    %ax,0x570(%esp)
		mov    %ecx,%eax
		add    $0x2,%eax
		mov    %eax,0x590(%esp)
		jmp    jump_331cc
	jump_33162:
		movsbw 0x4(%esi),%ax
		mov    %eax,0x5c4(%esp)
		mov    0x574(%esp),%eax
		mov    0x56e(%esp),%ecx
		add    0x5c4(%esp),%eax
		mov    0x58a(%esp),%edx
		mov    %ax,0x5c4(%esp)
		mov    0x9(%esi),%ebx
		mov    0x5c2(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_5f517
		mov    0x58c(%esp),%edx
		mov    0x570(%esp),%ebx
		sub    $0x2,%edx
		dec    %ebx
		mov    %dx,0x58c(%esp)
		mov    %bx,0x570(%esp)
	jump_331cc:
		mov    0x58c(%esp),%eax
		cmp    0x590(%esp),%ax
		jge    jump_33162
		mov    0x586(%esp),%edx
		mov    0x574(%esp),%ecx
		movsbw 0x4(%esi),%ax
		mov    0x9(%esi),%ebx
		add    %ecx,%eax
		sar    $0x10,%edx
		cwtl
		call   func_5f3fd
		incw   0x56c(%esp)
		call   func_5e9e8
		call   func_499e4
		jmp    jump_33074
	jump_33215:
		xor    %eax,%eax
	jump_33217:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x4ec(%esp,%edx,1)
		cmp    $0x4,%ax
		jl     jump_33217
		xor    %eax,%eax
		mov    %ax,0x5a0(%esp)
	jump_33234:
		cmpw   $0x5,0x5a0(%esp)
		jge    jump_33393
		movw   $0x7,0x5bc(%esp)
	jump_3324d:
		xor    %edx,%edx
		mov    %edx,0x568(%esp)
	jump_33256:
		mov    0x5d(%ebp),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		mov    0x5ba(%esp),%esi
		sar    $0x10,%esi
		imul   $0xd,%esi,%esi
		add    $data_d66a8,%eax
		mov    data_ba83c,%edx
		add    %eax,%esi
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		mov    0x56c(%esp),%ebx
		inc    %ebx
		mov    0x574(%esp),%ecx
		mov    %bx,0x56c(%esp)
		mov    0x586(%esp),%edx
		movsbw 0x4(%esi),%ax
		sar    $0x10,%edx
		add    %ecx,%eax
		mov    0x9(%esi),%ebx
		cwtl
		call   func_5f3fd
		mov    $0x33,%eax
		mov    %esp,%ecx
		call   func_4f4cd
		lea    0x528(%esp),%eax
		lea    0xf0(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		lea    0x4f0(%esp),%eax
		call   func_33a2d
		call   func_5e9e8
		call   func_499e4
		mov    0x568(%esp),%eax
		inc    %eax
		mov    %eax,0x568(%esp)
		cmp    $0x3,%ax
		jl     jump_33256
		mov    $0x9,%bh
		xor    %edx,%edx
	jump_33322:
		movswl %dx,%eax
		mov    0x4ec(%esp,%eax,1),%cl
		test   %cl,%cl
		jle    jump_33347
		mov    %cl,%ch
		inc    %ch
		mov    %ch,0x4ec(%esp,%eax,1)
		cmp    $0xb,%ch
		jle    jump_33347
		mov    %bh,0x4ec(%esp,%eax,1)
	jump_33347:
		inc    %edx
		cmp    $0x5,%dx
		jl     jump_33322
		mov    0x5bc(%esp),%ecx
		inc    %ecx
		mov    %cx,0x5bc(%esp)
		cmp    $0x9,%cx
		jle    jump_3324d
		mov    0x59e(%esp),%eax
		fild   0x574(%esp)
		sar    $0x10,%eax
		mov    $0x7,%bh
		fstps  0xf0(%esp,%eax,4)
		fild   0x588(%esp)
		mov    %bh,0x4ec(%esp,%eax,1)
		fstps  (%esp,%eax,4)
	jump_33393:
		xor    %ebx,%ebx
		mov    %ebx,0x5b8(%esp)
	jump_3339c:
		xor    %edx,%edx
		mov    %edx,0x584(%esp)
	jump_333a5:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		mov    0x56c(%esp),%ebx
		inc    %ebx
		mov    0x574(%esp),%ecx
		mov    %bx,0x56c(%esp)
		mov    0x586(%esp),%edx
		movsbw 0x4(%esi),%ax
		sar    $0x10,%edx
		add    %ecx,%eax
		mov    0x9(%esi),%ebx
		cwtl
		mov    %esp,%ecx
		call   func_5f3fd
		lea    0x528(%esp),%eax
		lea    0xf0(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		lea    0x4f0(%esp),%eax
		call   func_33a2d
		call   func_5e9e8
		call   func_499e4
		mov    0x584(%esp),%eax
		inc    %eax
		mov    %eax,0x584(%esp)
		cmp    $0x3,%ax
		jl     jump_333a5
		mov    $0x9,%bh
		xor    %edx,%edx
	jump_33447:
		movswl %dx,%eax
		mov    0x4ec(%esp,%eax,1),%cl
		test   %cl,%cl
		jle    jump_3346c
		mov    %cl,%ch
		inc    %ch
		mov    %ch,0x4ec(%esp,%eax,1)
		cmp    $0xb,%ch
		jle    jump_3346c
		mov    %bh,0x4ec(%esp,%eax,1)
	jump_3346c:
		inc    %edx
		cmp    $0x5,%dx
		jl     jump_33447
		mov    0x5b8(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x5b8(%esp)
		cmp    $0x2,%cx
		jl     jump_3339c
		mov    0x5a0(%esp),%ecx
		inc    %ecx
		mov    %cx,0x5a0(%esp)
		cmp    $0x9,%cx
		jl     jump_33234
		movw   $0x7,0x5c0(%esp)
	jump_334b0:
		xor    %ecx,%ecx
	jump_334b2:
		mov    0x5d(%ebp),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		mov    0x5be(%esp),%esi
		sar    $0x10,%esi
		imul   $0xd,%esi,%esi
		add    $data_d66a8,%eax
		mov    data_ba83c,%edx
		add    %eax,%esi
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		incw   0x56c(%esp)
		movsbw 0x4(%esi),%ax
		mov    %eax,0x5c4(%esp)
		mov    0x574(%esp),%eax
		add    0x5c4(%esp),%eax
		mov    0x586(%esp),%edx
		mov    %ax,0x5c4(%esp)
		sar    $0x10,%edx
		mov    0x5c2(%esp),%eax
		mov    0x9(%esi),%ebx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_334b2
		mov    0x5c0(%esp),%eax
		inc    %eax
		mov    %ax,0x5c0(%esp)
		cmp    $0x9,%ax
		jle    jump_334b0
		mov    data_f0b9e,%bx
		xor    %ecx,%ecx
		cmp    $0xf,%bx
		jge    jump_3358e
		movl   $0x1,0x59c(%esp)
		jmp    jump_335ac
	jump_3358e:
		cmp    $0x1e,%bx
		jge    jump_335a1
		movl   $0x2,0x59c(%esp)
		jmp    jump_335ac
	jump_335a1:
		movl   $0x3,0x59c(%esp)
	jump_335ac:
		mov    $0x34,%eax
		mov    $0xc,%edx
		call   func_4f4cd
		mov    %dx,0x5b4(%esp)
	jump_335c3:
		xor    %ebx,%ebx
		mov    %ebx,0x57c(%esp)
	jump_335cc:
		cmpw   $0xd,0x5b4(%esp)
		jle    jump_335fb
		xor    %eax,%eax
		jmp    jump_335f1
	jump_335db:
		cmp    data_f0b9e,%cx
		jge    jump_335ef
		movswl %cx,%ebx
		movb   $0x64,0x528(%esp,%ebx,1)
	jump_335ef:
		inc    %ecx
		inc    %eax
	jump_335f1:
		cmp    0x59c(%esp),%ax
		jl     jump_335db
	jump_335fb:
		cmpw   $0x3,data_ba838
		je     jump_33610
		movw   $0x3,data_ba838
		jmp    jump_33619
	jump_33610:
		movw   $0xfffd,data_ba838
	jump_33619:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		mov    0x56c(%esp),%edx
		mov    0x586(%esp),%eax
		mov    0x574(%esp),%edi
		inc    %edx
		sar    $0x10,%eax
		mov    %dx,0x56c(%esp)
		mov    %eax,0x564(%esp)
		movsbw 0x4(%esi),%ax
		mov    0x564(%esp),%edx
		add    %edi,%eax
		mov    0x9(%esi),%ebx
		cwtl
		call   func_5f3fd
		mov    0x5b2(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		add    %eax,%edi
		mov    0x4(%edi),%eax
		mov    0x564(%esp),%edx
		sar    $0x10,%eax
		add    $0x78,%edx
		add    %eax,%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%eax
		mov    %eax,0x564(%esp)
		mov    0x572(%esp),%eax
		sar    $0x10,%eax
		add    $0xa,%eax
		mov    0x8(%edi),%ebx
		add    0x564(%esp),%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		mov    0x57c(%esp),%eax
		inc    %eax
		mov    %eax,0x57c(%esp)
		cmp    $0x3,%ax
		jl     jump_335cc
		mov    0x5b4(%esp),%ebx
		inc    %ebx
		mov    %bx,0x5b4(%esp)
		cmp    $0x12,%bx
		jle    jump_335c3
		xor    %edx,%edx
		mov    %edx,0x5a8(%esp)
	jump_33718:
		xor    %ecx,%ecx
	jump_3371a:
		cmpw   $0x3,data_ba838
		je     jump_3372f
		movw   $0x3,data_ba838
		jmp    jump_33738
	jump_3372f:
		movw   $0xfffd,data_ba838
	jump_33738:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x56c(%esp),%ebx
		call   func_454b3
		lea    0x528(%esp),%eax
		mov    %edi,%edx
		call   func_33c31
		incw   0x56c(%esp)
		movsbw 0x4(%esi),%ax
		mov    %eax,0x5c4(%esp)
		mov    0x574(%esp),%eax
		add    0x5c4(%esp),%eax
		mov    0x586(%esp),%edx
		mov    %ax,0x5c4(%esp)
		sar    $0x10,%edx
		mov    0x5c2(%esp),%eax
		mov    0x9(%esi),%ebx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_3371a
		mov    0x5a8(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x5a8(%esp)
		cmp    $0x3,%cx
		jl     jump_33718
		xor    %edx,%edx
		mov    %dx,data_ba838
		mov    %edx,0x5a4(%esp)
	jump_337e7:
		mov    0x580(%esp),%edx
		movsbw 0x5(%esi),%ax
		cmp    %dx,%ax
		jle    jump_3395c
		mov    0x57e(%esp),%eax
		mov    0x2(%esi),%edx
		sar    $0x10,%eax
		sar    $0x18,%edx
		add    $0x15,%eax
		cmp    %edx,%eax
		jge    jump_33835
		mov    0x5a4(%esp),%eax
		inc    %eax
		mov    %eax,0x5a4(%esp)
		cmp    $0x7,%ax
		jle    jump_33855
		movl   $0x7,0x5a4(%esp)
		jmp    jump_33855
	jump_33835:
		mov    0x5a4(%esp),%ebx
		dec    %ebx
		mov    %ebx,0x5a4(%esp)
		cmp    $0x1,%bx
		jge    jump_33855
		movl   $0xffffffff,0x5a4(%esp)
	jump_33855:
		mov    0x580(%esp),%ecx
		movsbl 0x1(%ebp),%eax
		mov    0x5a4(%esp),%edi
		call   func_10988
		add    $0x3,%ecx
		add    %edi,%edi
		mov    %ecx,%edx
		neg    %edi
		add    %eax,%edx
		mov    data_ba83a,%eax
		mov    %dx,0x578(%esp)
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    $0x2,%edi
		call   func_454b3
		add    0x578(%esp),%edi
		mov    0x5a4(%esp),%eax
		add    $0x28,%eax
		mov    %ax,0x598(%esp)
		mov    0x578(%esp),%eax
		sub    $0x2,%eax
		mov    %cx,0x580(%esp)
		mov    %eax,0x594(%esp)
		jmp    jump_33922
	jump_338ce:
		movsbw 0x4(%esi),%ax
		mov    %eax,0x5c4(%esp)
		mov    0x574(%esp),%eax
		mov    0x596(%esp),%ecx
		add    0x5c4(%esp),%eax
		movswl %di,%edx
		mov    %ax,0x5c4(%esp)
		mov    0x9(%esi),%ebx
		mov    0x5c2(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		call   func_5f517
		mov    0x598(%esp),%eax
		dec    %eax
		add    $0x2,%edi
		mov    %ax,0x598(%esp)
	jump_33922:
		cmp    0x594(%esp),%di
		jle    jump_338ce
		mov    0x576(%esp),%edx
		mov    0x574(%esp),%ecx
		movsbw 0x4(%esi),%ax
		mov    0x9(%esi),%ebx
		add    %ecx,%eax
		sar    $0x10,%edx
		cwtl
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		jmp    jump_337e7
	jump_3395c:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $data_12824c,%ebx
		call   func_454b3
		mov    %ebp,%eax
		mov    $0x100,%edx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		call   func_44d75
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		movb   $0x4,0x64(%ebp)
		call   func_11e04
		mov    0x5ac(%esp),%al
		xor    %ebx,%ebx
		mov    %al,0x63(%ebp)
		jmp    jump_339d1
	jump_339c1:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %ebx
	jump_339d1:
		cmp    data_f0b9e,%bx
		jl     jump_339c1
		mov    $0x4,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   func_2caf7
		call   func_1ffcd
		call   func_61115
		xor    %ebx,%ebx
	jump_339f4:
		movswl %bx,%edx
		mov    0x2d0(%esp,%edx,4),%eax
		call   w_dos_free
		mov    0x1e0(%esp,%edx,4),%eax
		inc    %ebx
		call   w_dos_free
		cmp    $0x3c,%bx
		jl     jump_339f4
		call   func_103a0
		mov    $0x1,%ebx
	jump_33a20:
		mov    %ebx,%eax
		add    $0x5c8,%esp
		jmp    jump_30f5a


/*----------------------------------------------------------------*/
func_33a2d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %ebx
		mov    %ecx,%ebp
		xor    %edi,%edi
	jump_33a39:
		mov    0x4(%esp),%eax
		movswl %di,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jle    jump_33c1d
		movsbl %bl,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		shl    $0x2,%edx
		fild   0x6(%eax)
		fadds  (%edx,%ebp,1)
		mov    (%esp),%ecx
		call   func___CHP
		fistpl 0x8(%esp)
		add    %ecx,%edx
		fild   0x4(%eax)
		fadds  (%edx)
		mov    0x8(%eax),%ebx
		call   func___CHP
		mov    0x8(%esp),%edx
		fistpl 0x8(%esp)
		mov    0x8(%esp),%eax
		xor    %ecx,%ecx
		call   func_5ee51
		jmp    jump_33b45
	jump_33a93:
		mov    0x2c(%esp),%edx
		movswl %cx,%ebx
		add    %ebx,%edx
		mov    (%edx),%al
		test   %al,%al
		jle    jump_33b44
		cmp    $0x64,%al
		jge    jump_33b44
		mov    data_f0648(,%ebx,4),%eax
		movsbl (%eax),%eax
		movswl %di,%esi
		call   func_10971
		add    $0xc,%eax
		mov    data_f0648(,%ebx,4),%ebx
		shl    $0x2,%esi
		mov    %eax,0x18(%esp)
		movsbl 0x1(%ebx),%eax
		mov    (%esp),%ebx
		add    %esi,%ebx
		call   func_10988
		add    $0x2,%eax
		flds   (%ebx)
		fadds  data_77a74
		mov    %eax,0x14(%esp)
		fild   0x18(%esp)
		fstps  0xc(%esp)
		fcomps 0xc(%esp)
		fnstsw %ax
		sahf
		jae    jump_33b44
		flds   (%ebx)
		fadds  data_77a78
		fcomps 0xc(%esp)
		fnstsw %ax
		sahf
		jbe    jump_33b44
		lea    (%esi,%ebp,1),%ebx
		flds   (%ebx)
		fadds  data_77a7c
		fild   0x14(%esp)
		fstps  0x10(%esp)
		fcomps 0x10(%esp)
		fnstsw %ax
		sahf
		jae    jump_33b44
		flds   (%ebx)
		fadds  data_77a80
		fcomps 0x10(%esp)
		fnstsw %ax
		sahf
		jbe    jump_33b44
		movb   $0x26,(%edx)
	jump_33b44:
		inc    %ecx
	jump_33b45:
		cmp    data_f0b9e,%cx
		jl     jump_33a93
		test   %di,%di
		jne    jump_33b68
		mov    (%esp),%eax
		movswl %di,%edx
		flds   (%eax,%edx,4)
		fsubs  data_77a60
		jmp    jump_33bbe
	jump_33b68:
		cmp    $0x1,%di
		jne    jump_33b7f
		mov    (%esp),%eax
		movswl %di,%edx
		flds   (%eax,%edx,4)
		fsubs  data_77a64
		jmp    jump_33bbe
	jump_33b7f:
		cmp    $0x2,%di
		jne    jump_33b98
		movswl %di,%eax
		flds   0x0(%ebp,%eax,4)
		fadds  data_77a64
		fstps  0x0(%ebp,%eax,4)
		jmp    jump_33bcf
	jump_33b98:
		cmp    $0x3,%di
		jne    jump_33baf
		mov    (%esp),%eax
		movswl %di,%edx
		flds   (%eax,%edx,4)
		fadds  data_77a64
		jmp    jump_33bbe
	jump_33baf:
		mov    (%esp),%eax
		movswl %di,%edx
		flds   (%eax,%edx,4)
		fadds  data_77a60
	jump_33bbe:
		fstps  (%eax,%edx,4)
		flds   0x0(%ebp,%edx,4)
		fadds  data_77a64
		fstps  0x0(%ebp,%edx,4)
	jump_33bcf:
		movswl %di,%ebx
		mov    (%esp),%edx
		shl    $0x2,%ebx
		add    %ebx,%edx
		flds   (%edx)
		fcomps data_77a68
		fnstsw %ax
		sahf
		jb     jump_33c11
		flds   (%edx)
		fcomps data_77a6c
		fnstsw %ax
		sahf
		ja     jump_33c11
		lea    (%ebx,%ebp,1),%edx
		flds   (%edx)
		fcomps data_77a68
		fnstsw %ax
		sahf
		jb     jump_33c11
		flds   (%edx)
		fcomps data_77a70
		fnstsw %ax
		sahf
		jbe    jump_33c1d
	jump_33c11:
		mov    0x4(%esp),%esi
		movswl %di,%eax
		add    %esi,%eax
		movb   $0x0,(%eax)
	jump_33c1d:
		inc    %edi
		cmp    $0x5,%di
		jl     jump_33a39
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_33c31:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %ebx,%ebp
		xor    %esi,%esi
		jmp    jump_33df1
	jump_33c45:
		movswl %si,%eax
		add    %edi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		jle    jump_33df0
		cmp    $0x64,%dl
		jge    jump_33c85
		cmp    $0x1e,%dl
		jle    jump_33c63
		cmp    $0x26,%dl
		jl     jump_33c76
	jump_33c63:
		movswl %si,%eax
		movsbl (%edi,%eax,1),%eax
		imul   $0xc,%eax,%eax
	jump_33c6d:
		mov    $data_f0daa,%ecx
		add    %eax,%ecx
		jmp    jump_33cba
	jump_33c76:
		movsbl %dl,%eax
		mov    $0x3c,%edx
		sub    %eax,%edx
		imul   $0xc,%edx,%eax
		jmp    jump_33c6d
	jump_33c85:
		cmp    $0x68,%dl
		jge    jump_33c91
		mov    $data_f0f1e,%ecx
		jmp    jump_33ca7
	jump_33c91:
		cmp    $0x6c,%dl
		jge    jump_33c9d
		mov    $data_f0f2a,%ecx
		jmp    jump_33ca7
	jump_33c9d:
		cmp    $0x70,%dl
		jge    jump_33ca7
		mov    $data_f0f36,%ecx
	jump_33ca7:
		movswl %si,%eax
		add    %edi,%eax
		mov    (%eax),%dh
		inc    %dh
		mov    %dh,(%eax)
		cmp    $0x6f,%dh
		jle    jump_33cba
		movb   $0x0,(%eax)
	jump_33cba:
		movswl %si,%eax
		mov    %eax,0x4(%esp)
		mov    %eax,%edx
		mov    data_f0648(,%eax,4),%eax
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x14(%esp)
		mov    data_f0648(,%edx,4),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		add    $0x2,%eax
		mov    %ax,0x10(%esp)
		mov    0xe(%esp),%eax
		mov    0x4(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,(%esp)
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%eax
		mov    %eax,0x8(%esp)
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0xc(%esp)
		add    0x8(%esp),%eax
		mov    0x8(%ecx),%ebx
		call   func_5f29d
		mov    0x4(%esp),%eax
		add    %edi,%eax
		mov    (%eax),%dl
		cmp    $0x26,%dl
		jl     jump_33db1
		cmp    $0x64,%dl
		jge    jump_33db1
		movswl 0x0(%ebp),%edx
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $data_f0f06,%ecx
		test   %edx,%edx
		jne    jump_33d83
		mov    data_f0f0a,%edx
		mov    (%esp),%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_f0f08,%eax
		sar    $0x10,%eax
		mov    %eax,0x8(%esp)
		mov    0xc(%esp),%eax
		inc    %eax
		mov    data_f0f0e,%ebx
		add    0x8(%esp),%eax
		jmp    jump_33dac
	jump_33d83:
		mov    data_f0f0a,%edx
		mov    (%esp),%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_f0f08,%eax
		sar    $0x10,%eax
		mov    %eax,0x8(%esp)
		mov    0xc(%esp),%eax
		dec    %eax
		add    0x8(%esp),%eax
		mov    data_f0f0e,%ebx
	jump_33dac:
		call   func_5f29d
	jump_33db1:
		movswl 0x0(%ebp),%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		jne    jump_33df0
		movswl %si,%eax
		add    %edi,%eax
		mov    (%eax),%bl
		cmp    $0x64,%bl
		jge    jump_33df0
		test   %bl,%bl
		jle    jump_33df0
		mov    %bl,%dl
		inc    %dl
		mov    %dl,(%eax)
		cmp    $0x26,%dl
		jl     jump_33de8
		cmp    $0x29,%dl
		jle    jump_33df0
		jmp    jump_33ded
	jump_33de8:
		cmp    $0x21,%dl
		jle    jump_33df0
	jump_33ded:
		movb   $0x1c,(%eax)
	jump_33df0:
		inc    %esi
	jump_33df1:
		cmp    data_f0b9e,%si
		jl     jump_33c45
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_33e06:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    %dx,0x24(%esp)
	jump_33e17:
		mov    0x22(%esp),%eax
		mov    0xc(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		cmpb   $0x1,(%eax)
		jne    jump_341aa
		xor    %esi,%esi
		mov    %si,0x14(%esp)
		jmp    jump_34153
	jump_33e39:
		mov    0x44(%esp),%ebx
		mov    %edx,%ecx
		add    %edx,%edx
		add    %edx,%ebx
		movswl (%ebx),%edx
		mov    0x8(%esp),%eax
		flds   data_74a68(,%edx,4)
		fadds  (%eax,%ecx,4)
		fstps  (%eax,%ecx,4)
		movswl (%ebx),%ebx
		mov    0x4(%esp),%edx
		flds   data_744c8(,%ebx,4)
		fadds  (%edx,%ecx,4)
		fstps  (%edx,%ecx,4)
		flds   (%eax,%ecx,4)
		call   func___CHP
		fistpl 0x10(%esp)
		flds   (%edx,%ecx,4)
		mov    0x10(%esp),%eax
		call   func___CHP
		fistpl 0x10(%esp)
		mov    %ax,0x18(%esp)
		mov    0x10(%esp),%eax
		mov    0x12(%esp),%edx
		mov    %ax,0x1c(%esp)
		movsbl (%edi),%eax
		sar    $0x10,%edx
		dec    %eax
		cmp    %eax,%edx
		jne    jump_340c7
		mov    0x1a(%esp),%ebx
		sar    $0x10,%ebx
		imul   $0x1e0,%ebx,%edx
		mov    0x16(%esp),%eax
		mov    data_755cc,%edi
		sar    $0x10,%eax
		add    %eax,%edi
		movb   $0x18,0xbb80(%edx,%edi,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x18,0xbb81(%ecx,%edx,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x18,0xbb7f(%ecx,%edx,1)
		lea    0x1(%ebx),%edx
		imul   $0x1e0,%edx,%edx
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x18,0xbb81(%edx,%edi,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x18,0xbb7f(%ecx,%edx,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x18,0xbb80(%ecx,%edx,1)
		lea    -0x1(%ebx),%edx
		imul   $0x1e0,%edx,%edx
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x18,0xbb81(%ecx,%edx,1)
		mov    data_755cc,%ebx
		add    %eax,%ebx
		movb   $0x18,0xbb7f(%edx,%ebx,1)
		mov    data_755cc,%ebx
		xor    %edi,%edi
		add    %ebx,%eax
		xor    %esi,%esi
		mov    %di,0x20(%esp)
		movb   $0x18,0xbb80(%edx,%eax,1)
		jmp    jump_340ad
	jump_33f6c:
		movswl %si,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%edx
		jne    jump_33f85
		incw   0x20(%esp)
	jump_33f85:
		cmpw   $0x7,0x20(%esp)
		jle    jump_33f94
		movw   $0x7,0x20(%esp)
	jump_33f94:
		mov    0x20(%esp),%cl
		add    $0x18,%cl
		cmp    $0x10,%si
		jg     jump_34073
		mov    0x22(%esp),%edi
		sar    $0x10,%edi
		mov    0x38(%esp),%edx
		shl    $0x2,%edi
		add    %edi,%edx
		mov    (%edx),%eax
		movswl %si,%ebx
		mov    data_755cc,%ebp
		movswl (%eax,%ebx,2),%eax
		add    %eax,%ebp
		mov    0x3c(%esp),%eax
		add    %edi,%eax
		mov    (%eax),%edi
		movswl (%edi,%ebx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb80(%edi)
		mov    (%edx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%ebx,2),%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%ebx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb81(%edi)
		mov    (%edx),%edi
		movswl (%edi,%ebx,2),%edi
		mov    %edi,0x10(%esp)
		mov    0x10(%esp),%ebp
		mov    data_755cc,%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%ebx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb7f(%edi)
		mov    (%edx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%ebx,2),%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%ebx,2),%edi
		dec    %edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb80(%edi)
		mov    (%eax),%eax
		movswl (%eax,%ebx,2),%eax
		inc    %eax
		imul   $0x1e0,%eax,%eax
		mov    (%edx),%edx
		movswl (%edx,%ebx,2),%edi
		mov    data_755cc,%edx
		add    %edi,%edx
		mov    %cl,0xbb80(%edx,%eax,1)
		jmp    jump_340ac
	jump_34073:
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		mov    0x38(%esp),%eax
		shl    $0x2,%edx
		mov    0x3c(%esp),%ebp
		mov    (%edx,%eax,1),%eax
		movswl %si,%ebx
		mov    data_755cc,%edi
		movswl (%eax,%ebx,2),%eax
		add    %ebp,%edx
		add    %eax,%edi
		mov    (%edx),%eax
		movswl (%eax,%ebx,2),%eax
		imul   $0x1e0,%eax,%eax
		mov    %cl,0xbb80(%edi,%eax,1)
	jump_340ac:
		inc    %esi
	jump_340ad:
		mov    0x22(%esp),%eax
		mov    0x40(%esp),%ecx
		sar    $0x10,%eax
		add    %ecx,%eax
		movsbw (%eax),%ax
		cmp    %ax,%si
		jl     jump_33f6c
	jump_340c7:
		mov    0x22(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%edx
		mov    0x38(%esp),%ebx
		shl    $0x2,%edx
		mov    (%edx,%ebx,1),%ebx
		mov    0x18(%esp),%eax
		mov    %ax,(%ebx)
		add    0x3c(%esp),%edx
		mov    (%edx),%edx
		mov    0x1c(%esp),%eax
		mov    %ax,(%edx)
		mov    0x40(%esp),%eax
		add    %edi,%eax
		mov    (%eax),%dh
		test   %dh,%dh
		je     jump_34133
		movsbw %dh,%dx
		dec    %edx
		jmp    jump_3412e
	jump_34101:
		mov    0x22(%esp),%edi
		mov    0x38(%esp),%eax
		movswl %dx,%ebx
		sar    $0x10,%edi
		add    %ebx,%ebx
		mov    (%eax,%edi,4),%eax
		mov    (%ebx,%eax,1),%si
		mov    %si,0x2(%ebx,%eax,1)
		mov    0x3c(%esp),%eax
		mov    (%eax,%edi,4),%eax
		add    %ebx,%eax
		mov    (%eax),%bx
		dec    %edx
		mov    %bx,0x2(%eax)
	jump_3412e:
		test   %dx,%dx
		jge    jump_34101
	jump_34133:
		mov    0x22(%esp),%eax
		mov    0x40(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    (%eax),%bl
		inc    %bl
		mov    %bl,(%eax)
		cmp    $0x31,%bl
		jle    jump_3414e
		movb   $0x31,(%eax)
	jump_3414e:
		incw   0x14(%esp)
	jump_34153:
		mov    0x22(%esp),%edx
		mov    (%esp),%edi
		sar    $0x10,%edx
		add    %edx,%edi
		mov    0x14(%esp),%ebx
		movsbw (%edi),%ax
		cmp    %bx,%ax
		jg     jump_33e39
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffce,%eax
		jl     jump_3419a
		cmpw   $0x172,0x18(%esp)
		jg     jump_3419a
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffce,%eax
		jl     jump_3419a
		cmpw   $0xfa,0x1c(%esp)
		jle    jump_341aa
	jump_3419a:
		mov    0x22(%esp),%eax
		mov    0xc(%esp),%ebx
		sar    $0x10,%eax
		add    %ebx,%eax
		movb   $0x0,(%eax)
	jump_341aa:
		mov    0x24(%esp),%ebx
		inc    %ebx
		mov    %bx,0x24(%esp)
		cmp    $0x3c,%bx
		jl     jump_33e17
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x14


/*----------------------------------------------------------------*/
func_341c7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x344,%esp
		mov    %eax,%ebp
		lea    0x31c(%esp),%edi
		mov    $data_30520,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    $0x7,%ecx
		lea    0x300(%esp),%edi
		mov    $data_30528,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    data_ba83e,%ax
		mov    %dx,data_f0b9e
		mov    %ax,0x340(%esp)
		jmp    jump_34249
	jump_3420f:
		mov    data_ba83c,%si
		jmp    jump_3422e
	jump_34218:
		mov    0xb(%ebp),%ebx
		mov    0x33e(%esp),%edx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		inc    %esi
		call   func_1a1f8
	jump_3422e:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %si,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_34218
		incw   0x340(%esp)
	jump_34249:
		mov    data_ba83c,%eax
		mov    0x33e(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_3420f
		cmpw   $0x0,data_f0b9e
		jne    jump_34276
		mov    $0xffffffff,%ebx
		jmp    jump_34c07
	jump_34276:
		mov    $data_77a84,%eax
		call   func_1fea4
		call   func_103a8
		xor    %ecx,%ecx
		mov    %ebp,%ebx
		mov    %cx,0x340(%esp)
		movsbw 0x63(%ebp),%ax
		movsbl 0x1(%ebp),%edx
		mov    %ax,0x32c(%esp)
		movsbl 0x0(%ebp),%eax
		movb   $0x0,0x63(%ebp)
		call   func_11ee4
		jmp    jump_342cf
	jump_342b1:
		mov    0x33e(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		incw   0x340(%esp)
	jump_342cf:
		mov    0x340(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_342b1
		mov    $0x1,%eax
		call   func_44d6e
		call   func_30544
		mov    $0x10,%eax
		xor    %edi,%edi
		call   func_1033b
		mov    %di,0x340(%esp)
	jump_34302:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x33e(%esp),%edx
		sar    $0x10,%edx
		mov    0x31a(%esp,%edx,2),%edx
		mov    %ebp,%eax
		sar    $0x10,%edx
		call   func_305a2
		call   func_5e9e8
		mov    $0xc,%edx
		xor    %eax,%eax
		call   func_30824
		mov    0x340(%esp),%edx
		inc    %edx
		call   func_499e4
		mov    %dx,0x340(%esp)
		cmp    $0x4,%dx
		jl     jump_34302
		xor    %ecx,%ecx
		mov    %cx,0x340(%esp)
		xor    %ebx,%ebx
	jump_3436b:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x340(%esp),%esi
		call   func_454b3
		mov    %ebx,%edx
		mov    %ebx,%eax
		inc    %esi
		call   func_305a2
		call   func_5e9e8
		mov    $0xc,%edx
		mov    %ebx,%eax
		mov    %si,0x340(%esp)
		call   func_30824
		call   func_499e4
		cmp    $0x4,%si
		jl     jump_3436b
		xor    %eax,%eax
		call   func_44d6e
		movsbl 0x0(%ebp),%eax
		call   func_10971
		mov    %eax,%esi
		movsbl 0x1(%ebp),%eax
		call   func_10988
		mov    %eax,%edi
		mov    $0x32,%eax
		add    $0x4,%esi
		call   func_4f4cd
		xor    %eax,%eax
		sub    $0x8,%edi
		mov    %ax,0x340(%esp)
	jump_343ed:
		mov    $0x5dc0,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5e9d0
		call   func_44dcc
		mov    0x33e(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x328(%esp)
		add    $0x6,%eax
		imul   $0xc,%eax,%eax
		movswl %di,%ecx
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		movswl %si,%ecx
		add    %ecx,%eax
		call   func_5ee51
		imul   $0xc,0x328(%esp),%eax
		add    $data_f0daa,%eax
		mov    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		add    %edi,%edx
		mov    0x4(%eax),%ax
		sub    $0x5a,%edx
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5efb9
		mov    %ebp,%eax
		mov    0x340(%esp),%edx
		call   func_12f2a
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x340(%esp)
		cmp    $0x6,%dx
		jl     jump_343ed
		mov    %esi,%ecx
		xor    %eax,%eax
		mov    %di,0x330(%esp)
		mov    %ax,0x340(%esp)
	jump_344a1:
		mov    $0x20,%eax
		mov    $0x5dc0,%ebx
		call   func_1033b
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5e9d0
		call   func_44dcc
		mov    0x340(%esp),%eax
		xor    %ah,%ah
		and    $0x1,%al
		cwtl
		add    $0xa,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		mov    %edx,0x328(%esp)
		mov    0x32e(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x324(%esp)
		add    0x328(%esp),%edx
		movswl %cx,%eax
		mov    %edx,0x328(%esp)
		add    0x324(%esp),%eax
		mov    0x328(%esp),%edx
		call   func_5ee51
		mov    %ebp,%eax
		mov    0x340(%esp),%edx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%dx
		jge    jump_3456c
		mov    0x340(%esp),%al
		add    $0x6,%al
		mov    %al,0x64(%ebp)
		cmp    $0x1,%dx
		jne    jump_34569
		mov    0x330(%esp),%eax
		add    $0x10,%eax
		sub    $0x8,%ecx
		mov    %ax,0x330(%esp)
		jmp    jump_3456c
	jump_34569:
		sub    $0x4,%ecx
	jump_3456c:
		cmpw   $0x4,0x340(%esp)
		jne    jump_34581
		mov    $0x33,%eax
		call   func_4f4cd
	jump_34581:
		mov    0x340(%esp),%edx
		inc    %edx
		mov    %dx,0x340(%esp)
		cmp    $0x7,%dx
		jl     jump_344a1
		movb   $0xe9,0x66(%ebp)
		mov    $0x33,%eax
		movb   $0x8,0x64(%ebp)
		call   func_4f4cd
		xor    %eax,%eax
		mov    $0xffffffe1,%ecx
		mov    %ax,0x340(%esp)
	jump_345bc:
		mov    $0x5dc0,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5e9d0
		call   func_44dcc
		movswl %di,%eax
		mov    %eax,0x328(%esp)
		mov    0x328(%esp),%edx
		movswl %cx,%eax
		add    %eax,%edx
		mov    %edx,0x328(%esp)
		mov    data_f0e32,%edx
		mov    0x328(%esp),%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_f0e30,%eax
		sar    $0x10,%eax
		mov    %eax,0x328(%esp)
		movswl %si,%eax
		add    $0x9,%eax
		add    0x328(%esp),%eax
		mov    data_f0e36,%ebx
		call   func_5ee51
		mov    %ebp,%eax
		mov    0x340(%esp),%ebx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		test   %bx,%bx
		jne    jump_3464b
		mov    0x66(%ebp),%ah
		dec    %ah
		dec    %ecx
		mov    %ah,0x66(%ebp)
	jump_3464b:
		mov    0x340(%esp),%ebx
		inc    %ebx
		mov    %bx,0x340(%esp)
		cmp    $0x3,%bx
		jl     jump_345bc
		mov    $0x46,%ebx
		mov    $0x11,%edx
		mov    $0x3,%eax
		call   func_6106c
		mov    $0x35,%eax
		call   func_4f4cd
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x33c(%esp)
		movsbl 0x1(%ebp),%eax
		xor    %edx,%edx
		call   func_10988
		sub    $0x2,%eax
		mov    %dx,0x340(%esp)
		mov    %ax,0x338(%esp)
	jump_346b7:
		mov    $0x5dc0,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x33e(%esp),%ecx
		call   func_5e9d0
		sar    $0x10,%ecx
		call   func_44dcc
		lea    0xc(%ecx),%eax
		imul   $0xc,%eax,%eax
		mov    0x336(%esp),%edx
		add    $data_f0daa,%eax
		sar    $0x10,%edx
		mov    0x4(%eax),%edi
		mov    0x8(%eax),%ebx
		sar    $0x10,%edi
		mov    0x2(%eax),%eax
		add    %edi,%edx
		mov    0x33a(%esp),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		add    $0xc,%edx
		add    %edi,%eax
		add    $0xe,%ecx
		call   func_5ee51
		imul   $0xc,%ecx,%eax
		add    $data_f0daa,%eax
		mov    0x338(%esp),%edx
		mov    0x340(%esp),%edi
		mov    0x6(%eax),%cx
		mov    0x8(%eax),%ebx
		add    %ecx,%edx
		mov    0x33c(%esp),%ecx
		mov    0x4(%eax),%si
		mov    %ecx,%eax
		inc    %edi
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		mov    %di,0x340(%esp)
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%di
		jl     jump_346b7
		mov    $0x9,%eax
		call   func_1033b
		mov    $0x3,%eax
		call   func_6104a
		mov    $0x1,%eax
		xor    %esi,%esi
		call   func_5ecc7
	jump_34785:
		mov    $0x3,%eax
		mov    $0x5dc0,%ebx
		call   func_499bd
		dec    %eax
		xor    %edx,%edx
		mov    %ax,data_ba838
		xor    %eax,%eax
		call   func_5e9d0
		mov    %esi,%eax
		xor    %ah,%ah
		xor    %ecx,%ecx
		and    $0x1,%al
		mov    %cx,0x340(%esp)
		mov    %ax,0x334(%esp)
	jump_347bc:
		mov    0x33e(%esp),%edi
		sar    $0x10,%edi
		lea    0x12(%edi),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ecx
		add    %eax,%ecx
		mov    0x4(%ecx),%eax
		sar    $0x10,%eax
		mov    %eax,0x328(%esp)
		mov    0x336(%esp),%eax
		mov    0x328(%esp),%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    %edx,0x328(%esp)
		mov    0x332(%esp),%edx
		mov    0x328(%esp),%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%eax
		mov    %eax,0x328(%esp)
		mov    0x33a(%esp),%eax
		sar    $0x10,%eax
		mov    0x8(%ecx),%ebx
		add    0x328(%esp),%eax
		call   func_5ee51
		mov    $0x2,%eax
		call   func_499bd
		mov    %eax,%ebx
		cmp    $0x24,%si
		jge    jump_34889
		mov    %edi,%edx
		shl    $0x2,%edx
		mov    0x300(%esp,%edx,1),%di
		test   %di,%di
		jle    jump_3485d
		add    %ax,0x4(%ecx)
		jmp    jump_34863
	jump_3485d:
		je     jump_34863
		sub    %ax,0x4(%ecx)
	jump_34863:
		mov    0x33e(%esp),%edx
		sar    $0x10,%edx
		shl    $0x2,%edx
		mov    0x302(%esp,%edx,1),%ax
		test   %ax,%ax
		jle    jump_34883
		add    %bx,0x6(%ecx)
		jmp    jump_34889
	jump_34883:
		je     jump_34889
		sub    %bx,0x6(%ecx)
	jump_34889:
		mov    0x340(%esp),%ebx
		test   %bx,%bx
		jne    jump_34920
		mov    $0x78,%ecx
		mov    $0x4e,%ebx
		mov    $0x4c,%eax
		xor    %edx,%edx
		call   func_5edde
		mov    %esi,%eax
		neg    %eax
		mov    data_f0ef6,%ebx
		movswl %ax,%ecx
		mov    $0x8c,%eax
		mov    %ecx,%edx
		call   func_308a3
		mov    $0xc8,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		cmp    $0xc,%si
		jle    jump_34adf
		mov    $0x1e,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		mov    $0x78,%ecx
		mov    $0x57,%ebx
		mov    $0x53,%eax
		xor    %edx,%edx
		call   func_5edde
		mov    $0x78,%ecx
		mov    $0x102,%ebx
		mov    $0xfe,%eax
		jmp    jump_34ad8
	jump_34920:
		cmp    $0x3,%bx
		jne    jump_34a1b
		call   func_44dcc
		mov    $0x4,%eax
		call   func_499bd
		cwtl
		add    $0xe,%eax
		imul   $0xc,%eax,%ecx
		add    $data_f0daa,%ecx
		mov    0x338(%esp),%eax
		add    0x6(%ecx),%ax
		mov    0x4(%ecx),%di
		movswl %ax,%edx
		mov    0x33c(%esp),%eax
		add    %edi,%eax
		mov    0x8(%ecx),%ebx
		cwtl
		call   func_5efb9
		mov    %esi,%eax
		neg    %eax
		mov    data_f0eea,%ebx
		movswl %ax,%ecx
		mov    $0x1e,%eax
		mov    %ecx,%edx
		call   func_308a3
		mov    $0x46,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		mov    $0x10e,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		mov    $0x32,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		mov    $0xbe,%eax
		mov    data_f0eea,%ebx
		mov    %ecx,%edx
		call   func_308a3
		cmp    $0x2,%si
		jle    jump_349fd
		mov    $0x96,%ecx
		mov    $0x7f,%ebx
		mov    $0x7d,%eax
		xor    %edx,%edx
		call   func_5edde
		mov    $0x96,%ecx
		mov    $0xf0,%ebx
		mov    $0xe2,%eax
		xor    %edx,%edx
		call   func_5edde
	jump_349fd:
		cmp    $0xf,%si
		jle    jump_34adf
		mov    $0x96,%ecx
		mov    $0x7c,%ebx
		mov    $0x77,%eax
		jmp    jump_34ad8
	jump_34a1b:
		cmp    $0x5,%bx
		jne    jump_34adf
		mov    %esi,%eax
		neg    %eax
		mov    data_f0ede,%ebx
		movswl %ax,%ecx
		mov    $0xbc,%eax
		mov    %ecx,%edx
		call   func_308a3
		mov    $0x5a,%eax
		mov    data_f0ede,%ebx
		mov    %ecx,%edx
		call   func_308a3
		cmp    $0x6,%si
		jle    jump_34a82
		mov    $0xbe,%ecx
		mov    $0xac,%ebx
		mov    $0x9a,%eax
		xor    %edx,%edx
		call   func_5edde
		mov    $0xc8,%ecx
		mov    $0x12c,%ebx
		mov    $0x120,%eax
		xor    %edx,%edx
		call   func_5edde
	jump_34a82:
		cmp    $0x18,%si
		jle    jump_34adf
		mov    %esi,%eax
		neg    %eax
		mov    data_f0ef6,%ebx
		movswl %ax,%ecx
		mov    $0x64,%eax
		mov    %ecx,%edx
		call   func_308a3
		mov    $0xe6,%eax
		mov    data_f0ef6,%ebx
		mov    %ecx,%edx
		call   func_308a3
		mov    $0xc8,%ecx
		mov    $0x38,%ebx
		mov    $0x2b,%eax
		xor    %edx,%edx
		call   func_5edde
		mov    $0xc8,%ecx
		mov    $0xda,%ebx
		mov    $0xd8,%eax
	jump_34ad8:
		xor    %edx,%edx
		call   func_5edde
	jump_34adf:
		mov    0x340(%esp),%edx
		inc    %edx
		mov    %dx,0x340(%esp)
		cmp    $0x7,%dx
		jl     jump_347bc
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3a,%si
		jle    jump_34b18
		mov    $0x24,%edx
		mov    $0x10,%eax
		call   func_307a6
	jump_34b18:
		cmp    $0xa,%si
		jne    jump_34b28
		mov    $0x34,%eax
		call   func_4f4cd
	jump_34b28:
		movswl %si,%edx
		mov    $0xc,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_34b45
		mov    $0x33,%eax
		call   func_4f4cd
	jump_34b45:
		inc    %esi
		cmp    $0x40,%si
		jl     jump_34785
		xor    %ebx,%ebx
		mov    %bx,0x340(%esp)
	jump_34b5a:
		mov    0x33e(%esp),%edi
		sar    $0x10,%edi
		lea    (%edi,%edi,2),%edi
		mov    $data_12827c,%esi
		lea    (%esp,%edi,1),%edi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x340(%esp),%esi
		inc    %esi
		mov    %si,0x340(%esp)
		cmp    $0x100,%si
		jl     jump_34b5a
		mov    %esp,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_5ecc7
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    %ax,data_ba838
		call   func_44d75
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		mov    $data_12824c,%ecx
		call   func_11e04
		call   func_45559
		push   $0xa
		lea    0x4(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_49a3e
		mov    0x32c(%esp),%al
		mov    $0x2,%ebx
		mov    %al,0x63(%ebp)
		mov    %ebp,%eax
		mov    $0x4e20,%edx
		call   func_12124
		mov    %ebp,%eax
		call   func_2caf7
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%ebx
	jump_34c07:
		mov    %ebx,%eax
		add    $0x344,%esp
		jmp    jump_30f5a
.data
data_34c14:
		.ascii  "\x14\x00\x00\x00\x1e\x00\x0a\x00"
data_34c1c:
		.ascii  "\x08\x00\x05\x00\xfb\xff\x28\x00"
data_34c24:
		.ascii  "\x20\x00\xfb\xff\xe2\xff\xfb\xff"
data_34c2c:
		.ascii  "\x07\x05\x08\x09"
data_34c30:
		.ascii  "\x14\x00\x00\x00\x1e\x00\x0a\x00"
data_34c38:
		.ascii  "\x01\x00\x02\x00\x03\x00\x08\x00"
		.ascii  "\x09\x00\x04\x00\x05\x00\x06\x00"
.text


/*----------------------------------------------------------------*/
func_34c48:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		lea    0x10(%esp),%ebx
		mov    0x60(%eax),%ecx
		lea    0x4(%esp),%edx
		sar    $0x18,%ecx
		call   func_1a1de
		push   $0x3
		mov    0x12(%esp),%edx
		mov    0x6(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    $0x1,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_34c8f:
		lea    0x10(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_34cbc
		mov    0xe(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_34c8f
	jump_34cbc:
		cmpw   $0x0,data_f0b9e
		jne    jump_34cd0
		mov    $0xffffffff,%eax
		jmp    jump_35550
	jump_34cd0:
		mov    $data_77a90,%eax
		call   func_1fea4
		call   func_103a8
		mov    $0x5,%eax
		call   func_1033b
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		sub    $0x4,%eax
		xor    %edx,%edx
		mov    %ax,0x10(%esp)
		jmp    jump_34d20
	jump_34d10:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_34d20:
		cmp    data_f0b9e,%dx
		jl     jump_34d10
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		mov    $data_12824c,%ebx
		call   func_30824
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %edx,%edx
		jmp    jump_34d72
	jump_34d62:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_34d72:
		cmp    data_f0b9e,%dx
		jl     jump_34d62
		xor    %edx,%edx
		mov    %edx,0x14(%esp)
	jump_34d81:
		mov    0x63(%esi),%bh
		cmp    $0x1,%bh
		jne    jump_34d97
		mov    $0x8,%eax
		xor    %edi,%edi
		mov    %ax,0x8(%esp)
		jmp    jump_34dd6
	jump_34d97:
		cmp    $0x3,%bh
		jne    jump_34dad
		mov    $0x8,%ecx
		mov    $0x11,%edi
		mov    %cx,0x8(%esp)
		jmp    jump_34dd6
	jump_34dad:
		test   %bh,%bh
		jne    jump_34dc2
		mov    $0x7,%ebx
		mov    $0x22,%edi
		mov    %bx,0x8(%esp)
		jmp    jump_34dd6
	jump_34dc2:
		cmp    $0x2,%bh
		jne    jump_34dd6
		mov    $0x7,%edx
		mov    $0x3c,%edi
		mov    %dx,0x8(%esp)
	jump_34dd6:
		mov    $0x1,%eax
		movb   $0x5,0x64(%esi)
		call   func_4f4cd
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		mov    $0x24,%ecx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		call   func_499e4
		call   func_499e4
		movb   $0x6,0x64(%esi)
		jmp    jump_34f27
	jump_34e23:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		movswl %di,%eax
		add    %ebx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		test   %di,%di
		jne    jump_34e84
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    %edx,(%esp)
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		mov    (%esp),%ebp
		sub    $0x3,%edx
		mov    0x8(%eax),%ebx
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		mov    0x2(%eax),%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		sub    $0x20,%ebp
	jump_34e7d:
		add    %ebp,%eax
		jmp    jump_34f17
	jump_34e84:
		cmp    $0x11,%di
		jne    jump_34ebd
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		mov    %edx,(%esp)
		sar    $0x10,%eax
		mov    0xe(%esp),%edx
		mov    (%esp),%ebp
		mov    %eax,(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    $0x3,%edx
		add    $0x1e,%eax
		add    %ebp,%edx
		add    (%esp),%eax
		jmp    jump_34f17
	jump_34ebd:
		cmp    $0x22,%di
		jne    jump_34eed
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    %edx,(%esp)
		mov    0xe(%esp),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    (%esp),%ebp
		add    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		jmp    jump_34e7d
	jump_34eed:
		cmp    $0x3c,%di
		jne    jump_34f1c
		mov    0xe(%esp),%ebp
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		sar    $0x10,%ebp
		sar    $0x10,%edx
		sub    $0x10,%ebp
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %ebp,%eax
	jump_34f17:
		call   func_5ee51
	jump_34f1c:
		call   func_5e9e8
		call   func_499e4
		inc    %ecx
	jump_34f27:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %cx,%ebx
		add    $0x24,%eax
		cmp    %eax,%ebx
		jle    jump_34e23
		test   %di,%di
		jne    jump_34f67
		xor    %edx,%edx
		jmp    jump_34f58
	jump_34f45:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%ch
		dec    %ch
		inc    %edx
		mov    %ch,0x65(%eax)
	jump_34f58:
		cmp    data_f0b9e,%dx
		jge    jump_34fdd
		jmp    jump_34f45
	jump_34f67:
		cmp    $0x11,%di
		jne    jump_34f8f
		xor    %edx,%edx
		jmp    jump_34f84
	jump_34f71:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%cl
		inc    %cl
		inc    %edx
		mov    %cl,0x65(%eax)
	jump_34f84:
		cmp    data_f0b9e,%dx
		jge    jump_34fdd
		jmp    jump_34f71
	jump_34f8f:
		cmp    $0x22,%di
		jne    jump_34fb7
		xor    %edx,%edx
		jmp    jump_34fac
	jump_34f99:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x66(%eax),%bh
		inc    %bh
		inc    %edx
		mov    %bh,0x66(%eax)
	jump_34fac:
		cmp    data_f0b9e,%dx
		jge    jump_34fdd
		jmp    jump_34f99
	jump_34fb7:
		cmp    $0x3c,%di
		jne    jump_34fdd
		xor    %edx,%edx
		jmp    jump_34fd4
	jump_34fc1:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x66(%eax),%bl
		dec    %bl
		inc    %edx
		mov    %bl,0x66(%eax)
	jump_34fd4:
		cmp    data_f0b9e,%dx
		jl     jump_34fc1
	jump_34fdd:
		mov    $0x14,%eax
		call   func_4f4cd
		xor    %ebx,%ebx
	jump_34fe9:
		movb   $0x7,0x64(%esi)
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		test   %bx,%bx
		jne    jump_35023
		mov    $0x1,%eax
		call   func_4f4cd
	jump_35023:
		inc    %ebx
		cmp    $0x3,%bx
		jl     jump_34fe9
		mov    0x63(%esi),%al
		movb   $0x8,0x64(%esi)
		cmp    $0x1,%al
		jne    jump_3503e
	jump_35035:
		movw   $0x7,0x8(%esp)
		jmp    jump_35051
	jump_3503e:
		cmp    $0x3,%al
		je     jump_35035
		test   %al,%al
		je     jump_3504a
		cmp    $0x2,%al
		jne    jump_35051
	jump_3504a:
		movw   $0x8,0x8(%esp)
	jump_35051:
		mov    $0x2d,%ecx
		jmp    jump_3515d
	jump_3505b:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		movswl %di,%eax
		add    %ebx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		test   %di,%di
		jne    jump_350ba
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    %edx,(%esp)
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		mov    (%esp),%ebp
		inc    %edx
		mov    0x8(%eax),%ebx
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		mov    0x2(%eax),%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		sub    $0x12,%ebp
	jump_350b3:
		add    %ebp,%eax
		jmp    jump_3514d
	jump_350ba:
		cmp    $0x11,%di
		jne    jump_350ed
		mov    0xe(%esp),%ebp
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebp
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		add    $0x6,%ebp
		mov    %eax,(%esp)
		mov    0x2(%esp),%eax
		add    %ebp,%edx
		sar    $0x10,%eax
		mov    (%esp),%ebp
		add    $0x14,%eax
		jmp    jump_350b3
	jump_350ed:
		cmp    $0x22,%di
		jne    jump_35123
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		mov    %edx,(%esp)
		sar    $0x10,%eax
		mov    0xe(%esp),%edx
		mov    (%esp),%ebp
		mov    %eax,(%esp)
		sar    $0x10,%edx
		mov    0x2(%esp),%eax
		add    $0x1c,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    (%esp),%eax
		jmp    jump_3514d
	jump_35123:
		cmp    $0x3c,%di
		jne    jump_35152
		mov    0xe(%esp),%ebp
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		sar    $0x10,%ebp
		sar    $0x10,%edx
		sub    $0x1e,%ebp
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %ebp,%eax
	jump_3514d:
		call   func_5ee51
	jump_35152:
		call   func_5e9e8
		call   func_499e4
		inc    %ecx
	jump_3515d:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movswl %cx,%ebx
		add    $0x2d,%eax
		cmp    %eax,%ebx
		jle    jump_3505b
		test   %di,%di
		jne    jump_3519d
		xor    %edx,%edx
		jmp    jump_3518e
	jump_3517b:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%ch
		dec    %ch
		inc    %edx
		mov    %ch,0x65(%eax)
	jump_3518e:
		cmp    data_f0b9e,%dx
		jge    jump_35213
		jmp    jump_3517b
	jump_3519d:
		cmp    $0x11,%di
		jne    jump_351c5
		xor    %edx,%edx
		jmp    jump_351ba
	jump_351a7:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%cl
		inc    %cl
		inc    %edx
		mov    %cl,0x65(%eax)
	jump_351ba:
		cmp    data_f0b9e,%dx
		jge    jump_35213
		jmp    jump_351a7
	jump_351c5:
		cmp    $0x22,%di
		jne    jump_351ed
		xor    %edx,%edx
		jmp    jump_351e2
	jump_351cf:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x66(%eax),%bh
		inc    %bh
		inc    %edx
		mov    %bh,0x66(%eax)
	jump_351e2:
		cmp    data_f0b9e,%dx
		jge    jump_35213
		jmp    jump_351cf
	jump_351ed:
		cmp    $0x3c,%di
		jne    jump_35213
		xor    %edx,%edx
		jmp    jump_3520a
	jump_351f7:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x66(%eax),%bl
		dec    %bl
		inc    %edx
		mov    %bl,0x66(%eax)
	jump_3520a:
		cmp    data_f0b9e,%dx
		jl     jump_351f7
	jump_35213:
		xor    %ebx,%ebx
	jump_35215:
		movb   $0x9,0x64(%esi)
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		inc    %ebx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%bx
		jl     jump_35215
		mov    0x14(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x14(%esp)
		cmp    $0x3,%bx
		jl     jump_34d81
		mov    0x63(%esi),%ah
		cmp    $0x1,%ah
		jne    jump_35266
		xor    %edi,%edi
		jmp    jump_35287
	jump_35266:
		cmp    $0x3,%ah
		jne    jump_35272
		mov    $0x9,%edi
		jmp    jump_35287
	jump_35272:
		test   %ah,%ah
		jne    jump_3527d
		mov    $0x12,%edi
		jmp    jump_35287
	jump_3527d:
		cmp    $0x2,%ah
		jne    jump_35287
		mov    $0x1b,%edi
	jump_35287:
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x10(%esp)
		mov    $0x32,%eax
		call   func_4f4cd
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
	jump_352bb:
		xor    %ecx,%ecx
	jump_352bd:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0xa(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0xe(%esp),%ebp
		sar    $0x10,%ebp
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x2(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		inc    %ecx
		add    %ebp,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_352bd
		mov    0xc(%esp),%eax
		inc    %eax
		mov    %ax,0xc(%esp)
		cmp    $0x8,%ax
		jle    jump_352bb
		xor    %ecx,%ecx
		jmp    jump_35346
	jump_35332:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%dl
		add    $0x5,%dl
		inc    %ecx
		mov    %dl,0x65(%eax)
	jump_35346:
		cmp    data_f0b9e,%cx
		jl     jump_35332
		xor    %ecx,%ecx
	jump_35351:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		mov    0xe(%esp),%ebp
		sar    $0x10,%ebp
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		mov    %eax,(%esp)
		mov    0x2(%esp),%eax
		mov    (%esp),%ebp
		sar    $0x10,%eax
		add    %ebp,%eax
		call   func_5ee51
		xor    %edx,%edx
		jmp    jump_353b7
	jump_353a3:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bh
		sub    $0xa,%bh
		inc    %edx
		mov    %bh,0x65(%eax)
	jump_353b7:
		cmp    data_f0b9e,%dx
		jl     jump_353a3
		call   func_5e9e8
		call   func_499e4
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%eax
		inc    %eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		mov    %edx,(%esp)
		sar    $0x10,%eax
		mov    0xe(%esp),%edx
		mov    (%esp),%ebp
		mov    %eax,(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    (%esp),%eax
		call   func_5ee51
		xor    %edx,%edx
		jmp    jump_35434
	jump_35420:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bl
		add    $0xa,%bl
		inc    %edx
		mov    %bl,0x65(%eax)
	jump_35434:
		cmp    data_f0b9e,%dx
		jl     jump_35420
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x2,%cx
		jle    jump_35351
		movb   $0x4,0x64(%esi)
		xor    %edx,%edx
		jmp    jump_3546e
	jump_3545a:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bl
		sub    $0x5,%bl
		inc    %edx
		mov    %bl,0x65(%eax)
	jump_3546e:
		cmp    data_f0b9e,%dx
		jl     jump_3545a
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_44d75
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		xor    %edx,%edx
		jmp    jump_354b6
	jump_354a6:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_354b6:
		cmp    data_f0b9e,%dx
		jl     jump_354a6
		xor    %eax,%eax
		mov    %ax,0x18(%esp)
		xor    %ebp,%ebp
		jmp    jump_35528
	jump_354ca:
		mov    0x16(%esp),%edi
		mov    %ebp,%ecx
		mov    %ebp,%ebx
		sar    $0x10,%edi
		mov    %esi,%eax
		mov    data_f0648(,%edi,4),%edx
		call   func_1d770
		shl    $0x2,%eax
		lea    0x1770(%eax),%edx
		mov    %esi,%eax
		call   func_2caca
		mov    %eax,%ecx
		mov    %ebp,%ebx
		mov    %ecx,%edx
		mov    data_f0648(,%edi,4),%eax
		call   func_45bfb
		mov    data_f0648(,%edi,4),%eax
		sub    %ecx,0x48(%eax)
		mov    %ebp,%ebx
		mov    0x60(%esi),%edx
		mov    data_f0648(,%edi,4),%eax
		sar    $0x18,%edx
		call   func_45ed2
		incw   0x18(%esp)
	jump_35528:
		mov    0x18(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_354ca
		call   func_287af
		mov    %esi,%eax
		call   func_1ed45
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%eax
	jump_35550:
		add    $0x1c,%esp
	jump_35553:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3555a:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		cmpb   $0x0,(%eax)
		jle    jump_35589
		mov    data_f0648,%eax
		call   func_1214f
		testb  $0x1,(%edx)
		je     jump_3557c
		mov    data_f0648,%eax
		addb   $0x6,0x65(%eax)
		jmp    jump_35585
	jump_3557c:
		mov    data_f0648,%eax
		subb   $0x6,0x65(%eax)
	jump_35585:
		decb   (%edx)
		pop    %edx
		ret
	jump_35589:
		mov    data_f0648,%eax
		movb   $0x0,0x65(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_35594:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,0x10(%esp)
		mov    %ecx,0x14(%esp)
		lea    0x4(%esp),%edi
		mov    0x2d(%esp),%eax
		mov    $data_34c14,%esi
		sar    $0x18,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x4(%esp,%eax,2),%al
		xor    %esi,%esi
		mov    %al,0x30(%esp)
	jump_355c1:
		mov    (%esp),%edx
		movswl %si,%eax
		add    %eax,%edx
		cmpb   $0x0,(%edx)
		jle    jump_356c7
		add    %eax,%eax
		mov    0x10(%esp),%ecx
		lea    (%eax,%ebp,1),%ebx
		add    %ecx,%eax
		mov    (%edx),%cl
		cmp    $0x4,%cl
		jle    jump_35616
		mov    0x2d(%esp),%edx
		sar    $0x18,%edx
		imul   $0xc,%edx,%edx
		add    $data_f0daa,%edx
		movswl (%eax),%eax
		mov    0x4(%edx),%edi
		movswl (%ebx),%ebx
		sar    $0x10,%edi
		add    %eax,%edi
		mov    0x2(%edx),%eax
		mov    0x8(%edx),%ecx
		sar    $0x10,%eax
		mov    %edi,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		jmp    jump_3569b
	jump_35616:
		cmp    $0x2,%cl
		jle    jump_35661
		mov    0x2d(%esp),%edx
		sar    $0x18,%edx
		inc    %edx
		imul   $0xc,%edx,%edx
		movswl (%eax),%eax
		add    $data_f0daa,%edx
		mov    %eax,0xc(%esp)
		mov    0x4(%edx),%eax
		mov    0xc(%esp),%edi
		sar    $0x10,%eax
		movswl (%ebx),%ebx
		add    %edi,%eax
		mov    0x2(%edx),%edi
		mov    0x8(%edx),%ecx
		sar    $0x10,%edi
		mov    %eax,%edx
		add    %ebx,%edi
		mov    %ecx,%ebx
		mov    %edi,%eax
		call   func_5ee51
		mov    0x2c(%esp),%eax
		movb   $0x4,(%eax)
		jmp    jump_356a0
	jump_35661:
		mov    0x2d(%esp),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		imul   $0xc,%edx,%edx
		movswl (%eax),%eax
		add    $data_f0daa,%edx
		mov    %eax,0xc(%esp)
		mov    0x4(%edx),%eax
		mov    0xc(%esp),%ecx
		sar    $0x10,%eax
		movswl (%ebx),%ebx
		add    %ecx,%eax
		mov    0x2(%edx),%ecx
		mov    0x8(%edx),%edi
		sar    $0x10,%ecx
		mov    %eax,%edx
		add    %ebx,%ecx
		mov    %edi,%ebx
		mov    %ecx,%eax
	jump_3569b:
		call   func_5ee51
	jump_356a0:
		movswl %si,%ebx
		lea    (%ebx,%ebx,1),%edx
		mov    0x14(%esp),%ecx
		mov    (%edx,%ebp,1),%di
		mov    0x10(%esp),%eax
		add    %ecx,%edi
		add    %edx,%eax
		mov    %di,(%edx,%ebp,1)
		mov    0x28(%esp),%edx
		add    %dx,(%eax)
		mov    (%esp),%eax
		decb   (%ebx,%eax,1)
	jump_356c7:
		inc    %esi
		cmp    $0xa,%si
		jl     jump_355c1
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0xc


/*----------------------------------------------------------------*/
func_356db:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x78,%esp
		mov    %eax,%ebp
		lea    0x3c(%esp),%edi
		mov    $data_34c1c,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x44(%esp),%edi
		mov    $data_34c24,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_34c2c,%eax
		lea    0x34(%esp),%edi
		mov    $data_34c30,%esi
		mov    %eax,0x4c(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		xor    %ah,%ah
		mov    data_f14d8,%dx
		mov    %ah,0x74(%esp)
		cmp    $0x1,%dx
		jne    jump_3575b
		mov    $0x7,%edx
		mov    %ebp,%eax
		call   func_2ea0c
		test   %eax,%eax
		jne    jump_3573d
	jump_35733:
		mov    $0xffffffff,%eax
		jmp    jump_35fba
	jump_3573d:
		mov    data_f0648,%edx
		movsbw (%edx),%ax
		mov    %ax,0x58(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0x54(%esp)
		jmp    jump_3583d
	jump_3575b:
		call   func_13f8a
		push   $0x7
		mov    $0x1,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1a452
		lea    0x54(%esp),%edx
		lea    0x58(%esp),%eax
		call   func_1a552
	jump_35787:
		lea    0x54(%esp),%edx
		lea    0x58(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_357ca
		mov    0x52(%esp),%edx
		mov    0x56(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1093d
		test   %al,%al
		je     jump_357ca
		mov    0x52(%esp),%edx
		mov    0x56(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_35787
	jump_357ca:
		mov    $0x1,%eax
		xor    %ebx,%ebx
		call   func_44d67
		mov    %bx,data_f0b9e
	jump_357dd:
		lea    0x54(%esp),%edx
		lea    0x58(%esp),%eax
		mov    %ebp,%ebx
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_35800
		xor    %eax,%eax
		call   func_44d67
		jmp    jump_35733
	jump_35800:
		mov    0x52(%esp),%edx
		mov    0xb(%ebp),%ebx
		mov    0x56(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		test   %ax,%ax
		je     jump_357dd
		mov    0x52(%esp),%edx
		mov    0x56(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_357dd
		xor    %eax,%eax
		call   func_44d67
	jump_3583d:
		xor    %ecx,%ecx
		mov    0x63(%ebp),%dl
		mov    %cx,0x64(%esp)
		mov    %cx,0x68(%esp)
		cmp    $0x1,%dl
		jne    jump_358a0
		movsbl 0x0(%ebp),%eax
		call   func_10971
		movswl %ax,%edx
		mov    0x3c(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    0x56(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		cwtl
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		mov    $0xfffffff8,%ebx
		mov    $0xb,%esi
		mov    %cx,0x70(%esp)
		mov    %bx,0x6c(%esp)
		mov    %si,0x64(%esp)
		jmp    jump_35996
	jump_358a0:
		cmp    $0x3,%dl
		jne    jump_358f6
		mov    0x56(%esp),%eax
		mov    $0xb,%edx
		sar    $0x10,%eax
		mov    %dx,0x64(%esp)
		call   func_10971
		movswl %ax,%edx
		movsbl 0x0(%ebp),%eax
		call   func_10971
		cwtl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x40(%esp),%edx
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		mov    $0x8,%edi
		mov    %cx,0x70(%esp)
		mov    %di,0x6c(%esp)
		jmp    jump_35996
	jump_358f6:
		cmp    $0x2,%dl
		jne    jump_35949
		movsbl 0x1(%ebp),%eax
		call   func_10988
		mov    0x46(%esp),%ebx
		cwtl
		sar    $0x10,%ebx
		add    %eax,%ebx
		mov    0x52(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		movswl %ax,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		mov    $0xd,%esi
		mov    %cx,0x6c(%esp)
		mov    $0xfffffff8,%ecx
		mov    %si,0x68(%esp)
		mov    %cx,0x70(%esp)
		jmp    jump_35996
	jump_35949:
		test   %dl,%dl
		jne    jump_3599b
		movw   $0x8,0x70(%esp)
		mov    0x52(%esp),%eax
		mov    $0xd,%edx
		sar    $0x10,%eax
		mov    %dx,0x68(%esp)
		call   func_10988
		movswl %ax,%edx
		movsbl 0x1(%ebp),%eax
		call   func_10988
		cwtl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		mov    %cx,0x6c(%esp)
	jump_35996:
		mov    %ax,0x50(%esp)
	jump_3599b:
		mov    0x50(%esp),%edi
		add    $0x4,%edi
		xor    %eax,%eax
		mov    %di,0x50(%esp)
	jump_359a9:
		movswl %ax,%edx
		xor    %cl,%cl
		inc    %eax
		mov    %cl,0x28(%esp,%edx,1)
		cmp    $0xa,%ax
		jl     jump_359a9
		mov    $data_77a9a,%eax
		call   func_1fea4
		call   func_103a8
		mov    %ebp,%ebx
		movsbw 0x63(%ebp),%ax
		movsbl 0x1(%ebp),%edx
		mov    %ax,0x60(%esp)
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		mov    %ebp,%eax
		call   func_2cba1
		mov    $0x5,%eax
		call   func_1033b
		mov    $0x1,%eax
		mov    $0x3,%edx
		call   func_44d6e
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_200de
	jump_35a0a:
		mov    $0xa,%edx
		xor    %eax,%eax
		call   func_30824
		inc    %ebx
		call   func_499e4
		cmp    $0x4,%bx
		jl     jump_35a0a
		xor    %edi,%edi
	jump_35a24:
		movw   $0x5,0x5c(%esp)
	jump_35a2b:
		mov    0x5c(%esp),%al
		xor    %esi,%esi
		mov    %al,0x64(%ebp)
	jump_35a34:
		lea    0x74(%esp),%eax
		call   func_3555a
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebp,%eax
		call   func_12f2a
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		mov    0x6a(%esp),%ecx
		push   %eax
		lea    0x78(%esp),%eax
		lea    0x18(%esp),%ebx
		push   %eax
		mov    0x76(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		lea    0x8(%esp),%edx
		push   %eax
		lea    0x34(%esp),%eax
		inc    %esi
		call   func_35594
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%si
		jl     jump_35a34
		mov    0x5c(%esp),%ebx
		inc    %ebx
		mov    %bx,0x5c(%esp)
		cmp    $0x6,%bx
		jle    jump_35a2b
		mov    $0x32,%eax
		xor    %esi,%esi
		call   func_4f4cd
		mov    %si,0x5c(%esp)
		jmp    jump_35b28
	jump_35aba:
		mov    0x5a(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,0x28(%esp,%edx,1)
		jne    jump_35b23
		mov    0x50(%esp),%al
		mov    %al,0x28(%esp,%edx,1)
		mov    0x60(%ebp),%ebx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_10971
		mov    0x3c(%esp,%ebx,2),%bx
		add    %eax,%ebx
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,(%esp,%edx,2)
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%eax
		sar    $0x18,%ebx
		call   func_10988
		mov    0x44(%esp,%ebx,2),%bx
		add    %eax,%ebx
		mov    0x62(%esp),%eax
		sar    $0x10,%eax
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,0x14(%esp,%edx,2)
		jmp    jump_35b30
	jump_35b23:
		incw   0x5c(%esp)
	jump_35b28:
		cmpw   $0xa,0x5c(%esp)
		jl     jump_35aba
	jump_35b30:
		xor    %ebx,%ebx
		mov    %bx,0x5c(%esp)
	jump_35b37:
		lea    0x74(%esp),%eax
		call   func_3555a
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebp,%eax
		call   func_12f2a
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		push   %eax
		lea    0x78(%esp),%eax
		mov    0x6e(%esp),%ecx
		push   %eax
		mov    0x76(%esp),%eax
		lea    0x1c(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		lea    0xc(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_35594
		mov    0x5c(%esp),%ecx
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		mov    %cx,0x5c(%esp)
		cmp    $0x3,%cx
		jl     jump_35b37
		inc    %edi
		cmp    $0x9,%di
		jl     jump_35a24
	jump_35bae:
		cmpw   $0x5,data_ba838
		jne    jump_35bc3
		movw   $0xfffb,data_ba838
		jmp    jump_35bcc
	jump_35bc3:
		movw   $0x5,data_ba838
	jump_35bcc:
		xor    %eax,%eax
		jmp    jump_35bdb
	jump_35bd0:
		movswl %ax,%edx
		cmpb   $0x0,0x28(%esp,%edx,1)
		jne    jump_35be1
		inc    %eax
	jump_35bdb:
		cmp    $0xa,%ax
		jl     jump_35bd0
	jump_35be1:
		cmp    $0xa,%ax
		je     jump_35c48
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		lea    0x74(%esp),%eax
		call   func_3555a
		mov    %ebp,%eax
		call   func_12f2a
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		push   %eax
		lea    0x78(%esp),%eax
		mov    0x6e(%esp),%ecx
		push   %eax
		mov    0x76(%esp),%eax
		lea    0x1c(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		lea    0xc(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_35594
		call   func_5e9e8
		call   func_499e4
		jmp    jump_35bae
	jump_35c48:
		mov    $0x15,%eax
		call   func_4f4cd
		xor    %ecx,%ecx
		mov    $0x5,%esi
		xor    %edi,%edi
	jump_35c5b:
		movswl %cx,%eax
		mov    0x4c(%esp,%eax,1),%al
		mov    %edi,%ebx
		mov    %al,0x64(%ebp)
	jump_35c67:
		cmp    data_ba838,%si
		jne    jump_35c7b
		movw   $0xfffb,data_ba838
		jmp    jump_35c82
	jump_35c7b:
		mov    %si,data_ba838
	jump_35c82:
		test   %cx,%cx
		jne    jump_35c90
		lea    0x74(%esp),%eax
		call   func_3555a
	jump_35c90:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebp,%eax
		inc    %ebx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%bx
		jl     jump_35c67
		inc    %ecx
		cmp    $0x4,%cx
		jl     jump_35c5b
		mov    0x60(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%edx
		call   func_10971
		mov    0x3c(%esp,%edx,2),%dx
		add    %eax,%edx
		mov    %dx,0x58(%esp)
		mov    0x60(%ebp),%edx
		movsbl 0x1(%ebp),%eax
		sar    $0x18,%edx
		call   func_10988
		mov    0x44(%esp,%edx,2),%dx
		add    %eax,%edx
		mov    %dx,0x54(%esp)
		mov    0x60(%ebp),%eax
		sar    $0x18,%eax
		mov    0x34(%esp,%eax,2),%ax
		mov    $0x3,%ecx
		mov    %ax,0x5c(%esp)
		mov    $0xf,%eax
		xor    %esi,%esi
		call   func_1033b
		mov    %si,data_ba838
	jump_35d23:
		mov    0x6c(%esp),%eax
		mov    0x58(%esp),%edi
		mov    0x54(%esp),%edx
		add    %eax,%edi
		add    0x70(%esp),%edx
		mov    data_ba83a,%eax
		mov    %dx,0x54(%esp)
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %di,0x58(%esp)
		call   func_454b3
		mov    0x5a(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x52(%esp),%esi
		add    $data_f0daa,%eax
		sar    $0x10,%esi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %esi,%edx
		mov    0x56(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		call   func_5ee51
		mov    %ebp,%eax
		inc    %ecx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0x6,%cx
		jle    jump_35d23
		mov    $0x33,%eax
		mov    0x50(%esp),%ebx
		call   func_4f4cd
		xor    %ecx,%ecx
		mov    $0x5,%eax
		sub    $0x3,%ebx
		call   func_1033b
		mov    %bx,0x50(%esp)
		jmp    jump_35e4b
	jump_35dcf:
		mov    0x6c(%esp),%eax
		mov    0x58(%esp),%edi
		mov    0x54(%esp),%edx
		add    %eax,%edi
		add    0x70(%esp),%edx
		mov    data_ba83a,%eax
		mov    %dx,0x54(%esp)
		mov    data_ba83c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %di,0x58(%esp)
		call   func_454b3
		mov    %ebp,%eax
		call   func_12f2a
		mov    0x5a(%esp),%eax
		sar    $0x10,%eax
		add    $0x7,%eax
		imul   $0xc,%eax,%eax
		mov    0x52(%esp),%esi
		add    $data_f0daa,%eax
		sar    $0x10,%esi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %esi,%edx
		mov    0x56(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
	jump_35e4b:
		cmp    0x50(%esp),%cx
		jl     jump_35dcf
		xor    %ecx,%ecx
	jump_35e58:
		cmpw   $0x2,data_ba838
		jne    jump_35e6d
		movw   $0xfffe,data_ba838
		jmp    jump_35e76
	jump_35e6d:
		movw   $0x2,data_ba838
	jump_35e76:
		mov    0x6c(%esp),%eax
		mov    0x58(%esp),%ebx
		mov    0x54(%esp),%esi
		mov    data_ba83c,%edx
		add    %eax,%ebx
		mov    0x70(%esp),%eax
		sar    $0x10,%edx
		add    %eax,%esi
		mov    data_ba83a,%eax
		mov    %bx,0x58(%esp)
		sar    $0x10,%eax
		mov    %si,0x54(%esp)
		call   func_454b3
		mov    %ebp,%eax
		mov    0x5a(%esp),%edx
		call   func_12f2a
		movswl %cx,%eax
		sar    $0x10,%edx
		add    $0x8,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x52(%esp),%edx
		mov    0x4(%eax),%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		mov    0x8(%eax),%ebx
		add    %esi,%edx
		mov    0x2(%eax),%esi
		mov    0x56(%esp),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		add    %esi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%cx
		jl     jump_35e58
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %edi,%edi
		xor    %eax,%eax
		mov    %di,data_ba838
		call   func_44d6e
		xor    %eax,%eax
		call   func_5f9ae
		call   func_44d75
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		mov    0x60(%esp),%al
		mov    %al,0x63(%ebp)
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   func_12124
		mov    data_f0648,%eax
		xor    %ebx,%ebx
		call   func_12124
		mov    data_f0648,%edx
		mov    %ebp,%eax
		call   func_1d770
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		lea    0xbb8(%eax),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_2caca
		mov    %eax,%ecx
		mov    data_f0648,%eax
		mov    %ecx,%edx
		call   func_45bfb
		mov    data_f0648,%eax
		sub    %ecx,0x48(%eax)
		xor    %ebx,%ebx
		mov    0x60(%ebp),%edx
		mov    data_f0648,%eax
		sar    $0x18,%edx
		call   func_45ed2
		call   func_287af
		mov    %ebp,%eax
		call   func_1ed45
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%eax
	jump_35fba:
		add    $0x78,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_35fc2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x44,%esp
		push   %eax
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    $0x2,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_35fe6:
		lea    0x18(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_36016
		mov    (%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		mov    0xb(%ebx),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1a1f8
		jmp    jump_35fe6
	jump_36016:
		cmpw   $0x0,data_f0b9e
		jne    jump_3602a
		mov    $0xffffffff,%ebx
		jmp    jump_36527
	jump_3602a:
		mov    $data_77aa4,%eax
		mov    (%esp),%edx
		mov    (%esp),%ebx
		call   func_1fea4
		call   func_103a8
		mov    (%esp),%eax
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		mov    (%esp),%eax
		movsbw 0x63(%eax),%ax
		xor    %ecx,%ecx
		mov    %ax,0x8(%esp)
		mov    %cx,0x1c(%esp)
		jmp    jump_3607c
	jump_36064:
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		incw   0x1c(%esp)
	jump_3607c:
		mov    0x1c(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_36064
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		mov    $0x7,%eax
		call   func_1033b
		mov    (%esp),%eax
		movb   $0x9,0x64(%eax)
		xor    %edi,%edi
		movsbl (%eax),%eax
		mov    %di,0x40(%esp)
		call   func_10971
		mov    %eax,%esi
		mov    (%esp),%eax
		mov    %di,0x44(%esp)
		mov    %edi,0x34(%esp)
		movsbl 0x1(%eax),%eax
		add    $0xb,%esi
		call   func_10988
		mov    %eax,%edx
		mov    %di,0x18(%esp)
		sub    $0x2,%edx
		mov    %eax,%ebx
		mov    %dx,0x3c(%esp)
		mov    %eax,%edx
		mov    %eax,%ecx
		add    $0x12,%edx
		sub    $0x2a,%ebx
		mov    %dx,0x24(%esp)
		mov    %eax,%edx
		sub    $0x165,%eax
		sub    $0xc,%ecx
		mov    %eax,0x2c(%esp)
		mov    %ecx,%eax
		sub    $0x1b,%edx
		xor    %ecx,%eax
		mov    %ecx,0x10(%esp)
		add    %edx,%eax
		mov    %ebx,0xc(%esp)
		mov    %eax,0x14(%esp)
		jmp    jump_3646b
	jump_36122:
		mov    $0x33,%eax
		mov    $0x3,%ecx
		call   func_4f4cd
		mov    %cx,0x1c(%esp)
		jmp    jump_3645a
	jump_3613b:
		mov    (%esp),%edx
		mov    0x1c(%esp),%al
		xor    %ebx,%ebx
		mov    %al,0x63(%edx)
		mov    $0x32,%eax
		mov    %ebx,0x28(%esp)
		call   func_4f4cd
	jump_36155:
		cmpw   $0xb,data_7001c
		jne    jump_3616a
		movw   $0xd,data_7001c
		jmp    jump_36173
	jump_3616a:
		movw   $0xb,data_7001c
	jump_36173:
		cmpw   $0x1,data_ba838
		jne    jump_36188
		movw   $0xffff,data_ba838
		jmp    jump_36191
	jump_36188:
		movw   $0x1,data_ba838
	jump_36191:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    (%esp),%eax
		call   func_12f2a
		mov    0x3e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x3a(%esp),%edx
		add    $data_f0daa,%eax
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%ecx
		mov    0x2(%eax),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		add    %ecx,%edx
		movswl %si,%ecx
		add    %ecx,%eax
		call   func_5ee51
		mov    0x42(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x4(%esp)
		add    $0xa,%eax
		imul   $0xc,%eax,%eax
		mov    0x22(%esp),%ebp
		add    $data_f0daa,%eax
		sar    $0x10,%ebp
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    %ecx,%eax
		call   func_5ee51
		mov    0x4(%esp),%eax
		add    $0xd,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		sub    $0xf,%ebp
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    %ecx,%eax
		call   func_5ee51
		mov    0x10(%esp),%eax
		mov    %eax,0x38(%esp)
		mov    0x14(%esp),%eax
		mov    0xc(%esp),%edi
		mov    %eax,0x20(%esp)
	jump_36253:
		mov    0x34(%esp),%eax
		test   %ax,%ax
		jne    jump_362cc
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%ebp
		lea    0x10(%edx),%ecx
		imul   $0xc,%ecx,%ecx
		add    $data_f0daa,%ecx
		mov    0x38(%esp),%eax
		add    0x6(%ecx),%ax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %esi,%eax
		mov    %ax,0x30(%esp)
		mov    0x2e(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		add    $0x13,%ebp
		call   func_5efb9
		mov    0x20(%esp),%eax
		mov    0x8(%ecx),%ebx
		mov    0x6(%ecx),%dx
		mov    0x4(%ecx),%cx
		add    %edx,%eax
		add    %esi,%ecx
		movswl %ax,%edx
		movswl %cx,%eax
		imul   $0xc,%ebp,%ecx
		add    $data_f0daa,%ecx
		jmp    jump_363b0
	jump_362cc:
		cmp    $0x1,%ax
		jne    jump_36340
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%ebp
		lea    0x13(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ecx
		add    %eax,%ecx
		add    $0x10,%ebp
		mov    0x38(%esp),%eax
		mov    0x8(%ecx),%ebx
		mov    0x6(%ecx),%dx
		mov    0x4(%ecx),%cx
		add    %edx,%eax
		add    %esi,%ecx
		movswl %ax,%edx
		movswl %cx,%eax
		imul   $0xc,%ebp,%ecx
		add    $data_f0daa,%ecx
		call   func_5efb9
		mov    0x20(%esp),%eax
		add    0x6(%ecx),%ax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %esi,%eax
		mov    %ax,0x30(%esp)
		mov    0x2e(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		jmp    jump_363b0
	jump_36340:
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%ebp
		lea    0x10(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ecx
		add    %eax,%ecx
		mov    0x38(%esp),%eax
		add    0x6(%ecx),%ax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %esi,%eax
		mov    %ax,0x30(%esp)
		mov    0x2e(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		add    $0x13,%ebp
		call   func_5efb9
		imul   $0xc,%ebp,%eax
		add    $data_f0daa,%eax
		mov    0x20(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x30(%esp)
		mov    0x4(%eax),%ax
		mov    0x2e(%esp),%edx
		add    %esi,%eax
		sar    $0x10,%edx
		cwtl
	jump_363b0:
		call   func_5efb9
		mov    0x8(%ecx),%ebx
		mov    0x6(%ecx),%ax
		mov    0x4(%ecx),%cx
		add    %edi,%eax
		add    %esi,%ecx
		movswl %ax,%edx
		movswl %cx,%eax
		call   func_5efb9
		mov    0x38(%esp),%eax
		mov    0x20(%esp),%edx
		mov    0x2c(%esp),%ebx
		sub    $0x2d,%edi
		sub    $0x2d,%eax
		sub    $0x2d,%edx
		mov    %eax,0x38(%esp)
		mov    %edx,0x20(%esp)
		cmp    %bx,%di
		jne    jump_36253
		mov    0x40(%esp),%ecx
		inc    %ecx
		mov    %cx,0x40(%esp)
		cmp    $0x8,%cx
		jle    jump_3640c
		movw   $0x1,0x40(%esp)
	jump_3640c:
		mov    0x44(%esp),%edx
		inc    %edx
		mov    %dx,0x44(%esp)
		cmp    $0x2,%dx
		jle    jump_36423
		xor    %ecx,%ecx
		mov    %cx,0x44(%esp)
	jump_36423:
		mov    0x28(%esp),%ecx
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		mov    %ecx,0x28(%esp)
		cmp    $0x3,%cx
		jl     jump_36155
		mov    0x34(%esp),%eax
		inc    %eax
		mov    %eax,0x34(%esp)
		cmp    $0x2,%ax
		jle    jump_36455
		xor    %ebx,%ebx
		mov    %ebx,0x34(%esp)
	jump_36455:
		decw   0x1c(%esp)
	jump_3645a:
		cmpw   $0x0,0x1c(%esp)
		jge    jump_3613b
		incw   0x18(%esp)
	jump_3646b:
		cmpw   $0x6,0x18(%esp)
		jl     jump_36122
		mov    $0xc,%eax
		mov    $data_12824c,%ebx
		xor    %edx,%edx
		mov    %ax,data_7001c
		mov    %dx,data_ba838
		mov    $0xa,%eax
		mov    $0x100,%edx
		call   func_1033b
		xor    %eax,%eax
		call   func_5f9ae
		xor    %ebx,%ebx
		call   func_44d75
		mov    %bx,0x1c(%esp)
		jmp    jump_364cc
	jump_364b4:
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		incw   0x1c(%esp)
	jump_364cc:
		mov    0x1c(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_364b4
		mov    (%esp),%edx
		mov    (%esp),%eax
		mov    (%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11e04
		mov    (%esp),%eax
		mov    (%esp),%edx
		movb   $0x3,0x64(%eax)
		mov    0x8(%esp),%al
		mov    $0x5,%ebx
		mov    %al,0x63(%edx)
		call   func_1ffcd
		xor    %eax,%eax
		mov    $0xbb8,%edx
		call   func_44d6e
		call   func_103a0
		mov    (%esp),%eax
		call   func_2caf7
		mov    $0x1,%ebx
	jump_36527:
		mov    %ebx,%eax
		add    $0x48,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_36531:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		lea    0x10(%esp),%edi
		mov    $data_34c38,%esi
		xor    %ecx,%ecx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
	jump_3654a:
		mov    0x34(%esp),%eax
		movswl %cx,%esi
		cmpb   $0x1,(%esi,%eax,1)
		jne    jump_367da
		mov    0x38(%esp),%edx
		lea    (%esi,%esi,1),%eax
		add    %edx,%eax
		cmpw   $0x4,(%eax)
		jle    jump_3658f
		mov    0x4(%esp),%eax
		shl    $0x2,%esi
		mov    0xc(%esp),%ebx
		flds   (%esi,%eax,1)
		fadds  (%esi,%ebx,1)
		fstps  (%esi,%ebx,1)
		mov    0x8(%esp),%ebx
		mov    (%esp),%edi
		add    %esi,%ebx
		add    %edi,%esi
		flds   (%esi)
		fadds  (%ebx)
		fstps  (%ebx)
	jump_3658f:
		movswl %cx,%esi
		mov    0x38(%esp),%eax
		lea    (%esi,%esi,1),%ebx
		mov    $0x5,%edi
		mov    %esi,%edx
		add    %eax,%ebx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    (%ebx),%di
		dec    %edi
		mov    %di,(%ebx)
		mov    0x10(%esp,%eax,2),%ax
		shl    $0x2,%eax
		test   %di,%di
		jne    jump_365c9
		add    0x34(%esp),%esi
		movb   $0x0,(%esi)
		jmp    jump_3678c
	jump_365c9:
		cmp    $0x7,%di
		jle    jump_365e2
		cwtl
		add    $0xb,%eax
	jump_365d3:
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebp
		add    %eax,%ebp
		jmp    jump_3678c
	jump_365e2:
		jne    jump_365f8
		movswl %ax,%ebp
		add    $0xc,%ebp
		imul   $0xc,%ebp,%ebp
	jump_365ed:
		add    $data_f0daa,%ebp
		jmp    jump_3678c
	jump_365f8:
		cmp    $0x6,%di
		jne    jump_36604
		cwtl
		add    $0xd,%eax
		jmp    jump_365d3
	jump_36604:
		cmp    $0x5,%di
		jne    jump_36613
		cwtl
		add    $0xe,%eax
		imul   $0xc,%eax,%ebp
		jmp    jump_365ed
	jump_36613:
		cmp    $0x4,%di
		jne    jump_36767
		cmpw   $0x1,data_ba838
		jne    jump_36632
		movw   $0xffff,data_ba838
		jmp    jump_3663b
	jump_36632:
		movw   $0x1,data_ba838
	jump_3663b:
		mov    $data_f1032,%ebp
		cmp    $0x5,%cx
		jge    jump_3666b
		mov    0xc(%esp),%ebx
		movswl %cx,%eax
		flds   (%ebx,%eax,4)
		fadds  data_77acd
		fstps  (%ebx,%eax,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%eax,4)
		fadds  data_77ab5
		jmp    jump_36758
	jump_3666b:
		cmp    $0xa,%cx
		jge    jump_36699
		mov    0xc(%esp),%ebx
		movswl %cx,%esi
		flds   (%ebx,%esi,4)
		fadds  data_77ac9
		fstps  (%ebx,%esi,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%esi,4)
		fadds  data_77ab9
	jump_36691:
		fstps  (%ebx,%esi,4)
		jmp    jump_3675b
	jump_36699:
		cmp    $0xf,%cx
		jge    jump_366c1
		mov    0xc(%esp),%ebx
		movswl %cx,%esi
		flds   (%ebx,%esi,4)
		fadds  data_77ac5
		fstps  (%ebx,%esi,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%esi,4)
		fadds  data_77ab1
		jmp    jump_36691
	jump_366c1:
		cmp    $0x14,%cx
		jge    jump_366e2
	jump_366c7:
		movswl %cx,%eax
		mov    0x8(%esp),%ebx
		shl    $0x2,%eax
		flds   (%ebx,%eax,1)
		fadds  data_77ac1
		fstps  (%ebx,%eax,1)
		jmp    jump_3675b
	jump_366e2:
		cmp    $0x19,%cx
		jl     jump_366c7
		cmp    $0x1e,%cx
		jge    jump_36710
		mov    0xc(%esp),%ebx
		movswl %cx,%eax
		flds   (%ebx,%eax,4)
		fadds  data_77abd
		fstps  (%ebx,%eax,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%eax,4)
		fadds  data_77ab1
		jmp    jump_36758
	jump_36710:
		cmp    $0x23,%cx
		jge    jump_36738
		mov    0xc(%esp),%ebx
		movswl %cx,%eax
		flds   (%ebx,%eax,4)
		fadds  data_77ab9
		fstps  (%ebx,%eax,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%eax,4)
		fadds  data_77ab9
		jmp    jump_36758
	jump_36738:
		mov    0xc(%esp),%ebx
		movswl %cx,%eax
		flds   (%ebx,%eax,4)
		fadds  data_77ab1
		fstps  (%ebx,%eax,4)
		mov    0x8(%esp),%ebx
		flds   (%ebx,%eax,4)
		fadds  data_77ab5
	jump_36758:
		fstps  (%ebx,%eax,4)
	jump_3675b:
		mov    $0x34,%eax
		call   func_4f4cd
		jmp    jump_3678c
	jump_36767:
		cmp    $0x3,%di
		jne    jump_36774
		mov    $data_f103e,%ebp
		jmp    jump_3678c
	jump_36774:
		cmp    $0x2,%di
		jne    jump_36781
		mov    $data_f104a,%ebp
		jmp    jump_3678c
	jump_36781:
		cmp    $0x1,%di
		jne    jump_3678c
		mov    $data_f1056,%ebp
	jump_3678c:
		movswl %cx,%ebx
		mov    0x38(%esp),%esi
		lea    (%ebx,%ebx,1),%eax
		add    %esi,%eax
		cmpw   $0x0,(%eax)
		je     jump_367da
		fild   0x6(%ebp)
		mov    0x8(%esp),%eax
		shl    $0x2,%ebx
		mov    0xc(%esp),%edi
		fadds  (%ebx,%eax,1)
		mov    0x8(%ebp),%esi
		call   func___CHP
		fistpl 0x20(%esp)
		add    %edi,%ebx
		fild   0x4(%ebp)
		fadds  (%ebx)
		mov    0x20(%esp),%edx
		call   func___CHP
		fistpl 0x20(%esp)
		mov    %esi,%ebx
		mov    0x20(%esp),%eax
		call   func_5ee51
	jump_367da:
		inc    %ecx
		cmp    $0x28,%cx
		jl     jump_3654a
		add    $0x24,%esp
	jump_367e8:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_367ee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x32c,%esp
		push   %eax
		xor    %edx,%edx
		mov    data_ba83e,%cx
		mov    %dx,data_f0b9e
		jmp    jump_3683c
	jump_3680d:
		mov    data_ba83c,%di
		jmp    jump_36828
	jump_36816:
		mov    (%esp),%ebx
		mov    0xb(%ebx),%ebx
		movswl %cx,%edx
		sar    $0x18,%ebx
		inc    %edi
		call   func_1a1f8
	jump_36828:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %di,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_36816
		inc    %ecx
	jump_3683c:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %cx,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_3680d
		cmpw   $0x0,data_f0b9e
		jne    jump_36862
		mov    $0xffffffff,%ebx
		jmp    jump_37799
	jump_36862:
		xor    %edi,%edi
	jump_36864:
		movswl %di,%eax
		xor    %dl,%dl
		inc    %edi
		mov    %dl,0x2d4(%esp,%eax,1)
		cmp    $0x28,%di
		jl     jump_36864
		mov    $data_77ad1,%eax
		call   func_1fea4
		call   func_103a8
		mov    (%esp),%eax
		movsbw 0x63(%eax),%ax
		mov    %ax,0x328(%esp)
		mov    (%esp),%eax
		mov    %dl,0x63(%eax)
		mov    (%esp),%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		xor    %ecx,%ecx
		call   func_11ee4
		jmp    jump_368bf
	jump_368af:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %ecx
	jump_368bf:
		cmp    data_f0b9e,%cx
		jl     jump_368af
		mov    $0x8,%eax
		call   func_1033b
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%edx
		mov    %eax,%esi
		mov    (%esp),%eax
		xor    %ecx,%ecx
		add    $0xc,%esi
		movsbl 0x1(%eax),%eax
		mov    %dx,0x318(%esp)
		call   func_10988
		mov    %eax,%ebx
		add    $0x6,%eax
		sub    $0x2,%ebx
		mov    %ax,0x314(%esp)
		mov    $0x32,%eax
		mov    %bx,0x31c(%esp)
		call   func_4f4cd
	jump_3691e:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    data_f1064,%edi
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %edi,%eax
		call   func_5ee51
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		mov    0x31a(%esp),%edx
		add    $data_f0daa,%eax
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edi
		mov    0x2(%eax),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		add    %edi,%edx
		movswl %si,%edi
		add    %edi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x4,%cx
		jl     jump_3691e
		xor    %ecx,%ecx
	jump_369b0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x316(%esp),%edi
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %edi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x4,%cx
		jl     jump_369b0
		mov    $0x14,%edi
		mov    $0x1,%eax
		mov    $0x4,%ecx
		call   func_44d6e
	jump_36a1f:
		mov    $0xa,%edx
		xor    %eax,%eax
		call   func_30824
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%eax
		mov    0x312(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x316(%esp),%ebp
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ebp,%eax
		call   func_5ee51
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		mov    %eax,0x300(%esp)
		sar    $0x10,%edx
		mov    0x300(%esp),%ebp
		movswl %si,%eax
		add    $0x14,%edx
		add    %ebp,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0xa,%cx
		jl     jump_36a1f
		mov    $0x4,%eax
		mov    $0xa,%edx
		call   func_1033b
		xor    %eax,%eax
		xor    %ecx,%ecx
		call   func_30824
		call   func_5e9e8
		call   func_499e4
	jump_36ae0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x316(%esp),%ebp
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ebp,%eax
		call   func_5ee51
		movswl %cx,%eax
		add    $0x33,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		movswl %di,%ebp
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x300(%esp)
		add    %ebp,%edx
		mov    0x300(%esp),%ebp
		movswl %si,%eax
		add    %ebp,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_36ae0
		xor    %edx,%edx
		jmp    jump_36b8d
	jump_36b7d:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_36b8d:
		cmp    data_f0b9e,%dx
		jl     jump_36b7d
		xor    %edx,%edx
		mov    %edx,0x320(%esp)
	jump_36b9f:
		mov    0x320(%esp),%eax
		test   %ax,%ax
		jne    jump_36d28
		xor    %ecx,%ecx
	jump_36bb1:
		mov    $0x1,%ah
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %ah,0x2d4(%esp,%ebx,1)
		mov    $0x28,%eax
		sub    $0x2d,%edx
		call   func_499bd
		cwtl
		add    %eax,%edx
		movswl %di,%ebp
		mov    %edx,0x300(%esp)
		mov    $0x14,%eax
		fildl  0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x3,%eax
		fildl  0x300(%esp)
		mov    $0xfffffffd,%ebp
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		sub    %eax,%ebp
		mov    %ebp,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0x144(%esp,%ebx,4)
		fchs
		fmuls  data_77ada
		mov    $0xf,%eax
		fstps  0xa4(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x5,%cx
		jl     jump_36bb1
		mov    $0x5,%ecx
	jump_36c64:
		mov    $0x1,%dl
		movswl %cx,%ebx
		mov    $0x23,%eax
		mov    %dl,0x2d4(%esp,%ebx,1)
		call   func_499bd
		movswl %si,%edx
		cwtl
		sub    $0x23,%edx
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x14,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0x5,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x3,%eax
		fildl  0x300(%esp)
		mov    $0xfffffffd,%ebp
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		sub    %eax,%ebp
		mov    %ebp,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0x144(%esp,%ebx,4)
		fchs
		fdivl  data_77aea
		mov    $0xf,%eax
		fstps  0xa4(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0xa,%cx
		jge    jump_37030
		jmp    jump_36c64
	jump_36d28:
		cmp    $0x1,%ax
		jne    jump_36eb7
		mov    $0xa,%ecx
	jump_36d37:
		mov    $0x1,%dh
		movswl %cx,%ebx
		mov    $0x1e,%eax
		mov    %dh,0x2d4(%esp,%ebx,1)
		call   func_499bd
		movswl %si,%edx
		cwtl
		sub    $0x19,%edx
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x1e,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0xa,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x4,%eax
		fildl  0x300(%esp)
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		add    $0x3,%eax
		mov    %eax,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0xa4(%esp,%ebx,4)
		fchs
		fdivl  data_77ade
		mov    $0xf,%eax
		fstps  0x144(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0xf,%cx
		jl     jump_36d37
		mov    $0xf,%ecx
	jump_36df7:
		mov    $0x1,%al
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %al,0x2d4(%esp,%ebx,1)
		mov    $0x1e,%eax
		sub    $0x14,%edx
		call   func_499bd
		cwtl
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x23,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0xf,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x4,%eax
		fildl  0x300(%esp)
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		add    $0x3,%eax
		mov    %eax,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0xa4(%esp,%ebx,4)
		fchs
		fdivs  data_77ae6
		mov    $0xf,%eax
		fstps  0x144(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x14,%cx
		jge    jump_37030
		jmp    jump_36df7
	jump_36eb7:
		mov    $0x19,%ecx
	jump_36ebc:
		mov    $0x1,%ah
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %ah,0x2d4(%esp,%ebx,1)
		mov    $0x1e,%eax
		sub    $0x5,%edx
		call   func_499bd
		cwtl
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x1e,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0xa,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x4,%eax
		fildl  0x300(%esp)
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		add    $0x3,%eax
		mov    %eax,0x2fc(%esp)
		fildl  0x2fc(%esp)
		fsts   0xa4(%esp,%ebx,4)
		fdivl  data_77ade
		mov    $0xf,%eax
		fstps  0x144(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x1e,%cx
		jl     jump_36ebc
		mov    $0x14,%ecx
	jump_36f7a:
		mov    $0x1,%dl
		movswl %cx,%ebx
		mov    $0x1e,%eax
		mov    %dl,0x2d4(%esp,%ebx,1)
		call   func_499bd
		cwtl
		movswl %si,%edx
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x23,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0xf,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x4,%eax
		fildl  0x300(%esp)
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		add    $0x3,%eax
		mov    %eax,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0xa4(%esp,%ebx,4)
		fdivs  data_77ae6
		mov    $0xf,%eax
		fstps  0x144(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x19,%cx
		jl     jump_36f7a
	jump_37030:
		mov    $0x5,%eax
		call   func_1033b
		mov    $0x33,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
		mov    %ecx,0x310(%esp)
	jump_3704d:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x316(%esp),%ecx
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ecx,%eax
		mov    0x310(%esp),%ecx
		call   func_5ee51
		cmp    $0x5,%cx
		jge    jump_370ab
		mov    $data_f0e22,%eax
		jmp    jump_370b0
	jump_370ab:
		mov    $data_f0e16,%eax
	jump_370b0:
		movswl %di,%edx
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%ecx
		mov    0x2(%eax),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		add    %ecx,%edx
		movswl %si,%ecx
		add    %ecx,%eax
		call   func_5ee51
		lea    0x284(%esp),%eax
		lea    0xa4(%esp),%ecx
		push   %eax
		lea    0x2d8(%esp),%eax
		lea    0x148(%esp),%ebx
		push   %eax
		lea    0xc(%esp),%edx
		lea    0x1ec(%esp),%eax
		call   func_36531
		call   func_5e9e8
		call   func_499e4
		mov    0x310(%esp),%eax
		inc    %eax
		mov    %eax,0x310(%esp)
		cmp    $0x9,%ax
		jl     jump_3704d
		movw   $0x33,0x324(%esp)
	jump_37129:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%eax
		mov    0x312(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    data_f1064,%ecx
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ecx,%eax
		call   func_5ee51
		mov    0x322(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		movswl %di,%ecx
		sar    $0x10,%edx
		add    %ecx,%edx
		mov    0x2(%eax),%ecx
		mov    0x8(%eax),%ebx
		sar    $0x10,%ecx
		movswl %si,%eax
		add    %ecx,%eax
		call   func_5ee51
		lea    0x284(%esp),%eax
		lea    0xa4(%esp),%ecx
		push   %eax
		lea    0x2d8(%esp),%eax
		lea    0x148(%esp),%ebx
		push   %eax
		lea    0xc(%esp),%edx
		lea    0x1ec(%esp),%eax
		call   func_36531
		call   func_5e9e8
		call   func_499e4
		mov    0x324(%esp),%eax
		inc    %eax
		mov    %ax,0x324(%esp)
		cmp    $0x36,%ax
		jl     jump_37129
		mov    0x320(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x320(%esp)
		cmp    $0x3,%bx
		jl     jump_36b9f
		mov    $0x23,%ecx
	jump_37213:
		mov    $0x1,%dh
		movswl %cx,%ebx
		mov    $0x19,%eax
		mov    %dh,0x2d4(%esp,%ebx,1)
		call   func_499bd
		movswl %si,%edx
		cwtl
		add    $0x19,%edx
		add    %eax,%edx
		mov    %edx,0x2fc(%esp)
		movswl %di,%eax
		fildl  0x2fc(%esp)
		mov    %eax,0x300(%esp)
		fstps  0x1e4(%esp,%ebx,4)
		mov    $0x19,%eax
		mov    0x300(%esp),%ebp
		call   func_499bd
		add    $0xa,%ebp
		cwtl
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x3,%eax
		fildl  0x300(%esp)
		mov    $0x3,%ebp
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		sub    %eax,%ebp
		mov    %ebp,0x2fc(%esp)
		fildl  0x2fc(%esp)
		fsts   0x144(%esp,%ebx,4)
		fmuls  data_77ada
		mov    $0xf,%eax
		fstps  0xa4(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x28,%cx
		jl     jump_37213
		mov    $0x33,%eax
		mov    $0x1e,%ecx
		call   func_4f4cd
	jump_372df:
		mov    $0x1,%al
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %al,0x2d4(%esp,%ebx,1)
		mov    $0x1e,%eax
		add    $0x5,%edx
		call   func_499bd
		cwtl
		add    %eax,%edx
		mov    %edx,0x300(%esp)
		movswl %di,%eax
		fildl  0x300(%esp)
		mov    %eax,0x300(%esp)
		mov    $0x1e,%eax
		fstps  0x1e4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		mov    %eax,0x2fc(%esp)
		mov    0x300(%esp),%eax
		mov    0x2fc(%esp),%ebp
		add    $0xf,%eax
		add    %eax,%ebp
		mov    %ebp,0x300(%esp)
		mov    $0x3,%eax
		fildl  0x300(%esp)
		mov    $0x3,%ebp
		fstps  0x4(%esp,%ebx,4)
		call   func_499bd
		cwtl
		sub    %eax,%ebp
		mov    %ebp,0x300(%esp)
		fildl  0x300(%esp)
		fsts   0x144(%esp,%ebx,4)
		fdivl  data_77aea
		mov    $0xf,%eax
		fstps  0xa4(%esp,%ebx,4)
		call   func_499bd
		add    $0xf,%eax
		inc    %ecx
		mov    %ax,0x284(%esp,%ebx,2)
		cmp    $0x23,%cx
		jl     jump_372df
		xor    %ebx,%ebx
		mov    %ebx,0x32c(%esp)
		jmp    jump_37484
	jump_373b8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%eax
		mov    0x312(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    data_f1064,%ecx
		add    %eax,%edx
		mov    0x316(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ecx,%eax
		call   func_5ee51
		mov    data_f0e26,%eax
		movswl %di,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    data_f0e24,%eax
		movswl %si,%ecx
		sar    $0x10,%eax
		mov    data_f0e2a,%ebx
		add    %ecx,%eax
		call   func_5ee51
		lea    0x284(%esp),%eax
		lea    0xa4(%esp),%ecx
		push   %eax
		lea    0x2d8(%esp),%eax
		lea    0x148(%esp),%ebx
		push   %eax
		lea    0xc(%esp),%edx
		lea    0x1ec(%esp),%eax
		call   func_36531
		call   func_5e9e8
		call   func_499e4
		xor    %eax,%eax
		jmp    jump_37471
	jump_37463:
		movswl %ax,%edx
		cmpb   $0x1,0x2d4(%esp,%edx,1)
		je     jump_37477
		inc    %eax
	jump_37471:
		cmp    $0x28,%ax
		jl     jump_37463
	jump_37477:
		cmp    $0x28,%ax
		je     jump_37493
		incl   0x32c(%esp)
	jump_37484:
		cmpw   $0x1e,0x32c(%esp)
		jl     jump_373b8
	jump_37493:
		mov    $0x8,%eax
		call   func_1033b
		xor    %ecx,%ecx
	jump_3749f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%eax
		mov    %eax,0x300(%esp)
		mov    0x316(%esp),%eax
		mov    0x300(%esp),%ebp
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %ebp,%eax
		call   func_5ee51
		mov    data_f0e26,%edx
		movswl %di,%eax
		sar    $0x10,%edx
		inc    %ecx
		add    %eax,%edx
		mov    data_f0e24,%eax
		movswl %si,%ebp
		sar    $0x10,%eax
		mov    data_f0e2a,%ebx
		add    %ebp,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x4,%cx
		jl     jump_3749f
		mov    $data_12824c,%ebx
		xor    %eax,%eax
		mov    $0x100,%edx
		call   func_44d6e
		xor    %eax,%eax
		xor    %esi,%esi
		call   func_5f9ae
		mov    (%esp),%eax
		mov    %si,data_ba838
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%edi
		mov    $0x7,%ecx
		add    $0xc,%edi
	jump_37568:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f1066,%edx
		mov    0x312(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x316(%esp),%esi
		add    %eax,%edx
		mov    data_f1064,%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    data_f106a,%ebx
		add    %esi,%eax
		call   func_5ee51
		cmp    $0x4,%cx
		jl     jump_375df
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		movswl %di,%eax
		add    $0x14,%edx
		add    %esi,%eax
		call   func_5ee51
	jump_375df:
		call   func_5e9e8
		dec    %ecx
		call   func_499e4
		test   %cx,%cx
		jge    jump_37568
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x30c(%esp)
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    $0x3,%ecx
		mov    %ax,0x308(%esp)
	jump_37627:
		mov    0x312(%esp),%edi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x316(%esp),%esi
		call   func_454b3
		sar    $0x10,%edi
		sar    $0x10,%esi
		mov    data_f106a,%ebx
		mov    data_f1066,%edx
		mov    data_f1064,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edi,%edx
		add    %esi,%eax
		call   func_5ee51
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		mov    0x306(%esp),%ebp
		sar    $0x10,%ebp
		add    $data_f0daa,%eax
		mov    %ebp,0x304(%esp)
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x30a(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %ebp,%eax
		dec    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		test   %cx,%cx
		jge    jump_37627
		mov    $0x14,%eax
		call   func_1033b
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_f106a,%ebx
		mov    data_f1066,%edx
		mov    data_f1064,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edi,%edx
		add    %esi,%eax
		call   func_5ee51
		mov    data_f0dae,%edx
		mov    0x304(%esp),%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_f0dac,%eax
		sar    $0x10,%eax
		mov    data_f0db2,%ebx
		add    %ebp,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		call   func_44d75
		mov    (%esp),%edx
		mov    (%esp),%eax
		mov    (%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11e04
		mov    (%esp),%edx
		mov    0x328(%esp),%al
		mov    %al,0x63(%edx)
		xor    %edx,%edx
		jmp    jump_3776f
	jump_3775f:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_3776f:
		cmp    data_f0b9e,%dx
		jl     jump_3775f
		mov    $0x4,%ebx
		mov    $0x1770,%edx
		mov    (%esp),%eax
		call   func_2caf7
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%ebx
	jump_37799:
		mov    %ebx,%eax
		add    $0x330,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_377a6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    $0x7,%ebx
		mov    0x63(%eax),%ah
		mov    %bx,0x20(%esp)
		cmp    $0x1,%ah
		je     jump_377d6
		cmpb   $0x3,0x63(%esi)
		jne    jump_37852
	jump_377d6:
		mov    $0xffffffff,%edi
	jump_377db:
		lea    0x1c(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x20(%esp),%eax
		mov    $0x1,%ecx
		add    %edi,%eax
		mov    0x60(%esi),%ebx
		movswl %ax,%edx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%eax
		call   func_1a452
	jump_37818:
		lea    0x1c(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_37845
		mov    0x1a(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_37818
	jump_37845:
		inc    %edi
		cmp    $0x1,%di
		jg     jump_378c0
		jmp    jump_377db
	jump_37852:
		mov    $0xffffffff,%edi
	jump_37857:
		lea    0x1c(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		push   $0x7
		mov    0x1e(%esp),%edx
		mov    0xc(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    $0x1,%ecx
		sar    $0x18,%ebx
		add    %edi,%eax
		sar    $0x10,%edx
		cwtl
		call   func_1a452
	jump_3788c:
		lea    0x1c(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_378b9
		mov    0x1a(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_3788c
	jump_378b9:
		inc    %edi
		cmp    $0x1,%di
		jle    jump_37857
	jump_378c0:
		cmpw   $0x0,data_f0b9e
		jne    jump_378d4
		mov    $0xffffffff,%eax
		jmp    jump_37f7c
	jump_378d4:
		mov    $data_77af2,%eax
		mov    $0x4,%edx
		call   func_1fea4
		call   func_103a8
		mov    %esi,%eax
		call   func_200de
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_3790d
	jump_378fd:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_3790d:
		cmp    data_f0b9e,%dx
		jl     jump_378fd
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		call   func_5e9e8
		call   func_499e4
		mov    0x63(%esi),%dh
		cmp    $0x1,%dh
		je     jump_37959
		cmp    $0x3,%dh
		jne    jump_3795d
	jump_37959:
		xor    %ecx,%ecx
		jmp    jump_37962
	jump_3795d:
		mov    $0x10,%ecx
	jump_37962:
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x1c(%esp)
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		xor    %edi,%edi
		call   func_11ee4
		jmp    jump_379a7
	jump_37997:
		movswl %di,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edi
	jump_379a7:
		cmp    data_f0b9e,%di
		jl     jump_37997
		mov    $0xf,%eax
		call   func_1033b
		xor    %edi,%edi
	jump_379bc:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%eax
		movswl %cx,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x63(%esi),%bh
		add    $data_f0daa,%eax
		cmp    $0x3,%bh
		jne    jump_37a0f
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%esp),%ebx
		sub    (%eax),%bx
		mov    0x8(%eax),%ebp
		sub    0x4(%eax),%bx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ebp,%ebx
		call   func_5f0cf
		jmp    jump_37a6c
	jump_37a0f:
		cmp    $0x2,%bh
		jne    jump_37a43
		mov    0x1c(%esp),%edx
		sub    0x2(%eax),%dx
		sub    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f1ab
		jmp    jump_37a6c
	jump_37a43:
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5efb9
	jump_37a6c:
		call   func_5e9e8
		call   func_499e4
		movswl %di,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_37a93
		mov    $0x33,%eax
		call   func_4f4cd
	jump_37a93:
		inc    %edi
		cmp    $0x9,%di
		jle    jump_379bc
		mov    $0x32,%eax
		xor    %edx,%edx
		call   func_4f4cd
		mov    %edx,0xc(%esp)
	jump_37aae:
		mov    $0x8,%edi
	jump_37ab3:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		movswl %cx,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x63(%esi),%dh
		add    $data_f0daa,%eax
		cmp    $0x3,%dh
		jne    jump_37b0f
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x8(%eax),%ebx
		sub    (%eax),%dx
		mov    0x16(%esp),%ebp
		sub    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f0cf
		jmp    jump_37b63
	jump_37b0f:
		cmp    $0x2,%dh
		jne    jump_37b43
		mov    0x1c(%esp),%edx
		sub    0x2(%eax),%dx
		sub    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f1ab
		jmp    jump_37b63
	jump_37b43:
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%esp),%ebx
		mov    0x8(%eax),%ebp
		add    0x4(%eax),%bx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ebp,%ebx
		call   func_5efb9
	jump_37b63:
		call   func_5e9e8
		dec    %edi
		call   func_499e4
		cmp    $0x7,%di
		jge    jump_37ab3
		mov    $0x33,%eax
		mov    $0x8,%edi
		call   func_4f4cd
	jump_37b87:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		movswl %cx,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x63(%esi),%bh
		add    $data_f0daa,%eax
		cmp    $0x3,%bh
		jne    jump_37be3
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x8(%eax),%ebx
		sub    (%eax),%dx
		mov    0x16(%esp),%ebp
		sub    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f0cf
		jmp    jump_37c40
	jump_37be3:
		cmp    $0x2,%bh
		jne    jump_37c17
		mov    0x1c(%esp),%edx
		sub    0x2(%eax),%dx
		sub    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f1ab
		jmp    jump_37c40
	jump_37c17:
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5efb9
	jump_37c40:
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x9,%di
		jle    jump_37b87
		mov    0xc(%esp),%edi
		inc    %edi
		mov    %edi,0xc(%esp)
		cmp    $0x3,%di
		jl     jump_37aae
		mov    0x8(%esp),%eax
		mov    %ax,0x14(%esp)
		mov    0x1c(%esp),%eax
		mov    %ax,0x4(%esp)
		mov    $0x5,%eax
		mov    $0xc,%edx
		call   func_1033b
		mov    $0x32,%eax
		mov    %dx,0x10(%esp)
		call   func_4f4cd
	jump_37c98:
		xor    %edi,%edi
	jump_37c9a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0xa,%eax
		imul   $0xc,%eax,%eax
		mov    0x63(%esi),%dl
		add    $data_f0daa,%eax
		cmp    $0x3,%dl
		jne    jump_37cf4
		mov    0x4(%esp),%edx
		add    0x6(%eax),%dx
		mov    %dx,0x18(%esp)
		mov    0x14(%esp),%edx
		mov    0x8(%eax),%ebx
		sub    (%eax),%dx
		mov    0x16(%esp),%ebp
		sub    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f0cf
		jmp    jump_37d54
	jump_37cf4:
		cmp    $0x2,%dl
		jne    jump_37d28
		mov    0x4(%esp),%edx
		sub    0x2(%eax),%dx
		sub    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x14(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5f1ab
		jmp    jump_37d54
	jump_37d28:
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		mov    %edx,(%esp)
		mov    0x2(%esp),%edx
		mov    (%esp),%ebp
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ebp,%edx
		mov    0x12(%esp),%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %ebp,%eax
		call   func_5ee51
	jump_37d54:
		mov    0xe(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x63(%esi),%bl
		add    $data_f0daa,%eax
		cmp    $0x3,%bl
		jne    jump_37d95
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%esp),%ebx
		sub    (%eax),%bx
		mov    0x8(%eax),%ebp
		sub    0x4(%eax),%bx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ebp,%ebx
		call   func_5f0cf
		jmp    jump_37de9
	jump_37d95:
		cmp    $0x2,%bl
		jne    jump_37dc0
		mov    0x1c(%esp),%edx
		sub    0x2(%eax),%dx
		sub    0x6(%eax),%dx
		mov    0x8(%esp),%ebx
		mov    0x8(%eax),%ebp
		add    0x4(%eax),%bx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ebp,%ebx
		call   func_5f1ab
		jmp    jump_37de9
	jump_37dc0:
		mov    0x1c(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x18(%esp)
		mov    0x8(%esp),%edx
		mov    0x16(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5efb9
	jump_37de9:
		call   func_5e9e8
		call   func_499e4
		mov    0x63(%esi),%al
		cmp    $0x1,%al
		jne    jump_37e02
		subw   $0x10,0x8(%esp)
		jmp    jump_37e24
	jump_37e02:
		cmp    $0x3,%al
		jne    jump_37e0e
		addw   $0x10,0x8(%esp)
		jmp    jump_37e24
	jump_37e0e:
		test   %al,%al
		jne    jump_37e1a
		addw   $0xc,0x1c(%esp)
		jmp    jump_37e24
	jump_37e1a:
		cmp    $0x2,%al
		jne    jump_37e24
		subw   $0xc,0x1c(%esp)
	jump_37e24:
		inc    %edi
		cmp    $0x3,%di
		jl     jump_37c9a
		mov    0x10(%esp),%edi
		inc    %edi
		mov    %di,0x10(%esp)
		cmp    $0xf,%di
		jle    jump_37c98
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		add    $0xb,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    0x63(%esi),%dh
		add    $data_f0daa,%eax
		cmp    $0x3,%dh
		jne    jump_37e9f
		mov    0x4(%esp),%edx
		mov    0x6(%eax),%cx
		mov    (%eax),%di
		add    %ecx,%edx
		mov    0x14(%esp),%ecx
		sub    %edi,%ecx
		mov    0x4(%eax),%di
		mov    0x8(%eax),%ebx
		sub    %edi,%ecx
		movswl %dx,%edx
		movswl %cx,%eax
		call   func_5f0cf
		jmp    jump_37ef4
	jump_37e9f:
		cmp    $0x2,%dh
		jne    jump_37ece
		mov    0x4(%esp),%edx
		mov    0x8(%eax),%ebx
		mov    0x2(%eax),%cx
		mov    0x6(%eax),%di
		sub    %ecx,%edx
		mov    0x14(%esp),%ecx
		sub    %edi,%edx
		mov    0x4(%eax),%di
		mov    %ecx,%eax
		add    %edi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f1ab
		jmp    jump_37ef4
	jump_37ece:
		mov    0x2(%esp),%edx
		mov    0x4(%eax),%ecx
		mov    0x8(%eax),%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		mov    0x12(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5ee51
	jump_37ef4:
		call   func_5e9e8
		call   func_499e4
		call   func_44d75
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_5e9e8
		call   func_499e4
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		xor    %ebx,%ebx
		jmp    jump_37f53
	jump_37f37:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%edx
		orb    $0x4,0x1e(%edx)
		mov    data_f0648(,%eax,4),%eax
		inc    %ebx
		movw   $0x5a,0x1f(%eax)
	jump_37f53:
		cmp    data_f0b9e,%bx
		jl     jump_37f37
		mov    $0x2,%ebx
		mov    $0x2710,%edx
		mov    %esi,%eax
		call   func_2caf7
		call   func_1ffcd
		call   func_103a0
		mov    $0x1,%eax
	jump_37f7c:
		add    $0x24,%esp
		jmp    jump_35553

vtable_37f84:
		.long   func_37fc8
		.long   func_37fdc
		.long   func_37fe3
		.long   func_37fed

vtable_37f94:
		.long   func_385c0
		.long   func_385ca
		.long   func_385d4
		.long   func_385de


/*----------------------------------------------------------------*/
func_37fa4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    %eax,%esi
		call   func_169d7
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_37ffd
		and    $0xff,%eax
		jmp    *vtable_37f84(,%eax,4)


/*----------------------------------------------------------------*/
func_37fc8:
/*----------------------------------------------------------------*/
		mov    data_ba840,%ax
		movsbw 0x1(%esi),%dx
		sub    %edx,%eax
		mov    %eax,%edx
		sub    $0x4,%edx
		jmp    jump_37ffd


/*----------------------------------------------------------------*/
func_37fdc:
/*----------------------------------------------------------------*/
		movsbw (%esi),%dx
		dec    %edx
		jmp    jump_37ffd


/*----------------------------------------------------------------*/
func_37fe3:
/*----------------------------------------------------------------*/
		movsbw 0x1(%esi),%dx
		sub    $0x3,%edx
		jmp    jump_37ffd


/*----------------------------------------------------------------*/
func_37fed:
/*----------------------------------------------------------------*/
		mov    data_ba844,%dx
		movsbw (%esi),%ax
		sub    %eax,%edx
		sub    $0x2,%edx
	jump_37ffd:
		mov    $0x1,%ecx
		movswl %dx,%eax
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1a452
	jump_38018:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3805d
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_38018
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_38018
	jump_3805d:
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_13d02
		movsbw (%esi),%ax
		mov    %ax,0x10(%esp)
		movsbw 0x1(%esi),%ax
		xor    %edx,%edx
		mov    %ax,0xc(%esp)
		mov    %dx,data_f0b9e
		cmpb   $0x0,0x63(%esi)
		jne    jump_38097
		mov    %esi,%eax
		call   func_44d89
	jump_38097:
		xor    %edi,%edi
		jmp    jump_380fc
	jump_3809b:
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    %esi,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1d124
		test   %ax,%ax
		je     jump_380e8
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    %esi,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_380e8
		mov    data_f0648,%eax
		call   func_44d89
		jmp    jump_38102
	jump_380e8:
		lea    0xc(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x10(%esp),%eax
		sar    $0x18,%ebx
		inc    %edi
		call   func_49abc
	jump_380fc:
		cmp    $0x7,%di
		jl     jump_3809b
	jump_38102:
		cmpb   $0x0,0x63(%esi)
		je     jump_3810f
		mov    %esi,%eax
		call   func_44d89
	jump_3810f:
		cmp    $0x7,%di
		jne    jump_38124
		call   func_44d75
		mov    $0xffffffff,%eax
		jmp    jump_38778
	jump_38124:
		mov    $data_77afa,%eax
		mov    $0x1,%ecx
		call   func_1fea4
		xor    %ebx,%ebx
		mov    data_f0648,%edx
		mov    %esi,%eax
		call   func_1d770
		add    $0x1388,%eax
		mov    %eax,(%esp)
		call   func_103a8
		mov    $0x1,%eax
		xor    %ebx,%ebx
		call   func_44d6e
		call   func_30544
		mov    $0x10,%eax
		movb   $0x5,0x64(%esi)
		call   func_1033b
	jump_3816e:
		mov    0x61(%esi),%edx
		mov    %esi,%eax
		sar    $0x18,%edx
		call   func_305a2
		call   func_5e9e8
		mov    $0xc,%edx
		xor    %eax,%eax
		call   func_30824
		call   func_499e4
		mov    0x64(%esi),%dh
		inc    %dh
		inc    %ebx
		mov    %dh,0x64(%esi)
		cmp    $0x3,%bx
		jl     jump_3816e
		xor    %ebx,%ebx
		xor    %ecx,%ecx
	jump_381a4:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ecx,%edx
		mov    %ecx,%eax
		call   func_305a2
		call   func_5e9e8
		mov    $0xc,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   func_30824
		call   func_499e4
		cmp    $0x4,%bx
		jl     jump_381a4
		incb   0x64(%esi)
		xor    %ebx,%ebx
		call   func_45559
		mov    %bx,0x14(%esp)
	jump_381ef:
		mov    0xa(%esp),%ecx
		mov    0xe(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		call   func_46df1
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x4(%esp)
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x1c(%esp)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x18(%esp)
		mov    $0x9,%eax
		call   func_1033b
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_454b3
		call   func_30544
	jump_3827d:
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    0x61(%esi),%ecx
		mov    %esi,%ebx
		sar    $0x18,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_306e6
		mov    0x1a(%esp),%edx
		mov    0x6(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		sub    %ebx,%edx
		mov    $0x5,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x16(%esp),%edx
		add    %ebx,%eax
		mov    0x2(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		sub    %ebx,%edx
		mov    %ax,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		add    %ebx,%eax
		inc    %edi
		mov    %ax,0x4(%esp)
		cmp    $0xc,%di
		jl     jump_3827d
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    0x10(%esp),%al
		mov    %al,(%esi)
		mov    0xc(%esp),%al
		mov    %esi,%ebx
		mov    %al,0x1(%esi)
		movsbl %al,%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    0x61(%esi),%edx
		mov    %esi,%eax
		sar    $0x18,%edx
		call   func_305a2
		call   func_5e9e8
		mov    $0x32,%eax
		xor    %ecx,%ecx
		call   func_4f4cd
	jump_38326:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		xor    %edx,%edx
		xor    %eax,%eax
		inc    %ecx
		call   func_305a2
		call   func_44dcc
		call   func_5e9e8
		call   func_499e4
		cmp    $0x9,%cx
		jl     jump_38326
		mov    data_f0648,%eax
		call   func_1214f
		mov    $0xc,%eax
		call   func_1033b
	jump_383a2:
		cmpw   $0xa,0x14(%esp)
		jge    jump_3860f
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ecx
		mov    $0x5dc0,%ebx
		xor    %eax,%eax
		add    %edx,%ecx
		xor    %edx,%edx
		call   func_5e9d0
		mov    0x8(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		call   func_30784
		mov    $0x5,%edx
		mov    %esi,%eax
		call   func_305a2
		call   func_44dcc
		call   func_5e9e8
		call   func_499e4
		mov    $0x1,%eax
		mov    $0x1,%edi
		call   func_4f4cd
		xor    %ebp,%ebp
	jump_38426:
		mov    $0x5dc0,%ebx
		mov    %ebp,%edx
		mov    %ebp,%eax
		call   func_5e9d0
		mov    0x8(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		call   func_30784
		mov    $0x6,%edx
		mov    %esi,%eax
		call   func_305a2
		call   func_44dcc
		cmp    $0x3,%di
		jge    jump_38478
		movswl %di,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   func_1e2ea
	jump_38478:
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x5,%di
		jl     jump_38426
		mov    0x14(%esp),%edi
		inc    %edi
		mov    %di,0x14(%esp)
		cmp    $0xa,%di
		jg     jump_3860f
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%edx
		mov    data_f0648,%eax
		mov    $data_f0daa,%ecx
		mov    0x48(%eax),%ebx
		add    %edx,%ecx
		mov    (%esp),%edx
		sub    %edx,%ebx
		mov    %ebx,0x48(%eax)
		mov    data_f0648,%eax
		cmpl   $0x0,0x48(%eax)
		jl     jump_3860f
		mov    $0x14,%eax
		mov    $0x7,%edi
		call   func_4f4cd
	jump_384e8:
		mov    $0x5dc0,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5e9d0
		mov    0x8(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		call   func_30784
		movswl %di,%edx
		mov    %esi,%eax
		call   func_305a2
		call   func_44dcc
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x9,%di
		jl     jump_384e8
		mov    $0x1,%eax
		mov    $0x1,%edi
		call   func_4f4cd
	jump_38546:
		mov    $0x5dc0,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5e9d0
		mov    0x8(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		call   func_30784
		mov    $0x9,%edx
		mov    %esi,%eax
		call   func_305a2
		call   func_44dcc
		cmp    $0x3,%di
		jge    jump_3859b
		mov    $0x1,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   func_1e2ea
	jump_3859b:
		call   func_5e9e8
		inc    %edi
		call   func_499e4
		cmp    $0x5,%di
		jl     jump_38546
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_385e6
		and    $0xff,%eax
		jmp    *vtable_37f94(,%eax,4)


/*----------------------------------------------------------------*/
func_385c0:
/*----------------------------------------------------------------*/
		mov    data_f0648,%eax
		incb   0x66(%eax)
		jmp    jump_385e6


/*----------------------------------------------------------------*/
func_385ca:
/*----------------------------------------------------------------*/
		mov    data_f0648,%eax
		decb   0x65(%eax)
		jmp    jump_385e6


/*----------------------------------------------------------------*/
func_385d4:
/*----------------------------------------------------------------*/
		mov    data_f0648,%eax
		decb   0x66(%eax)
		jmp    jump_385e6


/*----------------------------------------------------------------*/
func_385de:
/*----------------------------------------------------------------*/
		mov    data_f0648,%eax
		incb   0x65(%eax)
	jump_385e6:
		mov    0x14(%esp),%edx
		mov    data_f0648,%eax
		inc    %edx
		mov    0x48(%eax),%ebp
		mov    %dx,0x14(%esp)
		mov    (%esp),%edx
		sub    %edx,%ebp
		mov    %ebp,0x48(%eax)
		mov    data_f0648,%eax
		cmpl   $0x0,0x48(%eax)
		jge    jump_383a2
	jump_3860f:
		mov    data_f0648,%eax
		cmpl   $0x0,0x48(%eax)
		jge    jump_38676
		call   func_44d75
		mov    %esi,%eax
		call   func_44d89
		mov    0x5d(%esi),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		mov    0x60(%esi),%edx
		sar    $0x18,%edx
		imul   $0x8f,%edx,%edx
		add    $data_d66a8,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x1(%edx,%eax,1),%cl
		mov    (%edx,%eax,1),%bl
		mov    data_f0648,%eax
		push   $0x1
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_13f08
		mov    data_f0648,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_1db1d
		mov    %ecx,data_f0648
	jump_38676:
		cmpw   $0xa,0x14(%esp)
		jge    jump_3873c
		xor    %ecx,%ecx
		call   func_44d75
		mov    %cx,data_f0b9e
		cmpb   $0x0,0x63(%esi)
		jne    jump_3869d
		mov    %esi,%eax
		call   func_44d89
	jump_3869d:
		xor    %edi,%edi
		jmp    jump_38702
	jump_386a1:
		lea    0xc(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x10(%esp),%eax
		sar    $0x18,%ebx
		mov    %esi,%ecx
		call   func_49abc
		mov    0xa(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    0xe(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1d124
		test   %ax,%ax
		je     jump_38701
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    %esi,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_38701
		mov    data_f0648,%eax
		call   func_44d89
		jmp    jump_38708
	jump_38701:
		inc    %edi
	jump_38702:
		cmp    $0x7,%di
		jl     jump_386a1
	jump_38708:
		cmpb   $0x0,0x63(%esi)
		je     jump_38715
		mov    %esi,%eax
		call   func_44d89
	jump_38715:
		cmp    $0x7,%di
		je     jump_3873c
		mov    $0x1,%ecx
		mov    data_f0648,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   func_1d770
		add    $0x1388,%eax
		mov    %eax,(%esp)
		jmp    jump_381ef
	jump_3873c:
		call   func_44d75
		mov    $data_12824c,%ebx
		xor    %eax,%eax
		mov    $0x100,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_5f9ae
		mov    %esi,%eax
		call   func_12124
		mov    data_f0648,%esi
		test   %esi,%esi
		je     jump_38771
		mov    %esi,%eax
		call   func_12124
	jump_38771:
		call   func_1ffcd
		xor    %eax,%eax
	jump_38778:
		add    $0x20,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_38780:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ecx
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		mov    0x2a(%esp),%edx
		movswl (%ebx,%eax,2),%eax
		sar    $0x10,%edx
		dec    %eax
		cmp    %eax,%edx
		jne    jump_389bd
		mov    0x2(%esp),%ebx
		sar    $0x10,%ebx
		mov    0x6(%esp),%eax
		mov    %ebx,%edx
		mov    data_755cc,%edi
		shl    $0x4,%edx
		sar    $0x10,%eax
		sub    %ebx,%edx
		add    %eax,%edi
		shl    $0x5,%edx
		movb   $0x10,0xbb80(%edx,%edi,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		movb   $0x10,0xbb81(%ecx,%edx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x10,0xbb7f(%edx,%edi,1)
		mov    data_755cc,%edx
		lea    0x1(%ebx),%edi
		lea    (%edx,%eax,1),%ecx
		mov    %edi,%edx
		shl    $0x4,%edx
		sub    %edi,%edx
		shl    $0x5,%edx
		movb   $0x10,0xbb81(%ecx,%edx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x10,0xbb7f(%edx,%edi,1)
		mov    data_755cc,%ecx
		add    %eax,%ecx
		dec    %ebx
		movb   $0x10,0xbb80(%ecx,%edx,1)
		mov    %ebx,%edx
		shl    $0x4,%edx
		mov    data_755cc,%edi
		sub    %ebx,%edx
		add    %eax,%edi
		shl    $0x5,%edx
		movb   $0x10,0xbb81(%edx,%edi,1)
		mov    data_755cc,%ebx
		add    %eax,%ebx
		movb   $0x10,0xbb7f(%edx,%ebx,1)
		mov    data_755cc,%ebx
		add    %ebx,%eax
		movb   $0x10,0xbb80(%edx,%eax,1)
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %dx,0xc(%esp)
		jmp    jump_389a5
	jump_38873:
		movswl %si,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%edx
		jne    jump_3888c
		incw   0xc(%esp)
	jump_3888c:
		cmpw   $0x7,0xc(%esp)
		jle    jump_3889b
		movw   $0x7,0xc(%esp)
	jump_3889b:
		mov    0xc(%esp),%cl
		add    $0x10,%cl
		cmp    $0x10,%si
		jg     jump_38971
		mov    0x26(%esp),%edi
		sar    $0x10,%edi
		mov    (%esp),%edx
		shl    $0x2,%edi
		add    %edi,%edx
		mov    (%edx),%ebx
		movswl %si,%eax
		mov    data_755cc,%ebp
		movswl (%ebx,%eax,2),%ebx
		add    %ebx,%ebp
		mov    0x20(%esp),%ebx
		add    %edi,%ebx
		mov    (%ebx),%edi
		movswl (%edi,%eax,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb80(%edi)
		mov    (%edx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%eax,2),%edi
		add    %edi,%ebp
		mov    (%ebx),%edi
		movswl (%edi,%eax,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb81(%edi)
		mov    (%edx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%eax,2),%edi
		add    %edi,%ebp
		mov    (%ebx),%edi
		movswl (%edi,%eax,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb7f(%edi)
		mov    (%edx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%eax,2),%edi
		add    %edi,%ebp
		mov    (%ebx),%edi
		movswl (%edi,%eax,2),%edi
		dec    %edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb80(%edi)
		mov    (%edx),%edx
		mov    (%ebx),%ebx
		movswl (%edx,%eax,2),%edi
		movswl (%ebx,%eax,2),%eax
		inc    %eax
		imul   $0x1e0,%eax,%eax
		mov    data_755cc,%edx
		add    %edi,%edx
		mov    %cl,0xbb80(%edx,%eax,1)
		jmp    jump_389a4
	jump_38971:
		mov    0x26(%esp),%edx
		mov    (%esp),%eax
		sar    $0x10,%edx
		movswl %si,%ebx
		mov    (%eax,%edx,4),%eax
		movswl (%eax,%ebx,2),%edi
		mov    data_755cc,%eax
		add    %eax,%edi
		mov    0x20(%esp),%eax
		mov    (%eax,%edx,4),%eax
		movswl (%eax,%ebx,2),%eax
		imul   $0x1e0,%eax,%eax
		mov    %cl,0xbb80(%edi,%eax,1)
	jump_389a4:
		inc    %esi
	jump_389a5:
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		mov    0x24(%esp),%edx
		add    %eax,%eax
		add    %edx,%eax
		cmp    (%eax),%si
		jl     jump_38873
	jump_389bd:
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		mov    (%esp),%eax
		shl    $0x2,%edx
		mov    (%edx,%eax,1),%eax
		mov    0x8(%esp),%ebx
		mov    %bx,(%eax)
		add    0x20(%esp),%edx
		mov    (%edx),%eax
		mov    0x4(%esp),%edx
		mov    %dx,(%eax)
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x10


/*----------------------------------------------------------------*/
func_389ea:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    0x30(%esp),%ebp
		mov    %eax,0x8(%esp)
		mov    %edx,0x4(%esp)
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		xor    %edx,%edx
		mov    %dx,0x1c(%esp)
		jmp    jump_38af8
	jump_38a0d:
		mov    0x38(%esp),%ecx
		mov    0xc(%esp),%eax
		mov    0x8(%esp),%ebx
		movswl (%ecx,%esi,1),%edx
		shl    $0x2,%eax
		shl    $0x2,%edx
		add    %eax,%ebx
		flds   data_74a68(%edx)
		fadds  (%ebx)
		mov    0x4(%esp),%edx
		fstps  (%ebx)
		add    %edx,%eax
		movswl (%ecx,%esi,1),%ecx
		mov    0x1a(%esp),%edx
		flds   data_744c8(,%ecx,4)
		mov    0xc(%esp),%ecx
		sar    $0x10,%edx
		fadds  (%eax)
		push   %edx
		fsts   (%eax)
		mov    0x38(%esp),%edx
		push   %ecx
		call   func___CHP
		fistpl 0x18(%esp)
		push   %edx
		mov    %edi,%ecx
		flds   (%ebx)
		mov    0x1c(%esp),%eax
		call   func___CHP
		mov    0xc(%esp),%ebx
		fistpl 0x1c(%esp)
		mov    %ax,0x20(%esp)
		mov    0x1c(%esp),%eax
		push   %ebp
		mov    %ax,0x28(%esp)
		mov    0x22(%esp),%edx
		mov    0x26(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_38780
		mov    0x34(%esp),%eax
		add    %esi,%eax
		mov    (%eax),%bx
		test   %bx,%bx
		je     jump_38ad2
		mov    %ebx,%edx
		dec    %edx
		jmp    jump_38acd
	jump_38aa9:
		mov    0x4a(%esp),%ebx
		sar    $0x10,%ebx
		movswl %dx,%ecx
		mov    (%edi,%ebx,4),%eax
		mov    (%eax,%ecx,2),%si
		mov    %si,0x2(%eax,%ecx,2)
		mov    0x0(%ebp,%ebx,4),%eax
		mov    (%eax,%ecx,2),%bx
		dec    %edx
		mov    %bx,0x2(%eax,%ecx,2)
	jump_38acd:
		test   %dx,%dx
		jge    jump_38aa9
	jump_38ad2:
		mov    0x4a(%esp),%eax
		sar    $0x10,%eax
		mov    0x34(%esp),%ebx
		add    %eax,%eax
		add    %ebx,%eax
		mov    (%eax),%cx
		inc    %ecx
		mov    %cx,(%eax)
		cmp    $0x31,%cx
		jle    jump_38af3
		movw   $0x31,(%eax)
	jump_38af3:
		incw   0x1c(%esp)
	jump_38af8:
		mov    0x4a(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0xc(%esp)
		lea    (%eax,%eax,1),%esi
		mov    (%esp),%eax
		add    %esi,%eax
		mov    0x1c(%esp),%edx
		cmp    (%eax),%dx
		jl     jump_38a0d
		add    0x40(%esp),%esi
		mov    (%esi),%cx
		inc    %ecx
		mov    %cx,(%esi)
		cmp    $0x3,%cx
		jle    jump_38b40
		movw   $0x0,(%esi)
		mov    (%eax),%dx
		inc    %edx
		mov    %dx,(%eax)
		cmp    $0x4,%dx
		jle    jump_38b40
		movw   $0x4,(%eax)
	jump_38b40:
		mov    0x4a(%esp),%edx
		sar    $0x10,%edx
		mov    0x44(%esp),%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    (%eax),%cx
		inc    %ecx
		mov    %cx,(%eax)
		cmp    $0x5,%cx
		jle    jump_38b79
		movw   $0x0,(%eax)
		mov    0x3c(%esp),%eax
		add    %edx,%eax
		mov    (%eax),%di
		inc    %edi
		mov    %di,(%eax)
		cmp    $0xa,%di
		jle    jump_38b79
		movw   $0xa,(%eax)
	jump_38b79:
		add    $0x20,%esp
	jump_38b7c:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x20


/*----------------------------------------------------------------*/
func_38b82:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		mov    (%ecx,%eax,2),%dx
		dec    %edx
		jmp    jump_38bbb
	jump_38b97:
		mov    0xe(%esp),%ebx
		sar    $0x10,%ebx
		movswl %dx,%ecx
		mov    (%edi,%ebx,4),%eax
		mov    (%eax,%ecx,2),%si
		mov    %si,0x2(%eax,%ecx,2)
		mov    0x0(%ebp,%ebx,4),%eax
		mov    (%eax,%ecx,2),%bx
		dec    %edx
		mov    %bx,0x2(%eax,%ecx,2)
	jump_38bbb:
		test   %dx,%dx
		jge    jump_38b97
	jump_38bc0:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_38bc6:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    0x1e(%esp),%eax
		mov    0x1c(%esp),%ecx
		sar    $0x10,%eax
		add    %eax,%ecx
		lea    (%eax,%eax,1),%esi
		mov    %eax,%edx
		add    %ebx,%esi
		shl    $0x2,%edx
		mov    (%ecx),%bl
		lea    (%edx,%ebp,1),%eax
		add    %edi,%edx
		cmp    $0xf,%bl
		jge    jump_38c65
		flds   (%edx)
		call   func___CHP
		fistpl (%esp)
		flds   (%eax)
		mov    (%esp),%edx
		call   func___CHP
		fistpl (%esp)
		mov    %edx,0x8(%esp)
		movsbl %bl,%edx
		mov    (%esp),%eax
		sub    $0xa,%edx
		mov    %eax,0x4(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_f0daa,%eax
		mov    0x4(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%esp),%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		call   func_5efb9
		mov    (%esi),%ax
		inc    %eax
		mov    %ax,(%esi)
		cmp    $0x2,%ax
		jle    jump_38cf0
		movw   $0x0,(%esi)
		incb   (%ecx)
		jmp    jump_38cf0
	jump_38c65:
		cmp    $0x13,%bl
		jge    jump_38cf0
		flds   (%edx)
		call   func___CHP
		fistpl (%esp)
		flds   (%eax)
		mov    (%esp),%edx
		call   func___CHP
		fistpl (%esp)
		mov    %edx,0x8(%esp)
		mov    (%esp),%eax
		movsbl %bl,%edx
		mov    %eax,0x4(%esp)
		mov    $0x12,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_f0daa,%eax
		mov    0x4(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%esp),%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		call   func_5efb9
		mov    (%esi),%ax
		inc    %eax
		mov    %ax,(%esi)
		cmp    $0x2,%ax
		jle    jump_38cdb
		movw   $0x0,(%esi)
		incb   (%ecx)
	jump_38cdb:
		mov    0x1e(%esp),%eax
		mov    0x1c(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		cmpb   $0x12,(%eax)
		jle    jump_38cf0
		movb   $0x65,(%eax)
	jump_38cf0:
		add    $0xc,%esp
		jmp    jump_367e8


/*----------------------------------------------------------------*/
func_38cf8:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    0x48(%esp),%ebp
		mov    %eax,0x8(%esp)
		mov    %edx,0x1c(%esp)
		mov    %ebx,0x20(%esp)
		mov    %ecx,%esi
		xor    %edx,%edx
		mov    %dx,0x2c(%esp)
	jump_38d17:
		mov    0x2a(%esp),%eax
		mov    0x8(%esp),%edi
		sar    $0x10,%eax
		add    %eax,%edi
		lea    (%eax,%eax,1),%edx
		mov    %edx,0x14(%esp)
		mov    (%edi),%dl
		cmp    $0x2,%dl
		jne    jump_38dc6
		push   %eax
		mov    0x7c(%esp),%eax
		push   %eax
		mov    0x6c(%esp),%edx
		push   %edx
		mov    0x6c(%esp),%ebx
		push   %ebx
		mov    0x68(%esp),%ecx
		push   %ecx
		mov    0x68(%esp),%eax
		push   %eax
		mov    0x68(%esp),%edx
		mov    0x64(%esp),%ebx
		push   %edx
		mov    %ebp,%ecx
		mov    0x38(%esp),%eax
		push   %ebx
		mov    0x40(%esp),%edx
		mov    %esi,%ebx
		call   func_389ea
		mov    0x5c(%esp),%eax
		mov    0x14(%esp),%ecx
		add    %ecx,%eax
		movswl (%eax),%edx
		mov    0x54(%esp),%eax
		add    %ecx,%eax
		lea    -0x5(%edx),%ebx
		movswl (%eax),%eax
		cmp    %ebx,%eax
		jl     jump_38da1
		add    $0x5,%edx
		cmp    %edx,%eax
		jg     jump_38da1
		mov    $0x33,%eax
		movb   $0x1,(%edi)
	jump_38d97:
		call   func_4f4cd
		jmp    jump_38fda
	jump_38da1:
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		mov    0x54(%esp),%eax
		add    %edx,%edx
		mov    0x58(%esp),%ecx
		add    %edx,%eax
		add    %ecx,%edx
		mov    (%eax),%bx
		mov    (%edx),%dx
		add    %edx,%ebx
		mov    %bx,(%eax)
		jmp    jump_38fda
	jump_38dc6:
		cmp    $0x1,%dl
		jne    jump_38fb9
		mov    %eax,%edx
		mov    0x70(%esp),%eax
		shl    $0x2,%edx
		add    %edx,%eax
		mov    (%eax),%ebx
		mov    %eax,0xc(%esp)
		test   $0x7fffffff,%ebx
		jne    jump_38e97
		mov    0x74(%esp),%eax
		add    %edx,%eax
		mov    (%eax),%ecx
		mov    %eax,(%esp)
		test   $0x7fffffff,%ecx
		jne    jump_38e97
		mov    0x6c(%esp),%eax
		mov    0x14(%esp),%edi
		mov    0x20(%esp),%ebx
		mov    0x68(%esp),%ecx
		add    %edi,%eax
		add    %edx,%ebx
		add    %edi,%ecx
		fild   (%eax)
		mov    %eax,0x10(%esp)
		mov    %edi,%eax
		mov    0x1c(%esp),%edi
		fsubrs (%ebx)
		add    %edi,%edx
		fild   (%ecx)
		mov    %eax,%edi
		fsubs  (%edx)
		add    %esi,%edi
		fcompp
		fnstsw %ax
		sahf
		ja     jump_38e64
		mov    $0x2,%eax
		call   func_499bd
		add    $0x8,%eax
		mov    %ax,(%edi)
		fild   (%ecx)
		fsubs  (%edx)
		mov    0x10(%esp),%eax
		fstps  0x4(%esp)
		fild   (%eax)
		fsubrs (%ebx)
		fdivrs 0x4(%esp)
		mov    0xc(%esp),%edx
		jmp    jump_38e8d
	jump_38e64:
		mov    $0x3,%eax
		call   func_499bd
		add    $0x9,%eax
		mov    %ax,(%edi)
		mov    0x10(%esp),%eax
		fild   (%eax)
		fsubrs (%ebx)
		fstps  0x4(%esp)
		fild   (%ecx)
		fsubs  (%edx)
		fdivrs 0x4(%esp)
		mov    (%esp),%edx
	jump_38e8d:
		fstps  0x4(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,(%edx)
	jump_38e97:
		xor    %edi,%edi
		mov    %di,0x34(%esp)
		jmp    jump_38f57
	jump_38ea3:
		mov    0x70(%esp),%ecx
		mov    0x20(%esp),%ebx
		add    %edi,%ecx
		add    %edi,%ebx
		testl  $0x7fffffff,(%ecx)
		je     jump_38ec5
		fld1
		fsubrs (%ebx)
		fstps  (%ebx)
		flds   (%ecx)
		fadds  (%edx)
		fstps  (%edx)
		jmp    jump_38ed7
	jump_38ec5:
		fld1
		mov    0x74(%esp),%ecx
		fadds  (%edx)
		add    %ecx,%edi
		fstps  (%edx)
		flds   (%edi)
		fsubrs (%ebx)
		fstps  (%ebx)
	jump_38ed7:
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		mov    0x2a(%esp),%edi
		push   %eax
		sar    $0x10,%edi
		push   %edi
		mov    0x58(%esp),%eax
		push   %eax
		mov    0x58(%esp),%edx
		mov    %edi,%ebx
		push   %edx
		mov    0x30(%esp),%edx
		shl    $0x2,%ebx
		mov    0x2c(%esp),%ecx
		flds   (%edx,%ebx,1)
		call   func___CHP
		add    %ecx,%ebx
		fistpl 0x34(%esp)
		flds   (%ebx)
		mov    0x34(%esp),%eax
		call   func___CHP
		mov    %ebp,%ecx
		fistpl 0x34(%esp)
		mov    %ax,0x38(%esp)
		mov    0x34(%esp),%eax
		mov    %esi,%ebx
		mov    %ax,0x40(%esp)
		mov    0x36(%esp),%edx
		mov    0x3e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_38780
		mov    0x50(%esp),%ecx
		mov    0x4c(%esp),%ebx
		push   %edi
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_38b82
		incw   0x34(%esp)
	jump_38f57:
		mov    0x2a(%esp),%ebx
		sar    $0x10,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x1c(%esp),%edx
		mov    %ebx,%edi
		mov    0x34(%esp),%ecx
		shl    $0x2,%edi
		mov    %eax,0x18(%esp)
		add    %edi,%edx
		cmp    (%esi,%eax,1),%cx
		jl     jump_38ea3
		mov    0x68(%esp),%eax
		mov    0x18(%esp),%edi
		add    %edi,%eax
		fild   (%eax)
		fsubs  (%edx)
		fld1
		fcompp
		fnstsw %ax
		sahf
		jbe    jump_38fda
		mov    0x8(%esp),%eax
		movb   $0x0,(%ebx,%eax,1)
		add    0x7c(%esp),%ebx
		mov    0x60(%esp),%eax
		add    %edi,%eax
		movb   $0xa,(%ebx)
		movw   $0x0,(%eax)
		mov    $0x34,%eax
		jmp    jump_38d97
	jump_38fb9:
		mov    0x7c(%esp),%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_38fda
		push   %eax
		mov    0x7c(%esp),%ecx
		mov    0x64(%esp),%ebx
		push   %edx
		mov    0x24(%esp),%eax
		mov    0x28(%esp),%edx
		call   func_38bc6
	jump_38fda:
		mov    0x2c(%esp),%ebx
		inc    %ebx
		mov    %bx,0x2c(%esp)
		cmp    $0x32,%bx
		jl     jump_38d17
	jump_38fee:
		add    $0x38,%esp
	jump_38ff1:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x38


/*----------------------------------------------------------------*/
func_38ff7:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    0x44(%esp),%ebp
		mov    %eax,0x8(%esp)
		mov    %edx,0x1c(%esp)
		mov    %ebx,0x14(%esp)
		mov    %ecx,%esi
		xor    %edx,%edx
		mov    %dx,0x28(%esp)
	jump_39016:
		mov    0x26(%esp),%eax
		mov    0x8(%esp),%edi
		sar    $0x10,%eax
		add    %eax,%edi
		lea    (%eax,%eax,1),%edx
		mov    %edx,0x18(%esp)
		mov    (%edi),%dl
		cmp    $0x2,%dl
		jne    jump_390dd
		push   %eax
		mov    0x78(%esp),%edx
		push   %edx
		mov    0x68(%esp),%ebx
		push   %ebx
		mov    0x68(%esp),%ecx
		push   %ecx
		mov    0x64(%esp),%eax
		push   %eax
		mov    0x64(%esp),%edx
		push   %edx
		mov    0x64(%esp),%ebx
		mov    0x60(%esp),%ecx
		push   %ebx
		mov    0x38(%esp),%eax
		mov    0x30(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		call   func_389ea
		mov    0x58(%esp),%eax
		add    0x18(%esp),%eax
		mov    0x18(%esp),%ebx
		movswl (%eax),%edx
		mov    0x50(%esp),%eax
		add    %ebx,%eax
		lea    -0x5(%edx),%ebx
		movswl (%eax),%eax
		cmp    %ebx,%eax
		jle    jump_390a2
		add    $0x5,%edx
		cmp    %edx,%eax
		jge    jump_390a2
		mov    $0x33,%eax
		movb   $0x1,(%edi)
	jump_39098:
		call   func_4f4cd
		jmp    jump_392f2
	jump_390a2:
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		mov    0x50(%esp),%eax
		add    %edx,%edx
		mov    0x54(%esp),%ecx
		add    %edx,%eax
		add    %ecx,%edx
		mov    (%eax),%bx
		mov    (%edx),%dx
		add    %edx,%ebx
		mov    %bx,(%eax)
		cmp    $0x168,%bx
		jl     jump_392f2
		mov    %ebx,%edi
		sub    $0x168,%edi
		mov    %di,(%eax)
		jmp    jump_392f2
	jump_390dd:
		cmp    $0x1,%dl
		jne    jump_392d1
		mov    %eax,%ebx
		mov    0x6c(%esp),%eax
		shl    $0x2,%ebx
		add    %ebx,%eax
		mov    (%eax),%ecx
		mov    %eax,0xc(%esp)
		test   $0x7fffffff,%ecx
		jne    jump_391ab
		mov    0x70(%esp),%eax
		add    %ebx,%eax
		mov    (%eax),%edi
		mov    %eax,0x10(%esp)
		test   $0x7fffffff,%edi
		jne    jump_391ab
		mov    0x68(%esp),%edx
		mov    0x18(%esp),%eax
		mov    0x14(%esp),%ecx
		add    %eax,%edx
		mov    0x18(%esp),%edi
		add    %ebx,%ecx
		fild   (%edx)
		mov    0x64(%esp),%eax
		fsubs  (%ecx)
		add    %edi,%eax
		fild   (%eax)
		mov    %eax,(%esp)
		add    0x1c(%esp),%ebx
		fsubs  (%ebx)
		add    %esi,%edi
		fcompp
		fnstsw %ax
		sahf
		ja     jump_39178
		mov    $0x2,%eax
		call   func_499bd
		add    $0x8,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		fild   (%eax)
		fsubs  (%ebx)
		fstps  0x20(%esp)
		fild   (%edx)
		fsubs  (%ecx)
		fdivrs 0x20(%esp)
		mov    0xc(%esp),%edx
		jmp    jump_391a1
	jump_39178:
		mov    $0x3,%eax
		call   func_499bd
		add    $0x9,%eax
		mov    %ax,(%edi)
		fild   (%edx)
		fsubs  (%ecx)
		mov    (%esp),%eax
		fstps  0x20(%esp)
		fild   (%eax)
		fsubs  (%ebx)
		fdivrs 0x20(%esp)
		mov    0x10(%esp),%edx
	jump_391a1:
		fstps  0x20(%esp)
		mov    0x20(%esp),%eax
		mov    %eax,(%edx)
	jump_391ab:
		xor    %edi,%edi
		mov    %di,0x2c(%esp)
		jmp    jump_39271
	jump_391b7:
		mov    0x6c(%esp),%edi
		mov    0x1c(%esp),%ebx
		add    %ecx,%edi
		add    %ecx,%ebx
		testl  $0x7fffffff,(%edi)
		je     jump_391d9
		fld1
		fadds  (%edx)
		fstps  (%edx)
		flds   (%edi)
		fadds  (%ebx)
		fstps  (%ebx)
		jmp    jump_391e9
	jump_391d9:
		fld1
		fadds  (%ebx)
		fstps  (%ebx)
		add    0x70(%esp),%ecx
		flds   (%ecx)
		fadds  (%edx)
		fstps  (%edx)
	jump_391e9:
		mov    0x2a(%esp),%eax
		mov    0x26(%esp),%edi
		mov    0x4c(%esp),%ecx
		mov    0x14(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%edi
		push   %eax
		mov    %edi,%edx
		mov    0x4c(%esp),%eax
		shl    $0x2,%edx
		push   %edi
		flds   (%edx,%ebx,1)
		push   %ecx
		call   func___CHP
		mov    0x28(%esp),%ebx
		fistpl 0x30(%esp)
		push   %eax
		mov    0x34(%esp),%eax
		add    %ebx,%edx
		mov    %ax,0x40(%esp)
		flds   (%edx)
		mov    0x3e(%esp),%eax
		call   func___CHP
		sar    $0x10,%eax
		fistpl 0x34(%esp)
		mov    %eax,0x14(%esp)
		mov    0x34(%esp),%eax
		mov    %ebp,%ecx
		mov    %ax,0x40(%esp)
		mov    %esi,%ebx
		mov    0x3e(%esp),%eax
		mov    0x14(%esp),%edx
		sar    $0x10,%eax
		call   func_38780
		mov    0x4c(%esp),%ecx
		mov    0x48(%esp),%ebx
		push   %edi
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_38b82
		incw   0x2c(%esp)
	jump_39271:
		mov    0x26(%esp),%ebx
		sar    $0x10,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x14(%esp),%edx
		mov    %ebx,%ecx
		mov    %eax,%edi
		shl    $0x2,%ecx
		mov    0x2c(%esp),%eax
		add    %ecx,%edx
		cmp    (%edi,%esi,1),%ax
		jl     jump_391b7
		mov    0x68(%esp),%eax
		add    %edi,%eax
		fild   (%eax)
		fsubs  (%edx)
		fld1
		fcompp
		fnstsw %ax
		sahf
		jbe    jump_392f2
		mov    0x8(%esp),%eax
		movb   $0x0,(%ebx,%eax,1)
		mov    0x78(%esp),%eax
		mov    %edi,%edx
		add    %eax,%ebx
		mov    0x5c(%esp),%eax
		add    %edx,%eax
		movb   $0xa,(%ebx)
		movw   $0x0,(%eax)
		mov    $0x34,%eax
		jmp    jump_39098
	jump_392d1:
		mov    0x78(%esp),%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_392f2
		push   %eax
		mov    0x78(%esp),%ecx
		mov    0x60(%esp),%ebx
		push   %edx
		mov    0x24(%esp),%eax
		mov    0x1c(%esp),%edx
		call   func_38bc6
	jump_392f2:
		mov    0x28(%esp),%ebx
		inc    %ebx
		mov    %bx,0x28(%esp)
		cmp    $0x32,%bx
		jl     jump_39016
	jump_39306:
		add    $0x34,%esp
		jmp    jump_38ff1


/*----------------------------------------------------------------*/
func_3930e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    0x44(%esp),%ebp
		mov    %eax,0x8(%esp)
		mov    %edx,0x1c(%esp)
		mov    %ebx,0x14(%esp)
		mov    %ecx,%esi
		xor    %edx,%edx
		mov    %dx,0x28(%esp)
	jump_3932d:
		mov    0x26(%esp),%eax
		mov    0x8(%esp),%edi
		sar    $0x10,%eax
		add    %eax,%edi
		lea    (%eax,%eax,1),%edx
		mov    %edx,0x18(%esp)
		mov    (%edi),%dl
		cmp    $0x2,%dl
		jne    jump_393f4
		push   %eax
		mov    0x78(%esp),%edx
		push   %edx
		mov    0x68(%esp),%ebx
		push   %ebx
		mov    0x68(%esp),%ecx
		push   %ecx
		mov    0x64(%esp),%eax
		push   %eax
		mov    0x64(%esp),%edx
		push   %edx
		mov    0x64(%esp),%ebx
		mov    0x60(%esp),%ecx
		push   %ebx
		mov    0x38(%esp),%eax
		mov    0x30(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		call   func_389ea
		mov    0x58(%esp),%eax
		add    0x18(%esp),%eax
		mov    0x18(%esp),%ebx
		movswl (%eax),%edx
		mov    0x50(%esp),%eax
		add    %ebx,%eax
		lea    -0x5(%edx),%ebx
		movswl (%eax),%eax
		cmp    %ebx,%eax
		jl     jump_393b9
		add    $0x5,%edx
		cmp    %edx,%eax
		jg     jump_393b9
		mov    $0x33,%eax
		movb   $0x1,(%edi)
	jump_393af:
		call   func_4f4cd
		jmp    jump_39607
	jump_393b9:
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		mov    0x50(%esp),%eax
		add    %edx,%edx
		mov    0x54(%esp),%ecx
		add    %edx,%eax
		add    %ecx,%edx
		mov    (%eax),%bx
		mov    (%edx),%dx
		add    %edx,%ebx
		mov    %bx,(%eax)
		cmp    $0x168,%bx
		jl     jump_39607
		mov    %ebx,%edi
		sub    $0x168,%edi
		mov    %di,(%eax)
		jmp    jump_39607
	jump_393f4:
		cmp    $0x1,%dl
		jne    jump_395e6
		mov    %eax,%ebx
		mov    0x6c(%esp),%eax
		shl    $0x2,%ebx
		add    %ebx,%eax
		mov    (%eax),%ecx
		mov    %eax,0xc(%esp)
		test   $0x7fffffff,%ecx
		jne    jump_394c2
		mov    0x70(%esp),%eax
		add    %ebx,%eax
		mov    (%eax),%edi
		mov    %eax,0x10(%esp)
		test   $0x7fffffff,%edi
		jne    jump_394c2
		mov    0x68(%esp),%edx
		mov    0x18(%esp),%eax
		mov    0x14(%esp),%ecx
		add    %eax,%edx
		mov    0x18(%esp),%edi
		add    %ebx,%ecx
		fild   (%edx)
		mov    0x64(%esp),%eax
		fsubs  (%ecx)
		add    %edi,%eax
		fild   (%eax)
		mov    %eax,(%esp)
		add    0x1c(%esp),%ebx
		fsubrs (%ebx)
		add    %esi,%edi
		fcompp
		fnstsw %ax
		sahf
		ja     jump_3948f
		mov    $0x2,%eax
		call   func_499bd
		add    $0x8,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		fild   (%eax)
		fsubrs (%ebx)
		fstps  0x20(%esp)
		fild   (%edx)
		fsubs  (%ecx)
		fdivrs 0x20(%esp)
		mov    0xc(%esp),%edx
		jmp    jump_394b8
	jump_3948f:
		mov    $0x3,%eax
		call   func_499bd
		add    $0x9,%eax
		mov    %ax,(%edi)
		fild   (%edx)
		fsubs  (%ecx)
		mov    (%esp),%eax
		fstps  0x20(%esp)
		fild   (%eax)
		fsubrs (%ebx)
		fdivrs 0x20(%esp)
		mov    0x10(%esp),%edx
	jump_394b8:
		fstps  0x20(%esp)
		mov    0x20(%esp),%eax
		mov    %eax,(%edx)
	jump_394c2:
		xor    %edi,%edi
		mov    %di,0x2c(%esp)
		jmp    jump_3958a
	jump_394ce:
		mov    0x6c(%esp),%ecx
		mov    0x14(%esp),%ebx
		add    %edi,%ecx
		add    %edi,%ebx
		testl  $0x7fffffff,(%ecx)
		je     jump_394f0
		fld1
		fadds  (%ebx)
		fstps  (%ebx)
		flds   (%ecx)
		fsubrs (%edx)
		fstps  (%edx)
		jmp    jump_39502
	jump_394f0:
		fld1
		mov    0x70(%esp),%ecx
		fsubrs (%edx)
		add    %ecx,%edi
		fstps  (%edx)
		flds   (%edi)
		fadds  (%ebx)
		fstps  (%ebx)
	jump_39502:
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		mov    0x26(%esp),%edi
		push   %eax
		sar    $0x10,%edi
		push   %edi
		mov    0x54(%esp),%eax
		push   %eax
		mov    0x54(%esp),%edx
		push   %edx
		mov    %edi,%edx
		mov    0x24(%esp),%ebx
		shl    $0x2,%edx
		flds   (%edx,%ebx,1)
		call   func___CHP
		mov    0x2c(%esp),%ebx
		fistpl 0x34(%esp)
		mov    0x34(%esp),%eax
		add    %ebx,%edx
		mov    %ax,0x40(%esp)
		flds   (%edx)
		mov    0x3e(%esp),%eax
		call   func___CHP
		sar    $0x10,%eax
		fistpl 0x34(%esp)
		mov    %eax,0x14(%esp)
		mov    0x34(%esp),%eax
		mov    %ebp,%ecx
		mov    %ax,0x40(%esp)
		mov    %esi,%ebx
		mov    0x3e(%esp),%eax
		mov    0x14(%esp),%edx
		sar    $0x10,%eax
		call   func_38780
		mov    0x4c(%esp),%ecx
		mov    0x48(%esp),%ebx
		push   %edi
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_38b82
		incw   0x2c(%esp)
	jump_3958a:
		mov    0x26(%esp),%ebx
		sar    $0x10,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x1c(%esp),%edx
		mov    %ebx,%edi
		mov    %eax,%ecx
		shl    $0x2,%edi
		mov    0x2c(%esp),%eax
		add    %edi,%edx
		cmp    (%ecx,%esi,1),%ax
		jl     jump_394ce
		mov    0x64(%esp),%eax
		add    %ecx,%eax
		fild   (%eax)
		fsubrs (%edx)
		fld1
		fcompp
		fnstsw %ax
		sahf
		jbe    jump_39607
		mov    0x8(%esp),%eax
		movb   $0x0,(%ebx,%eax,1)
		add    0x78(%esp),%ebx
		mov    0x5c(%esp),%eax
		add    %ecx,%eax
		movb   $0xa,(%ebx)
		movw   $0x0,(%eax)
		mov    $0x34,%eax
		jmp    jump_393af
	jump_395e6:
		mov    0x78(%esp),%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_39607
		push   %eax
		mov    0x78(%esp),%ecx
		mov    0x60(%esp),%ebx
		push   %edx
		mov    0x24(%esp),%eax
		mov    0x1c(%esp),%edx
		call   func_38bc6
	jump_39607:
		mov    0x28(%esp),%ebx
		inc    %ebx
		mov    %bx,0x28(%esp)
		cmp    $0x32,%bx
		jl     jump_3932d
		jmp    jump_39306


/*----------------------------------------------------------------*/
func_39620:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    0x48(%esp),%ebp
		mov    %eax,0x4(%esp)
		mov    %edx,0x1c(%esp)
		mov    %ebx,0x18(%esp)
		mov    %ecx,%esi
		xor    %edx,%edx
		mov    %dx,0x34(%esp)
	jump_3963f:
		mov    0x32(%esp),%eax
		mov    0x4(%esp),%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    %edx,(%esp)
		mov    (%edx),%bl
		lea    (%eax,%eax,1),%edi
		cmp    $0x2,%bl
		jne    jump_396cc
		push   %eax
		mov    0x7c(%esp),%edx
		push   %edx
		mov    0x6c(%esp),%ebx
		push   %ebx
		mov    0x6c(%esp),%ecx
		push   %ecx
		mov    0x68(%esp),%eax
		push   %eax
		mov    0x68(%esp),%edx
		push   %edx
		mov    0x68(%esp),%ebx
		mov    0x64(%esp),%ecx
		push   %ebx
		mov    0x38(%esp),%eax
		mov    0x34(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		call   func_389ea
		mov    0x54(%esp),%eax
		mov    0x5c(%esp),%edx
		add    %edi,%eax
		mov    (%edx,%edi,1),%cx
		mov    (%eax),%bx
		cmp    %cx,%bx
		jl     jump_396b7
		add    0x58(%esp),%edi
		mov    (%edi),%dx
		mov    %ebx,%edi
		sub    %edx,%edi
		mov    %di,(%eax)
		jmp    jump_398da
	jump_396b7:
		mov    (%esp),%eax
		movb   $0x1,(%eax)
		mov    $0x33,%eax
	jump_396c2:
		call   func_4f4cd
		jmp    jump_398da
	jump_396cc:
		cmp    $0x1,%bl
		jne    jump_398b9
		mov    %eax,%ebx
		mov    0x70(%esp),%eax
		shl    $0x2,%ebx
		add    %ebx,%eax
		mov    (%eax),%ecx
		mov    %eax,0x8(%esp)
		test   $0x7fffffff,%ecx
		jne    jump_39797
		mov    0x74(%esp),%eax
		add    %ebx,%eax
		mov    (%eax),%edx
		mov    %eax,0xc(%esp)
		test   $0x7fffffff,%edx
		jne    jump_39797
		mov    0x6c(%esp),%edx
		mov    0x18(%esp),%eax
		add    %edi,%edx
		mov    0x68(%esp),%ecx
		add    %ebx,%eax
		fild   (%edx)
		mov    %eax,0x10(%esp)
		fsubs  (%eax)
		mov    0x1c(%esp),%eax
		add    %edi,%ecx
		add    %eax,%ebx
		fild   (%ecx)
		fsubrs (%ebx)
		add    %esi,%edi
		fcompp
		fnstsw %ax
		sahf
		ja     jump_39763
		mov    $0x2,%eax
		call   func_499bd
		add    $0x8,%eax
		mov    %ax,(%edi)
		fild   (%ecx)
		fsubrs (%ebx)
		mov    0x10(%esp),%eax
		fstps  0x20(%esp)
		fild   (%edx)
		fsubs  (%eax)
		fdivrs 0x20(%esp)
		mov    0x8(%esp),%edx
		jmp    jump_3978d
	jump_39763:
		mov    $0x3,%eax
		call   func_499bd
		add    $0x9,%eax
		mov    %ax,(%edi)
		mov    0x10(%esp),%eax
		fild   (%edx)
		fsubs  (%eax)
		fstps  0x20(%esp)
		fild   (%ecx)
		fsubrs (%ebx)
		fdivrs 0x20(%esp)
		mov    0xc(%esp),%edx
	jump_3978d:
		fstps  0x20(%esp)
		mov    0x20(%esp),%eax
		mov    %eax,(%edx)
	jump_39797:
		xor    %edi,%edi
		mov    %di,0x30(%esp)
		jmp    jump_39855
	jump_397a3:
		mov    0x70(%esp),%edi
		mov    0x1c(%esp),%ebx
		add    %ecx,%edi
		add    %ecx,%ebx
		testl  $0x7fffffff,(%edi)
		je     jump_397c5
		fld1
		fadds  (%edx)
		fstps  (%edx)
		flds   (%edi)
		fsubrs (%ebx)
		fstps  (%ebx)
		jmp    jump_397d5
	jump_397c5:
		fld1
		fsubrs (%ebx)
		fstps  (%ebx)
		add    0x74(%esp),%ecx
		flds   (%ecx)
		fadds  (%edx)
		fstps  (%edx)
	jump_397d5:
		mov    0x2e(%esp),%eax
		sar    $0x10,%eax
		mov    0x32(%esp),%edi
		push   %eax
		sar    $0x10,%edi
		push   %edi
		mov    0x58(%esp),%ecx
		push   %ecx
		mov    0x58(%esp),%eax
		mov    %edi,%ebx
		push   %eax
		mov    0x28(%esp),%eax
		shl    $0x2,%ebx
		mov    0x2c(%esp),%ecx
		flds   (%ebx,%eax,1)
		call   func___CHP
		add    %ecx,%ebx
		fistpl 0x34(%esp)
		flds   (%ebx)
		mov    0x34(%esp),%eax
		call   func___CHP
		mov    %ebp,%ecx
		fistpl 0x34(%esp)
		mov    %ax,0x38(%esp)
		mov    0x34(%esp),%eax
		mov    %esi,%ebx
		mov    %ax,0x3c(%esp)
		mov    0x36(%esp),%edx
		mov    0x3a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_38780
		mov    0x50(%esp),%ecx
		mov    0x4c(%esp),%ebx
		push   %edi
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_38b82
		incw   0x30(%esp)
	jump_39855:
		mov    0x32(%esp),%ebx
		sar    $0x10,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x18(%esp),%edx
		mov    %ebx,%ecx
		mov    0x30(%esp),%edi
		shl    $0x2,%ecx
		mov    %eax,0x14(%esp)
		add    %ecx,%edx
		cmp    (%esi,%eax,1),%di
		jl     jump_397a3
		mov    0x6c(%esp),%eax
		mov    0x14(%esp),%ecx
		add    %ecx,%eax
		fild   (%eax)
		fsubs  (%edx)
		fld1
		fcompp
		fnstsw %ax
		sahf
		jbe    jump_398da
		mov    0x4(%esp),%eax
		mov    0x7c(%esp),%edi
		movb   $0x0,(%ebx,%eax,1)
		mov    0x60(%esp),%eax
		add    %edi,%ebx
		add    %ecx,%eax
		movb   $0xa,(%ebx)
		movw   $0x0,(%eax)
		mov    $0x34,%eax
		jmp    jump_396c2
	jump_398b9:
		mov    0x7c(%esp),%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_398da
		push   %eax
		mov    0x7c(%esp),%ecx
		mov    0x64(%esp),%ebx
		push   %edx
		mov    0x24(%esp),%eax
		mov    0x20(%esp),%edx
		call   func_38bc6
	jump_398da:
		mov    0x34(%esp),%ebx
		inc    %ebx
		mov    %bx,0x34(%esp)
		cmp    $0x32,%bx
		jl     jump_3963f
		jmp    jump_38fee


/*----------------------------------------------------------------*/
func_398f3:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		push   $0x6
		mov    $0x1,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1a452
		xor    %ecx,%ecx
	jump_3991d:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_399c9
		call   func_1a31d
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %cx,data_f0b9e
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3991d
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0x2,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_3996f:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3999c
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_3996f
	jump_3999c:
		mov    0xc(%esp),%eax
		mov    data_f0b9e,%dx
		cmp    %dx,%ax
		jge    jump_399bf
		mov    0x14(%esp),%eax
		mov    %ax,(%edi)
		mov    0x10(%esp),%eax
		mov    %edx,0xc(%esp)
		mov    %ax,0x0(%ebp)
	jump_399bf:
		call   func_1a3ae
		jmp    jump_3991d
	jump_399c9:
		cmpw   $0x0,data_f0b9e
		jne    jump_399da
		mov    $0xffffffff,%eax
		jmp    jump_39a41
	jump_399da:
		mov    %ax,data_f0b9e
		mov    $0x2,%ebx
		movswl 0x0(%ebp),%edx
		movswl (%edi),%eax
		xor    %ecx,%ecx
		call   func_1ac08
	jump_399f3:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_39a3c
		mov    0xe(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x12(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		movswl %cx,%ebx
		mov    (%esp),%edx
		add    %ebx,%ebx
		mov    0x14(%esp),%eax
		mov    %ax,(%edx,%ebx,1)
		add    0x28(%esp),%ebx
		mov    0x10(%esp),%eax
		inc    %ecx
		mov    %ax,(%ebx)
		jmp    jump_399f3
	jump_39a3c:
		mov    $0x1,%eax
	jump_39a41:
		add    $0x18,%esp
		jmp    jump_38bc0


/*----------------------------------------------------------------*/
func_39a49:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8e4,%esp
		mov    %eax,%esi
		call   func_13f8a
		mov    0x63(%esi),%ah
		cmp    $0x1,%ah
		jne    jump_39a8e
		movsbw (%esi),%cx
		sub    $0x3,%ecx
		jmp    jump_39a7c
	jump_39a6d:
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		call   func_13d02
		dec    %ecx
	jump_39a7c:
		movsbl (%esi),%edx
		movswl %cx,%eax
		sub    $0x6,%edx
		cmp    %edx,%eax
		jge    jump_39a6d
		jmp    jump_39b11
	jump_39a8e:
		cmp    $0x3,%ah
		jne    jump_39aba
		movsbw (%esi),%cx
		add    $0x3,%ecx
		jmp    jump_39aab
	jump_39a9c:
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		call   func_13d02
		inc    %ecx
	jump_39aab:
		movsbl (%esi),%edx
		movswl %cx,%eax
		add    $0x6,%edx
		cmp    %edx,%eax
		jle    jump_39a9c
		jmp    jump_39b11
	jump_39aba:
		test   %ah,%ah
		jne    jump_39ae6
		movsbw 0x1(%esi),%cx
		add    $0x3,%ecx
		jmp    jump_39ad6
	jump_39ac8:
		mov    $0x1,%ebx
		movsbl (%esi),%eax
		call   func_13d02
		inc    %ecx
	jump_39ad6:
		movsbl 0x1(%esi),%eax
		movswl %cx,%edx
		add    $0x6,%eax
		cmp    %eax,%edx
		jle    jump_39ac8
		jmp    jump_39b11
	jump_39ae6:
		cmp    $0x2,%ah
		jne    jump_39b11
		movsbw 0x1(%esi),%cx
		sub    $0x3,%ecx
		jmp    jump_39b03
	jump_39af5:
		mov    $0x1,%ebx
		movsbl (%esi),%eax
		call   func_13d02
		dec    %ecx
	jump_39b03:
		movsbl 0x1(%esi),%eax
		movswl %cx,%edx
		sub    $0x6,%eax
		cmp    %eax,%edx
		jge    jump_39af5
	jump_39b11:
		cmpw   $0x1,data_f14d8
		jne    jump_39b53
		lea    0x8b8(%esp),%eax
		lea    0x89c(%esp),%ecx
		lea    0x8dc(%esp),%ebx
		push   %eax
		lea    0x8e4(%esp),%edx
		mov    %esi,%eax
		call   func_398f3
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_39c45
		mov    $0xffffffff,%edx
		jmp    jump_3a943
	jump_39b53:
		mov    $0x1,%eax
		call   func_44d67
		xor    %edi,%edi
	jump_39b5f:
		lea    0x8dc(%esp),%edx
		lea    0x8e0(%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_39b8d
		xor    %eax,%eax
		mov    $0xffffffff,%edx
		call   func_44d67
		jmp    jump_3a943
	jump_39b8d:
		mov    0x8da(%esp),%edx
		mov    0x8de(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %di,data_f0b9e
		call   func_13cbd
		test   %ax,%ax
		jl     jump_39c31
		mov    0x8da(%esp),%edx
		mov    0x8de(%esp),%eax
		mov    $0x2,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %edi,%ecx
		call   func_1ac08
	jump_39bd6:
		lea    0x8dc(%esp),%edx
		lea    0x8e0(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_39c31
		mov    0x8da(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x8de(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		movswl %cx,%edx
		mov    0x8e0(%esp),%eax
		mov    %ax,0x89c(%esp,%edx,2)
		mov    0x8dc(%esp),%eax
		inc    %ecx
		mov    %ax,0x8b8(%esp,%edx,2)
		jmp    jump_39bd6
	jump_39c31:
		cmp    data_f0b9e,%di
		je     jump_39b5f
		xor    %eax,%eax
		call   func_44d67
	jump_39c45:
		mov    $data_77b03,%eax
		call   func_1fea4
		call   func_103a8
		xor    %ebx,%ebx
	jump_39c56:
		mov    $0x64,%eax
		call   w_dos_malloc
		movswl %bx,%edi
		xor    %cl,%cl
		mov    %eax,0x258(%esp,%edi,4)
		mov    $0x64,%eax
		inc    %ebx
		call   w_dos_malloc
		mov    %eax,0x190(%esp,%edi,4)
		mov    %cl,0x868(%esp,%edi,1)
		cmp    $0x32,%bx
		jl     jump_39c56
		mov    $0x8,%eax
		call   func_1033b
		mov    $0x1,%eax
		call   func_44d6e
		mov    %esi,%eax
		mov    $0x3,%edx
		call   func_2cba1
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   func_200de
	jump_39cb4:
		mov    $0xa,%edx
		xor    %eax,%eax
		call   func_30824
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ebx
		call   func_454b3
		call   func_5e9e8
		call   func_499e4
		cmp    $0x4,%bx
		jl     jump_39cb4
		call   func_44d75
		xor    %ecx,%ecx
		jmp    jump_39d00
	jump_39cf0:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %ecx
	jump_39d00:
		cmp    data_f0b9e,%cx
		jl     jump_39cf0
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    $0x5,%eax
		call   func_1033b
		movsbl (%esi),%eax
		call   func_10971
		mov    %ax,0x8e0(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    %ax,0x8dc(%esp)
		mov    0x63(%esi),%ch
		cmp    $0x1,%ch
		jne    jump_3a01b
		xor    %ecx,%ecx
	jump_39d50:
		movswl %cx,%edx
		xor    %edi,%edi
		mov    $0x2,%ah
		mov    %edi,0x320(%esp,%edx,4)
		mov    %ah,0x834(%esp,%edx,1)
		mov    $0xd,%eax
		mov    %edi,0x3e8(%esp,%edx,4)
		call   func_499bd
		movswl %ax,%edi
		mov    0x89a(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x708(%esp,%edx,2)
		mov    0x8b6(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x6a4(%esp,%edx,2)
		mov    0x8de(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		add    $0x5,%eax
		mov    %di,0x578(%esp,%edx,2)
		mov    %eax,0x8d4(%esp)
		mov    0x8da(%esp),%eax
		mov    %di,0x514(%esp,%edx,2)
		sar    $0x10,%eax
		mov    %di,0x4b0(%esp,%edx,2)
		sub    $0x2,%eax
		fildl  0x8d4(%esp)
		mov    %eax,0x8d4(%esp)
		fstps  0xc8(%esp,%edx,4)
		fildl  0x8d4(%esp)
		mov    $0x4,%eax
		fstps  (%esp,%edx,4)
		call   func_499bd
		inc    %eax
		mov    %ax,0x7d0(%esp,%edx,2)
		mov    $0x5a,%eax
		mov    $0x167,%ebx
		call   func_499bd
		sub    %eax,%ebx
		mov    $0x3,%eax
		mov    %bx,0x76c(%esp,%edx,2)
		call   func_499bd
		inc    %eax
		mov    %ax,0x5dc(%esp,%edx,2)
		mov    $0x1e,%eax
		call   func_499bd
		add    $0x8c,%eax
		inc    %ecx
		mov    %ax,0x640(%esp,%edx,2)
		cmp    $0x32,%cx
		jl     jump_39d50
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x23,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_39e80:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0x5,%eax
		imul   $0xc,%eax,%eax
		mov    0x8dc(%esp),%edx
		add    $data_f0daa,%eax
		add    $0xa,%edx
		add    0x6(%eax),%dx
		mov    0x8e0(%esp),%edi
		add    $0xf,%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		inc    %ecx
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_39e80
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_39efd
	jump_39eed:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_39efd:
		cmp    data_f0b9e,%dx
		jl     jump_39eed
		mov    $0x3,%eax
		call   func_4f4cd
	jump_39f10:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x8dc(%esp),%eax
		mov    data_f0e10,%di
		add    $0xa,%eax
		add    %edi,%eax
		movswl %ax,%edx
		mov    0x8e0(%esp),%eax
		mov    data_f0e0e,%cx
		add    $0xf,%eax
		add    %ecx,%eax
		mov    data_f0e12,%ebx
		cwtl
		call   func_5efb9
		lea    0x868(%esp),%eax
		push   %eax
		push   $data_f0e0a
		lea    0x3f0(%esp),%eax
		push   %eax
		lea    0x32c(%esp),%eax
		push   %eax
		lea    0x6b4(%esp),%eax
		push   %eax
		lea    0x71c(%esp),%eax
		push   %eax
		lea    0x4c8(%esp),%eax
		push   %eax
		lea    0x530(%esp),%eax
		push   %eax
		lea    0x660(%esp),%eax
		push   %eax
		lea    0x600(%esp),%eax
		push   %eax
		lea    0x794(%esp),%eax
		push   %eax
		lea    0x5a4(%esp),%eax
		push   %eax
		lea    0x1c0(%esp),%eax
		lea    0x800(%esp),%ecx
		push   %eax
		lea    0x28c(%esp),%eax
		lea    0x34(%esp),%ebx
		push   %eax
		lea    0x100(%esp),%edx
		lea    0x86c(%esp),%eax
		call   func_39620
		call   func_5e9e8
		call   func_499e4
		xor    %eax,%eax
		jmp    jump_3a006
	jump_39ff8:
		movswl %ax,%edx
		cmpb   $0x64,0x868(%esp,%edx,1)
		jle    jump_3a00c
		inc    %eax
	jump_3a006:
		cmp    $0x32,%ax
		jl     jump_39ff8
	jump_3a00c:
		cmp    $0x32,%ax
		je     jump_3a856
		jmp    jump_39f10
	jump_3a01b:
		cmp    $0x3,%ch
		jne    jump_3a2bb
		xor    %ecx,%ecx
	jump_3a026:
		movswl %cx,%edx
		xor    %ebp,%ebp
		mov    $0x2,%al
		mov    %ebp,0x320(%esp,%edx,4)
		mov    %al,0x834(%esp,%edx,1)
		mov    $0xd,%eax
		mov    %ebp,0x3e8(%esp,%edx,4)
		call   func_499bd
		movswl %ax,%edi
		mov    0x89a(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x708(%esp,%edx,2)
		mov    0x8b6(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x6a4(%esp,%edx,2)
		mov    0x8de(%esp),%eax
		xor    %edi,%edi
		sar    $0x10,%eax
		mov    %di,0x578(%esp,%edx,2)
		add    $0x17,%eax
		mov    %di,0x514(%esp,%edx,2)
		mov    %eax,0x8d4(%esp)
		mov    %di,0x4b0(%esp,%edx,2)
		fildl  0x8d4(%esp)
		mov    $0x4,%eax
		fstps  0xc8(%esp,%edx,4)
		fild   0x8dc(%esp)
		fstps  (%esp,%edx,4)
		call   func_499bd
		inc    %eax
		mov    %ax,0x7d0(%esp,%edx,2)
		mov    $0x5a,%eax
		call   func_499bd
		add    $0xb4,%eax
		mov    %ax,0x76c(%esp,%edx,2)
		mov    $0x3,%eax
		call   func_499bd
		inc    %eax
		mov    %ax,0x5dc(%esp,%edx,2)
		mov    $0x14,%eax
		mov    $0x28,%ebx
		call   func_499bd
		sub    %eax,%ebx
		inc    %ecx
		mov    %bx,0x640(%esp,%edx,2)
		cmp    $0x32,%cx
		jl     jump_3a026
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x23,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_3a142:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0x9,%eax
		imul   $0xc,%eax,%edi
		mov    0x8dc(%esp),%eax
		add    $data_f0daa,%edi
		add    $0xa,%eax
		add    0x6(%edi),%ax
		movswl %ax,%edx
		mov    0x8e0(%esp),%eax
		add    $0xf,%eax
		add    0x4(%edi),%ax
		mov    %ax,0x8d8(%esp)
		mov    0x8d6(%esp),%eax
		mov    0x8(%edi),%ebx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_3a142
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_3a1d3
	jump_3a1c3:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_3a1d3:
		cmp    data_f0b9e,%dx
		jl     jump_3a1c3
		mov    $0x3,%eax
		call   func_4f4cd
	jump_3a1e6:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		lea    0x868(%esp),%eax
		push   %eax
		push   %edi
		lea    0x3f0(%esp),%eax
		push   %eax
		lea    0x32c(%esp),%eax
		push   %eax
		lea    0x6b4(%esp),%eax
		push   %eax
		lea    0x71c(%esp),%eax
		push   %eax
		lea    0x4c8(%esp),%eax
		push   %eax
		lea    0x530(%esp),%eax
		push   %eax
		lea    0x660(%esp),%eax
		push   %eax
		lea    0x600(%esp),%eax
		push   %eax
		lea    0x794(%esp),%eax
		push   %eax
		lea    0x5a4(%esp),%eax
		push   %eax
		lea    0x1c0(%esp),%eax
		lea    0x800(%esp),%ecx
		push   %eax
		lea    0x28c(%esp),%eax
		lea    0x34(%esp),%ebx
		push   %eax
		lea    0x100(%esp),%edx
		lea    0x86c(%esp),%eax
		call   func_38ff7
		call   func_5e9e8
		call   func_499e4
		xor    %eax,%eax
		jmp    jump_3a2a6
	jump_3a298:
		movswl %ax,%edx
		cmpb   $0x64,0x868(%esp,%edx,1)
		jle    jump_3a2ac
		inc    %eax
	jump_3a2a6:
		cmp    $0x32,%ax
		jl     jump_3a298
	jump_3a2ac:
		cmp    $0x32,%ax
		je     jump_3a856
		jmp    jump_3a1e6
	jump_3a2bb:
		cmp    $0x2,%ch
		jne    jump_3a594
		xor    %ecx,%ecx
	jump_3a2c6:
		movswl %cx,%edx
		xor    %eax,%eax
		mov    %eax,0x320(%esp,%edx,4)
		mov    %eax,0x3e8(%esp,%edx,4)
		movb   $0x2,0x834(%esp,%edx,1)
		mov    $0xd,%eax
		call   func_499bd
		movswl %ax,%edi
		mov    0x89a(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x708(%esp,%edx,2)
		mov    0x8b6(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x6a4(%esp,%edx,2)
		mov    0x8de(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		add    $0xe,%eax
		mov    %di,0x578(%esp,%edx,2)
		mov    %eax,0x8d4(%esp)
		mov    0x8da(%esp),%eax
		mov    %di,0x514(%esp,%edx,2)
		sar    $0x10,%eax
		mov    %di,0x4b0(%esp,%edx,2)
		sub    $0xd,%eax
		fildl  0x8d4(%esp)
		mov    %eax,0x8d4(%esp)
		fstps  0xc8(%esp,%edx,4)
		fildl  0x8d4(%esp)
		mov    $0x3,%eax
		fstps  (%esp,%edx,4)
		call   func_499bd
		add    $0x2,%eax
		mov    %ax,0x7d0(%esp,%edx,2)
		mov    $0x5a,%eax
		call   func_499bd
		add    $0x5a,%eax
		mov    %ax,0x76c(%esp,%edx,2)
		mov    $0x2,%eax
		call   func_499bd
		inc    %eax
		mov    %ax,0x5dc(%esp,%edx,2)
		mov    $0x1e,%eax
		mov    $0x136,%ebx
		call   func_499bd
		sub    %eax,%ebx
		inc    %ecx
		mov    %bx,0x640(%esp,%edx,2)
		cmp    $0x32,%cx
		jl     jump_3a2c6
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x23,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_3a3f9:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0x11,%eax
		imul   $0xc,%eax,%eax
		mov    0x8dc(%esp),%edx
		add    $data_f0daa,%eax
		add    $0xa,%edx
		add    0x6(%eax),%dx
		mov    0x8e0(%esp),%edi
		add    $0xf,%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		inc    %ecx
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_3a3f9
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_3a476
	jump_3a466:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_3a476:
		cmp    data_f0b9e,%dx
		jl     jump_3a466
		mov    $0x3,%eax
		call   func_4f4cd
	jump_3a489:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x8dc(%esp),%eax
		mov    data_f0ea0,%di
		add    $0xa,%eax
		add    %edi,%eax
		movswl %ax,%edx
		mov    0x8e0(%esp),%eax
		mov    data_f0e9e,%cx
		add    $0xf,%eax
		add    %ecx,%eax
		mov    data_f0ea2,%ebx
		cwtl
		call   func_5efb9
		lea    0x868(%esp),%eax
		push   %eax
		push   $data_f0e9a
		lea    0x3f0(%esp),%eax
		push   %eax
		lea    0x32c(%esp),%eax
		push   %eax
		lea    0x6b4(%esp),%eax
		push   %eax
		lea    0x71c(%esp),%eax
		push   %eax
		lea    0x4c8(%esp),%eax
		push   %eax
		lea    0x530(%esp),%eax
		push   %eax
		lea    0x660(%esp),%eax
		push   %eax
		lea    0x600(%esp),%eax
		push   %eax
		lea    0x794(%esp),%eax
		push   %eax
		lea    0x5a4(%esp),%eax
		push   %eax
		lea    0x1c0(%esp),%eax
		lea    0x800(%esp),%ecx
		push   %eax
		lea    0x28c(%esp),%eax
		lea    0x34(%esp),%ebx
		push   %eax
		lea    0x100(%esp),%edx
		lea    0x86c(%esp),%eax
		call   func_38cf8
		call   func_5e9e8
		call   func_499e4
		xor    %eax,%eax
		jmp    jump_3a57f
	jump_3a571:
		movswl %ax,%edx
		cmpb   $0x64,0x868(%esp,%edx,1)
		jle    jump_3a585
		inc    %eax
	jump_3a57f:
		cmp    $0x32,%ax
		jl     jump_3a571
	jump_3a585:
		cmp    $0x32,%ax
		je     jump_3a856
		jmp    jump_3a489
	jump_3a594:
		test   %ch,%ch
		jne    jump_3a856
		xor    %cl,%cl
	jump_3a59e:
		movswl %cx,%edx
		xor    %edi,%edi
		mov    $0x2,%al
		mov    %edi,0x320(%esp,%edx,4)
		mov    %al,0x834(%esp,%edx,1)
		mov    $0xd,%eax
		mov    %edi,0x3e8(%esp,%edx,4)
		call   func_499bd
		movswl %ax,%edi
		mov    0x89a(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xf,%eax
		mov    %ax,0x708(%esp,%edx,2)
		mov    0x8b6(%esp,%edi,2),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x5,%eax
		mov    %ax,0x6a4(%esp,%edx,2)
		xor    %eax,%eax
		mov    %ax,0x578(%esp,%edx,2)
		mov    %ax,0x514(%esp,%edx,2)
		mov    %ax,0x4b0(%esp,%edx,2)
		mov    0x8de(%esp),%eax
		sar    $0x10,%eax
		add    $0xf,%eax
		mov    %eax,0x8d4(%esp)
		fildl  0x8d4(%esp)
		mov    $0x3,%eax
		fstps  0xc8(%esp,%edx,4)
		fild   0x8dc(%esp)
		fstps  (%esp,%edx,4)
		call   func_499bd
		add    $0x2,%eax
		mov    %ax,0x7d0(%esp,%edx,2)
		mov    $0x5a,%eax
		mov    $0x15e,%ebx
		call   func_499bd
		sub    %eax,%ebx
		mov    $0x2,%eax
		mov    %bx,0x76c(%esp,%edx,2)
		call   func_499bd
		inc    %eax
		mov    %ax,0x5dc(%esp,%edx,2)
		mov    $0x1e,%eax
		call   func_499bd
		add    $0x82,%eax
		inc    %ecx
		mov    %ax,0x640(%esp,%edx,2)
		cmp    $0x32,%cx
		jl     jump_3a59e
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x23,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_3a6c0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0xd,%eax
		imul   $0xc,%eax,%eax
		mov    0x8dc(%esp),%edx
		add    $data_f0daa,%eax
		add    $0xa,%edx
		add    0x6(%eax),%dx
		mov    0x8e0(%esp),%edi
		add    $0xf,%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		inc    %ecx
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		cmp    $0x3,%cx
		jl     jump_3a6c0
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_3a73d
	jump_3a72d:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_3a73d:
		cmp    data_f0b9e,%dx
		jl     jump_3a72d
		mov    $0x3,%eax
		call   func_4f4cd
	jump_3a750:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x8dc(%esp),%eax
		mov    data_f0e70,%dx
		add    $0xa,%eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x8e0(%esp),%eax
		mov    data_f0e6e,%cx
		add    $0xf,%eax
		add    %ecx,%eax
		mov    data_f0e72,%ebx
		cwtl
		call   func_5efb9
		lea    0x868(%esp),%eax
		push   %eax
		push   $data_f0e6a
		lea    0x3f0(%esp),%eax
		push   %eax
		lea    0x32c(%esp),%eax
		push   %eax
		lea    0x6b4(%esp),%eax
		push   %eax
		lea    0x71c(%esp),%eax
		push   %eax
		lea    0x4c8(%esp),%eax
		push   %eax
		lea    0x530(%esp),%eax
		push   %eax
		lea    0x660(%esp),%eax
		push   %eax
		lea    0x600(%esp),%eax
		push   %eax
		lea    0x794(%esp),%eax
		push   %eax
		lea    0x5a4(%esp),%eax
		push   %eax
		lea    0x1c0(%esp),%eax
		lea    0x800(%esp),%ecx
		push   %eax
		lea    0x28c(%esp),%eax
		lea    0x34(%esp),%ebx
		push   %eax
		lea    0x100(%esp),%edx
		lea    0x86c(%esp),%eax
		call   func_3930e
		call   func_5e9e8
		call   func_499e4
		xor    %eax,%eax
		jmp    jump_3a846
	jump_3a838:
		movswl %ax,%edx
		cmpb   $0x64,0x868(%esp,%edx,1)
		jle    jump_3a84c
		inc    %eax
	jump_3a846:
		cmp    $0x32,%ax
		jl     jump_3a838
	jump_3a84c:
		cmp    $0x32,%ax
		jne    jump_3a750
	jump_3a856:
		xor    %ebx,%ebx
		jmp    jump_3a876
	jump_3a85a:
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%eax
		orb    $0x1,0x1e(%eax)
		mov    data_f0648(,%edx,4),%eax
		inc    %ebx
		movw   $0x5a,0x1f(%eax)
	jump_3a876:
		cmp    data_f0b9e,%bx
		jl     jump_3a85a
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %esi,%eax
		call   func_12f2a
		mov    $0xf,%eax
		mov    %esi,%ebx
		call   func_1033b
		call   func_5e9e8
		call   func_499e4
		call   func_44d75
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		xor    %ebx,%ebx
		jmp    jump_3a8d7
	jump_3a8c7:
		movswl %bx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %ebx
	jump_3a8d7:
		cmp    data_f0b9e,%bx
		jl     jump_3a8c7
		call   func_103a0
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		xor    %ebx,%ebx
	jump_3a8ff:
		movswl %bx,%edx
		mov    0x258(%esp,%edx,4),%eax
		call   w_dos_free
		mov    0x190(%esp,%edx,4),%eax
		inc    %ebx
		call   w_dos_free
		cmp    $0x32,%bx
		jl     jump_3a8ff
		call   func_1ffcd
		mov    $0x2,%ebx
		mov    $0x1b58,%edx
		mov    %esi,%eax
		call   func_2caf7
		xor    %eax,%eax
		mov    $0x1,%edx
		call   func_6104a
	jump_3a943:
		mov    %edx,%eax
		add    $0x8e4,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_3a950:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    0x54(%esp),%ch
		xor    %edx,%edx
		mov    %dx,0x24(%esp)
	jump_3a965:
		mov    0x22(%esp),%eax
		mov    0xc(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		cmpb   $0x1,(%eax)
		jne    jump_3ada2
		xor    %edi,%edi
		mov    %di,0x1c(%esp)
		jmp    jump_3acde
	jump_3a987:
		mov    0x44(%esp),%ebx
		mov    %edx,%edi
		add    %edx,%edx
		add    %edx,%ebx
		movswl (%ebx),%edx
		mov    0x8(%esp),%eax
		flds   data_74a68(,%edx,4)
		fadds  (%eax,%edi,4)
		fstps  (%eax,%edi,4)
		movswl (%ebx),%ebx
		mov    0x4(%esp),%edx
		flds   data_744c8(,%ebx,4)
		fadds  (%edx,%edi,4)
		fstps  (%edx,%edi,4)
		flds   (%eax,%edi,4)
		call   func___CHP
		fistpl 0x10(%esp)
		flds   (%edx,%edi,4)
		mov    0x10(%esp),%eax
		call   func___CHP
		fistpl 0x10(%esp)
		mov    %ax,0x20(%esp)
		mov    0x10(%esp),%eax
		mov    %ax,0x14(%esp)
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffc4,%eax
		jl     jump_3aa0d
		cmpw   $0x17c,0x20(%esp)
		jg     jump_3aa0d
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffc4,%eax
		jl     jump_3aa0d
		cmpw   $0x104,0x14(%esp)
		jle    jump_3aa1d
	jump_3aa0d:
		mov    0x22(%esp),%eax
		mov    0xc(%esp),%ebp
		sar    $0x10,%eax
		add    %ebp,%eax
		movb   $0x0,(%eax)
	jump_3aa1d:
		mov    0x22(%esp),%eax
		mov    (%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		movsbl (%eax),%edx
		mov    0x1a(%esp),%eax
		dec    %edx
		sar    $0x10,%eax
		cmp    %edx,%eax
		jne    jump_3ac54
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		imul   $0x1e0,%edx,%ebx
		mov    0x1e(%esp),%eax
		mov    data_755cc,%edi
		sar    $0x10,%eax
		add    %eax,%edi
		movb   $0x28,0xbb80(%edi,%ebx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x28,0xbb81(%edi,%ebx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x28,0xbb7f(%edi,%ebx,1)
		lea    0x1(%edx),%ebx
		imul   $0x1e0,%ebx,%ebx
		dec    %edx
		imul   $0x1e0,%edx,%edx
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x28,0xbb81(%edi,%ebx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x28,0xbb7f(%edi,%ebx,1)
		mov    data_755cc,%edi
		add    %eax,%edi
		movb   $0x28,0xbb80(%edi,%ebx,1)
		mov    data_755cc,%ebx
		add    %eax,%ebx
		movb   $0x28,0xbb81(%edx,%ebx,1)
		mov    data_755cc,%ebx
		add    %eax,%ebx
		movb   $0x28,0xbb7f(%edx,%ebx,1)
		mov    data_755cc,%ebx
		add    %ebx,%eax
		movb   $0x28,0xbb80(%edx,%eax,1)
		xor    %eax,%eax
		xor    %esi,%esi
		mov    %ax,0x18(%esp)
		jmp    jump_3ac3a
	jump_3aafe:
		movswl %si,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%edx
		jne    jump_3ab17
		incw   0x18(%esp)
	jump_3ab17:
		cmpw   $0x7,0x18(%esp)
		jle    jump_3ab26
		movw   $0x7,0x18(%esp)
	jump_3ab26:
		mov    0x18(%esp),%cl
		add    $0x28,%cl
		cmp    $0x10,%si
		jg     jump_3ac02
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		mov    0x38(%esp),%ebx
		shl    $0x2,%eax
		add    %eax,%ebx
		movswl %si,%edx
		mov    (%ebx),%edi
		movswl (%edi,%edx,2),%edi
		mov    %edi,0x10(%esp)
		mov    0x10(%esp),%ebp
		mov    data_755cc,%edi
		add    %edi,%ebp
		mov    %ebp,0x10(%esp)
		add    0x3c(%esp),%eax
		mov    (%eax),%edi
		movswl (%edi,%edx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    0x10(%esp),%edi
		mov    %cl,0xbb80(%edi)
		mov    (%ebx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%edx,2),%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%edx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb81(%edi)
		mov    (%ebx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%edx,2),%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%edx,2),%edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb7f(%edi)
		mov    (%ebx),%edi
		mov    data_755cc,%ebp
		movswl (%edi,%edx,2),%edi
		add    %edi,%ebp
		mov    (%eax),%edi
		movswl (%edi,%edx,2),%edi
		dec    %edi
		imul   $0x1e0,%edi,%edi
		add    %ebp,%edi
		mov    %cl,0xbb80(%edi)
		mov    (%eax),%eax
		movswl (%eax,%edx,2),%eax
		inc    %eax
		imul   $0x1e0,%eax,%eax
		mov    (%ebx),%ebx
		movswl (%ebx,%edx,2),%edi
		mov    data_755cc,%ebx
		add    %edi,%ebx
		jmp    jump_3ac32
	jump_3ac02:
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		mov    0x38(%esp),%ebx
		shl    $0x2,%eax
		mov    (%ebx,%eax,1),%ebx
		movswl %si,%edx
		mov    data_755cc,%edi
		movswl (%ebx,%edx,2),%ebx
		add    %edi,%ebx
		add    0x3c(%esp),%eax
		mov    (%eax),%eax
		movswl (%eax,%edx,2),%eax
		imul   $0x1e0,%eax,%eax
	jump_3ac32:
		mov    %cl,0xbb80(%ebx,%eax,1)
		inc    %esi
	jump_3ac3a:
		mov    0x22(%esp),%eax
		mov    0x40(%esp),%ebx
		sar    $0x10,%eax
		add    %ebx,%eax
		movsbw (%eax),%ax
		cmp    %ax,%si
		jl     jump_3aafe
	jump_3ac54:
		mov    0x22(%esp),%edi
		sar    $0x10,%edi
		mov    0x38(%esp),%edx
		mov    %edi,%ebx
		mov    (%edx,%ebx,4),%edx
		mov    0x20(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%edx
		mov    (%edx,%ebx,4),%edx
		mov    0x14(%esp),%eax
		mov    %ax,(%edx)
		mov    0x40(%esp),%eax
		add    %edi,%eax
		mov    (%eax),%cl
		test   %cl,%cl
		je     jump_3acbe
		movsbw %cl,%dx
		dec    %edx
		jmp    jump_3acb9
	jump_3ac8c:
		mov    0x22(%esp),%edi
		mov    0x38(%esp),%eax
		movswl %dx,%ebx
		sar    $0x10,%edi
		add    %ebx,%ebx
		mov    (%eax,%edi,4),%eax
		mov    (%ebx,%eax,1),%si
		mov    %si,0x2(%ebx,%eax,1)
		mov    0x3c(%esp),%eax
		mov    (%eax,%edi,4),%eax
		add    %ebx,%eax
		mov    (%eax),%bx
		dec    %edx
		mov    %bx,0x2(%eax)
	jump_3acb9:
		test   %dx,%dx
		jge    jump_3ac8c
	jump_3acbe:
		mov    0x22(%esp),%eax
		mov    0x40(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    (%eax),%dl
		inc    %dl
		mov    %dl,(%eax)
		cmp    $0x22,%dl
		jle    jump_3acd9
		movb   $0x22,(%eax)
	jump_3acd9:
		incw   0x1c(%esp)
	jump_3acde:
		mov    0x22(%esp),%edx
		mov    (%esp),%eax
		sar    $0x10,%edx
		add    %edx,%eax
		mov    0x1c(%esp),%esi
		movsbw (%eax),%bx
		cmp    %si,%bx
		jg     jump_3a987
		cmp    $0x1,%ch
		jle    jump_3ad72
		add    0x48(%esp),%edx
		mov    (%edx),%bl
		inc    %bl
		mov    %bl,(%edx)
		cmp    (%eax),%bl
		jle    jump_3ad23
		movb   $0x0,(%edx)
		mov    (%eax),%cl
		inc    %cl
		mov    %cl,(%eax)
		cmp    $0x1e,%cl
		jle    jump_3ad23
		movb   $0x1e,(%eax)
	jump_3ad23:
		mov    0x22(%esp),%edx
		mov    0x4c(%esp),%eax
		sar    $0x10,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		inc    %bl
		mov    %bl,(%eax)
		cmp    $0x2,%bl
		jle    jump_3ad72
		mov    0x50(%esp),%esi
		movb   $0x0,(%eax)
		lea    (%edx,%edx,1),%eax
		add    %esi,%eax
		cmp    $0x2,%ch
		jne    jump_3ad60
		mov    (%eax),%bx
		inc    %ebx
		mov    %bx,(%eax)
		cmp    $0xa,%bx
		jle    jump_3ad72
		movw   $0xa,(%eax)
		jmp    jump_3ad72
	jump_3ad60:
		mov    (%eax),%di
		dec    %edi
		mov    %di,(%eax)
		cmp    $0x6,%di
		jge    jump_3ad72
		movw   $0x6,(%eax)
	jump_3ad72:
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		mov    0x44(%esp),%eax
		add    %edx,%edx
		mov    0x50(%esp),%edi
		add    %edx,%eax
		add    %edi,%edx
		mov    (%edx),%dx
		mov    (%eax),%di
		sub    %edx,%edi
		mov    %di,(%eax)
		test   %di,%di
		jge    jump_3ada2
		mov    %edi,%ebx
		add    $0x168,%ebx
		mov    %bx,(%eax)
	jump_3ada2:
		mov    0x24(%esp),%ebx
		inc    %ebx
		mov    %bx,0x24(%esp)
		cmp    $0x50,%bx
		jl     jump_3a965
		add    $0x28,%esp
		jmp    jump_38b7c


/*----------------------------------------------------------------*/
func_3adbe:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,0x8(%esp)
		mov    %ecx,%ebp
		movw   $0x2,0xc(%esp)
	jump_3add6:
		xor    %esi,%esi
	jump_3add8:
		test   %si,%si
		jne    jump_3ae03
		xor    %edx,%edx
		jmp    jump_3adf8
	jump_3ade1:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x4c(%esp),%bl
		mov    0x65(%eax),%cl
		sub    %bl,%cl
		inc    %edx
		mov    %cl,0x65(%eax)
	jump_3adf8:
		cmp    data_f0b9e,%dx
		jge    jump_3ae27
		jmp    jump_3ade1
	jump_3ae03:
		mov    0x4c(%esp),%bl
		xor    %edx,%edx
		jmp    jump_3ae1e
	jump_3ae0b:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bh
		add    %bl,%bh
		inc    %edx
		mov    %bh,0x65(%eax)
	jump_3ae1e:
		cmp    data_f0b9e,%dx
		jl     jump_3ae0b
	jump_3ae27:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		mov    %edx,0x4(%esp)
		mov    0x46(%esp),%edx
		mov    0x4(%esp),%ecx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		mov    0x42(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5ee51
		mov    0x39(%esp),%eax
		sar    $0x18,%eax
		push   %eax
		mov    0x3c(%esp),%eax
		push   %eax
		mov    0x3c(%esp),%edx
		push   %edx
		mov    0x3c(%esp),%ebx
		push   %ebx
		mov    0x3c(%esp),%ecx
		push   %ecx
		mov    0x3c(%esp),%eax
		mov    0x38(%esp),%edx
		push   %eax
		mov    0x38(%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %edi,%eax
		mov    0x1c(%esp),%edx
		push   %ebx
		mov    0x28(%esp),%ebx
		inc    %esi
		call   func_3a950
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%si
		jl     jump_3add8
		mov    0xc(%esp),%ebx
		inc    %ebx
		mov    %bx,0xc(%esp)
		cmp    $0x7,%bx
		jle    jump_3add6
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x30


/*----------------------------------------------------------------*/
func_3aee8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x440,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    data_ba83e,%di
		mov    %dx,data_f0b9e
		jmp    jump_3af34
	jump_3af08:
		mov    data_ba83c,%cx
		jmp    jump_3af20
	jump_3af11:
		mov    0xb(%esi),%ebx
		movswl %di,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_1a1f8
	jump_3af20:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_3af11
		inc    %edi
	jump_3af34:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %di,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_3af08
		cmpw   $0x0,data_f0b9e
		jne    jump_3af5a
		mov    $0xffffffff,%eax
		jmp    jump_3b5a9
	jump_3af5a:
		xor    %ecx,%ecx
	jump_3af5c:
		mov    $0x46,%eax
		movswl %cx,%edx
		call   w_dos_malloc
		mov    %eax,(%esp,%edx,4)
		mov    $0x46,%eax
		inc    %ecx
		call   w_dos_malloc
		mov    %eax,0x140(%esp,%edx,4)
		cmp    $0x50,%cx
		jl     jump_3af5c
		mov    $0x140,%eax
		call   w_dos_malloc
		mov    %eax,0x420(%esp)
		mov    $0x140,%eax
		call   w_dos_malloc
		mov    %eax,0x414(%esp)
		mov    $0xa0,%eax
		call   w_dos_malloc
		mov    %eax,0x418(%esp)
		mov    $0xa0,%eax
		call   w_dos_malloc
		mov    %eax,0x41c(%esp)
		mov    $data_77b0c,%eax
		mov    %esi,%ebx
		call   func_1fea4
		call   func_103a8
		movsbw 0x63(%esi),%ax
		movsbl 0x1(%esi),%edx
		mov    %ax,0x430(%esp)
		movsbl (%esi),%eax
		movb   $0x0,0x63(%esi)
		call   func_11ee4
		xor    %edx,%edx
		jmp    jump_3b00a
	jump_3affa:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_3b00a:
		cmp    data_f0b9e,%dx
		jl     jump_3affa
		movsbl (%esi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x42c(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		add    $0x2,%eax
		mov    %ax,0x428(%esp)
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
		mov    $0x14,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_3b060:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%edi
		add    %eax,%edi
		mov    0x42a(%esp),%ebp
		mov    0x4(%edi),%edx
		mov    0x426(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%ebp
		add    %eax,%edx
		mov    0x2(%edi),%eax
		sar    $0x10,%eax
		mov    0x8(%edi),%ebx
		add    %ebp,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x7,%cx
		jle    jump_3b060
		mov    $0x5,%eax
		mov    $0x2,%ebp
		call   func_1033b
		xor    %ebx,%ebx
	jump_3b0d1:
		mov    $0x1,%ah
		movswl %bx,%edx
		xor    %cl,%cl
		mov    %ah,0x3c0(%esp,%edx,1)
		mov    0x42a(%esp),%eax
		mov    %cl,0x370(%esp,%edx,1)
		sar    $0x10,%eax
		mov    %cl,0x320(%esp,%edx,1)
		sub    $0x4,%eax
		mov    %cl,0x2d0(%esp,%edx,1)
		mov    %eax,0x410(%esp)
		mov    %edx,%eax
		mov    0x420(%esp),%ecx
		shl    $0x2,%eax
		fildl  0x410(%esp)
		fstps  (%ecx,%eax,1)
		mov    0x426(%esp),%ecx
		sar    $0x10,%ecx
		sub    $0x17,%ecx
		mov    %ecx,0x410(%esp)
		add    0x414(%esp),%eax
		fildl  0x410(%esp)
		fstps  (%eax)
		mov    $0x3,%eax
		call   func_499bd
		inc    %al
		lea    (%edx,%edx,1),%ecx
		mov    %al,0x280(%esp,%edx,1)
		mov    $0x168,%eax
		mov    0x418(%esp),%edx
		call   func_499bd
		mov    %ax,(%ecx,%edx,1)
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    0x41c(%esp),%eax
		add    %ecx,%eax
		test   %edx,%edx
		jne    jump_3b18d
		movw   $0x2,(%eax)
		jmp    jump_3b192
	jump_3b18d:
		movw   $0x4,(%eax)
	jump_3b192:
		inc    %ebx
		cmp    $0x50,%bx
		jl     jump_3b0d1
		xor    %eax,%eax
		mov    0x41c(%esp),%ebp
		mov    %eax,0x43c(%esp)
	jump_3b1ad:
		mov    $0x32,%eax
		call   func_4f4cd
		mov    0x426(%esp),%eax
		push   $0x1
		sar    $0x10,%eax
		push   %eax
		mov    0x432(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   %edi
		push   $0x1
		push   %ebp
		lea    0x2e8(%esp),%eax
		push   %eax
		lea    0x33c(%esp),%eax
		push   %eax
		mov    0x438(%esp),%eax
		push   %eax
		lea    0x394(%esp),%eax
		push   %eax
		lea    0x168(%esp),%eax
		lea    0x2a8(%esp),%ecx
		push   %eax
		lea    0x2c(%esp),%eax
		mov    0x440(%esp),%ebx
		push   %eax
		mov    0x450(%esp),%edx
		lea    0x3f0(%esp),%eax
		call   func_3adbe
		mov    0x43c(%esp),%edx
		inc    %edx
		mov    %edx,0x43c(%esp)
		cmp    $0xf,%dx
		jl     jump_3b1ad
		xor    %ecx,%ecx
	jump_3b23c:
		movswl %cx,%ebx
		xor    %ah,%ah
		mov    %ah,0x320(%esp,%ebx,1)
		mov    %ah,0x2d0(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		mov    $0x3,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		inc    %edx
		mov    %dl,0x280(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		mov    $0x5,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		lea    (%ebx,%ebx,1),%eax
		add    0x41c(%esp),%eax
		add    %ebp,%edx
		inc    %ecx
		mov    %dx,(%eax)
		cmp    $0x50,%cx
		jl     jump_3b23c
		xor    %ecx,%ecx
		mov    0x418(%esp),%ebp
		mov    %ecx,0x438(%esp)
	jump_3b29f:
		mov    0x426(%esp),%eax
		push   $0x3
		sar    $0x10,%eax
		push   %eax
		mov    0x432(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   %edi
		push   $0x2
		mov    0x430(%esp),%ecx
		push   %ecx
		lea    0x2e8(%esp),%eax
		push   %eax
		lea    0x33c(%esp),%eax
		push   %eax
		push   %ebp
		lea    0x394(%esp),%eax
		push   %eax
		lea    0x168(%esp),%eax
		mov    0x43c(%esp),%ebx
		push   %eax
		lea    0x2c(%esp),%eax
		mov    0x44c(%esp),%edx
		push   %eax
		lea    0x2b0(%esp),%ecx
		lea    0x3f0(%esp),%eax
		call   func_3adbe
		mov    $0x32,%eax
		call   func_4f4cd
		mov    0x438(%esp),%eax
		inc    %eax
		mov    %eax,0x438(%esp)
		cmp    $0x9,%ax
		jl     jump_3b29f
		xor    %ebx,%ebx
		mov    %ebx,0x434(%esp)
	jump_3b335:
		mov    0x426(%esp),%eax
		push   $0x5
		sar    $0x10,%eax
		push   %eax
		mov    0x432(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   %edi
		push   $0x3
		mov    0x430(%esp),%eax
		push   %eax
		lea    0x2e8(%esp),%eax
		push   %eax
		lea    0x33c(%esp),%eax
		push   %eax
		mov    0x438(%esp),%edx
		push   %edx
		lea    0x394(%esp),%eax
		push   %eax
		lea    0x168(%esp),%eax
		lea    0x2a8(%esp),%ecx
		push   %eax
		lea    0x2c(%esp),%eax
		mov    0x440(%esp),%ebx
		push   %eax
		mov    0x450(%esp),%edx
		lea    0x3f0(%esp),%eax
		call   func_3adbe
		mov    0x434(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x434(%esp)
		cmp    $0x4,%cx
		jl     jump_3b335
		mov    $0x1,%edx
		mov    $data_f0daa,%ebp
		mov    %dx,0x424(%esp)
	jump_3b3d1:
		xor    %ecx,%ecx
	jump_3b3d3:
		movswl %cx,%edx
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_3b409
		xor    %edx,%edx
		jmp    jump_3b3fe
	jump_3b3ea:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bh
		sub    $0x5,%bh
		inc    %edx
		mov    %bh,0x65(%eax)
	jump_3b3fe:
		cmp    data_f0b9e,%dx
		jge    jump_3b42a
		jmp    jump_3b3ea
	jump_3b409:
		xor    %edx,%edx
		jmp    jump_3b421
	jump_3b40d:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    0x65(%eax),%bl
		add    $0x5,%bl
		inc    %edx
		mov    %bl,0x65(%eax)
	jump_3b421:
		cmp    data_f0b9e,%dx
		jl     jump_3b40d
	jump_3b42a:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x422(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x426(%esp),%edi
		mov    0x4(%eax,%ebp,1),%edx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    0x8(%eax,%ebp,1),%ebx
		add    %edi,%edx
		mov    0x2(%eax,%ebp,1),%edi
		mov    0x42a(%esp),%eax
		sar    $0x10,%edi
		sar    $0x10,%eax
		add    %edi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x4,%cx
		jl     jump_3b3d3
		mov    0x424(%esp),%ebx
		dec    %ebx
		mov    %bx,0x424(%esp)
		test   %bx,%bx
		jge    jump_3b3d1
		xor    %ebx,%ebx
		jmp    jump_3b4de
	jump_3b4ae:
		movswl %bx,%edx
		shl    $0x2,%edx
		mov    data_f0648(%edx),%eax
		cmpw   $0x12c,0x61(%eax)
		jge    jump_3b4dd
		orb    $0x2,0x1e(%eax)
		mov    data_f0648(%edx),%eax
		movw   $0x5a,0x1f(%eax)
		mov    data_f0648(%edx),%eax
		call   func_197ad
	jump_3b4dd:
		inc    %ebx
	jump_3b4de:
		cmp    data_f0b9e,%bx
		jl     jump_3b4ae
		call   func_1ffcd
		xor    %ebx,%ebx
	jump_3b4ee:
		movswl %bx,%edx
		mov    (%esp,%edx,4),%eax
		call   w_dos_free
		mov    0x140(%esp,%edx,4),%eax
		inc    %ebx
		call   w_dos_free
		cmp    $0x50,%bx
		jl     jump_3b4ee
		mov    0x420(%esp),%eax
		call   w_dos_free
		mov    0x414(%esp),%eax
		call   w_dos_free
		mov    0x418(%esp),%eax
		mov    $data_12824c,%ebx
		call   w_dos_free
		mov    0x41c(%esp),%eax
		mov    $0x100,%edx
		call   w_dos_free
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_44d75
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    0x430(%esp),%al
		xor    %edx,%edx
		mov    %al,0x63(%esi)
		jmp    jump_3b585
	jump_3b575:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_3b585:
		cmp    data_f0b9e,%dx
		jl     jump_3b575
		mov    $0x3,%ebx
		mov    $0x1b58,%edx
		mov    %esi,%eax
		call   func_2caf7
		call   func_103a0
		mov    $0x1,%eax
	jump_3b5a9:
		add    $0x440,%esp
		jmp    jump_35553


/*----------------------------------------------------------------*/
func_3b5b4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		testb  $0x1,0x14(%eax)
		je     jump_3b5e6
		mov    0x5d(%edx),%eax
		sar    $0x18,%eax
		call   func_119b6
		decw   0x61(%edx)
		mov    0x5f(%edx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    0x14(%edx),%bh
		mov    %al,0x60(%edx)
		and    $0xfe,%bh
		mov    %bh,0x14(%edx)
		jmp    jump_3b60c
	jump_3b5e6:
		mov    0x5d(%edx),%eax
		sar    $0x18,%eax
		call   func_119b6
		incw   0x61(%edx)
		mov    0x5f(%edx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    0x14(%edx),%bl
		mov    %al,0x60(%edx)
		or     $0x1,%bl
		mov    %bl,0x14(%edx)
	jump_3b60c:
		call   func_45559
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3b614:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ebp
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%esi
		sub    %edx,%eax
		mov    0x60(%ebp),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%esi
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %eax,%esi
		movsbw 0x0(%ebp),%ax
		mov    %ax,(%esp)
		xor    %eax,%eax
		movsbw 0x1(%ebp),%dx
		mov    0x1(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x4(%esp)
		call   func_13f8a
		xor    %eax,%eax
		mov    0x1(%esi),%al
		add    $0x2,%eax
		movswl %ax,%ecx
		mov    0x4(%esp),%eax
		xor    %ebx,%ebx
		dec    %eax
		push   $0x1
		movswl %ax,%edx
		mov    0x2(%esp),%eax
		mov    (%esi),%bl
		sar    $0x10,%eax
		call   func_13f08
		push   $0x1
		mov    0x6(%esp),%edx
		mov    0x4(%esp),%eax
		mov    $0x1,%ebx
		xor    %ecx,%ecx
		sar    $0x10,%edx
		dec    %eax
		mov    0x1(%esi),%cl
		cwtl
		call   func_13f08
		push   $0x1
		mov    0x6(%esp),%edx
		mov    0x4(%esp),%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		sar    $0x10,%edx
		mov    (%esi),%al
		mov    0x1(%esi),%cl
		add    %ebx,%eax
		mov    $0x1,%ebx
		cwtl
		call   func_13f08
		mov    $0x1,%eax
		xor    %esi,%esi
		call   func_44d67
	jump_3b6e5:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		mov    %ebp,%ebx
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_3b7ad
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3b6e5
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3b6e5
		call   func_112fd
		mov    $0x22,%ecx
		mov    %eax,%edi
		mov    %ebp,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x5,0xe(%eax)
		mov    %eax,%ebx
		movl   $0x0,0x77(%eax)
		mov    %eax,%edx
		movb   $0x64,0x10(%eax)
		mov    $data_cc988,%eax
		call   func_1134f
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11e04
		mov    %ebp,%eax
		call   func_1808a
		mov    (%esp),%al
		mov    %al,0x0(%ebp)
		mov    0x4(%esp),%al
		mov    %al,0x1(%ebp)
		mov    0x5f(%ebp),%eax
		movb   $0x0,0x5c(%ebp)
		sar    $0x10,%eax
		movl   $0x0,0x77(%ebp)
		call   func_1198d
		mov    %al,0x60(%ebp)
		mov    %ebp,%ebx
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%esi
		call   func_11f74
	jump_3b7ad:
		xor    %eax,%eax
		call   func_44d67
		call   func_45559
		test   %si,%si
		jne    jump_3b7c2
		xor    %eax,%eax
		jmp    jump_3b7c4
	jump_3b7c2:
		mov    %ebp,%eax
	jump_3b7c4:
		add    $0x8,%esp
	jump_3b7c7:
		pop    %ebp
	jump_3b7c8:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3b7ce:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		call   func_13f8a
		mov    (%esp),%eax
		movsbw 0x1(%eax),%ax
		dec    %eax
		push   $0x1
		movswl %ax,%edx
		mov    0x4(%esp),%eax
		mov    $0x3,%ecx
		mov    $0x1,%ebx
		movsbl (%eax),%eax
		call   func_13f08
		mov    (%esp),%eax
		mov    (%esp),%edx
		movsbw (%eax),%ax
		mov    $0x1,%ebx
		dec    %eax
		movsbl 0x1(%edx),%edx
		cwtl
		call   func_13d02
		mov    (%esp),%eax
		mov    (%esp),%edx
		movsbw (%eax),%ax
		mov    $0x1,%ebx
		inc    %eax
		movsbl 0x1(%edx),%edx
		cwtl
		call   func_13d02
		mov    $0x1,%eax
		xor    %esi,%esi
		call   func_44d67
	jump_3b841:
		mov    (%esp),%ebx
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		xor    %ecx,%ecx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_3b9bc
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3b841
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_3b841
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    0x61(%eax),%dx
		mov    %eax,%ebp
		cmp    $0x12c,%dx
		jl     jump_3b841
		cmpl   $0x0,0x77(%eax)
		jne    jump_3b841
		cmpb   $0x0,0x5c(%eax)
		je     jump_3b841
		mov    (%esp),%edx
		mov    (%esp),%eax
		xor    %ebx,%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11f74
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		mov    $data_cc988,%eax
		mov    %ebp,%edx
		call   func_1137a
		mov    (%esp),%eax
		mov    (%esp),%esi
		mov    0x5d(%eax),%eax
		add    $0x2,%esi
		sar    $0x18,%eax
		lea    0x2(%ebp),%edi
		call   func_119b6
		push   %edi
	jump_3b8ff:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_3b917
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_3b8ff
	jump_3b917:
		pop    %edi
		mov    (%esp),%eax
		mov    $0x88,%ecx
		mov    0x10(%eax),%al
		mov    (%esp),%esi
		mov    %al,0x10(%ebp)
		call   func_112fd
		mov    %eax,%edi
		mov    %eax,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x88,%ecx
		mov    (%esp),%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edx,0x77(%edi)
		mov    0xe(%edx),%al
		mov    %al,0xe(%edi)
		mov    0x6f(%edx),%al
		mov    %al,0x6f(%edi)
		mov    0x70(%edx),%al
		mov    %al,0x70(%edi)
		mov    0x71(%edx),%al
		mov    %al,0x71(%edi)
		mov    0x72(%edx),%al
		mov    %al,0x72(%edi)
		mov    0x73(%edx),%eax
		mov    %eax,0x73(%edi)
		mov    0x7b(%edx),%eax
		mov    %eax,0x7b(%edi)
		movl   $0x0,0x7b(%edx)
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x5c(%edi),%dl
		call   func_17e6d
		mov    %edi,%eax
		call   func_11b77
		mov    0x77(%edi),%edx
		mov    %al,0x60(%edx)
		mov    %edi,%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		mov    $0x1,%esi
		call   func_11e04
	jump_3b9bc:
		xor    %eax,%eax
		call   func_44d67
		call   func_45559
		call   func_5e9e8
		test   %si,%si
		jne    jump_3b9d6
		xor    %eax,%eax
		jmp    jump_3b9d9
	jump_3b9d6:
		mov    (%esp),%eax
	jump_3b9d9:
		add    $0xc,%esp
		jmp    jump_3b7c7


/*----------------------------------------------------------------*/
func_3b9e1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    $0x1,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3ba05:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3ba2c
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		jmp    jump_3ba05
	jump_3ba2c:
		cmpw   $0x0,data_f0b9e
		jne    jump_3ba40
		mov    $0xffffffff,%eax
		jmp    jump_3bafd
	jump_3ba40:
		mov    $data_77b14,%eax
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		call   func_1fea4
		mov    %esi,%eax
		call   func_135eb
		mov    $0x5,%eax
		xor    %ecx,%ecx
		call   func_1033b
	jump_3ba63:
		mov    0x63(%esi),%al
		inc    %al
		and    $0x3,%al
		mov    %al,0x63(%esi)
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0xc,%edx,%eax
		mov    0x2(%esp),%edi
		add    $data_f0daa,%eax
		sar    $0x10,%edi
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %edi,%edx
		mov    -0x2(%esp),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		add    %edi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0xc,%cx
		jl     jump_3ba63
		call   func_1ffcd
		mov    $0x1,%ecx
		mov    $0x14,%ebx
		mov    $0x1770,%edx
		mov    %esi,%eax
		call   func_28728
		call   func_287af
		mov    %esi,%eax
		call   func_1ed45
		mov    $0x1,%eax
	jump_3bafd:
		add    $0x8,%esp
		jmp    jump_3b7c8


/*----------------------------------------------------------------*/
func_3bb05:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		movsbw (%eax),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x4(%esp)
		lea    0x4(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    %esp,%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_3bba0
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3bba0
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_3bba0
		mov    $0x11,%ebx
		mov    $data_77b1e,%edx
		mov    %esi,%eax
		call   func_48612
		orb    $0x80,0x1e(%ecx)
		mov    $0x40,%eax
		movw   $0xc8,0x27(%ecx)
		call   func_1033b
		call   func_499e4
	jump_3bb93:
		mov    $0x1,%eax
	jump_3bb98:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3bba0:
		mov    $0xffffffff,%eax
		jmp    jump_3bb98


/*----------------------------------------------------------------*/
func_3bba7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x8,%esp
		mov    %eax,%edx
		movsbw (%eax),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0x4(%esp)
		mov    %esp,%eax
		mov    0x60(%edx),%ebx
		lea    0x4(%esp),%edx
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_3bc11
		cmpb   $0x4,0xe(%eax)
		jne    jump_3bc11
		cmpb   $0x2,0xd(%eax)
		je     jump_3bc11
		orb    $0x10,0x1e(%eax)
		mov    0xe(%eax),%bh
		movw   $0xc8,0x23(%eax)
		cmp    $0x1,%bh
		jne    jump_3bc11
		cmpb   $0xff,0x56(%eax)
		jne    jump_3bc11
		call   func_19718
	jump_3bc11:
		add    $0x8,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3bc17:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x11,%ebx
		mov    $data_77b25,%edx
		call   func_48612
		mov    %ecx,%eax
		call   func_19718
		movb   $0x2,0x83(%ecx)
		movb   $0x0,0x6d(%ecx)
		movb   $0x4,0x6e(%ecx)
		mov    0x14(%ecx),%ah
		movb   $0xff,0x82(%ecx)
		or     $0x2,%ah
		mov    %ah,0x14(%ecx)
		mov    0x6d(%ecx),%al
		mov    %al,0x6c(%ecx)
		mov    0x82(%ecx),%al
		mov    %al,0x80(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3bc67:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		call   func_169d7
		mov    $0x6,%eax
		mov    $0x1,%edx
		call   func_1033b
		mov    %dx,0x8(%esp)
	jump_3bc8a:
		mov    (%esp),%eax
		movsbw (%eax),%ax
		mov    %ax,0xc(%esp)
		mov    (%esp),%eax
		movsbw 0x1(%eax),%ax
		mov    %ax,0x4(%esp)
		mov    (%esp),%eax
		mov    0x63(%eax),%al
		add    0x8(%esp),%al
		and    $0x3,%al
		lea    0x4(%esp),%edx
		movsbl %al,%ebx
		lea    0xc(%esp),%eax
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3bda9
		mov    0x2(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3bda9
		call   func_112fd
		mov    $0x88,%ecx
		mov    (%esp),%esi
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    (%esp),%eax
		movb   $0x2,0x83(%ebx)
		mov    0xf(%eax),%al
		add    $0xa,%al
		movb   $0x0,0x87(%ebx)
		mov    %al,0x12(%ebx)
		mov    0xc(%esp),%al
		mov    %al,(%ebx)
		mov    0x4(%esp),%al
		mov    %al,0x1(%ebx)
		mov    (%esp),%eax
		mov    0xb(%eax),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebx,%edx
		add    $data_cc968,%eax
		call   func_1134f
		mov    0x5f(%ebx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    0x2(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11e04
		mov    0x2(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		xor    %edx,%edx
	jump_3bd8e:
		mov    0x63(%ebp),%al
		inc    %al
		and    $0x3,%al
		inc    %edx
		mov    %al,0x63(%ebp)
		call   func_45559
		call   func_499e4
		cmp    $0xc,%dx
		jl     jump_3bd8e
	jump_3bda9:
		mov    0x8(%esp),%ebx
		add    $0x2,%ebx
		mov    %bx,0x8(%esp)
		cmp    $0x4,%bx
		jl     jump_3bc8a
		add    $0x10,%esp
		jmp    jump_3b7c7


/*----------------------------------------------------------------*/
func_3bdc7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x8,0x64(%eax)
		call   func_45559
		mov    $0x5a,%eax
		call   func_1033b
		call   func_499e4
		cmpb   $0x25,0x11(%ecx)
		jne    jump_3bdf1
		mov    $0x5,%edx
		jmp    jump_3bdf6
	jump_3bdf1:
		mov    $0x3,%edx
	jump_3bdf6:
		mov    $0xa,%eax
		call   func_499bd
		cmp    %ax,%dx
		jle    jump_3bef5
		mov    $0xa,%eax
		call   func_499bd
		cmp    $0x4,%ax
		jge    jump_3beaf
		mov    $0x1,%eax
		call   func_28422
		mov    $0xa,%eax
		call   func_499bd
		cmp    $0x5,%ax
		jge    jump_3be70
		mov    $0x32,%edx
		mov    $data_77b2e,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77b37,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77b40,%eax
		call   func_4f460
		mov    $data_77b48,%eax
		mov    $0x4,%ebx
		jmp    jump_3be98
	jump_3be70:
		mov    $0x32,%edx
		mov    $data_77b53,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77b5c,%eax
		call   func_4f460
		mov    $data_77b65,%eax
		mov    $0x3,%ebx
	jump_3be98:
		call   func_28883
		xor    %edx,%edx
		mov    %ecx,%eax
		call   func_2a75a
		xor    %eax,%eax
		call   func_28422
		jmp    jump_3bef5
	jump_3beaf:
		mov    $0x11,%ebx
		mov    $data_77b70,%edx
		mov    %ecx,%eax
		call   func_48612
		mov    $0x32,%edx
		mov    $data_77b5c,%eax
		call   func_4f460
		xor    %ebx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_25c88
		mov    0x50(%ecx),%dx
		add    $0x14,%edx
		mov    0x52(%ecx),%ax
		mov    %dx,0x50(%ecx)
		cmp    %dx,%ax
		jge    jump_3bef5
		mov    %ax,0x50(%ecx)
	jump_3bef5:
		mov    %ecx,%eax
		call   func_12124
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3bf00:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    %bx,(%esp)
		mov    -0x2(%esp),%ecx
		mov    0x2(%esp),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		movsbl (%eax),%eax
		call   func_46df1
		mov    $0x11,%ebx
		mov    $data_77b78,%edx
		mov    %esi,%eax
		call   func_48612
		mov    $0x3,%eax
		mov    $0x4,%ecx
		call   func_1033b
		xor    %ebx,%ebx
		movb   $0x0,0x64(%esi)
	jump_3bf50:
		mov    0x60(%esi),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		inc    %ebx
		mov    %dl,0x63(%esi)
		call   func_45559
		call   func_499e4
		cmp    $0xc,%bx
		jl     jump_3bf50
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    0x4(%esp),%al
		mov    -0x2(%esp),%edx
		mov    %al,(%esi)
		mov    (%esp),%al
		mov    %esi,%ebx
		mov    %al,0x1(%esi)
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11e04
		call   func_45559
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3bfac:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		call   func_169d7
		mov    0x11(%esi),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b4(%eax)
		jne    jump_3bfd6
		mov    $0x5,%eax
		jmp    jump_3bfdb
	jump_3bfd6:
		mov    $0x7,%eax
	jump_3bfdb:
		movswl %ax,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_3bfea:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3c02d
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3bfea
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_3bfea
	jump_3c02d:
		mov    $0x1,%eax
		call   func_44d67
		call   func_45559
	jump_3c03c:
		mov    $0x1,%ecx
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		mov    %esi,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3c05e
		mov    $0xffffffff,%eax
		jmp    jump_3bb98
	jump_3c05e:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    0x60(%esi),%ebx
		mov    %esi,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		test   %ax,%ax
		je     jump_3c03c
		xor    %eax,%eax
		call   func_44d67
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_3bf00
		jmp    jump_3bb93


/*----------------------------------------------------------------*/
func_3c09f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x10,%eax
		mov    $0x11,%ebx
		mov    $data_77b7e,%edx
		call   func_1033b
		movb   $0x8,0x64(%ecx)
		call   func_45559
		call   func_499e4
		mov    %ecx,%eax
		call   func_48612
		mov    0xe(%ecx),%al
		cmp    $0x1,%al
		jb     jump_3c121
		cmp    $0x2,%al
		jbe    jump_3c0df
		cmp    $0x4,%al
		jbe    jump_3c101
		jmp    jump_3c121
	jump_3c0df:
		mov    data_f0ba2,%di
		sub    $0x2,%edi
		mov    %di,data_f0ba2
		cmp    $0x32,%di
		jge    jump_3c121
		movw   $0x32,data_f0ba2
		jmp    jump_3c121
	jump_3c101:
		mov    data_f0ba0,%dx
		sub    $0x2,%edx
		mov    %dx,data_f0ba0
		cmp    $0x32,%dx
		jge    jump_3c121
		movw   $0x32,data_f0ba0
	jump_3c121:
		mov    %ecx,%eax
		call   func_12124
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3c12d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $0x11,%ebx
		mov    $data_77b8b,%edx
		movb   $0x8,0x64(%eax)
		call   func_45559
		mov    %esi,%eax
		call   func_48612
		mov    0x4c(%esi),%eax
		mov    0x48(%esi),%edx
		sub    $0xc8,%eax
		cmp    %edx,%eax
		jge    jump_3c171
		cmpb   $0x3c,0x2b(%esi)
		jbe    jump_3c16a
		mov    $0x2,%edi
		jmp    jump_3c173
	jump_3c16a:
		mov    $0x1,%edi
		jmp    jump_3c173
	jump_3c171:
		xor    %edi,%edi
	jump_3c173:
		mov    $0x1,%eax
		mov    $0x32,%edx
		call   func_28422
		mov    $data_77b53,%eax
		mov    $0x5,%ebx
		call   func_4f460
		mov    0xb(%esi),%eax
		xor    %ecx,%ecx
		sar    $0x18,%eax
		movsbl 0x1(%esi),%edx
		push   %eax
		movsbl (%esi),%eax
		call   func_28a97
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0x1e,%ebx
		call   func_253dc
		mov    $0x2710,%edx
		mov    %esi,%eax
		call   func_2accb
		test   %di,%di
		jle    jump_3c201
		mov    $data_77b65,%eax
		mov    $0x32,%edx
		call   func_28883
		mov    $data_77b53,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77b5c,%eax
		mov    $0x3,%ebx
		call   func_4f460
		mov    $0x2,%edx
		mov    %esi,%eax
		call   func_2a75a
	jump_3c201:
		cmp    $0x1,%di
		jle    jump_3c24f
		mov    $data_77b48,%eax
		mov    $0x32,%edx
		call   func_28883
		mov    $data_77b2e,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77b37,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77b40,%eax
		mov    $0x4,%ebx
		call   func_4f460
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_2a75a
	jump_3c24f:
		xor    %eax,%eax
		call   func_28422
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		testb  $0x40,0x1e(%esi)
		jne    jump_3c275
		mov    0x5d(%esi),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_3c275:
		mov    0xe(%esi),%bl
		cmp    $0x1,%bl
		jb     jump_3c29b
		cmp    $0x2,%bl
		jbe    jump_3c289
		cmp    $0x3,%bl
		je     jump_3c293
		jmp    jump_3c29b
	jump_3c289:
		addw   $0xa,data_f0ba0
		jmp    jump_3c29b
	jump_3c293:
		addw   $0xa,data_f0ba2
	jump_3c29b:
		movb   $0x0,0x1e(%esi)
		movsbw 0xe(%esi),%dx
		mov    0x1e(%esi),%al
		dec    %edx
		mov    %al,0x15(%esi)
		mov    %esi,%eax
		movswl %dx,%ebx
		call   func_1daee
		mov    %esi,%eax
		mov    %ebx,%ecx
		call   func_197ad
		shl    $0x3,%ecx
		mov    $data_cc968,%eax
		mov    %esi,%edx
		add    %ecx,%eax
		movb   $0x0,0x64(%esi)
		call   func_1137a
		mov    $data_d6620,%eax
		mov    %esi,%edx
		call   func_1134f
		mov    %esi,%eax
		call   func_113e4
		call   func_53e0f
		cmpl   $0x0,data_cc968(%ecx)
		jne    jump_3c2fb
		mov    %ebx,%eax
		call   func_53f94
	jump_3c2fb:
		call   func_53c12
		call   func_44df3
		jmp    jump_3b7c8


/*----------------------------------------------------------------*/
func_3c30a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		movsbw (%eax),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%ecx),%ax
		mov    %ax,0x4(%esp)
		lea    0x4(%esp),%edx
		mov    0x60(%ecx),%ebx
		mov    %esp,%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3c39e
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3c39e
		cmpw   $0x12c,0x61(%esi)
		jge    jump_3c39e
		mov    $0x11,%ebx
		mov    $data_77b9a,%edx
		mov    %ecx,%eax
		movb   $0x7,0x64(%ecx)
		call   func_48612
		orb    $0x20,0x1e(%esi)
		mov    %ecx,%eax
		movw   $0x3c,0x25(%esi)
		call   func_12124
		mov    $0x1,%eax
		jmp    jump_3bb98
	jump_3c39e:
		xor    %eax,%eax
		jmp    jump_3bb98


/*----------------------------------------------------------------*/
func_3c3a5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    data_ba83e,%ax
		mov    %dx,data_f0b9e
		mov    %ax,(%esp)
		jmp    jump_3c426
	jump_3c3c5:
		mov    data_ba83c,%di
		jmp    jump_3c410
	jump_3c3ce:
		mov    -0x2(%esp),%esi
		mov    $0x1,%ebx
		sar    $0x10,%esi
		mov    %ecx,%eax
		mov    %esi,%edx
		call   func_13d02
		mov    %esi,%edx
		mov    %ecx,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_3c40f
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_3c40f
		mov    %ebx,%eax
		call   func_28596
	jump_3c40f:
		inc    %edi
	jump_3c410:
		mov    data_ba83a,%eax
		sar    $0x10,%eax
		movswl %di,%ecx
		add    $0xd,%eax
		cmp    %eax,%ecx
		jl     jump_3c3ce
		incw   (%esp)
	jump_3c426:
		mov    data_ba83c,%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_3c3c5
		mov    $0x11,%ebx
		mov    $data_77ba0,%edx
		mov    %ebp,%eax
		mov    $0x1,%ecx
		call   func_48612
		mov    $0x32,%ebx
		mov    %ebp,%eax
		mov    $0x1770,%edx
		call   func_22d18
		mov    %ebp,%eax
		call   func_28728
		mov    $0x1,%ecx
		mov    $0x32,%ebx
		mov    $0x1770,%edx
		mov    %ebp,%eax
		call   func_2a500
		mov    $0x2,%ecx
		mov    %ebp,%eax
		mov    $0x1e,%ebx
		call   func_12124
		call   func_287af
		mov    %ecx,%edx
		mov    %ebp,%eax
		call   func_29437
		mov    $0x2,%ecx
		mov    $0x1e,%ebx
		mov    %ebp,%eax
		mov    %ecx,%edx
		call   func_2a5be
		mov    %ebp,%eax
		call   func_1ed90
		add    $0x4,%esp
		jmp    jump_3b7c7


/*----------------------------------------------------------------*/
func_3c4c1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x5a(%ecx),%al
		call   func_184a4
		cmp    $0x6,%al
		jne    jump_3c4e6
		mov    0x1e(%ecx),%ah
		test   $0x2,%ah
		jne    jump_3c4e6
		test   $0x4,%ah
		je     jump_3c4ea
	jump_3c4e6:
		xor    %eax,%eax
		jmp    jump_3c541
	jump_3c4ea:
		movsbw 0x63(%ecx),%ax
		mov    $0x11,%ebx
		mov    %ax,(%esp)
		movb   $0x0,0x63(%ecx)
		call   func_45559
		mov    %ecx,%eax
		mov    $data_77bac,%edx
		call   func_1e460
		call   func_5e9e8
		mov    %ecx,%eax
		call   func_48612
		mov    $0x20,%eax
		call   func_1033b
		call   func_499e4
		mov    0x14(%ecx),%dh
		mov    (%esp),%al
		or     $0x4,%dh
		mov    %al,0x63(%ecx)
		mov    %dh,0x14(%ecx)
		call   func_45559
		mov    $0x1,%eax
	jump_3c541:
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3c548:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%ebp
		mov    %dx,(%esp)
		call   func_169d7
		movsbw 0x0(%ebp),%ax
		mov    %ax,0x8(%esp)
		mov    $0x3,%ebx
		movsbw 0x1(%ebp),%ax
		lea    0x4(%esp),%edx
		mov    %ax,0x4(%esp)
		lea    0x8(%esp),%eax
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3c701
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3c701
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		mov    0x5d(%ebp),%eax
		mov    $0x88,%ecx
		sar    $0x18,%eax
		mov    %ebp,%esi
		call   func_119b6
		call   func_112fd
		mov    %eax,%edi
		mov    %eax,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movl   $0x0,0x7b(%edx)
		mov    %edx,0x77(%ebp)
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    (%esp),%dl
		movb   $0x0,0x63(%ebp)
		call   func_17e6d
		mov    0x4c(%ebp),%eax
		movb   $0x0,0x1e(%ebp)
		mov    %eax,0x48(%ebp)
		mov    0x1e(%ebp),%al
		xor    %edx,%edx
		mov    %al,0x15(%ebp)
	jump_3c61f:
		movswl %dx,%eax
		movw   $0xffff,0x1f(%ebp,%eax,2)
		mov    0x1f(%ebp,%eax,2),%bx
		inc    %edx
		mov    %bx,0x16(%ebp,%eax,2)
		cmp    $0x4,%dx
		jl     jump_3c61f
		movswl %dx,%eax
		movw   $0xffff,0x1f(%ebp,%eax,2)
		mov    0x5f(%ebp),%eax
		sar    $0x10,%eax
		mov    $0x1e,%edx
		call   func_1198d
		mov    %al,0x60(%ebp)
		mov    $0x1,%eax
		call   func_61147
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		movsbl 0x1(%ebp),%eax
		call   func_10988
		add    $0xc,%eax
		mov    %ax,0x4(%esp)
		mov    $data_77bb5,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_77bc0,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77bca,%eax
		call   func_4f460
		mov    0x2(%esp),%edx
		mov    0x5d(%ebp),%ebx
		mov    0x6(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_21944
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		call   func_61115
		call   func_1ffcd
		mov    %ebp,%eax
		call   func_12124
		call   func_45559
		mov    $0x1,%eax
		jmp    jump_3c703
	jump_3c701:
		xor    %eax,%eax
	jump_3c703:
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3c70c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    %eax,%ecx
		movsbw 0x63(%eax),%ax
		mov    %ax,(%esp)
		mov    %ecx,%eax
		call   func_46710
		mov    0x5d(%ecx),%eax
		sar    $0x18,%eax
		call   func_119b6
		mov    %ecx,%eax
		call   func_1808a
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ecx)
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11e04
		mov    (%esp),%al
		mov    %al,0x63(%ecx)
		mov    %ecx,%eax
		call   func_12124
		call   func_45559
		jmp    jump_3c541


/*----------------------------------------------------------------*/
func_3c769:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dx,0x4(%esp)
		mov    %bx,(%esp)
		mov    -0x2(%esp),%ebp
		mov    0x2(%esp),%edi
		movsbl 0x1(%eax),%edx
		sar    $0x10,%ebp
		sar    $0x10,%edi
		movsbl (%eax),%eax
		mov    %ebp,%ecx
		mov    %edi,%ebx
		call   func_46df1
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_49adf
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    0x4(%esp),%al
		mov    %esi,%ebx
		mov    %al,(%esi)
		mov    (%esp),%al
		mov    %ebp,%edx
		mov    %al,0x1(%esi)
		mov    %edi,%eax
		call   func_11e04
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3c7d1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		call   func_169d7
		movsbw (%esi),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0xc(%esp)
		lea    0xc(%esp),%edx
		mov    0x60(%esi),%ebx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x1,%ecx
		call   func_49abc
		push   $0x7
		mov    0xe(%esp),%edx
		mov    0x60(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		mov    $0x1,%edi
	jump_3c82b:
		lea    0xc(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3c8d5
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3c8d5
		xor    %ecx,%ecx
		jmp    jump_3c8b0
	jump_3c862:
		mov    0x8(%esp),%eax
		lea    0x4(%esp),%edx
		mov    %ax,(%esp)
		mov    0xc(%esp),%eax
		movsbl %cl,%ebx
		mov    %ax,0x4(%esp)
		mov    %esp,%eax
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_3c8af
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		je     jump_3c8b6
	jump_3c8af:
		inc    %ecx
	jump_3c8b0:
		cmp    $0x4,%cx
		jl     jump_3c862
	jump_3c8b6:
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %edi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		cmp    $0x4,%cx
		je     jump_3c82b
	jump_3c8d5:
		mov    $0x1,%eax
		call   func_44d67
	jump_3c8df:
		mov    $0x1,%ecx
		lea    0xc(%esp),%edx
		lea    0x8(%esp),%eax
		mov    %esi,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3c904
		xor    %eax,%eax
		call   func_44d67
		xor    %eax,%eax
		jmp    jump_3c965
	jump_3c904:
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3c8df
		mov    0xa(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_3c769
		mov    0x4c(%esi),%eax
		mov    %eax,%edx
		mov    $0x14,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %ax,%edx
		mov    0x48(%esi),%ebx
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x48(%esi)
		call   func_46359
		xor    %eax,%eax
		call   func_44d67
		mov    %esi,%eax
		call   func_5401b
		mov    $0x1,%eax
	jump_3c965:
		add    $0x10,%esp
		jmp    jump_3b7c8
.data
data_3c96d:
		.fill   0xe
data_3c97b:
		.ascii  "\x32\x00\x1e\x00\x50\x00\x32\x00"
		.ascii  "\x1e\x00\x1e\x00\x64\x00\x50\x00"
.text


/*----------------------------------------------------------------*/
func_3c98b:
/*----------------------------------------------------------------*/
		incl   (%eax)
		add    %bh,%bh
		add    %eax,(%eax)
		add    %al,(%ecx)


/*----------------------------------------------------------------*/
func_3c993:
/*----------------------------------------------------------------*/
		movw   $0x0,0x57(%eax)
		movb   $0x0,0x7f(%eax)
		movb   $0x0,0x81(%eax)
		movswl %dx,%eax
		jmp    func_1a0c6


/*----------------------------------------------------------------*/
func_3c9ac:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %bx,0x4(%esp)
		lea    0x4(%esp),%ebx
		movswl %cx,%edi
		mov    %esp,%edx
		mov    %edi,%ecx
		call   func_1a146
		mov    0x12(%esp),%eax
		mov    0x2(%esp),%edx
		mov    $0x2,%ecx
		sar    $0x10,%eax
		mov    %edi,%ebx
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		xor    %ebx,%ebx
	jump_3c9f0:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3ca32
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_3c9f0
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3c9f0
		add    %eax,%ebx
		jmp    jump_3c9f0
	jump_3ca32:
		mov    %ebx,%eax
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_3ca3c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x5c,%esp
		mov    0x70(%esp),%esi
		mov    %eax,0x20(%esp)
		mov    %dx,0x50(%esp)
		mov    %bx,0x38(%esp)
		mov    %ecx,%ebp
		call   func_1a31d
		mov    0x20(%esp),%edx
		mov    0x20(%esp),%eax
		mov    0x20(%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		call   func_14307
		inc    %eax
		mov    0x20(%esp),%edx
		movswl %ax,%ebx
		mov    0x20(%esp),%eax
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_13d02
		mov    0x20(%esp),%eax
		mov    $0xffffffff,%edi
		call   func_174cf
		xor    %ah,%ah
		mov    0x36(%esp),%edx
		mov    %eax,0x30(%esp)
		mov    0x4e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2d7
		xor    %edx,%edx
		mov    0x30(%esp),%ebx
		mov    %dx,0x3c(%esp)
		cmp    $0x3,%bx
		sete   0x54(%esp)
		jmp    jump_3cd6f
	jump_3cad0:
		mov    0x50(%esp),%eax
		mov    0x39(%esp),%ecx
		lea    0x28(%esp),%edx
		mov    %ax,0x34(%esp)
		sar    $0x18,%ecx
		mov    0x38(%esp),%eax
		mov    %ecx,%ebx
		mov    %ax,0x28(%esp)
		lea    0x34(%esp),%eax
		call   func_49abc
		mov    0x30(%esp),%ebx
		cmp    $0xd,%bx
		jb     jump_3cb4e
		jbe    jump_3ce03
		cmp    $0x10,%bx
		jb     jump_3cb3f
		jbe    jump_3d091
		mov    0x3c(%esp),%al
		inc    %al
		and    $0x3,%al
		mov    %al,0x58(%esp)
		cmp    $0x12,%bx
		jb     jump_3d12b
		jbe    jump_3d1d4
		cmp    $0x13,%bx
		je     jump_3d2e3
		jmp    jump_3cd6a
	jump_3cb3f:
		cmp    $0xe,%bx
		jbe    jump_3ce1e
		jmp    jump_3cffc
	jump_3cb4e:
		cmp    $0x5,%bx
		jb     jump_3cb73
		jbe    jump_3cc91
		cmp    $0x9,%bx
		jbe    jump_3ce1e
		cmp    $0xb,%bx
		jb     jump_3cd6a
		jmp    jump_3cf86
	jump_3cb73:
		cmp    $0x3,%bx
		ja     jump_3cc3a
		xor    %eax,%eax
		mov    0x3a(%esp),%ebx
		mov    0x54(%esp),%al
		mov    0x26(%esp),%edx
		inc    %eax
		mov    $0x1,%ecx
		cwtl
		sar    $0x10,%ebx
		push   %eax
		mov    0x36(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3cba5:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2fe
		test   %ax,%ax
		je     jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,0x4c(%esp)
		cmp    %ax,%di
		jge    jump_3cba5
		mov    0x3a(%esp),%ebx
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		mov    0x20(%esp),%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_3cba5
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    0x4c(%esp),%edi
		mov    %ax,(%esi)
		jmp    jump_3cba5
	jump_3cc3a:
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %di,%ax
		jle    jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3cd6a
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    %ebx,%edi
		jmp    jump_3cd67
	jump_3cc91:
		mov    0x20(%esp),%eax
		mov    $0x3,%ecx
		call   func_1aef3
		mov    %ax,0x24(%esp)
		inc    %eax
		mov    0x3a(%esp),%ebx
		cwtl
		mov    0x26(%esp),%edx
		push   %eax
		mov    0x36(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1cb53
		cmpw   $0x0,0x3c(%esp)
		jne    jump_3ccd9
		mov    0x20(%esp),%ebx
		mov    $0x2,%edx
		mov    $0xffffffff,%eax
		jmp    jump_3ccea
	jump_3ccd9:
		mov    0x20(%esp),%ebx
		mov    data_f0b84,%eax
		mov    $0x2,%edx
		sar    $0x10,%eax
	jump_3ccea:
		call   func_1b7d4
		mov    0x22(%esp),%ecx
		mov    0x3a(%esp),%eax
		mov    0x26(%esp),%edx
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x18(%esp)
		mov    0x32(%esp),%eax
		mov    0x18(%esp),%ebx
		sar    $0x10,%eax
		call   func_1c685
		mov    0x24(%esp),%eax
		mov    0x26(%esp),%edx
		inc    %eax
		mov    $0x3,%ecx
		cwtl
		mov    0x18(%esp),%ebx
		push   %eax
		mov    0x36(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1cbb1
		mov    data_f0b86,%ax
		cmp    %ax,%di
		jge    jump_3cd6a
		mov    %eax,%edi
		mov    data_f0b84,%ax
	jump_3cd52:
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    data_f0b82,%ax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
	jump_3cd67:
		mov    %ax,(%esi)
	jump_3cd6a:
		incw   0x3c(%esp)
	jump_3cd6f:
		cmpw   $0x4,0x3c(%esp)
		jl     jump_3cad0
		mov    0x20(%esp),%edx
		mov    0x20(%esp),%eax
		mov    0x20(%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11e04
		call   func_14307
		movswl %ax,%ebx
		mov    0x20(%esp),%eax
		mov    0x20(%esp),%edx
		movsbl (%eax),%eax
		movsbl 0x1(%edx),%edx
		call   func_13d02
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     jump_3d3bb
		movswl (%esi),%edx
		add    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x30(%esp),%eax
		mov    %dx,(%esi)
		cmp    $0x5,%ax
		jne    jump_3d374
		mov    0x36(%esp),%ebx
		mov    0x4e(%esp),%edx
		mov    0x20(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    $0x5a,%edx
		sub    %eax,%edx
		add    %edx,%edi
		jmp    jump_3d3a7
	jump_3ce03:
		mov    0x3c(%esp),%ebx
		test   %bx,%bx
		jne    jump_3ce13
		incw   0x28(%esp)
		jmp    jump_3ce1e
	jump_3ce13:
		cmp    $0x1,%bx
		jne    jump_3ce1e
		sub    %bx,0x34(%esp)
	jump_3ce1e:
		mov    0x30(%esp),%ebx
		cmp    $0x8,%bx
		je     jump_3ce2e
		cmp    $0xd,%bx
		jne    jump_3ce37
	jump_3ce2e:
		movw   $0x3,0x44(%esp)
		jmp    jump_3ce3e
	jump_3ce37:
		movw   $0x2,0x44(%esp)
	jump_3ce3e:
		mov    0x3c(%esp),%ebx
		test   %bx,%bx
		jne    jump_3ce4e
		decw   0x34(%esp)
		jmp    jump_3ce59
	jump_3ce4e:
		cmp    $0x3,%bx
		jne    jump_3ce59
		incw   0x28(%esp)
	jump_3ce59:
		mov    0x42(%esp),%eax
		mov    0x3a(%esp),%ebx
		mov    0x26(%esp),%edx
		mov    $0x2,%ecx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		push   %eax
		mov    0x36(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		xor    %ebx,%ebx
		mov    %bx,0x2c(%esp)
	jump_3ce87:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3ceb8
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		mov    0x34(%esp),%eax
		mov    %ax,(%esp,%edx,4)
		mov    0x28(%esp),%eax
		mov    %ax,0x2(%esp,%edx,4)
		incw   0x2c(%esp)
		jmp    jump_3ce87
	jump_3ceb8:
		mov    0x3a(%esp),%edx
		mov    0x2c(%esp),%eax
		mov    $0x4,%ebx
		sar    $0x10,%edx
		dec    %eax
		add    $0x2,%edx
		mov    %ax,0x2c(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x40(%esp)
		jmp    jump_3cf75
	jump_3cee2:
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		mov    (%esp,%edx,4),%ax
		mov    %ax,0x34(%esp)
		mov    0x2(%esp,%edx,4),%ax
		mov    %ax,0x28(%esp)
		mov    0x42(%esp),%eax
		mov    0x32(%esp),%edx
		sar    $0x10,%eax
		mov    0x26(%esp),%ebx
		push   %eax
		mov    0x42(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		mov    %eax,0x20(%esp)
		mov    %eax,%ecx
		mov    0x24(%esp),%eax
		call   func_3c9ac
		mov    %eax,0x48(%esp)
		cmp    %ax,%di
		jge    jump_3cf70
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		mov    0x20(%esp),%ecx
		mov    0x1c(%esp),%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_3cf70
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    0x48(%esp),%edi
		mov    %ax,(%esi)
	jump_3cf70:
		decw   0x2c(%esp)
	jump_3cf75:
		cmpw   $0x0,0x2c(%esp)
		jl     jump_3cd6a
		jmp    jump_3cee2
	jump_3cf86:
		jne    jump_3cf8f
		mov    $0x9,%ecx
		jmp    jump_3cf94
	jump_3cf8f:
		mov    $0x7,%ecx
	jump_3cf94:
		cmpw   $0x0,0x3c(%esp)
		jne    jump_3cfac
		mov    0x20(%esp),%ebx
		mov    $0x2,%edx
		mov    $0xffffffff,%eax
		jmp    jump_3cfbd
	jump_3cfac:
		mov    0x20(%esp),%ebx
		mov    data_f0b84,%eax
		mov    $0x2,%edx
		sar    $0x10,%eax
	jump_3cfbd:
		call   func_1b7d4
		mov    0x3a(%esp),%ebx
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		movswl %cx,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a7ba
		mov    data_f0b86,%dx
		cmp    %dx,%di
		jge    jump_3cd6a
		mov    data_f0b84,%ax
		mov    %edx,%edi
		jmp    jump_3cd52
	jump_3cffc:
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		mov    $0x4,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,data_f0b9e
	jump_3d01f:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3cd6a
		cmp    $0x3,%bx
		jge    jump_3d088
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %ax,%di
		jge    jump_3d088
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d088
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%esi)
	jump_3d088:
		call   func_1ad2e
		mov    %eax,%ebx
		jmp    jump_3d01f
	jump_3d091:
		mov    0x36(%esp),%edx
		mov    0x4e(%esp),%eax
		mov    $0x3,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_3d0a9:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3d11f
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %ax,%di
		jge    jump_3d0a9
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d0a9
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x20(%esp),%edx
		mov    0x60(%edx),%edx
		sar    $0x18,%edx
		mov    %ebx,%edi
		add    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,(%esi)
		jmp    jump_3d0a9
	jump_3d11f:
		movw   $0x4,0x3c(%esp)
		jmp    jump_3cd6a
	jump_3d12b:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		mov    0x55(%esp),%ebx
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x7
		mov    0x3e(%esp),%ebx
		mov    0x2a(%esp),%edx
		mov    0x36(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3d16f:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %ax,%di
		jge    jump_3d16f
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d16f
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%esi)
		jmp    jump_3d16f
	jump_3d1d4:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		mov    0x55(%esp),%ebx
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x3
		mov    0x3e(%esp),%ebx
		mov    0x2a(%esp),%edx
		mov    0x36(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		mov    0x3c(%esp),%ecx
		inc    %ecx
	jump_3d22c:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %ax,%di
		jge    jump_3d22c
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d22c
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    %ecx,%eax
		xor    %ch,%ah
		and    $0x3,%al
		mov    %ax,(%esi)
		mov    (%esi),%dl
		mov    %ebx,%edi
		test   $0x1,%dl
		jne    jump_3d2be
		mov    0x20(%esp),%eax
		mov    0x28(%esp),%ebx
		movsbw 0x1(%eax),%ax
		cmp    %bx,%ax
		jge    jump_3d2b4
		movw   $0x2,(%esi)
		jmp    jump_3d22c
	jump_3d2b4:
		movw   $0x0,(%esi)
		jmp    jump_3d22c
	jump_3d2be:
		mov    0x20(%esp),%eax
		mov    0x34(%esp),%edx
		movsbw (%eax),%ax
		cmp    %dx,%ax
		jge    jump_3d2d9
		movw   $0x1,(%esi)
		jmp    jump_3d22c
	jump_3d2d9:
		movw   $0x3,(%esi)
		jmp    jump_3d22c
	jump_3d2e3:
		testb  $0x1,0x3c(%esp)
		je     jump_3cd6a
		push   $0x5
		mov    0x3e(%esp),%ebx
		mov    0x2a(%esp),%edx
		mov    0x36(%esp),%eax
		mov    $0x1,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3d30f:
		lea    0x28(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3cd6a
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    %eax,%ebx
		cmp    %ax,%di
		jge    jump_3d30f
		mov    0x26(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d30f
		mov    0x34(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x6c(%esp),%edx
		mov    0x28(%esp),%eax
		mov    %ax,(%edx)
		mov    0x3c(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%esi)
		jmp    jump_3d30f
	jump_3d374:
		cmp    $0x7,%ax
		je     jump_3d392
		cmp    $0x8,%ax
		je     jump_3d392
		cmp    $0x9,%ax
		je     jump_3d392
		cmp    $0x6,%ax
		je     jump_3d392
		cmp    $0xd,%ax
		jne    jump_3d3a7
	jump_3d392:
		mov    0x6c(%esp),%edx
		movswl 0x0(%ebp),%eax
		movswl (%edx),%edx
		shl    $0x2,%edi
		call   func_13cbd
		add    %eax,%edi
	jump_3d3a7:
		mov    0x20(%esp),%eax
		mov    (%esi),%bx
		movsbw 0x63(%eax),%ax
		cmp    %bx,%ax
		jne    jump_3d3bb
		add    $0x4,%edi
	jump_3d3bb:
		call   func_1a3ae
		mov    %edi,%eax
		add    $0x5c,%esp
	jump_3d3c5:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8

vtable_3d3cd:
		.long   func_3d549
		.long   func_3d549
		.long   func_3d549
		.long   func_3d549
		.long   func_3d613
		.long   func_3d6e8


/*----------------------------------------------------------------*/
func_3d3e5:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    0x4c(%esp),%ebp
		mov    %eax,%edi
		mov    %dx,0x10(%esp)
		mov    %bx,0x20(%esp)
		mov    %ecx,0xc(%esp)
		call   func_1a31d
		mov    %edi,%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		call   func_11ee4
		call   func_14307
		inc    %eax
		movsbl 0x1(%edi),%edx
		movswl %ax,%ebx
		movsbl (%edi),%eax
		call   func_13d02
		mov    %edi,%eax
		mov    0x1e(%esp),%edx
		call   func_17531
		mov    %eax,%ebx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,0x8(%esp)
		test   %bx,%bx
		jl     jump_3d45a
		movswl %bx,%edx
		call   func_1762c
		mov    %eax,0x1c(%esp)
		jmp    jump_3d462
	jump_3d45a:
		movl   $0xa,0x1c(%esp)
	jump_3d462:
		mov    %edi,%eax
		call   func_174cf
		mov    $0x7fff,%ebx
		mov    0x1e(%esp),%edx
		xor    %ah,%ah
		xor    %ecx,%ecx
		mov    %eax,0x24(%esp)
		mov    %ebx,0x2c(%esp)
		sar    $0x10,%edx
		mov    0xe(%esp),%eax
		mov    %cx,0x30(%esp)
		sar    $0x10,%eax
		mov    0x24(%esp),%esi
		call   func_1a2d7
		cmp    $0x3,%si
		sete   0x34(%esp)
	jump_3d49f:
		mov    0x10(%esp),%eax
		mov    0x2d(%esp),%ebx
		lea    0x14(%esp),%edx
		mov    %ax,0x18(%esp)
		mov    0x20(%esp),%eax
		sar    $0x18,%ebx
		mov    %ax,0x14(%esp)
		lea    0x18(%esp),%eax
		call   func_49abc
		mov    0x8(%esp),%eax
		mov    0x30(%esp),%ecx
		movsbw 0x63(%eax),%ax
		cmp    %cx,%ax
		jne    jump_3d4e1
		mov    0x8(%esp),%esi
		mov    0x46(%esi),%si
		jmp    jump_3d517
	jump_3d4e1:
		mov    0x8(%esp),%edx
		mov    0x2e(%esp),%eax
		mov    0x60(%edx),%edx
		sar    $0x10,%eax
		sar    $0x18,%edx
		add    %edx,%eax
		test   $0x1,%al
		je     jump_3d50d
		mov    0x8(%esp),%eax
		mov    0x44(%eax),%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		sar    $0x2,%edx
		sub    %edx,%eax
		mov    %eax,%esi
		jmp    jump_3d517
	jump_3d50d:
		mov    0x8(%esp),%esi
		mov    0x44(%esi),%esi
		sar    $0x11,%esi
	jump_3d517:
		mov    $0x12c,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		imul   0x1c(%esp),%esi
		mov    $0xbb8,%eax
		sub    %esi,%eax
		mov    0x24(%esp),%edx
		mov    %eax,%esi
		cmp    $0x5,%dx
		ja     jump_3d681
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *vtable_3d3cd(,%eax,4)


/*----------------------------------------------------------------*/
func_3d549:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x2e(%esp),%ebx
		mov    0x34(%esp),%al
		mov    0x12(%esp),%edx
		inc    %eax
		mov    $0x1,%ecx
		cwtl
		sar    $0x10,%ebx
		push   %eax
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3d571:
		lea    0x14(%esp),%edx
		lea    0x18(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3d681
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2fe
		test   %ax,%ax
		je     jump_3d681
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3d571
		cwtl
		movswl %si,%esi
		sar    %eax
		sub    %eax,%esi
		cmp    0x2c(%esp),%si
		jge    jump_3d571
		mov    0x2e(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		mov    %edi,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_3d571
		mov    0xc(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ax,(%edx)
		mov    0x48(%esp),%edx
		mov    0x14(%esp),%eax
		mov    %ax,(%edx)
		mov    0x30(%esp),%eax
		mov    %esi,0x2c(%esp)
		mov    %ax,0x0(%ebp)
		jmp    jump_3d571


/*----------------------------------------------------------------*/
func_3d613:
/*----------------------------------------------------------------*/
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3d681
		cwtl
		movswl %si,%esi
		sar    %eax
		mov    0x2c(%esp),%ecx
		sub    %eax,%esi
		cmp    %cx,%si
		jge    jump_3d681
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3d681
		mov    0xc(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ax,(%edx)
		mov    0x48(%esp),%edx
		mov    0x14(%esp),%eax
	jump_3d672:
		mov    %ax,(%edx)
		mov    0x30(%esp),%eax
		mov    %esi,0x2c(%esp)
		mov    %ax,0x0(%ebp)
	jump_3d681:
		mov    0x30(%esp),%eax
		inc    %eax
		mov    %ax,0x30(%esp)
		cmp    $0x4,%ax
		jl     jump_3d49f
		mov    %edi,%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		call   func_11e04
		call   func_14307
		movswl %ax,%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		call   func_13d02
		cmpw   $0x7fff,0x2c(%esp)
		je     jump_3d6d7
		movswl 0x0(%ebp),%edx
		add    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x0(%ebp)
	jump_3d6d7:
		call   func_1a3ae
		mov    0x2c(%esp),%eax
		add    $0x38,%esp
		jmp    jump_3d3c5


/*----------------------------------------------------------------*/
func_3d6e8:
/*----------------------------------------------------------------*/
		mov    %edi,%eax
		call   func_1aef3
		mov    %ax,0x28(%esp)
		inc    %eax
		cwtl
		mov    $0x3,%ecx
		mov    %eax,0x4(%esp)
		push   %eax
		mov    0x32(%esp),%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,0x4(%esp)
		mov    0x1a(%esp),%eax
		mov    0x4(%esp),%ebx
		sar    $0x10,%eax
		call   func_1cb53
		mov    $0x2,%edx
		mov    $0xffffffff,%eax
		mov    %edi,%ebx
		mov    0x26(%esp),%ecx
		call   func_1b7d4
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		mov    (%esp),%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1c685
		mov    0x4(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    0x16(%esp),%eax
		mov    $0x3,%ecx
		push   %ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x4(%esp),%ebx
		call   func_1cbb1
		mov    data_f0b84,%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		je     jump_3d681
		sar    %eax
		movswl %si,%esi
		mov    0x2c(%esp),%ebx
		sub    %eax,%esi
		cmp    %bx,%si
		jge    jump_3d681
		mov    0xc(%esp),%edx
		mov    data_f0b84,%ax
		mov    %ax,(%edx)
		mov    0x48(%esp),%edx
		mov    data_f0b82,%ax
		jmp    jump_3d672


/*----------------------------------------------------------------*/
func_3d7b2:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    %eax,%esi
		mov    %dx,0x1c(%esp)
		mov    %bx,0x20(%esp)
		mov    %ecx,%ebp
		call   func_1a31d
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    %esi,%eax
		call   func_174cf
		mov    %al,%bl
		mov    %al,0x28(%esp)
		mov    %esi,%eax
		mov    0x1e(%esp),%edx
		call   func_1665b
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2d7
		xor    %edx,%edx
		mov    $0x7fff,%edi
		mov    %dx,0x14(%esp)
		cmp    $0x3,%bl
		sete   0x2c(%esp)
		jmp    jump_3daa7
	jump_3d819:
		mov    0x1c(%esp),%eax
		mov    0x11(%esp),%ecx
		lea    0x18(%esp),%edx
		mov    %ax,0x8(%esp)
		sar    $0x18,%ecx
		mov    0x20(%esp),%eax
		mov    %ecx,%ebx
		mov    %ax,0x18(%esp)
		lea    0x8(%esp),%eax
		call   func_49abc
		mov    0x28(%esp),%dl
		cmp    $0xd,%dl
		jb     jump_3d892
		jbe    jump_3dafc
		cmp    $0x10,%dl
		jb     jump_3d884
		jbe    jump_3dcd8
		mov    0x14(%esp),%al
		inc    %al
		and    $0x3,%al
		mov    %al,0x30(%esp)
		cmp    $0x12,%dl
		jb     jump_3dd58
		jbe    jump_3ddfc
		cmp    $0x13,%dl
		je     jump_3deaf
		jmp    jump_3daa2
	jump_3d884:
		cmp    $0xe,%dl
		jbe    jump_3db17
		jmp    jump_3dc49
	jump_3d892:
		cmp    $0x5,%dl
		jb     jump_3d8b4
		jbe    jump_3d9d7
		cmp    $0x9,%dl
		jbe    jump_3db17
		cmp    $0xb,%dl
		jb     jump_3daa2
		jmp    jump_3dbda
	jump_3d8b4:
		cmp    $0x3,%dl
		ja     jump_3d976
		mov    0x2c(%esp),%al
		inc    %al
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		and    $0xff,%eax
		mov    $0x1,%ecx
		push   %eax
		sar    $0x10,%ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3d8e8:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a2fe
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,0x10(%esp)
		cmp    %ax,%di
		jle    jump_3d8e8
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_16699
		cmp    $0x1,%ax
		jne    jump_3d8e8
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    0x10(%esp),%edi
		mov    %ax,(%edx)
		jmp    jump_3d8e8
	jump_3d976:
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,0x4(%esp)
		cmp    %ax,%di
		jle    jump_3daa2
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_16699
		cmp    $0x1,%ax
		jne    jump_3daa2
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    0x4(%esp),%edi
		jmp    jump_3da9f
	jump_3d9d7:
		mov    %esi,%eax
		call   func_1aef3
		mov    %al,0x24(%esp)
		mov    0x12(%esp),%ebx
		xor    %ah,%ah
		mov    0x16(%esp),%edx
		inc    %eax
		mov    $0x3,%ecx
		cwtl
		sar    $0x10,%ebx
		push   %eax
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1cb53
		cmpw   $0x0,0x14(%esp)
		jne    jump_3da1c
		mov    $0x3,%edx
		mov    $0x7fff,%eax
		mov    %esi,%ebx
		jmp    jump_3da2b
	jump_3da1c:
		mov    $0x3,%edx
		mov    data_f0b84,%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
	jump_3da2b:
		call   func_1b7d4
		mov    0x12(%esp),%eax
		xor    %ecx,%ecx
		mov    0x16(%esp),%edx
		mov    0x24(%esp),%cl
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    %eax,(%esp)
		mov    0x6(%esp),%eax
		mov    (%esp),%ebx
		sar    $0x10,%eax
		call   func_1c685
		xor    %eax,%eax
		mov    0x24(%esp),%al
		mov    0x16(%esp),%edx
		inc    %eax
		mov    $0x3,%ecx
		cwtl
		mov    (%esp),%ebx
		push   %eax
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1cbb1
		mov    data_f0b86,%ax
		cmp    %ax,%di
		jle    jump_3daa2
		mov    %eax,%edi
		mov    data_f0b84,%ax
	jump_3da91:
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    data_f0b82,%ax
	jump_3da9f:
		mov    %ax,(%edx)
	jump_3daa2:
		incw   0x14(%esp)
	jump_3daa7:
		cmpw   $0x4,0x14(%esp)
		jl     jump_3d819
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		call   func_1a3ae
		cmp    $0x7fff,%di
		je     jump_3daf2
		cmpb   $0x5,0x28(%esp)
		jne    jump_3daf2
		mov    0x1e(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    $0x5a,%edx
		sub    %eax,%edx
		add    %edx,%edi
	jump_3daf2:
		mov    %edi,%eax
		add    $0x34,%esp
		jmp    jump_3f241
	jump_3dafc:
		mov    0x14(%esp),%eax
		test   %ax,%ax
		jne    jump_3db0c
		incw   0x18(%esp)
		jmp    jump_3db17
	jump_3db0c:
		cmp    $0x1,%ax
		jne    jump_3db17
		sub    %ax,0x8(%esp)
	jump_3db17:
		mov    0x28(%esp),%dh
		cmp    $0x8,%dh
		je     jump_3db25
		cmp    $0xd,%dh
		jne    jump_3db29
	jump_3db25:
		mov    $0x3,%al
		jmp    jump_3db2b
	jump_3db29:
		mov    $0x2,%al
	jump_3db2b:
		mov    0x14(%esp),%ebx
		test   %bx,%bx
		jne    jump_3db3b
		decw   0x8(%esp)
		jmp    jump_3db46
	jump_3db3b:
		cmp    $0x3,%bx
		jne    jump_3db46
		incw   0x18(%esp)
	jump_3db46:
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		and    $0xff,%eax
		mov    $0x2,%ecx
		push   %eax
		sar    $0x10,%ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3db6b:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,0xc(%esp)
		cmp    %ax,%di
		jle    jump_3db6b
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		mov    %esi,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_16699
		cmp    $0x1,%ax
		jne    jump_3db6b
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    0xc(%esp),%edi
		mov    %ax,(%edx)
		jmp    jump_3db6b
	jump_3dbda:
		jne    jump_3dbe0
		mov    $0x9,%cl
		jmp    jump_3dbe2
	jump_3dbe0:
		mov    $0x7,%cl
	jump_3dbe2:
		cmpw   $0x0,0x14(%esp)
		jne    jump_3dbf8
		mov    $0x3,%edx
		mov    $0x7fff,%eax
		mov    %esi,%ebx
		jmp    jump_3dc07
	jump_3dbf8:
		mov    $0x3,%edx
		mov    data_f0b84,%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
	jump_3dc07:
		call   func_1b7d4
		mov    0x12(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		and    $0xff,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_1a7ba
		mov    data_f0b86,%dx
		cmp    %dx,%di
		jle    jump_3daa2
		mov    data_f0b84,%ax
		mov    %edx,%edi
		jmp    jump_3da91
	jump_3dc49:
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x4,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_1ac08
		mov    %cx,data_f0b9e
		xor    %bl,%bl
	jump_3dc6c:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3daa2
		cmp    $0x3,%bl
		jae    jump_3dccf
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%ebx
		cmp    %ax,%di
		jle    jump_3dccf
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3dccf
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%edx)
	jump_3dccf:
		call   func_1ad2e
		mov    %al,%bl
		jmp    jump_3dc6c
	jump_3dcd8:
		mov    0x1e(%esp),%edx
		mov    0x1a(%esp),%eax
		mov    $0x3,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_3dcf0:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3dd4c
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%ebx
		cmp    %ax,%di
		jle    jump_3dcf0
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3dcf0
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%edx)
		jmp    jump_3dcf0
	jump_3dd4c:
		movw   $0x4,0x14(%esp)
		jmp    jump_3daa2
	jump_3dd58:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		mov    0x2d(%esp),%ebx
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x7
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3dd9c:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%ebx
		cmp    %ax,%di
		jle    jump_3dd9c
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3dd9c
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%edx)
		jmp    jump_3dd9c
	jump_3ddfc:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_49abc
		mov    0x2d(%esp),%ebx
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x3
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3de4f:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%ebx
		cmp    %ax,%di
		jle    jump_3de4f
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3de4f
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%edx)
		jmp    jump_3de4f
	jump_3deaf:
		testb  $0x1,0x14(%esp)
		je     jump_3daa2
		push   $0x5
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x1,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
	jump_3dedb:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3daa2
		mov    0x16(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%ebx
		cmp    %ax,%di
		jle    jump_3dedb
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3dedb
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x44(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,(%edx)
		jmp    jump_3dedb


/*----------------------------------------------------------------*/
func_3df3b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edi
		mov    %ebx,%ebp
		mov    %ecx,0x4(%esp)
		movswl %dx,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		movw   $0x7fff,0x0(%ebp)
		xor    %edx,%edx
		mov    0x0(%ebp),%ax
		mov    %edx,(%esp)
		mov    %eax,0x10(%esp)
	jump_3df6b:
		lea    0x18(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3dff5
		mov    0x16(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3df6b
		mov    0xb(%eax),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3df6b
		lea    0x8(%esp),%eax
		mov    0x16(%esp),%ebx
		mov    0x12(%esp),%edx
		lea    0xc(%esp),%ecx
		push   %eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3d7b2
		cmp    0x10(%esp),%ax
		jge    jump_3df6b
		mov    %eax,0x10(%esp)
		mov    0xc(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x4(%esp),%edx
		mov    0x8(%esp),%eax
		mov    %esi,(%esp)
		mov    %ax,(%edx)
		jmp    jump_3df6b
	jump_3dff5:
		movsbw (%edi),%ax
		cmp    0x0(%ebp),%ax
		jne    jump_3e011
		mov    0x4(%esp),%edx
		movsbw 0x1(%edi),%ax
		cmp    (%edx),%ax
		jne    jump_3e011
		xor    %eax,%eax
		jmp    jump_3e014
	jump_3e011:
		mov    (%esp),%eax
	jump_3e014:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_3e01b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    0x34(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x1c(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x8(%esp)
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    %edx,0x20(%esp)
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		mov    0x1a(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x10,%ebx
		call   func_1ac08
	jump_3e059:
		lea    0x18(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e171
		mov    0x16(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		jne    jump_3e059
		call   func_1a31d
		xor    %ecx,%ecx
		xor    %eax,%eax
	jump_3e08f:
		movswl %ax,%edx
		xor    %ebx,%ebx
		inc    %eax
		mov    %bx,(%esp,%edx,2)
		cmp    $0x4,%ax
		jl     jump_3e08f
		mov    0x16(%esp),%edx
		mov    0xa(%esp),%eax
		mov    $0x3,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_3e0b7:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e10c
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_3e0b7
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_3e0b7
		mov    0x60(%ebx),%ebx
		sar    $0x18,%ebx
		mov    (%esp,%ebx,2),%dx
		inc    %edx
		add    $0xa,%ecx
		mov    %dx,(%esp,%ebx,2)
		jmp    jump_3e0b7
	jump_3e10c:
		mov    0x16(%esp),%ebx
		mov    0xa(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    0x1c(%esp),%edx
		sub    %eax,%edx
		mov    0x20(%esp),%eax
		add    %edx,%ecx
		cmp    %ax,%cx
		jle    jump_3e167
		mov    0xc(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x8(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %ecx,0x20(%esp)
		mov    %ax,(%edx)
		xor    %edx,%edx
		xor    %eax,%eax
	jump_3e14d:
		movswl %ax,%ebx
		add    %ebx,%ebx
		mov    (%esp,%ebx,1),%cx
		cmp    %cx,%dx
		jge    jump_3e160
		mov    %ecx,%edx
		mov    %ax,(%edi)
	jump_3e160:
		inc    %eax
		cmp    $0x4,%ax
		jl     jump_3e14d
	jump_3e167:
		call   func_1a3ae
		jmp    jump_3e059
	jump_3e171:
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		mov    0x20(%esp),%eax
	jump_3e183:
		add    $0x24,%esp
		jmp    jump_3f241


/*----------------------------------------------------------------*/
func_3e18b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x71(%eax),%ah
		cmp    $0xff,%ah
		je     jump_3e1d1
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x72(%ecx),%dl
		mov    0x71(%ecx),%al
		call   func_1379a
		test   %eax,%eax
		je     jump_3e1c8
		movsbl 0x1(%eax),%ebx
		movsbl (%eax),%edx
		mov    %ecx,%eax
		call   func_49adf
		cmp    $0x1,%ax
		jle    jump_3e1c8
	jump_3e1bf:
		mov    $0x1,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3e1c8:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3e1d1:
		mov    0x73(%ecx),%edx
		test   %edx,%edx
		je     jump_3e1ee
		mov    %ecx,%eax
		movsbl 0x1(%edx),%ebx
		movsbl (%edx),%edx
		call   func_49adf
		cmp    $0x1,%ax
		jg     jump_3e1bf
		jmp    jump_3e1c8
	jump_3e1ee:
		cmp    0x6f(%ecx),%ah
		je     jump_3e215
		xor    %edx,%edx
		movsbl (%ecx),%eax
		mov    0x6f(%ecx),%dl
		cmp    %edx,%eax
		je     jump_3e1c8
		xor    %eax,%eax
		movsbl 0x1(%ecx),%edx
		mov    0x70(%ecx),%al
		cmp    %eax,%edx
		je     jump_3e1c8
		mov    $0x2,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3e215:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3e21b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    0x71(%eax),%bl
		cmp    $0xff,%bl
		je     jump_3e23a
		xor    %edx,%edx
		mov    0x72(%eax),%dl
		mov    %bl,%al
		and    $0xff,%eax
		call   func_1379a
		mov    %eax,%edx
		jmp    jump_3e243
	jump_3e23a:
		mov    0x73(%eax),%ebx
		test   %ebx,%ebx
		je     jump_3e243
		mov    %ebx,%edx
	jump_3e243:
		test   %edx,%edx
		je     jump_3e24c
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_3e24c:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3e251:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x4(%esp)
		mov    0x73(%eax),%edx
		test   %edx,%edx
		je     jump_3e27d
		mov    %edx,%eax
		movsbw (%edx),%dx
		mov    %dx,(%ecx)
	jump_3e272:
		mov    0x28(%esp),%ebx
		movsbw 0x1(%eax),%dx
		jmp    jump_3e2ac
	jump_3e27d:
		cmpb   $0xff,0x71(%eax)
		je     jump_3e299
		xor    %eax,%eax
		mov    0x72(%edi),%dl
		mov    0x71(%edi),%al
		call   func_1379a
		movsbw (%eax),%bx
		mov    %bx,(%ecx)
		jmp    jump_3e272
	jump_3e299:
		xor    %edx,%edx
		mov    0x6f(%edi),%dl
		mov    %dx,(%ecx)
		xor    %edx,%edx
		mov    0x28(%esp),%ebx
		mov    0x70(%edi),%dl
		xor    %eax,%eax
	jump_3e2ac:
		mov    %dx,(%ebx)
		test   %eax,%eax
		je     jump_3e2d8
		mov    (%esp),%ebx
		mov    0x4(%esp),%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		push   %ebx
		mov    0x2c(%esp),%ebx
		movswl (%edx),%edx
		movswl (%ebx),%ebx
		call   func_3d7b2
		cmp    $0x7fff,%ax
		jne    jump_3e3b7
	jump_3e2d8:
		mov    $0x7fff,%edx
		mov    %edi,%eax
		mov    $0x9,%ebx
		call   func_1665b
		mov    0x4(%esp),%eax
		mov    %edx,0x14(%esp)
		mov    0x28(%esp),%edx
		movswl (%eax),%eax
		movswl (%edx),%edx
		call   func_1ac08
	jump_3e300:
		call   func_1ad2e
		mov    %eax,0x10(%esp)
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e396
		xor    %esi,%esi
		jmp    jump_3e342
	jump_3e323:
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		movswl %si,%ebx
		mov    %edi,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_16699
		cmp    $0x1,%ax
		je     jump_3e348
		inc    %esi
	jump_3e342:
		cmp    $0x2,%si
		jl     jump_3e323
	jump_3e348:
		cmp    $0x2,%si
		je     jump_3e300
		mov    0x6(%esp),%ebx
		mov    0xa(%esp),%edx
		mov    %edi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %eax,%edx
		mov    0x10(%esp),%eax
		add    $0x12,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    0x14(%esp),%ecx
		mov    %edx,%eax
		cmp    %cx,%dx
		jae    jump_3e300
		mov    0xc(%esp),%eax
		mov    %edx,0x14(%esp)
		mov    %ax,0x0(%ebp)
		mov    (%esp),%edx
		mov    0x8(%esp),%eax
		mov    %ax,(%edx)
		jmp    jump_3e300
	jump_3e396:
		cmpw   $0x7fff,0x14(%esp)
		jne    jump_3e3b7
		mov    0x4(%esp),%eax
		mov    (%eax),%ax
		mov    %ax,0x0(%ebp)
		mov    0x28(%esp),%eax
		mov    (%esp),%edx
		mov    (%eax),%ax
		mov    %ax,(%edx)
	jump_3e3b7:
		add    $0x18,%esp
		jmp    jump_3f241


/*----------------------------------------------------------------*/
func_3e3bf:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		cmp    $0x3,%dx
		jge    jump_3e3d2
		mov    $0x3,%edx
	jump_3e3d2:
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		movswl %dx,%ebx
		movsbl (%ecx),%eax
		movsbl 0x1(%ecx),%edx
		call   func_1ac08
	jump_3e3ea:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e44a
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_3e3ea
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3e3ea
		mov    data_f0b9e,%si
		mov    data_f0b9c,%eax
		inc    %esi
		sar    $0x10,%eax
		mov    %si,data_f0b9e
		mov    %ebx,data_f0648(,%eax,4)
		jmp    jump_3e3ea
	jump_3e44a:
		mov    data_f0b9e,%ax
	jump_3e450:
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3e457:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0xa,%ebx
		mov    0x4c(%esi),%edx
		mov    0x4c(%eax),%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x3,%eax
		sub    %edx,%eax
		cmp    0x48(%esi),%eax
		jg     jump_3e485
		cmpb   $0x0,0x1e(%esi)
		je     jump_3e48f
	jump_3e485:
		mov    $0xffffffff,%eax
		jmp    jump_3e5a2
	jump_3e48f:
		cmp    $0x3,%di
		jge    jump_3e49a
		mov    $0x3,%edi
	jump_3e49a:
		movswl %di,%edx
		mov    %esi,%eax
		call   func_3e3bf
		xor    %ecx,%ecx
		mov    $0xffffffff,%ebp
		jmp    jump_3e4f0
	jump_3e4ad:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    $0x2,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3e4c8:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e4ef
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_3e4c8
	jump_3e4ef:
		inc    %ecx
	jump_3e4f0:
		cmp    data_f0b9e,%cx
		jl     jump_3e4ad
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		movswl %di,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0xa,%ebp
		call   func_1ac08
	jump_3e516:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e59c
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_3e516
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_3e516
		cmpb   $0x2,0xd(%ebx)
		je     jump_3e516
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_3e516
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		imul   $0x7,%eax,%eax
		cmp    0x48(%ebx),%eax
		jg     jump_3e581
		cmpb   $0x0,0x1e(%ebx)
		je     jump_3e516
	jump_3e581:
		mov    data_f0b9c,%eax
		sar    $0x10,%eax
		mov    %ecx,data_f0648(,%eax,4)
		incw   data_f0b9e
		jmp    jump_3e516
	jump_3e59c:
		mov    data_f0b9e,%ax
	jump_3e5a2:
		add    $0x8,%esp
	jump_3e5a5:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3e5ab:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x4(%esp)
		mov    %ecx,%ebp
		xor    %edx,%edx
		call   func_174cf
		mov    %al,%dl
		mov    %esi,%eax
		call   func_3e21b
		mov    %eax,%edi
		test   %eax,%eax
		je     jump_3e655
		cmp    $0x6,%dx
		jge    jump_3e5e2
		cmpb   $0x3,0x6c(%esi)
		je     jump_3e60a
	jump_3e5e2:
		lea    0x8(%esp),%eax
		lea    0x10(%esp),%ecx
		push   %eax
		lea    0x10(%esp),%eax
#if 1
    /* workaround for invalid %edi */
    xor    %ebx,%ebx
#else
		movsbl 0x1(%edi),%ebx
#endif
		push   %eax
#if 1
    /* workaround for invalid %edi */
    xor    %edx,%edx
#else
		movsbl (%edi),%edx
#endif
		mov    %esi,%eax
		call   func_3ca3c
		test   %ax,%ax
		jl     jump_3e62c
	jump_3e603:
		mov    $0x1,%eax
		jmp    jump_3e62e
	jump_3e60a:
		lea    0x8(%esp),%edx
		lea    0x10(%esp),%ecx
		push   %edx
		lea    0x10(%esp),%edx
		movsbl 0x1(%eax),%ebx
		push   %edx
		movsbl (%eax),%edx
		mov    %esi,%eax
		call   func_3d3e5
		cmp    $0x7fff,%ax
		jne    jump_3e603
	jump_3e62c:
		xor    %eax,%eax
	jump_3e62e:
		cmp    $0x1,%ax
		jne    jump_3e655
		mov    (%esp),%edx
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    0x4(%esp),%edx
		mov    0xc(%esp),%eax
		mov    %ax,(%edx)
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    %edi,%eax
		jmp    jump_3e657
	jump_3e655:
		xor    %eax,%eax
	jump_3e657:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_3e65e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		mov    %ecx,(%esp)
		mov    0x32(%esp),%ebx
		xor    %edx,%edx
		movw   $0xffff,0x0(%ebp)
		mov    %edx,0x8(%esp)
		mov    0x0(%ebp),%ax
		sar    $0x10,%ebx
		mov    %eax,0x20(%esp)
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		call   func_1ac08
	jump_3e696:
		lea    0x18(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e730
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3e696
		mov    0xb(%eax),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3e696
		lea    0x14(%esp),%eax
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		lea    0x10(%esp),%ecx
		push   %eax
		lea    0x10(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3ca3c
		cmp    0x20(%esp),%ax
		jle    jump_3e696
		mov    %eax,0x20(%esp)
		mov    0x10(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x4(%esp),%edx
		mov    0xc(%esp),%eax
		mov    %ax,(%edx)
		mov    (%esp),%edx
		mov    0x14(%esp),%eax
		mov    %esi,0x8(%esp)
		mov    %ax,(%edx)
		jmp    jump_3e696
	jump_3e730:
		mov    0x8(%esp),%eax
		jmp    jump_3e183


/*----------------------------------------------------------------*/
func_3e739:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%edi
		mov    %edx,0x4(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x8(%esp)
		mov    $0xffffffff,%esi
		xor    %ecx,%ecx
		jmp    jump_3e79b
	jump_3e754:
		movswl %cx,%eax
		mov    0x42(%esp),%ebx
		mov    data_f0648(,%eax,4),%eax
		sar    $0x10,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3e771:
		lea    0x10(%esp),%edx
		lea    0x20(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e79a
		mov    0xe(%esp),%edx
		mov    0x1e(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_3e771
	jump_3e79a:
		inc    %ecx
	jump_3e79b:
		cmp    data_f0b9e,%cx
		jl     jump_3e754
		mov    0x44(%esp),%eax
		xor    %ebx,%ebx
		add    $0x3,%eax
		mov    %bx,0x24(%esp)
		mov    %ax,0x1c(%esp)
		jmp    jump_3e850
	jump_3e7be:
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		mov    0x1a(%esp),%ebx
		mov    data_f0648(,%eax,4),%eax
		sar    $0x10,%ebx
		movsbw (%eax),%cx
		movsbw 0x1(%eax),%si
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		xor    %eax,%eax
	jump_3e7ea:
		mov    %ax,0x18(%esp)
		lea    0x10(%esp),%edx
		lea    0x20(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e84b
		cmp    0x20(%esp),%cx
		je     jump_3e80f
		cmp    0x10(%esp),%si
		jne    jump_3e815
	jump_3e80f:
		addw   $0x10,0x18(%esp)
	jump_3e815:
		mov    0x10(%esp),%eax
		imul   data_ba844,%ax
		add    0x20(%esp),%eax
		cwtl
		mov    0x18(%esp),%ebx
		movsbw data_e65b0(%eax),%dx
		cmp    %bx,%dx
		jge    jump_3e841
		mov    0x18(%esp),%dl
		mov    %dl,data_e65b0(%eax)
	jump_3e841:
		call   func_1ad2e
		shl    $0x4,%eax
		jmp    jump_3e7ea
	jump_3e84b:
		incw   0x24(%esp)
	jump_3e850:
		mov    0x24(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_3e7be
		mov    0x44(%esp),%esi
		xor    %ecx,%ecx
		add    $0x3,%esi
		jmp    jump_3e919
	jump_3e86f:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		movswl %si,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3e888:
		lea    0x10(%esp),%edx
		lea    0x20(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e918
		xor    %eax,%eax
		mov    data_ba842,%edx
		mov    0x20(%esp),%ax
		sar    $0x10,%edx
		sub    $0x2,%eax
		sub    $0x4,%edx
		cmp    %edx,%eax
		jge    jump_3e888
		mov    0x10(%esp),%eax
		xor    %edx,%edx
		sub    $0x4,%eax
		mov    %ax,%dx
		mov    data_ba83e,%eax
		sar    $0x10,%eax
		sub    $0x8,%eax
		cmp    %eax,%edx
		jge    jump_3e888
		mov    0x10(%esp),%eax
		imul   data_ba844,%ax
		add    0x20(%esp),%eax
		movswl %ax,%edx
		lea    (%edx,%edx,1),%eax
		mov    data_e8f48(%eax),%bx
		mov    %bx,0x18(%esp)
		cmp    $0x320,%bx
		jae    jump_3e888
		movsbw data_e65b0(%edx),%dx
		add    $0x320,%edx
		add    %edx,%ebx
		mov    %bx,data_e8f48(%eax)
		jmp    jump_3e888
	jump_3e918:
		inc    %ecx
	jump_3e919:
		cmp    data_f0b9e,%cx
		jl     jump_3e86f
		mov    0x3e(%esp),%ebx
		xor    %edx,%edx
		movsbl (%edi),%eax
		mov    %edx,0x2c(%esp)
		sar    $0x10,%ebx
		movsbl 0x1(%edi),%edx
		call   func_1ac08
	jump_3e93f:
		lea    0x10(%esp),%edx
		lea    0x20(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e9cc
		mov    0xe(%esp),%edx
		mov    0x1e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    0x2c(%esp),%edx
		mov    %ax,0x18(%esp)
		cmp    %dx,%ax
		jle    jump_3e93f
		xor    %esi,%esi
		jmp    jump_3e999
	jump_3e97a:
		mov    0xe(%esp),%edx
		mov    0x1e(%esp),%eax
		movswl %si,%ebx
		mov    %edi,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		je     jump_3e99f
		inc    %esi
	jump_3e999:
		cmp    $0x2,%si
		jl     jump_3e97a
	jump_3e99f:
		cmp    $0x2,%si
		je     jump_3e93f
		mov    0x18(%esp),%eax
		mov    0x4(%esp),%edx
		mov    %eax,0x2c(%esp)
		mov    0x20(%esp),%eax
		mov    %ax,(%edx)
		mov    0x10(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x8(%esp),%eax
		mov    %si,(%eax)
		jmp    jump_3e93f
	jump_3e9cc:
		cmpw   $0x0,0x2c(%esp)
		jne    jump_3e9db
		xor    %edx,%edx
		jmp    jump_3ead3
	jump_3e9db:
		mov    %edi,%eax
		call   func_14032
		mov    %edi,%eax
		mov    $0x7fff,%esi
		call   func_143f3
		xor    %eax,%eax
		mov    %esi,0x14(%esp)
		mov    %ax,0x28(%esp)
		jmp    jump_3ea43
	jump_3e9fb:
		mov    0x26(%esp),%esi
		sar    $0x10,%esi
		shl    $0x2,%esi
		mov    data_f0648(%esi),%eax
		movsbl 0x1(%eax),%ecx
		movsbl (%eax),%eax
		mov    %eax,0xc(%esp)
		mov    0x4(%esp),%eax
		movswl 0x0(%ebp),%edx
		movswl (%eax),%eax
		mov    0xc(%esp),%ebx
		call   func_49b01
		cmp    0x14(%esp),%ax
		jge    jump_3ea3e
		mov    %eax,0x14(%esp)
		mov    data_f0648(%esi),%eax
		mov    %eax,(%esp)
	jump_3ea3e:
		incw   0x28(%esp)
	jump_3ea43:
		mov    0x28(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_3e9fb
		mov    (%esp),%ecx
		mov    (%esp),%ebx
		mov    0x4(%esp),%eax
		movswl 0x0(%ebp),%edx
		movsbl 0x1(%ecx),%ecx
		movsbl (%ebx),%ebx
		movswl (%eax),%eax
		call   func_14f52
		mov    %eax,%esi
		movswl %ax,%ebx
		mov    0x4(%esp),%eax
		mov    %edi,%ecx
		movswl (%eax),%eax
		movswl 0x0(%ebp),%edx
		call   func_165c2
		test   %ax,%ax
		jne    jump_3eac9
		mov    0x8(%esp),%eax
		testb  $0x1,(%eax)
		jne    jump_3eaae
		mov    (%esp),%eax
		mov    0x0(%ebp),%si
		movsbw 0x1(%eax),%ax
		cmp    %si,%ax
		jge    jump_3ead0
		mov    0x8(%esp),%eax
		movw   $0x2,(%eax)
		jmp    jump_3ead0
	jump_3eaae:
		mov    (%esp),%eax
		mov    0x4(%esp),%edx
		movsbw (%eax),%ax
		cmp    (%edx),%ax
		jle    jump_3ead0
		mov    0x8(%esp),%eax
		movw   $0x3,(%eax)
		jmp    jump_3ead0
	jump_3eac9:
		mov    0x8(%esp),%eax
		mov    %si,(%eax)
	jump_3ead0:
		mov    (%esp),%edx
	jump_3ead3:
		mov    %edx,%eax
		add    $0x30,%esp
		jmp    jump_3d3c5


/*----------------------------------------------------------------*/
func_3eadd:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x4(%esp)
		xor    %edx,%edx
		mov    $0x7fffffff,%ebx
		mov    %edx,0x8(%esp)
		mov    %ebx,0xc(%esp)
		mov    0x32(%esp),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x10,%ebx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3eb10:
		lea    0x1c(%esp),%edx
		lea    0x20(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e730
		mov    0x1a(%esp),%edx
		mov    0x1e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3eb10
		mov    0xb(%eax),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3eb10
		lea    0x10(%esp),%eax
		mov    0x1a(%esp),%ebx
		mov    0x1e(%esp),%edx
		lea    0x18(%esp),%ecx
		push   %eax
		lea    0x18(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3ca3c
		cwtl
		cmp    $0xffffffff,%eax
		jle    jump_3eb10
		mov    0xc(%esp),%ecx
		mov    0x48(%esi),%eax
		cmp    %ecx,%eax
		jge    jump_3eb10
		mov    %eax,0xc(%esp)
		mov    0x18(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    (%esp),%edx
		mov    0x14(%esp),%eax
		mov    %ax,(%edx)
		mov    0x4(%esp),%edx
		mov    0x10(%esp),%eax
		mov    %esi,0x8(%esp)
		mov    %ax,(%edx)
		jmp    jump_3eb10


/*----------------------------------------------------------------*/
func_3ebb4:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		mov    %ecx,(%esp)
		xor    %edx,%edx
		mov    0x3e(%esp),%ebx
		mov    %edx,0x8(%esp)
		sar    $0x10,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		mov    %edi,%eax
		call   func_174cf
		xor    %ah,%ah
		mov    $0x7ffe,%edx
		mov    %eax,0x10(%esp)
		mov    %edx,0x20(%esp)
		mov    %edx,0x2c(%esp)
	jump_3ebf8:
		lea    0x28(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3ed3b
		mov    0x26(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		mov    %eax,0xc(%esp)
		test   %eax,%eax
		je     jump_3ebf8
		mov    0xb(%eax),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3ebf8
		cmpw   $0x6,0x10(%esp)
		jge    jump_3ecd4
		lea    0x1c(%esp),%eax
		mov    0x26(%esp),%ebx
		mov    0x12(%esp),%edx
		lea    0x18(%esp),%ecx
		push   %eax
		lea    0x28(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3d3e5
		mov    0x2c(%esp),%ebx
		mov    %eax,%ecx
		cmp    %bx,%ax
		jg     jump_3ebf8
		jne    jump_3eca6
		mov    0x22(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %edi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		cmp    0x20(%esp),%ax
		jg     jump_3ebf8
		mov    %eax,0x20(%esp)
	jump_3eca6:
		mov    0x18(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x4(%esp),%edx
		mov    0x24(%esp),%eax
		mov    %ax,(%edx)
		mov    (%esp),%edx
		mov    0x1c(%esp),%eax
		mov    %ax,(%edx)
		mov    0xc(%esp),%eax
		mov    %ecx,0x2c(%esp)
		mov    %eax,0x8(%esp)
		jmp    jump_3ebf8
	jump_3ecd4:
		lea    0x1c(%esp),%eax
		mov    0x26(%esp),%ebx
		mov    0x12(%esp),%edx
		lea    0x18(%esp),%ecx
		push   %eax
		lea    0x28(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3ca3c
		test   %ax,%ax
		jle    jump_3ebf8
		mov    0x2c(%esp),%edx
		mov    0x46(%esi),%ax
		cmp    %dx,%ax
		jg     jump_3ebf8
		mov    %eax,0x2c(%esp)
		mov    0x18(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x4(%esp),%edx
		mov    0x24(%esp),%eax
		mov    %ax,(%edx)
		mov    (%esp),%edx
		mov    0x1c(%esp),%eax
		mov    %esi,0x8(%esp)
		mov    %ax,(%edx)
		jmp    jump_3ebf8
	jump_3ed3b:
		mov    0x2c(%esp),%eax
		mov    %ax,data_f1ba4
		mov    0x8(%esp),%eax
		add    $0x30,%esp
		jmp    jump_3f241


/*----------------------------------------------------------------*/
func_3ed51:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x4(%esp)
		xor    %edx,%edx
		mov    0x32(%esp),%ebx
		mov    %edx,0x8(%esp)
		mov    $0xffffffff,%edx
		sar    $0x10,%ebx
		mov    %edx,0x20(%esp)
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3ed84:
		lea    0x18(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3e730
		mov    0x16(%esp),%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3ed84
		mov    0xb(%eax),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3ed84
		lea    0xc(%esp),%eax
		mov    0x16(%esp),%ebx
		mov    0x1a(%esp),%edx
		lea    0x14(%esp),%ecx
		push   %eax
		lea    0x14(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_3ca3c
		cwtl
		cmp    $0xffffffff,%eax
		jle    jump_3ed84
		xor    %eax,%eax
		mov    0x20(%esp),%ebx
		mov    0x43(%esi),%al
		cmp    %bx,%ax
		jle    jump_3ed84
		mov    (%esp),%edx
		mov    %eax,0x20(%esp)
		mov    0x14(%esp),%eax
		mov    %ax,(%edx)
		mov    0x10(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x4(%esp),%edx
		mov    0xc(%esp),%eax
		mov    %esi,0x8(%esp)
		mov    %ax,(%edx)
		jmp    jump_3ed84


/*----------------------------------------------------------------*/
func_3ee2b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,0x10(%esp)
		mov    %ebx,0xc(%esp)
		mov    %ecx,0x8(%esp)
		movsbw (%eax),%ax
		mov    %ax,(%edx)
		mov    $0x7fffffff,%edx
		movsbw 0x1(%esi),%ax
		mov    %edx,(%esp)
		mov    %ax,(%ebx)
		mov    0x10(%esp),%eax
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movswl (%eax),%eax
		xor    %edi,%edi
		call   func_11ee4
		xor    %ebx,%ebx
		movw   $0xffff,(%ecx)
		mov    %ebx,0x4(%esp)
	jump_3ee75:
		mov    0xc(%esp),%edx
		mov    0x10(%esp),%eax
		movswl %di,%ebp
		mov    %esi,%ecx
		mov    %ebp,%ebx
		movswl (%edx),%edx
		movswl (%eax),%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_3eed5
		mov    0xc(%esp),%edx
		mov    0x10(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		movswl (%edx),%edx
		movswl (%eax),%eax
		call   func_1d124
		cmp    $0x1,%ax
		jne    jump_3eed5
		mov    data_f0648,%ebp
		mov    (%esp),%ecx
		mov    0x48(%ebp),%eax
		cmp    %ecx,%eax
		jge    jump_3eed5
		mov    %eax,(%esp)
		mov    0x8(%esp),%eax
		mov    %di,(%eax)
		mov    data_f0648,%eax
		mov    %eax,0x4(%esp)
	jump_3eed5:
		inc    %edi
		cmp    $0x4,%di
		jl     jump_3ee75
		mov    0xc(%esp),%edx
		mov    0x10(%esp),%eax
		mov    %esi,%ebx
		movswl (%edx),%edx
		movswl (%eax),%eax
		call   func_11e04
		mov    0x8(%esp),%eax
		movswl (%eax),%eax
		cmp    $0xffffffff,%eax
		jne    jump_3ef09
		mov    0x8(%esp),%edx
		movsbw 0x63(%esi),%ax
		mov    %ax,(%edx)
	jump_3ef09:
		mov    0x4(%esp),%eax
		jmp    jump_3e657


/*----------------------------------------------------------------*/
func_3ef12:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edi
		mov    %edx,0x4(%esp)
		mov    %ebx,(%esp)
		mov    %ecx,%ebp
		movw   $0xffff,0xc(%esp)
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		call   func_3e3bf
		test   %ax,%ax
		je     jump_3f0d7
		xor    %esi,%esi
		mov    $0xffffffff,%ecx
		jmp    jump_3ef8d
	jump_3ef48:
		movswl %si,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    $0x4,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3ef63:
		lea    0x8(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3ef8c
		mov    0x6(%esp),%edx
		mov    0x12(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_3ef63
	jump_3ef8c:
		inc    %esi
	jump_3ef8d:
		cmp    data_f0b9e,%si
		jl     jump_3ef48
		mov    0x2a(%esp),%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		sar    $0x10,%ebx
		call   func_1ac08
	jump_3efa9:
		lea    0x8(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f035
		mov    0x6(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		mov    0xc(%esp),%edx
		mov    %eax,0x18(%esp)
		cmp    %dx,%ax
		jle    jump_3efa9
		xor    %esi,%esi
		jmp    jump_3f002
	jump_3efe3:
		mov    0x6(%esp),%edx
		mov    0x12(%esp),%eax
		movswl %si,%ebx
		mov    %edi,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		cmp    $0x1,%ax
		je     jump_3f008
		inc    %esi
	jump_3f002:
		cmp    $0x2,%si
		jl     jump_3efe3
	jump_3f008:
		cmp    $0x2,%si
		je     jump_3efa9
		mov    0x18(%esp),%eax
		mov    0x4(%esp),%edx
		mov    %ax,0xc(%esp)
		mov    0x14(%esp),%eax
		mov    %ax,(%edx)
		mov    (%esp),%edx
		mov    0x8(%esp),%eax
		mov    %ax,(%edx)
		mov    %si,0x0(%ebp)
		jmp    jump_3efa9
	jump_3f035:
		mov    %edi,%eax
		call   func_14032
		mov    %edi,%eax
		call   func_143f3
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		je     jump_3f0d7
		mov    data_f0648,%esi
		mov    (%esp),%edx
		mov    0x4(%esp),%eax
		movsbl 0x1(%esi),%ecx
		movsbl (%esi),%ebx
		movswl (%edx),%edx
		movswl (%eax),%eax
		call   func_14f52
		mov    (%esp),%edx
		mov    %ax,0x10(%esp)
		mov    %edi,%ecx
		mov    0xe(%esp),%ebx
		mov    0x4(%esp),%eax
		movswl (%edx),%edx
		sar    $0x10,%ebx
		movswl (%eax),%eax
		call   func_165c2
		cmp    $0x1,%ax
		jne    jump_3f0a2
		mov    0x10(%esp),%eax
		mov    %ax,0x0(%ebp)
		jmp    jump_3f0d0
	jump_3f0a2:
		testb  $0x1,0x0(%ebp)
		jne    jump_3f0bd
		mov    (%esp),%edx
		movsbw 0x1(%esi),%ax
		cmp    (%edx),%ax
		jge    jump_3f0d0
		movw   $0x2,0x0(%ebp)
		jmp    jump_3f0d0
	jump_3f0bd:
		mov    0x4(%esp),%edx
		movsbw (%esi),%ax
		cmp    (%edx),%ax
		jle    jump_3f0d0
		movw   $0x3,0x0(%ebp)
	jump_3f0d0:
		mov    $0x1,%eax
		jmp    jump_3f0dc
	jump_3f0d7:
		mov    $0xffffffff,%eax
	jump_3f0dc:
		add    $0x1c,%esp
		jmp    jump_3f241


/*----------------------------------------------------------------*/
func_3f0e4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %ebx,%esi
		call   func_169d7
		movswl %dx,%ebx
		movsbl (%edi),%eax
		movsbl 0x1(%edi),%edx
		call   func_1ac08
		call   func_14307
		mov    %eax,%edx
		mov    %eax,%edi
		xor    %ebx,%ebx
		add    $0x2,%edx
		inc    %edi
		mov    %edx,0x8(%esp)
	jump_3f117:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f17d
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_3f15a
		mov    %edi,%eax
		sub    %ebx,%eax
		mov    -0x2(%esp),%edx
		movswl %ax,%ebx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
	jump_3f15a:
		call   func_1ad2e
		movswl %cx,%ebx
		movswl %si,%edx
		cwtl
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    jump_3f177
		mov    %ecx,%ebx
		call   func_1ad2e
		sub    %eax,%ebx
		jmp    jump_3f117
	jump_3f177:
		mov    0x8(%esp),%ebx
		jmp    jump_3f117
	jump_3f17d:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3f184:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		call   func_3e21b
		mov    %eax,%edx
		mov    %eax,%edi
		mov    %esi,%eax
		call   func_17531
		mov    %eax,%ebx
		mov    %ax,0xc(%esp)
		mov    %edx,%eax
		call   func_174cf
		test   %bx,%bx
		jl     jump_3f1e0
		mov    0x11(%edx),%dl
		and    $0xff,%edx
		shl    $0x3,%edx
		mov    %edx,(%esp)
		movswl %bx,%edx
		add    (%esp),%edx
		movsbw data_72982(%edx),%ax
		mov    %ax,0x8(%esp)
		movb   $0x64,data_72982(%edx)
		jmp    jump_3f1ef
	jump_3f1e0:
		mov    0x46(%edx),%ax
		mov    %ax,0x8(%esp)
		movw   $0xf830,0x46(%edx)
	jump_3f1ef:
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		mov    0x4(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_3ebb4
		mov    0xc(%esp),%edx
		mov    %eax,%ecx
		test   %dx,%dx
		jl     jump_3f22e
		xor    %eax,%eax
		mov    0x11(%edi),%al
		mov    %eax,%edx
		mov    0xa(%esp),%eax
		shl    $0x3,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    0x8(%esp),%dl
		mov    %dl,data_72982(%eax)
		jmp    jump_3f236
	jump_3f22e:
		mov    0x8(%esp),%eax
		mov    %ax,0x46(%edi)
	jump_3f236:
		cmp    %ecx,%edi
		je     jump_3f23c
		xor    %edi,%edi
	jump_3f23c:
		mov    %edi,%eax
	jump_3f23e:
		add    $0x10,%esp
	jump_3f241:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_3f247:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %eax
		mov    %edx,%edi
		mov    %ebx,%ebp
		cmpb   $0xff,0x6f(%eax)
		je     jump_3f26c
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x6f(%edx),%al
		mov    %ax,0x4(%esp)
		xor    %eax,%eax
		mov    0x70(%edx),%al
		jmp    jump_3f27f
	jump_3f26c:
		call   func_3e21b
		movsbw (%eax),%dx
		movsbw 0x1(%eax),%ax
		mov    %dx,0x4(%esp)
	jump_3f27f:
		mov    %ax,0x10(%esp)
		mov    $0x2,%ebx
		movswl %cx,%ecx
		mov    (%esp),%eax
		mov    %ecx,%edx
		mov    $0x7fff,%esi
		call   func_3f0e4
		mov    (%esp),%eax
		mov    (%esp),%edx
		mov    %ecx,%ebx
		movsbl (%eax),%eax
		movsbl 0x1(%edx),%edx
		call   func_1ac08
	jump_3f2af:
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f312
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_3f2af
		mov    0xe(%esp),%ecx
		mov    0x2(%esp),%ebx
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49b01
		cmp    %si,%ax
		jae    jump_3f2af
		mov    %eax,%esi
		mov    0xc(%esp),%eax
		mov    %ax,(%edi)
		mov    0x8(%esp),%eax
		mov    %ax,0x0(%ebp)
		jmp    jump_3f2af
	jump_3f312:
		cmp    $0x7fff,%si
		setne  %al
		xor    %ah,%ah
		jmp    jump_3e657


/*----------------------------------------------------------------*/
func_3f321:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x4,data_ba84e
		jge    jump_3f40f
		cmpb   $0x0,0x81(%ebx)
		je     jump_3f345
	jump_3f33c:
		mov    $0x1,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3f345:
		cmpb   $0x0,0x7f(%ebx)
		je     jump_3f354
	jump_3f34b:
		mov    $0x2,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3f354:
		cmpb   $0xff,0x82(%ebx)
		je     jump_3f366
		cmpl   $0x3e8,0x48(%ebx)
		jg     jump_3f33c
	jump_3f366:
		cmpb   $0xff,0x80(%ebx)
		jne    jump_3f34b
		mov    0x6d(%ebx),%al
		cmp    $0x4,%al
		jne    jump_3f37f
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3f37f:
		test   %al,%al
		je     jump_3f40f
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_3f40f
		cmpb   $0x0,0x5c(%ebx)
		jne    jump_3f40f
		cmpb   $0x0,0x2a(%ebx)
		jne    jump_3f3b0
		mov    $0xc,%eax
		call   func_499bd
		mov    %al,0x29(%ebx)
	jump_3f3b0:
		xor    %edx,%edx
		mov    0x2a(%ebx),%dl
		inc    %edx
		mov    $0x14,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,0x2a(%ebx)
		xor    %edx,%edx
		mov    0x29(%ebx),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x2a(%ebx),%dl
		movsbw data_74144(%edx,%eax,4),%ax
		mov    0x6d(%ebx),%dl
		cmp    $0x1,%dl
		jb     jump_3f40f
		jbe    jump_3f3f0
		cmp    $0x2,%dl
		je     jump_3f3fb
		jmp    jump_3f40f
	jump_3f3f0:
		cmp    $0xb,%ax
		jg     jump_3f40f
		jmp    jump_3f33c
	jump_3f3fb:
		cmp    $0x5,%ax
		jle    jump_3f33c
		cmp    $0xd,%ax
		jle    jump_3f34b
	jump_3f40f:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f415:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpw   $0x12c,0x61(%eax)
		jge    jump_3f49e
		cmpb   $0x4,0x6d(%eax)
		je     jump_3f45d
		xor    %ecx,%ecx
		mov    0x11(%ebx),%cl
		mov    %ecx,%eax
		cmpb   $0x1,data_73b59(%ecx,%eax,8)
		je     jump_3f459
		call   func_1a0e9
		cmp    $0x3c,%ax
		jle    jump_3f45d
		cmp    $0x1,%dx
		jne    jump_3f45d
		mov    $0x3c,%edx
		mov    %ebx,%eax
		call   func_3c993
	jump_3f459:
		orb    $0x2,0x13(%ebx)
	jump_3f45d:
		call   func_1a0e9
		cmp    $0x28,%ax
		jle    jump_3f478
		mov    $0x28,%edx
		mov    %ebx,%eax
		call   func_3c993
		orb    $0x1,0x13(%ebx)
	jump_3f478:
		call   func_1a0e9
		cmp    $0x14,%ax
		jle    jump_3f49e
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		call   func_1a0e9
		movswl %ax,%edx
		mov    %ebx,%eax
		call   func_4d3ba
	jump_3f49e:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f4a1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_3f511
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b1(%eax)
		jne    jump_3f4fb
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1093d
		mov    %al,%ah
		sub    $0x64,%ah
		and    $0xf,%ah
		cmp    $0x64,%al
		jle    jump_3f511
		cmp    $0x2,%ah
		je     jump_3f4eb
		cmp    $0x3,%ah
		jne    jump_3f511
	jump_3f4eb:
		mov    %ebx,%eax
		call   func_3b9e1
		cmp    $0x1,%ax
		jne    jump_3f511
		pop    %edx
		pop    %ebx
		ret
	jump_3f4fb:
		cmpb   $0x1,data_731b8(%eax)
		jne    jump_3f511
		mov    %ebx,%eax
		call   func_3c30a
		cmp    $0x1,%ax
		je     jump_3f513
	jump_3f511:
		xor    %eax,%eax
	jump_3f513:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f516:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		testb  $0x1c,0x13(%eax)
		jne    jump_3f5e1
		movswl %dx,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,data_f0b9e
		call   func_2cbfb
		movswl %ax,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		xor    %esi,%esi
		call   func_1ac08
	jump_3f54c:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f5a7
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_3f54c
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_3f54c
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		xor    %edx,%edx
		mov    data_71b6c(,%eax,8),%eax
		mov    0x56(%ebx),%dl
		sar    $0x11,%eax
		cmp    %eax,%edx
		jl     jump_3f54c
		inc    %esi
		jmp    jump_3f54c
	jump_3f5a7:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x4,%edx
		sbb    %edx,%eax
		sar    $0x4,%eax
		mov    %eax,%edx
		mov    $0x64,%eax
		call   func_499bd
		cwtl
		cmp    %edx,%eax
		jge    jump_3f5e1
		mov    $0x1,%eax
		jmp    jump_3e450
	jump_3f5e1:
		xor    %eax,%eax
		jmp    jump_3e450


/*----------------------------------------------------------------*/
func_3f5e8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		testb  $0x1c,0x13(%eax)
		jne    jump_3f6a1
		mov    $0x5,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1ac08
		xor    %esi,%esi
	jump_3f60e:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f67d
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_3f60e
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_3f60e
		mov    %ebx,%eax
		call   func_174cf
		xor    %ah,%ah
		cmp    $0x2,%ax
		je     jump_3f60e
		cmp    $0x5,%ax
		jge    jump_3f60e
		xor    %eax,%eax
		mov    0x11(%ebx),%al
		mov    data_71b6c(,%eax,8),%edx
		xor    %eax,%eax
		sar    $0x11,%edx
		mov    0x56(%ebx),%al
		cmp    %edx,%eax
		jl     jump_3f60e
		inc    %esi
		jmp    jump_3f60e
	jump_3f67d:
		imul   $0x3,%esi,%esi
		cmp    $0x64,%si
		jle    jump_3f68b
		mov    $0x32,%esi
	jump_3f68b:
		mov    $0x64,%eax
		call   func_499bd
		cmp    %si,%ax
		jge    jump_3f6a1
		mov    $0x1,%eax
		jmp    jump_3f6a3
	jump_3f6a1:
		xor    %eax,%eax
	jump_3f6a3:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_3f6ad:
		.long   func_3f6fc
		.long   func_3f6e7
		.long   func_3f701
		.long   func_3f6ee
		.long   func_3f6f5


/*----------------------------------------------------------------*/
func_3f6c1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		call   func_174cf
		movzbw %al,%di
		cmp    $0x4,%di
		ja     func_3f701
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *vtable_3f6ad(,%eax,4)


/*----------------------------------------------------------------*/
func_3f6e7:
/*----------------------------------------------------------------*/
		mov    $0x6,%edx
		jmp    func_3f701


/*----------------------------------------------------------------*/
func_3f6ee:
/*----------------------------------------------------------------*/
		mov    $0x7,%edx
		jmp    func_3f701


/*----------------------------------------------------------------*/
func_3f6f5:
/*----------------------------------------------------------------*/
		mov    $0x5,%edx
		jmp    func_3f701


/*----------------------------------------------------------------*/
func_3f6fc:
/*----------------------------------------------------------------*/
		mov    $0xa,%edx


/*----------------------------------------------------------------*/
func_3f701:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		mov    %esi,%eax
		mov    $0x1,%ecx
		call   func_2cbfb
		cwtl
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		push   %eax
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1a452
		cmp    $0x4,%di
		jge    jump_3f735
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1a552
	jump_3f735:
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_3f73e:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3f76d
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		cmp    $0x1,%ax
		jne    jump_3f73e
	jump_3f76d:
		cmpw   $0x0,data_f0b9e
		jle    jump_3f78d
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_3f78d
		mov    $0x1,%eax
		jmp    jump_3f78f
	jump_3f78d:
		xor    %eax,%eax
	jump_3f78f:
		add    $0x8,%esp
		jmp    jump_40886


/*----------------------------------------------------------------*/
func_3f797:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x13(%eax),%dl
		test   $0x60,%dl
		jne    jump_3f7ec
		test   $0x1c,%dl
		je     jump_3f7b2
	jump_3f7a8:
		mov    $0x1,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3f7b2:
		mov    %eax,%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%esi
		sar    $0x18,%ebx
		mov    %esi,%eax
		call   func_1d124
		test   %ax,%ax
		jle    jump_3f7ec
		call   func_1a0e9
		movswl %ax,%ebx
		mov    $0x64,%eax
		call   func_499bd
		movswl %ax,%edx
		lea    -0x96(%ebx),%eax
		cmp    %eax,%edx
		jl     jump_3f7a8
	jump_3f7ec:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f7f3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpb   $0x2,0xe(%eax)
		jg     jump_3f823
		mov    $0x64,%eax
		call   func_499bd
		movswl %ax,%edx
		mov    data_f0b9e,%eax
	jump_3f80d:
		mov    $0xaa,%ebx
		sar    $0x10,%eax
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jge    jump_3f837
		mov    $0x1,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_3f823:
		mov    $0x64,%eax
		call   func_499bd
		movswl %ax,%edx
		mov    data_f0ba0,%eax
		jmp    jump_3f80d
	jump_3f837:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f83c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    $0x5,%edx
		mov    $0x1,%ecx
		call   func_2cbfb
		cwtl
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		push   %eax
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1a452
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
	jump_3f873:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_3f6a3
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a25f
		cmp    $0x1,%ax
		jne    jump_3f873
		jmp    jump_3f6a3


/*----------------------------------------------------------------*/
func_3f8a7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x5,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
	jump_3f8c0:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f8ef
		mov    0x2(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		cmp    $0x1,%ax
		jne    jump_3f8c0
	jump_3f8ef:
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3f8f6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x1,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1ac08
		xor    %edx,%edx
		mov    %dx,data_f0b9e
	jump_3f918:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_3f943
		mov    -0x2(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_3f918
	jump_3f943:
		cmpw   $0x0,data_f0b9e
		je     jump_3f8ef
		mov    data_f0b9c,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		mov    %eax,%edx
		mov    $0x64,%eax
		call   func_499bd
		cwtl
		cmp    %edx,%eax
		jge    jump_3f98d
		mov    $0x1,%eax
		jmp    jump_3f8ef
	jump_3f98d:
		xor    %eax,%eax
		jmp    jump_3f8ef

vtable_3f995:
		.long   func_3fe94
		.long   func_3f9f0
		.long   func_3ffc7
		.long   func_3fb71
		.long   func_3fc97
		.long   func_3fda4


/*----------------------------------------------------------------*/
func_3f9ad:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    %esp,%edi
		mov    $data_3c96d,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1a0e9
		cmp    0x54(%ebp),%ax
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax
		call   func_174cf
		cmp    $0x5,%al
		ja     func_3ffc7
		and    $0xff,%eax
		jmp    *vtable_3f995(,%eax,4)


/*----------------------------------------------------------------*/
func_3f9f0:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x38(%ebp)
		je     func_3ffc7
		cmp    $0xff,%bx
		je     jump_3fa24
		movswl %bx,%ebx
		movw   $0x1,(%esp,%ebx,2)
		call   func_1a0e9
		cmp    data_753c4(,%ebx,2),%ax
		jge    jump_3fa6f
		test   %dx,%dx
		je     func_3ffc7
		jmp    jump_3fa6f
	jump_3fa24:
		test   %dx,%dx
		jne    jump_3fa53
		xor    %ebx,%ebx
		jmp    jump_3fa47
	jump_3fa2d:
		movswl %bx,%edx
		add    %edx,%edx
		call   func_1a0e9
		cmp    data_753c4(%edx),%ax
		jl     jump_3fa46
		movw   $0x1,(%esp,%edx,1)
	jump_3fa46:
		inc    %ebx
	jump_3fa47:
		xor    %eax,%eax
		mov    0x38(%ebp),%al
		cmp    %ax,%bx
		jge    jump_3fa6f
		jmp    jump_3fa2d
	jump_3fa53:
		mov    $0x1,%esi
		xor    %eax,%eax
		jmp    jump_3fa65
	jump_3fa5c:
		movswl %ax,%edx
		add    %esi,%eax
		mov    %si,(%esp,%edx,2)
	jump_3fa65:
		xor    %edx,%edx
		mov    0x38(%ebp),%dl
		cmp    %dx,%ax
		jl     jump_3fa5c
	jump_3fa6f:
		mov    %ebp,%eax
		call   func_3f5e8
		cmp    $0x1,%ax
		jne    jump_3fa8d
		cmp    0x4(%esp),%ax
		jne    jump_3fa8d
		mov    $0x2,%eax
		jmp    jump_3ffcc
	jump_3fa8d:
		movswl %cx,%edx
		mov    %ebp,%eax
		call   func_3f516
		cmp    $0x1,%ax
		jne    jump_3faa8
		cmp    0x2(%esp),%ax
		je     jump_3ffcc
	jump_3faa8:
		mov    %ebp,%eax
		call   func_3f797
		cmp    $0x1,%ax
		jne    jump_3fac6
		cmp    0x8(%esp),%ax
		jne    jump_3fac6
		mov    $0x4,%eax
		jmp    jump_3ffcc
	jump_3fac6:
		mov    %ebp,%eax
		call   func_3f7f3
		cmp    $0x1,%ax
		jne    jump_3fb22
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_3fb02
		mov    0xa(%esp),%esi
		cmp    $0x1,%si
		jne    jump_3fb02
		mov    %ebp,%eax
		call   func_3f83c
		cmp    %si,%ax
		jne    jump_3fb22
		mov    $0x5,%eax
		jmp    jump_3ffcc
	jump_3fb02:
		mov    0xc(%esp),%edi
		cmp    $0x1,%di
		jne    jump_3fb22
		mov    %ebp,%eax
		call   func_3f8a7
		cmp    %di,%ax
		jne    jump_3fb22
		mov    $0x6,%eax
		jmp    jump_3ffcc
	jump_3fb22:
		mov    %ebp,%eax
		call   func_3f6c1
		cmp    $0x1,%ax
		jne    jump_3fb41
		cmpw   $0x1,0x6(%esp)
		jne    jump_3fb41
		mov    $0x3,%eax
		jmp    jump_3ffcc
	jump_3fb41:
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     func_3ffc7
		cmpw   $0x1,(%esp)
		jne    func_3ffc7
		xor    %eax,%eax
		jmp    jump_3ffcc


/*----------------------------------------------------------------*/
func_3fb71:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x39(%ebp)
		je     func_3ffc7
		cmp    $0xff,%bx
		je     jump_3fba6
		movswl %bx,%ebx
		movw   $0x1,-0xe(%esp,%ebx,2)
		call   func_1a0e9
		cmp    data_753c4(,%ebx,2),%ax
		jge    jump_3fbf4
		test   %dx,%dx
		je     func_3ffc7
		jmp    jump_3fbf4
	jump_3fba6:
		test   %dx,%dx
		jne    jump_3fbd8
		mov    $0x1,%edi
		xor    %ebx,%ebx
		jmp    jump_3fbcc
	jump_3fbb4:
		movswl %bx,%edx
		add    %edx,%edx
		call   func_1a0e9
		cmp    data_753d2(%edx),%ax
		jl     jump_3fbcb
		mov    %di,(%esp,%edx,1)
	jump_3fbcb:
		inc    %ebx
	jump_3fbcc:
		xor    %eax,%eax
		mov    0x39(%ebp),%al
		cmp    %ax,%bx
		jge    jump_3fbf4
		jmp    jump_3fbb4
	jump_3fbd8:
		mov    $0x1,%edi
		xor    %eax,%eax
		jmp    jump_3fbea
	jump_3fbe1:
		movswl %ax,%edx
		add    %edi,%eax
		mov    %di,(%esp,%edx,2)
	jump_3fbea:
		xor    %edx,%edx
		mov    0x39(%ebp),%dl
		cmp    %dx,%ax
		jl     jump_3fbe1
	jump_3fbf4:
		movswl %cx,%edx
		mov    %ebp,%eax
		call   func_3f516
		cmp    $0x1,%ax
		jne    jump_3fc15
		cmpw   $0x1,(%esp)
		jne    jump_3fc15
		mov    $0x7,%eax
		jmp    jump_3ffcc
	jump_3fc15:
		mov    %ebp,%eax
		call   func_3f7f3
		cmp    $0x1,%ax
		jne    jump_3fc63
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_3fc43
		cmpw   $0x1,0x4(%esp)
		jne    jump_3fc43
		mov    $0x9,%eax
		jmp    jump_3ffcc
	jump_3fc43:
		mov    0x6(%esp),%ebx
		cmp    $0x1,%bx
		jne    jump_3fc63
		mov    %ebp,%eax
		call   func_3f83c
		cmp    %bx,%ax
		jne    jump_3fc63
		mov    $0xa,%eax
		jmp    jump_3ffcc
	jump_3fc63:
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     func_3ffc7
		cmpw   $0x1,0x2(%esp)
		jne    func_3ffc7
		mov    $0x8,%eax
		jmp    jump_3ffcc


/*----------------------------------------------------------------*/
func_3fc97:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x3a(%ebp)
		je     func_3ffc7
		cmp    $0xff,%bx
		je     jump_3fccc
		movswl %bx,%ebx
		movw   $0x1,-0x16(%esp,%ebx,2)
		call   func_1a0e9
		cmp    data_753c4(,%ebx,2),%ax
		jge    jump_3fd17
		test   %dx,%dx
		je     func_3ffc7
		jmp    jump_3fd17
	jump_3fccc:
		test   %dx,%dx
		jne    jump_3fcfb
		xor    %ebx,%ebx
		jmp    jump_3fcef
	jump_3fcd5:
		movswl %bx,%edx
		add    %edx,%edx
		call   func_1a0e9
		cmp    data_753da(%edx),%ax
		jl     jump_3fcee
		movw   $0x1,(%esp,%edx,1)
	jump_3fcee:
		inc    %ebx
	jump_3fcef:
		xor    %eax,%eax
		mov    0x3a(%ebp),%al
		cmp    %ax,%bx
		jge    jump_3fd17
		jmp    jump_3fcd5
	jump_3fcfb:
		mov    $0x1,%esi
		xor    %eax,%eax
		jmp    jump_3fd0d
	jump_3fd04:
		movswl %ax,%edx
		add    %esi,%eax
		mov    %si,(%esp,%edx,2)
	jump_3fd0d:
		xor    %edx,%edx
		mov    0x3a(%ebp),%dl
		cmp    %dx,%ax
		jl     jump_3fd04
	jump_3fd17:
		mov    %ebp,%eax
		call   func_3f797
		cmp    $0x1,%ax
		jne    jump_3fd35
		cmp    0x2(%esp),%ax
		jne    jump_3fd35
		mov    $0xc,%eax
		jmp    jump_3ffcc
	jump_3fd35:
		mov    %ebp,%eax
		call   func_3f8f6
		cmp    $0x1,%ax
		jne    jump_3fd53
		cmp    0x6(%esp),%ax
		jne    jump_3fd53
		mov    $0xe,%eax
		jmp    jump_3ffcc
	jump_3fd53:
		mov    %ebp,%eax
		call   func_3f6c1
		cmp    $0x1,%ax
		jne    jump_3fd71
		cmp    0x4(%esp),%ax
		jne    jump_3fd71
		mov    $0xd,%eax
		jmp    jump_3ffcc
	jump_3fd71:
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     func_3ffc7
		cmpw   $0x1,(%esp)
		jne    func_3ffc7
		mov    $0xb,%eax
		jmp    jump_3ffcc


/*----------------------------------------------------------------*/
func_3fda4:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x3b(%ebp)
		je     func_3ffc7
		cmp    $0xff,%bx
		je     jump_3fdd7
		movswl %bx,%ebp
		call   func_1a0e9
		cmp    data_753c4(,%ebp,2),%ax
		jge    jump_3fdd0
		test   %dx,%dx
		je     func_3ffc7
	jump_3fdd0:
		mov    %ebx,%eax
		jmp    jump_3ffcc
	jump_3fdd7:
		test   %dx,%dx
		jne    jump_3fe06
		xor    %ebx,%ebx
		jmp    jump_3fdfa
	jump_3fde0:
		movswl %bx,%edx
		add    %edx,%edx
		call   func_1a0e9
		cmp    data_753e2(%edx),%ax
		jl     jump_3fdf9
		movw   $0x1,(%esp,%edx,1)
	jump_3fdf9:
		inc    %ebx
	jump_3fdfa:
		xor    %eax,%eax
		mov    0x3b(%ebp),%al
		cmp    %ax,%bx
		jge    jump_3fe22
		jmp    jump_3fde0
	jump_3fe06:
		mov    $0x1,%esi
		xor    %eax,%eax
		jmp    jump_3fe18
	jump_3fe0f:
		movswl %ax,%edx
		add    %esi,%eax
		mov    %si,(%esp,%edx,2)
	jump_3fe18:
		xor    %edx,%edx
		mov    0x3b(%ebp),%dl
		cmp    %dx,%ax
		jl     jump_3fe0f
	jump_3fe22:
		mov    %ebp,%eax
		call   func_3f7f3
		cmp    $0x1,%ax
		jne    jump_3fe40
		cmp    0x4(%esp),%ax
		jne    jump_3fe40
		mov    $0x11,%eax
		jmp    jump_3ffcc
	jump_3fe40:
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     func_3ffc7
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_3fe7e
		cmpw   $0x1,(%esp)
		jne    jump_3fe7e
		mov    $0xf,%eax
		jmp    jump_3ffcc
	jump_3fe7e:
		cmpw   $0x1,0x2(%esp)
		jne    func_3ffc7
		mov    $0x10,%eax
		jmp    jump_3ffcc


/*----------------------------------------------------------------*/
func_3fe94:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x3c(%ebp)
		je     func_3ffc7
		cmp    $0xff,%bx
		je     jump_3fecf
		mov    $0x1,%edi
		movswl %bx,%eax
		movswl %bx,%ebx
		mov    %di,-0x26(%esp,%eax,2)
		call   func_1a0e9
		cmp    data_753c4(,%ebx,2),%ax
		jge    jump_3ff1d
		test   %dx,%dx
		je     func_3ffc7
		jmp    jump_3ff1d
	jump_3fecf:
		test   %dx,%dx
		jne    jump_3ff01
		mov    $0x1,%esi
		xor    %ebx,%ebx
		jmp    jump_3fef5
	jump_3fedd:
		movswl %bx,%edx
		add    %edx,%edx
		call   func_1a0e9
		cmp    data_753ea(%edx),%ax
		jl     jump_3fef4
		mov    %si,(%esp,%edx,1)
	jump_3fef4:
		inc    %ebx
	jump_3fef5:
		xor    %eax,%eax
		mov    0x3c(%ebp),%al
		cmp    %ax,%bx
		jge    jump_3ff1d
		jmp    jump_3fedd
	jump_3ff01:
		mov    $0x1,%ebx
		xor    %eax,%eax
		jmp    jump_3ff13
	jump_3ff0a:
		movswl %ax,%edx
		add    %ebx,%eax
		mov    %bx,(%esp,%edx,2)
	jump_3ff13:
		xor    %edx,%edx
		mov    0x3c(%ebp),%dl
		cmp    %dx,%ax
		jl     jump_3ff0a
	jump_3ff1d:
		mov    %ebp,%eax
		call   func_3f797
		cmp    $0x1,%ax
		jne    jump_3ff3b
		cmp    0x2(%esp),%ax
		jne    jump_3ff3b
		mov    $0x14,%eax
		jmp    jump_3ffcc
	jump_3ff3b:
		mov    %ebp,%eax
		call   func_3f7f3
		cmp    $0x1,%ax
		jne    jump_3ff84
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     jump_3ff84
		mov    $0x2,%eax
		call   func_499bd
		mov    %eax,%edx
		add    $0x4,%edx
		movswl %dx,%eax
		cmpw   $0x1,(%esp,%eax,2)
		jne    jump_3ff84
		mov    %edx,%eax
		add    $0x13,%eax
		jmp    jump_3ffcc
	jump_3ff84:
		mov    %ebp,%eax
		call   func_3f6c1
		cmp    $0x1,%ax
		jne    jump_3ff9f
		cmp    0x4(%esp),%ax
		jne    jump_3ff9f
		mov    $0x15,%eax
		jmp    jump_3ffcc
	jump_3ff9f:
		mov    %ebp,%ecx
		mov    0x60(%ebp),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     func_3ffc7
		cmpw   $0x1,(%esp)
		jne    func_3ffc7
		mov    $0x13,%eax
		jmp    jump_3ffcc


/*----------------------------------------------------------------*/
func_3ffc7:
/*----------------------------------------------------------------*/
		mov    $0xffffffff,%eax
	jump_3ffcc:
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3ffd4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		cmpl   $0xc8,0x48(%eax)
		jge    jump_3fff8
		cmpw   $0x32,0x54(%eax)
		jge    jump_3fff8
		mov    $0xffffffff,%eax
		jmp    jump_40162
	jump_3fff8:
		mov    %ecx,%eax
		call   func_2ca40
		mov    0x81(%ecx),%dl
		mov    %eax,%esi
		test   %dl,%dl
		je     jump_40012
		xor    %eax,%eax
		mov    %dl,%al
		dec    %eax
		jmp    jump_40062
	jump_40012:
		mov    0x82(%ecx),%dh
		cmp    $0xff,%dh
		je     jump_40053
		xor    %ebx,%ebx
		mov    %dh,%bl
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_3f9ad
		mov    %ax,(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_40066
		mov    0x6c(%ecx),%bl
		cmp    $0x1,%bl
		je     jump_40042
		cmp    $0x2,%bl
		jne    jump_40066
	jump_40042:
		mov    $0xff,%ebx
		movswl %si,%edx
		mov    %ecx,%eax
		call   func_3f9ad
		jmp    jump_40062
	jump_40053:
		mov    $0xff,%ebx
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_3f9ad
	jump_40062:
		mov    %ax,(%esp)
	jump_40066:
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		mov    $0xffffffff,%edx
		cmp    $0xffffffff,%ebx
		je     jump_40114
		mov    0x55(%ecx),%edi
		call   func_1a0e9
		sar    $0x10,%edi
		cwtl
		add    %eax,%edi
		mov    data_753c2(,%ebx,2),%eax
		sar    $0x10,%eax
		cmp    %eax,%edi
		jge    jump_400dc
		call   func_1a0e9
		cmp    0x54(%ecx),%ax
		jne    jump_40114
		mov    0x57(%ecx),%di
		cmp    $0x1f4,%di
		jge    jump_400b8
		mov    %edi,%eax
		add    $0x14,%eax
		mov    %ax,0x57(%ecx)
	jump_400b8:
		mov    (%esp),%al
		inc    %al
		mov    %al,0x81(%ecx)
		call   func_1a0e9
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_3c993
		mov    $0x2,%eax
		jmp    jump_40162
	jump_400dc:
		mov    $0x1,%eax
		call   func_2ca39
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1124a
		movswl %si,%edx
		mov    %ecx,%eax
		call   *data_f1474(,%ebx,4)
		mov    %eax,%edx
		xor    %eax,%eax
		call   func_2ca39
		movw   $0x0,0x57(%ecx)
		movb   $0x0,0x81(%ecx)
	jump_40114:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     jump_40160
		movw   $0x0,0x57(%ecx)
		mov    -0x2(%esp),%eax
		movb   $0x0,0x81(%ecx)
		sar    $0x10,%eax
		mov    0x57(%ecx),%si
		mov    data_753c4(,%eax,2),%ax
		sub    %esi,%eax
		test   %ax,%ax
		jle    jump_40149
		cwtl
		call   func_1a0c6
	jump_40149:
		mov    -0x2(%esp),%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		sar    $0x10,%edx
		call   func_301bb
		mov    $0x1,%eax
		jmp    jump_40162
	jump_40160:
		xor    %eax,%eax
	jump_40162:
		add    $0x4,%esp
		jmp    jump_40886


/*----------------------------------------------------------------*/
func_4016a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		call   func_3f321
		mov    %eax,%edi
		cmp    $0x1,%ax
		jb     jump_40192
		jbe    jump_4019c
		cmp    $0x2,%ax
		je     jump_40242
		jmp    jump_40271
	jump_40192:
		test   %ax,%ax
		je     jump_401c0
		jmp    jump_40271
	jump_4019c:
		mov    %esi,%eax
		call   func_3ffd4
		mov    %eax,(%esp)
		cmp    $0x1,%ax
		je     jump_40271
		cmp    $0x2,%ax
		jne    jump_401c0
		mov    $0xfffffffe,%edi
		jmp    jump_40271
	jump_401c0:
		mov    %esi,%ecx
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sar    $0x18,%ebx
		call   func_1d124
		test   %ax,%ax
		je     jump_4026c
		call   func_1a0e9
		cmp    $0x28,%ax
		jl     jump_4026c
		cmpb   $0x4,0x6d(%esi)
		je     jump_4026c
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    %esi,%eax
		call   func_3f4a1
		test   %ax,%ax
		jne    jump_40218
		mov    %esi,%eax
		call   func_1f738
		mov    %eax,(%esp)
	jump_40218:
		mov    (%esp),%edx
		test   %dx,%dx
		je     jump_4026c
		cmp    $0x2,%dx
		jne    jump_40234
		xor    %eax,%eax
		mov    $0xfffffffe,%edi
		call   func_1a0bf
		jmp    jump_40271
	jump_40234:
		mov    $0x28,%edx
		mov    %esi,%eax
		call   func_3c993
		jmp    jump_40271
	jump_40242:
		xor    %edx,%edx
		jmp    jump_40255
	jump_40246:
		mov    %esi,%eax
		call   func_432a0
		mov    %eax,%edi
		test   %ax,%ax
		jg     jump_4025b
		inc    %edx
	jump_40255:
		cmp    $0x9,%dx
		jl     jump_40246
	jump_4025b:
		cmp    $0x2,%di
		jne    jump_40266
		mov    $0xfffffffe,%edi
	jump_40266:
		cmp    $0x9,%dx
		jne    jump_40271
	jump_4026c:
		mov    $0xffffffff,%edi
	jump_40271:
		mov    %edi,%eax
		jmp    jump_40162

vtable_40279:
		.long   func_4048d
		.long   func_404aa
		.long   func_404c9
		.long   func_404e6
		.long   func_4052c
		.long   func_4054c
		.long   func_40571


/*----------------------------------------------------------------*/
func_40295:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    data_731b4(%edx),%al
		mov    %ax,0x8(%esp)
		cmp    $0x1,%ax
		jne    jump_402ca
		movw   $0x5,0x24(%esp)
		jmp    jump_402e0
	jump_402ca:
		cmp    $0x2,%ax
		jne    jump_402d9
		movw   $0x7,0x24(%esp)
		jmp    jump_402e0
	jump_402d9:
		xor    %ecx,%ecx
		mov    %cx,0x24(%esp)
	jump_402e0:
		mov    $0xa,%ebx
		mov    0x24(%esp),%eax
		mov    %bx,0x2c(%esp)
		add    $0x2,%eax
		mov    %ebx,0x20(%esp)
		mov    %ax,0x1c(%esp)
	jump_402fc:
		mov    %esi,%eax
		call   func_4016a
		mov    %ax,0x8(%esp)
		cwtl
		cmp    $0xfffffffe,%eax
		je     jump_40882
		cmp    $0xffffffff,%eax
		jne    jump_40323
		movswl %di,%eax
		cmp    $0xfffffffe,%eax
		je     jump_40876
	jump_40323:
		call   func_1a0e9
		mov    0x2a(%esp),%edx
		cwtl
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ax,0x18(%esp)
		mov    0x24(%esp),%eax
		mov    $0xffffffff,%edi
		test   %ax,%ax
		je     jump_40409
		call   func_1a0e9
		cmp    $0x28,%ax
		jle    jump_40409
		mov    0x18(%esp),%eax
		mov    0x22(%esp),%edx
		shl    $0x2,%eax
		mov    $0x1,%ebx
		cwtl
		sar    $0x10,%edx
		call   func_14300
		mov    %esi,%eax
		call   func_3f0e4
		mov    $0xffffffff,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_3e18b
		cmp    $0x1,%ax
		jne    jump_403bb
		mov    0x1a(%esp),%eax
		lea    0x28(%esp),%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3f184
	jump_403b6:
		mov    %eax,(%esp)
		jmp    jump_403e3
	jump_403bb:
		cmpb   $0x3,0x6c(%esi)
		jne    jump_403de
		mov    0x1a(%esp),%eax
		lea    0x28(%esp),%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3ebb4
		jmp    jump_403b6
	jump_403de:
		xor    %edx,%edx
		mov    %edx,(%esp)
	jump_403e3:
		cmpl   $0x0,(%esp)
		je     jump_40409
		mov    0x12(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		cmp    $0x2,%ax
		jl     jump_40409
		mov    $0x2,%edi
	jump_40409:
		mov    0x2a(%esp),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		add    $0x18,%edx
		cmp    %edx,%eax
		jle    jump_405e1
		mov    0x18(%esp),%eax
		shl    $0x2,%eax
		cwtl
		call   func_14300
		mov    %esi,%eax
		call   func_14032
		mov    %esi,%eax
		call   func_143f3
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		jle    jump_40470
		cmp    $0x2,%di
		jne    jump_40456
		mov    (%esp),%ebp
		jmp    jump_4051e
	jump_40456:
		lea    0x28(%esp),%ecx
		lea    0x14(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    %esi,%eax
		call   func_3e5ab
	jump_40469:
		mov    %eax,%ebp
		jmp    jump_4051e
	jump_40470:
		mov    0x6c(%esi),%al
		mov    $0xfffffffd,%edi
		cmp    $0x6,%al
		ja     jump_4051e
		and    $0xff,%eax
		jmp    *vtable_40279(,%eax,4)


/*----------------------------------------------------------------*/
func_4048d:
/*----------------------------------------------------------------*/
		mov    0x16(%esp),%eax
		lea    0x28(%esp),%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3e65e
		jmp    jump_40469


/*----------------------------------------------------------------*/
func_404aa:
/*----------------------------------------------------------------*/
		push   $0x2
		mov    0x1a(%esp),%eax
		lea    0x2c(%esp),%ecx
		sar    $0x10,%eax
		lea    0x18(%esp),%ebx
		push   %eax
		lea    0xc(%esp),%edx
		mov    %esi,%eax
		call   func_3e739
		jmp    jump_40469


/*----------------------------------------------------------------*/
func_404c9:
/*----------------------------------------------------------------*/
		mov    0x16(%esp),%eax
		lea    0x28(%esp),%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3eadd
		jmp    jump_40469


/*----------------------------------------------------------------*/
func_404e6:
/*----------------------------------------------------------------*/
		mov    0x16(%esp),%eax
		lea    0x8(%esp),%ecx
		sar    $0x10,%eax
		lea    0xc(%esp),%ebx
		push   %eax
		lea    0x14(%esp),%edx
		mov    %esi,%eax
		call   func_3ebb4
		mov    %eax,%ebp
		mov    0x10(%esp),%eax
		mov    %ax,0x4(%esp)
		mov    0xc(%esp),%eax
		mov    %ax,0x14(%esp)
		mov    0x8(%esp),%eax
		mov    %ax,0x28(%esp)
	jump_4051e:
		test   %ebp,%ebp
		jne    jump_40589
		mov    $0xffffffff,%edi
		jmp    jump_405c4


/*----------------------------------------------------------------*/
func_4052c:
/*----------------------------------------------------------------*/
		mov    0x16(%esp),%eax
		lea    0x28(%esp),%ecx
		sar    $0x10,%eax
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3ed51
		jmp    jump_40469


/*----------------------------------------------------------------*/
func_4054c:
/*----------------------------------------------------------------*/
		push   $0x3
		lea    0x2c(%esp),%ecx
		lea    0x18(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3ef12
		mov    %eax,%edi
		cmp    $0x1,%ax
		jne    jump_4056d
		mov    %esi,%ebp
		jmp    jump_4051e
	jump_4056d:
		xor    %ebp,%ebp
		jmp    jump_4051e


/*----------------------------------------------------------------*/
func_40571:
/*----------------------------------------------------------------*/
		lea    0x28(%esp),%ecx
		lea    0x14(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    %esi,%eax
		call   func_3ee2b
		jmp    jump_40469
	jump_40589:
		mov    0x4(%esp),%edx
		movsbw (%esi),%ax
		cmp    %dx,%ax
		jne    jump_405b9
		mov    0x14(%esp),%ebx
		movsbw 0x1(%esi),%ax
		cmp    %bx,%ax
		jne    jump_405b9
		mov    0x28(%esp),%ecx
		movsbw 0x63(%esi),%ax
		cmp    %cx,%ax
		jne    jump_405b9
		mov    $0xfffffffe,%edi
		jmp    jump_405c4
	jump_405b9:
		cmp    $0x2,%di
		je     jump_405c4
		mov    $0x1,%edi
	jump_405c4:
		cmp    $0x1,%di
		jne    jump_405e6
		mov    0x12(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		jmp    jump_405e6
	jump_405e1:
		mov    $0xfffffffd,%edi
	jump_405e6:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_4062d
		cmpw   $0x0,0x24(%esp)
		je     jump_4062d
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		jle    jump_4062d
		mov    0x22(%esp),%ecx
		lea    0x14(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
		call   func_3f247
		cmp    $0x1,%ax
		jne    jump_4062d
		mov    $0xffffffff,%edx
		mov    $0x2,%edi
		mov    %dx,0x28(%esp)
	jump_4062d:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_4076a
		mov    %esi,%eax
		call   func_3e18b
		mov    %ax,0x8(%esp)
		test   %ax,%ax
		jle    jump_40664
		lea    0xc(%esp),%eax
		lea    0x10(%esp),%ecx
		lea    0x14(%esp),%ebx
		push   %eax
		lea    0x8(%esp),%edx
		mov    %esi,%eax
		call   func_3e251
		jmp    jump_406b6
	jump_40664:
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_40876
		mov    0x6c(%esi),%dl
		cmp    $0x5,%dl
		je     jump_40876
		cmp    $0x6,%dl
		je     jump_40876
		lea    0x14(%esp),%ecx
		lea    0x4(%esp),%ebx
		mov    $0x1e,%edx
		mov    %esi,%eax
		call   func_3df3b
		mov    %eax,%edx
		mov    %eax,%ebp
		test   %eax,%eax
		je     jump_40876
		movsbw (%eax),%ax
		mov    %ax,0x10(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0xc(%esp)
	jump_406b6:
		mov    0x4(%esp),%ebx
		movsbw (%esi),%ax
		cmp    %bx,%ax
		jne    jump_406db
		mov    0x14(%esp),%ecx
		movsbw 0x1(%esi),%ax
		cmp    %cx,%ax
		jne    jump_406db
	jump_406d1:
		mov    $0xfffffffe,%edi
		jmp    jump_4076a
	jump_406db:
		mov    $0xd2,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_1419c
		mov    0x12(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1499c
		test   %ax,%ax
		jne    jump_4071e
		lea    0x14(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    %esi,%eax
		call   func_15342
		test   %ax,%ax
		je     jump_40876
	jump_4071e:
		mov    0x12(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		mov    0x18(%esp),%eax
		mov    0xa(%esp),%ebx
		mov    0xe(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   func_14fa4
		mov    %ax,0x28(%esp)
		call   func_13b37
		test   %ax,%ax
		jne    jump_406d1
		mov    $0x1,%edi
	jump_4076a:
		cmp    $0x1,%di
		jl     jump_40853
		cmp    $0x2,%di
		jne    jump_407bf
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    0x12(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_3bf00
		mov    $0x28,%edx
		mov    %esi,%eax
		call   func_3c993
		cmpw   $0x4,0x28(%esp)
		jae    jump_4084e
		mov    0x28(%esp),%al
		mov    %al,0x63(%esi)
		jmp    jump_4084e
	jump_407bf:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    0x26(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_1620a
		mov    %esi,%eax
		mov    %esi,%ebx
		call   func_12124
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		call   func_45559
		mov    0x18(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		shl    $0x2,%ebx
		call   func_13cbd
		sub    %eax,%ebx
		mov    %bx,0x8(%esp)
		mov    0x6(%esp),%eax
		sar    $0x12,%eax
		imul   $0xa,%eax,%eax
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_3c993
		mov    %esi,%eax
		call   func_167c9
		mov    %ax,0x2c(%esp)
		mov    %esi,%eax
		call   func_5401b
		test   %ax,%ax
		je     jump_40882
		mov    %esi,%eax
		call   func_17310
		test   %ax,%ax
		je     jump_40882
	jump_4084e:
		call   func_13f8a
	jump_40853:
		mov    0x20(%esp),%edx
		call   func_1a0e9
		cmp    %dx,%ax
		jl     jump_40876
		mov    %edx,%ebx
		add    $0x4,%ebx
		movswl %di,%eax
		mov    %ebx,0x20(%esp)
		cmp    $0xfffffffd,%eax
		jne    jump_402fc
	jump_40876:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_3f415
	jump_40882:
		add    $0x30,%esp
	jump_40885:
		pop    %ebp
	jump_40886:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4088c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		mov    %eax,%esi
		lea    0x8(%esp),%ebx
		mov    0x60(%eax),%ecx
		lea    0xc(%esp),%edx
		sar    $0x18,%ecx
		call   func_1a1de
		xor    %ah,%ah
		cmp    $0xb,%ax
		jne    jump_408b7
		mov    $0x9,%eax
		jmp    jump_408bc
	jump_408b7:
		mov    $0x7,%eax
	jump_408bc:
		lea    0x8(%esp),%edx
		cwtl
		mov    %esi,%ecx
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		lea    0x10(%esp),%eax
		call   func_1aac4
		test   %ax,%ax
		jle    jump_4092c
		push   $0x2
		mov    0xe(%esp),%eax
		xor    %edx,%edx
		mov    $0x2,%ecx
		mov    %dx,data_f0b9e
		sar    $0x10,%eax
		mov    0x60(%esi),%ebx
		mov    0xa(%esp),%edx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		call   func_1a452
	jump_40901:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_4092c
		mov    0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_40901
	jump_4092c:
		mov    0x8(%esp),%edx
		mov    0x63(%esi),%al
		inc    %edx
		cmp    $0x1,%al
		jb     jump_40947
		mov    0xc(%esp),%ebx
		dec    %ebx
		cmp    $0x1,%al
		jbe    jump_40952
		cmp    $0x2,%al
		je     jump_40959
		jmp    jump_4095e
	jump_40947:
		test   %al,%al
		jne    jump_4095e
	jump_4094b:
		mov    %dx,0x8(%esp)
		jmp    jump_4095e
	jump_40952:
		mov    %bx,0xc(%esp)
		jmp    jump_4094b
	jump_40959:
		mov    %bx,0xc(%esp)
	jump_4095e:
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x4(%esp),%ebx
		call   func_46e19
		mov    %esp,%edx
		mov    0x60(%esi),%ecx
		mov    %esi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    0x6(%esp),%ecx
		mov    0xa(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_46df1
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_409ad:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %bl,0x20(%esp)
		call   func_13f8a
		mov    $0x1,%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_409d1:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_409fd
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_409d1
	jump_409fd:
		movsbw (%ecx),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%ecx),%ax
		mov    %ax,0x4(%esp)
		mov    0x20(%esp),%ah
		mov    $0xffffffff,%edi
		cmp    $0x11,%ah
		jne    jump_40a42
		mov    $0x6,%ebx
		movsbw 0x63(%ecx),%ax
		lea    0x4(%esp),%edx
		mov    %ax,0x1c(%esp)
		mov    %ebx,0x18(%esp)
		mov    0x19(%esp),%ebx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		jmp    jump_40aa0
	jump_40a42:
		movl   $0x3,0x18(%esp)
		testb  $0x1,0x63(%ecx)
		jne    jump_40a68
		mov    (%ecx),%al
		cmp    (%esi),%al
		jge    jump_40a5f
		movw   $0x3,0x1c(%esp)
		jmp    jump_40a80
	jump_40a5f:
		movw   $0x1,0x1c(%esp)
		jmp    jump_40a80
	jump_40a68:
		mov    0x1(%ecx),%al
		cmp    0x1(%esi),%al
		jge    jump_40a79
		xor    %esi,%esi
		mov    %si,0x1c(%esp)
		jmp    jump_40a80
	jump_40a79:
		movw   $0x2,0x1c(%esp)
	jump_40a80:
		mov    0x19(%esp),%esi
		lea    0x4(%esp),%edx
		sar    $0x18,%esi
		lea    0x8(%esp),%eax
		mov    %esi,%ebx
		call   func_49abc
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		mov    %esi,%ebx
	jump_40aa0:
		call   func_49abc
		xor    %esi,%esi
		jmp    jump_40b8f
	jump_40aac:
		mov    0x19(%esp),%ebx
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cmp    $0x1,%ax
		jne    jump_40b8e
		mov    0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    0x6(%esp),%eax
		mov    %bx,data_f0b9e
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ebx
		call   func_1ac08
	jump_40afe:
		lea    0xc(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_40b29
		mov    0xa(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_40afe
	jump_40b29:
		cmp    data_f0b9e,%di
		jge    jump_40b8e
		mov    0x8(%esp),%eax
		mov    0x2(%esp),%edx
		mov    %ax,0x14(%esp)
		mov    0x4(%esp),%eax
		mov    $0x1,%ebx
		mov    %ax,0x10(%esp)
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_40b5c:
		lea    0xc(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_40b87
		mov    0xa(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_40b5c
	jump_40b87:
		mov    data_f0b9e,%di
	jump_40b8e:
		inc    %esi
	jump_40b8f:
		cmp    0x18(%esp),%si
		jl     jump_40aac
		mov    0xe(%esp),%esi
		mov    0x12(%esp),%edi
		sar    $0x10,%esi
		sar    $0x10,%edi
		mov    %esi,%edx
		mov    %edi,%eax
		mov    $0x1,%ebx
		call   func_46e19
		xor    %edx,%edx
		mov    %edi,%eax
		mov    %dx,data_f0b9e
		mov    %esi,%edx
		call   func_1ac08
	jump_40bc8:
		lea    0xc(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_40bf3
		mov    0xa(%esp),%edx
		mov    0xb(%ecx),%ebx
		mov    -0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_40bc8
	jump_40bf3:
		add    $0x24,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_40bfa:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %bl,0x8(%esp)
		call   func_3f321
		mov    %eax,%edi
		cmp    $0x1,%ax
		jb     jump_40c27
		jbe    jump_40c31
		cmp    $0x2,%ax
		je     jump_40da7
		jmp    jump_40dd6
	jump_40c27:
		test   %ax,%ax
		je     jump_40c52
		jmp    jump_40dd6
	jump_40c31:
		mov    %esi,%eax
		call   func_3ffd4
		cmp    $0x1,%ax
		je     jump_40dd6
		cmp    $0x2,%ax
		jne    jump_40c52
	jump_40c48:
		mov    $0xfffffffe,%edi
		jmp    jump_40dd6
	jump_40c52:
		test   %ebp,%ebp
		je     jump_40dd1
		call   func_1a0e9
		cmp    $0x28,%ax
		jl     jump_40dd1
		cmpb   $0x4,0x6d(%esi)
		je     jump_40dd1
		movsbl 0x1(%ebp),%ecx
		movsbl 0x0(%ebp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_46df1
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    0x8(%esp),%dl
		cmp    $0x5,%dl
		je     jump_40ca3
		cmp    $0xf,%dl
		je     jump_40ca3
		cmp    $0x13,%dl
		jne    jump_40cf8
	jump_40ca3:
		mov    0xb(%esi),%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x18,%ebx
		call   func_1a1f8
		cmpw   $0x0,data_f0b9e
		je     jump_40dd6
		mov    data_ba842,%edx
		movsbl 0x0(%ebp),%eax
		sar    $0x10,%edx
		cmp    %edx,%eax
		jg     jump_40dd6
		mov    data_ba83e,%ebx
		movsbl 0x1(%ebp),%edx
		sar    $0x10,%ebx
		cmp    %ebx,%edx
		jg     jump_40dd6
		call   func_46e19
		jmp    jump_40d66
	jump_40cf8:
		cmp    $0x10,%dl
		jne    jump_40d39
		mov    $0x3,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_40d0e:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_40d66
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0x2(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_40d0e
	jump_40d39:
		cmp    $0xb,%dl
		je     jump_40d43
		cmp    $0xc,%dl
		jne    jump_40d4c
	jump_40d43:
		mov    %esi,%eax
		call   func_4088c
		jmp    jump_40d66
	jump_40d4c:
		cmp    $0x11,%dl
		je     jump_40d56
		cmp    $0x12,%dl
		jne    jump_40d66
	jump_40d56:
		mov    0x5(%esp),%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		sar    $0x18,%ebx
		call   func_409ad
	jump_40d66:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1ddf0
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_40c48
		cmp    $0xfffffffe,%eax
		je     jump_40dd6
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
		mov    $0x28,%edx
		call   func_1ed45
		call   func_1e2b1
		mov    %esi,%eax
		call   func_3c993
		jmp    jump_40dd6
	jump_40da7:
		xor    %edx,%edx
		jmp    jump_40dba
	jump_40dab:
		mov    %esi,%eax
		call   func_432a0
		mov    %eax,%edi
		test   %ax,%ax
		jg     jump_40dc0
		inc    %edx
	jump_40dba:
		cmp    $0x9,%dx
		jl     jump_40dab
	jump_40dc0:
		cmp    $0x2,%di
		jne    jump_40dcb
		mov    $0xfffffffe,%edi
	jump_40dcb:
		cmp    $0x9,%dx
		jne    jump_40dd6
	jump_40dd1:
		mov    $0xffffffff,%edi
	jump_40dd6:
		mov    %edi,%eax
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_40de1:
		.long   func_410de
		.long   func_410de
		.long   func_41100
		.long   func_41122
		.long   func_41174
		.long   func_41100
		.long   func_4118b


/*----------------------------------------------------------------*/
func_40dfd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    data_731b4(%edx),%al
		mov    %ax,0x2c(%esp)
		cmp    $0x1,%ax
		jne    jump_40e32
		movw   $0x5,0x3c(%esp)
		jmp    jump_40e48
	jump_40e32:
		cmp    $0x2,%ax
		jne    jump_40e41
		movw   $0x7,0x3c(%esp)
		jmp    jump_40e48
	jump_40e41:
		xor    %ecx,%ecx
		mov    %cx,0x3c(%esp)
	jump_40e48:
		mov    %esi,%eax
		call   func_174cf
		xor    %ah,%ah
		mov    %ax,0x20(%esp)
		cmp    $0x5,%ax
		jne    jump_40e73
		mov    0x11(%esi),%ah
		cmp    $0x15,%ah
		je     jump_40e69
		cmp    $0x16,%ah
		jne    jump_40e9f
	jump_40e69:
		movl   $0x5,0x38(%esp)
		jmp    jump_40ea7
	jump_40e73:
		cmp    $0xb,%ax
		jne    jump_40e83
		movl   $0x9,0x38(%esp)
		jmp    jump_40ea7
	jump_40e83:
		cmp    $0xc,%ax
		jne    jump_40e93
		movl   $0x3,0x38(%esp)
		jmp    jump_40ea7
	jump_40e93:
		cmp    $0x12,%ax
		je     jump_40e69
		cmp    $0x13,%ax
		je     jump_40e69
	jump_40e9f:
		movl   $0x7,0x38(%esp)
	jump_40ea7:
		mov    $0xa,%ebx
		mov    0x3c(%esp),%eax
		mov    0x38(%esp),%edi
		mov    %bx,0x1c(%esp)
		add    %edi,%eax
		mov    %ebx,0x34(%esp)
		mov    %ax,0x24(%esp)
	jump_40ec4:
		call   func_1a0e9
		mov    0x1a(%esp),%edx
		cwtl
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0xffffffff,%edi
		mov    %eax,0x28(%esp)
		xor    %edx,%edx
		mov    0x3c(%esp),%eax
		mov    %edx,0x4(%esp)
		test   %ax,%ax
		je     jump_40fb9
		call   func_1a0e9
		cmp    $0x28,%ax
		jle    jump_40fb9
		mov    0x28(%esp),%eax
		mov    0x3a(%esp),%edx
		shl    $0x2,%eax
		mov    $0x2,%ebx
		cwtl
		sar    $0x10,%edx
		call   func_14300
		mov    %esi,%eax
		call   func_3f0e4
		mov    $0xffffffff,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_3e18b
		cmp    $0x1,%ax
		jne    jump_40f61
		mov    0x22(%esp),%eax
		lea    0xc(%esp),%ecx
		sar    $0x10,%eax
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3f184
	jump_40f5c:
		mov    %eax,(%esp)
		jmp    jump_40f89
	jump_40f61:
		cmpb   $0x3,0x6c(%esi)
		jne    jump_40f84
		mov    0x22(%esp),%eax
		lea    0xc(%esp),%ecx
		sar    $0x10,%eax
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3ebb4
		jmp    jump_40f5c
	jump_40f84:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)
	jump_40f89:
		cmpl   $0x0,(%esp)
		je     jump_40faf
		mov    0xe(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		cmp    $0x2,%ax
		jle    jump_40faf
		mov    $0x2,%edi
	jump_40faf:
		mov    data_f1ba4,%ax
		mov    %eax,0x14(%esp)
	jump_40fb9:
		call   func_1a0e9
		movswl %ax,%edx
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		add    $0x18,%eax
		cmp    %eax,%edx
		jle    jump_41219
		mov    0x28(%esp),%eax
		shl    $0x2,%eax
		cwtl
		call   func_14300
		mov    %esi,%eax
		call   func_14032
		mov    %esi,%eax
		call   func_143f3
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		jle    jump_4106b
		cmp    $0x2,%di
		jne    jump_41010
		mov    (%esp),%eax
		mov    %eax,0x4(%esp)
		jmp    jump_4121e
	jump_41010:
		lea    0xc(%esp),%ecx
		lea    0x10(%esp),%ebx
		lea    0x18(%esp),%edx
		mov    %esi,%eax
		call   func_3e5ab
		mov    %eax,%ebp
		test   %eax,%eax
		je     jump_4121e
		mov    0x18(%esp),%edx
		movsbw (%esi),%ax
		cmp    %dx,%ax
		jne    jump_41064
		mov    0x10(%esp),%ebx
		movsbw 0x1(%esi),%ax
		cmp    %bx,%ax
		jne    jump_41064
		mov    0xc(%esp),%ecx
		movsbw 0x63(%esi),%ax
		cmp    %cx,%ax
	jump_41054:
		jne    jump_41064
		mov    $0xfffffffe,%edi
	jump_4105b:
		mov    %ebp,0x4(%esp)
		jmp    jump_4121e
	jump_41064:
		mov    $0x1,%edi
		jmp    jump_4105b
	jump_4106b:
		mov    $0xffffffff,%edx
		mov    0x3c(%esp),%ebx
		mov    %dx,0x2c(%esp)
		test   %bx,%bx
		jne    jump_410ac
		mov    0x20(%esp),%ecx
		cmp    $0x5,%cx
		jne    jump_4108c
		push   $0x3
		jmp    jump_41094
	jump_4108c:
		cmp    $0xf,%cx
		jne    jump_410ac
		push   $0x1
	jump_41094:
		lea    0x10(%esp),%ecx
		lea    0x14(%esp),%ebx
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3ef12
		mov    %ax,0x2c(%esp)
	jump_410ac:
		mov    0x2c(%esp),%edx
		cmp    $0x1,%dx
		jne    jump_410bd
		mov    %edx,%edi
		jmp    jump_4121e
	jump_410bd:
		mov    0x6c(%esi),%al
		cmp    $0x6,%al
		ja     jump_411a0
		xor    %edx,%edx
		mov    0x38(%esp),%ebx
		mov    %al,%dl
		mov    0x28(%esp),%eax
		add    %ebx,%eax
		jmp    *vtable_40de1(,%edx,4)


/*----------------------------------------------------------------*/
func_410de:
/*----------------------------------------------------------------*/
		mov    0x28(%esp),%eax
		add    0x38(%esp),%eax
		lea    0xc(%esp),%ecx
		cwtl
		lea    0x18(%esp),%edx
		push   %eax
		lea    0x14(%esp),%ebx
		mov    %esi,%eax
		call   func_3e65e
		jmp    jump_4119e


/*----------------------------------------------------------------*/
func_41100:
/*----------------------------------------------------------------*/
		mov    0x28(%esp),%eax
		add    0x38(%esp),%eax
		lea    0xc(%esp),%ecx
		cwtl
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3eadd
		jmp    jump_4119e


/*----------------------------------------------------------------*/
func_41122:
/*----------------------------------------------------------------*/
		lea    0x2c(%esp),%ecx
		cwtl
		lea    0x30(%esp),%ebx
		push   %eax
		lea    0xc(%esp),%edx
		mov    %esi,%eax
		call   func_3ebb4
		mov    %eax,%ebp
		cmp    $0x2,%di
		jne    jump_41157
		mov    0x14(%esp),%eax
		cmp    data_f1ba4,%ax
		jge    jump_41157
		mov    (%esp),%eax
		xor    %ebp,%ebp
		mov    %eax,0x4(%esp)
		jmp    jump_411a0
	jump_41157:
		mov    0x8(%esp),%eax
		mov    %ax,0x18(%esp)
		mov    0x30(%esp),%eax
		mov    %ax,0x10(%esp)
		mov    0x2c(%esp),%eax
		mov    %ax,0xc(%esp)
		jmp    jump_411a0


/*----------------------------------------------------------------*/
func_41174:
/*----------------------------------------------------------------*/
		lea    0xc(%esp),%ecx
		cwtl
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3ed51
		jmp    jump_4119e


/*----------------------------------------------------------------*/
func_4118b:
/*----------------------------------------------------------------*/
		lea    0xc(%esp),%ecx
		lea    0x10(%esp),%ebx
		lea    0x18(%esp),%edx
		mov    %esi,%eax
		call   func_3ee2b
	jump_4119e:
		mov    %eax,%ebp
	jump_411a0:
		test   %ebp,%ebp
		je     jump_411d8
		mov    0x18(%esp),%ebx
		movsbw (%esi),%ax
		cmp    %bx,%ax
		jne    jump_41064
		mov    0x10(%esp),%ecx
		movsbw 0x1(%esi),%ax
		cmp    %cx,%ax
		jne    jump_41064
		mov    0xc(%esp),%edi
		movsbw 0x63(%esi),%ax
		cmp    %di,%ax
		jmp    jump_41054
	jump_411d8:
		cmpb   $0x5,0x6c(%esi)
		jae    jump_4121e
		cmpw   $0x5,0x20(%esp)
		jne    jump_4121e
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_4121e
		call   func_1a0e9
		cmp    0x54(%esi),%ax
		jne    jump_4150d
		mov    0x57(%esi),%ax
		cmp    $0x1f4,%ax
		jge    jump_4150d
		mov    %eax,%edx
		add    $0x14,%edx
		mov    %dx,0x57(%esi)
		jmp    jump_4150d
	jump_41219:
		mov    $0xfffffffd,%edi
	jump_4121e:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_41265
		cmpw   $0x0,0x3c(%esp)
		je     jump_41265
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		jle    jump_41265
		mov    0x3a(%esp),%ecx
		lea    0x10(%esp),%ebx
		lea    0x18(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
		call   func_3f247
		cmp    $0x1,%ax
		jne    jump_41265
		mov    $0xffffffff,%edx
		mov    $0x2,%edi
		mov    %dx,0xc(%esp)
	jump_41265:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_41399
		mov    %esi,%eax
		call   func_3e18b
		mov    %ax,0x2c(%esp)
		test   %ax,%ax
		jle    jump_4129c
		lea    0x30(%esp),%eax
		lea    0x8(%esp),%ecx
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x1c(%esp),%edx
		mov    %esi,%eax
		call   func_3e251
		jmp    jump_412e3
	jump_4129c:
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_41504
		cmpb   $0x6,0x6c(%esi)
		je     jump_41504
		lea    0x10(%esp),%ecx
		lea    0x18(%esp),%ebx
		mov    $0x1e,%edx
		mov    %esi,%eax
		call   func_3df3b
		mov    %eax,%edx
		mov    %eax,%ebp
		test   %eax,%eax
		je     jump_4150d
		movsbw (%eax),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0x30(%esp)
	jump_412e3:
		mov    0x18(%esp),%ebx
		movsbw (%esi),%ax
		cmp    %bx,%ax
		jne    jump_41308
		mov    0x10(%esp),%ecx
		movsbw 0x1(%esi),%ax
		cmp    %cx,%ax
		jne    jump_41308
	jump_412fe:
		mov    $0xfffffffe,%edi
		jmp    jump_413b4
	jump_41308:
		mov    $0xd2,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_1419c
		mov    0xe(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1499c
		test   %ax,%ax
		jne    jump_4134b
		lea    0x10(%esp),%ebx
		lea    0x18(%esp),%edx
		mov    %esi,%eax
		call   func_15342
		test   %ax,%ax
		je     jump_4150d
	jump_4134b:
		mov    0xe(%esp),%edx
		mov    0x16(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		mov    0x28(%esp),%eax
		mov    0x2e(%esp),%ebx
		mov    0x6(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   func_14fa4
		mov    %ax,0xc(%esp)
		call   func_13b37
		test   %ax,%ax
		jne    jump_412fe
		mov    $0x1,%edi
		jmp    jump_413b4
	jump_41399:
		cmp    $0x1,%di
		jne    jump_413b4
		mov    0xe(%esp),%edx
		mov    0x16(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
	jump_413b4:
		test   %di,%di
		jle    jump_414b7
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    0xe(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
		mov    %ax,0x2c(%esp)
		cmp    $0x3,%ax
		jl     jump_413f0
		cmp    0x3c(%esp),%ax
		jle    jump_413f6
	jump_413f0:
		cmp    $0x2,%di
		jne    jump_4142f
	jump_413f6:
		mov    0xe(%esp),%ebx
		mov    0x16(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_3bf00
		mov    $0x28,%edx
		mov    %esi,%eax
		call   func_3c993
		cmpw   $0x4,0xc(%esp)
		jae    jump_414b2
		mov    0xc(%esp),%al
		mov    %al,0x63(%esi)
		jmp    jump_414b2
	jump_4142f:
		mov    0xa(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_1620a
		mov    %esi,%eax
		mov    %esi,%ebx
		call   func_12124
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		call   func_45559
		mov    0x28(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		shl    $0x2,%ebx
		call   func_13cbd
		sub    %eax,%ebx
		mov    %bx,0x2c(%esp)
		mov    0x2a(%esp),%eax
		sar    $0x12,%eax
		imul   $0xa,%eax,%eax
		mov    0x1a(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_3c993
		mov    %esi,%eax
		call   func_167c9
		mov    %ax,0x1c(%esp)
		mov    %esi,%eax
		call   func_5401b
		test   %ax,%ax
		je     jump_4150d
		mov    %esi,%eax
		call   func_17310
		test   %ax,%ax
		je     jump_4150d
	jump_414b2:
		call   func_13f8a
	jump_414b7:
		mov    0x1d(%esp),%ebx
		mov    0x4(%esp),%edx
		mov    %esi,%eax
		sar    $0x18,%ebx
		call   func_40bfa
		mov    %ax,0x2c(%esp)
		cwtl
		cmp    $0xfffffffe,%eax
		je     jump_4150d
		cmp    $0xffffffff,%eax
		jne    jump_414e1
		movswl %di,%eax
		cmp    $0xfffffffe,%eax
		je     jump_41504
	jump_414e1:
		mov    0x34(%esp),%ecx
		call   func_1a0e9
		cmp    %cx,%ax
		jl     jump_41504
		movswl %di,%eax
		mov    %ecx,%edi
		add    $0x4,%edi
		mov    %edi,0x34(%esp)
		cmp    $0xfffffffd,%eax
		jne    jump_40ec4
	jump_41504:
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_3f415
	jump_4150d:
		add    $0x40,%esp
		jmp    jump_40885


/*----------------------------------------------------------------*/
func_41515:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%ebp
		mov    %esp,%edi
		mov    $data_3c97b,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpw   $0x12c,0x61(%eax)
		jl     jump_4153a
	jump_41533:
		xor    %eax,%eax
		jmp    jump_416f1
	jump_4153a:
		cmpb   $0x4,0x6e(%eax)
		je     jump_41533
		mov    0x4c(%ebp),%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    0x48(%ebp),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,0x18(%esp)
		xor    %eax,%eax
		mov    0x6e(%ebp),%al
		mov    0x18(%esp),%edx
		cmp    (%esp,%eax,4),%dx
		jg     jump_41533
		mov    $0xa,%esi
		xor    %edi,%edi
	jump_41575:
		xor    %eax,%eax
		mov    0x6e(%ebp),%al
		shl    $0x2,%eax
		mov    0x18(%esp),%edx
		cmp    0x2(%esp,%eax,1),%dx
		jle    jump_4168c
		cmp    (%esp,%eax,1),%dx
		jg     jump_41691
		call   func_1a0e9
		movswl %ax,%edx
		movswl %si,%eax
		mov    $0xa,%ebx
		sub    %eax,%edx
		mov    %eax,0x10(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		shl    $0x2,%eax
		cwtl
		call   func_14300
		mov    %ebp,%eax
		lea    0x1c(%esp),%ecx
		call   func_14032
		mov    %ebp,%eax
		lea    0x20(%esp),%ebx
		call   func_143f3
		push   $0x3
		lea    0x18(%esp),%edx
		mov    %ebp,%eax
		call   func_3ef12
		test   %ax,%ax
		jl     jump_4168c
		mov    0x1e(%esp),%edx
		mov    0x12(%esp),%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		mov    0x1a(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%edx
		call   func_1620a
		mov    %ebp,%eax
		mov    %ebp,%ebx
		call   func_12124
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		call   func_45559
		call   func_14307
		mov    %eax,%esi
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_13cbd
		sub    %eax,%esi
		movswl %si,%eax
		sar    $0x2,%eax
		imul   $0xa,%eax,%eax
		add    0x10(%esp),%eax
		movswl %ax,%edx
		mov    %ebp,%eax
		call   func_3c993
		mov    %ebp,%eax
		call   func_167c9
		mov    %eax,%esi
		call   func_13f8a
		mov    %ebp,%eax
		call   func_5401b
		test   %ax,%ax
		je     jump_416ec
		mov    %ebp,%eax
		call   func_17310
		test   %ax,%ax
		jne    jump_41691
		jmp    jump_416ec
	jump_4168c:
		mov    $0x1,%edi
	jump_41691:
		cmp    $0x1,%di
		jne    jump_416c0
		call   func_1a0e9
		cmp    $0x28,%ax
		jle    jump_416d6
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		call   func_1a0e9
		movswl %ax,%edx
		mov    %ebp,%eax
		call   func_4d3ba
		jmp    jump_416d6
	jump_416c0:
		call   func_1a0e9
		movswl %ax,%edx
		movswl %si,%eax
		add    $0x18,%eax
		cmp    %eax,%edx
		jg     jump_41575
	jump_416d6:
		movw   $0x0,0x57(%ebp)
		movb   $0x0,0x81(%ebp)
		mov    0x81(%ebp),%al
		mov    %al,0x7f(%ebp)
	jump_416ec:
		mov    $0x1,%eax
	jump_416f1:
		add    $0x24,%esp
		jmp    jump_40885

vtable_416f9:
		.long   func_417f5
		.long   func_417f5
		.long   func_41821
		.long   func_41827
		.long   func_41841
		.long   func_417f5
		.long   func_417f5


/*----------------------------------------------------------------*/
func_41715:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%ebp
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0x4(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0x8(%esp),%ebx
		sar    $0x18,%ecx
		mov    %ebp,%eax
		call   func_1a1de
		mov    0xb(%ebp),%eax
		mov    $0x1,%ebx
		sar    $0x18,%eax
		mov    %ebx,%edx
		call   func_1b7bf
		xor    %edx,%edx
		mov    $0x1,%ecx
		mov    %dx,data_f0b9e
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0x6(%esp),%edx
		mov    0x60(%ebp),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		cmpb   $0x4,0x6c(%ebp)
		jne    jump_41796
		mov    $0xffffffff,%ecx
		jmp    jump_4179b
	jump_41796:
		mov    $0x7fff,%ecx
	jump_4179b:
		xor    %ebx,%ebx
		mov    %bx,0xc(%esp)
		jmp    jump_41850
	jump_417a7:
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    data_f0648(,%edx,4),%edx
		testb  $0x80,0x15(%edx)
		jne    jump_4184b
		cmpb   $0x7,0x5c(%edx)
		jae    jump_4184b
		movsbw (%edx),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,0x8(%esp)
		mov    0x6c(%ebp),%al
		cmp    $0x6,%al
		ja     jump_4184b
		mov    %eax,%ebx
		and    $0xff,%ebx
		shl    $0x2,%ebx
		jmp    *vtable_416f9(%ebx)


/*----------------------------------------------------------------*/
func_417f5:
/*----------------------------------------------------------------*/
		mov    0x6(%esp),%ebx
		mov    0x2(%esp),%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_49adf
	jump_4180a:
		cmp    %cx,%ax
		jge    jump_4184b
	jump_4180f:
		mov    %eax,%ecx
		mov    0x4(%esp),%eax
		mov    %ax,(%edi)
		mov    0x8(%esp),%eax
		mov    %ax,(%esi)
		jmp    jump_4184b


/*----------------------------------------------------------------*/
func_41821:
/*----------------------------------------------------------------*/
		mov    0x48(%edx),%ax
		jmp    jump_4180a


/*----------------------------------------------------------------*/
func_41827:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x59(%edx),%al
		cmp    %cx,%ax
		jge    func_41841
		mov    %eax,%ecx
		mov    0x4(%esp),%eax
		mov    %ax,(%edi)
		mov    0x8(%esp),%eax
		mov    %ax,(%esi)


/*----------------------------------------------------------------*/
func_41841:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%edx),%al
		cmp    %cx,%ax
		jg     jump_4180f
	jump_4184b:
		incw   0xc(%esp)
	jump_41850:
		mov    0xc(%esp),%eax
		cmp    data_f0b9e,%ax
		jl     jump_417a7
		xor    %ebx,%ebx
		movswl %cx,%eax
		mov    %bx,data_f0b9e
		cmp    $0xffffffff,%eax
		je     jump_41879
		cmp    $0x7fff,%cx
		jne    jump_4187d
	jump_41879:
		xor    %eax,%eax
		jmp    jump_41895
	jump_4187d:
		mov    %ebp,%eax
		movswl (%esi),%ebx
		movswl (%edi),%edx
		call   func_49adf
		cmp    $0x10,%ax
		ja     jump_41879
	jump_41890:
		mov    $0x1,%eax
	jump_41895:
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4189c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ebx,%esi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0xc(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0x4(%esp),%ebx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_1a1de
		mov    $0x1,%ebx
		mov    0xb(%esi),%eax
		xor    %edx,%edx
		sar    $0x18,%eax
		call   func_1b7bf
		xor    %edx,%edx
		mov    $0x1,%ecx
		mov    %dx,data_f0b9e
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0x2(%esp),%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    data_f0b9e,%dx
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    %ebx,0x8(%esp)
		inc    %edx
		mov    %esi,data_f0648(,%eax,4)
		mov    %dx,data_f0b9e
		jmp    jump_4197d
	jump_41931:
		movswl %bx,%edx
		mov    data_f0648(,%edx,4),%edx
		testb  $0x80,0x15(%edx)
		jne    jump_4197c
		cmpb   $0x7,0x5c(%edx)
		jae    jump_4197c
		mov    %edx,%eax
		call   func_174cf
		xor    %ah,%ah
		cmp    $0x2,%ax
		je     jump_4197c
		cmp    $0x6,%ax
		jge    jump_4197c
		testb  $0x7,0x15(%edx)
		jne    jump_4197c
		movsbw (%edx),%ax
		mov    %ax,0x0(%ebp)
		movsbw 0x1(%edx),%ax
		mov    %ax,(%edi)
		movl   $0x1,0x8(%esp)
		jmp    jump_41986
	jump_4197c:
		inc    %ebx
	jump_4197d:
		cmp    data_f0b9e,%bx
		jl     jump_41931
	jump_41986:
		mov    0x8(%esp),%edx
		cmp    $0x1,%dx
		jne    jump_419c3
		mov    %dx,data_f0b9e
		movswl (%edi),%edx
		movswl 0x0(%ebp),%eax
		call   func_11db2
		mov    %eax,data_f0648
		mov    %esi,%eax
		movswl (%edi),%ebx
		movswl 0x0(%ebp),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_419cc
		xor    %eax,%eax
		jmp    jump_41895
	jump_419c3:
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
	jump_419cc:
		mov    0x8(%esp),%eax
		jmp    jump_41895

vtable_419d5:
		.long   func_41ae1
		.long   func_41ae1
		.long   func_41ae4
		.long   func_41b61
		.long   func_41b71
		.long   func_41ae1
		.long   func_41ae1


/*----------------------------------------------------------------*/
func_419f1:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ebx,%esi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0x14(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0x10(%esp),%ebx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_1a1de
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0xe(%esp),%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		mov    %eax,(%esp)
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    (%esp),%ebx
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0x1,%ecx
		push   %ebx
		sar    $0x10,%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1af22
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
	jump_41a90:
		lea    0x10(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_41b9c
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_41a90
		call   func_1a31d
		mov    0x26(%esp),%ebx
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_1ac08
		jmp    jump_41afb


/*----------------------------------------------------------------*/
func_41ae1:
/*----------------------------------------------------------------*/
		inc    %ecx
		jmp    jump_41afb


/*----------------------------------------------------------------*/
func_41ae4:
/*----------------------------------------------------------------*/
		mov    0x4c(%ebx),%edx
		sub    0x48(%ebx),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%ecx
	jump_41af9:
		add    %eax,%ecx
	jump_41afb:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_41b78
		mov    0x2(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		testb  $0x80,0x15(%eax)
		jne    jump_41afb
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_41afb
		test   %ebx,%ebx
		je     jump_41afb
		mov    0xb(%ebx),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_41afb
		mov    0x6c(%esi),%al
		cmp    $0x6,%al
		ja     jump_41afb
		and    $0xff,%eax
		jmp    *vtable_419d5(,%eax,4)


/*----------------------------------------------------------------*/
func_41b61:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    $0x78,%edx
		mov    0x59(%ebx),%al
		sub    %eax,%edx
		add    %edx,%ecx
		jmp    jump_41afb


/*----------------------------------------------------------------*/
func_41b71:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%ebx),%al
		jmp    jump_41af9
	jump_41b78:
		cmp    0xc(%esp),%cx
		jle    jump_41b92
		mov    0x14(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x10(%esp),%eax
		mov    %ecx,0xc(%esp)
		mov    %ax,(%edi)
	jump_41b92:
		call   func_1a3ae
		jmp    jump_41a90
	jump_41b9c:
		mov    %esi,%eax
		movswl (%edi),%ebx
		movswl 0x0(%ebp),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_41bbc
		cmpw   $0x0,0xc(%esp)
		jle    jump_41bbc
		xor    %ecx,%ecx
		jmp    jump_41bc0
	jump_41bbc:
		mov    0xc(%esp),%ecx
	jump_41bc0:
		mov    %ecx,%eax
		jmp    jump_3e3b7

vtable_41bc9:
		.long   func_41c9e
		.long   func_41cad
		.long   func_41cbc
		.long   func_41ccb

vtable_41bd9:
		.long   func_41d39
		.long   func_41d39
		.long   func_41d3c
		.long   func_41db9
		.long   func_41dc9
		.long   func_41d39
		.long   func_41d39


/*----------------------------------------------------------------*/
func_41bf5:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		mov    %ebx,%edi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0x14(%esp),%edx
		mov    %eax,%esi
		mov    0x60(%ebx),%ecx
		lea    0x1c(%esp),%ebx
		sar    $0x18,%ecx
		mov    %edi,%eax
		call   func_1a1de
		movswl %si,%esi
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    0x1a(%esp),%edx
		mov    0x12(%esp),%eax
		mov    0x60(%edi),%ebx
		push   %esi
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    0x1a(%esp),%edx
		mov    0x12(%esp),%eax
		mov    $0x1,%ecx
		mov    0x60(%edi),%ebx
		push   %esi
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1af22
		lea    0x1c(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		xor    %edx,%edx
		mov    0x63(%edi),%al
		mov    %edx,0x4(%esp)
		cmp    $0x3,%al
		ja     jump_41cd8
		and    $0xff,%eax
		jmp    *vtable_41bc9(,%eax,4)


/*----------------------------------------------------------------*/
func_41c9e:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ecx
		mov    %edx,0x10(%esp)
		mov    %ecx,0x8(%esp)
		jmp    jump_41cd8


/*----------------------------------------------------------------*/
func_41cad:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%ebx
		mov    %edx,0x8(%esp)
		mov    %ebx,0x10(%esp)
		jmp    jump_41cd8


/*----------------------------------------------------------------*/
func_41cbc:
/*----------------------------------------------------------------*/
		mov    $0x4,%esi
		mov    %edx,0x10(%esp)
		mov    %esi,0x8(%esp)
		jmp    jump_41cd8


/*----------------------------------------------------------------*/
func_41ccb:
/*----------------------------------------------------------------*/
		mov    $0x4,%ecx
		mov    %edx,0x8(%esp)
		mov    %ecx,0x10(%esp)
	jump_41cd8:
		lea    0x1c(%esp),%edx
		lea    0x14(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_41df7
		mov    0x1a(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_41cd8
		call   func_1a31d
		push   $0x3
		mov    0x20(%esp),%eax
		mov    0x14(%esp),%edx
		mov    0xc(%esp),%ecx
		add    %edx,%eax
		mov    0x60(%edi),%ebx
		movswl %ax,%edx
		mov    0x18(%esp),%eax
		sar    $0x18,%ebx
		add    %ecx,%eax
		mov    $0x9,%ecx
		cwtl
		xor    %esi,%esi
		call   func_1a452
		jmp    jump_41d53


/*----------------------------------------------------------------*/
func_41d39:
/*----------------------------------------------------------------*/
		inc    %esi
		jmp    jump_41d53


/*----------------------------------------------------------------*/
func_41d3c:
/*----------------------------------------------------------------*/
		mov    0x4c(%ebx),%edx
		sub    0x48(%ebx),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%esi
	jump_41d51:
		add    %eax,%esi
	jump_41d53:
		lea    0x18(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_41dd0
		mov    0x16(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		testb  $0x80,0x15(%eax)
		jne    jump_41d53
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_41d53
		test   %ebx,%ebx
		je     jump_41d53
		mov    0xb(%ebx),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_41d53
		mov    0x6c(%edi),%al
		cmp    $0x6,%al
		ja     jump_41d53
		and    $0xff,%eax
		jmp    *vtable_41bd9(,%eax,4)


/*----------------------------------------------------------------*/
func_41db9:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    $0x78,%edx
		mov    0x59(%ebx),%al
		sub    %eax,%edx
		add    %edx,%esi
		jmp    jump_41d53


/*----------------------------------------------------------------*/
func_41dc9:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%ebx),%al
		jmp    jump_41d51
	jump_41dd0:
		cmp    0x4(%esp),%si
		jle    jump_41ded
		mov    0x14(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    (%esp),%edx
		mov    0x1c(%esp),%eax
		mov    %esi,0x4(%esp)
		mov    %ax,(%edx)
	jump_41ded:
		call   func_1a3ae
		jmp    jump_41cd8
	jump_41df7:
		mov    (%esp),%ebx
		mov    %edi,%eax
		movswl 0x0(%ebp),%edx
		movswl (%ebx),%ebx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_41e1a
		cmpw   $0x0,0x4(%esp)
		jle    jump_41e1a
		xor    %eax,%eax
		jmp    jump_41e1e
	jump_41e1a:
		mov    0x4(%esp),%eax
	jump_41e1e:
		add    $0x20,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret

vtable_41e25:
		.long   func_41f9f
		.long   func_41f9f
		.long   func_41fa2
		.long   func_41fd7
		.long   func_41fe7
		.long   func_41fa2
		.long   func_41f9f


/*----------------------------------------------------------------*/
func_41e41:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,0xc(%esp)
		mov    %esp,%edi
		mov    $func_3c98b,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsbw (%eax),%ax
		mov    %ax,0x8(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %ax,0x10(%esp)
		cmp    $0x2,%dx
		je     jump_41e86
		lea    0x10(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    0x60(%ebp),%ecx
		mov    %ebp,%eax
		sar    $0x18,%ecx
		call   func_1a146
	jump_41e86:
		mov    0xc(%esp),%ebx
		test   %bx,%bx
		jne    jump_41eac
		push   $0x5
		mov    0x12(%esp),%edx
		mov    0xa(%esp),%eax
		mov    0x60(%ebp),%ebx
		mov    $0x1,%ecx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		jmp    jump_41f0b
	jump_41eac:
		cmp    $0x1,%bx
		jne    jump_41ee2
		push   $0x4
		mov    0x60(%ebp),%ebx
		mov    0x14(%esp),%ecx
		sar    $0x18,%ebx
		mov    0xc(%esp),%esi
		movsbw 0x5(%esp,%ebx,2),%dx
		movsbw 0x4(%esp,%ebx,2),%ax
		add    %ecx,%edx
		add    %esi,%eax
		mov    $0x3,%ecx
		movswl %dx,%edx
		cwtl
		call   func_1af22
		jmp    jump_41f10
	jump_41ee2:
		push   $0xa
		mov    0x14(%esp),%esi
		mov    0x60(%ebp),%ebx
		mov    0xc(%esp),%edi
		sar    $0x18,%ebx
		mov    $0x3,%ecx
		movsbw 0x5(%esp,%ebx,2),%dx
		movsbw 0x4(%esp,%ebx,2),%ax
		add    %esi,%edx
		add    %edi,%eax
		movswl %dx,%edx
		cwtl
	jump_41f0b:
		call   func_1a452
	jump_41f10:
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		xor    %edi,%edi
		xor    %ecx,%ecx
		mov    %di,data_f0b9e
		jmp    jump_41fb9
	jump_41f2f:
		lea    0x10(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1b00d
	jump_41f3c:
		test   %ax,%ax
		je     jump_41fee
		mov    0xe(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_41fb9
		mov    0xb(%eax),%edx
		mov    0xb(%ebp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_41fb9
		testb  $0x80,0x15(%ebx)
		jne    jump_41fb9
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_41fb9
		mov    %ebx,%eax
		call   func_28596
		test   %eax,%eax
		je     jump_41fb9
		mov    0x6c(%ebp),%al
		cmp    $0x6,%al
		ja     jump_41fb9
		and    $0xff,%eax
		jmp    *vtable_41e25(,%eax,4)


/*----------------------------------------------------------------*/
func_41f9f:
/*----------------------------------------------------------------*/
		inc    %ecx
		jmp    jump_41fb9


/*----------------------------------------------------------------*/
func_41fa2:
/*----------------------------------------------------------------*/
		mov    0x4c(%ebp),%edx
		sub    0x48(%ebp),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%ecx
	jump_41fb7:
		add    %eax,%ecx
	jump_41fb9:
		cmpw   $0x1,0xc(%esp)
		je     jump_41f2f
		lea    0x10(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1a552
		jmp    jump_41f3c


/*----------------------------------------------------------------*/
func_41fd7:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    $0x78,%edx
		mov    0x59(%ebp),%al
		sub    %eax,%edx
		add    %edx,%ecx
		jmp    jump_41fb9


/*----------------------------------------------------------------*/
func_41fe7:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%ebp),%al
		jmp    jump_41fb7
	jump_41fee:
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11e04
		mov    %ecx,%eax
		add    $0x14,%esp
		jmp    jump_3e5a5

vtable_42009:
		.long   func_42074
		.long   func_42074
		.long   func_42077
		.long   func_42110
		.long   func_42123
		.long   func_42074
		.long   func_42074


/*----------------------------------------------------------------*/
func_42025:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %ebx,0x8(%esp)
		movswl %dx,%eax
		add    %eax,%eax
		lea    0x3(%eax),%edx
		mov    %esi,%eax
		call   func_28465
		mov    %eax,%edx
		cmp    $0x4,%bx
		jne    jump_42052
		xor    %edi,%edi
		sub    $0x2,%edx
		mov    %edi,0x4(%esp)
		jmp    jump_4205a
	jump_42052:
		movl   $0x1,0x4(%esp)
	jump_4205a:
		xor    %ecx,%ecx
		mov    %cx,data_f0b9e
		movswl %dx,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
		jmp    jump_4208e


/*----------------------------------------------------------------*/
func_42074:
/*----------------------------------------------------------------*/
		inc    %ecx
		jmp    jump_4208e


/*----------------------------------------------------------------*/
func_42077:
/*----------------------------------------------------------------*/
		mov    0x4c(%esi),%edx
		sub    0x48(%esi),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%ecx
	jump_4208c:
		add    %eax,%ecx
	jump_4208e:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_4212d
		mov    -0x2(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%edi
		test   %eax,%eax
		je     jump_4208e
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    0x4(%esp),%ax
		jne    jump_4208e
		testb  $0x80,0x15(%ebx)
		jne    jump_4208e
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_4208e
		cmpw   $0x4,0x8(%esp)
		jne    jump_420f1
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_4208e
	jump_420f1:
		mov    %edi,%eax
		call   func_28596
		test   %eax,%eax
		je     jump_4208e
		mov    0x6c(%esi),%al
		cmp    $0x6,%al
		ja     jump_4208e
		and    $0xff,%eax
		jmp    *vtable_42009(,%eax,4)


/*----------------------------------------------------------------*/
func_42110:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    $0x78,%edx
		mov    0x59(%esi),%al
		sub    %eax,%edx
		add    %edx,%ecx
		jmp    jump_4208e


/*----------------------------------------------------------------*/
func_42123:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%esi),%al
		jmp    jump_4208c
	jump_4212d:
		mov    %ecx,%eax
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		ret

vtable_42135:
		.long   func_422ca
		.long   func_422ca
		.long   func_422f6
		.long   func_422f6
		.long   func_42303
		.long   func_422ca
		.long   func_422ca


/*----------------------------------------------------------------*/
func_42151:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ebx,%esi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0xc(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0x8(%esp),%ebx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_1a1de
		mov    0xb(%esi),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x18,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0x6(%esp),%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		mov    %eax,(%esp)
		push   %eax
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0x1,%ecx
		call   func_13d02
		mov    (%esp),%ebx
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		push   %ebx
		sar    $0x10,%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1af22
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1b00d
		cmpb   $0x4,0x6c(%esi)
		jne    jump_4220a
		xor    %ebx,%ebx
		mov    %ebx,0x4(%esp)
		jmp    jump_42212
	jump_4220a:
		movl   $0x7fff,0x4(%esp)
	jump_42212:
		movsbw (%esi),%ax
		mov    %ax,0xc(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ax,0x8(%esp)
	jump_42225:
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_42311
		mov    0x6(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_42311
		testb  $0x80,0x15(%eax)
		jne    jump_42311
		cmpb   $0x7,0x5c(%eax)
		jae    jump_42311
		cmpw   $0x12c,0x61(%eax)
		jge    jump_42311
		mov    0xb(%ebx),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_422b0
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		movl   $0x64,(%esp)
		sar    $0x1f,%edx
		idivl  (%esp)
		imul   $0x46,%eax,%eax
		cmp    0x48(%ebx),%eax
		jg     jump_422b6
	jump_422b0:
		cmpb   $0x2,0xd(%ecx)
		jne    jump_42311
	jump_422b6:
		mov    0x6c(%esi),%al
		cmp    $0x6,%al
		ja     jump_42311
		and    $0xff,%eax
		jmp    *vtable_42135(,%eax,4)


/*----------------------------------------------------------------*/
func_422ca:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		movsbl 0x1(%ecx),%ebx
		movsbl (%ecx),%edx
		mov    0x4(%esp),%ecx
		call   func_49adf
		cmp    %cx,%ax
	jump_422df:
		jge    jump_42311
	jump_422e1:
		mov    %eax,0x4(%esp)
		mov    0xc(%esp),%eax
		mov    %ax,0x0(%ebp)
		mov    0x8(%esp),%eax
		mov    %ax,(%edi)
		jmp    jump_42311


/*----------------------------------------------------------------*/
func_422f6:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%ebx
		mov    0x48(%ecx),%ax
		cmp    %bx,%ax
		jmp    jump_422df


/*----------------------------------------------------------------*/
func_42303:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x4(%esp),%edx
		mov    0x43(%ecx),%al
		cmp    %dx,%ax
		jg     jump_422e1
	jump_42311:
		lea    0x8(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		jne    jump_42225
		mov    0x4(%esp),%eax
		test   %ax,%ax
		je     jump_42336
		cmp    $0x7fff,%ax
		jne    jump_4233d
	jump_42336:
		xor    %eax,%eax
		jmp    jump_41895
	jump_4233d:
		mov    %esi,%eax
		movswl (%edi),%ebx
		movswl 0x0(%ebp),%edx
		call   func_49adf
		cmp    $0x10,%ax
		ja     jump_42336
		jmp    jump_41890

vtable_42359:
		.long   func_4246c
		.long   func_4246c
		.long   func_4246f
		.long   func_4246f
		.long   func_4251b
		.long   func_4246c
		.long   func_4246c


/*----------------------------------------------------------------*/
func_42375:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%edi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0x10(%esp),%edx
		mov    %eax,%esi
		mov    0x60(%ebx),%ecx
		lea    0x14(%esp),%ebx
		sar    $0x18,%ecx
		mov    %edi,%eax
		call   func_1a1de
		movswl %si,%esi
		mov    0xb(%edi),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x18,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    0x12(%esp),%edx
		mov    0xe(%esp),%eax
		mov    0x60(%edi),%ebx
		push   %esi
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    $0x1,%ebx
		movsbl 0x1(%edi),%edx
		movsbl (%edi),%eax
		mov    $0x1,%ecx
		call   func_13d02
		mov    0x12(%esp),%edx
		mov    0xe(%esp),%eax
		mov    0x60(%edi),%ebx
		push   %esi
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1af22
		lea    0x14(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1b00d
		movsbw (%edi),%ax
		mov    %ax,0x10(%esp)
		xor    %edx,%edx
		movsbw 0x1(%edi),%ax
		mov    %edx,0xc(%esp)
		mov    %ax,0x14(%esp)
	jump_4242d:
		mov    0x12(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_42547
		call   func_1a31d
		mov    0x2a(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_1ac08
		jmp    jump_42486


/*----------------------------------------------------------------*/
func_4246c:
/*----------------------------------------------------------------*/
		inc    %esi
		jmp    jump_42486


/*----------------------------------------------------------------*/
func_4246f:
/*----------------------------------------------------------------*/
		mov    0x4c(%ecx),%edx
		sub    0x48(%ecx),%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%esi
	jump_42484:
		add    %eax,%esi
	jump_42486:
		lea    0x8(%esp),%edx
		lea    0x18(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_42525
		mov    0x6(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_42486
		testb  $0x80,0x15(%eax)
		jne    jump_42486
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_42486
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_42486
		mov    0xb(%ebx),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_424fd
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		movl   $0x64,0x4(%esp)
		sar    $0x1f,%edx
		idivl  0x4(%esp)
		imul   $0x46,%eax,%eax
		cmp    0x48(%ebx),%eax
		jg     jump_42503
	jump_424fd:
		cmpb   $0x2,0xd(%ecx)
		jne    jump_42486
	jump_42503:
		mov    0x6c(%edi),%al
		cmp    $0x6,%al
		ja     jump_42486
		and    $0xff,%eax
		jmp    *vtable_42359(,%eax,4)


/*----------------------------------------------------------------*/
func_4251b:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		mov    0x43(%ecx),%al
		jmp    jump_42484
	jump_42525:
		cmp    0xc(%esp),%si
		jle    jump_42542
		mov    (%esp),%edx
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    0x14(%esp),%eax
		mov    %esi,0xc(%esp)
		mov    %ax,0x0(%ebp)
	jump_42542:
		call   func_1a3ae
	jump_42547:
		lea    0x14(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		jne    jump_4242d
		mov    (%esp),%edx
		mov    %edi,%eax
		movswl 0x0(%ebp),%ebx
		movswl (%edx),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_42583
		cmpw   $0x0,0xc(%esp)
		jle    jump_42583
		xor    %eax,%eax
		jmp    jump_3f0dc
	jump_42583:
		mov    0xc(%esp),%eax
		jmp    jump_3f0dc


/*----------------------------------------------------------------*/
func_4258c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,%esi
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0xc(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0x14(%esp),%ebx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_1a1de
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0x12(%esp),%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		mov    %eax,(%esp)
		push   %eax
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    $0x1,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0x1,%ecx
		call   func_13d02
		mov    (%esp),%ebx
		mov    0x12(%esp),%edx
		mov    0xa(%esp),%eax
		push   %ebx
		sar    $0x10,%edx
		mov    0x60(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1af22
		lea    0x14(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1b00d
		movsbw (%esi),%ax
		mov    %ax,0xc(%esp)
		xor    %edx,%edx
		movsbw 0x1(%esi),%ax
		mov    %edx,0x4(%esp)
		mov    %ax,0x14(%esp)
	jump_4264f:
		mov    0x12(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_42701
		call   func_1a31d
		mov    0x26(%esp),%ebx
		mov    0x12(%esp),%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_1ac08
	jump_4268c:
		lea    0x8(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_426e2
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		testb  $0x80,0x15(%eax)
		jne    jump_4268c
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_4268c
		test   %ebx,%ebx
		je     jump_4268c
		mov    0xb(%ebx),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_4268c
		cmpb   $0x0,0x1e(%ebx)
		je     jump_4268c
		inc    %ecx
		jmp    jump_4268c
	jump_426e2:
		cmp    0x4(%esp),%cx
		jle    jump_426fc
		mov    0xc(%esp),%eax
		mov    %ax,(%edi)
		mov    0x14(%esp),%eax
		mov    %ecx,0x4(%esp)
		mov    %ax,0x0(%ebp)
	jump_426fc:
		call   func_1a3ae
	jump_42701:
		lea    0x14(%esp),%edx
		lea    0xc(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		jne    jump_4264f
		mov    %esi,%eax
		movswl 0x0(%ebp),%ebx
		movswl (%edi),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_4273a
		cmpw   $0x0,0x4(%esp)
		jle    jump_4273a
		xor    %eax,%eax
		jmp    jump_3e3b7
	jump_4273a:
		mov    0x4(%esp),%eax
		jmp    jump_3e3b7


/*----------------------------------------------------------------*/
func_42743:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    0x40(%esp),%esi
		mov    %eax,0x4(%esp)
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %cx,0x14(%esp)
		cmp    $0x4000,%si
		je     jump_42774
		mov    0x12(%esp),%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_28465
		mov    %ax,0x14(%esp)
	jump_42774:
		lea    0xc(%esp),%ebx
		lea    0x10(%esp),%edx
		mov    0x60(%edi),%ecx
		mov    %edi,%eax
		sar    $0x18,%ecx
		call   func_1a1de
		mov    $0x1,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    $0x1,%ecx
		call   func_1b7bf
		call   func_13f8a
		mov    0x12(%esp),%eax
		mov    0xa(%esp),%edx
		mov    0x60(%edi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		mov    %eax,(%esp)
		push   %eax
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		mov    (%esp),%ebx
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x1,%ecx
		push   %ebx
		sar    $0x10,%edx
		mov    0x60(%edi),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		call   func_1af22
		lea    0xc(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1b00d
		cmp    $0xff,%si
		jge    jump_4282b
		movsbw (%edi),%ax
		xor    %ebx,%ebx
		mov    %ax,0x10(%esp)
		mov    %ebx,0x28(%esp)
		movsbw 0x1(%edi),%ax
		mov    $0x1,%ebx
		mov    %ax,0xc(%esp)
		mov    0xe(%esp),%eax
		movsbl 0x1(%edi),%edx
		sar    $0x10,%eax
		call   func_13d02
		jmp    jump_42841
	jump_4282b:
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		mov    %edx,0x28(%esp)
		lea    0xc(%esp),%edx
		call   func_1b00d
	jump_42841:
		xor    %ecx,%ecx
		mov    %ecx,0x1c(%esp)
	jump_42847:
		mov    0xa(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_429ce
		call   func_1a31d
		mov    0x3a(%esp),%ebx
		xor    %eax,%eax
		mov    0xa(%esp),%edx
		mov    %eax,0x20(%esp)
		sar    $0x10,%ebx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ac08
	jump_42888:
		lea    0x18(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_429a7
		mov    0x16(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    %eax,%ecx
		testb  $0x80,0x15(%eax)
		jne    jump_42888
		cmpb   $0x7,0x5c(%ebx)
		jae    jump_42888
		xor    %eax,%eax
		mov    %eax,0x24(%esp)
		test   %ebx,%ebx
		je     jump_42990
		mov    0xb(%ebx),%edx
		mov    0xb(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		mov    0x28(%esp),%edx
		cmp    %dx,%ax
		jne    jump_42990
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_42990
		test   %dx,%dx
		jne    jump_42909
		mov    0x12(%ebx),%edx
		movswl %si,%eax
		sar    $0x18,%edx
		jmp    jump_42915
	jump_42909:
		mov    0x1b(%ebx),%edx
		movswl %si,%eax
		sar    $0x18,%edx
		sar    $0x8,%eax
	jump_42915:
		test   %eax,%edx
		jne    jump_42888
		cmp    $0x40,%si
		jb     jump_4293b
		jbe    jump_42952
		cmp    $0x800,%si
		jb     jump_42988
		jbe    jump_4295f
		cmp    $0x4000,%si
		je     jump_42982
		jmp    jump_42988
	jump_4293b:
		cmp    $0x8,%si
		jne    jump_42988
		mov    %ecx,%eax
		call   func_174cf
		xor    %ah,%ah
		cmp    $0x2,%ax
		je     jump_42990
		jmp    jump_42988
	jump_42952:
		testb  $0x7,0x1e(%ecx)
		je     jump_42990
		addl   $0x2,0x20(%esp)
		jmp    jump_42990
	jump_4295f:
		cmpw   $0x0,0x50(%ecx)
		je     jump_42990
		xor    %ebx,%ebx
		jmp    jump_4297a
	jump_4296a:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   func_28429
		test   %ax,%ax
		jge    jump_42988
		inc    %ebx
	jump_4297a:
		cmp    $0x7,%bx
		jl     jump_4296a
		jmp    jump_42990
	jump_42982:
		testb  $0x20,0x1e(%ecx)
		jne    jump_42990
	jump_42988:
		movl   $0x1,0x24(%esp)
	jump_42990:
		mov    0x24(%esp),%edx
		cmp    $0x1,%dx
		jne    jump_42888
		add    %edx,0x20(%esp)
		jmp    jump_42888
	jump_429a7:
		mov    0x20(%esp),%eax
		cmp    0x1c(%esp),%ax
		jle    jump_429c9
		mov    0x4(%esp),%edx
		mov    %eax,0x1c(%esp)
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    0xc(%esp),%eax
		mov    %ax,0x0(%ebp)
	jump_429c9:
		call   func_1a3ae
	jump_429ce:
		lea    0xc(%esp),%edx
		lea    0x10(%esp),%eax
		call   func_1b00d
		test   %ax,%ax
		jne    jump_42847
		mov    0x4(%esp),%edx
		mov    %edi,%eax
		movswl 0x0(%ebp),%ebx
		movswl (%edx),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_42a08
		cmpw   $0x0,0x1c(%esp)
		jle    jump_42a08
		xor    %eax,%eax
		jmp    jump_42a15
	jump_42a08:
		xor    %esi,%esi
		mov    0x1c(%esp),%eax
		mov    %si,data_f0b9e
	jump_42a15:
		add    $0x2c,%esp
		jmp    jump_3d3c5


/*----------------------------------------------------------------*/
func_42a1d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%ebp
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_28465
		lea    0x4(%esp),%edx
		mov    %eax,(%esp)
		mov    0x60(%ebx),%ecx
		lea    0xc(%esp),%ebx
		sar    $0x18,%ecx
		mov    %ebp,%eax
		call   func_1a1de
		mov    0xb(%ebp),%eax
		mov    $0x1,%ebx
		sar    $0x18,%eax
		mov    %ebx,%edx
		call   func_1b7bf
		xor    %edx,%edx
		mov    $0x1,%ecx
		mov    %dx,data_f0b9e
		call   func_13f8a
		mov    -0x2(%esp),%eax
		mov    0xa(%esp),%edx
		mov    0x60(%ebp),%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1b7fa
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x8(%esp)
		xor    %ecx,%ecx
		jmp    jump_42b1d
	jump_42aa0:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%eax
		testb  $0x80,0x15(%eax)
		jne    jump_42b1c
		cmpb   $0x7,0x5c(%eax)
		jae    jump_42b1c
		mov    0x20(%esp),%ebx
		cmp    %bx,%cx
		jne    jump_42af7
		mov    0x5a(%eax),%bh
		cmp    %bh,%bl
		jne    jump_42aef
		mov    0x5b(%eax),%bl
		cmp    %bl,%bh
		jne    jump_42aef
		mov    0x5d(%eax),%bh
		cmp    %bh,%bl
		jne    jump_42aef
		mov    0x5e(%eax),%bl
		cmp    %bl,%bh
		jne    jump_42aef
		cmp    0x5f(%eax),%bl
		jne    jump_42aef
		mov    $0x1,%ebx
		jmp    jump_42af1
	jump_42aef:
		mov    %ecx,%ebx
	jump_42af1:
		test   %ebx,%ebx
		jne    jump_42b1c
		jmp    jump_42b05
	jump_42af7:
		cmpw   $0x12c,0x61(%eax)
		jge    jump_42b1c
		cmpb   $0x32,0x43(%eax)
		ja     jump_42b1c
	jump_42b05:
		movsbw (%eax),%bx
		mov    %bx,(%edi)
		movsbw 0x1(%eax),%ax
		mov    %ax,(%esi)
		movl   $0x1,0x8(%esp)
	jump_42b1c:
		inc    %edx
	jump_42b1d:
		cmp    data_f0b9e,%dx
		jl     jump_42aa0
		mov    0x8(%esp),%edx
		cmp    $0x1,%dx
		jne    jump_42b65
		mov    %dx,data_f0b9e
		movswl (%esi),%edx
		movswl (%edi),%eax
		call   func_11db2
		mov    %eax,data_f0648
		mov    %ebp,%eax
		movswl (%esi),%ebx
		movswl (%edi),%edx
		call   func_49adf
		cmp    $0x10,%ax
		jbe    jump_42b6e
		xor    %eax,%eax
		jmp    jump_3f23e
	jump_42b65:
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
	jump_42b6e:
		mov    0x8(%esp),%eax
		jmp    jump_3f23e


/*----------------------------------------------------------------*/
func_42b77:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0x1,%ecx
		movswl %bx,%eax
		movsbl 0x1(%esi),%edx
		mov    0x60(%esi),%ebx
		push   %eax
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1af22
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1b00d
	jump_42ba7:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1b00d
		test   %ax,%ax
		je     jump_42c8b
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_42ba7
		cmp    $0x1,%di
		jb     jump_42be8
		jbe    jump_42c13
		cmp    $0x2,%di
		je     jump_42c68
		jmp    jump_42ba7
	jump_42be8:
		test   %di,%di
		jne    jump_42ba7
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_42ba7
		cmpb   $0x0,0x1e(%ebx)
	jump_42c07:
		je     jump_42ba7
	jump_42c09:
		mov    $0x1,%eax
		jmp    jump_42c90
	jump_42c13:
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_42c5c
		cmpb   $0x2,0xd(%ebx)
		je     jump_42ba7
		cmpw   $0x12c,0x61(%ebx)
		jge    jump_42ba7
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		mov    $0x64,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		imul   $0x46,%eax,%eax
		cmp    0x48(%ebx),%eax
		jle    jump_42ba7
		jmp    jump_42c09
	jump_42c5c:
		cmpb   $0x2,0xd(%ebx)
		jne    jump_42ba7
		jmp    jump_42c09
	jump_42c68:
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		jne    jump_42ba7
		testb  $0x7,0x1e(%ebx)
		jmp    jump_42c07
	jump_42c8b:
		mov    $0xffffffff,%eax
	jump_42c90:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_42c97:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		cmp    $0x3,%al
		jb     jump_42cab
		jbe    jump_42cbc
		cmp    $0x4,%al
		je     jump_42ccc
		jmp    jump_42cda
	jump_42cab:
		cmp    $0x1,%al
		jb     jump_42cda
		mov    $0x2,%ecx
		xor    %edi,%edi
		mov    %ecx,0x4(%esp)
		jmp    jump_42cda
	jump_42cbc:
		mov    $0x3,%ebx
		mov    $0x2,%edi
		mov    %ebx,0x4(%esp)
		jmp    jump_42cda
	jump_42ccc:
		mov    $0x4,%edx
		mov    $0x3,%edi
		mov    %edx,0x4(%esp)
	jump_42cda:
		xor    %esi,%esi
		xor    %ecx,%ecx
		jmp    jump_42d10
	jump_42ce0:
		movswl %di,%ebx
		mov    data_cc968(,%ebx,8),%ebx
	jump_42cea:
		test   %ebx,%ebx
		je     jump_42d0f
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		movl   $0xa,(%esp)
		sar    $0x1f,%edx
		idivl  (%esp)
		imul   $0x7,%eax,%eax
		cmp    0x48(%ebx),%eax
		jle    jump_42d09
		inc    %ecx
	jump_42d09:
		inc    %esi
		mov    0x7b(%ebx),%ebx
		jmp    jump_42cea
	jump_42d0f:
		inc    %edi
	jump_42d10:
		cmp    0x4(%esp),%di
		jl     jump_42ce0
		test   %cx,%cx
		je     jump_42d47
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		movswl %cx,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1e,%eax
		jge    jump_42d47
		mov    $0x1,%eax
		jmp    jump_3f78f
	jump_42d47:
		mov    $0xffffffff,%eax
		jmp    jump_3f78f


/*----------------------------------------------------------------*/
func_42d51:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movsbw 0xe(%eax),%ax
		dec    %eax
		cwtl
		xor    %ebx,%ebx
		mov    data_cc968(,%eax,8),%eax
	jump_42d68:
		test   %eax,%eax
		je     jump_42d84
		xor    %ecx,%ecx
		mov    0xf(%edx),%cl
		movzbl 0x12(%eax),%esi
		add    $0xa,%ecx
		cmp    %ecx,%esi
		jne    jump_42d7f
		mov    %eax,%edi
		inc    %ebx
	jump_42d7f:
		mov    0x7b(%eax),%eax
		jmp    jump_42d68
	jump_42d84:
		cmp    $0x1,%bx
		jne    jump_42d9b
		mov    0x4c(%edi),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		cmp    0x48(%edi),%eax
		jg     jump_42da0
	jump_42d9b:
		test   %bx,%bx
		jne    jump_42daa
	jump_42da0:
		mov    $0x1,%eax
		jmp    jump_40886
	jump_42daa:
		xor    %eax,%eax
		jmp    jump_40886

vtable_42db1:
		.long   func_42ebd
		.long   func_4309d
		.long   func_43192
		.long   func_4322d


/*----------------------------------------------------------------*/
func_42dc1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ecx
		mov    %edx,0xc(%esp)
		cmp    $0x1,%dx
		jne    jump_42de8
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_43293
	jump_42de8:
		cmpw   $0x0,0x50(%ecx)
		jl     jump_43293
		xor    %eax,%eax
		mov    $0x36,%edx
		mov    0x5b(%ecx),%al
		mov    $0x6,%esi
		call   func_184a4
		cbtw
		mov    0xc(%esp),%edi
		mov    %eax,0x8(%esp)
		cmp    $0x1,%di
		je     jump_42e1d
		cmp    $0x2,%di
		jne    jump_42e31
	jump_42e1d:
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_42e31
		mov    $0x3,%esi
	jump_42e31:
		call   func_1a0e9
		cmp    0x54(%ecx),%ax
		jne    jump_42e87
		mov    %ecx,%eax
		call   func_174cf
		cmp    $0x2,%al
		je     jump_42e5b
		jmp    jump_42e87
	jump_42e49:
		movswl %si,%eax
		mov    0x50(%ecx),%dx
		cmp    data_753b6(,%eax,2),%dx
		jge    jump_42e8c
		dec    %esi
	jump_42e5b:
		test   %si,%si
		jge    jump_42e49
		jmp    jump_42e8c
	jump_42e62:
		movswl %si,%edx
		mov    0x50(%ecx),%bx
		cmp    data_753b6(,%edx,2),%bx
		jl     jump_42e86
		call   func_1a0e9
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   func_28480
		cmp    %ax,%bx
		jge    jump_42e8c
	jump_42e86:
		dec    %esi
	jump_42e87:
		test   %si,%si
		jge    jump_42e62
	jump_42e8c:
		test   %si,%si
		jge    jump_42e9b
		mov    $0xfffffffe,%eax
		jmp    jump_43298
	jump_42e9b:
		mov    0xc(%esp),%eax
		mov    $0xffffffff,%edi
		cmp    $0x3,%ax
		ja     jump_43266
		xor    %eax,%eax
		mov    0xc(%esp),%ax
		jmp    *vtable_42db1(,%eax,4)


/*----------------------------------------------------------------*/
func_42ebd:
/*----------------------------------------------------------------*/
		cmp    $0x2,%si
		jle    jump_42ece
		testb  $0x10,0x1e(%ecx)
		je     jump_42ece
		mov    $0x2,%esi
	jump_42ece:
		mov    $0x3,%edx
		mov    %ecx,%eax
		mov    $0x3,%ebx
		call   func_28429
		mov    %ebx,(%esp)
		mov    %eax,0x10(%esp)
		test   %ax,%ax
		jl     jump_43293
		mov    0xe(%ecx),%ah
		cmp    $0x4,%ah
		je     jump_42f2e
		cmp    $0x6,%si
		jne    jump_42f2e
		cmp    $0x3,%ah
		jne    jump_42f0a
		mov    data_f0ba2,%ax
		jmp    jump_42f10
	jump_42f0a:
		mov    data_f0ba0,%ax
	jump_42f10:
		mov    %ax,0x4(%esp)
		cmpw   $0x50,0x4(%esp)
		jge    jump_42f2e
		cmpw   $0x64,0x50(%ecx)
		jle    jump_42f2e
	jump_42f24:
		mov    $0x6,%edi
		jmp    jump_43266
	jump_42f2e:
		cmp    $0x3,%si
		jl     jump_42fad
		mov    0x10(%esp),%eax
		add    %eax,%eax
		mov    0x8(%esp),%ebx
		add    $0x3,%eax
		add    %ebx,%eax
		movsbl 0x1(%ecx),%edx
		movswl %ax,%ebx
		movsbl (%ecx),%eax
		call   func_1ac08
	jump_42f58:
		lea    0x14(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_42fa1
		mov    0x12(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    %eax,%ebx
		mov    0xb(%eax),%edx
		mov    0xb(%ecx),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_42f58
		cmpb   $0x2,0xd(%ebx)
		jne    jump_42f58
		mov    $0x3,%edi
	jump_42fa1:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_43266
	jump_42fad:
		cmp    $0x2,%si
		jl     jump_42fd8
		mov    0x8(%esp),%eax
		add    $0x5,%eax
		xor    %edx,%edx
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   func_42b77
		cmp    $0x1,%ax
		jne    jump_42fd8
		mov    $0x2,%edi
		jmp    jump_43266
	jump_42fd8:
		mov    0x8(%esp),%eax
		add    $0x5,%eax
		movswl %ax,%ebp
		mov    $0x1,%edx
		mov    %ebp,%ebx
		mov    %ecx,%eax
		call   func_42b77
		cmp    $0x1,%ax
		jne    jump_43002
		mov    $0x2,%eax
		jmp    jump_4325f
	jump_43002:
		cmp    $0x3,%si
		jl     jump_43069
		mov    $0x2,%edx
		mov    %ebp,%ebx
		mov    %ecx,%eax
		call   func_42b77
		cmp    $0x1,%ax
		jne    jump_43069
		mov    $0x4,%edx
		mov    %ecx,%eax
		mov    %edx,(%esp)
		mov    $0x4,%edx
		call   func_28429
		mov    %eax,0x10(%esp)
		test   %ax,%ax
		jl     jump_43062
		cmp    $0x5,%si
		jl     jump_43058
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_43058
	jump_4304e:
		mov    $0x5,%edi
		jmp    jump_43266
	jump_43058:
		mov    $0x3,%edi
		jmp    jump_43266
	jump_43062:
		movl   $0x3,(%esp)
	jump_43069:
		cmpw   $0x50,0x50(%ecx)
		jle    jump_43266
		cmp    $0x4,%si
		jl     jump_43266
		mov    0xb(%ecx),%eax
		sar    $0x18,%eax
		call   func_42c97
		cmp    $0x1,%ax
		jne    jump_43266
	jump_43093:
		mov    $0x4,%edi
		jmp    jump_43266


/*----------------------------------------------------------------*/
func_4309d:
/*----------------------------------------------------------------*/
		cmp    $0x3,%si
		jle    jump_430ae
		testb  $0x10,0x1e(%ecx)
		je     jump_430ae
		mov    $0x3,%esi
	jump_430ae:
		xor    %edx,%edx
		mov    %dx,0x4(%esp)
		jmp    jump_430dc
	jump_430b7:
		mov    $0x3,%eax
		call   func_499bd
		mov    %eax,(%esp)
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_28429
		mov    %eax,0x10(%esp)
		test   %ax,%ax
		jge    jump_430e4
		incw   0x4(%esp)
	jump_430dc:
		cmpw   $0x3,0x4(%esp)
		jl     jump_430b7
	jump_430e4:
		cmpw   $0x3,0x4(%esp)
		je     jump_43293
		mov    0x4c(%ecx),%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x48(%ecx),%edi
		add    %eax,%eax
		cmp    %edi,%eax
		jle    jump_43132
		cmpw   $0x32,0x50(%ecx)
		jle    jump_43132
		cmp    $0x4,%si
		jl     jump_43132
		mov    %ecx,%eax
		call   func_42d51
		cmp    $0x1,%ax
		je     jump_43093
	jump_43132:
		mov    0xe(%ecx),%dh
		cmp    $0x4,%dh
		je     jump_4316b
		cmp    $0x6,%si
		jne    jump_4316b
		cmp    $0x3,%dh
		jne    jump_4314d
		mov    data_f0ba2,%ax
		jmp    jump_43153
	jump_4314d:
		mov    data_f0ba0,%ax
	jump_43153:
		mov    %ax,0x4(%esp)
		cmpw   $0x50,0x4(%esp)
		jge    jump_4316b
		cmpw   $0x64,0x50(%ecx)
		jg     jump_42f24
	jump_4316b:
		cmp    $0x5,%si
		jl     jump_43178
		mov    $0x5,%eax
		jmp    jump_4317c
	jump_43178:
		inc    %esi
		movswl %si,%eax
	jump_4317c:
		call   func_499bd
		mov    %eax,%edi
		cmp    $0x4,%di
		jne    jump_43266
		jmp    jump_4304e


/*----------------------------------------------------------------*/
func_43192:
/*----------------------------------------------------------------*/
		testb  $0x10,0x1e(%ecx)
		je     jump_4319f
	jump_43198:
		mov    %edi,%eax
		jmp    jump_43298
	jump_4319f:
		mov    $0x6,%edx
		mov    %ecx,%eax
		mov    $0x6,%ebx
		call   func_28429
		mov    %ebx,(%esp)
		mov    %eax,0x10(%esp)
		test   %ax,%ax
		jl     jump_43198
		cmpb   $0x4,0xe(%ecx)
		je     jump_43218
		cmp    $0x3,%si
		jl     jump_43218
		mov    %ecx,%eax
		call   func_42d51
		cmp    $0x1,%ax
		jne    jump_43218
		cmpb   $0x3,0xe(%ecx)
		jne    jump_431e3
		mov    data_f0ba2,%ax
		jmp    jump_431e9
	jump_431e3:
		mov    data_f0ba0,%ax
	jump_431e9:
		mov    %ax,0x4(%esp)
		cmpw   $0x50,0x4(%esp)
		jge    jump_43218
		cmpw   $0x32,0x50(%ecx)
		jle    jump_43218
		mov    data_d6624,%edx
		push   %edx
		mov    data_d6620,%ebx
		push   %ebx
		call   func_113dd
		test   %eax,%eax
		jne    jump_43058
	jump_43218:
		inc    %esi
		movswl %si,%eax
		call   func_499bd
		mov    %eax,%edi
		cmp    $0x3,%ax
		jne    jump_43266
		xor    %eax,%edi
		jmp    jump_43266


/*----------------------------------------------------------------*/
func_4322d:
/*----------------------------------------------------------------*/
		cmp    $0x4,%si
		jle    jump_4323e
		testb  $0x10,0x1e(%ecx)
		je     jump_4323e
		mov    $0x4,%esi
	jump_4323e:
		mov    $0x4,%edx
		mov    %ecx,%eax
		mov    %edx,(%esp)
		mov    $0x4,%edx
		call   func_28429
		mov    %eax,0x10(%esp)
		test   %ax,%ax
		jl     jump_43293
		inc    %esi
		movswl %si,%eax
	jump_4325f:
		call   func_499bd
		mov    %eax,%edi
	jump_43266:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     jump_43293
		mov    (%esp),%edx
		cmp    $0x6,%dx
		ja     jump_43293
		cmp    $0x6,%di
		jg     jump_43293
		mov    0x10(%esp),%ebx
		cmp    $0x2,%bx
		ja     jump_43293
		imul   $0x15,%edx,%eax
		imul   $0x3,%edi,%edi
		add    %edi,%eax
		add    %ebx,%eax
		jmp    jump_43298
	jump_43293:
		mov    $0xffffffff,%eax
	jump_43298:
		add    $0x18,%esp
		jmp    jump_3e5a5


/*----------------------------------------------------------------*/
func_432a0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x50(%eax),%cx
		mov    %edx,0xc(%esp)
		cmp    $0xa,%cx
		jl     jump_432cc
		call   func_1a0e9
		cmp    $0x32,%ax
		jl     jump_432cc
		testb  $0x8,0x1e(%ebx)
		je     jump_432d6
	jump_432cc:
		mov    $0xffffffff,%edx
		jmp    jump_4351c
	jump_432d6:
		cmpb   $0x0,0x7f(%ebx)
		je     jump_432e6
		movl   $0x1,0x14(%esp)
		jmp    jump_432ee
	jump_432e6:
		movl   $0x4,0x14(%esp)
	jump_432ee:
		mov    $0xffffffff,%eax
		xor    %edi,%edi
		mov    %ax,0x8(%esp)
		jmp    jump_4350d
	jump_432ff:
		mov    0x7f(%ebx),%dh
		test   %dh,%dh
		je     jump_43315
		xor    %eax,%eax
		mov    %dh,%al
		dec    %eax
		mov    %ax,0x10(%esp)
		jmp    jump_4339a
	jump_43315:
		test   %di,%di
		jne    jump_43381
		mov    0x80(%ebx),%cl
		cmp    $0xff,%cl
		je     jump_43381
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x7,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		call   func_28429
		mov    %ax,0x10(%esp)
		test   %ax,%ax
		jl     jump_4339a
		xor    %edx,%edx
		mov    0x80(%ebx),%dl
		imul   $0x3,%edx,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x80(%ebx),%dl
		mov    %ax,0x10(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x50(%ebx),%ax
		cmp    data_753b6(,%edx,2),%ax
		jge    jump_4339a
		movw   $0xffff,0x10(%esp)
		jmp    jump_4339a
	jump_43381:
		movswl %di,%edx
		mov    %ebx,%eax
		call   func_42dc1
		mov    %ax,0x10(%esp)
		cwtl
		cmp    $0xfffffffe,%eax
		je     jump_43518
	jump_4339a:
		mov    0xe(%esp),%ecx
		sar    $0x10,%ecx
		cmp    $0xffffffff,%ecx
		je     jump_434a3
		mov    0x55(%ebx),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		add    %edx,%eax
		mov    $0x3,%esi
		mov    %eax,(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    $0x7,%ebp
		sar    $0x1f,%edx
		mov    %eax,%esi
		idiv   %ebp
		movswl %dx,%ebp
		mov    %ebx,%eax
		mov    %ebp,%edx
		call   func_28480
		mov    (%esp),%edx
		cwtl
		cmp    %edx,%eax
		jle    jump_43430
		call   func_1a0e9
		cmp    0x54(%ebx),%ax
		jne    jump_434a3
		mov    0x57(%ebx),%cx
		cmp    $0x1f4,%cx
		jge    jump_4340e
		mov    %ecx,%esi
		add    $0x14,%esi
		mov    %si,0x57(%ebx)
	jump_4340e:
		mov    0x10(%esp),%al
		inc    %al
		mov    $0x2,%edi
		mov    %al,0x7f(%ebx)
		call   func_1a0e9
		cwtl
		mov    %edi,0xc(%esp)
		call   func_1a0c6
		jmp    jump_43518
	jump_43430:
		mov    0x10(%esp),%eax
		mov    %ax,data_f1ba6
		mov    $0x1,%eax
		call   func_28422
		imul   $0xc,%esi,%eax
		mov    %ecx,%edx
		sar    $0x1f,%edx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		mov    $0x3,%ecx
		idiv   %ecx
		mov    %edx,%ecx
		mov    (%esp),%eax
		shl    $0x2,%ecx
		add    %eax,%ecx
		mov    data_7423c(%ecx),%eax
		movswl %dx,%edx
		call   func_28883
		mov    %ebx,%eax
		call   *data_f13b0(,%esi,4)
		mov    %ax,0x8(%esp)
		xor    %eax,%eax
		mov    %ebp,%edx
		call   func_28422
		mov    %ebx,%eax
		call   func_28480
		mov    0x57(%ebx),%dx
		movb   $0x0,0x7f(%ebx)
		sub    %edx,%eax
		movw   $0x0,0x57(%ebx)
		mov    %ax,0x4(%esp)
	jump_434a3:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		je     jump_4350c
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x7,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x50(%ebx),%si
		sub    data_753b6(,%edx,2),%si
		mov    0x4(%esp),%edi
		mov    %si,0x50(%ebx)
		test   %di,%di
		jle    jump_434f5
		mov    0x2(%esp),%edx
		mov    %ebx,%eax
		sar    $0x10,%edx
		call   func_3c993
	jump_434f5:
		cmpw   $0x0,0x50(%ebx)
		jge    jump_43502
		movw   $0x0,0x50(%ebx)
	jump_43502:
		movl   $0x1,0xc(%esp)
		jmp    jump_43518
	jump_4350c:
		inc    %edi
	jump_4350d:
		cmp    0x14(%esp),%di
		jl     jump_432ff
	jump_43518:
		mov    0xc(%esp),%edx
	jump_4351c:
		mov    %edx,%eax
		add    $0x18,%esp
		jmp    jump_40885


/*----------------------------------------------------------------*/
func_43526:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x20,%esp
		mov    %eax,%esi
		cmpw   $0xa,0x50(%eax)
		jl     jump_438a6
		mov    $0xa,%ebx
		mov    $0x14,%ecx
		mov    %bx,0x18(%esp)
		mov    %ecx,0x14(%esp)
	jump_4354e:
		mov    %esi,%eax
		call   func_432a0
		cmp    $0x1,%ax
		je     jump_4354e
		cmp    $0x2,%ax
		je     jump_4389a
		mov    0x16(%esp),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		movswl %ax,%ebx
		lea    0x18(%edx),%eax
		cmp    %eax,%ebx
		jle    jump_436a1
		call   func_1a0e9
		cwtl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0xffffffff,%edi
		mov    %ax,0x1c(%esp)
		mov    %esi,%eax
		mov    0x1c(%esp),%edx
		call   func_3e18b
		shl    $0x2,%edx
		test   %ax,%ax
		jle    jump_4361e
		movswl %dx,%eax
		lea    0xc(%esp),%ecx
		call   func_14300
		mov    %esi,%eax
		lea    0x8(%esp),%ebx
		call   func_14032
		mov    %esi,%eax
		lea    0x10(%esp),%edx
		call   func_143f3
		mov    %esi,%eax
		call   func_3e5ab
		test   %eax,%eax
		je     jump_436a6
		mov    0x10(%esp),%ecx
		movsbw (%esi),%ax
		cmp    %cx,%ax
		jne    jump_43614
		mov    0x8(%esp),%edi
		movsbw 0x1(%esi),%ax
		cmp    %di,%ax
		jne    jump_43614
		mov    0xc(%esp),%edx
		movsbw 0x63(%esi),%ax
		cmp    %dx,%ax
		jne    jump_43614
	jump_4360a:
		mov    $0xfffffffe,%edi
		jmp    jump_436a6
	jump_43614:
		mov    $0x1,%edi
		jmp    jump_436a6
	jump_4361e:
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_4360a
		cmpb   $0x6,0x6c(%esi)
		je     jump_4360a
		movswl %dx,%eax
		call   func_14300
		mov    %esi,%eax
		mov    0x1a(%esp),%ebx
		call   func_14032
		mov    %esi,%eax
		sar    $0x10,%ebx
		call   func_143f3
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_3e3bf
		test   %ax,%ax
		je     jump_436a6
		push   $0x2
		lea    0x10(%esp),%ecx
		lea    0x14(%esp),%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x10(%esp),%ebx
		call   func_3e739
		test   %eax,%eax
		je     jump_436a6
		mov    0x10(%esp),%edi
		movsbw (%esi),%ax
		cmp    %di,%ax
		jne    jump_43614
		mov    0x8(%esp),%edx
		movsbw 0x1(%esi),%ax
		cmp    %dx,%ax
		jne    jump_43614
		mov    0xc(%esp),%ebx
		movsbw 0x63(%esi),%ax
		cmp    %bx,%ax
		je     jump_4360a
		jmp    jump_43614
	jump_436a1:
		mov    $0xfffffffd,%edi
	jump_436a6:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_437bc
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		je     jump_436d6
		mov    %esp,%eax
		lea    0x4(%esp),%ecx
		lea    0x8(%esp),%ebx
		push   %eax
		lea    0x14(%esp),%edx
		mov    %esi,%eax
		call   func_3e251
		jmp    jump_43706
	jump_436d6:
		lea    0x8(%esp),%ecx
		lea    0x10(%esp),%ebx
		mov    $0x1e,%edx
		mov    %esi,%eax
		call   func_3df3b
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_438a6
		movsbw (%eax),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,(%esp)
	jump_43706:
		mov    0x10(%esp),%ebx
		movsbw (%esi),%ax
		cmp    %bx,%ax
		jne    jump_4372b
		mov    0x8(%esp),%ecx
		movsbw 0x1(%esi),%ax
		cmp    %cx,%ax
		jne    jump_4372b
	jump_43721:
		mov    $0xfffffffe,%edi
		jmp    jump_437d7
	jump_4372b:
		mov    $0xd2,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_1419c
		mov    0x6(%esp),%ebx
		mov    0xe(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1499c
		test   %ax,%ax
		jne    jump_4376e
		lea    0x8(%esp),%ebx
		lea    0x10(%esp),%edx
		mov    %esi,%eax
		call   func_15342
		test   %ax,%ax
		je     jump_438a6
	jump_4376e:
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		mov    0x1c(%esp),%eax
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   func_14fa4
		mov    %ax,0xc(%esp)
		call   func_13b37
		test   %ax,%ax
		jne    jump_43721
		mov    $0x1,%edi
		jmp    jump_437d7
	jump_437bc:
		cmp    $0x1,%di
		jne    jump_437d7
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
	jump_437d7:
		cmp    $0x1,%di
		jne    jump_4386f
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    0xa(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_1620a
		mov    %esi,%eax
		mov    %esi,%ebx
		call   func_12124
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		call   func_45559
		mov    0x1c(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		shl    $0x2,%ebx
		call   func_13cbd
		sub    %eax,%ebx
		movswl %bx,%eax
		sar    $0x2,%eax
		imul   $0xa,%eax,%eax
		mov    0x16(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_3c993
		mov    %esi,%eax
		call   func_167c9
		mov    %ax,0x18(%esp)
		call   func_13f8a
		mov    %esi,%eax
		call   func_5401b
		test   %ax,%ax
		je     jump_438a6
		mov    %esi,%eax
		call   func_17310
		test   %ax,%ax
		je     jump_438a6
	jump_4386f:
		movswl %di,%eax
		cmp    $0xfffffffe,%eax
		jne    jump_4388e
		mov    0x14(%esp),%edx
		call   func_1a0e9
		cmp    %dx,%ax
		jl     jump_4389a
		mov    %edx,%ebx
		add    $0x2,%ebx
		mov    %ebx,0x14(%esp)
	jump_4388e:
		movswl %di,%eax
		cmp    $0xfffffffd,%eax
		jne    jump_4354e
	jump_4389a:
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_3f415
	jump_438a6:
		add    $0x20,%esp
		jmp    jump_40886


/*----------------------------------------------------------------*/
func_438ae:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x20,%esp
		mov    %eax,%esi
		cmpw   $0xa,0x50(%eax)
		jl     jump_438a6
		mov    $0xa,%ebx
		mov    $0x14,%ecx
		mov    0x7f(%eax),%ah
		mov    %bx,0x14(%esp)
		mov    %ecx,0x18(%esp)
		test   %ah,%ah
		je     jump_438e6
		mov    %esi,%eax
		call   func_432a0
		cmp    $0x2,%ax
		je     jump_438a6
	jump_438e6:
		mov    0x12(%esp),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		lea    0x18(%edx),%ebx
		cmp    %ebx,%eax
		jle    jump_43a06
		call   func_1a0e9
		cwtl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ax,0x1c(%esp)
		mov    %esi,%eax
		mov    $0xffffffff,%edi
		call   func_3e18b
		test   %ax,%ax
		je     jump_4397d
		mov    %esp,%ecx
		lea    0x8(%esp),%ebx
		lea    0x10(%esp),%edx
		mov    %esi,%eax
		call   func_3e5ab
		test   %eax,%eax
		je     jump_43a0b
		mov    0x10(%esp),%edi
		movsbw (%esi),%ax
		cmp    %di,%ax
		jne    jump_43973
		mov    0x8(%esp),%edx
		movsbw 0x1(%esi),%ax
		cmp    %dx,%ax
		jne    jump_43973
		mov    (%esp),%ebx
		movsbw 0x63(%esi),%ax
		cmp    %bx,%ax
		jne    jump_43973
	jump_43969:
		mov    $0xfffffffe,%edi
		jmp    jump_43a0b
	jump_43973:
		mov    $0x1,%edi
		jmp    jump_43a0b
	jump_4397d:
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_43969
		cmpb   $0x6,0x6c(%esi)
		je     jump_43969
		mov    0x1c(%esp),%eax
		shl    $0x2,%eax
		cwtl
		mov    0x1a(%esp),%ebx
		call   func_14300
		mov    %esi,%eax
		sar    $0x10,%ebx
		call   func_14032
		mov    %esi,%eax
		mov    %ebx,%edx
		call   func_143f3
		mov    %esi,%eax
		call   func_3e457
		test   %ax,%ax
		je     jump_43a0b
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_43969
		push   $0x1
		lea    0x4(%esp),%ecx
		lea    0x14(%esp),%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x10(%esp),%ebx
		call   func_3e739
		test   %eax,%eax
		je     jump_43a0b
		mov    0x10(%esp),%edx
		movsbw (%esi),%ax
		cmp    %dx,%ax
		jne    jump_43a0b
		mov    0x8(%esp),%ebx
		movsbw 0x1(%esi),%ax
		cmp    %bx,%ax
		jne    jump_43a0b
		mov    (%esp),%ecx
		movsbw 0x63(%esi),%ax
		cmp    %cx,%ax
		jne    jump_43a0b
		jmp    jump_43969
	jump_43a06:
		mov    $0xfffffffd,%edi
	jump_43a0b:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		jne    jump_43b36
		mov    %esi,%eax
		call   func_3e18b
		test   %ax,%ax
		je     jump_43a43
		lea    0xc(%esp),%eax
		lea    0x4(%esp),%ecx
		lea    0x8(%esp),%ebx
		push   %eax
		lea    0x14(%esp),%edx
		mov    %esi,%eax
		call   func_3e251
		movw   $0xffff,(%esp)
		jmp    jump_43a75
	jump_43a43:
		mov    %esp,%eax
		lea    0x8(%esp),%ecx
		lea    0x10(%esp),%ebx
		push   %eax
		mov    $0x1e,%edx
		mov    %esi,%eax
		call   func_3e01b
		test   %ax,%ax
		je     jump_438a6
		mov    0x10(%esp),%eax
		mov    %ax,0x4(%esp)
		mov    0x8(%esp),%eax
		mov    %ax,0xc(%esp)
	jump_43a75:
		mov    0x10(%esp),%edi
		movsbw (%esi),%ax
		cmp    %di,%ax
		jne    jump_43a9a
		mov    0x8(%esp),%edx
		movsbw 0x1(%esi),%ax
		cmp    %dx,%ax
		jne    jump_43a9a
	jump_43a90:
		mov    $0xfffffffe,%edi
		jmp    jump_43b51
	jump_43a9a:
		mov    $0xd2,%eax
		call   func_14300
		mov    %esi,%eax
		call   func_1419c
		mov    0x6(%esp),%ebx
		mov    0xe(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_1499c
		test   %ax,%ax
		jne    jump_43add
		lea    0x8(%esp),%ebx
		lea    0x10(%esp),%edx
		mov    %esi,%eax
		call   func_15342
		test   %ax,%ax
		je     jump_438a6
	jump_43add:
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
		mov    0x1c(%esp),%eax
		mov    0xa(%esp),%ebx
		mov    0x2(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   func_14fa4
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jne    jump_43b21
		mov    %ax,(%esp)
	jump_43b21:
		call   func_13b37
		test   %ax,%ax
		jne    jump_43a90
		mov    $0x1,%edi
		jmp    jump_43b51
	jump_43b36:
		cmp    $0x1,%di
		jne    jump_43b51
		mov    0x6(%esp),%edx
		mov    0xe(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_15523
	jump_43b51:
		cmp    $0x1,%di
		jne    jump_43bf1
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    -0x2(%esp),%edx
		mov    %esi,%eax
		sar    $0x10,%edx
		call   func_1620a
		mov    %esi,%eax
		mov    %esi,%ebx
		call   func_12124
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11e04
		call   func_45559
		mov    0x1c(%esp),%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		shl    $0x2,%ebx
		call   func_13cbd
		sub    %eax,%ebx
		movswl %bx,%eax
		sar    $0x2,%eax
		imul   $0xa,%eax,%eax
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_3c993
		mov    %esi,%eax
		call   func_167c9
		mov    %ax,0x14(%esp)
		call   func_13f8a
		mov    %esi,%eax
		call   func_5401b
		test   %ax,%ax
		je     jump_438a6
		mov    %esi,%eax
		call   func_17310
		test   %ax,%ax
		je     jump_438a6
	jump_43bf1:
		movswl %di,%eax
		cmp    $0xfffffffe,%eax
		jne    jump_43c14
		mov    0x18(%esp),%ebx
		call   func_1a0e9
		cmp    %bx,%ax
		jl     jump_4389a
		mov    %ebx,%ecx
		add    $0x2,%ecx
		mov    %ecx,0x18(%esp)
	jump_43c14:
		movswl %di,%eax
		cmp    $0xfffffffd,%eax
		je     jump_43c4c
		xor    %edx,%edx
		jmp    jump_43c37
	jump_43c20:
		mov    %esi,%eax
		call   func_432a0
		test   %ax,%ax
		jne    jump_43c3d
		call   func_1a0e9
		test   %ax,%ax
		je     jump_43c3d
		inc    %edx
	jump_43c37:
		cmp    $0x9,%dx
		jl     jump_43c20
	jump_43c3d:
		call   func_1a0e9
		test   %ax,%ax
		jne    jump_43c4c
		mov    $0xfffffffd,%edi
	jump_43c4c:
		movswl %di,%eax
		cmp    $0xfffffffd,%eax
		jne    jump_438e6
		jmp    jump_4389a


/*----------------------------------------------------------------*/
func_43c5d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x0,data_731ba(%eax)
		je     jump_43ca6
		call   func_1a0e9
		cmp    $0x96,%ax
		jle    jump_43ca6
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		mov    %ebx,%eax
		call   func_3c4c1
		cmp    $0x1,%ax
		jne    jump_43ca6
		mov    $0x28,%edx
		mov    %ebx,%eax
		call   func_3c993
	jump_43ca6:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_43ca9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x11(%eax),%dl
		cmp    $0x19,%dl
		jb     jump_43cb9
		cmp    $0x20,%dl
		jbe    jump_43cce
	jump_43cb9:
		mov    0x11(%eax),%bl
		cmp    $0x26,%bl
		jb     jump_43cc6
		cmp    $0x28,%bl
		jbe    jump_43cce
	jump_43cc6:
		mov    0x11(%eax),%cl
		cmp    $0x34,%cl
		jne    jump_43cd4
	jump_43cce:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_43cd4:
		cmp    $0x21,%cl
		jb     jump_43ce7
		cmp    $0x25,%cl
		ja     jump_43ce7
		mov    $0x1,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_43ce7:
		mov    $0x2,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_43cf0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x18,%esp
		mov    %eax,%esi
		cmpb   $0xa1,0x11(%eax)
		jne    jump_43e86
		mov    %esp,%ebx
		lea    0xc(%esp),%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_1a1de
		push   $0x9
		mov    0x2(%esp),%edx
		mov    0xe(%esp),%eax
		mov    $0x1,%ecx
		xor    %ebx,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a452
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		xor    %edi,%edi
		call   func_1a552
	jump_43d3c:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_43dd2
		call   func_1a31d
		mov    (%esp),%eax
		dec    %eax
		push   $0x3
		movswl %ax,%edx
		mov    0x10(%esp),%eax
		mov    $0x3,%ecx
		dec    %eax
		xor    %ebx,%ebx
		cwtl
		call   func_1a452
		xor    %ebx,%ebx
	jump_43d72:
		lea    0x8(%esp),%edx
		lea    0x4(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_43db0
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		mov    0xb(%eax),%edx
		mov    0xb(%esi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_1201d
		test   %ax,%ax
		je     jump_43d72
		inc    %ebx
		jmp    jump_43d72
	jump_43db0:
		cmp    %di,%bx
		jle    jump_43dc8
		mov    0xc(%esp),%eax
		mov    %ax,0x10(%esp)
		mov    (%esp),%eax
		mov    %ebx,%edi
		mov    %ax,0x14(%esp)
	jump_43dc8:
		call   func_1a3ae
		jmp    jump_43d3c
	jump_43dd2:
		test   %di,%di
		jle    jump_4423c
		mov    0x14(%esp),%eax
		dec    %eax
		push   $0x3
		movswl %ax,%edx
		mov    0x14(%esp),%eax
		mov    $0x3,%ecx
		dec    %eax
		xor    %ebx,%ebx
		cwtl
		xor    %edi,%edi
		call   func_1a452
		mov    %di,data_f0b9e
	jump_43e00:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_43e2b
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_43e00
	jump_43e2b:
		mov    0x12(%esp),%ecx
		mov    0xe(%esp),%ebx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_46e19
		movsbw 0x1(%esi),%ax
		inc    %eax
		movswl %ax,%edx
		movsbl (%esi),%eax
		call   func_46df1
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1ddf0
		cwtl
		cmp    $0xfffffffe,%eax
		je     jump_4423c
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
		call   func_1ed45
		call   func_1e2b1
		jmp    jump_4423c
	jump_43e86:
		mov    0x11(%esi),%dl
		cmp    $0x5c,%dl
		jne    jump_43f8d
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		movsbw (%esi),%ax
		mov    %ax,0xc(%esp)
		mov    %esp,%edx
		movsbw 0x1(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		lea    0xc(%esp),%eax
		call   func_49abc
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		xor    %ebx,%ebx
		mov    $0x3,%ecx
		call   func_49abc
		push   $0x6
		mov    0x2(%esp),%edx
		mov    0x10(%esp),%eax
		xor    %ebx,%ebx
		dec    %eax
		sar    $0x10,%edx
		cwtl
		call   func_1a452
	jump_43efb:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1a552
		test   %ax,%ax
		je     jump_43f26
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_43efb
	jump_43f26:
		cmpw   $0x0,data_f0b9e
		jle    jump_43f54
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_1ddf0
	jump_43f3c:
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
	jump_43f4a:
		call   func_1ed45
		jmp    jump_4423c
	jump_43f54:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    $0x1,%eax
		call   func_28422
		mov    data_74288,%eax
		mov    $0x1,%edx
		call   func_28883
		mov    %esi,%eax
		call   *data_f13c8
	jump_43f81:
		xor    %eax,%eax
		call   func_28422
		jmp    jump_4423c
	jump_43f8d:
		cmp    $0x5d,%dl
		jne    jump_44056
		xor    %edx,%edx
		mov    %dx,data_f0b9e
		mov    $0x7,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_43fb0:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_43fdb
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_43fb0
	jump_43fdb:
		cmpw   $0x0,data_f0b9e
		jle    jump_4423c
		mov    data_ba83c,%ax
		add    $0x6,%eax
		mov    %ax,0x4(%esp)
		mov    data_ba83e,%ax
		add    $0x6,%eax
		mov    $0x1,%edx
		mov    %ax,0x8(%esp)
		mov    %esi,%eax
		call   func_1ddf0
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    $0x11,%ebx
		call   func_1124a
		mov    $data_77bd8,%edx
		mov    %esi,%eax
		call   func_48612
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_56bd4
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		jmp    jump_43f3c
	jump_44056:
		mov    0x61(%esi),%dx
		cmp    $0x184,%dx
		jne    jump_44135
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_4423c
		mov    %ax,data_f0b9e
		mov    $0x7,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_4408f:
		mov    %esp,%edx
		lea    0xc(%esp),%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_440ba
		mov    -0x2(%esp),%edx
		mov    0xb(%esi),%ebx
		mov    0xa(%esp),%eax
		sar    $0x18,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a1f8
		jmp    jump_4408f
	jump_440ba:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		cmpw   $0x0,data_f0b9e
		jle    jump_4410f
		mov    $0x1,%edx
		mov    %esi,%eax
		mov    $0x11,%ebx
		call   func_1ddf0
		mov    $data_77be4,%edx
		mov    %esi,%eax
		movb   $0x6,0x64(%esi)
		call   func_48612
		mov    %esi,%eax
		call   func_57f18
		mov    %esi,%eax
		call   func_1e61d
		call   func_1ef5c
		mov    %esi,%eax
		movb   $0x0,0x64(%esi)
		jmp    jump_43f4a
	jump_4410f:
		mov    $0x1,%eax
		call   func_28422
		mov    data_742dc,%eax
		mov    $0x1,%edx
		call   func_28883
		mov    %esi,%eax
		call   *data_f13e4
		jmp    jump_43f81
	jump_44135:
		jle    jump_4423c
		cmp    $0x187,%dx
		jg     jump_4423c
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_4423c
		movb   $0x5,0x64(%esi)
		mov    %ax,0x4(%esp)
		jmp    jump_44181
	jump_44164:
		call   func_45559
		mov    $0x10,%eax
		call   func_499da
		mov    0x4(%esp),%al
		add    $0x6,%al
		mov    %al,0x64(%esi)
		incw   0x4(%esp)
	jump_44181:
		cmpw   $0x2,0x4(%esp)
		jl     jump_44164
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_1124a
		mov    $0x1,%eax
		call   func_28422
		mov    data_742bc,%eax
		mov    $0x2,%edx
		call   func_28883
		mov    %esi,%eax
		call   *data_f13d8
		mov    %ax,0x4(%esp)
		xor    %eax,%eax
		call   func_28422
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jne    jump_44238
		mov    $0x11,%ebx
		mov    $data_77bf1,%edx
		mov    %esi,%eax
		call   func_48612
		mov    $0x2,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_22af9
		mov    data_cc968,%ecx
	jump_441f6:
		test   %ecx,%ecx
		je     jump_44238
		mov    $0x1e,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_28947
		cmp    $0x1,%eax
		jne    jump_44233
		cmpw   $0x12c,0x61(%ecx)
		jge    jump_44233
		mov    0x1e(%ecx),%bl
		and    $0xf8,%bl
		mov    %bl,0x1e(%ecx)
		mov    %bl,%bh
		movw   $0x64,0x1f(%ecx)
		or     $0x2,%bh
		mov    %ecx,%eax
		mov    %bh,0x1e(%ecx)
		call   func_197ad
	jump_44233:
		mov    0x7b(%ecx),%ecx
		jmp    jump_441f6
	jump_44238:
		movb   $0x0,0x64(%esi)
	jump_4423c:
		add    $0x18,%esp
		jmp    jump_40886

vtable_44245:
		.long   func_44593
		.long   func_445b6
		.long   func_44606
		.long   func_44635
		.long   func_44667
		.long   func_446ae
		.long   func_446b8
		.long   func_446f1
		.long   func_44719
		.long   func_44752


/*----------------------------------------------------------------*/
func_4426d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		cmpw   $0x19e,0x61(%eax)
		jne    jump_44530
		mov    data_cc978,%eax
		xor    %edx,%edx
	jump_4428b:
		test   %eax,%eax
		je     jump_4429b
		cmpb   $0x0,0x12(%eax)
		je     jump_44296
		inc    %edx
	jump_44296:
		mov    0x7b(%eax),%eax
		jmp    jump_4428b
	jump_4429b:
		cmp    $0x2,%dx
		jge    jump_44324
		movsbw 0x0(%ebp),%ax
		dec    %eax
		movsbl 0x1(%ebp),%edx
		cwtl
		call   func_11db2
		test   %eax,%eax
		jne    jump_442e8
		movsbw 0x0(%ebp),%ax
		sub    $0x2,%eax
		movsbl 0x1(%ebp),%edx
		cwtl
		call   func_11db2
		test   %eax,%eax
		jne    jump_442e8
		movsbw 0x0(%ebp),%ax
		sub    $0x2,%eax
	jump_442d7:
		mov    %ax,0x10(%esp)
		movsbw 0x1(%ebp),%ax
		mov    %ax,0x4(%esp)
		jmp    jump_4432b
	jump_442e8:
		movsbw 0x0(%ebp),%ax
		add    $0x3,%eax
		movsbl 0x1(%ebp),%edx
		cwtl
		call   func_11db2
		test   %eax,%eax
		jne    jump_44324
		movsbw 0x0(%ebp),%ax
		add    $0x4,%eax
		movsbl 0x1(%ebp),%edx
		cwtl
		call   func_11db2
		test   %eax,%eax
		jne    jump_44324
		movsbw 0x0(%ebp),%ax
		add    $0x3,%eax
		jmp    jump_442d7
	jump_44324:
		movw   $0xffff,0x10(%esp)
	jump_4432b:
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_44341
		movw   $0xffff,0x10(%esp)
	jump_44341:
		cmpw   $0x0,0x10(%esp)
		jle    jump_44530
		call   func_112fd
		mov    $0x88,%ebx
		mov    %eax,%ecx
		mov    %ebp,%edx
		mov    %eax,(%esp)
		call   w_dos_memcpy
		mov    0x10(%esp),%al
		mov    $data_77bfa,%esi
		mov    %al,(%ecx)
		mov    0x4(%esp),%al
		lea    0x2(%ecx),%edi
		mov    %al,0x1(%ecx)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0xe(%ebp),%al
		movb   $0x5f,0x11(%ecx)
		movb   $0x1,0xd(%ecx)
		movb   $0x78,0x40(%ecx)
		movb   $0x64,0x41(%ecx)
		movb   $0x50,0x42(%ecx)
		mov    %al,0xe(%ecx)
		xor    %eax,%eax
		mov    0x40(%ecx),%al
		movb   $0xa,0x43(%ecx)
		add    %eax,%eax
		mov    %ax,0x44(%ecx)
		mov    data_71e60,%ax
		mov    %ax,0x46(%ecx)
		mov    data_71e64,%ax
		movl   $0x186a0,0x4c(%ecx)
		movw   $0x0,0x52(%ecx)
		movb   $0x0,0x56(%ecx)
		movw   $0x0,0x57(%ecx)
		movb   $0x0,0x13(%ecx)
		movb   $0x0,0x1e(%ecx)
		movb   $0xff,0x71(%ecx)
		xor    %edx,%edx
		movl   $0x0,0x73(%ecx)
		mov    0x42(%ecx),%dl
		movb   $0x0,0x6b(%ecx)
		add    %eax,%edx
		mov    0x4c(%ecx),%eax
		mov    %dx,0x54(%ecx)
		mov    %eax,0x48(%ecx)
		mov    0x52(%ecx),%ax
		mov    %ax,0x50(%ecx)
		mov    0x13(%ecx),%al
		mov    %al,0x14(%ecx)
		mov    0x1e(%ecx),%al
		mov    %al,0x15(%ecx)
		mov    0x71(%ecx),%al
		mov    (%esp),%ebx
		mov    %al,0x6f(%ecx)
		xor    %eax,%eax
	jump_44412:
		movswl %ax,%edx
		add    %ebx,%edx
		inc    %eax
		movb   $0x0,0x2e(%edx)
		cmp    $0x6,%ax
		jl     jump_44412
		mov    0xf(%ebp),%al
		movb   $0x0,0x6e(%ebx)
		movw   $0x182,0x61(%ebx)
		movb   $0x0,0x64(%ebx)
		movl   $0x0,0x77(%ebx)
		movb   $0x0,0x81(%ebx)
		add    $0xa,%al
		movb   $0xff,0x82(%ebx)
		mov    %al,0x12(%ebx)
		mov    0x6e(%ebx),%al
		mov    %al,0x6d(%ebx)
		mov    %al,0x6c(%ebx)
		mov    0x64(%ebx),%al
		mov    %al,0x63(%ebx)
		mov    0x77(%ebx),%eax
		mov    %eax,0x67(%ebx)
		mov    0x81(%ebx),%al
		mov    %al,0x7f(%ebx)
		mov    0x82(%ebx),%al
		mov    %al,0x80(%ebx)
		mov    0x5f(%ebx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ebx)
		mov    0xb(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebx,%edx
		add    $data_cc968,%eax
		call   func_1134f
		mov    $0x1e,%edx
		mov    $0x1,%eax
		call   func_61147
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		movsbl (%ebx),%eax
		call   func_10971
		mov    %eax,%ecx
		movsbl 0x1(%ebx),%eax
		call   func_10988
		mov    %eax,%esi
		mov    $data_77c03,%eax
		mov    $0x32,%edx
		call   func_1fea4
		mov    $data_77c0e,%eax
		add    $0xc,%ecx
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c18,%eax
		add    $0xc,%esi
		call   func_4f460
		movswl %si,%edx
		mov    0x5d(%ebx),%ebx
		movswl %cx,%eax
		sar    $0x18,%ebx
		call   func_21944
		call   func_1ffcd
		mov    (%esp),%edx
		mov    (%esp),%eax
		mov    (%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11e04
		call   func_61115
		jmp    jump_44906
	jump_44530:
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_1124a
		mov    $0xc,%eax
		call   func_1033b
		xor    %edx,%edx
		movb   $0x5,0x64(%ebp)
	jump_4454d:
		call   func_45559
		call   func_499e4
		mov    0x64(%ebp),%bh
		inc    %bh
		inc    %edx
		mov    %bh,0x64(%ebp)
		cmp    $0x2,%dx
		jl     jump_4454d
		xor    %eax,%eax
		mov    %ax,0xc(%esp)
		call   func_499e4
		mov    0x61(%ebp),%ax
		sub    $0x195,%eax
		cmp    $0x9,%ax
		ja     jump_447d9
		and    $0xffff,%eax
		jmp    *vtable_44245(,%eax,4)


/*----------------------------------------------------------------*/
func_44593:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77c23,%eax
		call   func_4f460
		mov    $0x13,%edx
		mov    $0x11,%eax
		call   func_2799a
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_445b6:
/*----------------------------------------------------------------*/
		movsbw 0x1(%ebp),%ax
		add    $0x3,%eax
		movswl %ax,%edx
		movsbw 0x0(%ebp),%ax
		inc    %eax
		cwtl
		call   func_1124a
		mov    $0x32,%edx
		mov    $data_77c30,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c3b,%eax
		mov    $0x2,%ebx
		call   func_4f460
		mov    $0x13,%edx
		mov    $0x11,%eax
		call   func_26e1f
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_44606:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77c45,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c4e,%eax
		call   func_4f460
		mov    $0x2,%edx
		mov    %ebp,%eax
		call   func_25dfe
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_44635:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77c57,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c63,%eax
		call   func_4f460
		mov    $0x13,%edx
		mov    $0x11,%eax
		call   func_570a1
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_44667:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77c6f,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c7c,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77c86,%eax
		call   func_4f460
		mov    $0x13,%edx
		mov    0xb(%ebp),%ebx
		mov    $0x11,%eax
		sar    $0x18,%ebx
		call   func_592b0
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_446ae:
/*----------------------------------------------------------------*/
		call   func_2c863
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_446b8:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77c93,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c9c,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77ca5,%eax
		call   func_4f460
		mov    %ebp,%eax
		call   func_5a566
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_446f1:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77cad,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77cb8,%eax
		call   func_4f460
		mov    $0x13,%edx
		jmp    jump_447cf


/*----------------------------------------------------------------*/
func_44719:
/*----------------------------------------------------------------*/
		mov    $0x32,%edx
		mov    $data_77cc5,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77cd1,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77cdc,%eax
		call   func_4f460
		mov    %ebp,%eax
		call   func_57f18
		jmp    jump_447d9


/*----------------------------------------------------------------*/
func_44752:
/*----------------------------------------------------------------*/
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_447ac
		mov    $0x32,%edx
		mov    $data_77c6f,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77c7c,%eax
		call   func_4f460
		mov    $0x34,%edx
		mov    $data_77c86,%eax
		call   func_4f460
		mov    $0x12,%edx
		mov    0xb(%ebp),%ebx
		mov    $0x11,%eax
		sar    $0x18,%ebx
		call   func_592b0
		movw   $0x1,0xc(%esp)
		jmp    jump_447d9
	jump_447ac:
		mov    $0x32,%edx
		mov    $data_77cad,%eax
		call   func_4f460
		mov    $0x33,%edx
		mov    $data_77cb8,%eax
		call   func_4f460
		mov    $0x12,%edx
	jump_447cf:
		mov    $0x11,%eax
		call   func_27c5a
	jump_447d9:
		xor    %ebx,%ebx
		mov    %bx,data_f0b9e
		mov    %bx,0x8(%esp)
		mov    $0x1,%edi
	jump_447ec:
		mov    0x6(%esp),%esi
		sar    $0x10,%esi
		mov    data_cc968(,%esi,8),%esi
	jump_447fa:
		test   %esi,%esi
		je     jump_448ab
		mov    0xa(%esp),%ebx
		mov    %edi,%ecx
		mov    %esi,%edx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		call   func_1d770
		mov    data_ba83c,%bx
		movsbw (%esi),%dx
		mov    %eax,%ecx
		cmp    %bx,%dx
		jl     jump_448a0
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movsbl (%esi),%ebx
		add    $0xc,%edx
		cmp    %edx,%ebx
		jge    jump_448a0
		mov    data_ba83e,%bx
		movsbw 0x1(%esi),%dx
		cmp    %bx,%dx
		jl     jump_448a0
		mov    data_ba83c,%ebx
		sar    $0x10,%ebx
		movsbl 0x1(%esi),%edx
		add    $0xc,%ebx
		cmp    %ebx,%edx
		jge    jump_448a0
		mov    data_f0b9c,%ebx
		mov    %eax,%edx
		sar    $0x10,%ebx
		mov    %esi,%eax
		call   func_45bfb
		mov    data_f0b9c,%ebx
		mov    %esi,%eax
		mov    0x60(%esi),%edx
		sar    $0x10,%ebx
		sar    $0x18,%edx
		call   func_45ed2
		mov    data_f0b9c,%eax
		sar    $0x10,%eax
		mov    %esi,data_f0648(,%eax,4)
		incw   data_f0b9e
	jump_448a0:
		sub    %ecx,0x48(%esi)
		mov    0x7b(%esi),%esi
		jmp    jump_447fa
	jump_448ab:
		mov    0x8(%esp),%esi
		inc    %esi
		mov    %si,0x8(%esp)
		cmp    $0x2,%si
		jl     jump_447ec
		call   func_287af
		xor    %ecx,%ecx
		xor    %edi,%edi
	jump_448c8:
		movswl %cx,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_448d2:
		test   %eax,%eax
		je     jump_448fb
		mov    0x48(%eax),%edx
		mov    0x7b(%eax),%esi
		cmp    %edx,%edi
		jl     jump_448eb
		mov    %eax,%edx
		mov    %ebp,%eax
		call   func_1db1d
		jmp    jump_448f7
	jump_448eb:
		mov    $0x1,%ebx
		mov    %ebp,%edx
		call   func_53797
	jump_448f7:
		mov    %esi,%eax
		jmp    jump_448d2
	jump_448fb:
		inc    %ecx
		cmp    $0x2,%cx
		jl     jump_448c8
		movb   $0x0,0x64(%ebp)
	jump_44906:
		call   func_45559
		add    $0x14,%esp
		jmp    jump_40885


/*----------------------------------------------------------------*/
func_44913:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   func_174cf
		testb  $0x10,0x1e(%edx)
		jne    jump_44928
		testb  $0x2,0x14(%edx)
		je     jump_44941
	jump_44928:
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_44941
		mov    $0x1,%eax
		call   func_12017
	jump_44941:
		mov    %edx,%eax
		movb   $0x0,0x56(%edx)
		call   func_19fab
		mov    %edx,%eax
		call   func_43c5d
		mov    %edx,%eax
		call   func_41515
		test   %ax,%ax
		jne    jump_44a0c
		mov    %edx,%eax
		call   func_174cf
		mov    0x11(%edx),%bh
		xor    %ah,%ah
		cmp    $0xa1,%bh
		je     jump_44983
		cmp    $0x5c,%bh
		je     jump_44983
		cmp    $0x5d,%bh
		je     jump_44983
		cmp    $0x5b,%bh
		jne    jump_4498f
	jump_44983:
		mov    %edx,%eax
		call   func_43cf0
		jmp    jump_44a0c
	jump_4498f:
		cmp    $0xa4,%bh
		jne    jump_449a0
		mov    %edx,%eax
		call   func_4426d
		jmp    jump_44a0c
	jump_449a0:
		cmp    $0x2,%ax
		jne    jump_449cc
		mov    %edx,%eax
		call   func_43ca9
		test   %ax,%ax
		jbe    jump_449ba
		cmp    $0x1,%ax
		je     jump_449c3
		jmp    jump_44a0c
	jump_449ba:
		mov    %edx,%eax
		call   func_43526
		jmp    jump_44a0c
	jump_449c3:
		mov    %edx,%eax
		call   func_438ae
		jmp    jump_44a0c
	jump_449cc:
		cmp    $0x5,%ax
		je     jump_449fc
		cmp    $0xb,%ax
		je     jump_449fc
		cmp    $0xc,%ax
		je     jump_449fc
		cmp    $0xf,%ax
		je     jump_449fc
		cmp    $0x10,%ax
		je     jump_449fc
		cmp    $0x11,%ax
		je     jump_449fc
		cmp    $0x12,%ax
		je     jump_449fc
		cmp    $0x13,%ax
		jne    jump_44a05
	jump_449fc:
		mov    %edx,%eax
		call   func_40dfd
		jmp    jump_44a0c
	jump_44a05:
		mov    %edx,%eax
		call   func_40295
	jump_44a0c:
		xor    %eax,%eax
		call   func_12017
		pop    %edx
		pop    %ebx
		ret
.data
data_44a16:
		.ascii  "\x2c\x29\x2d\x15\x13\x17"
data_44a1c:
		.ascii  "\x0e\x00\x11\x00"
.text


/*----------------------------------------------------------------*/
func_44a4c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x8,%ecx
		mov    $data_ba850,%edx
		mov    $data_77ce8,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_44a67:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_ba858(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x8,%dx
		jl     jump_44a67
		mov    $0x3,%ecx
		mov    $0x8,%ebx
		mov    $data_d6628,%edx
		mov    $data_77ce8,%eax
		call   func_4f25f
		xor    %edx,%edx
	jump_44a9a:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_d6630(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x3,%dx
		jl     jump_44a9a
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44ab6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		call   func_44a4c
		mov    $0xd,%ecx
		mov    $data_fa6e8,%edx
		mov    $data_77cf0,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		mov    $0x4c,%ecx
		mov    $data_fa070,%edx
		mov    $data_77cfd,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_44aec:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_fa078(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x4c,%dx
		jl     jump_44aec
		mov    $0x39,%ecx
		mov    $0x4c,%ebx
		mov    $data_fa400,%edx
		mov    $data_77cfd,%eax
		call   func_4f25f
		xor    %edx,%edx
	jump_44b1f:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_fa408(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x39,%dx
		jl     jump_44b1f
		mov    $0xe,%ecx
		mov    $data_f8138,%edx
		mov    $data_77d08,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_44b4f:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_f8140(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0xe,%dx
		jl     jump_44b4f
		mov    $0x4,%ecx
		mov    $0xe,%ebx
		mov    $data_f82e0,%edx
		mov    $data_77d08,%eax
		call   func_4f25f
		xor    %edx,%edx
	jump_44b82:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_f82e8(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x4,%dx
		jl     jump_44b82
		mov    $0x48,%ecx
		mov    $data_f8728,%edx
		mov    $data_77d12,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_44bb2:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_f8730(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x48,%dx
		jl     jump_44bb2
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44bce:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x5,%ecx
		mov    $data_fa6ac,%edx
		mov    $data_77d1e,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_44be9:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_fa6b4(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x5,%dx
		jl     jump_44be9
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44c05:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0xc8,%ecx
		xor    %eax,%eax
		mov    $0x140,%ebx
		call   func_5eb4a
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5edde
		mov    data_fa6b2,%ax
		add    $0x64,%eax
		movswl %ax,%edx
		mov    data_fa6b0,%ax
		add    $0xa0,%eax
		mov    data_fa6b4,%ebx
		cwtl
		call   func_5f3fd
		mov    data_fa6be,%ax
		add    $0xb4,%eax
		movswl %ax,%edx
		mov    data_fa6bc,%ax
		add    $0x70,%eax
		mov    data_fa6c0,%ebx
		cwtl
		call   func_5f3fd
		call   func_5e9e8
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44c75:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    data_75010,%dx
		mov    $0xab,%esi
		inc    %edx
		xor    %ecx,%ecx
		mov    %dx,data_75010
		jmp    jump_44cb7
	jump_44c91:
		mov    data_fa6ca,%ax
		add    $0xb4,%eax
		movswl %ax,%edx
		mov    data_fa6c8,%ax
		add    %esi,%eax
		mov    data_fa6cc,%ebx
		cwtl
		inc    %ecx
		call   func_5f3fd
		add    $0x6,%esi
	jump_44cb7:
		cmp    data_75010,%cx
		jl     jump_44c91
		call   func_5e9e8
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44cca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x1,%eax
		call   func_44d6e
		xor    %eax,%eax
		call   func_44dec
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xc8,%ecx
		call   func_454b3
		mov    $0x1,%eax
		mov    $0x130,%ebx
		call   func_5ecc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_6104a
		mov    $0x10,%eax
		add    $0x3,%esi
		call   func_5edde
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_fa6b4(,%eax,4),%ebx
		mov    data_fa6b2(,%eax,4),%dx
		mov    data_fa6b0(,%eax,4),%ax
		add    $0x64,%edx
		add    $0xa0,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
		call   func_5e9e8
		mov    $0x4b0,%eax
		call   func_499ef
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44d67:
/*----------------------------------------------------------------*/
		mov    %ax,data_fa8bc
		ret


/*----------------------------------------------------------------*/
func_44d6e:
/*----------------------------------------------------------------*/
		mov    %ax,data_fa8b6
		ret


/*----------------------------------------------------------------*/
func_44d75:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    %dx,data_fa8b8
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_44d81:
/*----------------------------------------------------------------*/
		decw   data_fa8b8
		ret


/*----------------------------------------------------------------*/
func_44d89:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    data_fa8b8,%bx
		cmp    $0x59,%bx
		jl     jump_44da8
		movw   $0x59,data_fa8b8
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_44da8:
		mov    %ebx,%ecx
		mov    data_fa8b6,%eax
		inc    %ecx
		sar    $0x10,%eax
		mov    %cx,data_fa8b8
		mov    %edx,data_f9f08(,%eax,4)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_44dc5:
/*----------------------------------------------------------------*/
		mov    %ax,data_fa8ba
		ret


/*----------------------------------------------------------------*/
func_44dcc:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		jmp    jump_44de1
	jump_44dd1:
		movswl %dx,%eax
		mov    data_f9f08(,%eax,4),%eax
		call   func_12f2a
		inc    %edx
	jump_44de1:
		cmp    data_fa8b8,%dx
		jl     jump_44dd1
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_44dec:
/*----------------------------------------------------------------*/
		mov    %ax,data_75008
		ret


/*----------------------------------------------------------------*/
func_44df3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %esp,%edi
		mov    $data_44a16,%esi
		mov    $0x1,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    data_f82e8,%ebx
		call   func_5f3fd
		mov    data_f0ba0,%dx
		mov    $0x6e,%ebx
		sub    $0x28,%edx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		mov    %cx,0x8(%esp)
		add    $0x1e,%ebx
	jump_44e32:
		mov    0x6(%esp),%edi
		movswl %dx,%ecx
		sar    $0x10,%edi
		movswl %bx,%esi
		lea    (%edi,%edi,2),%edi
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    (%esp,%edi,1),%al
		xor    %edx,%edx
		call   func_5eb4a
		mov    %esi,%eax
		call   func_5ec44
		xor    %eax,%eax
		mov    $0x1,%edx
		mov    0x1(%esp,%edi,1),%al
		mov    %ecx,%ebx
		call   func_5eb4a
		mov    %esi,%eax
		call   func_5ec44
		xor    %eax,%eax
		mov    $0x2,%edx
		mov    0x2(%esp,%edi,1),%al
		mov    %ecx,%ebx
		call   func_5eb4a
		mov    %esi,%eax
		call   func_5ec44
		mov    $0xaf,%ebx
		mov    0x8(%esp),%esi
		mov    data_f0ba2,%dx
		inc    %esi
		sub    $0x28,%edx
		mov    %si,0x8(%esp)
		cmp    $0x2,%si
		jl     jump_44e32
	jump_44ea8:
		add    $0xc,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_44eb0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    $0xc4,%edx
		mov    $0x1,%eax
		mov    data_f82f4,%ebx
		call   func_5f3fd
		call   func_1a11c
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		call   func_19d47
		div    %ebx
		mov    $0x9b,%edi
		lea    0x1(%edx),%eax
		mov    $0xad,%esi
		shr    %eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		jmp    jump_44f22
	jump_44ef5:
		mov    $0xc4,%edx
		mov    data_f8300,%ebx
		movswl %di,%eax
		call   func_5f3fd
		mov    $0xc4,%edx
		mov    data_f830c,%ebx
		movswl %si,%eax
		inc    %ecx
		call   func_5f3fd
		sub    $0x8,%edi
		add    $0x8,%esi
	jump_44f22:
		cmp    (%esp),%cx
		jl     jump_44ef5
	jump_44f28:
		add    $0x4,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_44f30:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x300,%ecx
		mov    $data_fdc68,%esi
		mov    $data_12824c,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x3,%dx
		jb     jump_44f71
		jbe    jump_44fde
		cmp    $0x4,%dx
		je     jump_45046
		jmp    jump_450ac
	jump_44f71:
		cmp    $0x1,%dx
		jb     jump_450ac
		mov    $0x64,%esi
		xor    %ecx,%ecx
	jump_44f82:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		xor    %edx,%edx
		mov    data_12824c(%ebx),%dl
		imul   $0x50,%edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   $0x50,%edx,%edx
		mov    %al,data_12824c(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   $0x50,%edx,%edx
		mov    %al,data_12824d(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		inc    %ecx
		mov    %al,data_12824e(%ebx)
		cmp    $0x100,%cx
		jge    jump_450ac
		jmp    jump_44f82
	jump_44fde:
		mov    $0x64,%esi
		xor    %ecx,%ecx
	jump_44fe5:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		xor    %edx,%edx
		mov    data_12824c(%ebx),%dl
		imul   $0x50,%edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   $0x50,%edx,%edx
		add    $0xc,%eax
		mov    %al,data_12824c(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   $0x50,%edx,%edx
		add    $0xc,%eax
		mov    %al,data_12824d(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		add    $0xc,%eax
		inc    %ecx
		mov    %al,data_12824e(%ebx)
		cmp    $0x100,%cx
		jge    jump_450ac
		jmp    jump_44fe5
	jump_45046:
		mov    $0x64,%esi
		xor    %ecx,%ecx
	jump_4504d:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		xor    %edx,%edx
		mov    data_12824c(%ebx),%dl
		imul   $0x32,%edx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   $0x32,%edx,%edx
		add    $0x15,%eax
		mov    %al,data_12824c(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   $0x32,%edx,%edx
		add    $0x15,%eax
		mov    %al,data_12824d(%ebx)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		add    $0x15,%eax
		inc    %ecx
		mov    %al,data_12824e(%ebx)
		cmp    $0x100,%cx
		jl     jump_4504d
	jump_450ac:
		push   $0x2
		mov    $data_12824c,%ecx
		mov    $data_f9188,%ebx
		mov    $0x100,%edx
		mov    $data_12824c,%esi
		xor    %eax,%eax
		mov    $data_f9188,%edi
		call   func_49a3e
		mov    $0x300,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   func_5f9ae
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_450f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_fa8ae,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    $0x9,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,data_fa8b0
		pop    %edx
		pop    %ebx
		ret

vtable_4511e:
		.long   func_45166
		.long   func_45160
		.long   func_451c8
		.long   func_451d0


/*----------------------------------------------------------------*/
func_4512e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    data_fa8b0,%ax
		add    %eax,%eax
		mov    %ax,0x18(%esp)
		mov    data_ba84d,%al
		dec    %al
		cmp    $0x3,%al
		ja     jump_45427
		and    $0xff,%eax
		jmp    *vtable_4511e(,%eax,4)


/*----------------------------------------------------------------*/
func_45160:
/*----------------------------------------------------------------*/
		addw   $0x12,0x18(%esp)


/*----------------------------------------------------------------*/
func_45166:
/*----------------------------------------------------------------*/
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		mov    $0xc,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    data_7001a,%eax
		shl    $0x3,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		lea    (%edx,%ebx,1),%eax
		mov    %ax,0x2c(%esp)
		mov    0x18(%esp),%eax
		mov    0x2c(%esp),%esi
		inc    %eax
		cmp    $0x90,%si
		jl     jump_451d8
		mov    0x18(%esp),%edx
		mov    %dx,0x28(%esp)
		mov    %esi,%edx
		neg    %edx
		add    $0x90,%edx
		mov    %ax,0x18(%esp)
		mov    %dx,0x2c(%esp)
		jmp    jump_451e6


/*----------------------------------------------------------------*/
func_451c8:
/*----------------------------------------------------------------*/
		addw   $0x24,0x18(%esp)
		jmp    func_45166


/*----------------------------------------------------------------*/
func_451d0:
/*----------------------------------------------------------------*/
		addw   $0x36,0x18(%esp)
		jmp    func_45166
	jump_451d8:
		mov    %esi,%edi
		neg    %edi
		mov    %ax,0x28(%esp)
		mov    %di,0x2c(%esp)
	jump_451e6:
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		mov    $0xc,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x2c(%esp),%ebx
		mov    %edx,%edi
		mov    data_ba836,%eax
		shl    $0x4,%edi
		sar    $0x10,%eax
		add    $0x10,%ebx
		sub    %eax,%edi
		mov    %bx,0x2c(%esp)
		cmp    $0x60,%di
		jle    jump_4522f
		neg    %edi
		mov    %edi,%eax
		add    $0xc0,%eax
		add    $0x60,%edi
	jump_45228:
		mov    %ax,0x1c(%esp)
		jmp    jump_45251
	jump_4522f:
		jne    jump_4523a
		xor    %esi,%esi
		mov    %si,0x1c(%esp)
		jmp    jump_45251
	jump_4523a:
		test   %di,%di
		jle    jump_4524a
		neg    %edi
		mov    %edi,%eax
		add    $0x60,%eax
		jmp    jump_45228
	jump_4524a:
		xor    %ecx,%ecx
		mov    %cx,0x1c(%esp)
	jump_45251:
		addw   $0x4,0x1c(%esp)
		mov    0x2c(%esp),%eax
		add    $0x120,%eax
		mov    %ax,0x14(%esp)
		mov    0x2c(%esp),%eax
		add    $0x4,%edi
		add    $0x90,%eax
		mov    0x1c(%esp),%edx
		mov    %ax,0x10(%esp)
		cmp    $0x4,%dx
		je     jump_453a6
		mov    %edi,%eax
		neg    %eax
		add    $0x4,%eax
		movswl %ax,%ebp
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%esi
		movswl %di,%edi
		shl    $0x2,%esi
		mov    %edi,%edx
		sub    %eax,%esi
		mov    0x2a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x10,%eax
		mov    data_f8730(,%esi,4),%ebx
		mov    %eax,0x4(%esp)
		call   func_5f42d
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    %eax,(%esp)
		mov    data_f8730(%eax),%ebx
		mov    0xe(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x10,%eax
		mov    %edi,%edx
		mov    %eax,0xc(%esp)
		call   func_5f42d
		mov    0x12(%esp),%eax
		mov    %ebp,%ecx
		mov    %edi,%edx
		sar    $0x10,%eax
		mov    data_f8730(,%esi,4),%ebx
		mov    %eax,0x8(%esp)
		call   func_5f42d
		mov    0x1a(%esp),%ecx
		mov    0x4(%esp),%eax
		sar    $0x10,%ecx
		mov    data_f8730(,%esi,4),%ebx
		mov    %ecx,%edx
		call   func_5f3fd
		mov    (%esp),%ebx
		mov    0xc(%esp),%eax
		mov    %ecx,%edx
		mov    data_f8730(%ebx),%ebx
		call   func_5f3fd
		mov    0x8(%esp),%eax
		mov    %ecx,%edx
		mov    data_f8730(,%esi,4),%ebx
		call   func_5f3fd
		mov    0x1c(%esp),%ecx
		mov    $0x60,%eax
		mov    %ecx,%edi
		mov    data_f8730(,%esi,4),%ebx
		add    $0x60,%edi
		sub    %ecx,%eax
		mov    %di,0x1c(%esp)
		movswl %ax,%ebp
		mov    0x1a(%esp),%edi
		mov    0x4(%esp),%eax
		sar    $0x10,%edi
		mov    %ebp,%ecx
		mov    %edi,%edx
		call   func_5f4af
		mov    (%esp),%ebx
		mov    0xc(%esp),%eax
		mov    %ebp,%ecx
		mov    %edi,%edx
		mov    data_f8730(%ebx),%ebx
		call   func_5f4af
		mov    0x8(%esp),%eax
		mov    %ebp,%ecx
		mov    %edi,%edx
		mov    data_f8730(,%esi,4),%ebx
		call   func_5f4af
		jmp    jump_45427
	jump_453a6:
		mov    %dx,0x30(%esp)
		mov    %ax,0x24(%esp)
		mov    0x14(%esp),%eax
		xor    %edi,%edi
		mov    %ax,0x20(%esp)
	jump_453bb:
		mov    0x16(%esp),%esi
		sar    $0x10,%esi
		imul   $0xc,%esi,%esi
		mov    0x2e(%esp),%ecx
		mov    0x2a(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    %ecx,%edx
		mov    data_f8730(%esi),%ebx
		call   func_5f3fd
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    data_f8730(%eax),%ebx
		mov    0x22(%esp),%eax
		mov    %ecx,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    0x1e(%esp),%eax
		mov    %ecx,%edx
		mov    data_f8730(%esi),%ebx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    0x30(%esp),%eax
		add    $0x60,%eax
		inc    %edi
		mov    %ax,0x30(%esp)
		cmp    $0x2,%di
		jl     jump_453bb
	jump_45427:
		add    $0x34,%esp
	jump_4542a:
		pop    %ebp
	jump_4542b:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45431:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		call   func_44df3
		call   func_44eb0
		mov    $0xc8,%ecx
		xor    %eax,%eax
		mov    $0x10,%ebx
		call   func_5eb4a
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_5edde
		mov    $0xc8,%ecx
		mov    $0x140,%ebx
		mov    $0x130,%eax
		xor    %edx,%edx
		call   func_5edde
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_45472:
		call   func_19fa3
		cmp    $0x2,%ax
		jne    jump_4548f
		mov    $0xaa,%edx
		mov    $0x28,%eax
		mov    data_d663c,%ebx
		jmp    jump_454aa
	jump_4548f:
		call   func_19fa3
		cmp    $0x3,%ax
		jne    jump_454af
		mov    $0xaa,%edx
		mov    $0x28,%eax
		mov    data_d6648,%ebx
	jump_454aa:
		call   func_5f3fd
	jump_454af:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_454b3:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		call   func_10aeb
		cmpw   $0x0,data_fa8bc
		je     jump_454cb
		call   func_1547f
	jump_454cb:
		call   func_12bee
		call   func_4512e


/*----------------------------------------------------------------*/
func_454d5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x0,data_fa8b6
		je     jump_45513
		mov    $0xc4,%ecx
		xor    %eax,%eax
		mov    $0x130,%ebx
		call   func_6104a
		mov    $0x1,%eax
		mov    $0x4,%edx
		call   func_5ecc7
		mov    $0x10,%eax
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
	jump_45513:
		call   func_12161
		call   func_44dcc
		cmpw   $0x0,data_fa8ba
		je     jump_4552c
		call   func_13546
	jump_4552c:
		call   func_45431
		mov    data_75008,%cx
		cmp    $0x1,%cx
		jne    jump_454af
		call   func_19fa3
		cmp    %cx,%ax
		jne    jump_45472
		call   func_45bbf
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45559:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_45577:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0x8,%esp
		movswl %dx,%edx
		cwtl
		mov    %esp,%esi
		call   func_454b3
		call   func_5d22e
		call   func_5d41e
		call   func_5e9e8
		call   func_5d570
		add    $0x8,%esp
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4559f:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5046b
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_455bd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    data_7500a,%bx
		mov    data_7500c,%cx
		sub    $0x26,%ebx
		sub    $0x1d,%ecx
		cmp    %ax,%bx
		jg     jump_455f9
		movswl %bx,%ebx
		movswl %ax,%esi
		add    $0x4c,%ebx
		cmp    %esi,%ebx
		jl     jump_455f9
		cmp    %dx,%cx
		jg     jump_455f9
		movswl %cx,%ebx
		movswl %dx,%ecx
		add    $0x3e,%ebx
		cmp    %ecx,%ebx
		jge    jump_45600
	jump_455f9:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_45600:
		cmp    $0x5a,%dx
		jge    jump_4560d
		mov    $0x2,%eax
		jmp    jump_4561c
	jump_4560d:
		cmp    $0xa0,%ax
		jle    jump_45617
		xor    %eax,%eax
		jmp    jump_4561c
	jump_45617:
		mov    $0x1,%eax
	jump_4561c:
		cmp    $0x1,%ax
		jb     jump_4562c
		jbe    jump_4564a
		cmp    $0x2,%ax
		je     jump_45664
		jmp    jump_4567c
	jump_4562c:
		test   %ax,%ax
		jne    jump_4567c
		mov    $0x4b,%edi
		mov    $0x26,%eax
		mov    %di,data_7500a
		mov    %ax,data_7500c
		jmp    jump_4567c
	jump_4564a:
		mov    $0xfa,%ecx
		mov    $0x26,%esi
		mov    %cx,data_7500a
		mov    %si,data_7500c
		jmp    jump_4567c
	jump_45664:
		mov    $0xfa,%edx
		mov    $0x9b,%ebx
		mov    %dx,data_7500a
		mov    %bx,data_7500c
	jump_4567c:
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45686:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		cmpw   $0x0,data_7500e
		je     jump_44ea8
		xor    %eax,%eax
		call   func_6104a
		mov    $0x1,%eax
		call   func_5ecc7
		mov    data_7500c,%ax
		mov    $0x16,%ecx
		sub    $0x6,%eax
		mov    %ecx,%ebx
		movswl %ax,%edx
		mov    data_75008,%eax
		push   $0x0
		sar    $0x10,%eax
		call   func_6075a
		xor    %eax,%eax
		call   func_5ecc7
		cmp    $0x12c,%si
		jle    jump_456e8
		movl   $0x20,(%esp)
		jmp    jump_4570e
	jump_456e8:
		cmp    $0xc8,%si
		jle    jump_456f8
		movl   $0x50,(%esp)
		jmp    jump_4570e
	jump_456f8:
		cmp    $0x64,%si
		jle    jump_45707
		movl   $0x30,(%esp)
		jmp    jump_4570e
	jump_45707:
		movl   $0x10,(%esp)
	jump_4570e:
		movswl %si,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%ebx
		mov    $0x5,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x5,%esi
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %ecx,%ecx
		je     jump_45743
		inc    %eax
	jump_45743:
		test   %ax,%ax
		jne    jump_4574d
		mov    $0x14,%eax
	jump_4574d:
		test   %ax,%ax
		jle    jump_45762
		cmp    $0x2,%ax
		jg     jump_45762
		movl   $0x3,0x8(%esp)
		jmp    jump_45788
	jump_45762:
		cmp    $0xa,%ax
		jg     jump_45772
		movl   $0x2,0x8(%esp)
		jmp    jump_45788
	jump_45772:
		cmp    $0x12,%ax
		jg     jump_45782
		movl   $0x1,0x8(%esp)
		jmp    jump_45788
	jump_45782:
		xor    %edx,%edx
		mov    %edx,0x8(%esp)
	jump_45788:
		mov    (%esp),%edx
		mov    0x8(%esp),%edi
		movswl %ax,%ebx
		add    %edi,%edx
		mov    data_7500c,%ax
		movswl %dx,%edx
		sub    $0x6,%eax
		push   %edx
		movswl %ax,%edx
		mov    data_75008,%eax
		mov    %ebx,%ecx
		sar    $0x10,%eax
		call   func_6075a
		mov    %edi,%eax
		inc    %eax
		mov    (%esp),%edx
		mov    %eax,0x8(%esp)
		mov    %eax,%edi
		mov    %eax,%esi
		shl    $0x3,%edi
		mov    %edx,%eax
		add    %edx,%esi
		neg    %edi
		add    $0x4,%eax
		add    $0x1a,%edi
		mov    %eax,0x4(%esp)
		jmp    jump_45807
	jump_457d8:
		movswl %si,%eax
		push   %eax
		mov    data_7500c,%ax
		sub    $0x6,%eax
		movswl %di,%ebx
		movswl %ax,%edx
		mov    data_75008,%eax
		mov    %ebx,%ecx
		sar    $0x10,%eax
		call   func_6075a
		mov    0x8(%esp),%ecx
		inc    %esi
		inc    %ecx
		sub    $0x8,%edi
		mov    %ecx,0x8(%esp)
	jump_45807:
		cmp    0x4(%esp),%si
		jl     jump_457d8
		mov    data_fa6ec,%edx
		mov    data_7500a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    data_fa6ea,%ecx
		add    %eax,%edx
		mov    data_75008,%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    data_fa6f0,%ebx
		add    %ecx,%eax
		call   func_5ee51
		jmp    jump_44ea8


/*----------------------------------------------------------------*/
func_45844:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpw   $0x0,data_7500e
		je     jump_4542a
		mov    data_ba84e,%ah
		cmp    $0x4,%ah
		je     jump_4586a
		cmp    $0x5,%ah
		jne    jump_4587f
	jump_4586a:
		mov    $0xa,%ebx
		xor    %edx,%edx
		call   func_19d47
		div    %ebx
		mov    %edx,%edi
		movswl %dx,%edx
		jmp    jump_45897
	jump_4587f:
		mov    $0x384,%ebx
		xor    %edx,%edx
		call   func_19d47
		div    %ebx
		mov    %edx,%edi
		movswl %dx,%edx
		mov    $0x258,%ebx
	jump_45897:
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmp    $0x8,%si
		jge    jump_458c1
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		movswl %cx,%ecx
		add    $0xc,%eax
		jmp    jump_458da
	jump_458c1:
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		movswl %cx,%ecx
		sub    $0xc,%eax
	jump_458da:
		add    %eax,%ecx
		mov    data_ba84e,%dh
		cmp    $0x4,%dh
		je     jump_458ec
		cmp    $0x5,%dh
		jne    jump_458f1
	jump_458ec:
		imul   $0x6,%edi,%edi
		jmp    jump_4590e
	jump_458f1:
		movswl %di,%edx
		mov    $0x258,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edi
	jump_4590e:
		movswl %si,%edx
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		movswl %di,%edi
		add    %eax,%eax
		add    %eax,%edi
		cmp    $0x3c,%di
		jle    jump_45935
		inc    %ecx
		sub    $0x3c,%edi
	jump_45935:
		mov    data_fa71c,%eax
		mov    data_7500a,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    data_75008,%ebp
		add    %eax,%edx
		mov    data_fa71a,%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		mov    data_fa720,%ebx
		add    %ebp,%eax
		call   func_5ee51
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		add    $0x5,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_7500a,%esi
		sub    %edx,%eax
		sar    $0x10,%esi
		mov    data_fa6ec(,%eax,4),%edx
		mov    data_fa6f0(,%eax,4),%ebx
		sar    $0x10,%edx
		mov    data_fa6ea(,%eax,4),%eax
		add    %esi,%edx
		mov    data_75008,%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		add    %esi,%eax
		call   func_5ee51
		xor    %edx,%edx
		call   func_197bb
		mov    %ax,%dx
		mov    $0xdc,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		inc    %edx
		push   %edx
		xor    %edx,%edx
		call   func_197bb
		mov    %ax,%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x4b7,%eax
		push   %eax
		push   $data_77d28
		mov    data_7500a,%eax
		push   $0x1
		sar    $0x10,%eax
		push   $0x1
		dec    %eax
		push   %eax
		mov    data_75008,%eax
		sar    $0x10,%eax
		sub    $0x15,%eax
		push   %eax
		call   func_60944
		add    $0x1c,%esp
		movswl %di,%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		push   $data_77d32
		mov    data_7500a,%eax
		push   $0x18
		sar    $0x10,%eax
		push   $0x1
		add    $0xa,%eax
		push   %eax
		mov    data_75008,%eax
		sar    $0x10,%eax
		sub    $0xf,%eax
		push   %eax
		call   func_60944
		add    $0x1c,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_45a41:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xa,%eax
		xor    %edx,%edx
		mov    $0x1,%ecx
		mov    %dx,data_7500e
		call   func_1033b
	jump_45a5d:
		call   func_499e4
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		mov    data_7500a,%esi
		mov    data_fa6ec(%eax),%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		mov    data_fa6f0(%eax),%ebx
		add    %esi,%edx
		mov    data_fa6ea(%eax),%esi
		mov    data_75008,%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		add    %esi,%eax
		inc    %ecx
		call   func_5ee51
		call   func_5e9e8
		cmp    $0x4,%cx
		jl     jump_45a5d
	jump_45abc:
		movw   $0x1,data_7500e
		call   func_45559
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45acf:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xa,%eax
		xor    %edx,%edx
		mov    $0x3,%ecx
		mov    %dx,data_7500e
		call   func_1033b
	jump_45aeb:
		call   func_499e4
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		mov    data_7500a,%esi
		mov    data_fa6ec(%eax),%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		mov    data_fa6f0(%eax),%ebx
		add    %esi,%edx
		mov    data_fa6ea(%eax),%esi
		mov    data_75008,%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		add    %esi,%eax
		dec    %ecx
		call   func_5ee51
		call   func_5e9e8
		test   %cx,%cx
		jg     jump_45aeb
		jmp    jump_45abc


/*----------------------------------------------------------------*/
func_45b4e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		test   %eax,%eax
		je     jump_45b5c
		movw   $0x0,0x57(%eax)
	jump_45b5c:
		call   func_1a0e9
		movswl %ax,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		cmp    $0x5a,%edx
		jge    jump_45bb7
		mov    $0xfffffffb,%eax
		call   func_1a0c6
		add    $0x5,%ebx
		jmp    jump_45bb7
	jump_45b84:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmp    $0x5,%bx
		jle    jump_45ba7
		mov    $0x5,%eax
		jmp    jump_45baa
	jump_45ba7:
		movswl %bx,%eax
	jump_45baa:
		call   func_1a0c6
		call   func_5e9e8
		sub    $0x5,%ebx
	jump_45bb7:
		test   %bx,%bx
		jg     jump_45b84
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45bbf:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $0xaa,%edx
		mov    $0x28,%eax
		mov    data_d6630,%ebx
		call   func_5f3fd
		call   func_1a110
		cmp    $0x1,%al
		jne    jump_45bed
		call   func_197c2
		cwtl
		call   func_45844
		pop    %edx
		pop    %ebx
		ret
	jump_45bed:
		call   func_1a0e9
		cwtl
		call   func_45686
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_45bfb:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		test   %eax,%eax
		je     jump_45cc4
		movb   $0x0,0x66(%eax)
		mov    0x66(%eax),%al
		mov    %al,0x65(%esi)
		movsbl (%esi),%eax
		call   func_10971
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    %eax,(%esp)
		xor    %eax,%eax
	jump_45c2f:
		movswl %cx,%edx
		lea    (%edx,%edx,4),%edx
		movswl %ax,%ebx
		inc    %eax
		movb   $0x0,data_f9488(%edx,%ebx,1)
		cmp    $0x5,%ax
		jl     jump_45c2f
		test   %edi,%edi
		jle    jump_45ca4
		mov    $0x64,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		cmp    $0x3e7,%ax
		jle    jump_45c65
		xor    %eax,%eax
		jmp    jump_45c84
	jump_45c65:
		cmp    $0x63,%ax
		jle    jump_45c72
		mov    $0x1,%eax
		jmp    jump_45c84
	jump_45c72:
		cmp    $0x9,%ax
		jle    jump_45c7f
		mov    $0x2,%eax
		jmp    jump_45c84
	jump_45c7f:
		mov    $0x3,%eax
	jump_45c84:
		movswl %cx,%esi
		mov    %esi,%edx
		shl    $0x2,%edx
		add    %esi,%edx
		cwtl
		add    $data_f9488,%edx
		add    %eax,%edx
		movswl %bx,%eax
		mov    $0xa,%ebx
		call   func_itoa_
	jump_45ca4:
		mov    (%esp),%esi
		xor    %eax,%eax
		add    $0xa,%esi
	jump_45cac:
		movswl %cx,%edx
		imul   $0xa,%edx,%edx
		movswl %ax,%ebx
		inc    %eax
		mov    %si,data_f9708(%edx,%ebx,2)
		cmp    $0x5,%ax
		jl     jump_45cac
	jump_45cc4:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_45ccb:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    %dx,0x4(%esp)
		mov    %cx,(%esp)
		mov    %ebx,%edx
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%esi
		movsbl 0x1(%edi),%eax
		mov    0x2(%esp),%edi
		sar    $0x10,%edi
		call   func_10988
		mov    %edi,%eax
		mov    %edi,%ebx
		shl    $0x2,%eax
		shl    $0x2,%ebx
		add    %edi,%eax
		add    %edi,%ebx
		mov    data_f948b(%eax),%cl
		add    %ebx,%ebx
		test   %cl,%cl
		je     jump_45e21
		cmp    $0x5,%dx
		jge    jump_45d25
		subw   $0x2,data_f9708(%ebx)
		jmp    jump_45d6e
	jump_45d25:
		cmp    $0x14,%dx
		jl     jump_45d35
		addw   $0x2,data_f970e(%ebx)
		jmp    jump_45d6e
	jump_45d35:
		movswl %dx,%edx
		sub    $0x5,%edx
		mov    $0x5,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		cwtl
		mov    data_f9708(%ebx,%eax,2),%dx
		mov    data_f970a(%ebx,%eax,2),%cx
		add    $0x2,%edx
		sub    $0x2,%ecx
		mov    %dx,data_f9708(%ebx,%eax,2)
		mov    %cx,data_f970a(%ebx,%eax,2)
	jump_45d6e:
		mov    %esi,%eax
		sub    $0x10,%eax
		cmp    $0x120,%ax
		jae    jump_45ebc
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_f9708(,%eax,2),%ax
		sub    $0x5,%eax
		cmp    $0xb2,%ax
		jae    jump_45ebc
		xor    %ecx,%ecx
	jump_45da2:
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		lea    (%edx,%edx,4),%ebx
		imul   $0xa,%edx,%edx
		movswl %cx,%eax
		add    %eax,%ebx
		mov    data_f9485(%ebx),%edi
		sar    $0x18,%edi
		add    %eax,%eax
		push   %edi
		add    %eax,%edx
		push   $data_77d3c
		mov    data_f9706(%edx),%eax
		push   $0x0
		sar    $0x10,%eax
		push   $0x1
		inc    %eax
		movswl %si,%edi
		push   %eax
		lea    0x1(%edi),%eax
		push   %eax
		call   func_60944
		mov    data_f9485(%ebx),%eax
		add    $0x18,%esp
		sar    $0x18,%eax
		push   %eax
		mov    0x2(%esp),%eax
		push   $data_77d3c
		sar    $0x10,%eax
		push   %eax
		mov    data_f9706(%edx),%eax
		push   $0x1
		sar    $0x10,%eax
		push   %eax
		push   %edi
		inc    %ecx
		add    $0x6,%esi
		call   func_60944
		add    $0x18,%esp
		cmp    $0x4,%cx
		jge    jump_45ebc
		jmp    jump_45da2
	jump_45e21:
		test   $0x1,%dl
		je     jump_45e2f
		mov    data_f970a(%ebx),%ax
		jmp    jump_45e46
	jump_45e2f:
		movswl %dx,%eax
		mov    $0x14,%edx
		sub    %eax,%edx
		mov    data_f9706(%ebx),%eax
		sar    %edx
		sar    $0x10,%eax
		sub    %edx,%eax
	jump_45e46:
		mov    %ax,data_f9708(%ebx)
		mov    %esi,%eax
		sub    $0x10,%eax
		cmp    $0x120,%ax
		jae    jump_45ebc
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    data_f9708(%edx),%ax
		sub    $0x5,%eax
		cmp    $0xb2,%ax
		jae    jump_45ebc
		push   $data_77d3f
		mov    data_f9706(%edx),%eax
		push   $0x0
		sar    $0x10,%eax
		push   $0x0
		movswl %si,%ebx
		push   %eax
		lea    0x1(%ebx),%eax
		push   %eax
		call   func_60944
		add    $0x14,%esp
		mov    -0x2(%esp),%eax
		push   $data_77d3f
		sar    $0x10,%eax
		push   %eax
		mov    data_f9706(%edx),%eax
		push   $0x0
		sar    $0x10,%eax
		push   %eax
		push   %ebx
		call   func_60944
		add    $0x14,%esp
	jump_45ebc:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		ret

vtable_45ec2:
		.long   func_45f01
		.long   func_45f0b
		.long   func_45f15
		.long   func_45f1f


/*----------------------------------------------------------------*/
func_45ed2:
/*----------------------------------------------------------------*/
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		xor    %ebx,%ebx
		mov    %bx,data_f9c0a(%eax)
		mov    %bx,data_f9c08(%eax)
		cmp    $0x3,%dl
		ja     jump_45f28
		and    $0xff,%edx
		jmp    *vtable_45ec2(,%edx,4)


/*----------------------------------------------------------------*/
func_45f01:
/*----------------------------------------------------------------*/
		movw   $0x5,data_f9c0a(%eax)
		ret


/*----------------------------------------------------------------*/
func_45f0b:
/*----------------------------------------------------------------*/
		movw   $0xfffa,data_f9c08(%eax)
		ret


/*----------------------------------------------------------------*/
func_45f15:
/*----------------------------------------------------------------*/
		movw   $0xfffb,data_f9c0a(%eax)
		ret


/*----------------------------------------------------------------*/
func_45f1f:
/*----------------------------------------------------------------*/
		movw   $0x6,data_f9c08(%eax)
	jump_45f28:
		ret


/*----------------------------------------------------------------*/
func_45f29:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%eax
		add    %edx,%eax
		cwtl
		call   func_499bd
		cmp    %ax,%bx
		jne    jump_45f9d
		mov    0x5c(%ecx),%ah
		cmp    $0x7,%ah
		jb     jump_45f4e
		cmp    $0x1f,%ah
		jbe    jump_45f5b
	jump_45f4e:
		mov    0x5c(%ecx),%ah
		cmp    $0x33,%ah
		jb     jump_45f65
		cmp    $0x41,%ah
		ja     jump_45f65
	jump_45f5b:
		mov    $0x18,%eax
		call   func_4f4cd
	jump_45f65:
		mov    0x11(%ecx),%ah
		cmp    $0x3f,%ah
		jb     jump_45f72
		cmp    $0x44,%ah
		jbe    jump_45f7a
	jump_45f72:
		mov    0x11(%ecx),%ah
		cmp    $0x52,%ah
		jne    jump_45f81
	jump_45f7a:
		mov    $0x21,%eax
		jmp    jump_45f98
	jump_45f81:
		cmp    $0x3f,%ah
		jae    jump_45f9d
		cmpb   $0x1,0xd(%ecx)
		jne    jump_45f93
		mov    $0x17,%eax
		jmp    jump_45f98
	jump_45f93:
		mov    $0x16,%eax
	jump_45f98:
		call   func_4f4cd
	jump_45f9d:
		test   $0x1,%bl
		je     jump_46051
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    data_f9c08(%eax),%bl
		sub    %bl,0x65(%ecx)
		mov    data_f9c0a(%eax),%bl
		sub    %bl,0x66(%ecx)
		mov    data_f9c08(%eax),%bx
		test   %bx,%bx
		jle    jump_45fda
		dec    %ebx
		mov    %bx,data_f9c08(%eax)
		jmp    jump_45fe6
	jump_45fda:
		jge    jump_45fe6
		mov    %ebx,%edi
		inc    %edi
		mov    %di,data_f9c08(%eax)
	jump_45fe6:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    data_f9c0a(%eax),%si
		test   %si,%si
		jle    jump_46008
		dec    %esi
		mov    %si,data_f9c0a(%eax)
		jmp    jump_46014
	jump_46008:
		jge    jump_46014
		mov    %esi,%ebx
		inc    %ebx
		mov    %bx,data_f9c0a(%eax)
	jump_46014:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    data_f9c08(%eax),%dl
		sub    %dl,0x65(%ecx)
		mov    0x66(%ecx),%bl
		mov    data_f9c0a(%eax),%dl
		sub    %dl,%bl
		mov    %bl,0x66(%ecx)
		cmpw   $0x0,data_f9c08(%eax)
		jne    jump_46078
		cmpw   $0x0,data_f9c0a(%eax)
		jne    jump_46078
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_46051:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    data_f9c08(,%eax,2),%dl
		add    %dl,%dl
		add    %dl,0x65(%ecx)
		mov    data_f9c0a(,%eax,2),%al
		mov    0x66(%ecx),%bl
		add    %al,%al
		add    %al,%bl
		mov    %bl,0x66(%ecx)
	jump_46078:
		mov    %ecx,%eax
		call   func_1214f
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_4608a:
		.long   func_460cc
		.long   func_460db
		.long   func_460ea
		.long   func_460f9


/*----------------------------------------------------------------*/
func_4609a:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		xor    %ebx,%ebx
		mov    %bx,data_f9c0a(%eax)
		mov    %bx,data_f9c08(%eax)
		cmp    $0x3,%dl
		ja     jump_46106
		and    $0xff,%edx
		jmp    *vtable_4608a(,%edx,4)


/*----------------------------------------------------------------*/
func_460cc:
/*----------------------------------------------------------------*/
		movw   $0x3,data_f9c0a(%eax)
		movb   $0x2,0x63(%ecx)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_460db:
/*----------------------------------------------------------------*/
		movw   $0xfffd,data_f9c08(%eax)
		movb   $0x3,0x63(%ecx)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_460ea:
/*----------------------------------------------------------------*/
		movw   $0xfffd,data_f9c0a(%eax)
		movb   $0x0,0x63(%ecx)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_460f9:
/*----------------------------------------------------------------*/
		movw   $0x3,data_f9c08(%eax)
		movb   $0x1,0x63(%ecx)
	jump_46106:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_46108:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		movswl %dx,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		add    %eax,%eax
		mov    data_f9c08(%eax),%cl
		add    %cl,0x65(%ebx)
		mov    data_f9c0a(%eax),%cl
		add    %cl,0x66(%ebx)
		mov    data_f9c08(%eax),%cx
		test   %cx,%cx
		jle    jump_46142
		dec    %ecx
		mov    %cx,data_f9c08(%eax)
		jmp    jump_4614e
	jump_46142:
		jge    jump_4614e
		mov    %ecx,%edi
		inc    %edi
		mov    %di,data_f9c08(%eax)
	jump_4614e:
		movswl %dx,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		add    %eax,%eax
		mov    data_f9c0a(%eax),%si
		test   %si,%si
		jle    jump_46170
		dec    %esi
		mov    %si,data_f9c0a(%eax)
		jmp    jump_4617c
	jump_46170:
		jge    jump_4617c
		mov    %esi,%ecx
		inc    %ecx
		mov    %cx,data_f9c0a(%eax)
	jump_4617c:
		mov    %ebx,%eax
		movswl %dx,%ebx
		call   func_1214f
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		cmpw   $0x0,data_f9c08(%eax)
		jne    jump_461aa
		cmpw   $0x0,data_f9c0a(%eax)
		jne    jump_461aa
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_461aa:
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_461b6:
		.long   func_461fe
		.long   func_4623e
		.long   func_4621e
		.long   func_4625e


/*----------------------------------------------------------------*/
func_461c6:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		xor    %ebx,%ebx
		mov    %bx,data_f9c0a(%eax)
		mov    %bx,data_f9c08(%eax)
		cmp    $0x3,%dl
		ja     jump_4627a
		and    $0xff,%edx
		jmp    *vtable_461b6(,%edx,4)


/*----------------------------------------------------------------*/
func_461fe:
/*----------------------------------------------------------------*/
		mov    $0x4,%edx
		mov    $0x8,%ebx
		mov    %dx,data_f9c08(%eax)
		mov    %bx,data_f9c0a(%eax)
		movb   $0x2,0x63(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4621e:
/*----------------------------------------------------------------*/
		mov    $0xfffffffc,%edx
		mov    $0xfffffff8,%ebx
		mov    %dx,data_f9c08(%eax)
		mov    %bx,data_f9c0a(%eax)
		movb   $0x0,0x63(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4623e:
/*----------------------------------------------------------------*/
		mov    $0xfffffff8,%esi
		mov    $0x4,%edi
		mov    %si,data_f9c08(%eax)
		mov    %di,data_f9c0a(%eax)
		movb   $0x3,0x63(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4625e:
/*----------------------------------------------------------------*/
		mov    $0x8,%esi
		mov    $0xfffffffc,%edi
		mov    %si,data_f9c08(%eax)
		mov    %di,data_f9c0a(%eax)
		movb   $0x1,0x63(%ecx)
	jump_4627a:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4627e:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_f9c08(,%eax,2),%dl
		mov    %dl,0x65(%ebx)
		mov    data_f9c0a(,%eax,2),%al
		movb   $0x2,0x64(%ebx)
		mov    %al,0x66(%ebx)
		xor    %eax,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_462a7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x48(%eax),%eax
		add    %edx,%eax
		mov    0x4c(%ebx),%edx
		cmp    %edx,%eax
		jle    jump_462be
		mov    %edx,%ecx
		sub    0x48(%ebx),%ecx
	jump_462be:
		cmpb   $0x3,data_ba84d
		je     jump_462d0
		cmpb   $0x3,data_ba84e
		jne    jump_462dd
	jump_462d0:
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ecx
	jump_462dd:
		cmp    $0x64,%ecx
		jl     jump_46356
		mov    $0x3,%eax
		call   func_1033b
		call   func_4a321
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_49fe1
		jmp    jump_4633e
	jump_46303:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_4a106
		call   func_5e9e8
		cmp    $0x64,%ecx
		jle    jump_4632e
		addl   $0x64,0x48(%ebx)
		jmp    jump_46331
	jump_4632e:
		add    %ecx,0x48(%ebx)
	jump_46331:
		call   func_4a210
		call   func_499e4
		sub    $0x64,%ecx
	jump_4633e:
		test   %ecx,%ecx
		jg     jump_46303
		call   func_45559
		mov    $0x1e,%eax
		call   func_1033b
		call   func_499e4
	jump_46356:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_46359:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   func_45bfb
		mov    %esi,%eax
		mov    0x60(%esi),%edx
		xor    %ebx,%ebx
		sar    $0x18,%edx
		call   func_45ed2
		mov    $0x3,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_46388:
		mov    -0x2(%esp),%edi
		mov    %esi,%eax
		mov    0xb(%esi),%ecx
		xor    %edx,%edx
		sar    $0x18,%ecx
		sar    $0x10,%edi
		mov    data_70a5f(%ecx),%ecx
		mov    %edi,%ebx
		sar    $0x18,%ecx
		call   func_45ccb
		mov    %edi,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_45f29
		call   func_5e9e8
		call   func_499e4
		mov    (%esp),%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ebx
		call   func_454b3
		mov    %bx,(%esp)
		cmp    $0x19,%bx
		jl     jump_46388
		mov    $0x20,%eax
		call   func_499da
		mov    %esi,%eax
		call   func_12124
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_463fb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ecx
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    $data_f8a88,%edx
		mov    data_d66b1(,%eax,4),%eax
		call   func_10194
		mov    %eax,%edi
		cmp    $0x100,%ax
		jg     jump_46708
		lea    0x8(%esp),%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   func_135eb
		mov    0x5d(%ecx),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		movsbw data_d66ac(,%eax,4),%ax
		add    %eax,%edx
		mov    %edx,(%esp)
		mov    0x5d(%ecx),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x8(%esp),%ebx
		movsbw data_d66ad(,%eax,4),%ax
		add    %eax,%ebx
		mov    %ebx,0x8(%esp)
		xor    %ebx,%ebx
		jmp    jump_46540
	jump_46490:
		movswl %bx,%edx
		mov    $0x6,%eax
		add    %edx,%edx
		call   func_499bd
		mov    %ax,data_f8d88(%edx)
		mov    $0xc,%eax
		call   func_499bd
		mov    %ax,data_f8b88(%edx)
		mov    $0x4,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_464d0
		addw   $0x4,data_f8d88(%edx)
		jmp    jump_464de
	jump_464d0:
		cmp    $0x2,%ax
		jne    jump_464de
		addw   $0x8,data_f8b88(%edx)
	jump_464de:
		mov    $0x2,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_46502
		movswl %bx,%eax
		mov    data_f8d88(,%eax,2),%dx
		neg    %edx
		mov    %dx,data_f8d88(,%eax,2)
	jump_46502:
		mov    $0x1,%esi
		movswl %bx,%edx
		mov    $0x18,%eax
		mov    %si,data_f8f88(,%edx,2)
		call   func_499bd
		mov    (%esp),%esi
		add    %esi,%eax
		mov    %ax,data_f8328(,%edx,2)
		mov    $0x18,%eax
		call   func_499bd
		add    0x8(%esp),%eax
		inc    %ebx
		mov    %ax,data_f8528(,%edx,2)
	jump_46540:
		cmp    %di,%bx
		jl     jump_46490
		mov    $0x5,%eax
		call   func_1033b
		mov    %ecx,%eax
		mov    $0x4,%esi
		call   func_12124
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   func_44d89
	jump_46568:
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %dl,0x63(%ecx)
		call   func_45559
		call   func_499e4
		cmp    $0xc,%bx
		jne    jump_46593
		mov    $0x1b,%eax
		call   func_4f4cd
	jump_46593:
		inc    %ebx
		cmp    $0x10,%bx
		jl     jump_46568
		call   func_44d81
		mov    %ecx,%ebx
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11ee4
		call   func_45559
		mov    $0x3,%eax
		call   func_1033b
		xor    %eax,%eax
		mov    %eax,0xc(%esp)
		mov    %edi,%eax
		dec    %eax
		mov    %eax,0x4(%esp)
	jump_465c9:
		xor    %esi,%esi
		jmp    jump_46634
	jump_465cd:
		movswl %si,%ecx
		lea    (%ecx,%ecx,1),%ebx
		mov    data_f8328(%ebx),%ax
		sub    $0x10,%eax
		cmp    $0x120,%ax
		jae    jump_46633
		mov    data_f8528(%ebx),%ax
		sub    $0x5,%eax
		cmp    $0xb2,%ax
		jae    jump_46633
		mov    data_f8526(%ebx),%edx
		mov    data_f8326(%ebx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5eb27
		mov    %al,data_f81e0(%ecx)
		xor    %eax,%eax
		mov    data_f8526(%ebx),%edx
		mov    data_f8a88(%ecx),%al
		mov    data_f8326(%ebx),%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   func_5eb1f
	jump_46633:
		inc    %esi
	jump_46634:
		cmp    %di,%si
		jl     jump_465cd
		call   func_5e9e8
		call   func_499e4
		mov    0x4(%esp),%ecx
		jmp    jump_46695
	jump_46649:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    data_f8328(%eax),%dx
		sub    $0x10,%edx
		cmp    $0x120,%dx
		jae    jump_46694
		mov    data_f8528(%eax),%dx
		sub    $0x5,%edx
		cmp    $0xb2,%dx
		jae    jump_46694
		mov    data_f81e0(%ebx),%bl
		and    $0xff,%ebx
		mov    data_f8526(%eax),%edx
		mov    data_f8326(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5eb1f
	jump_46694:
		dec    %ecx
	jump_46695:
		test   %cx,%cx
		jge    jump_46649
		xor    %ebx,%ebx
		jmp    jump_466f0
	jump_4669e:
		movswl %bx,%eax
		mov    data_f8d88(,%eax,2),%dx
		mov    data_f8328(,%eax,2),%cx
		mov    data_f8528(,%eax,2),%si
		add    %edx,%ecx
		mov    data_f8b88(,%eax,2),%dx
		mov    %cx,data_f8328(,%eax,2)
		mov    data_f8b88(,%eax,2),%cx
		sub    %edx,%esi
		mov    data_f8f88(,%eax,2),%dx
		inc    %ebx
		sub    %edx,%ecx
		mov    %si,data_f8528(,%eax,2)
		mov    %cx,data_f8b88(,%eax,2)
	jump_466f0:
		cmp    %di,%bx
		jl     jump_4669e
		mov    0xc(%esp),%edx
		inc    %edx
		mov    %edx,0xc(%esp)
		cmp    $0x1e,%dx
		jl     jump_465c9
	jump_46708:
		add    $0x10,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_46710:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%ebx
		sub    %edx,%eax
		mov    0x60(%esi),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		lea    (%ebx,%eax,1),%edx
		movsbl (%esi),%eax
		call   func_10971
		mov    %eax,%ebx
		add    $0xc,%ebx
		movsbw 0x4(%edx),%ax
		add    %eax,%ebx
		movsbl 0x1(%esi),%eax
		mov    %bx,0x10(%esp)
		call   func_10988
		mov    %eax,%ebx
		sub    $0x2,%ebx
		movsbw 0x5(%edx),%ax
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    0x3(%edx),%cl
		mov    %bx,(%esp)
		xor    %ebx,%ebx
		mov    0x9(%edx),%eax
		mov    0x2(%edx),%bl
		mov    $data_f1ba8,%edx
		call   func_10083
		mov    %eax,%ecx
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		movswl %cx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		movswl %ax,%edx
		mov    %eax,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %esi,%esi
		mov    %ax,0x4(%esp)
		cmp    $0x2,%ax
		jge    jump_467d7
		movw   $0x2,0x4(%esp)
	jump_467d7:
		mov    $0x5,%eax
		mov    $data_f1ba8,%ebp
		call   func_1033b
		mov    0x4(%esp),%eax
		xor    %ecx,%ecx
		add    %edi,%eax
		mov    %ecx,0xc(%esp)
		mov    %eax,0x8(%esp)
	jump_467f6:
		mov    0x8(%esp),%ecx
		jmp    jump_4685d
	jump_467fc:
		movswl %di,%eax
		call   func_499bd
		movswl %ax,%edx
		movswl %si,%eax
		movb   $0xff,data_f1bac(%edx,%eax,1)
		mov    0x2(%esp),%ebx
		movswl %cx,%edx
		sar    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_4685c
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %ebp,%ebx
		call   func_454b3
		mov    -0x2(%esp),%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
	jump_4685c:
		dec    %ecx
	jump_4685d:
		test   %cx,%cx
		jge    jump_467fc
		mov    $0xff,%cl
		movswl %si,%edx
		xor    %eax,%eax
		jmp    jump_46876
	jump_4686b:
		movswl %ax,%ebx
		inc    %eax
		mov    %cl,data_f1bac(%edx,%ebx,1)
	jump_46876:
		cmp    %di,%ax
		jl     jump_4686b
		mov    -0x2(%esp),%edx
		mov    0xe(%esp),%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		mov    0xc(%esp),%eax
		inc    %eax
		add    %edi,%esi
		mov    %eax,0xc(%esp)
		cmp    $0x8,%ax
		jl     jump_467f6
	jump_468af:
		call   func_45559
		add    $0x14,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_468bc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%esi
		sub    %edx,%eax
		mov    0x60(%ebp),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%esi
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %eax,%esi
		movsbl 0x0(%ebp),%eax
		call   func_10971
		mov    %eax,%edx
		xor    %ecx,%ecx
		add    $0xc,%edx
		movsbw 0x4(%esi),%ax
		xor    %ebx,%ebx
		add    %eax,%edx
		movsbl 0x1(%ebp),%eax
		mov    %dx,0xc(%esp)
		call   func_10988
		sub    $0x2,%eax
		movsbw 0x5(%esi),%dx
		mov    0x3(%esi),%cl
		mov    0x2(%esi),%bl
		add    %edx,%eax
		mov    $data_f1ba8,%edx
		mov    %ax,0x8(%esp)
		mov    0x9(%esi),%eax
		call   func_10083
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		xor    %ecx,%ecx
		call   func_11ee4
		mov    0x2(%esi),%cl
		mov    $0x2,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ecx,%eax
		sub    %edx,%eax
		inc    %eax
		mov    %eax,0x4(%esp)
		mov    $0x9,%eax
		mov    $0x1,%edi
		call   func_1033b
		mov    0x4(%esp),%eax
		mov    %di,0x10(%esp)
		add    $0x4,%eax
		mov    %edi,%esi
		mov    %eax,(%esp)
		jmp    jump_46a06
	jump_46992:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x4(%esp),%ecx
		call   func_454b3
		cmp    %cx,%si
		jge    jump_469b7
		addw   $0x2,0x10(%esp)
	jump_469b7:
		cmp    $0x4,%si
		jle    jump_469c4
		sub    %di,0x8(%esp)
		add    %edi,%edi
	jump_469c4:
		mov    0x6(%esp),%ebp
		sar    $0x10,%ebp
		cmp    $0xffffff9c,%ebp
		jle    jump_469f9
		mov    0xe(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0xa(%esp),%edx
		push   $0x1
		sar    $0x10,%edx
		mov    $data_f1ba8,%ebx
		add    %edx,%eax
		mov    %ebp,%edx
		call   func_5f611
	jump_469f9:
		call   func_5e9e8
		call   func_499e4
		add    $0x2,%esi
	jump_46a06:
		cmp    (%esp),%si
		jl     jump_46992
		jmp    jump_468af


/*----------------------------------------------------------------*/
func_46a11:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%ebx
		sub    %edx,%eax
		mov    0x60(%esi),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		lea    (%ebx,%eax,1),%edx
		movsbl (%esi),%eax
		call   func_10971
		mov    %eax,%ebx
		add    $0xc,%ebx
		movsbw 0x4(%edx),%ax
		add    %eax,%ebx
		movsbl 0x1(%esi),%eax
		mov    %bx,0x4(%esp)
		call   func_10988
		mov    %eax,%ebx
		sub    $0x2,%ebx
		movsbw 0x5(%edx),%ax
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    0x3(%edx),%cl
		mov    %bx,(%esp)
		xor    %ebx,%ebx
		mov    0x9(%edx),%eax
		mov    0x2(%edx),%bl
		mov    $data_f1ba8,%edx
		call   func_10083
		mov    %eax,%ecx
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		sub    $0x4,%ecx
		call   func_11ee4
		movswl %cx,%edx
		mov    $0xc,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%esi
		mov    $0x9,%eax
		xor    %edi,%edi
		call   func_1033b
	jump_46ac5:
		mov    $0xff,%bl
		xor    %edx,%edx
		jmp    jump_46adb
	jump_46acb:
		movswl %cx,%eax
		call   func_499bd
		cwtl
		inc    %edx
		mov    %bl,data_f1bac(%eax)
	jump_46adb:
		cmp    %si,%dx
		jl     jump_46acb
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $data_f1ba8,%ebx
		call   func_454b3
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %edi
		call   func_5ee51
		call   func_5e9e8
		call   func_499e4
		cmp    $0x10,%di
		jl     jump_46ac5
		call   func_45559
	jump_46b24:
		add    $0x8,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_46b2c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		mov    %eax,%ebp
		mov    $0xc,%ecx
		mov    %esp,%edi
		mov    $data_44a1c,%esi
		xor    %ebx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x11(%eax),%bl
		sub    $0x86,%ebx
		lea    0x34(%esp),%edx
		movswl %bx,%edi
		lea    0x30(%esp),%ebx
		mov    (%esp,%edi,4),%si
		mov    0x2(%esp,%edi,4),%di
		call   func_135eb
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x34(%esp),%edx
		movsbw data_d66ac(,%eax,4),%ax
		add    %eax,%edx
		mov    %edx,0x34(%esp)
		mov    0x5d(%ebp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x30(%esp),%ebx
		movsbw data_d66ad(,%eax,4),%ax
		add    %eax,%ebx
		mov    %ebx,0x30(%esp)
		xor    %ebx,%ebx
		jmp    jump_46c94
	jump_46bba:
		movswl %bx,%edx
		mov    $0x4,%eax
		add    %edx,%edx
		call   func_499bd
		add    $0x2,%eax
		mov    %ax,data_f8d88(%edx)
		mov    $0x4,%eax
		call   func_499bd
		add    $0x8,%eax
		mov    %ax,data_f8b88(%edx)
		mov    $0x4,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_46c04
		addw   $0x4,data_f8d88(%edx)
		jmp    jump_46c12
	jump_46c04:
		cmp    $0x2,%ax
		jne    jump_46c12
		addw   $0x4,data_f8b88(%edx)
	jump_46c12:
		mov    $0x2,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_46c36
		movswl %bx,%eax
		mov    data_f8d88(,%eax,2),%dx
		neg    %edx
		mov    %dx,data_f8d88(,%eax,2)
	jump_46c36:
		movswl %bx,%edx
		movw   $0x1,data_f8f88(,%edx,2)
		movswl %di,%ecx
		imul   $0xc,%ecx,%ecx
		mov    $0x18,%eax
		call   func_499bd
		mov    %eax,0x38(%esp)
		mov    0x34(%esp),%eax
		add    0x38(%esp),%eax
		add    data_fa404(%ecx),%ax
		mov    %ax,data_f8328(,%edx,2)
		mov    $0x10,%eax
		call   func_499bd
		mov    %eax,0x38(%esp)
		mov    0x30(%esp),%eax
		add    0x38(%esp),%eax
		add    data_fa406(%ecx),%ax
		inc    %ebx
		mov    %ax,data_f8528(,%edx,2)
	jump_46c94:
		cmp    %si,%bx
		jl     jump_46bba
		mov    $0x5,%eax
		call   func_1033b
		mov    %ebp,%eax
		mov    $0x4,%ecx
		call   func_12124
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   func_44d89
	jump_46cbc:
		mov    0x60(%ebp),%edx
		sar    $0x18,%edx
		inc    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		inc    %ebx
		mov    %dl,0x63(%ebp)
		call   func_45559
		call   func_499e4
		cmp    $0x10,%bx
		jl     jump_46cbc
		call   func_44d81
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		call   func_45559
		mov    $0x5,%eax
		call   func_1033b
		xor    %eax,%eax
		mov    %eax,0x3c(%esp)
	jump_46d07:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_454b3
		jmp    jump_46d6c
	jump_46d21:
		movswl %cx,%eax
		add    %eax,%eax
		mov    data_f8328(%eax),%dx
		sub    $0x10,%edx
		cmp    $0x120,%dx
		jae    jump_46d6b
		mov    data_f8528(%eax),%dx
		sub    $0x5,%edx
		cmp    $0xb2,%dx
		jae    jump_46d6b
		movswl %di,%edx
		imul   $0xc,%edx,%edx
		mov    data_fa408(%edx),%ebx
		mov    data_f8526(%eax),%edx
		mov    data_f8326(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
	jump_46d6b:
		inc    %ecx
	jump_46d6c:
		cmp    %si,%cx
		jl     jump_46d21
		call   func_5e9e8
		call   func_499e4
		xor    %edx,%edx
		jmp    jump_46dd1
	jump_46d7f:
		movswl %dx,%eax
		mov    data_f8d88(,%eax,2),%bx
		mov    data_f8328(,%eax,2),%cx
		add    %ebx,%ecx
		mov    data_f8b88(,%eax,2),%bx
		mov    %cx,data_f8328(,%eax,2)
		mov    data_f8528(,%eax,2),%cx
		sub    %ebx,%ecx
		mov    data_f8f88(,%eax,2),%bx
		mov    %cx,data_f8528(,%eax,2)
		mov    data_f8b88(,%eax,2),%cx
		sub    %ebx,%ecx
		inc    %edx
		mov    %cx,data_f8b88(,%eax,2)
	jump_46dd1:
		cmp    %si,%dx
		jl     jump_46d7f
		mov    0x3c(%esp),%edx
		inc    %edx
		mov    %edx,0x3c(%esp)
		cmp    $0x1e,%dx
		jl     jump_46d07
		add    $0x40,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_46df1:
/*----------------------------------------------------------------*/
		push   %esi
		mov    %eax,%esi
		movswl %cx,%ecx
		movswl %dx,%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		sar    %edx
		add    %edx,%eax
		movswl %bx,%ecx
		movswl %ax,%edx
		movswl %si,%eax
		sub    %eax,%ecx
		sar    %ecx
		add    %ecx,%eax
		cwtl
		call   func_1124a
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_46e19:
/*----------------------------------------------------------------*/
		mov    %ax,data_fa8b2
		mov    %dx,data_fa8b4
		ret


/*----------------------------------------------------------------*/
func_46e27:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28c,%esp
		mov    %eax,%ecx
		mov    %edx,0x280(%esp)
		call   func_103a8
		mov    data_fa8b2,%si
		movsbl (%ecx),%eax
		mov    data_fa8b4,%di
		call   func_10971
		add    $0xc,%eax
		movswl %di,%ebx
		mov    %ax,0x270(%esp)
		movsbl 0x1(%ecx),%eax
		movswl %si,%ebp
		call   func_10988
		sub    $0x2,%eax
		mov    %ebx,%edx
		mov    %ax,0x288(%esp)
		mov    %ebp,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_46e9f
		lea    0x264(%esp),%ebx
		lea    0x268(%esp),%edx
		call   func_135eb
		jmp    jump_46ec5
	jump_46e9f:
		mov    %ebp,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x268(%esp)
		mov    %ebx,%eax
		call   func_10988
		sub    $0x2,%eax
		mov    %ax,0x264(%esp)
	jump_46ec5:
		mov    0x268(%esp),%eax
		sub    $0x10,%eax
		cmp    $0x120,%ax
		jae    jump_47355
		mov    0x264(%esp),%eax
		sub    $0x4,%eax
		cmp    $0xc0,%ax
		jae    jump_47355
		movsbw 0x63(%ecx),%ax
		mov    %ax,0x26c(%esp)
		mov    0x5c(%ecx),%ah
		test   %ah,%ah
		jbe    jump_46f10
		cmp    $0x4,%ah
		ja     jump_46f10
		mov    0x77(%ecx),%eax
		mov    0x11(%eax),%al
		xor    %ah,%ah
		jmp    jump_46f15
	jump_46f10:
		xor    %eax,%eax
		mov    0x11(%ecx),%al
	jump_46f15:
		cmp    $0x35,%ax
		jb     jump_46f6d
		cmp    $0x38,%ax
		jbe    jump_46fcc
		cmp    $0x91,%ax
		jb     jump_46f4a
		jbe    jump_46fe5
		cmp    $0x93,%ax
		jbe    jump_46fdb
		cmp    $0x98,%ax
		jbe    jump_46fe5
		jmp    jump_47350
	jump_46f4a:
		cmp    $0x8c,%ax
		jb     jump_47350
		cmp    $0x8d,%ax
		jbe    jump_46fdb
		cmp    $0x90,%ax
		je     jump_47059
		jmp    jump_47350
	jump_46f6d:
		cmp    $0x16,%ax
		jb     jump_46f86
		jbe    jump_46f9f
		cmp    $0x17,%ax
		jbe    jump_46fae
		cmp    $0x18,%ax
		je     jump_46fbd
		jmp    jump_47350
	jump_46f86:
		cmp    $0x15,%ax
		jne    jump_47350
		xor    %eax,%eax
		mov    %ax,0x284(%esp)
		jmp    jump_47063
	jump_46f9f:
		movw   $0x1,0x284(%esp)
		jmp    jump_47063
	jump_46fae:
		movw   $0x2,0x284(%esp)
		jmp    jump_47063
	jump_46fbd:
		movw   $0x3,0x284(%esp)
		jmp    jump_47063
	jump_46fcc:
		movw   $0x4,0x284(%esp)
		jmp    jump_47063
	jump_46fdb:
		movw   $0x8,0x284(%esp)
	jump_46fe5:
		mov    %esi,%edx
		movsbw (%ecx),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jg     jump_46ff6
		neg    %edx
	jump_46ff6:
		mov    %edi,%ebx
		movsbw 0x1(%ecx),%ax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jg     jump_47008
		neg    %eax
	jump_47008:
		cmp    %ax,%dx
		jle    jump_4702e
		movsbw (%ecx),%ax
		cmp    %si,%ax
		jge    jump_47022
		movw   $0x3,0x26c(%esp)
		jmp    jump_4704e
	jump_47022:
		movw   $0x1,0x26c(%esp)
		jmp    jump_4704e
	jump_4702e:
		movsbw 0x1(%ecx),%ax
		cmp    %di,%ax
		jge    jump_47044
		xor    %eax,%eax
		mov    %ax,0x26c(%esp)
		jmp    jump_4704e
	jump_47044:
		movw   $0x2,0x26c(%esp)
	jump_4704e:
		cmpw   $0x8,0x284(%esp)
		je     jump_47063
	jump_47059:
		movw   $0x9,0x284(%esp)
	jump_47063:
		mov    0x282(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_fa070,%edx
		shl    $0x4,%eax
		add    %eax,%edx
		mov    %edx,0x258(%esp)
		testb  $0x1,0x26c(%esp)
		je     jump_470a2
		movsbw (%ecx),%ax
		sub    %eax,%esi
		shl    $0x2,%esi
		mov    %si,0x274(%esp)
		jmp    jump_470b4
	jump_470a2:
		movsbw 0x1(%ecx),%ax
		sub    %eax,%edi
		shl    $0x2,%edi
		mov    %di,0x274(%esp)
	jump_470b4:
		mov    0x274(%esp),%edx
		test   %dx,%dx
		jge    jump_470cc
		mov    %edx,%ebx
		neg    %ebx
		mov    %bx,0x274(%esp)
	jump_470cc:
		imul   $0x64,0x270(%esp),%eax
		mov    0x288(%esp),%edi
		mov    %ax,0x270(%esp)
		imul   $0x64,%edi,%eax
		mov    0x266(%esp),%edx
		sar    $0x10,%edx
		mov    %ax,0x288(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    0x26e(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    0x272(%esp),%ebx
		mov    %eax,%edx
		sar    $0x10,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x262(%esp),%edx
		sar    $0x10,%edx
		mov    %eax,0x260(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    0x286(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,0x25c(%esp)
		cmpw   $0x4,0x284(%esp)
		jge    jump_47170
		mov    %ecx,%eax
		call   func_12124
	jump_47170:
		cmpw   $0x8,0x284(%esp)
		jne    jump_47182
		mov    $0x6,%eax
		jmp    jump_47187
	jump_47182:
		mov    $0x1,%eax
	jump_47187:
		call   func_1033b
	jump_4718c:
		cmpw   $0x0,0x280(%esp)
		je     jump_471b0
		mov    0x274(%esp),%ecx
		dec    %ecx
		mov    %cx,0x274(%esp)
		test   %cx,%cx
		jl     jump_472ac
	jump_471b0:
		mov    0x260(%esp),%eax
		mov    0x270(%esp),%edi
		mov    0x288(%esp),%edx
		add    %eax,%edi
		add    0x25c(%esp),%edx
		mov    0x26a(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x258(%esp),%ebp
		mov    %di,0x270(%esp)
		mov    %dx,0x288(%esp)
		mov    0x26e(%esp),%edx
		mov    $0x64,%ecx
		sar    $0x10,%edx
		add    %eax,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x2(%ebp),%ebx
		sar    $0x10,%ebx
		mov    0x286(%esp),%edx
		add    %ebx,%eax
		sar    $0x10,%edx
		mov    %ax,0x278(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x4(%ebp),%ebx
		sar    $0x10,%ebx
		mov    0x276(%esp),%esi
		add    %ebx,%eax
		sar    $0x10,%esi
		mov    %ax,0x27c(%esp)
		lea    0x17(%esi),%ebx
		mov    0x27a(%esp),%edi
		mov    %esp,%eax
		sar    $0x10,%edi
		push   %eax
		lea    0x17(%edi),%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   func_5eecf
		mov    %edi,%edx
		mov    %esi,%eax
		mov    0x8(%ebp),%ebx
		call   func_5f3fd
		call   func_5e9e8
		mov    %esp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_5ee51
		mov    0x278(%esp),%ebx
		call   func_499e4
		test   %bx,%bx
		jle    jump_472ac
		cmp    $0x140,%bx
		jge    jump_472ac
		mov    0x27c(%esp),%esi
		test   %si,%si
		jle    jump_472ac
		cmp    $0xc8,%si
		jl     jump_4718c
	jump_472ac:
		cmpw   $0x9,0x284(%esp)
		jne    jump_47350
		mov    $0x10,%eax
		call   func_1033b
		xor    %edi,%edi
	jump_472c7:
		test   $0x1,%di
		je     jump_472d9
		xor    %esi,%esi
		mov    %si,data_ba838
		jmp    jump_472ef
	jump_472d9:
		mov    $0x6,%edx
		movswl %di,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    %eax
		neg    %eax
		mov    %ax,data_ba838
	jump_472ef:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%eax
		add    $0x6,%eax
		imul   $0xc,%eax,%esi
		mov    0x264(%esp),%eax
		add    data_fa406(%esi),%ax
		mov    data_fa404(%esi),%cx
		movswl %ax,%edx
		mov    0x268(%esp),%eax
		add    %ecx,%eax
		mov    data_fa408(%esi),%ebx
		cwtl
		inc    %edi
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		cmp    $0x6,%di
		jl     jump_472c7
	jump_47350:
		call   func_103a0
	jump_47355:
		add    $0x28c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_47362:
		.long   func_473da
		.long   func_47433
		.long   func_4747e
		.long   func_474d1


/*----------------------------------------------------------------*/
func_47372:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		mov    %eax,%esi
		call   func_103a8
		mov    data_fa8b2,%ax
		mov    %eax,0x10(%esp)
		mov    data_fa8b4,%ax
		xor    %ebx,%ebx
		mov    %ax,0x14(%esp)
		mov    $0x2710,%eax
		mov    %ebx,0x1c(%esp)
		call   w_dos_malloc
		mov    %eax,0x8(%esp)
		movsbw 0x1(%esi),%ax
		mov    %ebx,0x18(%esp)
		mov    %ax,0x20(%esp)
		mov    0x63(%esi),%al
		movsbw (%esi),%dx
		cmp    $0x3,%al
		ja     jump_47521
		mov    0x10(%esp),%ebx
		and    $0xff,%eax
		inc    %ebx
		jmp    *vtable_47362(,%eax,4)


/*----------------------------------------------------------------*/
func_473da:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		call   func_10971
		add    $0x18,%eax
		mov    %ax,0xc(%esp)
		mov    %ax,0x28(%esp)
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x10,%eax
		mov    %ax,0x24(%esp)
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		mov    0x22(%esp),%ebx
		call   func_10988
		sar    $0x10,%ebx
		cwtl
		sub    %ebx,%eax
		sar    $0x3,%eax
		mov    $0x8,%ebx
		mov    %ax,0x20(%esp)
		mov    %ebx,0x1c(%esp)
		jmp    jump_47521


/*----------------------------------------------------------------*/
func_47433:
/*----------------------------------------------------------------*/
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x4,%eax
		mov    %ax,0x24(%esp)
		movswl %dx,%eax
		call   func_10971
		sub    $0xc,%eax
		mov    %ax,0x28(%esp)
		movswl %bx,%eax
		call   func_10971
		mov    0x26(%esp),%ebx
		cwtl
		sar    $0x10,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0xfffffff8,%edx
		sar    $0x3,%eax
		mov    %edx,0x18(%esp)
		jmp    jump_4751c


/*----------------------------------------------------------------*/
func_4747e:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		call   func_10971
		add    $0x18,%eax
		mov    %ax,0xc(%esp)
		mov    %ax,0x28(%esp)
		mov    0x20(%esp),%eax
		dec    %eax
		cwtl
		call   func_10988
		sub    $0xc,%eax
		mov    %ax,0x24(%esp)
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		mov    0x22(%esp),%ebx
		call   func_10988
		sar    $0x10,%ebx
		cwtl
		sub    %eax,%ebx
		sar    $0x3,%ebx
		mov    $0xfffffff8,%eax
		mov    %bx,0x20(%esp)
		mov    %eax,0x1c(%esp)
		jmp    jump_47521


/*----------------------------------------------------------------*/
func_474d1:
/*----------------------------------------------------------------*/
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x4,%eax
		inc    %edx
		mov    %ax,0x24(%esp)
		movswl %dx,%eax
		call   func_10971
		add    $0x24,%eax
		mov    %ax,0x28(%esp)
		movswl %bx,%eax
		call   func_10971
		movswl %ax,%ebx
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x8,%edi
		sar    $0x3,%eax
		mov    %edi,0x18(%esp)
	jump_4751c:
		mov    %ax,0x20(%esp)
	jump_47521:
		mov    $0x1e,%eax
		movb   $0x5,0x64(%esi)
		call   func_1033b
		xor    %edi,%edi
	jump_47531:
		call   func_45559
		mov    0x64(%esi),%ah
		inc    %ah
		inc    %edi
		mov    %ah,0x64(%esi)
		call   func_499e4
		cmp    $0x2,%di
		jl     jump_47531
		call   func_45559
		mov    $data_fa160,%edx
		xor    %ecx,%ecx
		mov    %edx,(%esp)
		mov    %ecx,0x30(%esp)
		jmp    jump_47626
	jump_47562:
		mov    0x18(%esp),%eax
		mov    0x28(%esp),%edx
		mov    0x24(%esp),%ebx
		add    %eax,%edx
		mov    0x1c(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x24(%esp)
		mov    0x60(%esi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		add    (%esp),%ebx
		mov    0x4(%ebx),%cx
		mov    %edx,%ebx
		mov    $0x3,%eax
		add    %ecx,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    0x60(%esi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		mov    (%esp),%edi
		mov    0x8(%esp),%ebp
		mov    %dx,0x28(%esp)
		mov    0x24(%esp),%edx
		dec    %eax
		add    %edi,%ebx
		mov    %ax,0xc(%esp)
		mov    $0x3,%eax
		mov    0x6(%ebx),%di
		call   func_499bd
		add    %edi,%edx
		push   %ebp
		add    %edx,%eax
		mov    0xe(%esp),%ebp
		dec    %eax
		sar    $0x10,%ebp
		movswl %ax,%edi
		lea    0x20(%ebp),%ebx
		lea    0x28(%edi),%ecx
		mov    %ebp,%eax
		mov    %edi,%edx
		call   func_5eecf
		mov    0x60(%esi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		add    (%esp),%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		mov    0x8(%ebx),%ebx
		call   func_5f3fd
		call   func_5e9e8
		mov    0x8(%esp),%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_5ee9b
		cmpw   $0x2,0x30(%esp)
		jne    jump_47622
		movl   $data_fa190,(%esp)
	jump_47622:
		incl   0x30(%esp)
	jump_47626:
		mov    0x30(%esp),%eax
		cmp    0x20(%esp),%ax
		jl     jump_47562
		mov    0x10(%esp),%eax
		inc    %eax
		cwtl
		call   func_10971
		mov    %eax,0x34(%esp)
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,0x38(%esp)
		mov    $0xc,%eax
		call   func_1033b
		xor    %eax,%eax
		mov    %ax,0x2c(%esp)
	jump_47665:
		mov    0x2a(%esp),%edi
		sar    $0x10,%edi
		imul   $0xc,%edi,%edi
		mov    0x34(%esp),%edx
		mov    0x38(%esp),%eax
		mov    data_fa404(%edi),%bx
		mov    data_fa406(%edi),%cx
		add    %ebx,%edx
		add    %ecx,%eax
		mov    0x8(%esp),%ebx
		movswl %ax,%ebp
		mov    data_fa400(%edi),%ecx
		push   %ebx
		sar    $0x10,%ecx
		movswl %dx,%eax
		mov    data_fa3fe(%edi),%ebx
		mov    %ebp,%edx
		sar    $0x10,%ebx
		add    %ebp,%ecx
		add    %eax,%ebx
		mov    %eax,0x8(%esp)
		call   func_5eecf
		mov    0x4(%esp),%eax
		mov    %ebp,%edx
		mov    data_fa408(%edi),%ebx
		call   func_5f3fd
		call   func_499e4
		call   func_5e9e8
		mov    0x8(%esp),%ebx
		mov    0x4(%esp),%eax
		mov    0x2c(%esp),%edi
		mov    %ebp,%edx
		inc    %edi
		call   func_5ee9b
		mov    %di,0x2c(%esp)
		cmp    $0x6,%di
		jl     jump_47665
		mov    0x8(%esp),%eax
		call   w_dos_free
		movb   $0x0,0x64(%esi)
		call   func_45559
		call   func_103a0
		add    $0x3c,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_47712:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    %eax,%edi
		call   func_103a8
		mov    data_fa8b2,%ax
		mov    %ax,0x1c(%esp)
		mov    data_fa8b4,%ax
		mov    %ax,0xc(%esp)
		mov    $0x2710,%eax
		call   w_dos_malloc
		mov    %eax,0x8(%esp)
		movsbw 0x1(%edi),%ax
		mov    %ax,0x30(%esp)
		movsbl (%edi),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x14(%esp)
		mov    0x2e(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x8,%eax
		mov    %ax,0x28(%esp)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		mov    $0x8,%edx
		call   func_10988
		add    $0x8,%eax
		xor    %esi,%esi
		movswl %ax,%ebx
		mov    0x26(%esp),%eax
		mov    %edx,0x2c(%esp)
		sar    $0x10,%eax
		movb   $0x5,0x64(%edi)
		sub    %eax,%ebx
		mov    $0x1e,%eax
		sar    $0x3,%ebx
		call   func_1033b
		mov    %bx,0x30(%esp)
	jump_477b5:
		call   func_45559
		mov    0x64(%edi),%ah
		inc    %ah
		inc    %esi
		mov    %ah,0x64(%edi)
		call   func_499e4
		cmp    $0x2,%si
		jl     jump_477b5
		call   func_45559
		mov    $data_fa160,%edx
		xor    %ebx,%ebx
		mov    %edx,0x4(%esp)
		mov    %ebx,0x18(%esp)
		jmp    jump_47894
	jump_477e7:
		mov    0x60(%edi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		mov    0x2c(%esp),%eax
		mov    0x4(%esp),%ecx
		mov    0x28(%esp),%edx
		add    %ecx,%ebx
		add    %eax,%edx
		mov    $0x3,%eax
		mov    0x4(%ebx),%cx
		call   func_499bd
		mov    0x60(%edi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		mov    %dx,0x28(%esp)
		mov    0x14(%esp),%edx
		mov    0x4(%esp),%esi
		add    %ecx,%edx
		mov    0x8(%esp),%ebp
		add    %eax,%edx
		add    %esi,%ebx
		mov    0x28(%esp),%eax
		dec    %edx
		mov    0x6(%ebx),%si
		mov    %eax,%ebx
		mov    $0x3,%eax
		add    %esi,%ebx
		call   func_499bd
		add    %ebx,%eax
		push   %ebp
		dec    %eax
		movswl %dx,%ebp
		movswl %ax,%esi
		lea    0x20(%ebp),%ebx
		lea    0x28(%esi),%ecx
		mov    %ebp,%eax
		mov    %esi,%edx
		call   func_5eecf
		mov    0x4(%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		mov    0x8(%ebx),%ebx
		call   func_5f3fd
		call   func_5e9e8
		mov    0x8(%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_5ee9b
		cmpw   $0x2,0x18(%esp)
		jne    jump_47890
		movl   $data_fa190,0x4(%esp)
	jump_47890:
		incl   0x18(%esp)
	jump_47894:
		mov    0x18(%esp),%eax
		cmp    0x30(%esp),%ax
		jl     jump_477e7
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x10(%esp)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x8,%eax
		xor    %esi,%esi
		mov    %eax,0x24(%esp)
		mov    $0xc,%eax
		mov    %si,0x20(%esp)
		call   func_1033b
	jump_478de:
		mov    0x1e(%esp),%esi
		sar    $0x10,%esi
		imul   $0xc,%esi,%esi
		mov    0x10(%esp),%eax
		mov    0x24(%esp),%edx
		mov    data_fa404(%esi),%bx
		mov    data_fa406(%esi),%cx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    0x8(%esp),%ebx
		movswl %ax,%ebp
		mov    data_fa400(%esi),%ecx
		push   %ebx
		movswl %dx,%ebx
		sar    $0x10,%ecx
		mov    %ebx,0x4(%esp)
		add    %ebx,%ecx
		mov    data_fa3fe(%esi),%ebx
		mov    %ebp,%eax
		sar    $0x10,%ebx
		mov    0x4(%esp),%edx
		add    %ebp,%ebx
		call   func_5eecf
		mov    (%esp),%edx
		mov    %ebp,%eax
		mov    data_fa408(%esi),%ebx
		call   func_5f3fd
		call   func_499e4
		call   func_5e9e8
		mov    0x8(%esp),%ebx
		mov    (%esp),%edx
		mov    0x20(%esp),%esi
		mov    %ebp,%eax
		inc    %esi
		call   func_5ee9b
		mov    %si,0x20(%esp)
		cmp    $0x6,%si
		jl     jump_478de
		mov    0x8(%esp),%eax
		call   w_dos_free
		movb   $0x0,0x64(%edi)
		call   func_45559
		call   func_103a0
		jmp    jump_45427


/*----------------------------------------------------------------*/
func_4798a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %edx,0x10(%esp)
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x4(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    %eax,(%esp)
		test   %dx,%dx
		jne    jump_479d1
		movsbw 0x63(%esi),%ax
		shl    $0x3,%eax
		mov    $0x8,%ecx
		add    $0x2c,%eax
		mov    %ecx,0x8(%esp)
		jmp    jump_479e7
	jump_479d1:
		movsbw 0x63(%esi),%ax
		imul   $0x7,%eax,%eax
		mov    $0x7,%ebx
		add    $0x1d,%eax
		mov    %ebx,0x8(%esp)
	jump_479e7:
		mov    %ax,0xc(%esp)
		mov    $0xc,%eax
		call   func_1033b
		xor    %ecx,%ecx
		jmp    jump_47a74
	jump_479fd:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		cmpw   $0x0,0x10(%esp)
		jne    jump_47a31
		mov    0xa(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		add    $data_fa070,%eax
		jmp    jump_47a45
	jump_47a31:
		mov    0xa(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		add    $data_fa400,%eax
	jump_47a45:
		mov    (%esp),%edx
		add    0x6(%eax),%dx
		mov    0x4(%esp),%edi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		call   func_5f3fd
		mov    %esi,%eax
		inc    %ecx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
	jump_47a74:
		cmp    0x8(%esp),%cx
		jl     jump_479fd
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_47a86:
		.long   func_47b02
		.long   func_47b60
		.long   func_47bb2
		.long   func_47c06


/*----------------------------------------------------------------*/
func_47a96:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x48,%esp
		mov    %eax,%edi
		call   func_103a8
		mov    data_fa8b2,%si
		mov    data_fa8b4,%cx
		xor    %edx,%edx
	jump_47ab6:
		mov    $0x3e8,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		movswl %dx,%eax
		inc    %edx
		mov    %ebx,(%esp,%eax,4)
		cmp    $0x3,%dx
		jl     jump_47ab6
		movsbw (%edi),%dx
		movsbw 0x1(%edi),%ax
		xor    %ebx,%ebx
		mov    %ax,0x2c(%esp)
		mov    %ebx,0x3c(%esp)
		mov    0x63(%edi),%al
		mov    %ebx,0x38(%esp)
		cmp    $0x3,%al
		ja     jump_47c5c
		mov    %esi,%ebx
		and    $0xff,%eax
		inc    %ebx
		jmp    *vtable_47a86(,%eax,4)


/*----------------------------------------------------------------*/
func_47b02:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		call   func_10971
		add    $0x18,%eax
		mov    %ax,0x14(%esp)
		mov    %ax,0x1c(%esp)
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0xc,%eax
		mov    %ax,0xc(%esp)
		movswl %cx,%eax
		call   func_10988
		mov    %ax,0x24(%esp)
		movswl %ax,%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0x4,%esi
		sar    $0x2,%eax
		mov    %esi,0x3c(%esp)
	jump_47b56:
		mov    %ax,0x2c(%esp)
		jmp    jump_47c5c


/*----------------------------------------------------------------*/
func_47b60:
/*----------------------------------------------------------------*/
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x4,%eax
		mov    %ax,0x24(%esp)
		mov    %ax,0xc(%esp)
		movswl %dx,%eax
		call   func_10971
		sub    $0x8,%eax
		mov    %ax,0x1c(%esp)
		movswl %bx,%eax
		call   func_10971
		mov    0x1a(%esp),%edx
		mov    %ax,0x14(%esp)
		sar    $0x10,%edx
		cwtl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0xfffffffc,%ecx
		sar    $0x2,%eax
		mov    %ecx,0x38(%esp)
		jmp    jump_47b56


/*----------------------------------------------------------------*/
func_47bb2:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		call   func_10971
		add    $0x18,%eax
		mov    %ax,0x14(%esp)
		mov    %ax,0x1c(%esp)
		mov    0x2c(%esp),%eax
		dec    %eax
		cwtl
		call   func_10988
		sub    $0x8,%eax
		mov    %ax,0xc(%esp)
		movswl %cx,%eax
		call   func_10988
		mov    0xa(%esp),%edx
		mov    %ax,0x24(%esp)
		sar    $0x10,%edx
		cwtl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0xfffffffc,%ebx
		sar    $0x2,%eax
		mov    %ebx,0x3c(%esp)
		jmp    jump_47b56


/*----------------------------------------------------------------*/
func_47c06:
/*----------------------------------------------------------------*/
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		add    $0x4,%eax
		inc    %edx
		mov    %ax,0x24(%esp)
		mov    %ax,0xc(%esp)
		movswl %dx,%eax
		call   func_10971
		add    $0x20,%eax
		mov    %ax,0x1c(%esp)
		movswl %bx,%eax
		call   func_10971
		mov    0x1a(%esp),%edx
		mov    %ax,0x14(%esp)
		cwtl
		sar    $0x10,%edx
		sub    %edx,%eax
		sar    $0x2,%eax
		mov    $0x4,%edx
		mov    %ax,0x2c(%esp)
		mov    %edx,0x38(%esp)
	jump_47c5c:
		xor    %edx,%edx
	jump_47c5e:
		movswl %dx,%eax
		mov    0x1c(%esp,%eax,2),%bx
		mov    %bx,0x1e(%esp,%eax,2)
		mov    0xc(%esp,%eax,2),%bx
		inc    %edx
		mov    %bx,0xe(%esp,%eax,2)
		cmp    $0x2,%dx
		jl     jump_47c5e
		mov    $0x1e,%eax
		movb   $0x5,0x64(%edi)
		call   func_1033b
		xor    %edx,%edx
	jump_47c8c:
		call   func_45559
		mov    0x64(%edi),%ah
		inc    %ah
		inc    %edx
		mov    %ah,0x64(%edi)
		call   func_499e4
		cmp    $0x2,%dx
		jl     jump_47c8c
		call   func_45559
		mov    $0x1,%eax
		mov    0x2c(%esp),%ecx
		mov    $data_fa1c0,%ebp
		call   func_1033b
		xor    %edx,%edx
		mov    $0x1,%eax
		mov    %edx,0x30(%esp)
		mov    %dx,0x34(%esp)
		add    $0xc,%ecx
		mov    %eax,0x40(%esp)
		mov    %cx,0x2c(%esp)
		jmp    jump_47e44
	jump_47cde:
		cmp    $0x6,%ax
		jne    jump_47cee
		movl   $0x2,0x40(%esp)
		jmp    jump_47cfc
	jump_47cee:
		cmp    $0xc,%ax
		jne    jump_47cfc
		movl   $0x3,0x40(%esp)
	jump_47cfc:
		mov    0x2a(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    -0xb(%edx),%ebx
		cmp    %ebx,%eax
		jne    jump_47d1b
		movl   $0x1,0x30(%esp)
		jmp    jump_47d2a
	jump_47d1b:
		sub    $0x5,%edx
		cmp    %edx,%eax
		jne    jump_47d2a
		movl   $0x2,0x30(%esp)
	jump_47d2a:
		mov    0x30(%esp),%eax
		mov    %ax,0x44(%esp)
		jmp    jump_47dfa
	jump_47d38:
		mov    0x42(%esp),%edx
		sar    $0x10,%edx
		mov    0x38(%esp),%eax
		mov    0x1c(%esp,%edx,2),%bx
		mov    0xc(%esp,%edx,2),%cx
		add    %eax,%ebx
		add    0x3c(%esp),%ecx
		mov    %bx,0x1c(%esp,%edx,2)
		mov    %cx,0xc(%esp,%edx,2)
		mov    0x60(%edi),%eax
		sar    $0x18,%eax
		imul   $0xc,%eax,%eax
		lea    (%eax,%ebp,1),%ebx
		mov    0x1c(%esp,%edx,2),%ax
		mov    0x4(%ebx),%cx
		mov    %eax,%ebx
		mov    $0x3,%eax
		add    %ecx,%ebx
		call   func_499bd
		add    %ebx,%eax
		dec    %eax
		mov    %ax,0x14(%esp,%edx,2)
		mov    0x60(%edi),%ebx
		sar    $0x18,%ebx
		imul   $0xc,%ebx,%ebx
		mov    0xc(%esp,%edx,2),%ax
		mov    0x6(%ebx,%ebp,1),%cx
		mov    %eax,%ebx
		mov    $0x3,%eax
		add    %ecx,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    %edx,%esi
		dec    %eax
		mov    (%esp,%edx,4),%ebx
		mov    %ax,0x24(%esp,%edx,2)
		push   %ebx
		mov    0x26(%esp,%edx,2),%edx
		mov    0x16(%esp,%esi,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x18(%edx),%ecx
		lea    0x26(%eax),%ebx
		call   func_5eecf
		mov    0x60(%edi),%eax
		sar    $0x18,%eax
		imul   $0xc,%eax,%eax
		mov    0x22(%esp,%esi,2),%edx
		sar    $0x10,%edx
		mov    0x8(%eax,%ebp,1),%ebx
		mov    0x12(%esp,%esi,2),%eax
		mov    0x44(%esp),%esi
		sar    $0x10,%eax
		inc    %esi
		call   func_5f3fd
		mov    %si,0x44(%esp)
	jump_47dfa:
		mov    0x44(%esp),%eax
		cmp    0x40(%esp),%ax
		jl     jump_47d38
		call   func_5e9e8
		mov    0x30(%esp),%ecx
		jmp    jump_47e2e
	jump_47e14:
		movswl %cx,%esi
		mov    (%esp,%esi,4),%ebx
		mov    0x22(%esp,%esi,2),%edx
		mov    0x12(%esp,%esi,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_5ee9b
	jump_47e2e:
		cmp    0x40(%esp),%cx
		jl     jump_47e14
		mov    0x34(%esp),%edx
		inc    %edx
		call   func_499e4
		mov    %dx,0x34(%esp)
	jump_47e44:
		mov    0x34(%esp),%eax
		cmp    0x2c(%esp),%ax
		jl     jump_47cde
		xor    %edx,%edx
	jump_47e55:
		movswl %dx,%eax
		mov    (%esp,%eax,4),%eax
		inc    %edx
		call   w_dos_free
		cmp    $0x3,%dx
		jl     jump_47e55
		call   func_45559
		call   func_103a0
		add    $0x48,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_47e79:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x4,%esp
		call   func_103a8
		mov    $0x10,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_47e95:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_454b3
		jmp    jump_47f05
	jump_47eaf:
		movswl %cx,%edx
		mov    data_f0648(,%edx,4),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%esi
		mov    data_f0648(,%edx,4),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    %eax,%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		add    $0xc,%eax
		imul   $0xc,%eax,%eax
		add    $0xc,%esi
		mov    data_fa408(%eax),%ebx
		add    data_fa406(%eax),%dx
		mov    data_fa404(%eax),%ax
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		inc    %ecx
		call   func_5f3fd
	jump_47f05:
		cmp    data_f0b9e,%cx
		jl     jump_47eaf
		mov    (%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,(%esp)
		cmp    $0x5,%bx
		jl     jump_47e95
		call   func_499e4
		call   func_103a0
		add    $0x4,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_47f3c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x3,%eax
		call   func_1033b
		cmpb   $0x2,0x63(%ecx)
		jge    jump_47f5d
		mov    $0x28,%esi
		jmp    jump_47f62
	jump_47f5d:
		mov    $0x2a,%esi
	jump_47f62:
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   func_135eb
		xor    %ecx,%ecx
	jump_47f71:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ecx,%eax
		xor    %ch,%ah
		and    $0x1,%al
		movswl %si,%edx
		cwtl
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x4(%esp),%edx
		add    data_fa076(%eax),%dx
		mov    (%esp),%edi
		mov    data_fa078(%eax),%ebx
		add    data_fa074(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		inc    %ecx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		call   func_45559
		call   func_499e4
		cmp    $0x9,%cx
		jl     jump_47f71
		jmp    jump_46b24


/*----------------------------------------------------------------*/
func_47fdc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%ebx
		mov    $0x4,%edx
		call   func_200de
		movsbl (%ebx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,0x4(%esp)
		movsbl 0x1(%ebx),%eax
		call   func_10988
		add    $0x8,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		mov    $0xc,%eax
		xor    %esi,%esi
		call   func_1033b
	jump_48020:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%eax
		add    $0x15,%eax
		imul   $0xc,%eax,%eax
		inc    %esi
		mov    (%esp),%edx
		inc    %ecx
		mov    data_fa406(%eax),%di
		xor    %ch,%ch
		add    %edi,%edx
		mov    0x4(%esp),%edi
		mov    data_fa408(%eax),%ebx
		add    data_fa404(%eax),%di
		movswl %dx,%edx
		movswl %di,%eax
		and    $0x7,%cl
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		cmp    $0x20,%si
		jl     jump_48020
		jmp    jump_46b24


/*----------------------------------------------------------------*/
func_48083:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x4,%esp
		lea    0x1c(%esp),%ebx
		mov    0x18(%esp),%edx
		mov    $data_fa784,%eax
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		mov    $0x78,%ecx
		call   w_dos_vsprintf
		call   func_5f839
		xor    %eax,%eax
		mov    $0x13f,%ebx
		call   func_6104a
		mov    $0x1,%eax
		mov    $0x50,%edx
		call   func_5ecc7
		xor    %eax,%eax
		call   func_5edde
		mov    $0x78,%ecx
		mov    $0x13f,%ebx
		mov    $0x50,%edx
		xor    %eax,%eax
		mov    $data_fa784,%edi
		call   func_5edde
		xor    %eax,%eax
		mov    $0xa0,%ebx
		call   func_5ecc7
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		shl    $0x2,%ecx
		push   $data_fa784
		sub    %ecx,%ebx
		push   $0x5c
		movswl %bx,%ebx
		push   %ebx
		call   func_5e048
		add    $0xc,%esp
		mov    $0x5a,%eax
		call   func_499ef
		call   func_5f804
		call   func_5e9e8
		add    $0x4,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_48132:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bx,0x18(%esp)
		mov    %ecx,0x10(%esp)
		push   $0x200
		push   $data_77d44
		mov    $0x42,%edx
		xor    %ebx,%ebx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    %ax,0x14(%esp)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x4(%esp),%eax
		cmp    0x18(%esp),%ax
		jg     jump_4818e
		mov    %ecx,%eax
		jmp    jump_4829a
	jump_4818e:
		mov    $0x1,%ebx
		mov    $0x3c,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		shl    $0x2,%eax
		mov    $0x1,%ebx
		mov    %eax,(%esp)
		mov    %eax,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x4,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   w_dos_lseek
		mov    $0x4,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0xc(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x8(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%ebx
		mov    $data_f42b8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_f42b8,%eax
		mov    0x10(%esp),%ebx
		call   func_10031
		test   %bx,%bx
		jne    jump_4824e
		mov    0xa(%esp),%eax
		mov    0x8(%esp),%edx
		mov    $data_f42b8,%ebx
		movswl %di,%edi
		sar    $0x11,%eax
		sub    %edx,%esi
		sub    %eax,%edi
		jmp    jump_48288
	jump_4824e:
		mov    0xa(%esp),%eax
		movswl %di,%edi
		sar    $0x11,%eax
		mov    0x8(%esp),%ecx
		sub    %eax,%edi
		cmp    $0x78,%cx
		jle    jump_48277
		add    $0x3c,%esi
		sub    %ecx,%esi
		test   %si,%si
		jg     jump_48270
		xor    %esi,%esi
	jump_48270:
		mov    $data_f42b8,%ebx
		jmp    jump_48288
	jump_48277:
		mov    0x6(%esp),%eax
		movswl %si,%esi
		sar    $0x11,%eax
		sub    %eax,%esi
		mov    $data_f42b8,%ebx
	jump_48288:
		movswl %si,%edx
		movswl %di,%eax
		call   func_5f3fd
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
	jump_4829a:
		call   w_dos_close
		add    $0x1c,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_482a5:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1124a
		cmp    $0x2,%bx
		je     jump_482d7
		call   func_4a321
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_49fe1
		jmp    jump_482d9
	jump_482d7:
		xor    %ebx,%ebx
	jump_482d9:
		movsbl 0x0(%ebp),%eax
		call   func_10971
		mov    %eax,%esi
		movsbl 0x1(%ebp),%eax
		add    $0xc,%esi
		call   func_10988
		mov    %eax,%edi
		xor    %eax,%eax
		add    $0x4,%edi
		call   func_6104a
		test   %bx,%bx
		je     jump_4841c
		call   func_4a106
		mov    $0xa,%edx
		mov    $0x8,%ebx
		mov    $0x1,%eax
		mov    $0x8,%ecx
		call   func_5ecc7
		push   $0x0
		mov    %dx,0x8(%esp)
		mov    %bx,0x10(%esp)
		movswl %si,%eax
		mov    $0xa,%ebx
		movswl %di,%edx
		call   func_6075a
		xor    %eax,%eax
		call   func_5ecc7
		call   func_5e9e8
		call   func_4a210
		mov    $0x1e,%eax
		mov    $0x2,%ecx
		call   func_1033b
		call   func_499e4
		mov    %ecx,0x8(%esp)
	jump_48368:
		mov    0xa(%esp),%ecx
		mov    0x2(%esp),%ebx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		movswl %di,%edi
		sar    $0x10,%edx
		sar    $0x10,%eax
		movswl %si,%esi
		call   func_454b3
		call   func_4a106
		xor    %eax,%eax
		sar    $0x10,%ecx
		call   func_6104a
		mov    $0x1,%eax
		sar    $0x10,%ebx
		call   func_5ecc7
		push   $0x0
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_6075a
		mov    0x4(%esp),%edx
		xor    %eax,%eax
		mov    0xc(%esp),%ebx
		call   func_5ecc7
		call   func_45431
		call   func_5e9e8
		call   func_4a210
		mov    0x8(%esp),%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,0xc(%esp)
		mov    %dx,0x4(%esp)
		mov    $0xa0,%edx
		mov    %eax,%ecx
		sub    %edi,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x2,%ecx
		add    %eax,%edi
		mov    %ecx,0x8(%esp)
		cmp    $0x96,%di
		jg     jump_4841c
		mov    $0x12c,%edx
		sub    %esi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %eax,%esi
		jmp    jump_48368
	jump_4841c:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xbd,%ecx
		call   func_454b3
		call   func_4a106
		xor    %eax,%eax
		mov    $0x130,%ebx
		call   func_6104a
		mov    $0x1,%eax
		mov    $0x78,%edx
		call   func_5ecc7
		mov    $0x10,%eax
		call   func_5edde
		mov    $0xb8,%ecx
		mov    $0x130,%ebx
		mov    $0x7d,%edx
		mov    $0x10,%eax
		call   func_5edde
		xor    %eax,%eax
		mov    $0x78,%edx
		call   func_5ecc7
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    $0x48,%eax
		mov    0x10(%ebp),%bl
		lea    0x2(%ebp),%edi
		call   func_48132
		push   %edi
		push   $data_77d51
		push   $0x5d
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x48,%eax
		shl    $0x2,%ecx
		sub    %ecx,%eax
		cwtl
		push   %eax
		call   func_5e048
		add    $0x10,%esp
		mov    (%esp),%edx
		push   %edx
		push   $0x82
		push   $0x20
		call   func_5e048
		add    $0xc,%esp
		call   func_5e9e8
		mov    $0x2bc,%eax
		call   func_499ef
		mov    $0x2,%eax
		call   func_1033b
		call   func_4a321
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_484f9:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,0xc(%esp)
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		imul   $0x3,%ecx,%ecx
		mov    0x4(%esp),%edx
		sub    %ecx,%edx
		mov    0xc(%esp),%ebx
		mov    %dx,0x4(%esp)
		cmp    $0x8,%bx
		jge    jump_48539
		mov    $0x8,%eax
		sub    %ebx,%eax
		mov    %ax,0x10(%esp)
		jmp    jump_48549
	jump_48539:
		mov    %ebx,%eax
		sub    $0x7,%eax
		cmp    $0x6,%ax
		jle    jump_48549
		mov    $0x6,%eax
	jump_48549:
		mov    -0x2(%esp),%edi
		mov    0x2(%esp),%ebp
		mov    $0x1,%ecx
		and    $0xff,%eax
		mov    %esi,%ebx
		mov    %eax,0x8(%esp)
		push   %eax
		sar    $0x10,%ebp
		sar    $0x10,%edi
		lea    -0x1(%ebp),%eax
		mov    %edi,%edx
		call   func_608e6
		mov    0x8(%esp),%ebx
		mov    $0x1,%ecx
		lea    0x1(%ebp),%eax
		push   %ebx
		mov    %edi,%edx
		mov    %esi,%ebx
		call   func_608e6
		mov    0x8(%esp),%ecx
		lea    -0x1(%edi),%edx
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%eax
		mov    $0x1,%ecx
		call   func_608e6
		mov    0x8(%esp),%eax
		mov    $0x1,%ecx
		lea    0x1(%edi),%edx
		mov    %esi,%ebx
		push   %eax
		mov    %ebp,%eax
		mov    0x10(%esp),%edi
		call   func_608e6
		cmp    $0x9,%di
		jle    jump_485d6
		mov    %edi,%eax
		add    $0x6,%eax
		mov    %ax,0x10(%esp)
		cmp    $0x11,%ax
		jle    jump_485e8
		mov    0x24(%esp),%eax
		jmp    jump_485e3
	jump_485d6:
		cmp    $0x7,%di
		jle    jump_485e8
		mov    %edi,%eax
		add    $0x39,%eax
	jump_485e3:
		mov    %ax,0x10(%esp)
	jump_485e8:
		mov    -0x2(%esp),%edx
		xor    %eax,%eax
		mov    $0x1,%ecx
		mov    0x10(%esp),%al
		mov    %esi,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_608e6
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_48612:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %bx,(%esp)
		mov    $0x3,%eax
		call   func_1033b
		movsbl (%ecx),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x8(%esp)
		movsbl 0x1(%ecx),%eax
		call   func_10988
		sub    $0x10,%eax
		mov    $0x1,%esi
		mov    %ax,0x4(%esp)
	jump_48652:
		mov    -0x2(%esp),%eax
		mov    0x2(%esp),%edx
		movswl %si,%ecx
		sar    $0x10,%eax
		mov    %edi,%ebx
		push   %eax
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_484f9
		call   func_499e4
		call   func_5e9e8
		cmp    $0x24,%si
		jle    jump_48652
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4868a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		lea    0x2c(%esp),%eax
		mov    %esp,%ebx
		mov    0x28(%esp),%edx
		mov    0x1e(%esp),%edi
		mov    0x1a(%esp),%esi
		mov    $0x1,%ecx
		mov    %eax,(%esp)
		sar    $0x10,%edi
		mov    $data_fa784,%eax
		sar    $0x10,%esi
		call   w_dos_vsprintf
		push   $0x6
		mov    $data_fa784,%ebx
		xor    %edx,%edx
		lea    -0x1(%esi),%eax
		mov    %edx,0x4(%esp)
		mov    %edi,%edx
		call   func_608e6
		push   $0x6
		mov    $0x1,%ecx
		mov    $data_fa784,%ebx
		lea    0x1(%esi),%eax
		mov    %edi,%edx
		call   func_608e6
		push   $0x6
		mov    $0x1,%ecx
		mov    $data_fa784,%ebx
		lea    -0x1(%edi),%edx
		mov    %esi,%eax
		call   func_608e6
		push   $0x6
		mov    $0x1,%ecx
		mov    $data_fa784,%ebx
		lea    0x1(%edi),%edx
		mov    %esi,%eax
		call   func_608e6
		xor    %eax,%eax
		mov    $0x1,%ecx
		mov    0x24(%esp),%al
		mov    $data_fa784,%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_608e6
		jmp    jump_44f28


/*----------------------------------------------------------------*/
func_48734:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $0x78,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    0x10(%eax),%bl
		mov    $0x4c,%eax
		lea    0x2(%esi),%edi
		call   func_48132
		push   %edi
		push   $data_77d51
		push   $0x5d
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%eax
		mov    $0x4c,%edx
		shl    $0x2,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		push   %eax
		call   func_5e048
		mov    data_fd7ae,%ax
		add    $0xa4,%eax
		movswl %ax,%edx
		mov    data_fd7ac,%ax
		add    $0x10,%esp
		add    $0x4c,%eax
		mov    data_fd7b0,%ebx
		cwtl
		call   func_5f3fd
		movzbl 0x11(%esi),%edi
		shl    $0x4,%edi
		add    $data_71118,%edi
		push   %edi
		push   $0x11
		push   $0x7e
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		imul   $0x3,%ecx,%ecx
		mov    $0x4c,%eax
		sub    %ecx,%eax
		cwtl
		push   %eax
		call   func_4868a
		xor    %eax,%eax
		add    $0x10,%esp
		mov    0x2b(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x11
		push   $0x92
		push   $0x60
		call   func_4868a
		mov    0x4c(%esi),%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x14,%esp
		push   %eax
		mov    %esi,%eax
		call   func_13853
		cwtl
		push   %eax
		push   $data_77d58
		push   $0x11
		push   $0x9d
		push   $0x3c
		call   func_4868a
		mov    0x50(%esi),%eax
		add    $0x18,%esp
		sar    $0x10,%eax
		push   %eax
		mov    0x4e(%esi),%eax
		sar    $0x10,%eax
		push   %eax
		push   $data_77d58
		push   $0x11
		push   $0xa7
		push   $0x3c
		call   func_4868a
		add    $0x18,%esp
		xor    %eax,%eax
		mov    0x3d(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x11
		push   $0xb1
		push   $0x60
		call   func_4868a
		add    $0x14,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_48863:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x3c,%esp
		mov    %eax,%esi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    data_fd7de,%ax
		add    $0x64,%eax
		movswl %ax,%edx
		mov    data_fd7dc,%ax
		add    $0xa0,%eax
		mov    data_fd7e0,%ebx
		cwtl
		call   func_5f3fd
		xor    %eax,%eax
		mov    0x3f(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x7
		push   $0x1
		push   $0xb
		push   $0xe9
		call   func_60944
		xor    %eax,%eax
		add    $0x18,%esp
		mov    0x3f(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x18
		push   $0x1
		push   $0xa
		push   $0xe8
		mov    $0x21,%edi
		mov    $0x6d,%edx
		call   func_60944
		add    $0x18,%esp
		xor    %eax,%eax
		jmp    jump_4891e
	jump_488f2:
		mov    0x12(%esp),%edx
		inc    %eax
		mov    $0x21,%ebx
		mov    %ax,(%esp)
		sar    $0x10,%edx
		mov    -0x2(%esp),%ecx
		mov    $data_fda12,%eax
		sar    $0x10,%ecx
		call   func_4ac28
		mov    0x14(%esp),%edx
		add    $0x15,%edx
		mov    (%esp),%eax
	jump_4891e:
		mov    %dx,0x14(%esp)
		xor    %edx,%edx
		mov    0x38(%esi),%dl
		cmp    %dx,%ax
		jl     jump_488f2
		mov    $0x6d,%ebx
		mov    $0x8,%eax
		add    $0x18,%edi
		xor    %ecx,%ecx
		mov    %bx,0x20(%esp)
		mov    %ecx,0x24(%esp)
		mov    %ax,0x38(%esp)
		jmp    jump_48986
	jump_4894c:
		mov    0x36(%esp),%ecx
		mov    0x1e(%esp),%edx
		mov    $data_fda12,%eax
		movswl %di,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		call   func_4ac28
		mov    0x20(%esp),%ebx
		mov    0x38(%esp),%ecx
		mov    0x24(%esp),%eax
		add    $0x15,%ebx
		inc    %ecx
		inc    %eax
		mov    %bx,0x20(%esp)
		mov    %cx,0x38(%esp)
		mov    %eax,0x24(%esp)
	jump_48986:
		xor    %eax,%eax
		mov    0x24(%esp),%ebx
		mov    0x39(%esi),%al
		cmp    %bx,%ax
		jg     jump_4894c
		mov    $0x6d,%ecx
		mov    $0xc,%edx
		add    $0x18,%edi
		xor    %eax,%eax
		mov    %cx,0x28(%esp)
		mov    %eax,0x30(%esp)
		mov    %dx,0x4(%esp)
		jmp    jump_489ed
	jump_489b3:
		mov    0x2(%esp),%ecx
		mov    0x26(%esp),%edx
		mov    $data_fda12,%eax
		movswl %di,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		call   func_4ac28
		mov    0x28(%esp),%edx
		mov    0x4(%esp),%ebx
		mov    0x30(%esp),%ecx
		add    $0x15,%edx
		inc    %ebx
		inc    %ecx
		mov    %dx,0x28(%esp)
		mov    %bx,0x4(%esp)
		mov    %ecx,0x30(%esp)
	jump_489ed:
		xor    %eax,%eax
		mov    0x30(%esp),%edx
		mov    0x3a(%esi),%al
		cmp    %dx,%ax
		jg     jump_489b3
		mov    $0x6d,%ebx
		mov    $0x10,%eax
		add    $0x18,%edi
		xor    %ecx,%ecx
		mov    %bx,0x10(%esp)
		mov    %ecx,0x1c(%esp)
		mov    %ax,0x2c(%esp)
		jmp    jump_48a54
	jump_48a1a:
		mov    0x2a(%esp),%ecx
		mov    0xe(%esp),%edx
		mov    $data_fda12,%eax
		movswl %di,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		call   func_4ac28
		mov    0x10(%esp),%edx
		mov    0x2c(%esp),%ebx
		mov    0x1c(%esp),%ecx
		add    $0x15,%edx
		inc    %ebx
		inc    %ecx
		mov    %dx,0x10(%esp)
		mov    %bx,0x2c(%esp)
		mov    %ecx,0x1c(%esp)
	jump_48a54:
		xor    %eax,%eax
		mov    0x1c(%esp),%edx
		mov    0x3b(%esi),%al
		cmp    %dx,%ax
		jg     jump_48a1a
		mov    $0x6d,%ebx
		mov    $0x14,%eax
		add    $0x18,%edi
		xor    %ecx,%ecx
		mov    %bx,0xc(%esp)
		mov    %ecx,0x18(%esp)
		mov    %ax,0x8(%esp)
		jmp    jump_48abb
	jump_48a81:
		mov    0x6(%esp),%ecx
		mov    0xa(%esp),%edx
		mov    $data_fda12,%eax
		movswl %di,%ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		call   func_4ac28
		mov    0xc(%esp),%ecx
		mov    0x8(%esp),%eax
		mov    0x18(%esp),%edx
		add    $0x15,%ecx
		inc    %eax
		inc    %edx
		mov    %cx,0xc(%esp)
		mov    %ax,0x8(%esp)
		mov    %edx,0x18(%esp)
	jump_48abb:
		xor    %eax,%eax
		mov    0x18(%esp),%edx
		mov    0x3c(%esi),%al
		cmp    %dx,%ax
		jg     jump_48a81
		xor    %eax,%eax
		mov    0x3e(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x7
		push   $0x1
		push   $0x94
		push   $0xe1
		call   func_60944
		xor    %eax,%eax
		add    $0x18,%esp
		mov    0x3e(%esi),%al
		push   %eax
		push   $data_77d54
		push   $0x18
		push   $0x1
		push   $0x93
		push   $0xe0
		mov    $0x4e,%edi
		mov    $0x29,%ebx
		call   func_60944
		add    $0x18,%esp
		xor    %ecx,%ecx
		mov    %ebx,0x34(%esp)
	jump_48b1b:
		movswl %cx,%eax
		add    %esi,%eax
		mov    0x2e(%eax),%dl
		test   %dl,%dl
		jbe    jump_48b64
		mov    %dl,%al
		xor    %ah,%ah
		dec    %eax
		imul   $0x7,%eax,%eax
		add    0x34(%esp),%eax
		cwtl
		imul   $0xc,%eax,%eax
		mov    data_fd5fe(%eax),%dx
		mov    data_fd600(%eax),%ebx
		add    $0xaa,%edx
		mov    data_fd5fc(%eax),%ax
		mov    %dx,(%esp)
		add    %edi,%eax
		mov    -0x2(%esp),%edx
		cwtl
		sar    $0x10,%edx
		call   func_5f3fd
	jump_48b64:
		movswl %cx,%edx
		mov    %esi,%eax
		call   func_28429
		inc    %eax
		test   %ax,%ax
		jle    jump_48b93
		cwtl
		push   %eax
		push   $data_77d60
		push   $0x18
		push   $0x1
		movswl %di,%eax
		push   $0xba
		sub    $0x3,%eax
		push   %eax
		call   func_60944
		add    $0x18,%esp
	jump_48b93:
		mov    0x34(%esp),%ebx
		add    $0x1a,%edi
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x34(%esp)
		cmp    $0x7,%cx
		jl     jump_48b1b
		call   func_5e9e8
		mov    $0xbb8,%eax
		call   func_499ef
		add    $0x3c,%esp
		jmp    jump_4542b


/*----------------------------------------------------------------*/
func_48bc1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ecx,%eax
		call   func_48734
		mov    data_fd7ba,%ax
		add    $0x4a,%eax
		movswl %ax,%edx
		mov    data_fd7b8,%ax
		add    $0xdc,%eax
		mov    data_fd7bc,%ebx
		cwtl
		call   func_5f3fd
		mov    data_fd7d2,%ax
		add    $0xb8,%eax
		movswl %ax,%edx
		mov    data_fd7d0,%ax
		inc    %ah
		mov    data_fd7d4,%ebx
		cwtl
		call   func_5f3fd
		mov    $0xff,%ebx
		mov    $0x1800,%edx
		mov    $0x4,%eax
		call   func_5db66
		xor    %eax,%eax
		mov    0x40(%ecx),%al
		push   %eax
		push   $data_77d54
		push   $0x2d
		push   $0xb1
		call   func_5e048
		xor    %eax,%eax
		add    $0x10,%esp
		mov    0x42(%ecx),%al
		push   %eax
		push   $data_77d54
		push   $0x2d
		push   $0x109
		call   func_5e048
		xor    %eax,%eax
		add    $0x10,%esp
		mov    0x41(%ecx),%al
		push   %eax
		push   $data_77d54
		push   $0x46
		push   $0xb1
		call   func_5e048
		xor    %eax,%eax
		add    $0x10,%esp
		mov    0x43(%ecx),%al
		push   %eax
		push   $data_77d54
		push   $0x46
		push   $0x109
		call   func_5e048
		mov    0x42(%ecx),%eax
		add    $0x10,%esp
		sar    $0x10,%eax
		push   %eax
		push   $data_77d54
		push   $0x63
		push   $0xb1
		call   func_5e048
		mov    0x44(%ecx),%eax
		add    $0x10,%esp
		sar    $0x10,%eax
		push   %eax
		push   $data_77d54
		push   $0x63
		push   $0x109
		call   func_5e048
		add    $0x10,%esp
		xor    %eax,%eax
		mov    0x59(%ecx),%al
		push   %eax
		push   $data_77d54
		push   $0x7c
		push   $0xb1
		call   func_5e048
		mov    0x52(%ecx),%eax
		add    $0x10,%esp
		sar    $0x10,%eax
		push   %eax
		push   $data_77d54
		push   $0x7c
		push   $0x109
		mov    $0xff,%ebx
		call   func_5e048
		add    $0x10,%esp
		mov    $0x1100,%edx
		mov    $0x4,%eax
		call   func_5db66
		mov    data_fd7c6,%ax
		add    $0x9e,%eax
		movswl %ax,%edx
		mov    data_fd7c4,%ax
		add    $0xdc,%eax
		mov    data_fd7c8,%ebx
		cwtl
		call   func_5f3fd
		cmpb   $0x0,0x5b(%ecx)
		je     jump_48d8b
		xor    %eax,%eax
		mov    0x5b(%ecx),%al
		dec    %eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_efdb8(,%eax,4),%ebx
		mov    data_efdb6(,%eax,4),%dx
		mov    data_efdb4(,%eax,4),%ax
		add    $0xb6,%edx
		add    $0xa1,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_48d8b:
		mov    0x5a(%ecx),%dl
		test   %dl,%dl
		je     jump_48dcc
		xor    %eax,%eax
		mov    %dl,%al
		dec    %eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_efdb8(,%eax,4),%ebx
		mov    data_efdb6(,%eax,4),%dx
		mov    data_efdb4(,%eax,4),%ax
		add    $0xb6,%edx
		add    $0xbe,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_48dcc:
		mov    0x5d(%ecx),%dh
		test   %dh,%dh
		je     jump_48e0d
		xor    %eax,%eax
		mov    %dh,%al
		dec    %eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_efdb8(,%eax,4),%ebx
		mov    data_efdb6(,%eax,4),%dx
		mov    data_efdb4(,%eax,4),%ax
		add    $0xb6,%edx
		add    $0xdb,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_48e0d:
		mov    0x5e(%ecx),%bl
		test   %bl,%bl
		je     jump_48e4e
		xor    %eax,%eax
		mov    %bl,%al
		dec    %eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_efdb8(,%eax,4),%ebx
		mov    data_efdb6(,%eax,4),%dx
		mov    data_efdb4(,%eax,4),%ax
		add    $0xb6,%edx
		add    $0xf8,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_48e4e:
		mov    0x5f(%ecx),%bh
		test   %bh,%bh
		je     jump_48e8c
		xor    %eax,%eax
		mov    %bh,%al
		dec    %eax
		cwtl
		mov    %eax,%ecx
		shl    $0x2,%ecx
		sub    %eax,%ecx
		mov    data_efdb6(,%ecx,4),%ax
		add    $0xb6,%eax
		movswl %ax,%edx
		mov    data_efdb4(,%ecx,4),%ax
		add    $0x115,%eax
		mov    data_efdb8(,%ecx,4),%ebx
		cwtl
		call   func_5f3fd
	jump_48e8c:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_48e90:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%ebp
		mov    0x5b(%eax),%al
		mov    %al,0x8(%esp)
		mov    0x5a(%ebp),%al
		mov    %al,0x9(%esp)
		mov    0x5d(%ebp),%al
		mov    %al,0xa(%esp)
		mov    0x5e(%ebp),%al
		mov    %al,0xb(%esp)
		mov    $0x1,%edx
		mov    0x5f(%ebp),%al
		mov    %edx,0x18(%esp)
		mov    %al,0xc(%esp)
	jump_48ec7:
		cmpw   $0x1,0x18(%esp)
		jne    jump_48ed6
		mov    %ebp,%eax
		call   func_48bc1
	jump_48ed6:
		call   func_5d41e
		call   func_5e9e8
	jump_48ee0:
		mov    %esp,%esi
		call   func_5d22e
		call   func_61e7e
		test   %eax,%eax
		je     jump_48ef9
		call   w_dos_getch
		mov    %ax,(%esp)
	jump_48ef9:
		cmpw   $0x0,(%esp)
		je     jump_48ee0
		call   func_5d570
		xor    %esi,%esi
		mov    (%esp),%edi
		mov    %esi,0x18(%esp)
		cmp    $0x2,%di
		jne    jump_49388
		mov    0x2(%esp),%eax
		cmp    $0x94,%ax
		jl     jump_49356
		cmp    $0x123,%ax
		jg     jump_49356
		mov    0x4(%esp),%ebx
		cmp    $0x91,%bx
		jl     jump_49356
		cmp    $0xab,%bx
		jg     jump_49356
		mov    (%esp),%edx
		sar    $0x10,%edx
		sub    $0x94,%edx
		mov    $0x1d,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ax,0x20(%esp)
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		mov    0x8(%esp,%eax,1),%dl
		test   %dl,%dl
		je     jump_49388
		mov    %dl,%al
		dec    %al
		mov    %al,0x24(%esp)
	jump_48f82:
		xor    %eax,%eax
		mov    0x24(%esp),%al
		imul   $0xc,%eax,%eax
		mov    data_efdb0(%eax),%ecx
		sar    $0x11,%ecx
		and    $0xff,%ecx
		push   %ecx
		mov    data_efdae(%eax),%ecx
		sar    $0x11,%ecx
		mov    $0x18,%ebx
		and    $0xff,%ecx
		mov    data_efdb8(%eax),%eax
		mov    %ebx,%edx
		call   func_5d3c5
		mov    $0x124,%edx
		mov    $0x1c,%eax
		call   mouse_set_horizontal_range
		mov    $0xb8,%edx
		mov    $0x10,%eax
		mov    %esp,%esi
		call   mouse_set_vertical_range
		call   func_5d41e
		call   func_5e9e8
		call   func_5d22e
		call   func_5d570
		mov    (%esp),%ecx
		cmp    $0x6,%cx
		je     jump_48f82
		cmp    $0x8,%cx
		jne    jump_48f82
		mov    0x2(%esp),%edi
		cmp    $0x94,%di
		jl     jump_4934d
		cmp    $0x123,%di
		jg     jump_4934d
		mov    0x4(%esp),%edx
		cmp    $0x91,%dx
		jl     jump_4934d
		cmp    $0xab,%dx
		jg     jump_4934d
		mov    (%esp),%edx
		sar    $0x10,%edx
		sub    $0x94,%edx
		mov    $0x1d,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		test   %ax,%ax
		jne    jump_4906a
		mov    0x1e(%esp),%edx
		sar    $0x10,%edx
		mov    0x8(%esp,%edx,1),%dl
		mov    $0x1,%ebx
		and    $0xff,%edx
		jmp    jump_4907f
	jump_4906a:
		cmp    $0x1,%ax
		jne    jump_49088
		mov    0x1e(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
	jump_4907b:
		mov    0x8(%esp,%eax,1),%dl
	jump_4907f:
		mov    %ebp,%eax
		call   func_1832d
		jmp    jump_490a3
	jump_49088:
		cmp    $0x2,%ax
		jne    jump_4909e
		mov    0x1e(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		mov    $0x2,%ebx
		jmp    jump_4907b
	jump_4909e:
		mov    $0x1,%eax
	jump_490a3:
		cmp    $0x1,%ax
		jne    jump_490f3
		mov    0x20(%esp),%esi
		test   %si,%si
		jne    jump_490c9
		movswl %cx,%eax
		xor    %edx,%edx
		mov    $0x1,%ebx
	jump_490bc:
		mov    0x8(%esp,%eax,1),%dl
		mov    %ebp,%eax
	jump_490c2:
		call   func_1832d
		jmp    jump_490f3
	jump_490c9:
		cmp    %ax,%si
		jne    jump_490e1
		movswl %cx,%edx
		mov    0x8(%esp,%edx,1),%dl
		and    $0xff,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		jmp    jump_490c2
	jump_490e1:
		cmp    $0x2,%si
		jne    jump_490f3
		movswl %cx,%eax
		xor    %edx,%edx
		mov    $0x2,%ebx
		jmp    jump_490bc
	jump_490f3:
		mov    0x20(%esp),%edx
		cmp    %dx,%cx
		jne    jump_491ea
		mov    0x1e(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,0x8(%esp,%edx,1)
		je     jump_4934d
		mov    %ebp,%eax
		call   func_48bc1
		xor    %eax,%eax
		mov    0x8(%esp,%edx,1),%al
		mov    $0x1,%edx
		call   func_184ca
		mov    %eax,%edi
		mov    %eax,0x10(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		imul   $0x6,%ecx,%edx
		imul   $0x1d,0x20(%esp),%eax
		add    $0x4,%edx
		add    $0xb4,%eax
		sub    %edx,%eax
		mov    %ax,0x14(%esp)
		mov    $0x3,%eax
		call   func_5eb4a
		mov    0x14(%esp),%eax
		mov    $0xb2,%ecx
		add    %edx,%eax
		mov    0x12(%esp),%esi
		mov    %ax,0x1c(%esp)
		dec    %eax
		sar    $0x10,%esi
		movswl %ax,%edi
		mov    $0xaa,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   func_5edde
		mov    $0x5,%eax
		mov    0x1a(%esp),%ebx
		mov    $0xb3,%ecx
		mov    $0xab,%edx
		call   func_5eb4a
		sar    $0x10,%ebx
		mov    %esi,%eax
		call   func_5edde
		mov    $0x2,%eax
		mov    $0xb2,%ecx
		call   func_5eb4a
		mov    0x14(%esp),%eax
		mov    $0xab,%edx
		inc    %eax
		mov    %edi,%ebx
		cwtl
		call   func_5edde
		mov    0x10(%esp),%edx
		push   %edx
		push   $data_77d51
		push   $0x5
		push   $0x1
		push   $0xac
		add    $0x2,%esi
		push   %esi
		call   func_60944
		add    $0x18,%esp
		jmp    jump_4934d
	jump_491ea:
		cmp    $0x1,%ax
		jne    jump_4934d
		test   %dx,%dx
		jne    jump_49207
		mov    $0x1,%edx
	jump_491fe:
		mov    %ebp,%eax
	jump_49200:
		call   func_18262
		jmp    jump_4922b
	jump_49207:
		cmp    %ax,%dx
		jne    jump_49212
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_49200
	jump_49212:
		cmp    $0x2,%dx
		jne    jump_4921f
		mov    $0x2,%edx
		jmp    jump_491fe
	jump_4921f:
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		movb   $0x0,0x5b(%eax,%ebp,1)
	jump_4922b:
		movswl %cx,%eax
		cmpb   $0x0,0x8(%esp,%eax,1)
		je     jump_492c5
		test   %cx,%cx
		jne    jump_4924c
		mov    $0x1,%edx
	jump_49243:
		mov    %ebp,%eax
	jump_49245:
		call   func_18262
		jmp    jump_4926a
	jump_4924c:
		cmp    $0x1,%cx
		jne    jump_49258
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_49245
	jump_49258:
		cmp    $0x2,%cx
		jne    jump_49265
		mov    $0x2,%edx
		jmp    jump_49243
	jump_49265:
		movb   $0x0,0x5b(%eax,%ebp,1)
	jump_4926a:
		mov    0x20(%esp),%eax
		test   %ax,%ax
		jne    jump_49287
		movswl %cx,%edx
		mov    0x8(%esp,%edx,1),%dl
		mov    $0x1,%ebx
		and    $0xff,%edx
		jmp    jump_49298
	jump_49287:
		cmp    $0x1,%ax
		jne    jump_492a1
		movswl %cx,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
	jump_49294:
		mov    0x8(%esp,%eax,1),%dl
	jump_49298:
		mov    %ebp,%eax
		call   func_181a6
		jmp    jump_492c5
	jump_492a1:
		cmp    $0x2,%ax
		jne    jump_492b3
		movswl %cx,%eax
		xor    %edx,%edx
		mov    $0x2,%ebx
		jmp    jump_49294
	jump_492b3:
		mov    0x1e(%esp),%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		mov    0x8(%esp,%edx,1),%dl
		mov    %dl,0x5b(%eax,%ebp,1)
	jump_492c5:
		test   %cx,%cx
		jne    jump_492e5
		mov    0x1e(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		mov    $0x1,%ebx
	jump_492d8:
		mov    0x8(%esp,%eax,1),%dl
	jump_492dc:
		mov    %ebp,%eax
		call   func_181a6
		jmp    jump_49328
	jump_492e5:
		cmp    $0x1,%cx
		jne    jump_492f8
		mov    0x1e(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		jmp    jump_492d8
	jump_492f8:
		cmp    $0x2,%cx
		jne    jump_49316
		mov    0x1e(%esp),%edx
		sar    $0x10,%edx
		mov    0x8(%esp,%edx,1),%dl
		mov    $0x2,%ebx
		and    $0xff,%edx
		jmp    jump_492dc
	jump_49316:
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		movswl %cx,%edx
		mov    0x8(%esp,%eax,1),%al
		mov    %al,0x5b(%edx,%ebp,1)
	jump_49328:
		mov    0x1e(%esp),%edx
		movswl %cx,%eax
		sar    $0x10,%edx
		mov    0x8(%esp,%eax,1),%bl
		mov    %bl,0x8(%esp,%edx,1)
		mov    0x24(%esp),%dl
		mov    $0x1,%ecx
		inc    %dl
		mov    %ecx,0x18(%esp)
		mov    %dl,0x8(%esp,%eax,1)
	jump_4934d:
		xor    %eax,%eax
		call   func_49c05
		jmp    jump_49388
	jump_49356:
		mov    0x2(%esp),%esi
		cmp    $0xd8,%si
		jl     jump_49388
		cmp    $0x128,%si
		jg     jump_49388
		mov    0x4(%esp),%eax
		cmp    $0xaf,%ax
		jl     jump_49388
		cmp    $0xc0,%ax
		jg     jump_49388
		mov    %ebp,%eax
		mov    $0x1,%ebx
		call   func_48863
		mov    %ebx,0x18(%esp)
	jump_49388:
		mov    (%esp),%edi
		cmp    $0x1b,%di
		je     jump_4939b
		cmp    $0x3,%di
		jne    jump_48ec7
	jump_4939b:
		add    $0x28,%esp
		jmp    jump_4542a


/*----------------------------------------------------------------*/
func_493a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		call   func_103a8
		xor    %eax,%eax
		call   func_44dec
		mov    $0x1,%eax
		call   func_44d6e
		cmpb   $0x1,0xe(%ebx)
		jne    jump_493cc
		mov    %ebx,%eax
		call   func_48e90
		jmp    jump_493f8
	jump_493cc:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebx,%eax
		call   func_48734
		call   func_5e9e8
		mov    $0x4b0,%eax
		call   func_499ef
	jump_493f8:
		xor    %eax,%eax
		call   func_44d6e
		mov    $0x1,%eax
		call   func_44dec
		call   func_103a0
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_49411:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_fdbc0,%ah
		test   %ah,%ah
		je     jump_49474
		mov    $0x1,%eax
		call   func_44d6e
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		push   $data_77d63
		push   $0x22
		push   $0x30
		call   func_5e048
		add    $0xc,%esp
		push   $data_fdbc0
		push   $0x37
		push   $0x40
		call   func_5e048
		add    $0xc,%esp
		call   func_5e9e8
		mov    $0xbb8,%eax
		call   func_499ef
		mov    $0x1,%eax
		pop    %edx
		ret
	jump_49474:
		xor    %al,%al
		pop    %edx
		ret
	jump_49667:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_496e0:
/*----------------------------------------------------------------*/
		push   %edx
		push   %eax
		push   $data_77d8d
		call   w_printf
		add    $0xc,%esp
		mov    $0x7,%eax
		call   w_putchar
		mov    $0x1,%eax
		jmp    w_dos_exit


/*----------------------------------------------------------------*/
func_49703:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    $0xfa,%edx
		mov    $data_fb2d1,%eax
		mov    $data_77d9d,%esi /* "\\" */
		mov    $data_fb2d1,%edi
#if 0
		call   func_getcwd_
#endif
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_4972c:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49744
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4972c
	jump_49744:
		pop    %edi
		lea    0x4(%esp),%edx /* 0x4(%esp): cdrom number */
		mov    %esp,%eax
		mov    $data_fb1d2,%edi
		mov    $data_77d9f,%esi
		call   cdrom_get_cdrom_starting_letter_and_number
		mov    (%esp),%al /* starting letter */

    /* strcpy (&data_fb1d2, &data_77d9f); */
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

		add    %al,data_fb1d2 /* data_fb1d2: X:\GENESIS2 X: cdrom drive char. */
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4976f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   %edx
		push   %eax
		call   w_dos_open
		mov    %eax,%ecx
		cwtl
		add    $0x8,%esp
		cmp    $0xffffffff,%eax
		jne    jump_49796
		call   func_55ebc
		mov    $data_77dac,%edx
		mov    %ebx,%eax
		call   func_496e0
	jump_49796:
		mov    %ecx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4979b:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebp
		mov    %ebx,%edx
		mov    $data_fb2d1,%esi
		mov    $data_fb3d0,%edi
		push   %edi
	jump_497b0:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_497c8
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_497b0
	jump_497c8:
		pop    %edi
		mov    %ecx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_497d4:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_497ec
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_497d4
	jump_497ec:
		pop    %edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_497f8:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49810
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_497f8
	jump_49810:
		pop    %edi
		mov    %edi,%eax
		call   func_4976f
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4981d:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $data_fb2d1,%esi
		mov    $data_fb3d0,%edi
		push   %edi
	jump_4982e:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49846
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4982e
	jump_49846:
		pop    %edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_49852:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4986a
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_49852
	jump_4986a:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_49876:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4988e
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_49876
	jump_4988e:
		pop    %edi
		push   %ebx
		push   %edi
		call   w_dos_open
		movswl %ax,%ecx
		add    $0x8,%esp
		cmp    $0xffffffff,%ecx
		jne    jump_49911
		mov    $data_fb1d2,%esi /* data_fb1d2: "X:\\GENESIS2" */
		push   %edi
	jump_498a7:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_498bf
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_498a7
	jump_498bf:
		pop    %edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_498cb:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_498e3
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_498cb
	jump_498e3:
		pop    %edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_498ef:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49907
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_498ef
	jump_49907:
		pop    %edi
		mov    %ebx,%edx
		mov    %edi,%eax
		call   func_4976f
	jump_49911:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_49916:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebp
		mov    %ebx,%edx
		mov    $data_fb2d1,%esi
		mov    $data_fb3d0,%edi
		push   %edi
	jump_4992b:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49943
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4992b
	jump_49943:
		pop    %edi
		mov    %ecx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_4994f:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_49967
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4994f
	jump_49967:
		pop    %edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_49973:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4998b
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_49973
	jump_4998b:
		pop    %edi
		mov    %edi,%eax
		call   w_dos_creat
		mov    %eax,%ecx
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_499b6
		call   func_55ebc
		mov    $data_77db4,%edx
		mov    %ebp,%eax
		call   func_496e0
		mov    $0x1,%eax
		call   w_dos_exit
	jump_499b6:
		mov    %ecx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_499bd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		test   %ax,%ax
		je     jump_499d7
		call   w_rand
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%eax
	jump_499d7:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_499da:
/*----------------------------------------------------------------*/
		and    $0xffff,%eax
		call   func_1033b


/*----------------------------------------------------------------*/
func_499e4:
/*----------------------------------------------------------------*/
#if 1
    call   w_game_update
#endif
		call   func_10364
		test   %ax,%ax
		je     func_499e4
		ret


/*----------------------------------------------------------------*/
func_499ef:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		sub    $0x8,%esp
		and    $0xffff,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_49a04:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		cmp    $0x1,%ax
		jne    jump_49a27
		call   w_dos_getch
		test   %ax,%ax
		jne    jump_49a38
		call   w_dos_getch
		jmp    jump_49a38
	jump_49a27:
		cmpw   $0x2,(%esp)
		je     jump_49a38
		call   func_10364
		test   %ax,%ax
		je     jump_49a04
	jump_49a38:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_49a3e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		push   %edx
		mov    %ebx,%ebp
		mov    %ecx,%esi
		mov    $0x300,%ecx
		mov    $data_fabe0,%edi
		mov    -0x2(%esp),%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		mov    %edi,%ecx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_5fc21
		jmp    jump_49a9c
	jump_49a7a:
		mov    -0x2(%esp),%edx
		mov    $data_fabe0,%ecx
		movswl %si,%eax
		mov    %ebp,%ebx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5fd1c
		add    0x18(%esp),%esi
	jump_49a9c:
		cmp    $0x64,%si
		jle    jump_49a7a
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4

vtable_49aac:
		.long   func_49acf
		.long   func_49ad3
		.long   func_49ad7
		.long   func_49adb


/*----------------------------------------------------------------*/
func_49abc:
/*----------------------------------------------------------------*/
		cmp    $0x3,%bl
		ja     jump_49ade
		and    $0xff,%ebx
		jmp    *vtable_49aac(,%ebx,4)


/*----------------------------------------------------------------*/
func_49acf:
/*----------------------------------------------------------------*/
		incw   (%edx)
		ret


/*----------------------------------------------------------------*/
func_49ad3:
/*----------------------------------------------------------------*/
		decw   (%eax)
		ret


/*----------------------------------------------------------------*/
func_49ad7:
/*----------------------------------------------------------------*/
		decw   (%edx)
		ret


/*----------------------------------------------------------------*/
func_49adb:
/*----------------------------------------------------------------*/
		incw   (%eax)
	jump_49ade:
		ret


/*----------------------------------------------------------------*/
func_49adf:
/*----------------------------------------------------------------*/
		push   %ecx
		movsbw (%eax),%cx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   %cx,%cx
		jge    jump_49aef
		neg    %edx
	jump_49aef:
		movsbw 0x1(%eax),%ax
		sub    %ebx,%eax
		test   %ax,%ax
		jge    jump_49afd
		neg    %eax
	jump_49afd:
		add    %edx,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_49b01:
/*----------------------------------------------------------------*/
		sub    %ebx,%eax
		test   %ax,%ax
		jge    jump_49b0a
		neg    %eax
	jump_49b0a:
		sub    %ecx,%edx
		test   %dx,%dx
		jge    jump_49b13
		neg    %edx
	jump_49b13:
		add    %edx,%eax
		ret


/*----------------------------------------------------------------*/
func_49b16:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    $0x200,%edx
		call   func_4976f
		xor    %ebx,%ebx
		mov    $0x80,%edx
		mov    %ax,0x4(%esp)
		cwtl
		xor    %edi,%edi
		call   w_dos_lseek
	jump_49b3c:
		mov    0x2(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		movswl %di,%esi
		call   w_dos_read
		mov    (%esp),%eax
		mov    $0x1,%ebx
		mov    $0x8,%edx
		call   w_dos_malloc
		mov    %eax,data_fb080(,%esi,4)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%ebx
		mov    %ecx,%eax
		mov    data_fb080(,%esi,4),%edx
		call   w_dos_read
		mov    data_fb080(,%esi,4),%eax
		inc    %edi
		call   func_10031
		cmp    $0x4,%di
		jl     jump_49b3c
		xor    %edi,%edi
	jump_49b9a:
		mov    0x2(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		movswl %di,%esi
		call   w_dos_read
		mov    (%esp),%eax
		mov    $0x1,%ebx
		mov    $0x8,%edx
		call   w_dos_malloc
		mov    %eax,data_fb070(,%esi,4)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    (%esp),%ebx
		mov    %ecx,%eax
		mov    data_fb070(,%esi,4),%edx
		call   w_dos_read
		mov    data_fb070(,%esi,4),%eax
		inc    %edi
		call   func_10031
		cmp    $0x4,%di
		jl     jump_49b9a
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x8,%esp
		jmp    jump_49667


/*----------------------------------------------------------------*/
func_49c05:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%edx
		mov    %esp,%esi
		call   mouse_get_state
		test   %dx,%dx
		je     jump_49c38
		cmpw   $0x118,0x2(%esp)
		setg   %al
		mov    0x4(%esp),%ebx
		movzbw %al,%si
		cmp    $0xa4,%bx
		jle    jump_49c3a
		add    $0x2,%esi
		jmp    jump_49c3a
	jump_49c38:
		xor    %esi,%esi
	jump_49c3a:
		mov    $0x11,%ebx
		movswl %si,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    data_75016(,%esi,4),%al
		mov    %ebx,%edx
		push   %eax
		mov    data_75014(,%esi,4),%cl
		mov    data_fb080(,%esi,4),%eax
		call   func_5d3c5
		mov    data_75014(,%esi,4),%ax
		add    $0x120,%eax
		movswl %ax,%edx
		mov    data_75014(,%esi,4),%ax
		add    $0x10,%eax
		cwtl
		call   mouse_set_horizontal_range
		mov    data_75016(,%esi,4),%ax
		add    $0xb5,%eax
		movswl %ax,%edx
		mov    data_75016(,%esi,4),%ax
		add    $0x4,%eax
		cwtl
		call   mouse_set_vertical_range
	jump_49ca9:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_49cb1:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		push   $data_fa8c0
		mov    0xa(%esp),%edi
		mov    0x6(%esp),%eax
		mov    0xe(%esp),%ebp
		mov    0x2(%esp),%esi
		sar    $0x10,%edi
		sar    $0x10,%eax
		sar    $0x10,%ebp
		mov    %eax,0x28(%esp)
		mov    %edi,%ecx
		mov    %eax,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		sar    $0x10,%esi
		call   func_5eecf
		push   $data_fa988
		mov    0x28(%esp),%ebx
		mov    %esi,%ecx
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_5eecf
		push   $data_faa50
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_5eecf
		push   $data_fab18
		mov    0x28(%esp),%ebx
		mov    %esi,%ecx
		mov    %edi,%edx
		mov    %ebx,%eax
		call   func_5eecf
		mov    data_75021,%eax
		sar    $0x18,%eax
		call   func_5eb4a
		mov    data_75021,%edx
		sar    $0x18,%edx
		sub    $0x8,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %esi,%ecx
		mov    0x24(%esp),%ebx
		add    $0x9,%edx
		mov    %ebp,%eax
		mov    %dl,data_75024
		mov    %edi,%edx
		call   func_5ecf2
		lea    0x7(%edi),%eax
		push   $data_faee0
		mov    %eax,0x24(%esp)
		dec    %edi
		mov    0x24(%esp),%ecx
		lea    0x7(%ebp),%eax
		mov    %edi,0x18(%esp)
		mov    %edi,%edx
		mov    %eax,0x1c(%esp)
		dec    %ebp
		mov    %eax,%ebx
		mov    %ebp,%eax
		mov    %ebp,0x20(%esp)
		call   func_5eecf
		push   $data_faf44
		mov    0x28(%esp),%eax
		mov    0x28(%esp),%edi
		mov    0x24(%esp),%ecx
		mov    0x18(%esp),%edx
		lea    0x3(%esi),%ebp
		add    $0x2,%eax
		sub    $0x6,%edi
		mov    %eax,0x14(%esp)
		mov    %eax,%ebx
		mov    %edi,%eax
		sub    $0x5,%esi
		call   func_5eecf
		push   $data_fafa8
		mov    0x1c(%esp),%ebx
		mov    0x20(%esp),%eax
		mov    %ebp,%ecx
		mov    %esi,%edx
		call   func_5eecf
		push   $data_fb00c
		mov    0x14(%esp),%ebx
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_5eecf
		mov    0x8(%esp),%eax
		dec    %eax
		movswl %ax,%esi
		mov    0xc(%esp),%eax
		dec    %eax
		mov    data_fb070,%ebx
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_5f3fd
		mov    0x4(%esp),%eax
		sub    $0x6,%eax
		mov    data_fb074,%ebx
		movswl %ax,%ebp
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_5f3fd
		mov    (%esp),%eax
		sub    $0x5,%eax
		movswl %ax,%esi
		mov    data_fb078,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_5f3fd
		mov    data_fb07c,%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		call   func_5f3fd
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_49e4e:
/*----------------------------------------------------------------*/
		cmp    data_fb1bc,%eax
		je     jump_49eed
		test   %eax,%eax
		je     jump_49eed
		mov    %eax,data_fb1bc
		cmp    $0x4,%dl
		jne    jump_49e7c
		mov    %bx,data_fb1c6
		mov    %cx,data_fb1c8
		jmp    jump_49ee4
	jump_49e7c:
		cmp    $0x5,%dl
		jne    jump_49e9b
		mov    $0x18,%edx
		mov    $0x10,%ebx
		mov    %dx,data_fb1c6
		mov    %bx,data_fb1c8
		jmp    jump_49ee4
	jump_49e9b:
		mov    0x5d(%eax),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		sub    %ebx,%eax
		mov    $data_d66a8,%ebx
		shl    $0x2,%eax
		movsbl %dl,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		imul   $0x18,%eax,%eax
		mov    %ax,data_fb1c6
		xor    %eax,%eax
		mov    0x1(%edx),%al
		shl    $0x4,%eax
		mov    %ax,data_fb1c8
	jump_49ee4:
		xor    %ecx,%ecx
		mov    %cx,data_fb1c0
	jump_49eed:
		ret


/*----------------------------------------------------------------*/
func_49eee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edi
		mov    %edx,%ebx
		cmpl   $0x0,data_fb1bc
		je     jump_49fdd
		cmpw   $0x1,data_fb1c0
		je     jump_49fdd
		cwtl
		call   func_10971
		mov    %eax,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		dec    %ebx
		call   func_10988
		mov    %bx,data_fb1c2
		mov    data_fb1c6,%bx
		add    %ebx,%edx
		mov    data_fb1c8,%bx
		mov    %dx,data_fb1d0
		mov    %eax,%edx
		mov    data_fb1c2,%cx
		sub    %ebx,%edx
		add    $0x10,%eax
		add    $0xf,%edx
		mov    %ax,data_fb1c4
		mov    %dx,data_fb1ca
		cmp    $0x10,%cx
		jge    jump_49f6e
		movw   $0x10,data_fb1c2
	jump_49f6e:
		cmpw   $0x130,data_fb1d0
		jle    jump_49f82
		movw   $0x130,data_fb1d0
	jump_49f82:
		cmpw   $0x4,data_fb1ca
		jge    jump_49f95
		movw   $0x4,data_fb1ca
	jump_49f95:
		cmpw   $0xc3,data_fb1c4
		jle    jump_49fa9
		movw   $0xc3,data_fb1c4
	jump_49fa9:
		mov    data_fb1c2,%ecx
		mov    data_fb1ce,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%edi
		call   func_49cb1
		mov    %di,data_fb1c0
	jump_49fdd:
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_49fe1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		movswl %dx,%edx
		xor    %ebx,%ebx
		cwtl
		mov    %bx,data_fb1c0
		call   func_11db2
		cmp    data_fb1bc,%eax
		je     jump_4a0fd
		mov    %eax,data_fb1bc
		test   %eax,%eax
		jne    jump_4a011
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_4a011:
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%ebx
		shl    $0x3,%ebx
		add    %edx,%ebx
		shl    $0x4,%ebx
		mov    0x60(%eax),%eax
		sub    %edx,%ebx
		mov    $data_d66a8,%edx
		shl    $0x2,%ebx
		sar    $0x18,%eax
		add    %ebx,%edx
		mov    %eax,%ebx
		shl    $0x3,%ebx
		add    %eax,%ebx
		shl    $0x4,%ebx
		sub    %eax,%ebx
		add    %edx,%ebx
		xor    %eax,%eax
		mov    0x2(%ebx),%al
		mov    %ax,data_fb1c6
		xor    %eax,%eax
		mov    0x3(%ebx),%al
		mov    data_fb1c6,%cx
		mov    %ax,data_fb1c8
		cmp    $0x18,%cx
		jge    jump_4a09d
		mov    data_fb1c4,%edx
		mov    $0x18,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x1(%ebx),%ecx
		sar    $0x18,%ecx
		add    $0xc,%ecx
		mov    $0x18,%esi
		sub    %eax,%ecx
		mov    %si,data_fb1c6
		mov    %cx,data_fb1cc
		jmp    jump_4a0ad
	jump_4a09d:
		movsbw 0x4(%ebx),%ax
		add    $0xc,%eax
		mov    %ax,data_fb1cc
	jump_4a0ad:
		cmpw   $0x18,data_fb1c8
		jge    jump_4a0ef
		mov    data_fb1c6,%edx
		mov    $0x18,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x2(%ebx),%ebx
		sar    $0x18,%ebx
		sub    $0x2,%ebx
		sub    %eax,%ebx
		mov    $0x18,%eax
		mov    %bx,data_fb1ce
		mov    %ax,data_fb1c8
		jmp    jump_4a0fd
	jump_4a0ef:
		movsbw 0x5(%ebx),%ax
		sub    $0x2,%eax
		mov    %ax,data_fb1ce
	jump_4a0fd:
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a106:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x0,data_fb1bc
		je     jump_4a11c
		cmpw   $0x1,data_fb1c0
		jne    jump_4a122
	jump_4a11c:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_4a122:
		mov    data_fb1bc,%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    data_fb1cc,%dx
		add    %eax,%edx
		mov    data_fb1bc,%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    data_fb1ce,%bx
		mov    %edx,%ecx
		add    %ebx,%eax
		mov    data_fb1c6,%bx
		add    %ebx,%ecx
		mov    data_fb1c8,%bx
		mov    %cx,data_fb1d0
		mov    %eax,%ecx
		add    %ebx,%ecx
		mov    %cx,data_fb1c4
		cmpw   $0x130,data_fb1d0
		jle    jump_4a187
		movw   $0x130,data_fb1d0
	jump_4a187:
		cmpw   $0xc3,data_fb1c4
		jle    jump_4a19b
		movw   $0xc3,data_fb1c4
	jump_4a19b:
		dec    %edx
		dec    %eax
		mov    %dx,data_fb1c2
		mov    %ax,data_fb1ca
		cmp    $0x10,%dx
		jge    jump_4a1b9
		movw   $0x10,data_fb1c2
	jump_4a1b9:
		cmpw   $0x4,data_fb1ca
		jge    jump_4a1cc
		movw   $0x4,data_fb1ca
	jump_4a1cc:
		mov    data_fb1c2,%ecx
		mov    data_fb1ce,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49cb1
		mov    data_fb1bc,%eax
		mov    $0x1,%edx
		call   func_13498
		mov    %dx,data_fb1c0
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a210:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpl   $0x0,data_fb1bc
		je     jump_4a31e
		cmpw   $0x0,data_fb1c0
		je     jump_4a31e
		mov    $data_faee0,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		dec    %edx
		dec    %eax
		call   func_5ee9b
		mov    $data_faf44,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1ce,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		dec    %edx
		sub    $0x6,%eax
		call   func_5ee9b
		mov    $data_fafa8,%ebx
		mov    data_fb1c2,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    $0x5,%edx
		dec    %eax
		call   func_5ee9b
		mov    $data_fb00c,%ebx
		mov    data_fb1c2,%edx
		mov    data_fb1ce,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    $0x5,%edx
		sub    $0x6,%eax
		call   func_5ee9b
		mov    $data_fa8c0,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee9b
		mov    $data_fa988,%ebx
		mov    data_fb1c2,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee9b
		mov    $data_faa50,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1c0,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee9b
		mov    $data_fab18,%ebx
		mov    data_fb1c8,%edx
		mov    data_fb1ce,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee9b
		xor    %ebx,%ebx
		mov    %bx,data_fb1c0
	jump_4a31e:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a321:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    %edx,data_fb1bc
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_4a32c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%edx
		xor    %ecx,%ecx
	jump_4a337:
		mov    $0x3,%eax
		call   func_1033b
		cmp    $0x4b00,%dx
		jb     jump_4a35c
		jbe    jump_4a37b
		cmp    $0x4d00,%dx
		jb     jump_4a393
		jbe    jump_4a387
		cmp    $0x5000,%dx
		je     jump_4a36f
		jmp    jump_4a393
	jump_4a35c:
		cmp    $0x4800,%dx
		jne    jump_4a393
		mov    $0x10,%eax
		call   func_10da7
		jmp    jump_4a391
	jump_4a36f:
		mov    $0x10,%eax
		call   func_10e2f
		jmp    jump_4a391
	jump_4a37b:
		mov    $0x18,%eax
		call   func_10ed1
		jmp    jump_4a391
	jump_4a387:
		mov    $0x18,%eax
		call   func_10f5c
	jump_4a391:
		mov    %eax,%ebx
	jump_4a393:
		call   func_499e4
		test   %bx,%bx
		je     jump_4a39e
		inc    %ecx
	jump_4a39e:
		mov    %esp,%esi
		call   mouse_get_state
		cmp    $0x4b00,%dx
		jb     jump_4a3c0
		jbe    jump_4a3dc
		cmp    $0x4d00,%dx
		jb     jump_4a3ef
		jbe    jump_4a3e4
		cmp    $0x5000,%dx
		je     jump_4a3d1
		jmp    jump_4a3ef
	jump_4a3c0:
		cmp    $0x4800,%dx
		jne    jump_4a3ef
		cmpw   $0x8,0x4(%esp)
	jump_4a3cd:
		jle    jump_4a3ef
		jmp    jump_4a3ed
	jump_4a3d1:
		cmpw   $0xc0,0x4(%esp)
		jge    jump_4a3ef
		jmp    jump_4a3ed
	jump_4a3dc:
		cmpw   $0x16,0x2(%esp)
		jmp    jump_4a3cd
	jump_4a3e4:
		cmpw   $0x12a,0x2(%esp)
		jge    jump_4a3ef
	jump_4a3ed:
		xor    %ebx,%ebx
	jump_4a3ef:
		test   %bx,%bx
		jne    jump_4a337
		mov    %ecx,%eax
		jmp    jump_49ca9


/*----------------------------------------------------------------*/
func_4a3ff:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		sar    $0x8,%dx
	jump_4a408:
		mov    $0x3,%eax
		call   func_1033b
		cmp    $0x4b,%dx
		jb     jump_4a42a
		jbe    jump_4a448
		cmp    $0x4d,%dx
		jb     jump_4a460
		jbe    jump_4a454
		cmp    $0x50,%dx
		je     jump_4a43c
		jmp    jump_4a460
	jump_4a42a:
		cmp    $0x48,%dx
		jne    jump_4a460
		mov    $0x10,%eax
		call   func_10da7
		jmp    jump_4a45e
	jump_4a43c:
		mov    $0x10,%eax
		call   func_10e2f
		jmp    jump_4a45e
	jump_4a448:
		mov    $0x18,%eax
		call   func_10ed1
		jmp    jump_4a45e
	jump_4a454:
		mov    $0x18,%eax
		call   func_10f5c
	jump_4a45e:
		mov    %eax,%ebx
	jump_4a460:
		call   func_499e4
		test   %bx,%bx
		je     jump_4a46b
		inc    %ecx
	jump_4a46b:
		xor    %eax,%eax
		mov    %dl,%al
		call   func_5d827
		test   %al,%al
		je     jump_4a47d
		test   %bx,%bx
		jne    jump_4a408
	jump_4a47d:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a483:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %edx
		mov    %ebx,%ebp
		mov    %ecx,0x10(%esp)
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x8(%esp),%esi
		call   func_454b3
		call   func_5e9e8
		call   mouse_get_state
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %ax,0x18(%esp)
		mov    0xa(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		call   func_109ce
		mov    %eax,%edi
		mov    $0x1,%eax
		mov    $0x5,%edx
		call   func_49c05
		call   func_4a321
		mov    %ebp,%eax
		call   func_49e4e
	jump_4a4f3:
		mov    0x16(%esp),%eax
		movswl %di,%edx
		sar    $0x10,%eax
		call   func_49eee
		call   func_5d41e
		call   func_5e9e8
	jump_4a50c:
		lea    0x8(%esp),%esi
		call   func_5d22e
		call   func_5d839
		cmp    $0x1,%ax
		jne    jump_4a53c
		call   w_dos_getch
		mov    %ax,0x8(%esp)
		test   %ax,%ax
		jne    jump_4a53c
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,0x8(%esp)
	jump_4a53c:
		cmpw   $0x0,0x8(%esp)
		je     jump_4a50c
		call   func_5d570
		call   func_4a210
		xor    %ebx,%ebx
		mov    0x8(%esp),%ecx
		mov    %ebx,0x14(%esp)
		cmp    $0x76,%cx
		jb     jump_4a599
		jbe    jump_4a74d
		cmp    $0x4b00,%cx
		jb     jump_4a592
		jbe    jump_4a73b
		cmp    $0x4d00,%cx
		jb     jump_4a765
		jbe    jump_4a73b
		cmp    $0x5000,%cx
	jump_4a587:
		je     jump_4a73b
		jmp    jump_4a765
	jump_4a592:
		cmp    $0x4800,%cx
		jmp    jump_4a587
	jump_4a599:
		cmp    $0x2,%cx
		jb     jump_4a5c0
		jbe    jump_4a702
		cmp    $0x6,%cx
		jb     jump_4a765
		jbe    jump_4a5ca
		cmp    $0x56,%cx
		je     jump_4a756
		jmp    jump_4a765
	jump_4a5c0:
		cmp    $0x1,%cx
		jne    jump_4a765
	jump_4a5ca:
		mov    $0x1,%eax
		mov    $0x1,%ebx
		call   func_49c05
		mov    0xa(%esp),%ecx
		mov    %ebx,0x14(%esp)
		cmp    $0x28,%cx
		jge    jump_4a5ee
		mov    $0x4b00,%eax
		jmp    jump_4a5fa
	jump_4a5ee:
		cmp    $0x118,%cx
		jle    jump_4a5ff
		mov    $0x4d00,%eax
	jump_4a5fa:
		call   func_4a32c
	jump_4a5ff:
		mov    0xc(%esp),%eax
		cmp    $0x18,%ax
		jge    jump_4a610
		mov    $0x4800,%eax
		jmp    jump_4a61b
	jump_4a610:
		cmp    $0xb8,%ax
		jle    jump_4a620
		mov    $0x5000,%eax
	jump_4a61b:
		call   func_4a32c
	jump_4a620:
		cmpw   $0x1,0x10(%esp)
		jne    jump_4a6e7
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%esi
		mov    %ax,0x18(%esp)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   func_109ce
		mov    %eax,%edi
		cmp    $0x2,%si
		jge    jump_4a65c
		movw   $0x2,0x18(%esp)
		jmp    jump_4a67d
	jump_4a65c:
		mov    data_ba842,%edx
		sar    $0x10,%edx
		movswl %si,%eax
		sub    $0x3,%edx
		cmp    %edx,%eax
		jle    jump_4a67d
		mov    data_ba844,%ax
		sub    $0x3,%eax
		mov    %ax,0x18(%esp)
	jump_4a67d:
		cmp    $0x2,%di
		jge    jump_4a68a
		mov    $0x2,%edi
		jmp    jump_4a6a7
	jump_4a68a:
		mov    data_ba83e,%edx
		sar    $0x10,%edx
		movswl %di,%eax
		sub    $0x3,%edx
		cmp    %edx,%eax
		jle    jump_4a6a7
		mov    data_ba840,%di
		sub    $0x3,%edi
	jump_4a6a7:
		call   func_4a321
		mov    0x16(%esp),%ebx
		movswl %di,%esi
		sar    $0x10,%ebx
		mov    %esi,%edx
		mov    %ebx,%eax
		call   func_13cbd
		test   %ax,%ax
		jl     jump_4a6e7
		mov    %esi,%edx
		mov    %ebx,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_4a6d7
		je     jump_4a6e7
		cmp    %ebp,%eax
		jne    jump_4a6e7
	jump_4a6d7:
		mov    $0x5,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_49e4e
	jump_4a6e7:
		mov    0xa(%esp),%edx
		mov    0x8(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_455bd
		cmp    $0x1,%ax
		jne    jump_4a765
		jmp    jump_4a760
	jump_4a702:
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		mov    0x4(%esp),%edx
		call   func_109a3
		mov    %ax,(%edx)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		mov    (%esp),%edx
		call   func_109ce
		mov    %ax,(%edx)
		call   func_5e9e8
		call   func_4a321
		mov    $0x1,%eax
		jmp    jump_4a80e
	jump_4a73b:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   func_4a3ff
		mov    %eax,0x14(%esp)
		jmp    jump_4a765
	jump_4a74d:
		xor    %eax,%eax
		call   func_1595e
		jmp    jump_4a760
	jump_4a756:
		mov    $0x1,%eax
		call   func_1595e
	jump_4a760:
		call   func_45559
	jump_4a765:
		cmpw   $0x0,0x14(%esp)
		je     jump_4a7eb
		mov    0x8(%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%ebx
		mov    %ax,0x18(%esp)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   func_109ce
		mov    %eax,%edi
		cmp    $0x2,%bx
		jge    jump_4a7a1
		movw   $0x2,0x18(%esp)
		jmp    jump_4a7c1
	jump_4a7a1:
		mov    data_ba842,%eax
		sar    $0x10,%eax
		movswl %bx,%edx
		sub    $0x3,%eax
		cmp    %eax,%edx
		jle    jump_4a7c1
		mov    data_ba844,%ax
		sub    $0x3,%eax
		mov    %ax,0x18(%esp)
	jump_4a7c1:
		cmp    $0x2,%di
		jge    jump_4a7ce
		mov    $0x2,%edi
		jmp    jump_4a7eb
	jump_4a7ce:
		mov    data_ba83e,%edx
		sar    $0x10,%edx
		movswl %di,%eax
		sub    $0x3,%edx
		cmp    %edx,%eax
		jle    jump_4a7eb
		mov    data_ba840,%di
		sub    $0x3,%edi
	jump_4a7eb:
		mov    0x8(%esp),%edx
		cmp    $0x1b,%dx
		je     jump_4a7ff
		cmp    $0x3,%dx
		jne    jump_4a4f3
	jump_4a7ff:
		call   func_5e9e8
		call   func_4a321
		mov    $0xffffffff,%eax
	jump_4a80e:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4a815:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %dx,0x8(%esp)
		mov    %ebx,%edi
		mov    $0x1,%eax
		mov    $0x5,%edx
		call   func_44d67
		call   func_45559
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   func_44d67
		call   func_4a321
		mov    %esi,%eax
		call   func_49e4e
		xor    %ebx,%ebx
	jump_4a851:
		mov    0x6(%esp),%eax
		movswl %di,%edx
		sar    $0x10,%eax
		call   func_49eee
		call   func_5e9e8
	jump_4a865:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_4a890
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_4a890
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_4a890:
		mov    (%esp),%edx
		cmp    %dx,%bx
		je     jump_4a865
		cmp    $0xd,%dx
		je     jump_4a8a4
		cmp    $0x2,%dx
		jne    jump_4a8ab
	jump_4a8a4:
		mov    $0x1,%eax
		jmp    jump_4a8bc
	jump_4a8ab:
		cmp    $0x1b,%dx
		je     jump_4a8b7
		cmp    $0x3,%dx
		jne    jump_4a851
	jump_4a8b7:
		mov    $0xffffffff,%eax
	jump_4a8bc:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4a8c3:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    data_fd5d2,%ebx
		sar    $0x10,%ebx
		mov    %dl,0x6(%ebx,%eax,1)
		movswl %dx,%ebx
		movb   $0x0,0x38(%ebx,%eax,1)
		incw   data_fd5d4
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a8e2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %eax,%eax
	jump_4a8e6:
		movswl %ax,%edx
		imul   $0x2bc,%edx,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,data_fb4d0(%edx)
		cmp    $0xc,%ax
		jl     jump_4a8e6
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a901:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		movb   $0xff,0x5(%eax)
		xor    %ebx,%ebx
	jump_4a90a:
		movswl %bx,%edx
		movb   $0xff,0x6(%edx,%eax,1)
		inc    %ebx
		movb   $0x1,0x38(%edx,%eax,1)
		cmp    $0x32,%bx
		jl     jump_4a90a
		xor    %edx,%edx
		mov    %dx,data_fd5d4
		jmp    jump_4a937
	jump_4a929:
		movswl %dx,%ebx
		imul   $0x25,%ebx,%ecx
		mov    (%eax),%ebx
		inc    %edx
		movb   $0x0,0x4(%ecx,%ebx,1)
	jump_4a937:
		movsbw 0x4(%eax),%bx
		cmp    %bx,%dx
		jl     jump_4a929
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a945:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		mov    %dl,0x4(%eax)
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		call   w_dos_malloc
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		movb   $0xff,0x5(%ebx)
		call   func_4a901
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4a96e:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0x8,%esp
		mov    %dl,0x4(%esp)
		mov    %bl,(%esp)
		mov    0x16(%esp),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		shl    $0x2,%edx
		mov    (%eax),%esi
		add    %ebx,%edx
		mov    0x1a(%esp),%ebx
		add    %edx,%esi
		sar    $0x10,%ebx
		mov    0x4(%esp),%ch
		mov    %ch,0x5(%esi,%ebx,1)
		mov    (%eax),%esi
		add    %edx,%esi
		mov    (%esp),%ch
		mov    %ch,0x9(%esi,%ebx,1)
		mov    (%eax),%esi
		add    %edx,%esi
		mov    %cl,0xd(%esi,%ebx,1)
		mov    (%eax),%esi
		add    %edx,%esi
		mov    0x10(%esp),%cl
		mov    %cl,0x11(%esi,%ebx,1)
		mov    (%eax),%eax
		add    %edx,%eax
		mov    0x14(%esp),%edx
		mov    %edx,0x15(%eax,%ebx,4)
		add    $0x8,%esp
		pop    %esi
		ret    $0x10


/*----------------------------------------------------------------*/
func_4a9d1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cwtl
		imul   $0x2bc,%eax,%edx
		cmpb   $0x0,data_fb4d0(%edx)
		je     jump_4aa3f
		lea    (%eax,%eax,1),%edx
		mov    data_fd5a0(%edx),%ax
		mov    data_fd5b8(%edx),%dx
		cmp    $0x10,%ax
		jge    jump_4aa03
		mov    $0x10,%eax
		jmp    jump_4aa0e
	jump_4aa03:
		cmp    $0x118,%ax
		jle    jump_4aa0e
		mov    $0x118,%eax
	jump_4aa0e:
		cmp    $0x4,%dx
		jge    jump_4aa1b
		mov    $0x4,%edx
		jmp    jump_4aa27
	jump_4aa1b:
		cmp    $0xac,%dx
		jle    jump_4aa27
		mov    $0xac,%edx
	jump_4aa27:
		movswl %bx,%ebx
		imul   $0x2bc,%ebx,%ebx
		movswl %dx,%edx
		cwtl
		add    $data_fb4d0,%ebx
		call   func_5ee9b
	jump_4aa3f:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4aa42:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %ebx,0x4(%esp)
		mov    %ecx,%edi
		movswl %cx,%eax
		lea    (%eax,%eax,1),%ebx
		movw   $0xffff,data_fd5a0(%ebx)
		imul   $0x2bc,%eax,%ecx
		add    %esi,%eax
		movb   $0x0,data_fb4d0(%ecx)
		cmpb   $0xff,0x6(%eax)
		je     jump_4ab6c
		xor    %ecx,%ecx
		mov    0x6(%eax),%cl
		mov    %cx,0x8(%esp)
		xor    %ecx,%ecx
		mov    0x6(%eax),%cl
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x2,%eax
		mov    (%esi),%esi
		add    %ecx,%eax
		add    %esi,%eax
		xor    %ecx,%ecx
		mov    0x4(%eax),%cl
		mov    %cx,(%esp)
		xor    %ecx,%ecx
		mov    0x4(%eax),%cl
		add    %ecx,%eax
		movsbw 0xd(%eax),%cx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x5(%eax),%cl
		movswl %dx,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     jump_4ab6c
		cmp    $0x12f,%dx
		jg     jump_4ab6c
		mov    0x6(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x2,%eax
		add    %ecx,%eax
		mov    -0x2(%esp),%ecx
		add    %esi,%eax
		sar    $0x10,%ecx
		add    %eax,%ecx
		mov    0x4(%esp),%esi
		movsbw 0x11(%ecx),%ax
		add    %esi,%eax
		movzbl 0x9(%ecx),%esi
		movswl %ax,%ecx
		add    %esi,%ecx
		test   %ecx,%ecx
		jl     jump_4ab6c
		cmp    $0xc3,%ax
		jg     jump_4ab6c
		mov    %dx,data_fd5a0(%ebx)
		mov    %ax,data_fd5b8(%ebx)
		cmp    $0x10,%dx
		jge    jump_4ab25
		mov    $0x10,%edx
		jmp    jump_4ab31
	jump_4ab25:
		cmp    $0x118,%dx
		jle    jump_4ab31
		mov    $0x118,%edx
	jump_4ab31:
		cmp    $0x4,%ax
		jge    jump_4ab3e
		mov    $0x4,%eax
		jmp    jump_4ab49
	jump_4ab3e:
		cmp    $0xac,%ax
		jle    jump_4ab49
		mov    $0xac,%eax
	jump_4ab49:
		movswl %di,%ebx
		imul   $0x2bc,%ebx,%ebx
		cwtl
		movswl %dx,%esi
		add    $data_fb4d0,%ebx
		lea    0x18(%eax),%ecx
		push   %ebx
		lea    0x17(%esi),%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_5eecf
	jump_4ab6c:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4ab72:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ecx
		movswl %dx,%eax
		lea    (%eax,%eax,1),%edx
		mov    data_fd59e(%edx),%ebx
		sar    $0x10,%ebx
		cmp    $0xffffffff,%ebx
		je     jump_4ac1f
		xor    %ebx,%ebx
		mov    0x6(%ecx,%eax,1),%bl
		movzbw 0x6(%ecx,%eax,1),%di
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    (%ecx),%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x4(%eax),%bl
		mov    data_fd5b8(%edx),%si
		mov    %bx,0x4(%esp)
		mov    data_fd5a0(%edx),%bx
		xor    %edx,%edx
		mov    0x4(%eax),%dl
		mov    %bx,(%esp)
		mov    0x15(%eax,%edx,4),%ebx
		mov    %esi,%eax
		inc    %eax
		movswl %ax,%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_5f3fd
		movswl %di,%edx
		mov    %edx,%ebp
		shl    $0x3,%ebp
		add    %edx,%ebp
		shl    $0x2,%ebp
		mov    (%ecx),%eax
		add    %edx,%ebp
		mov    0x2(%esp),%ebx
		add    %ebp,%eax
		sar    $0x10,%ebx
		mov    (%esp),%edi
		movsbw 0xd(%ebx,%eax,1),%dx
		sub    %edx,%edi
		mov    %di,(%eax)
		mov    (%ecx),%eax
		add    %ebp,%eax
		movsbw 0x11(%ebx,%eax,1),%dx
		sub    %edx,%esi
		mov    %si,0x2(%eax)
	jump_4ac1f:
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4ac28:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		mov    (%esi),%eax
		add    %edx,%eax
		movsbw 0xd(%eax),%dx
		add    %edx,%edi
		xor    %edx,%edx
		movswl %di,%esi
		mov    0x5(%eax),%dl
		add    %esi,%edx
		test   %edx,%edx
		jl     jump_4ac87
		cmp    $0x12f,%di
		jg     jump_4ac87
		movsbw 0x11(%eax),%dx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    0x9(%eax),%cl
		movswl %dx,%ebx
		add    %ecx,%ebx
		test   %ebx,%ebx
		jl     jump_4ac87
		cmp    $0xc3,%dx
		jg     jump_4ac87
		inc    %edx
		mov    0x15(%eax),%ebx
		movswl %dx,%edx
		mov    %esi,%eax
		call   func_5f3fd
	jump_4ac87:
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4ac8a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,0xc(%esp)
		xor    %edx,%edx
		jmp    jump_4ad4f
	jump_4ac9f:
		movswl %dx,%eax
		cmpb   $0x0,0x38(%ecx,%eax,1)
		jne    jump_4ad4e
		imul   $0x25,%eax,%eax
		mov    (%ecx),%esi
		add    %esi,%eax
		mov    (%eax),%bx
		sub    $0xc,%ebx
		mov    %ebx,0x8(%esp)
		mov    0x2(%eax),%bx
		sub    $0xc,%ebx
		mov    %ebx,0x4(%esp)
		mov    (%eax),%bx
		add    $0xc,%ebx
		mov    %ebx,0x10(%esp)
		mov    0x2(%eax),%bx
		add    $0xc,%ebx
		mov    %ebx,(%esp)
		cmp    0x8(%esp),%di
		jle    jump_4ad4e
		mov    0x4(%esp),%ebx
		cmp    0xc(%esp),%bx
		jge    jump_4ad4e
		cmp    0x10(%esp),%di
		jge    jump_4ad4e
		mov    (%esp),%ebx
		cmp    0xc(%esp),%bx
		jle    jump_4ad4e
		cmpw   $0x0,(%eax)
		jle    jump_4ad4e
		movsbw 0x5(%ecx),%ax
		cmp    %dx,%ax
		je     jump_4ad4a
		cmpb   $0x0,0x5(%ecx)
		jl     jump_4ad31
		mov    0x2(%ecx),%ebx
		sar    $0x18,%ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		movb   $0x0,0x4(%esi,%eax,1)
	jump_4ad31:
		movswl %dx,%esi
		mov    %esi,%eax
		shl    $0x3,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    (%ecx),%ebx
		add    %esi,%eax
		movb   $0x0,0x4(%ebx,%eax,1)
		mov    %dl,0x5(%ecx)
	jump_4ad4a:
		mov    %edx,%eax
		jmp    jump_4ad62
	jump_4ad4e:
		inc    %edx
	jump_4ad4f:
		movsbw 0x4(%ecx),%ax
		cmp    %ax,%dx
		jl     jump_4ac9f
		mov    $0xffffffff,%eax
	jump_4ad62:
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4ad69:
/*----------------------------------------------------------------*/
		mov    %eax,data_fd5d0
		ret


/*----------------------------------------------------------------*/
func_4ad6f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    data_fd5d0,%edx
		test   %edx,%edx
		je     jump_4adcc
		mov    0x2(%edx),%ecx
		sar    $0x18,%ecx
		cmp    $0xffffffff,%ecx
		je     jump_4adcc
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x2,%eax
		mov    (%edx),%edx
		add    %ecx,%eax
		add    %edx,%eax
		mov    0x4(%eax),%bl
		xor    %edx,%edx
		inc    %bl
		mov    %bl,%dl
		cmpl   $0x0,0x15(%eax,%edx,4)
		je     jump_4adac
		cmp    $0x3,%bl
		jbe    jump_4adae
	jump_4adac:
		xor    %bl,%bl
	jump_4adae:
		mov    data_fd5d0,%edx
		mov    0x2(%edx),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x2,%eax
		mov    (%edx),%edx
		add    %ecx,%eax
		mov    %bl,0x4(%edx,%eax,1)
	jump_4adcc:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
data_4ae4a:
		.ascii  "\x11\x00\x31\x00\x50\x00"
.text


/*----------------------------------------------------------------*/
func_4ae50:
/*----------------------------------------------------------------*/
		push   %eax
		fild   (%esp)
		fdivrl data_77e40
		fstpl  data_fd5d8
		add    $0x4,%esp
		ret


/*----------------------------------------------------------------*/
func_4ae64:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%eax
		mov    %eax,data_fd5e0
		mov    0x8(%esp),%eax
		mov    %eax,data_fd5e4
		mov    0x4(%esp),%eax
		mov    %eax,data_fd5e8
		mov    0x8(%esp),%eax
		mov    %eax,data_fd5ec
		mov    0xc(%esp),%eax
		mov    %ax,data_fdaec
		ret    $0xc


/*----------------------------------------------------------------*/
func_4ae95:
/*----------------------------------------------------------------*/
		mov    0x4(%esp),%eax
		mov    %eax,data_fd5f0
		mov    0x8(%esp),%eax
		mov    %eax,data_fd5f4
		mov    0xc(%esp),%eax
		mov    %ax,data_fdaf4
		ret    $0xc


/*----------------------------------------------------------------*/
func_4aeb4:
/*----------------------------------------------------------------*/
		push   %edx
		fldl   data_fd5f0
		mov    data_fdaf4,%ax
		mov    data_fdaec,%dx
		faddl  data_fd5e0
		add    %eax,%edx
		fstl   data_fd5e0
		mov    %dx,data_fdaec
		fstpl  data_fd5e8
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_4aee5:
/*----------------------------------------------------------------*/
		push   %ebx
		sub    $0x4,%esp
		mov    %eax,%ebx
		fild   data_fdaec
		fldl   data_fd5e8
		fcos
		fmulp  %st,%st(1)
		call   func___CHP
		fistpl (%esp)
		mov    (%esp),%eax
		mov    %ax,(%ebx)
		fild   data_fdaec
		fldl   data_fd5e8
		fsin
		fmulp  %st,%st(1)
		fmull  data_77e48
		call   func___CHP
		fistpl (%esp)
		mov    (%esp),%eax
		mov    %ax,(%edx)
		fldl   data_fd5d8
		faddl  data_fd5e8
		fstl   data_fd5e8
		fcompl data_77e50
		fnstsw %ax
		sahf
		jbe    jump_4af5c
		fldl   data_fd5e8
		faddl  data_77e58
		fstpl  data_fd5e8
	jump_4af5c:
		add    $0x4,%esp
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4af61:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %edx,%ebp
		mov    $0x200,%edx
		call   func_4976f
		xor    %ebx,%ebx
		mov    $0x42,%edx
		movswl %ax,%ecx
		mov    %ax,0x10(%esp)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x8(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x3c,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		movswl %ax,%edx
		mov    %ebp,%eax
		xor    %edi,%edi
		call   func_4a945
		jmp    jump_4b087
	jump_4afd1:
		mov    0xe(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x18(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x14(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x4(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0xc(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%eax
		call   w_dos_malloc
		mov    (%esp),%ebx
		mov    %eax,%esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x4,%ebx
		mov    %esi,%eax
		movswl %di,%ecx
		call   func_10031
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x5(%esp),%ecx
		sar    $0x18,%ecx
		cwtl
		xor    %ebx,%ebx
		xor    %edx,%edx
		push   %eax
		mov    0x1c(%esp),%bl
		mov    0x11(%esp),%eax
		push   %esi
		sar    $0x18,%eax
		mov    0x24(%esp),%dl
		push   %eax
		mov    %ebp,%eax
		inc    %edi
		call   func_4a96e
	jump_4b087:
		cmp    0x8(%esp),%di
		jl     jump_4afd1
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x1c,%esp
	jump_4b0a1:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4b0a7:
/*----------------------------------------------------------------*/
		push   %edx
		mov    $data_fd9a8,%edx
		mov    $data_77e60,%eax
		call   func_4af61
		mov    $data_fda7c,%edx
		mov    $data_77e6d,%eax
		call   func_4af61
		mov    $data_fda12,%edx
		mov    $data_77e77,%eax
		call   func_4af61
		mov    $data_fd93e,%edx
		mov    $data_77e83,%eax
		call   func_4af61
		mov    $data_fd8d4,%edx
		mov    $data_77e8d,%eax
		call   func_4af61
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_4b0f5:
/*----------------------------------------------------------------*/
		mov    %eax,data_fd8b8
		ret


/*----------------------------------------------------------------*/
func_4b0fb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		push   %eax
		mov    %edx,%edi
		xor    %edx,%edx
		jmp    jump_4b112
	jump_4b109:
		movswl %dx,%eax
		call   func_4a9d1
		inc    %edx
	jump_4b112:
		cmp    data_fdaf0,%dx
		jl     jump_4b109
		xor    %esi,%esi
		jmp    jump_4b163
	jump_4b11f:
		lea    0x4(%esp),%edx
		lea    0x8(%esp),%eax
		call   func_4aee5
		movswl %si,%ecx
		mov    (%esp),%eax
		mov    0x8(%esp),%edx
		mov    0x4(%esp),%ebx
		add    %eax,%edx
		mov    %edi,%eax
		mov    %dx,0x8(%esp)
		sub    %ebx,%eax
		mov    0x6(%esp),%edx
		mov    %ax,0x4(%esp)
		sar    $0x10,%edx
		mov    0x2(%esp),%ebx
		mov    data_fd8b8,%eax
		sar    $0x10,%ebx
		inc    %esi
		call   func_4aa42
	jump_4b163:
		cmp    data_fdaf0,%si
		jl     jump_4b11f
		xor    %ebx,%ebx
		jmp    jump_4b17e
	jump_4b170:
		mov    data_fd8b8,%eax
		movswl %bx,%edx
		call   func_4ab72
		inc    %ebx
	jump_4b17e:
		cmp    data_fdaf0,%bx
		jl     jump_4b170
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4b18f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    %eax,%edi
		cmpb   $0x29,0x11(%eax)
		je     jump_4b1b1
		mov    0x11(%edi),%dl
		cmp    $0x2a,%dl
		je     jump_4b1b1
		cmp    $0x2b,%dl
		jne    jump_4b2d8
	jump_4b1b1:
		mov    $0x9,%edx
		mov    %edi,%eax
		mov    %dx,0x28(%esp)
		mov    $0x5,%edx
		call   func_28429
		mov    %ax,0x8(%esp)
		test   %ax,%ax
		jl     jump_4b4c2
		xor    %ebx,%ebx
		mov    %bx,0x2c(%esp)
	jump_4b1dc:
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		mov    0x50(%edi),%bx
		cmp    data_753b6(,%edx,2),%bx
		jl     jump_4b239
		mov    0x55(%edi),%ebx
		call   func_1a0e9
		sar    $0x10,%ebx
		cwtl
		add    %eax,%ebx
		mov    %edi,%eax
		call   func_28480
		cwtl
		cmp    %ebx,%eax
		jg     jump_4b239
		mov    0x8(%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_4b21f
		jbe    jump_4b22b
		cmp    $0x2,%cx
		je     jump_4b232
		jmp    jump_4b23e
	jump_4b21f:
		test   %cx,%cx
		jne    jump_4b23e
		mov    $0x11,%esi
		jmp    jump_4b23e
	jump_4b22b:
		mov    $0x31,%esi
		jmp    jump_4b23e
	jump_4b232:
		mov    $0x50,%esi
		jmp    jump_4b23e
	jump_4b239:
		mov    $0x24,%esi
	jump_4b23e:
		movswl %si,%eax
		push   %eax
		mov    0x2e(%esp),%eax
		sar    $0x10,%eax
		add    $0x23,%eax
		imul   $0xc,%eax,%edx
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		mov    $0x24,%ecx
		mov    data_7423c(%edx,%eax,4),%ebx
		mov    0x2a(%esp),%edx
		mov    $0x98,%eax
		sar    $0x10,%edx
		call   func_484f9
		cmp    $0x24,%si
		je     jump_4b27e
		mov    $0x1,%esi
	jump_4b27e:
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		mov    $0xa,%ebx
		mov    data_753b4(,%eax,2),%eax
		mov    %esp,%edx
		sar    $0x10,%eax
		mov    $0x24,%ecx
		call   func_itoa_
		movswl %si,%eax
		mov    %esp,%ebx
		push   %eax
		sar    $0x10,%edx
		mov    $0xc5,%eax
		call   func_484f9
		mov    0x28(%esp),%ecx
		mov    0x2c(%esp),%eax
		add    $0x8,%ecx
		inc    %eax
		mov    %cx,0x28(%esp)
		mov    %ax,0x2c(%esp)
		cmp    $0x7,%ax
		jge    jump_4b4c2
		jmp    jump_4b1dc
	jump_4b2d8:
		mov    $0x3c,%edx
		mov    $0x9,%ebx
		xor    %ecx,%ecx
		mov    %dx,0x18(%esp)
		mov    %ebx,0xc(%esp)
		mov    %cx,0x1c(%esp)
		mov    %ecx,0x10(%esp)
		mov    $0x24,%ebp
	jump_4b2fb:
		xor    %ecx,%ecx
		mov    %ecx,0x14(%esp)
	jump_4b301:
		cmpw   $0x1,0x10(%esp)
		jne    jump_4b318
		cmpw   $0x2,0x14(%esp)
		jne    jump_4b318
		movw   $0x6,0x1c(%esp)
	jump_4b318:
		mov    0x1a(%esp),%edx
		mov    %edi,%eax
		sar    $0x10,%edx
		call   func_28429
		mov    %ax,0x20(%esp)
		test   %ax,%ax
		jge    jump_4b34b
		mov    0x18(%esp),%ebx
		mov    0x1c(%esp),%ecx
		add    $0x5a,%ebx
		inc    %ecx
		mov    %bx,0x18(%esp)
		mov    %cx,0x1c(%esp)
		jmp    jump_4b489
	jump_4b34b:
		mov    0xc(%esp),%eax
		mov    %ax,0x34(%esp)
		mov    0x18(%esp),%eax
		xor    %edx,%edx
		add    $0x2d,%eax
		mov    %dx,0x24(%esp)
		mov    %ax,0x30(%esp)
	jump_4b369:
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		mov    0x50(%edi),%bx
		cmp    data_753b6(,%edx,2),%bx
		jl     jump_4b3c6
		mov    0x55(%edi),%ebx
		call   func_1a0e9
		sar    $0x10,%ebx
		cwtl
		add    %eax,%ebx
		mov    %edi,%eax
		call   func_28480
		cwtl
		cmp    %ebx,%eax
		jg     jump_4b3c6
		mov    0x20(%esp),%ecx
		cmp    $0x1,%cx
		jb     jump_4b3ac
		jbe    jump_4b3b8
		cmp    $0x2,%cx
		je     jump_4b3bf
		jmp    jump_4b3cb
	jump_4b3ac:
		test   %cx,%cx
		jne    jump_4b3cb
		mov    $0x11,%esi
		jmp    jump_4b3cb
	jump_4b3b8:
		mov    $0x31,%esi
		jmp    jump_4b3cb
	jump_4b3bf:
		mov    $0x50,%esi
		jmp    jump_4b3cb
	jump_4b3c6:
		mov    $0x24,%esi
	jump_4b3cb:
		movswl %si,%eax
		push   %eax
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		imul   $0x7,%eax,%eax
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    0x22(%esp),%ebx
		mov    $0x24,%ecx
		sar    $0x10,%ebx
		mov    0x36(%esp),%edx
		mov    data_7423c(%eax,%ebx,4),%ebx
		mov    0x1a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_484f9
		cmp    $0x24,%si
		je     jump_4b416
		mov    $0x1,%esi
	jump_4b416:
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		mov    $0xa,%ebx
		mov    data_753b4(,%eax,2),%eax
		mov    %esp,%edx
		sar    $0x10,%eax
		mov    $0x24,%ecx
		call   func_itoa_
		mov    0x32(%esp),%edx
		movswl %si,%eax
		mov    %esp,%ebx
		push   %eax
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_484f9
		mov    0x34(%esp),%eax
		mov    0x24(%esp),%edx
		add    $0x8,%eax
		inc    %edx
		mov    %ax,0x34(%esp)
		mov    %dx,0x24(%esp)
		cmp    $0x7,%dx
		jl     jump_4b369
		mov    0x18(%esp),%ecx
		mov    0x1c(%esp),%eax
		add    $0x5c,%ecx
		inc    %eax
		mov    %cx,0x18(%esp)
		mov    %ax,0x1c(%esp)
	jump_4b489:
		mov    0x14(%esp),%eax
		inc    %eax
		mov    %eax,0x14(%esp)
		cmp    $0x3,%ax
		jl     jump_4b301
		mov    $0x3c,%ecx
		mov    $0x8c,%eax
		mov    0x10(%esp),%edx
		mov    %cx,0x18(%esp)
		inc    %edx
		mov    %eax,0xc(%esp)
		mov    %edx,0x10(%esp)
		cmp    $0x2,%dx
		jl     jump_4b2fb
	jump_4b4c2:
		add    $0x38,%esp
		jmp    jump_4d00f


/*----------------------------------------------------------------*/
func_4b4ca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ebp
		mov    %esp,%edi
		mov    $data_4ae4a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsbl 0x1(%eax),%edx
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		add    $0x6,%eax
		cmp    %eax,%edx
		jle    jump_4b4f9
		mov    $0x8,%esi
		jmp    jump_4b4fe
	jump_4b4f9:
		mov    $0xa8,%esi
	jump_4b4fe:
		xor    %eax,%eax
		call   func_6104a
		mov    $0x1,%eax
		call   func_5ecc7
		mov    %esi,%eax
		add    $0x1a,%eax
		movswl %ax,%ecx
		mov    %esi,%eax
		sub    $0x2,%eax
		mov    $0x13f,%ebx
		movswl %ax,%edx
		xor    %eax,%eax
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
		mov    %esi,%ecx
		mov    0x73(%ebp),%edx
		add    $0x4,%ecx
		test   %edx,%edx
		je     jump_4b589
		mov    0x5d(%edx),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		movswl %si,%edx
		mov    0x9(%eax),%ebx
		mov    $0x18,%eax
		call   func_5f3fd
		mov    0x73(%ebp),%eax
		add    $0x2,%eax
		push   %eax
	jump_4b571:
		push   $data_77e99
		movswl %cx,%eax
		push   %eax
		push   $0x38
		call   func_5e048
		add    $0x10,%esp
		jmp    jump_4b612
	jump_4b589:
		mov    0x6f(%ebp),%ah
		cmp    $0xff,%ah
		je     jump_4b5b2
		xor    %eax,%eax
		mov    0x70(%ebp),%al
		push   %eax
		xor    %eax,%eax
		mov    0x6f(%ebp),%al
		push   %eax
		push   $data_77e9c
		movswl %cx,%eax
		push   %eax
		push   $0x18
		call   func_5e048
		add    $0x14,%esp
		jmp    jump_4b612
	jump_4b5b2:
		cmp    0x71(%ebp),%ah
		je     jump_4b5ff
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x72(%ebp),%dl
		mov    0x71(%ebp),%al
		call   func_1379a
		mov    %eax,%edi
		test   %eax,%eax
		je     jump_4b5ff
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_d66a8,%eax
		movswl %si,%edx
		mov    0x9(%eax),%ebx
		mov    $0x18,%eax
		add    $0x2,%edi
		call   func_5f3fd
		push   %edi
		jmp    jump_4b571
	jump_4b5ff:
		push   $data_77eab
		movswl %cx,%eax
		push   %eax
		push   $0x38
		call   func_5e048
		add    $0xc,%esp
	jump_4b612:
		mov    0x80(%ebp),%dh
		cmp    $0xff,%dh
		je     jump_4b6ad
		xor    %eax,%eax
		mov    %dh,%al
		imul   $0x3,%eax,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ecx,%edi
		movswl %ax,%edx
		mov    %ebp,%eax
		mov    $0x24,%ecx
		call   func_28429
		add    %eax,%edi
		mov    %esi,%eax
		mov    $data_77eb6,%ebx
		add    $0x6,%eax
		push   $0x11
		movswl %ax,%edx
		mov    $0xc0,%eax
		call   func_484f9
		movswl %di,%ebx
		mov    $0x3,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    -0x2(%esp,%edx,2),%eax
		mov    %edx,%edi
		sar    $0x10,%eax
		mov    %ebx,%edx
		push   %eax
		sar    $0x1f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
#if 1
    /* Wordaround.
     * %eax is invalid. I do not know why.
     */
    xor    %eax,%eax
#else
		mov    %edi,%eax
#endif
		mov    data_7423c(%edx,%eax,4),%ebx
		mov    %esi,%eax
		add    $0xe,%eax
		mov    $0x24,%ecx
		jmp    jump_4b6c0
	jump_4b6ad:
		push   $0x11
		mov    %esi,%eax
		mov    $0x24,%ecx
		add    $0xc,%eax
		mov    $data_77ec1,%ebx
	jump_4b6c0:
		movswl %ax,%edx
		mov    $0xc0,%eax
		call   func_484f9
		mov    0x82(%ebp),%bl
		add    $0xc,%esi
		cmp    $0xff,%bl
		je     jump_4b73c
		cmp    $0x7,%bl
		jae    jump_4b6e7
		mov    $0x1,%ecx
		jmp    jump_4b710
	jump_4b6e7:
		cmp    $0xb,%bl
		jae    jump_4b6f3
		mov    $0x2,%ecx
		jmp    jump_4b710
	jump_4b6f3:
		cmp    $0xf,%bl
		jae    jump_4b6ff
		mov    $0x3,%ecx
		jmp    jump_4b710
	jump_4b6ff:
		cmp    $0x13,%bl
		jae    jump_4b70b
		mov    $0x4,%ecx
		jmp    jump_4b710
	jump_4b70b:
		mov    $0x5,%ecx
	jump_4b710:
		mov    $0x104,%edx
		mov    $data_fd9a8,%eax
		movswl %si,%ebx
		call   func_4ac28
		mov    $0x118,%edx
		mov    $data_fda12,%eax
		xor    %ecx,%ecx
		movswl %si,%ebx
		mov    0x82(%ebp),%cl
		call   func_4ac28
	jump_4b73c:
		add    $0x8,%esp
		jmp    jump_4d00f


/*----------------------------------------------------------------*/
func_4b744:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    $0x1,%bx
		jb     jump_4b765
		jbe    jump_4b759
		cmp    $0x2,%bx
		je     jump_4b760
		pop    %ebx
		ret
	jump_4b759:
		call   func_4b18f
		pop    %ebx
		ret
	jump_4b760:
		call   func_4b4ca
	jump_4b765:
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4b767:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpw   $0x0,data_fdaee
		jne    jump_4b83f
		mov    $0x1,%eax
		call   func_44dc5
		mov    $0x1,%eax
		call   func_44d6e
		mov    $0x1,%eax
		call   func_44d67
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ebx,%eax
		call   func_12f2a
		mov    %ebx,%eax
		call   func_13498
		call   func_103a8
		mov    data_fdaee,%eax
		sar    $0x10,%eax
		call   func_4ae50
		push   $0x114
		push   $0x4014f1a6
		push   $0xc638d041
		call   func_4ae64
		push   $0xfffffff0
		push   $0x3fc65718
		push   $0x4ae74489
		call   func_4ae95
		call   func_4a8e2
		mov    $0x1f,%eax
		call   func_4f4cd
		mov    $0x2,%eax
		call   func_1033b
	jump_4b80d:
		call   func_4aeb4
		movswl %cx,%edx
		movswl %si,%eax
		call   func_4b0fb
		call   func_45431
		call   func_5e9e8
		call   func_499e4
		cmpw   $0x24,data_fdaec
		jne    jump_4b80d
		movw   $0x1,data_fdaee
	jump_4b83f:
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4b842:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		cmpw   $0x0,data_fdaee
		je     jump_4b8e7
		mov    data_fdaee,%eax
		sar    $0x10,%eax
		call   func_4ae50
		push   $0x24
		push   $0x3ff921fb
		push   $0x54442d15
		call   func_4ae64
		push   $0x10
		push   $0x3fc65718
		push   $0x4ae74489
		call   func_4ae95
		mov    $0x1f,%eax
		call   func_4f4cd
		mov    $0x2,%eax
		call   func_1033b
	jump_4b89a:
		call   func_4aeb4
		movswl %cx,%edx
		movswl %bx,%eax
		call   func_4b0fb
		call   func_45431
		call   func_5e9e8
		call   func_499e4
		cmpw   $0x114,data_fdaec
		jne    jump_4b89a
		xor    %eax,%eax
		call   func_44dc5
		xor    %eax,%eax
		call   func_44d6e
		xor    %eax,%eax
		xor    %edi,%edi
		call   func_44d67
		call   func_103a0
		mov    %di,data_fdaee
	jump_4b8e7:
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4b8eb:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		cmpw   $0x0,data_fdaee
		jne    jump_4b9d4
		mov    $0x1,%eax
		call   func_44dc5
		mov    $0x1,%eax
		call   func_44d6e
		mov    $0x1,%eax
		call   func_44d67
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    %ecx,%eax
		call   func_12f2a
		mov    %ecx,%eax
		mov    %ecx,%edx
		call   func_13498
		movswl %bx,%eax
		call   func_4b744
		call   func_5e9e8
		call   func_103a8
		mov    data_fdaee,%eax
		sar    $0x10,%eax
		call   func_4ae50
		push   $0x0
		push   $0x401921fb
		push   $0x54442d1c
		call   func_4ae64
		push   $0x4
		push   $0x3fc65718
		push   $0x4ae74489
		call   func_4ae95
		call   func_4a8e2
		mov    $0x1f,%eax
		call   func_4f4cd
		mov    $0x2,%eax
		call   func_1033b
	jump_4b99d:
		call   func_4aeb4
		movswl %si,%edx
		movswl %di,%eax
		call   func_4b0fb
		call   func_45431
		call   func_5e9e8
	jump_4b9b7:
		call   func_10364
		test   %ax,%ax
		je     jump_4b9b7
		cmpw   $0x24,data_fdaec
		jne    jump_4b99d
		movw   $0x1,data_fdaee
	jump_4b9d4:
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4b9d7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpw   $0x0,data_fdaee
		je     jump_4ba7b
		mov    data_fdaee,%eax
		sar    $0x10,%eax
		call   func_4ae50
		push   $0x24
		push   $0x3ff921fb
		push   $0x54442d15
		call   func_4ae64
		push   $0xfffffffc
		push   $0x3fc65718
		push   $0x4ae74489
		call   func_4ae95
		mov    $0x1f,%eax
		call   func_4f4cd
		mov    $0x2,%eax
		call   func_1033b
	jump_4ba2f:
		call   func_4aeb4
		movswl %bx,%edx
		movswl %cx,%eax
		call   func_4b0fb
		call   func_45431
		call   func_5e9e8
		call   func_499e4
		mov    data_fdaec,%si
		test   %si,%si
		jne    jump_4ba2f
		xor    %eax,%eax
		call   func_44dc5
		xor    %eax,%eax
		call   func_44d6e
		xor    %eax,%eax
		call   func_44d67
		call   func_103a0
		mov    %si,data_fdaee
	jump_4ba7b:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4ba7f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    $0xffffffff,%edx
		cwtl
		mov    %edx,0x10(%esp)
		movswl %cx,%edx
		call   func_5cf3e
		call   func_5e9e8
		mov    %edi,%eax
		sub    $0xc,%eax
		mov    %ax,0xc(%esp)
		mov    %ecx,%eax
		sub    $0xc,%eax
		mov    %ax,0x8(%esp)
	jump_4bab5:
		call   func_5d41e
		call   func_5e9e8
	jump_4babf:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_4baea
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_4baea
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_4baea:
		call   func_102ff
		test   %ax,%ax
		je     jump_4bb2a
		call   func_4ad6f
		call   func_5d570
		mov    0x2(%esp),%ebx
		mov    (%esp),%edx
		mov    data_fd8b8,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_4ac8a
		movswl %cx,%edx
		movswl %di,%eax
		call   func_4b0fb
		call   func_5d41e
		call   func_5e9e8
	jump_4bb2a:
		cmpw   $0x0,(%esp)
		je     jump_4babf
		call   func_5d570
		mov    (%esp),%esi
		cmp    $0x2,%si
		jb     jump_4bb5a
		jbe    jump_4bb73
		cmp    $0x3,%si
		jbe    jump_4bbf9
		cmp    $0x1b,%si
		je     jump_4bbf9
		jmp    jump_4bc01
	jump_4bb5a:
		cmp    $0x1,%si
		jne    jump_4bc01
		mov    $0x1,%eax
		call   func_49c05
		jmp    jump_4bc01
	jump_4bb73:
		mov    0x2(%esp),%ebx
		mov    (%esp),%edx
		mov    data_fd8b8,%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_4ac8a
		mov    %eax,0x10(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_4bb9c
		movw   $0x1b,(%esp)
		jmp    jump_4bc01
	jump_4bb9c:
		mov    0x2(%esp),%eax
		cmp    0xc(%esp),%ax
		jl     jump_4bc01
		mov    0xa(%esp),%eax
		mov    (%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x18,%eax
		cmp    %eax,%edx
		jg     jump_4bc01
		mov    0x4(%esp),%eax
		cmp    0x8(%esp),%ax
		jl     jump_4bc01
		mov    0x6(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x18,%edx
		cmp    %edx,%eax
		jg     jump_4bc01
		cmpw   $0x0,data_fdaf2
		jne    jump_4bc01
		mov    $0xfffffffe,%eax
		mov    $0x1b,%edx
		mov    %eax,0x10(%esp)
		mov    %dx,(%esp)
		jmp    jump_4bc01
	jump_4bbf9:
		movl   $0xffffffff,0x10(%esp)
	jump_4bc01:
		mov    (%esp),%eax
		cmp    $0x1b,%ax
		je     jump_4bc14
		cmp    $0x3,%ax
		jne    jump_4bab5
	jump_4bc14:
		xor    %eax,%eax
		call   func_4ad69
		call   func_5e9e8
		mov    0x10(%esp),%eax
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4bc2c:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		call   func_4a8c3
		incw   data_fdaf0
		ret


/*----------------------------------------------------------------*/
func_4bc3c:
/*----------------------------------------------------------------*/
		mov    0xf(%eax),%al
		cmp    $0x43,%al
		jb     jump_4bc99
		jbe    jump_4bcbb
		cmp    $0x5b,%al
		jb     jump_4bc77
		jbe    jump_4bce2
		cmp    $0x65,%al
		jb     jump_4bc6a
		jbe    jump_4bcf4
		cmp    $0x77,%al
		je     jump_4bcdc
		jmp    jump_4bd06
	jump_4bc6a:
		cmp    $0x64,%al
		je     jump_4bcd0
		jmp    jump_4bd06
	jump_4bc77:
		cmp    $0x4b,%al
		jb     jump_4bc90
		cmp    $0x4c,%al
		jbe    jump_4bcfa
		cmp    $0x51,%al
		je     jump_4bcee
		jmp    jump_4bd06
	jump_4bc90:
		cmp    $0x44,%al
		je     jump_4bce8
		jmp    jump_4bd06
	jump_4bc99:
		cmp    $0x12,%al
		jb     jump_4bcb1
		jbe    jump_4bcbe
		cmp    $0x1d,%al
		jb     jump_4bcab
		jbe    jump_4bcc4
		cmp    $0x30,%al
	jump_4bca7:
		je     jump_4bcca
		jmp    jump_4bd06
	jump_4bcab:
		cmp    $0x16,%al
		je     jump_4bcd6
		jmp    jump_4bd06
	jump_4bcb1:
		cmp    $0x1,%al
		jb     jump_4bd06
		jbe    jump_4bd00
		cmp    $0x2,%al
		jmp    jump_4bca7
	jump_4bcbb:
		xor    %eax,%eax
		ret
	jump_4bcbe:
		mov    $0x1,%eax
		ret
	jump_4bcc4:
		mov    $0x2,%eax
		ret
	jump_4bcca:
		mov    $0x3,%eax
		ret
	jump_4bcd0:
		mov    $0x4,%eax
		ret
	jump_4bcd6:
		mov    $0x5,%eax
		ret
	jump_4bcdc:
		mov    $0x6,%eax
		ret
	jump_4bce2:
		mov    $0x7,%eax
		ret
	jump_4bce8:
		mov    $0x8,%eax
		ret
	jump_4bcee:
		mov    $0x9,%eax
		ret
	jump_4bcf4:
		mov    $0xa,%eax
		ret
	jump_4bcfa:
		mov    $0xb,%eax
		ret
	jump_4bd00:
		mov    $0xc,%eax
		ret
	jump_4bd06:
		mov    $0xffffffff,%eax
		ret

vtable_4bd0e:
		.long   func_4be68
		.long   func_4bdf7
		.long   func_4be0c
		.long   func_4be41
		.long   func_4be4e
		.long   func_4be5b


/*----------------------------------------------------------------*/
func_4bd26:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $data_fd9a8,%eax
		call   func_4a901
		xor    %edx,%edx
		mov    data_fdaf2,%bx
		mov    %dx,data_fdaf0
		cmp    $0x1,%bx
		jne    jump_4bd66
		mov    $0xd,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
		mov    $0xb,%edx
		jmp    jump_4bfbb
	jump_4bd66:
		mov    %esi,%eax
		call   func_174cf
		mov    %esi,%ecx
		movzbw %al,%di
		mov    0x60(%esi),%ebx
		movsbl 0x1(%esi),%edx
		sar    $0x18,%ebx
		movsbl (%esi),%eax
		call   func_1d124
		test   %ax,%ax
		je     jump_4bda1
		call   func_1a0e9
		cmp    $0x28,%ax
		jl     jump_4bda1
		mov    $data_fd9a8,%eax
		xor    %edx,%edx
		call   func_4bc2c
	jump_4bda1:
		call   func_1a0e9
		cmp    $0x46,%ax
		jl     func_4be0c
		cmpb   $0x0,0x5c(%esi)
		jne    func_4be0c
		cmpw   $0x12c,0x61(%esi)
		jge    func_4be0c
		cmpl   $0x1f4,0x48(%esi)
		jle    func_4be0c
		cmpb   $0x4,data_ba84e
		jge    func_4be0c
		cmp    $0x5,%di
		ja     func_4be0c
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *vtable_4bd0e(,%eax,4)


/*----------------------------------------------------------------*/
func_4bdf7:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x38(%esi)
		jbe    func_4be0c
		mov    $0x1,%edx
	jump_4be02:
		mov    $data_fd9a8,%eax
		call   func_4bc2c


/*----------------------------------------------------------------*/
func_4be0c:
/*----------------------------------------------------------------*/
		cmpw   $0x0,0x50(%esi)
		jle    jump_4bea7
		call   func_1a0e9
		cmp    $0x32,%ax
		jl     jump_4bea7
		testb  $0x8,0x1e(%esi)
		jne    jump_4bea7
		cmpb   $0x4,data_ba84e
		jge    jump_4bea7
		xor    %ebx,%ebx
		jmp    jump_4be8c


/*----------------------------------------------------------------*/
func_4be41:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x39(%esi)
		jbe    func_4be0c
		mov    $0x2,%edx
		jmp    jump_4be02


/*----------------------------------------------------------------*/
func_4be4e:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x3a(%esi)
		jbe    func_4be0c
		mov    $0x3,%edx
		jmp    jump_4be02


/*----------------------------------------------------------------*/
func_4be5b:
/*----------------------------------------------------------------*/
		cmpb   $0x0,0x3b(%esi)
		jbe    func_4be0c
		mov    $0x4,%edx
		jmp    jump_4be02


/*----------------------------------------------------------------*/
func_4be68:
/*----------------------------------------------------------------*/
		mov    0x11(%esi),%ch
		cmp    $0x2f,%ch
		je     jump_4be75
		cmp    $0x30,%ch
		jne    func_4be0c
	jump_4be75:
		mov    $0x5,%edx
		jmp    jump_4be02
	jump_4be7c:
		movswl %bx,%edx
		mov    %esi,%eax
		call   func_28429
		test   %ax,%ax
		jge    jump_4be92
		inc    %ebx
	jump_4be8c:
		cmp    $0x7,%bx
		jl     jump_4be7c
	jump_4be92:
		cmp    $0x7,%bx
		jge    jump_4bea7
		mov    $0x6,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bea7:
		call   func_1a0e9
		cmp    $0x3c,%ax
		jl     jump_4bf05
		cmpb   $0x0,0x12(%esi)
		jne    jump_4bf05
		cmpb   $0x4,data_ba84e
		jge    jump_4bf05
		mov    0x4c(%esi),%eax
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    0x48(%esi),%eax
		jge    jump_4bf05
		cmpw   $0x12c,0x61(%esi)
		jl     jump_4bef6
		mov    0x5c(%esi),%bh
		test   %bh,%bh
		jbe    jump_4bee9
		cmp    $0x4,%bh
		jbe    jump_4bef6
	jump_4bee9:
		mov    0x5c(%esi),%ch
		cmp    $0xf,%ch
		jb     jump_4bf05
		cmp    $0x16,%ch
		ja     jump_4bf05
	jump_4bef6:
		mov    $0x7,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bf05:
		call   func_1a0e9
		cmp    $0x28,%ax
		jl     jump_4bf28
		cmpb   $0x4,data_ba84e
		jge    jump_4bf28
		mov    $0x9,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bf28:
		call   func_1a0e9
		cmp    $0x3c,%ax
		jl     jump_4bf62
		cmpb   $0x4,data_ba84e
		jge    jump_4bf62
		cmp    $0x5,%di
		jge    jump_4bf62
		xor    %eax,%eax
		mov    0x11(%esi),%al
		mov    %eax,%edx
		cmpb   $0x0,data_73b59(%eax,%edx,8)
		jne    jump_4bf62
		mov    $0xc,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bf62:
		call   func_1a0e9
		cmp    0x54(%esi),%ax
		jne    jump_4bf8d
		cmpw   $0x12c,0x61(%esi)
		jge    jump_4bf8d
		cmpb   $0x4,data_ba84e
		jge    jump_4bf8d
		mov    $0xa,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bf8d:
		mov    $0xb,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
		call   func_1a0e9
		cmp    $0x14,%ax
		jle    jump_4bfb6
		mov    $0x8,%edx
		mov    $data_fd9a8,%eax
		call   func_4bc2c
	jump_4bfb6:
		mov    $0xd,%edx
	jump_4bfbb:
		mov    $data_fd9a8,%eax
		call   func_4bc2c
		jmp    jump_4d010


/*----------------------------------------------------------------*/
func_4bfca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $data_fda7c,%eax
		xor    %edx,%edx
		call   func_4a901
		mov    %dx,data_fdaf0
		test   %bx,%bx
		jle    jump_4bffa
		mov    $data_fda7c,%eax
		xor    %edx,%edx
		call   func_4a8c3
		incw   data_fdaf0
	jump_4bffa:
		imul   $0x7,%ebx,%ecx
		mov    %ecx,%ebx
		inc    %ebx
		add    $0x8,%ecx
		jmp    jump_4c013
	jump_4c005:
		mov    $data_fda7c,%eax
		movswl %bx,%edx
		call   func_4a8c3
		inc    %ebx
	jump_4c013:
		cmp    %cx,%bx
		jl     jump_4c005
		addw   $0x7,data_fdaf0
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_4c026:
		.long   func_4c156
		.long   func_4c06e
		.long   func_4c160
		.long   func_4c0ff
		.long   func_4c122
		.long   func_4c139


/*----------------------------------------------------------------*/
func_4c03e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $data_fda12,%eax
		call   func_4a901
		xor    %ebx,%ebx
		mov    %edx,%eax
		xor    %esi,%esi
		call   func_174cf
		cmp    $0x5,%al
		ja     func_4c160
		and    $0xff,%eax
		jmp    *vtable_4c026(,%eax,4)


/*----------------------------------------------------------------*/
func_4c06e:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		mov    0xf(%edx),%al
		mov    0x38(%edx),%cl
		cmp    $0x43,%al
		jne    jump_4c084
		cmpb   $0x1c,0x5b(%edx)
		je     jump_4c0e9
	jump_4c084:
		cmpb   $0x12,0xf(%edx)
		jne    jump_4c094
		cmpb   $0x24,0x5b(%edx)
		je     jump_4c0e9
	jump_4c094:
		cmpb   $0x1d,0xf(%edx)
		jne    jump_4c0a0
		cmpb   $0x21,0x5b(%edx)
		je     jump_4c0e9
	jump_4c0a0:
		mov    0xf(%edx),%al
		cmp    $0x30,%al
		je     jump_4c0ab
		cmp    $0x2,%al
		jne    jump_4c0b1
	jump_4c0ab:
		cmpb   $0x20,0x5b(%edx)
		je     jump_4c0e9
	jump_4c0b1:
		cmpb   $0x64,0xf(%edx)
		jne    jump_4c0bd
		cmpb   $0x1d,0x5b(%edx)
		je     jump_4c0e9
	jump_4c0bd:
		cmpb   $0x77,0xf(%edx)
		jne    jump_4c0c9
		cmpb   $0x16,0x5b(%edx)
		je     jump_4c0e9
	jump_4c0c9:
		cmpb   $0x44,0xf(%edx)
		jne    jump_4c0d5
		cmpb   $0x23,0x5b(%edx)
		je     jump_4c0e9
	jump_4c0d5:
		cmpb   $0x1,0xf(%edx)
		jne    func_4c160
		cmpb   $0x19,0x5b(%edx)
	jump_4c0e3:
		jne    func_4c160
	jump_4c0e9:
		mov    $data_fda12,%eax
		xor    %edx,%edx
		mov    $0x1,%esi
		call   func_4a8c3
		jmp    func_4c160


/*----------------------------------------------------------------*/
func_4c0ff:
/*----------------------------------------------------------------*/
		mov    $0x7,%ebx
		xor    %ecx,%ecx
		mov    0xf(%edx),%al
		mov    0x39(%edx),%cl
		cmp    $0x16,%al
		jne    jump_4c116
		cmpb   $0x37,0x5b(%edx)
		je     jump_4c0e9
	jump_4c116:
		cmpb   $0x51,0xf(%edx)
		jne    func_4c160
		cmpb   $0x3c,0x5b(%edx)
		jmp    jump_4c0e3


/*----------------------------------------------------------------*/
func_4c122:
/*----------------------------------------------------------------*/
		mov    $0xb,%ebx
		xor    %ecx,%ecx
		mov    0xf(%edx),%al
		mov    0x3a(%edx),%cl
		cmp    $0x5b,%al
		jne    func_4c160
		cmpb   $0x2f,0x5b(%edx)
		jmp    jump_4c0e3


/*----------------------------------------------------------------*/
func_4c139:
/*----------------------------------------------------------------*/
		mov    $0xf,%ebx
		xor    %ecx,%ecx
		mov    0xf(%edx),%ah
		mov    0x3b(%edx),%cl
		cmp    $0x4b,%ah
		je     jump_4c150
		cmp    $0x4c,%ah
		jne    func_4c160
	jump_4c150:
		cmpb   $0x43,0x5b(%edx)
		jmp    jump_4c0e3


/*----------------------------------------------------------------*/
func_4c156:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		mov    $0x13,%ebx
		mov    0x3c(%edx),%cl


/*----------------------------------------------------------------*/
func_4c160:
/*----------------------------------------------------------------*/
		mov    %cx,data_fdaf0
		inc    %ebx
		xor    %ecx,%ecx
		jmp    jump_4c17b
	jump_4c16c:
		mov    $data_fda12,%eax
		movswl %bx,%edx
		call   func_4a8c3
		inc    %ecx
		inc    %ebx
	jump_4c17b:
		mov    data_fdaf0,%dx
		cmp    %dx,%cx
		jl     jump_4c16c
		cmp    $0x1,%si
		jne    jump_4c198
		mov    %edx,%ebx
		add    %esi,%ebx
		mov    %bx,data_fdaf0
	jump_4c198:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4c19d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $data_fd93e,%eax
		xor    %edx,%edx
		call   func_4a901
		mov    %dx,data_fdaf0
		mov    0x5c(%ebx),%ah
		test   %ah,%ah
		jbe    jump_4c1cb
		cmp    $0x4,%ah
		ja     jump_4c1cb
		mov    $0x5,%edx
		jmp    jump_4c4eb
	jump_4c1cb:
		mov    0x5c(%ebx),%dh
		cmp    $0xf,%dh
		jb     jump_4c1e2
		cmp    $0x16,%dh
		ja     jump_4c1e2
		mov    $0x10,%edx
		jmp    jump_4c4eb
	jump_4c1e2:
		mov    0x4c(%ebx),%eax
		mov    %eax,%edx
		mov    $0xa,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		cmp    0x48(%ebx),%eax
		jge    jump_4c202
		mov    $data_fd93e,%eax
		xor    %edx,%edx
		call   func_4bc2c
	jump_4c202:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731ac(%eax)
		jne    jump_4c226
		mov    $0x5,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c226:
		cmpb   $0x0,data_ba84e
		jne    jump_4c281
		cmpb   $0x2,0xf(%ebx)
		jne    jump_4c245
		cmpb   $0x20,0x5b(%ebx)
		jne    jump_4c245
		cmpw   $0x0,data_fd8bc
		je     jump_4c272
	jump_4c245:
		cmpb   $0x16,0xf(%ebx)
		jne    jump_4c25b
		cmpb   $0x3b,0x5b(%ebx)
		jne    jump_4c25b
		cmpw   $0x0,data_fd8be
		je     jump_4c272
	jump_4c25b:
		mov    0xf(%ebx),%ch
		cmp    $0x1d,%ch
		jne    jump_4c281
		cmp    0x5b(%ebx),%ch
		jne    jump_4c281
		cmpw   $0x0,data_fd8c0
		jne    jump_4c281
	jump_4c272:
		mov    $0x10,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c281:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    data_731ad(%eax),%dl
		cmp    $0x1,%dl
		jne    jump_4c2d8
		cmpb   $0x2,data_ba84e
		jge    jump_4c2d8
		cmpb   $0x26,0x11(%ebx)
		jne    jump_4c2ac
		cmp    0xd(%ebx),%dl
		jne    jump_4c2d8
	jump_4c2ac:
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1093d
		mov    %al,%ah
		cmp    $0x64,%al
		jbe    jump_4c2c1
		sub    $0x64,%ah
	jump_4c2c1:
		mov    %ah,%al
		and    $0xf,%al
		cmp    $0x8,%al
		je     jump_4c2d8
		mov    $0x1,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c2d8:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731ae(%eax)
		jne    jump_4c2fc
		mov    $0x3,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c2fc:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731af(%eax)
		jne    jump_4c320
		mov    $0x6,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c320:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b0(%eax)
		jne    jump_4c344
		mov    $0x4,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c344:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b1(%eax)
		jne    jump_4c38a
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1093d
		mov    %al,%ah
		sub    $0x64,%ah
		and    $0xf,%ah
		cmp    $0x64,%al
		jbe    jump_4c38a
		cmp    $0x2,%ah
		je     jump_4c37b
		cmp    $0x3,%ah
		jne    jump_4c38a
	jump_4c37b:
		mov    $0x2,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c38a:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b2(%eax)
		jne    jump_4c3ae
		mov    $0x7,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c3ae:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b3(%eax)
		jne    jump_4c3d2
		mov    $0x8,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c3d2:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x0,data_731b4(%eax)
		je     jump_4c3f6
		mov    $0x9,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c3f6:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b5(%eax)
		jne    jump_4c423
		testb  $0x2,0x84(%ebx)
		jne    jump_4c423
		mov    $0xa,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c423:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b6(%eax)
		jne    jump_4c447
		mov    $0xb,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c447:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b7(%eax)
		jne    jump_4c46b
		mov    $0xc,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c46b:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b8(%eax)
		jne    jump_4c48f
		mov    $0xd,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c48f:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731b9(%eax)
		jne    jump_4c4bc
		testb  $0x4,0x84(%ebx)
		jne    jump_4c4bc
		mov    $0xe,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c4bc:
		xor    %edx,%edx
		mov    0x11(%ebx),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_731ba(%eax)
		jne    jump_4c4e0
		mov    $0xf,%edx
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c4e0:
		cmpb   $0x32,0x43(%ebx)
		jbe    jump_4c4f5
		mov    $0x11,%edx
	jump_4c4eb:
		mov    $data_fd93e,%eax
		call   func_4bc2c
	jump_4c4f5:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4c4f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $data_fd8d4,%eax
		xor    %edx,%edx
		call   func_4a901
		mov    %dx,data_fdaf0
		cmpb   $0x3,0x6c(%ebx)
		jne    jump_4c523
		mov    $0x1,%edx
		mov    $data_fd8d4,%eax
		jmp    jump_4c52a
	jump_4c523:
		mov    $data_fd8d4,%eax
		xor    %edx,%edx
	jump_4c52a:
		call   func_4bc2c
		mov    %ebx,%eax
		xor    %ecx,%ecx
		call   func_174cf
		mov    %al,%cl
		cmp    $0x2,%cx
		je     jump_4c56c
		mov    0x6d(%ebx),%al
		cmp    $0x1,%al
		jb     jump_4c55d
		jbe    jump_4c54f
		cmp    $0x2,%al
		je     jump_4c556
		jmp    jump_4c55d
	jump_4c54f:
		mov    $0x4,%edx
		jmp    jump_4c562
	jump_4c556:
		mov    $0x5,%edx
		jmp    jump_4c562
	jump_4c55d:
		mov    $0x3,%edx
	jump_4c562:
		mov    $data_fd8d4,%eax
		call   func_4bc2c
	jump_4c56c:
		mov    0x6e(%ebx),%al
		cmp    $0x1,%al
		jb     jump_4c589
		jbe    jump_4c57b
		cmp    $0x4,%al
		je     jump_4c582
		jmp    jump_4c589
	jump_4c57b:
		mov    $0x7,%edx
		jmp    jump_4c58e
	jump_4c582:
		mov    $0x8,%edx
		jmp    jump_4c58e
	jump_4c589:
		mov    $0x6,%edx
	jump_4c58e:
		mov    $data_fd8d4,%eax
		call   func_4bc2c
		cmpw   $0x0,0x50(%ebx)
		jle    jump_4c5be
		cmpb   $0xff,0x80(%ebx)
		jne    jump_4c5af
		mov    $0x9,%edx
		jmp    jump_4c5b4
	jump_4c5af:
		mov    $0xa,%edx
	jump_4c5b4:
		mov    $data_fd8d4,%eax
		call   func_4bc2c
	jump_4c5be:
		cmp    $0x6,%cx
		jge    jump_4c5e9
		cmp    $0x2,%cx
		je     jump_4c5e9
		cmpb   $0xff,0x82(%ebx)
		jne    jump_4c5da
		mov    $0xb,%edx
		jmp    jump_4c5df
	jump_4c5da:
		mov    $0xc,%edx
	jump_4c5df:
		mov    $data_fd8d4,%eax
		call   func_4bc2c
	jump_4c5e9:
		cmpb   $0x2,0x83(%ebx)
		je     jump_4c601
		mov    $0xd,%edx
		mov    $data_fd8d4,%eax
		call   func_4bc2c
	jump_4c601:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4c605:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ecx
		movswl %dx,%ebx
		mov    $0x3,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    $0x7,%edi
		sar    $0x1f,%edx
		mov    %eax,%esi
		idiv   %edi
		movswl %dx,%edi
		mov    %ecx,%eax
		mov    %edi,%edx
		mov    $0x3,%ebp
		call   func_28480
		mov    %ax,0x4(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x15,%ebp
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_28429
		mov    (%esp),%edx
		cwtl
		cmp    %edx,%eax
		jne    jump_4c675
		cmp    $0xffffffff,%ebx
		jne    jump_4c68b
	jump_4c675:
		mov    $0x11,%ebx
		mov    $data_77ed3,%edx
	jump_4c67f:
		mov    %ecx,%eax
		call   func_48612
		jmp    jump_4c722
	jump_4c68b:
		mov    0x55(%ecx),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		add    %eax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%edx
		jge    jump_4c6b0
		mov    $0x11,%ebx
		mov    $data_77ee0,%edx
		jmp    jump_4c67f
	jump_4c6b0:
		lea    (%edi,%edi,1),%ebp
		mov    0x50(%ecx),%ax
		cmp    data_753b6(%ebp),%ax
		jge    jump_4c6cc
		mov    $0x11,%ebx
		mov    $data_77ee7,%edx
		jmp    jump_4c67f
	jump_4c6cc:
		mov    %esi,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    (%esp),%ebx
		shl    $0x2,%eax
		mov    data_7423c(%eax,%ebx,4),%eax
		call   func_28883
		mov    (%esp),%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   *data_f13b0(,%esi,4)
		cmp    $0x1,%ax
		jne    jump_4c722
		mov    data_753b6(%ebp),%ax
		mov    0x50(%ecx),%bx
		mov    %edi,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %bx,0x50(%ecx)
		call   func_28480
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_45b4e
	jump_4c722:
		add    $0x8,%esp
		jmp    jump_4b0a1


/*----------------------------------------------------------------*/
func_4c72a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %edx
		mov    %ebx,%ebp
		mov    (%esp),%eax
		xor    %edx,%edx
		add    $0x2,%eax
		mov    %dx,0x14(%esp)
		mov    %ax,0x10(%esp)
	jump_4c749:
		mov    $data_fda7c,%eax
		call   func_4b0f5
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		call   func_4bfca
		mov    $data_fda7c,%eax
		mov    0x14(%esp),%ebx
		call   func_4ad69
		test   %bx,%bx
		jne    jump_4c783
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    $0x1,%ebx
		mov    %ebp,%ecx
		jmp    jump_4c78f
	jump_4c783:
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
	jump_4c78f:
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b8eb
		mov    0x4(%esp),%esi
		mov    $0x1e,%ecx
		cmp    $0xa0,%si
		jge    jump_4c7af
		mov    $0xc2,%ecx
	jump_4c7af:
		mov    $0xff,%ebx
		mov    $0x1106,%edx
		mov    $0x4,%eax
		call   func_5db66
		mov    0x4e(%ebp),%eax
		sar    $0x10,%eax
		push   %eax
		push   $data_77eee
		push   $0x60
		movswl %cx,%eax
		push   %eax
		mov    $0xff,%ebx
		mov    $0x1100,%edx
		call   func_5e048
		add    $0x10,%esp
		mov    $0x4,%eax
		mov    0x14(%esp),%edi
		call   func_5db66
		test   %di,%di
		je     jump_4c838
		dec    %edi
		mov    0x4(%esp),%eax
		shl    $0x4,%edi
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    jump_4c82c
	jump_4c80a:
		mov    0xe(%esp),%ebx
		mov    $data_fda7c,%eax
		movswl %si,%ecx
		movswl %di,%edx
		sar    $0x10,%ebx
		mov    0x6(%esp,%ecx,2),%ecx
		add    $0x10,%edi
		sar    $0x10,%ecx
		inc    %esi
		call   func_4ac28
	jump_4c82c:
		cmp    0x14(%esp),%si
		jl     jump_4c80a
		call   func_5e9e8
	jump_4c838:
		mov    -0x2(%esp),%ebx
		mov    0x2(%esp),%esi
		mov    0x12(%esp),%ecx
		sar    $0x10,%ebx
		sar    $0x10,%esi
		mov    %ebx,%edx
		mov    %esi,%eax
		sar    $0x10,%ecx
		call   func_4ba7f
		mov    %ebx,%edx
		mov    %ax,0x8(%esp,%ecx,2)
		mov    %esi,%eax
		call   func_4b9d7
		cmpw   $0x0,0x8(%esp,%ecx,2)
		jge    jump_4c890
		mov    0x14(%esp),%ecx
		test   %cx,%cx
		jne    jump_4c886
		xor    %eax,%eax
		call   func_4ad69
		mov    $0xfffffffe,%eax
		jmp    jump_4c982
	jump_4c886:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x14(%esp)
		jmp    jump_4c895
	jump_4c890:
		incw   0x14(%esp)
	jump_4c895:
		cmpw   $0x3,0x14(%esp)
		jne    jump_4c749
		xor    %eax,%eax
		mov    0x4(%esp),%edi
		call   func_4ad69
		mov    (%esp),%eax
		xor    %esi,%esi
		add    $0x2,%eax
		sub    $0x10,%edi
		mov    %ax,0x18(%esp)
		jmp    jump_4c8e2
	jump_4c8c0:
		mov    0x16(%esp),%ebx
		movswl %si,%eax
		movswl %di,%edx
		sar    $0x10,%ebx
		add    $0x10,%edi
		mov    0x6(%esp,%eax,2),%ecx
		mov    $data_fda7c,%eax
		sar    $0x10,%ecx
		inc    %esi
		call   func_4ac28
	jump_4c8e2:
		cmp    0x14(%esp),%si
		jl     jump_4c8c0
		call   func_5e9e8
		mov    0xa(%esp),%edx
		test   %dx,%dx
		jne    jump_4c900
		movw   $0x7,0xa(%esp)
		jmp    jump_4c90a
	jump_4c900:
		mov    %edx,%ebx
		sub    $0x8,%ebx
		mov    %bx,0xa(%esp)
	jump_4c90a:
		mov    0xc(%esp),%esi
		test   %si,%si
		jne    jump_4c91c
		movw   $0x7,0xc(%esp)
		jmp    jump_4c926
	jump_4c91c:
		mov    %esi,%edi
		sub    $0xf,%edi
		mov    %di,0xc(%esp)
	jump_4c926:
		mov    0x6(%esp),%edx
		mov    0x8(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		shl    $0x7,%edx
		shl    $0x4,%eax
		add    %edx,%eax
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    data_74fa8(%eax,%edx,2),%cx
		dec    %ecx
		movswl %cx,%ebx
		mov    $0x3,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		je     jump_4c968
		mov    $0xffffffff,%eax
		jmp    jump_4c982
	jump_4c968:
		mov    $0x15,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		movswl %ax,%edx
		mov    %ebp,%eax
		call   func_28429
		add    %ecx,%eax
	jump_4c982:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4c98a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		test   %dx,%dx
		jne    jump_4ca23
		call   func_4bc3c
		movswl %ax,%edi
		mov    0x55(%ecx),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		lea    (%edi,%edi,1),%esi
		add    %edx,%eax
		mov    data_75426(%esi),%edx
		sar    $0x10,%edx
		cmp    %edx,%eax
		jge    jump_4c9d7
	jump_4c9c1:
		mov    $0x11,%ebx
		mov    $data_77ee0,%edx
		mov    %ecx,%eax
		call   func_48612
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_4c9d7:
		movswl %di,%edi
		mov    %ecx,%eax
		mov    %edi,%edx
		call   func_302e6
		cmp    $0x1,%ax
		jne    jump_4ca9e
		mov    $0x1,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   func_301bb
		mov    data_75426(%esi),%esi
		mov    0x55(%ecx),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		sub    %eax,%esi
		test   %esi,%esi
		jl     jump_4ca98
		movswl %si,%edx
		mov    %ecx,%eax
		call   func_45b4e
		jmp    jump_4ca98
	jump_4ca23:
		dec    %esi
		mov    0x55(%eax),%edx
		call   func_1a0e9
		sar    $0x10,%edx
		cwtl
		movswl %si,%edi
		add    %eax,%edx
		mov    data_753c2(,%edi,2),%eax
		sar    $0x10,%eax
		cmp    %eax,%edx
		jl     jump_4c9c1
		mov    %ecx,%eax
		mov    %edi,%ebx
		call   func_2ca40
		movswl %ax,%edx
		mov    %ecx,%eax
		call   *data_f1474(,%ebx,4)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_4ca9e
		cmpb   $0x32,0x11(%ecx)
		je     jump_4ca73
		mov    %edi,%edx
		mov    %ecx,%eax
		xor    %edi,%ebx
		call   func_301bb
	jump_4ca73:
		movswl %si,%eax
		mov    data_753c2(,%eax,2),%eax
		mov    0x55(%ecx),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		sub    %esi,%eax
		mov    %eax,%esi
		test   %eax,%eax
		jl     jump_4ca98
		movswl %ax,%edx
		mov    %ecx,%eax
		call   func_45b4e
	jump_4ca98:
		movw   $0x0,0x57(%ecx)
	jump_4ca9e:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4caa3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    $data_fda12,%eax
		call   func_4b0f5
		mov    %ebx,%eax
		call   func_4c03e
		cmpw   $0x0,data_fdaf0
		jne    jump_4cad6
		mov    $0x2,%eax
		call   func_4f4cd
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_4cad6:
		mov    $data_fda12,%eax
		call   func_4ad69
		movswl %dx,%esi
		movswl %di,%edi
		mov    %ebx,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   func_4b8eb
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_4ba7f
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_4b9d7
		xor    %eax,%eax
		call   func_4ad69
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_4cb16:
		.long   func_4cb7a
		.long   func_4cbd5
		.long   func_4cbe3
		.long   func_4cc05
		.long   func_4cc1a
		.long   func_4cba0
		.long   func_4cc0e
		.long   func_4cc26
		.long   func_4cc36
		.long   func_4cc47
		.long   func_4cc53
		.long   func_4cc65
		.long   func_4cc73
		.long   func_4cc8a
		.long   func_4cc96
		.long   func_4cca8
		.long   func_4ccb4
		.long   func_4cd39


/*----------------------------------------------------------------*/
func_4cb5e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		cmp    $0x11,%dx
		ja     jump_4cdb7
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *vtable_4cb16(,%eax,4)


/*----------------------------------------------------------------*/
func_4cb7a:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3c7d1
	jump_4cb81:
		cmp    $0x1,%ax
		jne    jump_4cdb7
	jump_4cb8b:
		mov    $0x28,%edx
	jump_4cb90:
		mov    (%ecx),%eax
		call   func_45b4e
	jump_4cb97:
		mov    $0xfffffffe,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4cba0:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		cmpb   $0x0,0x5c(%eax)
		jne    jump_4cbaf
		call   func_3b7ce
		jmp    jump_4cbb4
	jump_4cbaf:
		call   func_3b614
	jump_4cbb4:
		mov    %eax,%ebx
		test   %ebx,%ebx
		je     jump_4cdb7
		mov    $0x28,%edx
		mov    (%ecx),%eax
		call   func_45b4e
		mov    $0xfffffffe,%eax
		mov    %ebx,(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4cbd5:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		mov    $0x28,%edx
		call   func_3b5b4
		jmp    jump_4cb90


/*----------------------------------------------------------------*/
func_4cbe3:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3b9e1
	jump_4cbea:
		cmp    $0x1,%ax
		jne    jump_4cdb7
	jump_4cbf4:
		mov    $0x28,%edx
	jump_4cbf9:
		mov    (%ecx),%eax
		call   func_45b4e
		jmp    jump_4cdb7


/*----------------------------------------------------------------*/
func_4cc05:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bb05
		jmp    jump_4cbea


/*----------------------------------------------------------------*/
func_4cc0e:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_18d36
		jmp    jump_4cdb7


/*----------------------------------------------------------------*/
func_4cc1a:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bba7
		jmp    jump_4cdb7


/*----------------------------------------------------------------*/
func_4cc26:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bc17
		mov    $0xffffffff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4cc36:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bdc7
	jump_4cc3d:
		call   func_1a0e9
		movswl %ax,%edx
		jmp    jump_4cbf9


/*----------------------------------------------------------------*/
func_4cc47:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bfac
		jmp    jump_4cb81


/*----------------------------------------------------------------*/
func_4cc53:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3bc67
		mov    (%ecx),%eax
		orb    $0x2,0x84(%eax)
		jmp    jump_4cbf4


/*----------------------------------------------------------------*/
func_4cc65:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		mov    $0x3c,%edx
		call   func_3c09f
		jmp    jump_4cbf9


/*----------------------------------------------------------------*/
func_4cc73:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3c12d
		xor    %eax,%eax
		call   func_1a0bf
		mov    $0xfffffffc,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4cc8a:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3c30a
		jmp    jump_4cbea


/*----------------------------------------------------------------*/
func_4cc96:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3c3a5
		mov    (%ecx),%eax
		orb    $0x4,0x84(%eax)
		jmp    jump_4cc3d


/*----------------------------------------------------------------*/
func_4cca8:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		call   func_3c4c1
		jmp    jump_4cbea


/*----------------------------------------------------------------*/
func_4ccb4:
/*----------------------------------------------------------------*/
		mov    (%ecx),%eax
		cmpl   $0x0,0x77(%eax)
		je     jump_4ccc6
		call   func_3c70c
		jmp    jump_4cb8b
	jump_4ccc6:
		mov    0xf(%eax),%dh
		cmp    $0x2,%dh
		jne    jump_4cced
		mov    $0x10,%edx
		call   func_3c548
		cmp    $0x1,%ax
		jne    jump_4cb97
		mov    %ax,data_fd8bc
		jmp    jump_4cb97
	jump_4cced:
		cmp    $0x16,%dh
		jne    jump_4cd11
		mov    $0x14,%edx
		call   func_3c548
		cmp    $0x1,%ax
		jne    jump_4cb97
		mov    %ax,data_fd8be
		jmp    jump_4cb97
	jump_4cd11:
		cmp    $0x1d,%dh
		jne    jump_4cb97
		mov    $0xf,%edx
		call   func_3c548
		cmp    $0x1,%ax
		jne    jump_4cb97
		mov    %ax,data_fd8c0
		jmp    jump_4cb97


/*----------------------------------------------------------------*/
func_4cd39:
/*----------------------------------------------------------------*/
		mov    data_f0ba0,%dx
		cmp    $0x96,%dx
		jge    jump_4cd67
		mov    %edx,%ebx
		add    $0x2,%ebx
		mov    %bx,data_f0ba0
		mov    (%ecx),%eax
		cmpb   $0x4e,0x5d(%eax)
		jne    jump_4cd67
		mov    %ebx,%esi
		add    $0x2,%esi
		mov    %si,data_f0ba0
	jump_4cd67:
		mov    $0x10,%eax
		call   func_1033b
		mov    (%ecx),%eax
		mov    $0x11,%ebx
		mov    $data_77ef4,%edx
		movb   $0x8,0x64(%eax)
		call   func_45559
		call   func_499e4
		mov    (%ecx),%eax
		call   func_48612
		mov    (%ecx),%eax
		call   func_12124
		call   func_45559
		call   func_44df3
		call   func_1a0e9
		movswl %ax,%edx
		mov    (%ecx),%eax
		call   func_45b4e
		call   func_53e0f
	jump_4cdb7:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4cdbd:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $data_fd93e,%eax
		call   func_4b0f5
		movswl %dx,%edi
		mov    (%ebx),%eax
		movswl %si,%esi
		call   func_4c19d
		mov    $data_fd93e,%eax
		mov    %edi,%edx
		call   func_4ad69
		mov    %esi,%eax
		mov    (%ebx),%ecx
		xor    %ebx,%ebx
		call   func_4b8eb
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_4ba7f
		mov    %eax,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_4b9d7
		xor    %eax,%eax
		call   func_4ad69
		test   %bx,%bx
		jge    jump_4ce19
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_4ce19:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4ce1f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		call   func_103a8
		mov    $0x5,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %esp,%esi
		call   func_49e4e
		call   mouse_get_state
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %ax,0x8(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		call   func_109ce
		movb   $0xff,0x71(%ebp)
		mov    %edi,0x73(%ebp)
		mov    %ax,0xc(%esp)
		mov    0x71(%ebp),%al
		mov    %al,0x6f(%ebp)
		call   func_45559
	jump_4ce7b:
		test   %edi,%edi
		jne    jump_4ce94
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49eee
		jmp    jump_4ce99
	jump_4ce94:
		call   func_4a106
	jump_4ce99:
		call   func_5d41e
		call   func_5e9e8
	jump_4cea3:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_4cece
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_4cece
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_4cece:
		cmpw   $0x0,(%esp)
		je     jump_4cea3
		call   func_5d570
		call   func_4a210
		mov    (%esp),%ebx
		cmp    $0x4800,%bx
		jb     jump_4cf07
		jbe    jump_4cf22
		cmp    $0x4d00,%bx
		jb     jump_4cf00
		jbe    jump_4cf22
		cmp    $0x5000,%bx
	jump_4cef9:
		je     jump_4cf22
		jmp    jump_4cff2
	jump_4cf00:
		cmp    $0x4b00,%bx
		jmp    jump_4cef9
	jump_4cf07:
		cmp    $0x1,%bx
		jb     jump_4cff2
		jbe    jump_4cf2e
		cmp    $0x2,%bx
		je     jump_4d016
		jmp    jump_4cff2
	jump_4cf22:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_4a3ff
	jump_4cf2e:
		cmpw   $0x1,(%esp)
		jne    jump_4cf83
		mov    $0x1,%eax
		call   func_49c05
		mov    0x2(%esp),%ebx
		cmp    $0x28,%bx
		jge    jump_4cf50
		mov    $0x4b00,%eax
		jmp    jump_4cf5c
	jump_4cf50:
		cmp    $0x118,%bx
		jle    jump_4cf61
		mov    $0x4d00,%eax
	jump_4cf5c:
		call   func_4a32c
	jump_4cf61:
		mov    0x4(%esp),%esi
		cmp    $0x14,%si
		jge    jump_4cf72
		mov    $0x4800,%eax
		jmp    jump_4cf7e
	jump_4cf72:
		cmp    $0xb4,%si
		jle    jump_4cf83
		mov    $0x5000,%eax
	jump_4cf7e:
		call   func_4a32c
	jump_4cf83:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    %ax,0x8(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_109ce
		mov    %eax,%esi
		mov    %ax,0xc(%esp)
		call   func_4a321
		movswl %si,%eax
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_11db2
		mov    %eax,%esi
		cmp    %eax,%edi
		je     jump_4cfc9
		call   func_45559
		mov    %esi,%edi
	jump_4cfc9:
		test   %edi,%edi
		je     jump_4cfe2
		mov    0xa(%esp),%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_49fe1
		jmp    jump_4cff2
	jump_4cfe2:
		mov    $0x5,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   func_49e4e
	jump_4cff2:
		mov    (%esp),%edx
		cmp    $0x1b,%dx
		je     jump_4d005
		cmp    $0x3,%dx
		jne    jump_4ce7b
	jump_4d005:
		call   func_103a0
		xor    %eax,%eax
	jump_4d00c:
		add    $0x10,%esp
	jump_4d00f:
		pop    %ebp
	jump_4d010:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_4d016:
		test   %edi,%edi
		je     jump_4d01f
		mov    %edi,0x73(%ebp)
		jmp    jump_4d02d
	jump_4d01f:
		mov    0x8(%esp),%al
		mov    %al,0x6f(%ebp)
		mov    0xc(%esp),%al
		mov    %al,0x70(%ebp)
	jump_4d02d:
		call   func_103a0
		mov    $0x1,%eax
		jmp    jump_4d00c

vtable_4d03a:
		.long   func_4d2c0
		.long   func_4d2c0
		.long   func_4d2da
		.long   func_4d2e6
		.long   func_4d2e6
		.long   func_4d2e6
		.long   func_4d310
		.long   func_4d319
		.long   func_4d322
		.long   func_4d32b
		.long   func_4d337
		.long   func_4d36f
		.long   func_4d37b


/*----------------------------------------------------------------*/
func_4d06e:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %ebx,%esi
		mov    %ebx,%eax
		mov    %esp,%ecx
		call   func_174cf
		movzbw %al,%di
		lea    0x8(%esp),%eax
		lea    0x4(%esp),%edx
		push   %eax
		lea    0x14(%esp),%ebx
		mov    %esi,%eax
		call   func_4d582
		mov    0xe(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		movsbl (%esi),%eax
		call   func_10971
		add    %ax,(%esp)
		movsbl 0x1(%esi),%eax
		call   func_10988
		mov    0x8(%esp),%ebx
		add    %eax,%ebx
		mov    $data_fd8d4,%ebp
		mov    %bx,0x8(%esp)
	jump_4d0d0:
		mov    %ebp,%eax
		call   func_4b0f5
		mov    %ebp,%eax
		call   func_4ad69
		mov    %esi,%eax
		call   func_4c4f9
		mov    $0x1,%eax
		call   func_44d6e
		mov    $0x1,%eax
		mov    $0x2,%ebx
		call   func_44dc5
		mov    0xe(%esp),%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		call   func_1124a
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b8eb
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4ba7f
		mov    0x6(%esp),%edx
		mov    %eax,%ebx
		mov    %ax,0xc(%esp)
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b9d7
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   func_4a901
		mov    %cx,data_fdaf0
		cmp    $0x6,%bx
		jb     jump_4d184
		cmp    $0x8,%bx
		jbe    jump_4d1c5
		cmp    $0xa,%bx
		jbe    jump_4d1e4
		cmp    $0xc,%bx
		jbe    jump_4d1f7
		jmp    jump_4d20f
	jump_4d184:
		cmp    $0x2,%bx
		ja     jump_4d1a6
		mov    %ebp,%eax
		xor    %edx,%edx
		call   func_4bc2c
		mov    $0x1,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0x2,%edx
		jmp    jump_4d208
	jump_4d1a6:
		mov    $0x3,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0x4,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0x5,%edx
		jmp    jump_4d208
	jump_4d1c5:
		mov    $0x6,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0x7,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0x8,%edx
		jmp    jump_4d208
	jump_4d1e4:
		mov    $0x9,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0xa,%edx
		jmp    jump_4d208
	jump_4d1f7:
		mov    $0xb,%edx
		mov    %ebp,%eax
		call   func_4bc2c
		mov    $0xc,%edx
	jump_4d208:
		mov    %ebp,%eax
		call   func_4bc2c
	jump_4d20f:
		cmpw   $0xd,0xc(%esp)
		jne    jump_4d23e
		mov    0x56(%esi),%dl
		movb   $0x0,0x83(%esi)
		cmp    $0xff,%dl
		jne    jump_4d22d
		mov    %esi,%eax
		call   func_196d0
	jump_4d22d:
		xor    %eax,%eax
		call   func_4ad69
		mov    $0x1,%eax
		jmp    jump_4d3b2
	jump_4d23e:
		mov    %ebp,%eax
		call   func_4b0f5
		mov    %ebp,%eax
		mov    0xc(%esp),%edx
		call   func_4ad69
		test   %dx,%dx
		jl     jump_4d3a6
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    $0x2,%ebx
		mov    %esi,%ecx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b8eb
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4ba7f
		mov    0x6(%esp),%edx
		mov    %eax,%ebx
		mov    %ax,0xc(%esp)
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ecx,%ecx
		call   func_4b9d7
		mov    %cx,data_fdaf0
		cmp    $0xc,%bx
		ja     jump_4d0d0
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *vtable_4d03a(,%eax,4)


/*----------------------------------------------------------------*/
func_4d2c0:
/*----------------------------------------------------------------*/
		cmpb   $0x5,0x6c(%esi)
		je     jump_4d0d0
		mov    0xc(%esp),%al
		mov    $0x3,%ah
		mul    %ah
		mov    %al,0x6c(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d2da:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_4ce1f
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d2e6:
/*----------------------------------------------------------------*/
		cmp    $0x5,%di
		jne    jump_4d2f8
		cmpw   $0x4,0xc(%esp)
		jle    jump_4d2f8
		movb   $0x5,0x6c(%esi)
	jump_4d2f8:
		cmp    $0x6,%di
		jge    jump_4d0d0
		mov    0xc(%esp),%al
		sub    $0x3,%al
		mov    %al,0x6d(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d310:
/*----------------------------------------------------------------*/
		movb   $0x0,0x6e(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d319:
/*----------------------------------------------------------------*/
		movb   $0x1,0x6e(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d322:
/*----------------------------------------------------------------*/
		movb   $0x4,0x6e(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d32b:
/*----------------------------------------------------------------*/
		movb   $0xff,0x80(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d337:
/*----------------------------------------------------------------*/
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4c72a
		test   %ax,%ax
		jl     jump_4d0d0
		movswl %ax,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %al,0x80(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d36f:
/*----------------------------------------------------------------*/
		movb   $0xff,0x82(%esi)
		jmp    jump_4d0d0


/*----------------------------------------------------------------*/
func_4d37b:
/*----------------------------------------------------------------*/
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4caa3
		mov    %eax,%edx
		test   %ax,%ax
		jl     jump_4d0d0
		mov    %al,0x82(%esi)
		jmp    jump_4d0d0
	jump_4d3a6:
		mov    %esi,%eax
		call   func_19718
		mov    $0xffffffff,%eax
	jump_4d3b2:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4d3ba:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x4c(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		shl    $0x4,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		cmp    0x48(%ebx),%eax
		jle    jump_4d406
		sub    $0xa,%ecx
		test   %cx,%cx
		jle    jump_4d406
		imul   $0x1e,%ecx,%ecx
		mov    0x48(%ebx),%esi
		movswl %cx,%edx
		add    %esi,%edx
		cmp    %eax,%edx
		jle    jump_4d3fc
		mov    %eax,%ecx
		sub    0x48(%ebx),%cx
	jump_4d3fc:
		movswl %cx,%edx
		mov    %ebx,%eax
		call   func_462a7
	jump_4d406:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_4d40a:
		.long   func_4d45c
		.long   func_4d490
		.long   func_4d490
		.long   func_4d490
		.long   func_4d490
		.long   func_4d490
		.long   func_4d4b1
		.long   func_4d4cf
		.long   func_4d4eb
		.long   func_4d504
		.long   func_4d517
		.long   func_4d53b
		.long   func_4d546
		.long   func_4d559


/*----------------------------------------------------------------*/
func_4d442:
/*----------------------------------------------------------------*/
		push   %esi
		mov    %ebx,%esi
		cmp    $0xd,%cx
		ja     jump_4d48c
		xor    %ebx,%ebx
		mov    %cx,%bx
		jmp    *vtable_4d40a(,%ebx,4)


/*----------------------------------------------------------------*/
func_4d45c:
/*----------------------------------------------------------------*/
		mov    (%esi),%eax
		call   func_1f738
		test   %ax,%ax
		je     jump_4d48c
		cmp    $0x2,%ax
		jne    jump_4d480
		xor    %eax,%eax
		call   func_1a0bf
		mov    $0xfffffffc,%eax
		pop    %esi
		ret
	jump_4d480:
		mov    $0x28,%edx
	jump_4d485:
		mov    (%esi),%eax
		call   func_45b4e
	jump_4d48c:
		xor    %eax,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d490:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		mov    (%esi),%ebx
		call   func_4caa3
		test   %ax,%ax
		jl     jump_4d48c
		movswl %ax,%edx
		mov    (%esi),%eax
		call   func_4c98a
		mov    $0xfffffffe,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d4b1:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		mov    (%esi),%ebx
		call   func_4c72a
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jl     jump_4d48c
		mov    (%esi),%eax
		call   func_4c605
		xor    %eax,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d4cf:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		cwtl
		mov    %esi,%ebx
		call   func_4cdbd
		test   %ax,%ax
		jl     jump_4d48c
		movswl %ax,%edx
		mov    %esi,%eax
		call   func_4cb5e
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d4eb:
/*----------------------------------------------------------------*/
		call   func_1a0e9
		movswl %ax,%edx
		mov    (%esi),%eax
		call   func_4d3ba
		call   func_1a0e9
		movswl %ax,%edx
		jmp    jump_4d485


/*----------------------------------------------------------------*/
func_4d504:
/*----------------------------------------------------------------*/
		mov    $0x28,%edx
		mov    (%esi),%eax
		call   func_45b4e
		mov    $0x1,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d517:
/*----------------------------------------------------------------*/
		mov    (%esi),%esi
		mov    0x57(%esi),%dx
		cmp    $0x1f4,%dx
		jge    jump_4d52d
		mov    %edx,%ebx
		add    $0x14,%ebx
		mov    %bx,0x57(%esi)
	jump_4d52d:
		xor    %eax,%eax
		call   func_1a0bf
		mov    $0xfffffffd,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d53b:
/*----------------------------------------------------------------*/
		mov    (%esi),%eax
		call   func_493a3
		xor    %eax,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d546:
/*----------------------------------------------------------------*/
		mov    $0x3c,%edx
		mov    (%esi),%eax
		call   func_45b4e
		mov    $0x2,%eax
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4d559:
/*----------------------------------------------------------------*/
		mov    (%esi),%eax
		movb   $0x1,0x83(%eax)
		mov    (%esi),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_4d06e
		pop    %esi
		ret

vtable_4d572:
		.long   func_4d625
		.long   func_4d62d
		.long   func_4d629
		.long   func_4d631


/*----------------------------------------------------------------*/
func_4d582:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    0x5d(%eax),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		mov    $data_d66a8,%ebx
		sub    %edx,%eax
		mov    0x60(%esi),%edx
		shl    $0x2,%eax
		sar    $0x18,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x1(%eax),%edx
		mov    0x2(%eax),%bl
		sar    $0x18,%edx
		sar    %ebx
		add    $0xc,%edx
		add    %ebx,%edx
		mov    %dx,(%ecx)
		mov    0x2(%eax),%edx
		sar    $0x18,%edx
		mov    0x3(%eax),%al
		and    $0xff,%eax
		sub    $0x2,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x14(%esp),%edx
		xor    %ecx,%ecx
		mov    %ax,(%edx)
		mov    %esi,%eax
		movsbw (%esi),%bx
		movsbw 0x1(%esi),%dx
		call   func_174cf
		cmp    $0x5,%al
		je     jump_4d60c
		cmp    $0xb,%al
		jne    jump_4d611
	jump_4d60c:
		mov    $0x3,%ecx
	jump_4d611:
		mov    0x63(%esi),%al
		cmp    $0x3,%al
		ja     jump_4d633
		and    $0xff,%eax
		jmp    *vtable_4d572(,%eax,4)


/*----------------------------------------------------------------*/
func_4d625:
/*----------------------------------------------------------------*/
		add    %ecx,%edx
		jmp    jump_4d633


/*----------------------------------------------------------------*/
func_4d629:
/*----------------------------------------------------------------*/
		sub    %ecx,%edx
		jmp    jump_4d633


/*----------------------------------------------------------------*/
func_4d62d:
/*----------------------------------------------------------------*/
		sub    %ecx,%ebx
		jmp    jump_4d633


/*----------------------------------------------------------------*/
func_4d631:
/*----------------------------------------------------------------*/
		add    %ecx,%ebx
	jump_4d633:
		movswl %bx,%eax
		call   func_10971
		mov    (%edi),%bx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    0x14(%esp),%edx
		call   func_10988
		mov    (%edx),%dx
		add    %eax,%edx
		movswl %bx,%eax
		call   func_109a3
		mov    %ax,0x0(%ebp)
		movswl %dx,%eax
		mov    (%esp),%edx
		call   func_109ce
		mov    %ax,(%edx)
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_4d674:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    %eax,%ecx
		mov    %ebx,(%esp)
		testb  $0x10,0x1e(%ebx)
		jne    jump_4db76
		mov    (%esp),%eax
		testb  $0x2,0x14(%eax)
		jne    jump_4db76
		cmpb   $0x1,0x83(%eax)
		jb     jump_4d6b8
		mov    (%esp),%ebx
		movswl %dx,%edx
		movswl %cx,%eax
		call   func_4d06e
		cmp    $0x1,%ax
		jne    jump_4db76
	jump_4d6b8:
		mov    (%esp),%eax
		cmpb   $0xff,0x56(%eax)
		jne    jump_4d6cc
		call   func_19fa3
		cmp    $0x3,%ax
		jne    jump_4d6d7
	jump_4d6cc:
		movw   $0x1,data_fdaf2
		jmp    jump_4d6f4
	jump_4d6d7:
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    %dx,data_fdaf2
		mov    0x56(%eax),%al
		xor    %ah,%ah
		mov    %ax,0x24(%esp)
		mov    (%esp),%eax
		movb   $0x0,0x56(%eax)
	jump_4d6f4:
		mov    (%esp),%eax
		lea    0x20(%esp),%ecx
		call   func_19fab
		lea    0xc(%esp),%eax
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x2c(%esp),%edx
		mov    0x4(%esp),%eax
		call   func_4d582
		mov    0xe(%esp),%edx
		mov    0x26(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    0x20(%esp),%edx
		add    %eax,%edx
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		mov    %dx,0x18(%esp)
		call   func_10988
		mov    0xc(%esp),%edx
		add    %eax,%edx
		mov    %dx,0x1c(%esp)
		mov    0x16(%esp),%ecx
		mov    0x1a(%esp),%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		mov    %ecx,%eax
		mov    %esi,%edx
		call   func_455bd
		mov    (%esp),%eax
		call   func_1cc09
		mov    $data_fd9a8,%eax
		call   func_4b0f5
		mov    (%esp),%eax
		call   func_4bd26
		mov    $data_fd9a8,%eax
		call   func_4ad69
		mov    $0x2,%eax
		call   func_1a0f0
		mov    $0x1,%eax
		mov    %esi,%edx
		call   func_44d67
		mov    (%esp),%ebx
		mov    %ecx,%eax
		call   func_4b767
		mov    (%esp),%eax
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    %edx,%eax
		cmpb   $0x1,data_73b59(%edx,%eax,8)
		jne    jump_4d7ce
		movw   $0x2,0x4(%esp)
		jmp    jump_4d7d5
	jump_4d7ce:
		xor    %ecx,%ecx
		mov    %cx,0x4(%esp)
	jump_4d7d5:
		mov    $0xa,%eax
		xor    %edi,%edi
		mov    $data_fd9a8,%ebp
		mov    %edi,0x8(%esp)
		mov    %ax,0x14(%esp)
	jump_4d7ea:
		cmpw   $0x0,data_fdaee
		jne    jump_4d88f
		mov    (%esp),%eax
		call   func_1cc09
		mov    %ebp,%eax
		call   func_4b0f5
		mov    (%esp),%eax
		call   func_4bd26
		mov    %ebp,%eax
		call   func_4ad69
		mov    $0x1,%eax
		call   func_44d6e
		mov    $0x1,%eax
		call   func_44dc5
		mov    0xe(%esp),%edx
		mov    0x26(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    0x20(%esp),%edx
		add    %eax,%edx
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		mov    %dx,0x18(%esp)
		call   func_10988
		mov    0xc(%esp),%edx
		add    %eax,%edx
		mov    %dx,0x1c(%esp)
		mov    0x16(%esp),%esi
		mov    0x1a(%esp),%edi
		sar    $0x10,%esi
		sar    $0x10,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		xor    %ebx,%ebx
		call   func_455bd
		mov    (%esp),%ecx
		mov    %edi,%edx
		mov    %esi,%eax
		call   func_4b8eb
	jump_4d88f:
		mov    0x1a(%esp),%esi
		mov    0x16(%esp),%edi
		sar    $0x10,%esi
		sar    $0x10,%edi
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_4ba7f
		mov    %eax,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		call   func_44d67
		test   %bx,%bx
		jl     jump_4d96f
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_4b9d7
		movswl %bx,%ecx
		xor    %eax,%eax
		mov    %esp,%ebx
		call   func_44dec
		mov    %esi,%edx
		mov    %edi,%eax
		call   func_4d442
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x1,%eax
		call   func_44dec
		call   func_1a0ad
		cmp    $0x1,%ax
		jne    jump_4d902
		movswl %dx,%eax
		cmp    $0xfffffffd,%eax
		je     jump_4d902
		mov    (%esp),%eax
		movw   $0x0,0x57(%eax)
	jump_4d902:
		movswl %si,%eax
		cmp    $0xfffffffe,%eax
		jne    jump_4d924
		lea    0xc(%esp),%eax
		lea    0x20(%esp),%ecx
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x2c(%esp),%edx
		mov    0x4(%esp),%eax
		call   func_4d582
	jump_4d924:
		test   %si,%si
		jle    jump_4d93e
		mov    %esi,%ecx
		mov    $0x1,%eax
		dec    %ecx
		mov    0x4(%esp),%ebx
		shl    %cl,%eax
		or     %eax,%ebx
		mov    %bx,0x4(%esp)
	jump_4d93e:
		call   func_1a0e9
		cmp    $0xa,%ax
		jl     jump_4d95a
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     jump_4d95a
		cmp    $0xfffffffc,%eax
		jne    jump_4d7ea
	jump_4d95a:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jne    jump_4d96a
		movl   $0x1,0x8(%esp)
	jump_4d96a:
		mov    $0xffffffff,%edx
	jump_4d96f:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     jump_4daaf
		mov    0x1a(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b9d7
	jump_4d98e:
		mov    0x14(%esp),%esi
		call   func_1a0e9
		cmp    %si,%ax
		jl     jump_4da7b
		call   func_1a0e9
		mov    0x12(%esp),%ebx
		movswl %ax,%edx
		sar    $0x10,%ebx
		sub    %ebx,%edx
		mov    $0xa,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		shl    $0x2,%eax
		movswl %ax,%esi
		mov    %esi,%eax
		call   func_14300
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    0x20(%esp),%edx
		add    %eax,%edx
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		mov    %dx,0x18(%esp)
		call   func_10988
		mov    0xc(%esp),%edx
		add    %eax,%edx
		mov    %dx,0x1c(%esp)
		mov    0x16(%esp),%eax
		mov    0x1a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_455bd
		mov    (%esp),%eax
		call   func_16834
		test   %ax,%ax
		jl     jump_4da59
		cwtl
		sub    %eax,%esi
		mov    %esi,%eax
		sar    $0x2,%eax
		imul   %ecx,%eax
		add    %eax,%ebx
		mov    (%esp),%eax
		movswl %bx,%edx
		call   func_45b4e
		mov    (%esp),%eax
		mov    (%esp),%ecx
		mov    0x60(%eax),%ebx
		movsbl 0x1(%eax),%edx
		sar    $0x18,%ebx
		movsbl (%eax),%eax
		call   func_1d124
		test   %ax,%ax
		je     jump_4da69
		call   func_1a0e9
		cmp    $0x28,%ax
		jge    jump_4da7b
		jmp    jump_4da69
	jump_4da59:
		cwtl
		cmp    $0xfffffffe,%eax
		jne    jump_4da7b
		movl   $0x1,0x8(%esp)
		jmp    jump_4da7b
	jump_4da69:
		mov    (%esp),%eax
		call   func_167c9
		mov    %ax,0x14(%esp)
		jmp    jump_4d98e
	jump_4da7b:
		lea    0xc(%esp),%eax
		lea    0x20(%esp),%ecx
		lea    0x10(%esp),%ebx
		push   %eax
		lea    0x2c(%esp),%edx
		mov    0x4(%esp),%eax
		call   func_4d582
		mov    0x14(%esp),%edx
		call   func_1a0e9
		cmp    %dx,%ax
		jl     jump_4daaf
		cmpw   $0x0,0x8(%esp)
		je     jump_4d7ea
	jump_4daaf:
		mov    0x1a(%esp),%edx
		mov    0x16(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4b842
		xor    %eax,%eax
		mov    0x8(%esp),%ecx
		call   func_4ad69
		test   %cx,%cx
		jne    jump_4db4e
		cmpw   $0x0,data_fdaf2
		jne    jump_4db4e
		call   func_1a0ad
		cmp    $0x1,%ax
		jne    jump_4db44
		call   func_1a0e9
		cmp    $0x28,%ax
		jl     jump_4db0a
		call   func_1a0e9
		movswl %ax,%edx
		mov    (%esp),%eax
		call   func_4d3ba
	jump_4db0a:
		mov    (%esp),%eax
		call   func_197ad
		mov    (%esp),%eax
		mov    0x4(%esp),%dl
		or     %dl,0x13(%eax)
		mov    (%esp),%eax
		cmpb   $0x30,0x11(%eax)
		jne    jump_4db29
		orb    $0x4,0x13(%eax)
	jump_4db29:
		cmpw   $0x0,0x4(%esp)
		je     jump_4db3a
		mov    (%esp),%eax
		movb   $0x0,0x64(%eax)
		jmp    jump_4db4e
	jump_4db3a:
		mov    (%esp),%eax
		call   func_12124
		jmp    jump_4db4e
	jump_4db44:
		mov    (%esp),%eax
		mov    0x24(%esp),%dl
		mov    %dl,0x56(%eax)
	jump_4db4e:
		mov    $0x1,%eax
		call   func_1a0f0
		call   func_19fa3
		cmp    $0x1,%ax
		jne    jump_4db71
		call   func_19792
		test   %eax,%eax
		jne    jump_4db71
		call   func_19f9d
	jump_4db71:
		call   func_45559
	jump_4db76:
		add    $0x2c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4db7e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,0x4(%esp)
		mov    %ecx,(%esp)
		xor    %edx,%edx
		jmp    jump_4dbcc
	jump_4db92:
		movswl %dx,%eax
		mov    (%esp),%ebx
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    (%eax),%cx
		cmp    %cx,%si
		jl     jump_4dbcb
		movswl %cx,%ebx
		movswl %si,%ecx
		add    $0x18,%ebx
		cmp    %ebx,%ecx
		jg     jump_4dbcb
		cmp    0x2(%eax),%di
		jl     jump_4dbcb
		mov    (%eax),%eax
		sar    $0x10,%eax
		movswl %di,%ebx
		add    $0x18,%eax
		cmp    %eax,%ebx
		jg     jump_4dbcb
		mov    %edx,%eax
		jmp    jump_4dbd8
	jump_4dbcb:
		inc    %edx
	jump_4dbcc:
		cmp    0x4(%esp),%dx
		jl     jump_4db92
		mov    $0xffffffff,%eax
	jump_4dbd8:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4dbde:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
	jump_4dbe4:
		movswl %ax,%edx
		mov    %ax,data_fd8c2(,%edx,2)
		inc    %eax
		cmp    $0x3,%ax
		jl     jump_4dbe4
#if 1
    push   %eax
#endif
#if 1
    call   w_conf_get_music
    cmp    $0,%eax
#else
		cmpw   $0x0,game_cfg_music
#endif
		jne    jump_4dc0b /* jump if music is on */
		movw   $0x3,data_fd8c8
		jmp    jump_4dc14
	jump_4dc0b:
		movw   $0x5,data_fd8c8
	jump_4dc14:
#if 1
    call   w_conf_get_sound
    cmp    $0,%eax
#else
		cmpw   $0x0,game_cfg_sound
#endif
		jne    jump_4dc29
		movw   $0x4,data_fd8ca
		jmp    jump_4dc32
	jump_4dc29:
		movw   $0x6,data_fd8ca
	jump_4dc32:
		mov    $0x7,%edx
		mov    game_cfg_speed,%bx
		mov    %dx,data_fd8cc
#if 1
    pop    %eax
#endif
		test   %bx,%bx
		setne  %al
		mov    $0xa,%ecx
		xor    %ah,%ah
		mov    $0xb,%esi
		add    $0x8,%eax
		mov    %cx,data_fd8d0
		mov    %si,data_fd8d2
		mov    %ax,data_fd8ce
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4dc75:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_fd5fe,%ax
		add    $0x24,%eax
		movswl %ax,%edx
		mov    data_fd5fc,%ax
		add    $0xa0,%eax
		mov    data_fd600,%ebx
		cwtl
		call   func_5f3fd
		mov    data_fd608,%ax
		add    $0x60,%eax
		mov    %ax,data_fd88c
		mov    data_fd60a,%ax
		mov    $0x80,%esi
		add    $0x57,%eax
		mov    $0x4c,%edi
		mov    %ax,data_fd88e
		mov    data_fd60c,%ebx
		mov    data_fd88c,%edx
		mov    data_fd88a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x1,%ecx
		call   func_5f3fd
	jump_4dcec:
		movswl %cx,%eax
		mov    data_fd8c2(,%eax,2),%dx
		add    %edx,%edx
		inc    %edx
		movswl %dx,%edx
		imul   $0xc,%edx,%edx
		mov    data_fd5fc(%edx),%bx
		add    %esi,%ebx
		mov    %bx,data_fd88c(,%eax,4)
		mov    data_fd5fe(%edx),%bx
		add    %edi,%ebx
		mov    %bx,data_fd88e(,%eax,4)
		mov    data_fd600(%edx),%ebx
		mov    data_fd88c(,%eax,4),%edx
		mov    data_fd88a(,%eax,4),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x1e,%esi
		call   func_5f3fd
		cmp    $0x4,%cx
		jne    jump_4dd52
		mov    $0x80,%esi
		add    $0x20,%edi
	jump_4dd52:
		inc    %ecx
		cmp    $0x9,%cx
		jl     jump_4dcec
		mov    data_fd772,%ax
		add    $0x8c,%eax
		movswl %ax,%edx
		mov    data_fd770,%ax
		add    $0xa0,%eax
		mov    data_fd774,%ebx
		cwtl
		call   func_5f3fd
		jmp    jump_4d010


/*----------------------------------------------------------------*/
func_4dd83:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x9,%eax
		movswl %dx,%edx
		call   func_1033b
		mov    data_fd8c2(,%edx,2),%ax
		add    %eax,%eax
		inc    %eax
		movswl %ax,%esi
		lea    0x1(%esi),%eax
		mov    %eax,%ecx
		shl    $0x2,%ecx
		sub    %eax,%ecx
		mov    data_fd600(,%ecx,4),%ebx
		mov    %edx,%ecx
		shl    $0x2,%ecx
		mov    data_fd88c(%ecx),%edx
		mov    data_fd88a(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_fd88c(%ecx),%edx
		mov    data_fd600(,%eax,4),%ebx
		mov    data_fd88a(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_5e9e8
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4de0a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    data_fd728,%ax
		add    $0x67,%eax
		mov    %ax,data_fd8b0
		mov    data_fd72a,%ax
		add    $0xb2,%eax
		mov    %ax,data_fd8b2
		mov    data_fd740,%ax
		add    $0xd9,%eax
		mov    %ax,data_fd8b4
		mov    data_fd742,%ax
		add    $0xb2,%eax
		mov    %ax,data_fd8b6
		mov    $0xb,%ebp
		mov    $0xb2,%edi
	jump_4de61:
		mov    data_fd75a,%ax
		add    %edi,%eax
		movswl %ax,%edx
		mov    data_fd758,%ax
		add    $0xa0,%eax
		mov    data_fd75c,%ebx
		cwtl
		call   func_5f3fd
		mov    data_fd72c,%ebx
		mov    data_fd8b0,%edx
		mov    data_fd8ae,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		mov    data_fd744,%ebx
		mov    data_fd8b4,%edx
		mov    data_fd8b2,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_1a11c
		xor    %ah,%ah
		mov    %ax,0x8(%esp)
		imul   $0x3,%eax,%esi
		mov    $0x73,%ecx
		add    %ecx,%esi
		jmp    jump_4deef
	jump_4ded3:
		mov    data_fd766,%ax
		add    %edi,%eax
		mov    data_fd768,%ebx
		movswl %ax,%edx
		movswl %cx,%eax
		call   func_5f3fd
		add    $0x6,%ecx
	jump_4deef:
		cmp    %si,%cx
		jl     jump_4ded3
		call   func_5d41e
		call   func_5e9e8
	jump_4defe:
		mov    %esp,%esi
		call   func_5d22e
		call   func_61e7e
		test   %eax,%eax
		je     jump_4df28
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_4df28
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_4df28:
		cmpw   $0x0,(%esp)
		je     jump_4defe
		call   func_5d570
		cmpw   $0x4b00,(%esp)
		jne    jump_4df5e
		mov    0x8(%esp),%esi
		cmp    $0x2,%si
		jle    jump_4df5e
		sub    $0x2,%esi
		xor    %eax,%eax
		mov    %si,0x8(%esp)
	jump_4df50:
		mov    0x8(%esp),%al
		call   func_1a116
		jmp    jump_4e0ae
	jump_4df5e:
		cmpw   $0x4d00,(%esp)
		jne    jump_4df7e
		mov    0x8(%esp),%edx
		cmp    $0x1e,%dx
		jge    jump_4df7e
		mov    %edx,%ecx
		add    $0x2,%ecx
		xor    %eax,%eax
		mov    %cx,0x8(%esp)
		jmp    jump_4df50
	jump_4df7e:
		cmpw   $0x2,(%esp)
		jne    jump_4e0ae
		mov    $0x9,%eax
		call   func_1033b
	jump_4df93:
#if 1
    /* For turn inverval control */
    call   w_game_update
#endif
		call   func_10364
		cmp    $0x1,%ax
		jne    jump_4e090
		mov    0x2(%esp),%edx
		mov    (%esp),%eax
		mov    $data_fd88c,%ecx
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4db7e
		mov    %eax,%ecx
		cmp    $0x9,%ax
		je     jump_4dfc9
		cmp    $0xa,%ax
		jne    jump_4dff7
	jump_4dfc9:
		movswl %cx,%eax
		lea    0x8(%eax,%eax,1),%edx
		imul   $0xc,%edx,%ebx
		mov    data_fd600(%ebx),%ebx
		mov    data_fd88c(,%eax,4),%edx
		mov    data_fd88a(,%eax,4),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
		call   func_5e9e8
	jump_4dff7:
		cmp    $0x9,%cx
		jne    jump_4e015
		mov    0x8(%esp),%eax
		cmp    $0x2,%ax
		jle    jump_4e015
		mov    %eax,%ecx
		sub    $0x2,%ecx
		xor    %eax,%eax
		mov    %cx,0x8(%esp)
		jmp    jump_4e031
	jump_4e015:
		cmp    $0xa,%cx
		jne    jump_4e03a
		mov    0x8(%esp),%edx
		cmp    $0x1e,%dx
		jge    jump_4e03a
		mov    %edx,%ebx
		add    $0x2,%ebx
		xor    %eax,%eax
		mov    %bx,0x8(%esp)
	jump_4e031:
		mov    0x8(%esp),%al
		call   func_1a116
	jump_4e03a:
		mov    data_fd75a,%ax
		add    %edi,%eax
		movswl %ax,%edx
		mov    data_fd758,%ax
		add    $0xa0,%eax
		mov    data_fd75c,%ebx
		cwtl
		call   func_5f3fd
		imul   $0x3,0x8(%esp),%esi
		mov    $0x73,%ecx
		add    %ecx,%esi
		jmp    jump_4e086
	jump_4e06a:
		mov    data_fd766,%ax
		add    %edi,%eax
		mov    data_fd768,%ebx
		movswl %ax,%edx
		movswl %cx,%eax
		call   func_5f3fd
		add    $0x6,%ecx
	jump_4e086:
		cmp    %si,%cx
		jl     jump_4e06a
		call   func_5e9e8
	jump_4e090:
		mov    %esp,%esi
		call   func_5d22e
		mov    (%esp),%edx
		cmp    $0x6,%dx
		je     jump_4df93
		cmp    $0x8,%dx
		jne    jump_4df93
	jump_4e0ae:
		mov    (%esp),%ecx
		cmp    $0x1b,%cx
		je     jump_4e0c1
		cmp    $0x3,%cx
		jne    jump_4de61
	jump_4e0c1:
		add    $0xc,%esp
		jmp    jump_4d00f

/* option handlers */
vtable_4e0ca:
		.long   func_4e2fa /* mission */
		.long   func_4e304
		.long   func_4e326
		.long   func_4e34d /* music */
		.long   func_4e37a /* sound */
		.long   func_4e3a1
		.long   func_4e3a8 /* scroll */
		.long   func_4e3d3 /* to the begin of battle */
		.long   func_4e3f0


/*----------------------------------------------------------------*/
func_4e0ee:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		call   func_103a8
		mov    $0x1,%eax
		call   func_44d6e
		xor    %eax,%eax
		mov    $0x1,%edi
		call   func_44dec
		xor    %eax,%eax
		mov    $0xffffffff,%ecx
		call   func_49c05
	jump_4e11f:
		cmp    $0x1,%di
		jne    jump_4e197
		call   func_4dbde
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_4dc75
		test   %cx,%cx
		jl     jump_4e16b
		movswl %cx,%esi
		mov    data_7545c(,%esi,4),%eax
		mov    $0xa0,%edx
		call   w_dos_strlen
		mov    data_7545c(,%esi,4),%ebx
		shl    $0x2,%eax
		push   %ebx
		jmp    jump_4e184
	jump_4e16b:
		mov    data_75480,%eax
		call   w_dos_strlen
		mov    data_75480,%edx
		shl    $0x2,%eax
		push   %edx
		mov    $0xa0,%edx
	jump_4e184:
		sub    %eax,%edx
		push   $0x85
		movswl %dx,%eax
		push   %eax
		call   func_5e048
		add    $0xc,%esp
	jump_4e197:
		call   func_5d41e
		call   func_5e9e8
	jump_4e1a1:
		lea    0x4(%esp),%esi
		call   func_5d22e
		call   func_61e7e
		test   %eax,%eax
		je     jump_4e1cf
		call   w_dos_getch
		mov    %ax,0x4(%esp)
		test   %ax,%ax
		jne    jump_4e1cf
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,0x4(%esp)
	jump_4e1cf:
		cmpw   $0x0,0x4(%esp)
		je     jump_4e1a1
		call   func_5d570
		mov    0x4(%esp),%ebx
		xor    %edi,%edi
		cmp    $0x1,%bx
		jne    jump_4e299
		mov    0x6(%esp),%edx
		mov    0x4(%esp),%eax
		mov    $data_fd88c,%ecx
		mov    $0x9,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4db7e
		mov    %eax,%esi
		mov    %eax,%ecx
		mov    data_fd772,%ax
		add    $0x8c,%eax
		movswl %ax,%edx
		mov    data_fd770,%ax
		add    $0xa0,%eax
		mov    %ax,0xc(%esp)
		mov    0xa(%esp),%eax
		mov    data_fd774,%ebx
		sar    $0x10,%eax
		call   func_5f3fd
		test   %si,%si
		jl     jump_4e263
		movswl %si,%esi
		mov    data_7545c(,%esi,4),%eax
		mov    $0xa0,%edx
		call   w_dos_strlen
		mov    data_7545c(,%esi,4),%ebp
		shl    $0x2,%eax
		push   %ebp
		jmp    jump_4e27c
	jump_4e263:
		mov    data_75480,%eax
		mov    $0xa0,%edx
		call   w_dos_strlen
		mov    data_75480,%esi
		shl    $0x2,%eax
		push   %esi
	jump_4e27c:
		sub    %eax,%edx
		push   $0x85
		movswl %dx,%eax
		push   %eax
		call   func_5e048
		add    $0xc,%esp
		call   func_5e9e8
		jmp    jump_4e417
	jump_4e299:
		cmp    $0x2,%bx
		jne    jump_4e412
		mov    0x6(%esp),%edx
		mov    0x4(%esp),%eax
		mov    $data_fd88c,%ecx
		mov    $0x9,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_4db7e
		mov    %eax,%ecx
		test   %ax,%ax
		jl     jump_4e417
		cmp    $0x3,%ax
		je     jump_4e2e3
		cmp    $0x4,%ax
		je     jump_4e2e3
		cmp    $0x6,%ax
		je     jump_4e2e3
		cwtl
		call   func_4dd83
	jump_4e2e3:
		cmp    $0x8,%cx
		ja     jump_4e3ff
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *vtable_4e0ca(,%eax,4)


/*----------------------------------------------------------------*/
func_4e2fa:
/*----------------------------------------------------------------*/
		call   func_49411
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e304:
/*----------------------------------------------------------------*/
		cmpw   $0x0,(%esp)
		jne    jump_4e3ff
		push   $data_77f0c
		call   func_48083
		add    $0x4,%esp
		call   func_4f4ef
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e326:
/*----------------------------------------------------------------*/
		cmpw   $0x0,(%esp)
		jne    jump_4e3ff
		push   $data_77f16
		call   func_48083
		add    $0x4,%esp
		call   func_4fd25
		call   func_4a321
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e34d:
/*----------------------------------------------------------------*/
#if 1
    call   w_conf_get_music
    push   %ebx
    mov    %eax,%ebx
    xor    %eax,%eax
    test   %ebx,%ebx
#else
		cmpw   $0x0,game_cfg_music
#endif
		sete   %al
#if 1
    pop    %ebx
#endif
		xor    %ch,%ah
#if 0
		mov    %ax,game_cfg_music
#endif
		cmp    $0x1,%ax
		jne    jump_4e370 /* jump music is off */
#if 1
    call   w_audio_music_unmute
    pushl  $1
    call   w_conf_set_music
    add    $4,%esp
    call   w_conf_save
#else
		call   func_4f369
#endif
		jmp    jump_4e3ff
	jump_4e370:
#if 1
    call   w_audio_music_mute
    pushl  $0
    call   w_conf_set_music
    add    $4,%esp
    call   w_conf_save
#else
		call   func_4f3ae
#endif
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e37a:
/*----------------------------------------------------------------*/
#if 1
    call   w_conf_get_sound
    push   %ebx
    mov    %eax,%ebx
    xor    %eax,%eax
    test   %ebx,%ebx
#else
		cmpw   $0x0,game_cfg_sound
#endif
		sete   %al
#if 1
    pop    %ebx
#endif
		xor    %ch,%ah
#if 0
		mov    %ax,game_cfg_sound
#endif
		cmp    $0x1,%ax
		jne    jump_4e39a /* jump sound is off */
#if 1
    call   w_audio_sound_unmute
    pushl  $1
    call   w_conf_set_sound
    add    $4,%esp
    call   w_conf_save
#else
		call   func_4f427
#endif
		jmp    jump_4e3ff
	jump_4e39a:
#if 1
    call   w_audio_sound_mute
    pushl  $0
    call   w_conf_set_sound
    add    $4,%esp
    call   w_conf_save
#else
		call   func_4f450
#endif
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e3a1:
/*----------------------------------------------------------------*/
		call   func_4de0a
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e3a8:
/*----------------------------------------------------------------*/
		cmpw   $0x0,game_cfg_speed
		sete   %al
		xor    %ch,%ah
		mov    %ax,game_cfg_speed
		test   %ax,%ax
		je     jump_4e3cc
		mov    $0x8,%eax
	jump_4e3c5:
		call   func_10d9a
		jmp    jump_4e3ff
	jump_4e3cc:
		mov    $0x4,%eax
		jmp    jump_4e3c5


/*----------------------------------------------------------------*/
func_4e3d3:
/*----------------------------------------------------------------*/
		call   func_55ebc
		mov    $data_fdf68,%eax
		xor    %edx,%edx
		call   func_4fd6b
		mov    $0x1,%eax
		call   w_dos_exit
		jmp    jump_4e3ff


/*----------------------------------------------------------------*/
func_4e3f0:
/*----------------------------------------------------------------*/
		mov    $data_77f20,%eax
		call   func_4fdd1
		call   func_4fe28
	jump_4e3ff:
		cmp    $0x2,%cx
		je     jump_4e42b
		cmp    $0x8,%cx
		je     jump_4e42b
		mov    $0x1,%edi
		jmp    jump_4e417
	jump_4e412:
		mov    $0xffffffff,%ecx
	jump_4e417:
		mov    0x4(%esp),%eax
		cmp    $0x1b,%ax
		je     jump_4e42b
		cmp    $0x3,%ax
		jne    jump_4e11f
	jump_4e42b:
		mov    $0x1,%eax
		call   func_44dec
		xor    %eax,%eax
		call   func_44d6e
		call   func_103a0
		mov    %ecx,%eax
		jmp    jump_4d00c


/*----------------------------------------------------------------*/
func_4e448:
/*----------------------------------------------------------------*/
		call   func_4b0a7
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x37,%ecx
		mov    $data_fd5f8,%edx
		mov    $data_77eff,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_4e468:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_fd600(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x37,%dx
		jl     jump_4e468
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
data_4e484:
		.string "magicspr\\"
		.fill   0x16
data_4e4a4:
		.string "magicspr\\"
		.fill   0x16
.text


/*----------------------------------------------------------------*/
func_4e4c4:
/*----------------------------------------------------------------*/
		push   %edx
		or     $0x2,%ah
		movswl %ax,%edx
		mov    $data_77f5e,%eax
		call   func_4976f
		mov    %ax,data_fdf7c
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_4e4dd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x1,%edx
		mov    data_fdf7a,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf82,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf84,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    data_fdf84,%ah
		add    %ah,%ah
		mov    $0x1,%ebx
		mov    %ah,data_fdf84
		mov    data_fdf7a,%eax
		mov    $0x190,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0xc8,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf87,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x49d4,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x1f4,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fe04f,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf85,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x4158,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    data_fdf7a,%eax
		sar    $0x10,%eax
		call   func_filelength_
		mov    %eax,%ebx
		mov    data_fdf7a,%eax
		sar    $0x10,%eax
		call   w_dos_tell
		sub    %eax,%ebx
		mov    %ebx,%eax
		call   w_dos_malloc
		mov    data_fdf7a,%ecx
		mov    %eax,data_fdf78
		sar    $0x10,%ecx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_fdf78,%eax
		xor    %edx,%edx
	jump_4e5fd:
		movswl %dx,%ebx
		mov    (%eax),%ecx
		add    $0x4,%eax
		mov    %ecx,data_fe36f(,%ebx,4)
		mov    (%eax),%bx
		movswl %bx,%ebx
		add    $0x2,%ebx
		inc    %edx
		add    %ebx,%eax
		cmp    $0x64,%dx
		jl     jump_4e5fd
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4e622:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    $0x1,%edx
		mov    data_fdf7a,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x384,%ebx
		xor    %edx,%edx
		call   func_19d47
		div    %ebx
		test   %edx,%edx
		je     jump_4e66c
		xor    %edx,%edx
		mov    data_fdf84,%dl
		inc    %edx
		mov    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,data_fdf84
	jump_4e66c:
		mov    data_fdf84,%ah
		test   $0x1,%ah
		jne    jump_4e683
		mov    %ah,%dl
		shr    %dl
		mov    %dl,data_fdf84
		jmp    jump_4e692
	jump_4e683:
		xor    %eax,%eax
		mov    data_fdf84,%al
		sar    %eax
		inc    %eax
		mov    %al,data_fdf84
	jump_4e692:
		cmpb   $0x7,data_fdf84
		jbe    jump_4e6b2
		mov    data_fdf82,%dx
		xor    %bl,%bl
		inc    %edx
		mov    %bl,data_fdf84
		mov    %dx,data_fdf82
	jump_4e6b2:
		mov    $0x2,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf82,%edx
		sar    $0x10,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf84,%edx
		sar    $0x10,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x190,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0xc8,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fdf87,%edx
		sar    $0x10,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x49d4,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x1f4,%ebx
		mov    data_fdf7a,%eax
		mov    $data_fe04f,%edx
		sar    $0x10,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x2,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x4158,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   w_dos_lseek
		mov    data_fdf78,%ecx
	jump_4e772:
		movswl %di,%eax
		mov    %eax,%ebp
		mov    data_fe36f(,%eax,4),%eax
		mov    %eax,(%ecx)
		mov    $0x4,%ebx
		mov    data_fdf7a,%eax
		mov    %ecx,%edx
		sar    $0x10,%eax
		call   w_dos_write
		imul   $0x1e,%ebp,%eax
		add    $0x4,%ecx
		mov    (%ecx),%si
		mov    data_fe4ff(%eax),%al
		mov    %esi,%edx
		xor    %ah,%ah
		mov    $0x2,%ebx
		add    %eax,%edx
		mov    data_fdf7a,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		sar    $0x10,%eax
		add    $0x2,%ecx
		call   w_dos_write
		test   %si,%si
		jle    jump_4e7df
		mov    data_fdf7a,%eax
		movswl %si,%ebp
		mov    %ecx,%edx
		sar    $0x10,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		add    %ebp,%ecx
	jump_4e7df:
		cmp    (%esp),%si
		je     jump_4e80c
		mov    -0x2(%esp),%ebx
		movswl %si,%eax
		sar    $0x10,%ebx
		sub    %eax,%ebx
		movswl %di,%eax
		imul   $0x1e,%eax,%eax
		mov    $data_fe4ff,%edx
		add    %eax,%edx
		mov    data_fdf7a,%eax
		inc    %edx
		sar    $0x10,%eax
		call   w_dos_write
	jump_4e80c:
		inc    %edi
		cmp    $0x64,%di
		jl     jump_4e772
	jump_4e817:
		add    $0x4,%esp
		jmp    jump_4f258


/*----------------------------------------------------------------*/
func_4e81f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		mov    %eax,%ebp
		mov    $0x4e26,%edx
		mov    data_fdf7a,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    0xf(%ebp),%al
		dec    %al
		mov    %al,0x30(%esp)
		mov    0x0(%ebp),%al
		mov    %al,0x18(%esp)
		mov    0x1(%ebp),%al
		mov    %al,0x3c(%esp)
		mov    0x63(%ebp),%al
		mov    %al,0x14(%esp)
		mov    0x5c(%ebp),%al
		mov    %al,0x2c(%esp)
		mov    0x77(%ebp),%eax
		mov    %eax,0x4(%esp)
		mov    0x6c(%ebp),%al
		mov    %al,0x38(%esp)
		mov    0x6d(%ebp),%al
		mov    %al,0xc(%esp)
		mov    0x6e(%ebp),%al
		mov    %al,0x8(%esp)
		mov    0x6f(%ebp),%al
		mov    %al,0x34(%esp)
		mov    0x70(%ebp),%al
		mov    %al,0x1c(%esp)
		mov    0x73(%ebp),%eax
		mov    %eax,(%esp)
		mov    0x71(%ebp),%al
		mov    %al,0x10(%esp)
		mov    0x72(%ebp),%al
		mov    %al,0x24(%esp)
		mov    0x80(%ebp),%al
		mov    %al,0x20(%esp)
		mov    0x82(%ebp),%al
		xor    %ecx,%ecx
		mov    %al,0x28(%esp)
		jmp    jump_4e8d1
	jump_4e8b9:
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x88,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   w_dos_lseek
	jump_4e8d1:
		movsbw 0x30(%esp),%ax
		cmp    %ax,%cx
		jl     jump_4e8b9
		mov    $0x88,%ebx
		mov    data_fdf7a,%eax
		mov    %ebp,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    0x87(%ebp),%ah
		test   %ah,%ah
		je     jump_4e8ff
		cmp    $0x63,%ah
		jne    jump_4e90a
	jump_4e8ff:
		mov    data_fdf85,%al
		mov    %al,0x87(%ebp)
	jump_4e90a:
		xor    %eax,%eax
		mov    0x87(%ebp),%al
		mov    data_fdaf6(,%eax,2),%al
		dec    %al
		mov    %al,0xe(%ebp)
		jne    jump_4e982
		mov    data_cc990,%eax
	jump_4e925:
		test   %eax,%eax
		je     jump_4e942
		cmpb   $0x1,0xe(%eax)
		jne    jump_4e93d
		mov    0xf(%eax),%cl
		cmp    0xf(%ebp),%cl
		jne    jump_4e93d
		movb   $0x0,0x56(%eax)
		jmp    jump_4e942
	jump_4e93d:
		mov    0x7b(%eax),%eax
		jmp    jump_4e925
	jump_4e942:
		test   %eax,%eax
		jne    jump_4e982
		cmpb   $0x0,0xe(%ebp)
		jne    jump_4e982
		call   func_112fd
		mov    $0x88,%ecx
		mov    %ebp,%esi
		mov    %eax,%edi
		mov    %eax,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0xe(%edx),%ch
		movb   $0x0,0x56(%edx)
		inc    %ch
		mov    $data_cc990,%eax
		mov    %ch,0xe(%edx)
		call   func_1134f
	jump_4e982:
		mov    0x18(%esp),%al
		mov    %al,0x0(%ebp)
		mov    0x3c(%esp),%al
		mov    %al,0x1(%ebp)
		mov    0x14(%esp),%al
		mov    %al,0x63(%ebp)
		cmpb   $0x0,0x2c(%esp)
		je     jump_4e9cf
		mov    $0x88,%ecx
		mov    0x4(%esp),%edi
		mov    %ebp,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x2c(%esp),%dl
		mov    %ebp,%eax
		mov    %edi,0x77(%ebp)
		call   func_17e6d
		mov    0x4c(%ebp),%eax
		mov    %eax,0x48(%ebp)
	jump_4e9cf:
		mov    0x38(%esp),%al
		mov    %al,0x6c(%ebp)
		mov    0xc(%esp),%al
		mov    %al,0x6d(%ebp)
		mov    0x8(%esp),%al
		mov    %al,0x6e(%ebp)
		mov    0x34(%esp),%al
		mov    %al,0x6f(%ebp)
		mov    0x1c(%esp),%al
		mov    %al,0x70(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x73(%ebp)
		mov    0x10(%esp),%al
		mov    %al,0x71(%ebp)
		mov    0x24(%esp),%al
		mov    %al,0x72(%ebp)
		mov    0x20(%esp),%al
		mov    %al,0x80(%ebp)
		mov    0x28(%esp),%al
		mov    %al,0x82(%ebp)
		add    $0x40,%esp
		jmp    jump_4f258


/*----------------------------------------------------------------*/
func_4ea22:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    $0x1,%edi
		mov    $0xffffff78,%ebp
	jump_4ea35:
		movswl %di,%eax
		cmpw   $0x1,data_fdaf6(,%eax,2)
		jne    jump_4eae3
		mov    $0x4e26,%edx
		mov    data_fdf7a,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   w_dos_lseek
	jump_4ea5d:
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x87,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    %esp,%edx
		sar    $0x10,%eax
		call   w_dos_read
		movsbw (%esp),%ax
		cmp    %di,%ax
		jne    jump_4ead8
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    %ebp,%edx
		sar    $0x10,%eax
		call   w_dos_lseek
		call   func_112fd
		mov    $0x88,%ebx
		mov    %eax,%ecx
		mov    data_fdf7a,%eax
		mov    %ecx,%edx
		sar    $0x10,%eax
		call   w_dos_read
		movb   $0xff,(%ecx)
		mov    $data_cc990,%eax
		movb   $0xff,0x56(%ecx)
		mov    %ecx,%edx
		movb   $0x1,0xe(%ecx)
		call   func_1134f
	jump_4ead8:
		inc    %esi
		cmp    $0x7b,%si
		jl     jump_4ea5d
	jump_4eae3:
		inc    %edi
		cmp    $0x64,%di
		jle    jump_4ea35
		jmp    jump_4e817


/*----------------------------------------------------------------*/
func_4eaf3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    $0x4e26,%edx
		mov    data_fdf7a,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		call   w_dos_lseek
		mov    0xf(%ecx),%al
		dec    %al
		xor    %esi,%esi
		mov    %al,(%esp)
		jmp    jump_4eb35
	jump_4eb1d:
		mov    $0x1,%ebx
		mov    data_fdf7a,%eax
		mov    $0x88,%edx
		sar    $0x10,%eax
		inc    %esi
		call   w_dos_lseek
	jump_4eb35:
		movsbw (%esp),%ax
		cmp    %ax,%si
		jl     jump_4eb1d
		mov    0x48(%ecx),%eax
		mov    0x4c(%ecx),%edx
		cmp    %edx,%eax
		je     jump_4eb99
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x48(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x48(%ecx)
		xor    %ebx,%ebx
		mov    data_fdf85,%ax
		mov    0x87(%ecx),%bl
		cmp    %eax,%ebx
		jne    jump_4eb93
		mov    0x4c(%ecx),%eax
		mov    %eax,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x48(%ecx),%esi
		cmp    %esi,%eax
		jg     jump_4eb96
		mov    0x4c(%ecx),%edi
		cmp    %edi,%esi
		jle    jump_4eb99
		mov    %edi,0x48(%ecx)
		jmp    jump_4eb99
	jump_4eb93:
		mov    0x4c(%ecx),%eax
	jump_4eb96:
		mov    %eax,0x48(%ecx)
	jump_4eb99:
		mov    0x52(%ecx),%ax
		mov    %ax,0x50(%ecx)
		mov    0x14(%ecx),%ah
		movb   $0x0,0x13(%ecx)
		test   $0x1,%ah
		je     jump_4ebb9
		mov    %ah,%dl
		and    $0xfe,%dl
		mov    %dl,0x14(%ecx)
		decw   0x61(%ecx)
	jump_4ebb9:
		testb  $0x2,0x14(%ecx)
		je     jump_4ebc6
		movb   $0x0,0x83(%ecx)
	jump_4ebc6:
		movb   $0x0,0x14(%ecx)
		movb   $0x0,0x1e(%ecx)
		mov    0x1e(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x15(%ecx)
	jump_4ebd6:
		movswl %dx,%eax
		movw   $0xffff,0x1f(%ecx,%eax,2)
		mov    0x1f(%ecx,%eax,2),%si
		inc    %edx
		mov    %si,0x16(%ecx,%eax,2)
		cmp    $0x4,%dx
		jl     jump_4ebd6
		movswl %dx,%eax
		movw   $0xffff,0x1f(%ecx,%eax,2)
		movb   $0x0,0x56(%ecx)
		movw   $0x0,0x57(%ecx)
		movb   $0x0,0x83(%ecx)
		movb   $0xff,0x80(%ecx)
		mov    0x12(%ecx),%bl
		movb   $0xff,0x82(%ecx)
		test   %bl,%bl
		jne    jump_4ec49
		movl   $0x0,0x67(%ecx)
		mov    %ecx,%eax
		mov    %bl,0x84(%ecx)
		call   func_12124
		mov    %ecx,%edx
		mov    data_fdf7a,%eax
		mov    $0x88,%ebx
		sar    $0x10,%eax
		call   w_dos_write
	jump_4ec49:
		add    $0x4,%esp
		jmp    jump_4f259


/*----------------------------------------------------------------*/
func_4ec51:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
	jump_4ec58:
		movswl %bx,%edx
		mov    data_cc968(,%edx,8),%edx
	jump_4ec62:
		test   %edx,%edx
		je     jump_4ec79
		cmp    0x12(%edx),%cl
		je     jump_4ec70
	jump_4ec6b:
		mov    0x7b(%edx),%edx
		jmp    jump_4ec62
	jump_4ec70:
		mov    %edx,%eax
		call   func_113e4
		jmp    jump_4ec6b
	jump_4ec79:
		inc    %ebx
		cmp    $0x4,%bx
		jl     jump_4ec58
		mov    data_cc990,%edx
	jump_4ec86:
		test   %edx,%edx
		je     jump_4f25b
		mov    %edx,%eax
		call   func_4eaf3
		mov    0x7b(%edx),%edx
		jmp    jump_4ec86


/*----------------------------------------------------------------*/
func_4ec9a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x4,%esp
		mov    %al,(%esp)
		mov    $0x201,%edx
		mov    $data_77f5e,%eax
		mov    $0x1,%ebx
		call   func_4976f
		mov    %esp,%edx
		mov    %ax,data_fdf7c
		cwtl
		call   w_dos_write
		mov    data_fdf7a,%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x4,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4ecd7:
/*----------------------------------------------------------------*/
		mov    data_fdf7a,%eax
		sar    $0x10,%eax
		jmp    w_dos_close


/*----------------------------------------------------------------*/
func_4ece4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    data_fdf85,%ax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		incb   data_fe4ff(,%eax,2)
		mov    %bl,%dl
		xor    %ebx,%ebx
		mov    data_fe4ff(,%eax,2),%bl
		dec    %dl
		mov    %dl,data_fe4ff(%ebx,%eax,2)
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4ed18:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    %eax,%ebp
		mov    $data_fdf68,%edi
		mov    %eax,%esi
		mov    $0x200,%ebx
		push   %edi
	jump_4ed30:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4ed48
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4ed30
	jump_4ed48:
		pop    %edi
		mov    %ebp,%edx
		mov    $data_77f6b,%eax
		call   func_4979b
		mov    $0x2,%ebx
		movswl %ax,%ecx
		mov    $data_fdf80,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_fdf7e,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_fdf80,%ax
		mov    $0x1,%ebx
		mov    %ax,data_ba83c
		mov    data_fdf7e,%ax
		mov    $data_ba84d,%edx
		mov    %ax,data_ba83e
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x28(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ba84e,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_1120a0,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xd,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		mov    %esp,%eax
		xor    %edx,%edx
		call   func_105ad
		mov    %dx,0x1c(%esp)
	jump_4edf8:
		mov    0x1a(%esp),%esi
		sar    $0x10,%esi
		lea    (%esi,%esi,2),%esi
		lea    data_fdc68(%esi),%edi
		lea    data_12824c(%esi),%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x1c(%esp),%ebx
		inc    %ebx
		mov    %bx,0x1c(%esp)
		cmp    $0x100,%bx
		jl     jump_4edf8
		mov    data_ba84a,%eax
		mov    $0x200,%ebx
		sar    $0x18,%eax
		mov    %ebp,%edx
		call   func_44f30
		call   func_44c05
		mov    $data_77f6b,%eax
		call   func_4979b
		mov    $0x15,%edx
		mov    %ax,0x24(%esp)
		movswl %ax,%ecx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		mov    $data_f0ba0,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_f0ba2,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xc8,%ebx
		mov    $data_fdaf8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xa8,%ebx
		mov    $data_fdbc0,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ff0b7,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ff0b8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0xb,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x1c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x20(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x1c(%esp),%eax
		mov    0x20(%esp),%edx
		add    %eax,%eax
		imul   %eax,%edx
		mov    %dx,0x20(%esp)
		mov    %ecx,%eax
		mov    0x1e(%esp),%ebx
		mov    $data_e8f48,%edx
		sar    $0x10,%ebx
		xor    %edi,%edi
		call   w_dos_read
		mov    0x20(%esp),%esi
		mov    $0x1,%ebx
		sar    %si
		mov    %di,data_11209e
		mov    %si,0x20(%esp)
		mov    %di,0x1c(%esp)
		mov    0x20(%esp),%edx
		jmp    jump_4ef69
	jump_4ef3c:
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    data_e8f48(%eax),%si
		dec    %si
		mov    %si,data_e8f48(%eax)
		je     jump_4ef5d
		cmp    $0x1,%si
		jne    jump_4ef64
	jump_4ef5d:
		mov    %bx,data_11209e
	jump_4ef64:
		incw   0x1c(%esp)
	jump_4ef69:
		cmp    0x1c(%esp),%dx
		jg     jump_4ef3c
		xor    %eax,%eax
		mov    $0x88,%ebx
		call   func_4e4c4
		call   func_4e4dd
		mov    0x28(%esp),%ah
		mov    %bx,0x14(%esp)
		test   %ah,%ah
		jl     jump_4ef94
		mov    %ah,data_fdf84
	jump_4ef94:
		call   func_4ea22
		xor    %ecx,%ecx
		call   func_44c75
		mov    %cx,0x1c(%esp)
		jmp    jump_4f140
	jump_4efaa:
		mov    0x22(%esp),%eax
		mov    $0x2,%ebx
		lea    0x18(%esp),%edx
		sar    $0x10,%eax
		call   w_dos_read
		xor    %eax,%eax
		mov    %ax,0x20(%esp)
		jmp    jump_4f127
	jump_4efcb:
		call   func_112fd
		mov    0x12(%esp),%edi
		mov    0x22(%esp),%esi
		mov    %eax,%ecx
		mov    %eax,%ebp
		mov    %eax,%edx
		sar    $0x10,%edi
		sar    $0x10,%esi
		mov    %edi,%ebx
		mov    %esi,%eax
		call   w_dos_read
		cmpl   $0x0,0x77(%ecx)
		je     jump_4f00e
		call   func_112fd
		mov    %eax,0x10(%esp)
		mov    %edi,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   w_dos_read
		mov    0x10(%esp),%eax
		mov    %eax,0x77(%ecx)
	jump_4f00e:
		cmpw   $0x0,0x1c(%esp)
		jne    jump_4f02f
		mov    %ebp,%eax
		call   func_4e81f
		cmpb   $0x0,0xe(%ebp)
		jge    jump_4f02f
		mov    %ebp,%eax
		call   func_1134a
		jmp    jump_4f122
	jump_4f02f:
		mov    0xe(%ebp),%dh
		mov    0x5f(%ebp),%eax
		inc    %dh
		sar    $0x10,%eax
		mov    %dh,0xe(%ebp)
		call   func_1198d
		mov    0x77(%ebp),%ebx
		mov    %al,0x60(%ebp)
		test   %ebx,%ebx
		je     jump_4f069
		mov    0xe(%ebp),%al
		mov    %al,0xe(%ebx)
		mov    %ebp,%eax
		call   func_11b77
		mov    0x77(%ebp),%ebx
		mov    %al,0x60(%ebx)
		movb   $0x0,0x5f(%ebp)
		mov    0x5f(%ebp),%al
		mov    %al,0x5e(%ebp)
	jump_4f069:
		mov    %ebp,%eax
		call   func_12124
		movb   $0x0,0x56(%ebp)
		movb   $0x0,0x81(%ebp)
		movb   $0x0,0x84(%ebp)
		mov    0x81(%ebp),%al
		mov    %al,0x7f(%ebp)
		cmpw   $0x0,0x1c(%esp)
		jne    jump_4f0d3
		cmpb   $0x1,0xe(%ebp)
		je     jump_4f0d3
		call   func_112fd
		mov    %eax,%edi
		mov    0x77(%ebp),%ecx
		mov    %eax,%edx
		test   %ecx,%ecx
		jne    jump_4f0b2
		mov    $0x88,%ecx
		mov    %ebp,%esi
		jmp    jump_4f0b9
	jump_4f0b2:
		mov    %ecx,%esi
		mov    $0x88,%ecx
	jump_4f0b9:
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $data_cc990,%eax
		call   func_1134f
	jump_4f0d3:
		mov    0xb(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebp,%edx
		add    $data_cc968,%eax
		call   func_1134f
		mov    0x5c(%ebp),%bh
		cmp    $0x5,%bh
		je     jump_4f0ff
		cmp    $0x6,%bh
		je     jump_4f0ff
		cmp    $0x20,%bh
		je     jump_4f0ff
		jne    jump_4f103
	jump_4f0ff:
		orb    $0x1,0x14(%ebp)
	jump_4f103:
		mov    %ebp,%eax
		call   func_174cf
		xor    %ah,%ah
		cmp    $0x5,%ax
		jne    jump_4f122
		cmpb   $0x0,0x82(%ebp)
		jne    jump_4f122
		movb   $0xff,0x82(%ebp)
	jump_4f122:
		incw   0x20(%esp)
	jump_4f127:
		mov    0x20(%esp),%eax
		cmp    0x18(%esp),%ax
		jl     jump_4efcb
		call   func_44c75
		incw   0x1c(%esp)
	jump_4f140:
		cmpw   $0x4,0x1c(%esp)
		jl     jump_4efaa
		call   func_4ecd7
		xor    %edi,%edi
		call   func_11fc4
		mov    %di,0x1c(%esp)
		xor    %esi,%esi
		mov    %esi,%ecx
		jmp    jump_4f1b7
	jump_4f163:
		mov    0x1a(%esp),%ebx
		sar    $0x10,%ebx
		mov    data_cc968(,%ebx,8),%ebx
	jump_4f171:
		test   %ebx,%ebx
		je     jump_4f1b2
		cmp    0x73(%ebx),%ecx
		je     jump_4f190
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x70(%ebx),%dl
		mov    0x6f(%ebx),%al
		call   func_11db2
		movb   $0xff,0x6f(%ebx)
		mov    %eax,0x73(%ebx)
	jump_4f190:
		mov    0x1c(%esp),%eax
		cmp    %ax,%cx
		jne    jump_4f1ad
		movb   $0xff,0x80(%ebx)
		movb   $0xff,0x82(%ebx)
		mov    %al,0x83(%ebx)
	jump_4f1ad:
		mov    0x7b(%ebx),%ebx
		jmp    jump_4f171
	jump_4f1b2:
		incw   0x1c(%esp)
	jump_4f1b7:
		cmpw   $0x4,0x1c(%esp)
		jl     jump_4f163
		call   func_18539
		mov    0x22(%esp),%eax
		mov    $0x2,%ebx
		lea    0x1c(%esp),%edx
		sar    $0x10,%eax
		call   w_dos_read
		xor    %edx,%edx
		mov    %dx,0x20(%esp)
		jmp    jump_4f22b
	jump_4f1e2:
		mov    0x1e(%esp),%edx
		sar    $0x10,%edx
		imul   $0xc,%edx,%edx
		mov    0x22(%esp),%eax
		mov    $0xc,%ebx
		sar    $0x10,%eax
		add    $data_f0380,%edx
		call   w_dos_read
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    data_f0388(%eax),%edx
		sar    $0x10,%edx
		cmpb   $0x1,data_fe04f(%edx)
		jne    jump_4f226
		movb   $0xff,data_f0382(%eax)
	jump_4f226:
		incw   0x20(%esp)
	jump_4f22b:
		mov    0x20(%esp),%eax
		cmp    0x1c(%esp),%ax
		jl     jump_4f1e2
		mov    0x22(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		call   func_5306a
		mov    %edx,%eax
		call   w_dos_close
		call   func_44c75
		mov    $0x1,%eax
	jump_4f255:
		add    $0x2c,%esp
	jump_4f258:
		pop    %ebp
	jump_4f259:
		pop    %edi
		pop    %esi
	jump_4f25b:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4f25f:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,0x4(%esp)
		mov    $0x200,%edx
		call   func_4976f
		xor    %ebx,%ebx
		mov    $0x42,%edx
		movswl %ax,%ecx
		mov    %ax,0x8(%esp)
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0xc(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x3c,%edx
		mov    %ecx,%eax
		xor    %edi,%edi
		jmp    jump_4f2d0
	jump_4f2ad:
		mov    0x6(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		add    $0x8,%edx
		inc    %edi
	jump_4f2d0:
		call   w_dos_lseek
		cmp    %si,%di
		jl     jump_4f2ad
		xor    %edi,%edi
		jmp    jump_4f34f
	jump_4f2de:
		mov    0x6(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		movswl %di,%eax
		imul   $0xc,%eax,%eax
		lea    (%eax,%ebp,1),%esi
		mov    $0x2,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x2(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x4(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x6(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%eax
		call   w_dos_malloc
		mov    %eax,0x8(%esi)
		mov    %eax,%edx
		mov    (%esp),%ebx
		mov    %ecx,%eax
		inc    %edi
		call   w_dos_read
	jump_4f34f:
		cmp    0x4(%esp),%di
		jl     jump_4f2de
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4f369:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpw   $0x1,game_cfg_music
		jne    jump_4f3ab
		cmpb   $0x12,data_ff0b7
		jge    jump_4f3ab
		mov    data_ff0b4,%eax
		sar    $0x18,%eax
		mov    $0x1,%edx
		add    $0x2,%eax
		xor    %ebx,%ebx
		call   func_5aeb5
		call   func_5aa81
		call   func_5aa81
		call   func_5aa81
		mov    %bx,data_ba834
	jump_4f3ab:
		pop    %edx
		pop    %ebx
	jump_4f3ad:
		ret


/*----------------------------------------------------------------*/
func_4f3ae:
/*----------------------------------------------------------------*/
		cmpw   $0x0,game_cfg_music
		jne    jump_4f3ad
		jmp    func_5af1b


/*----------------------------------------------------------------*/
func_4f3bd:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x20,%esp
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_4e484,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		cmpb   $0x0,data_ff0b8
		jle    jump_4f41f
		xor    %eax,%eax
		call   func_5cd0d
		mov    data_ff0b5,%esi
		sar    $0x18,%esi
		mov    %esp,%edi
		mov    data_75480(,%esi,4),%esi
		xor    %edx,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_4f3ff:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4f417
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4f3ff
	jump_4f417:
		pop    %edi
		mov    %esp,%eax
		call   func_5ca62
	jump_4f41f:
		add    $0x20,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_4f427:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpb   $0x0,data_ff0b8
		jle    jump_4f44d
		cmpw   $0x1,game_cfg_sound
		jne    jump_4f44d
		mov    $0x3e7,%ebx
		mov    $0xa,%eax
		xor    %edx,%edx
		call   func_5cc20
	jump_4f44d:
		pop    %edx
		pop    %ebx
	jump_4f44f:
		ret


/*----------------------------------------------------------------*/
func_4f450:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_ff0b8
		jle    jump_4f44f
		xor    %eax,%eax
		jmp    func_5cd0d


/*----------------------------------------------------------------*/
func_4f460:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		mov    %eax,%ebx
		mov    %dx,0x20(%esp)
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_4e4a4,%esi
		mov    $0x2,%edx
		rep movsl %ds:(%esi),%es:(%edi)
	jump_4f481:
		movswl %dx,%eax
		inc    %edx
		call   func_5cd0d
		cmp    $0x8,%dx
		jl     jump_4f481
		mov    %esp,%edi
		mov    %ebx,%esi
		mov    0x1e(%esp),%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_4f4a1:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_4f4b9
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_4f4a1
	jump_4f4b9:
		pop    %edi
		sar    $0x10,%edx
		mov    %esp,%eax
		inc    %edx
		call   func_5ca62
		add    $0x24,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4f4cd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpw   $0x1,game_cfg_sound
		jne    jump_4f4ec
		mov    $0x1,%ebx
		movswl %ax,%edx
		mov    $0xa,%eax
		inc    %edx
		call   func_5cb97
	jump_4f4ec:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4f4ef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %esp,%edi
		mov    $data_77f75,%esi
		mov    $0x180,%edx
		mov    %esp,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		lea    0x4(%esp),%eax
		push   %eax
		mov    $0x10,%ebx
		mov    $data_fdf68,%edx
		call   w_dos_open
		add    $0x8,%esp
		mov    %eax,%edi
		cwtl
		call   w_dos_write
		xor    %edx,%edx
		mov    %dx,0x18(%esp)
	jump_4f53f:
		mov    0x18(%esp),%edx
		cmp    $0x4,%dx
		jne    jump_4f551
		mov    data_cc990,%ecx
		jmp    jump_4f56d
	jump_4f551:
		cmp    $0x5,%dx
		jne    jump_4f55f
		mov    data_d6620,%ecx
		jmp    jump_4f56d
	jump_4f55f:
		mov    0x16(%esp),%ecx
		sar    $0x10,%ecx
		mov    data_cc968(,%ecx,8),%ecx
	jump_4f56d:
		xor    %esi,%esi
		mov    %esi,0x14(%esp)
		movswl %di,%esi
		mov    $0x2,%ebx
		mov    %esi,%eax
		lea    0x14(%esp),%edx
		call   w_dos_tell
		mov    %eax,%ebp
		mov    %esi,%eax
		call   w_dos_write
		movswl %di,%esi
	jump_4f592:
		test   %ecx,%ecx
		je     jump_4f5c5
		mov    $0x88,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   w_dos_write
		mov    0x77(%ecx),%edx
		test   %edx,%edx
		je     jump_4f5b7
		mov    $0x88,%ebx
		mov    %esi,%eax
		call   w_dos_write
	jump_4f5b7:
		mov    0x14(%esp),%edx
		inc    %edx
		mov    0x7b(%ecx),%ecx
		mov    %edx,0x14(%esp)
		jmp    jump_4f592
	jump_4f5c5:
		movswl %di,%ecx
		mov    %ebp,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x14(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_lseek
		mov    0x18(%esp),%ebx
		inc    %ebx
		mov    %bx,0x18(%esp)
		cmp    $0x6,%bx
		jl     jump_4f53f
		call   func_19d47
		mov    $0x4,%ebx
		lea    0x10(%esp),%edx
		mov    %eax,0x10(%esp)
		mov    %ecx,%eax
		call   w_dos_write
		call   func_19fa3
		mov    $0x2,%ebx
		cwtl
		lea    0x10(%esp),%edx
		mov    %eax,0x10(%esp)
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_f0410,%edx
		mov    %ecx,%eax
		add    $0xe,%edx
		call   w_dos_write
		mov    $0x1,%ebx
		mov    data_f0410,%edx
		mov    %ecx,%eax
		add    $0xf,%edx
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_f0424,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_f0422,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_f0420,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		xor    %eax,%eax
		lea    0x14(%esp),%edx
		mov    %eax,0x14(%esp)
		mov    %ecx,%eax
		mov    data_f041c,%esi
		call   w_dos_tell
		mov    %eax,%ebp
		mov    %ecx,%eax
		call   w_dos_write
	jump_4f6ba:
		test   %esi,%esi
		je     jump_4f6de
		mov    $0x1,%ebx
		mov    (%esi),%edx
		movswl %di,%eax
		add    $0xf,%edx
		call   w_dos_write
		mov    0x14(%esp),%eax
		inc    %eax
		mov    0x4(%esi),%esi
		mov    %eax,0x14(%esp)
		jmp    jump_4f6ba
	jump_4f6de:
		movswl %di,%ecx
		mov    %ebp,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%ebx
		lea    0x14(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_lseek
		mov    $0x2,%ebx
		mov    $data_f0ba0,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_f0ba2,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_11044c,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_1102bc,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_110384,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_110514,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_110320,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_1103e8,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_110254,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x64,%ebx
		mov    $data_1104b0,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0xfa00,%ebx
		mov    $data_10084c,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x78,%ebx
		mov    $data_f0380,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_ba83c,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x2,%ebx
		mov    $data_ba83e,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1135,%ebx
		mov    $data_fdf82,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    $data_ba84d,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    $data_ff0b7,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    $data_ff0b8,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x3,%ebx
		mov    $data_fd8bc,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x1c,%esp
		jmp    jump_4f258


/*----------------------------------------------------------------*/
func_4f85c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		push   $0x200
		push   $data_77f75
		mov    $0x10,%ebx
		call   w_dos_open
		add    $0x8,%esp
		mov    $data_fdf68,%edx
		mov    %ax,0x1c(%esp)
		cwtl
		call   w_dos_read
		mov    $0x200,%ebx
		mov    $data_fdf68,%edx
		mov    $data_77f6b,%eax
		call   func_4979b
		mov    $0x2,%ebx
		movswl %ax,%ecx
		mov    $data_fdf80,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_fdf7e,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0xd,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		mov    $0xc8,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		mov    $0xa8,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		mov    $0xd,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_close
		mov    %dx,0x20(%esp)
		mov    $0x88,%ebp
	jump_4f93b:
		mov    0x20(%esp),%esi
		cmp    $0x4,%si
		jne    jump_4f94c
		mov    $data_cc990,%edi
		jmp    jump_4f96a
	jump_4f94c:
		cmp    $0x5,%si
		jne    jump_4f959
		mov    $data_d6620,%edi
		jmp    jump_4f96a
	jump_4f959:
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		mov    $data_cc968,%edi
		shl    $0x3,%eax
		add    %eax,%edi
	jump_4f96a:
		mov    0x1a(%esp),%eax
		mov    $0x2,%ebx
		lea    0x18(%esp),%edx
		sar    $0x10,%eax
		call   w_dos_read
		jmp    jump_4fa64
	jump_4f984:
		call   func_112fd
		mov    %eax,%esi
		mov    %eax,%ecx
		mov    %ebp,%ebx
		mov    0x1a(%esp),%eax
		mov    %esi,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    %esi,%edx
		mov    %edi,%eax
		mov    0x20(%esp),%ebx
		call   func_1134f
		cmp    $0x4,%bx
		jge    jump_4fa33
		cmpb   $0x0,0x12(%esi)
		jne    jump_4f9ca
		mov    0x5f(%esi),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%esi)
		jmp    jump_4fa33
	jump_4f9ca:
		mov    0x5f(%esi),%eax
		sar    $0x10,%eax
		movsbw data_e502d(%eax),%dx
		mov    %dx,0x14(%esp)
		movb   $0xff,data_e502d(%eax)
		mov    0x5f(%esi),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%esi)
		mov    $0x2,%eax
		xor    %edx,%edx
		call   func_6104a
	jump_4f9fe:
		movswl %dx,%ebx
		imul   $0xd,%ebx,%ebx
		mov    0x5d(%ecx),%eax
		sar    $0x18,%eax
		imul   $0x23c,%eax,%eax
		mov    data_d66b1(%ebx,%eax,1),%eax
		inc    %edx
		call   func_100f2
		cmp    $0x2c,%dx
		jl     jump_4f9fe
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		mov    0x14(%esp),%dl
		mov    %dl,data_e502d(%eax)
	jump_4fa33:
		cmpl   $0x0,0x77(%ecx)
		je     jump_4fa60
		call   func_112fd
		mov    %eax,%esi
		mov    %ebp,%ebx
		mov    0x1a(%esp),%eax
		mov    %esi,%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    %ecx,%eax
		mov    %esi,0x77(%ecx)
		call   func_11b77
		mov    0x77(%ecx),%ebx
		mov    %al,0x60(%ebx)
	jump_4fa60:
		decl   0x18(%esp)
	jump_4fa64:
		cmpw   $0x0,0x18(%esp)
		jg     jump_4f984
		mov    0x20(%esp),%ebx
		inc    %ebx
		mov    %bx,0x20(%esp)
		cmp    $0x6,%bx
		jl     jump_4f93b
		mov    0x1a(%esp),%ecx
		mov    $0x4,%ebx
		sar    $0x10,%ecx
		lea    0x10(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x10(%esp),%eax
		mov    $0x2,%ebx
		lea    0x10(%esp),%edx
		call   func_19d4d
		mov    %ecx,%eax
		call   w_dos_read
		mov    0xe(%esp),%eax
		mov    $0x1,%ebx
		sar    $0x10,%eax
		lea    0x24(%esp),%edx
		call   func_19f9d
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		lea    0x28(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		xor    %edx,%edx
		mov    0x21(%esp),%eax
		mov    0x28(%esp),%dl
		sar    $0x18,%eax
		mov    $0x2,%ebx
		call   func_1379a
		mov    $data_f0424,%edx
		mov    %eax,data_f0410
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_f0422,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_f0420,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x18(%esp),%edx
		mov    %ecx,%eax
		xor    %edi,%edi
		call   w_dos_read
		jmp    jump_4fb77
	jump_4fb3e:
		mov    0x1a(%esp),%eax
		mov    $0x1,%ebx
		lea    0x28(%esp),%edx
		sar    $0x10,%eax
		call   w_dos_read
		mov    data_cc968,%eax
	jump_4fb58:
		test   %eax,%eax
		je     jump_4fb71
		mov    0x25(%esp),%ebx
		xor    %ecx,%ecx
		sar    $0x18,%ebx
		mov    0xf(%eax),%cl
		cmp    %ebx,%ecx
		je     jump_4fb71
		mov    0x7b(%eax),%eax
		jmp    jump_4fb58
	jump_4fb71:
		call   func_196d0
		inc    %edi
	jump_4fb77:
		cmp    0x18(%esp),%di
		jl     jump_4fb3e
		mov    0x1a(%esp),%ecx
		mov    $0x2,%ebx
		sar    $0x10,%ecx
		mov    $data_f0ba0,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_f0ba2,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_11044c,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_1102bc,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_110384,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_110514,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_110320,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_1103e8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_110254,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x64,%ebx
		mov    $data_1104b0,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xfa00,%ebx
		mov    $data_10084c,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x78,%ebx
		mov    $data_f0380,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_ba83c,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    $data_ba83e,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1135,%ebx
		mov    $data_fdf82,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ba84d,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ff0b7,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    $data_ff0b8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x3,%ebx
		mov    $data_fd8bc,%edx
		mov    %ecx,%eax
		call   w_dos_read
		call   func_4f3bd
		mov    %ecx,%eax
		call   w_dos_close
		jmp    jump_4f255


/*----------------------------------------------------------------*/
func_4fcd9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x10,%esp
		push   $0x200
		push   $data_77f75
		mov    $0x10,%ebx
		call   w_dos_open
#if 1
    cmp    $-1,%eax
    je     jump_func_4fcd9_1
#endif
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		mov    %esp,%edx
		call   w_dos_close
#if 1
  jump_func_4fcd9_1:
#endif
		mov    $data_fdf68,%eax
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_4fd1e
		call   func_4f4ef
	jump_4fd1e:
		add    $0x10,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4fd25:
/*----------------------------------------------------------------*/
		call   func_5af1b
		xor    %eax,%eax
		call   func_5cd0d
		call   func_44c05
		call   func_11ca9
		call   func_19652
		call   func_50086
		call   func_4f85c
		mov    data_ba84a,%eax
		sar    $0x18,%eax
		call   func_44f30
		call   func_11fc4
		call   func_4f369
		call   func_4f427
		jmp    func_45559


/*----------------------------------------------------------------*/
func_4fd6b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %dl,(%esp)
		mov    $0x180,%ebx
		mov    $data_77f81,%edx
		mov    $data_77f8d,%eax
		call   func_49916
		mov    $0x201,%ebx
		cwtl
		mov    $data_77f81,%edx
		call   w_dos_close
		mov    $data_77f8d,%eax
		call   func_4979b
		mov    $0xf,%ebx
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x4,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4fdd1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    $0x180,%edx
		mov    $data_77f8e,%eax
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x101
		push   $data_77f8e
		call   w_dos_open
		add    $0x8,%esp
		mov    %esi,%edi
		mov    %eax,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x1(%ecx),%ebx
		movswl %dx,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    %ecx,%eax
		call   w_dos_close
		jmp    jump_4f259


/*----------------------------------------------------------------*/
func_4fe28:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    $0x180,%edx
		mov    $data_77f90,%eax
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x101
		push   $data_77f90
		mov    $0x2,%ebx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    %esp,%edx
	jump_4fe5f:
		mov    %ecx,%eax
		call   w_dos_write
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4fe74:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		mov    $0x200,%edx
		mov    $data_77fa0,%eax
		mov    $0x1,%ebx
#if 0
		call   func_4976f
#endif
#if 1
    call   w_game_cfg_setup
#endif
		mov    $game_cfg_speed,%edx
		mov    %eax,%esi
		cwtl
#if 0
		call   w_dos_read /* read speed in game.cfg */
#endif
		cmpw   $0x0,game_cfg_speed
		jne    jump_4fead
		mov    $0x4,%eax
		jmp    jump_4feb2
	jump_4fead:
		mov    $0x8,%eax
	jump_4feb2:
		call   func_10d9a
		mov    $0x1,%ebx
		movswl %si,%ecx
		mov    $game_cfg_music,%edx
		mov    %ecx,%eax
#if 0
		call   w_dos_read /* read music in game.cfg */
#endif
		mov    $0x1,%ebx
		mov    $game_cfg_sound,%edx
		mov    %ecx,%eax
#if 0
		call   w_dos_read /* read sound in game.cfg */
#endif
		mov    $0x1,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
#if 1
    mov    $5,%ebx /* read the unknown in game.cfg but 5 is forced */
#else
		call   w_dos_read
		mov    (%esp),%ebx
#endif
		cmp    $0x2,%bx
		jl     jump_4fef9
		cmp    $0x1e,%bx
		jle    jump_4feff
	jump_4fef9:
		movw   $0x2,(%esp)
	jump_4feff:
		mov    $0x2,%ebx
		xor    %eax,%eax
		lea    0x4(%esp),%edx
		mov    (%esp),%al
		movswl %si,%ecx
		call   func_1a116
		mov    %ecx,%eax
#if 1
    /* force sound-blaster ADR 220 */
    push   %eax
    mov    $220,%eax
    mov    %eax,0x4(%esp)
    pop    %eax
#else
		call   w_dos_read
#endif
		cmpw   $0x0,0x4(%esp)
		je     jump_4ff66
		mov    $0x2,%ebx
		lea    0xc(%esp),%edx
		mov    %ecx,%eax
#if 1
    /* force sound-blaster IRQ 7 */
    push   %eax
    mov    $7,%eax
    mov    %eax,0xc(%esp)
    pop    %eax
#else
		call   w_dos_read
#endif
		mov    $0x2,%ebx
		lea    0x8(%esp),%edx
		mov    %ecx,%eax
#if 1
    /* force sound-blaster DMA 1 */
    push   %eax
    mov    $1,%eax
    mov    %eax,0x8(%esp)
    pop    %eax
#else
		call   w_dos_read
#endif
		mov    0x6(%esp),%eax
		mov    0xa(%esp),%ecx
		mov    0x2(%esp),%ebx
		mov    $0x1,%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		sar    $0x10,%ebx
		mov    $0x55f0,%eax
		jmp    jump_4ff79
	jump_4ff66:
		push   $0x1
		mov    $0x5,%ecx
		mov    $0x200,%ebx
		mov    $0x55f0,%eax
		xor    %edx,%edx
	jump_4ff79:
		call   func_5c665
		movswl %si,%eax
#if 0
		call   w_dos_close
#endif
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_4ff8e:
/*----------------------------------------------------------------*/
#if 1
    ret
#endif
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    $0x202,%edx
		mov    $data_77fa0,%eax
		mov    $0x1,%ebx
		call   func_4976f
		movswl %ax,%ecx
		mov    $game_cfg_speed,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    $game_cfg_music,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		mov    $game_cfg_sound,%edx
		mov    %ecx,%eax
		call   w_dos_write
		call   func_1a11c
		mov    $0x1,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %eax,(%esp)
		jmp    jump_4fe5f


/*----------------------------------------------------------------*/
func_4ffef:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_f0b9e,%ax
		xor    %edx,%edx
		mov    %ax,data_110578
		jmp    jump_50013
	jump_50001:
		movswl %dx,%eax
		mov    data_f0648(,%eax,4),%ebx
		inc    %edx
		mov    %ebx,data_10019c(,%eax,4)
	jump_50013:
		cmp    data_f0b9e,%dx
		jl     jump_50001
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5001f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_110578,%ax
		xor    %edx,%edx
		mov    %ax,data_f0b9e
		jmp    jump_50043
	jump_50031:
		movswl %dx,%eax
		mov    data_10019c(,%eax,4),%ebx
		inc    %edx
		mov    %ebx,data_f0648(,%eax,4)
	jump_50043:
		cmp    data_f0b9e,%dx
		jl     jump_50031
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5004f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x8,%ecx
		mov    $data_10059c,%edx
		mov    $data_77fac,%eax
		xor    %ebx,%ebx
		call   func_4f25f
		xor    %edx,%edx
	jump_5006a:
		movswl %dx,%eax
		imul   $0xc,%eax,%eax
		mov    data_1005a4(%eax),%eax
		inc    %edx
		call   func_10031
		cmp    $0x8,%dx
		jl     jump_5006a
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_50086:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %edx,%edx
	jump_5008a:
		movswl %dx,%eax
		xor    %bl,%bl
		inc    %edx
		mov    %bl,data_11044c(%eax)
		mov    %bl,data_1102bc(%eax)
		mov    %bl,data_110384(%eax)
		mov    %bl,data_110514(%eax)
		mov    %bl,data_110320(%eax)
		mov    %bl,data_1103e8(%eax)
		mov    %bl,data_110254(%eax)
		mov    %bl,data_1104b0(%eax)
		cmp    $0x64,%dx
		jl     jump_5008a
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_500c9:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %ebx,%esi
		xor    %eax,%eax
		jmp    jump_500e4
	jump_500d6:
		movswl %ax,%edx
		mov    data_10084c(%edx,%esi,1),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)
	jump_500e4:
		cmp    %cx,%ax
		jl     jump_500d6
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_500ed:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %al,%dl
		mov    data_cc990,%eax
	jump_500f5:
		test   %eax,%eax
		je     jump_50103
		cmp    0xf(%eax),%dl
		je     jump_50103
		mov    0x7b(%eax),%eax
		jmp    jump_500f5
	jump_50103:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_50105:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ebx
		mov    %edx,%esi
		mov    (%eax),%dl
		mov    %dl,0x4(%esp)
		mov    0x1(%eax),%dl
		mov    %dl,0xc(%esp)
		mov    0x63(%eax),%dl
		mov    $0x88,%ecx
		mov    %dl,0x8(%esp)
		mov    0x5c(%eax),%dl
		mov    %eax,%edi
		mov    %dl,(%esp)
		mov    0x77(%eax),%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x4(%esp),%al
		mov    %al,(%ebx)
		mov    0xc(%esp),%al
		mov    %al,0x1(%ebx)
		mov    0x8(%esp),%al
		mov    %al,0x63(%ebx)
		cmpb   $0x0,(%esp)
		je     jump_50186
		mov    $0x88,%ecx
		mov    %ebx,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edx,0x77(%ebx)
		xor    %edx,%edx
		mov    %ebx,%eax
		mov    (%esp),%dl
		call   func_17e6d
	jump_50186:
		mov    0x4c(%ebx),%edx
		mov    %edx,0x48(%ebx)
		mov    0x52(%ebx),%dx
		mov    %dx,0x50(%ebx)
		add    $0x10,%esp
		pop    %edi
		pop    %esi
	jump_50199:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5019c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    data_11024c,%eax
		movsbl %dl,%edx
		mov    0xb(%eax),%ebx
		sub    $0x9,%edx
		sar    $0x18,%ebx
		cmp    %edx,%ebx
		je     jump_501b7
		xor    %eax,%eax
	jump_501b7:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_501ba:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		cmp    $0x9,%al
		jle    jump_501cd
		movsbl %al,%eax
		call   func_5019c
		pop    %ecx
		pop    %ebx
		ret
	jump_501cd:
		test   %al,%al
		jne    jump_501ef
		xor    %eax,%eax
		mov    %dl,%al
		call   func_500ed
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_50199
		mov    0xe(%eax),%al
		xor    %ecx,%ecx
		dec    %al
		mov    0x87(%edx),%cl
		jmp    jump_501f1
	jump_501ef:
		xor    %ecx,%ecx
	jump_501f1:
		movsbl %al,%eax
		mov    data_cc968(,%eax,8),%eax
	jump_501fb:
		test   %eax,%eax
		je     jump_50199
		cmp    0xf(%eax),%bl
		jne    jump_50211
		xor    %edx,%edx
		mov    0x87(%eax),%dl
		cmp    %cx,%dx
		je     jump_50199
	jump_50211:
		mov    0x7b(%eax),%eax
		jmp    jump_501fb


/*----------------------------------------------------------------*/
func_50216:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%ebx
		mov    data_ba83c,%cx
		movsbw (%eax),%ax
		cmp    %cx,%ax
		jl     jump_50330
		mov    data_ba83e,%si
		movsbw 0x1(%ebx),%ax
		cmp    %si,%ax
		jl     jump_50330
		mov    data_ba83a,%eax
		sar    $0x10,%eax
		movsbl (%ebx),%ecx
		add    $0xc,%eax
		cmp    %eax,%ecx
		jg     jump_50330
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movsbl 0x1(%ebx),%esi
		add    $0xc,%eax
		cmp    %eax,%esi
		jg     jump_50330
		test   %dx,%dx
		jl     jump_50330
		cmp    $0x7,%dx
		jg     jump_50330
		movswl %dx,%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    $data_10059c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
		mov    %ecx,%eax
		call   func_10971
		add    $0xc,%eax
		mov    %eax,(%esp)
		movsbl 0x1(%ebx),%eax
		call   func_10988
		mov    %eax,%edi
		sub    $0x2,%edi
		cmp    $0x1,%dx
		jle    jump_50319
		mov    0x5d(%ebx),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		shl    $0x4,%eax
		mov    0x60(%ebx),%ebx
		sub    %ecx,%eax
		mov    $data_d66a8,%ecx
		shl    $0x2,%eax
		sar    $0x18,%ebx
		add    %eax,%ecx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		shl    $0x4,%eax
		sub    %ebx,%eax
		mov    $0x9,%ebx
		add    %ecx,%eax
		sub    %edx,%ebx
		mov    0x9(%eax),%ebp
		movswl %bx,%ecx
		movsbw 0x5(%eax),%dx
		mov    (%esp),%ebx
		movsbw 0x4(%eax),%ax
		add    %edi,%edx
		add    %ebx,%eax
		movswl %dx,%edx
		cwtl
		mov    %ebp,%ebx
		call   func_5f517
	jump_50319:
		add    0x6(%esi),%di
		mov    (%esp),%eax
		movswl %di,%edx
		add    0x4(%esi),%ax
		mov    0x8(%esi),%ebx
		cwtl
		call   func_5f3fd
	jump_50330:
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_50339:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %dl,(%esp)
		cmp    $0x1,%al
		jne    jump_5035e
		mov    -0x3(%esp),%eax
		movsbl %bl,%edx
		sar    $0x18,%eax
		call   func_454b3
		call   func_5e9e8
		jmp    jump_50465
	jump_5035e:
		test   %cl,%cl
		jne    jump_50366
		mov    $0x1,%cl
		jmp    jump_50371
	jump_50366:
		cmp    $0x3,%cl
		jne    jump_5036f
		mov    $0x8,%cl
		jmp    jump_50371
	jump_5036f:
		add    %cl,%cl
	jump_50371:
		movsbw (%esp),%ax
		mov    data_ba83c,%dx
		cmp    %dx,%ax
		jne    jump_50386
		xor    %edx,%eax
		jmp    jump_503bb
	jump_50386:
		sub    %eax,%edx
		mov    %dx,data_110584
		test   %dx,%dx
		jge    jump_5039f
		mov    %edx,%edi
		neg    %edi
		mov    %di,data_110584
	jump_5039f:
		mov    $0x18,%eax
		mov    %eax,%edx
		movsbl %cl,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    data_110582,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
	jump_503bb:
		mov    %ax,data_110584
		mov    data_ba83e,%dx
		movsbw %bl,%ax
		cmp    %dx,%ax
		jne    jump_503d5
		xor    %edx,%eax
		jmp    jump_5040a
	jump_503d5:
		sub    %eax,%edx
		mov    %dx,data_110582
		test   %dx,%dx
		jge    jump_503ee
		mov    %edx,%edi
		neg    %edi
		mov    %di,data_110582
	jump_503ee:
		mov    $0x10,%eax
		mov    %eax,%edx
		movsbl %cl,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    data_110580,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
	jump_5040a:
		mov    %ax,data_110582
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movsbw (%esp),%ax
		cmp    data_ba83c,%ax
		jle    jump_5043c
		movsbw %cl,%ax
		neg    %eax
		jmp    jump_50440
	jump_5043c:
		movsbw %cl,%ax
	jump_50440:
		mov    %ax,data_110580
		movsbw %bl,%ax
		cmp    data_ba83e,%ax
		jle    jump_5045b
		movsbw %cl,%ax
		neg    %eax
		jmp    jump_5045f
	jump_5045b:
		movsbw %cl,%ax
	jump_5045f:
		mov    %ax,data_11057e
	jump_50465:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_5046b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_110250,%edx
		test   %edx,%edx
		je     jump_5050b
		push   %edx
		push   $0x24
		push   $0x20
		mov    $0x1,%ebx
		call   func_5e048
		mov    data_11057c,%dx
		sub    %ebx,%edx
		add    $0xc,%esp
		mov    %dx,data_11057c
		test   %dx,%dx
		jg     jump_5050d
		mov    data_110692,%al
		cmp    data_110691,%al
		je     jump_504f1
		mov    data_11068f,%edx
		sar    $0x18,%edx
		imul   $0x10b,%edx,%eax
		mov    $data_ff0bc,%ecx
		add    %eax,%ecx
		inc    %edx
		mov    %ecx,data_110250
		mov    data_10016a(,%edx,2),%ax
		mov    $0x10,%ecx
		mov    %ax,data_11057c
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,data_110692
		jmp    jump_5050d
	jump_504f1:
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,data_110691
		xor    %dh,%dh
		mov    %ecx,data_110250
		mov    %dh,data_110692
		jmp    jump_5050d
	jump_5050b:
		xor    %ebx,%ebx
	jump_5050d:
		cmpw   $0x0,data_110584
		jne    jump_505b6
		cmpw   $0x0,data_110582
		jne    jump_505b6
		mov    data_110693,%al
		mov    data_110695,%cl
		cmp    %cl,%al
		je     jump_50593
		mov    data_110690,%eax
		sar    $0x18,%eax
		mov    data_1005f9(,%eax,2),%ecx
		mov    data_100619(,%eax,2),%ebx
		mov    data_100639(,%eax,2),%edx
		sar    $0x18,%ecx
		sar    $0x18,%ebx
		mov    data_100659(,%eax,2),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_50339
		mov    data_110690,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x2,%eax
		mov    %dl,data_110693
		jmp    jump_50aa1
	jump_50593:
		xor    %ch,%ch
		xor    %cl,%al
		mov    %ch,data_110695
		mov    %al,data_110693
		cmp    $0x1,%bx
		je     jump_50695
		mov    $0x1,%eax
		jmp    jump_50aa1
	jump_505b6:
		cmpw   $0x0,data_110584
		jle    jump_50626
		mov    data_110580,%ax
		mov    data_7001c,%dx
		add    %eax,%edx
		mov    %dx,data_7001c
		mov    data_7001a,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff4,%eax
		jg     jump_505fe
		mov    %edx,%edi
		mov    data_ba83c,%ax
		add    $0x18,%edi
		inc    %eax
		mov    %di,data_7001c
		mov    %ax,data_ba83c
		jmp    jump_5061f
	jump_505fe:
		cmp    $0xc,%dx
		jle    jump_5061f
		mov    %edx,%ecx
		mov    data_ba83c,%si
		sub    $0x18,%ecx
		dec    %esi
		mov    %cx,data_7001c
		mov    %si,data_ba83c
	jump_5061f:
		decw   data_110584
	jump_50626:
		cmpw   $0x0,data_110582
		jle    jump_50695
		mov    data_11057e,%ax
		mov    data_ba838,%cx
		add    %eax,%ecx
		mov    %cx,data_ba838
		mov    data_ba836,%eax
		sar    $0x10,%eax
		cmp    $0xfffffff0,%eax
		jg     jump_50670
		mov    %ecx,%edx
		mov    data_ba83e,%bx
		add    $0x10,%edx
		inc    %ebx
		mov    %dx,data_ba838
		mov    %bx,data_ba83e
		jmp    jump_5068e
	jump_50670:
		test   %cx,%cx
		jle    jump_5068e
		mov    %ecx,%edi
		mov    data_ba83e,%ax
		sub    $0x10,%edi
		dec    %eax
		mov    %di,data_ba838
		mov    %ax,data_ba83e
	jump_5068e:
		decw   data_110582
	jump_50695:
		xor    %eax,%eax
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_5069c:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    jump_506e0
	jump_506a9:
		movswl %ax,%edx
		imul   $0xb,%edx,%edx
		cmpl   $0x0,data_1006bc(%edx)
		jne    jump_506df
		mov    %esi,data_1006bc(%edx)
		mov    %bl,data_1006c1(%edx)
		mov    (%esp),%al
		mov    %cl,data_1006c2(%edx)
		mov    0xc(%esp),%esi
		mov    %al,data_1006c0(%edx)
		mov    %esi,data_1006c3(%edx)
		jmp    jump_506e6
	jump_506df:
		inc    %eax
	jump_506e0:
		cmp    $0x20,%ax
		jl     jump_506a9
	jump_506e6:
		incb   data_110694
		add    $0x4,%esp
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_506f3:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		call   func_53f2c
		cmpw   $0x1,data_11209e
		jne    jump_5070b
		xor    %eax,%eax
		call   func_44cca
	jump_5070b:
		mov    $0x2,%eax
		call   func_4e4c4
		call   func_4e622
		call   func_4ec51
		call   func_4ecd7
		mov    $0x1,%eax
		call   func_4ec9a
		mov    $data_77fb6,%eax
		call   w_dos_unlink
		mov    $data_77fc2,%eax
		call   func_4fdd1
		call   func_55ebc
		mov    $0x1,%eax
		jmp    w_dos_exit


/*----------------------------------------------------------------*/
func_50751:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpw   $0x1,data_11209e
		jne    jump_50767
		mov    $0x1,%eax
		call   func_53f2c
	jump_50767:
		mov    $0x1,%eax
		call   func_44cca
	jump_50771:
		mov    $0x1,%eax
		call   func_4e0ee
		mov    %eax,%ebx
		cmp    $0x2,%ax
		jne    jump_5079e
		mov    $0x1,%edx
		mov    $data_fdf68,%eax
		call   func_4fd6b
		call   func_55ebc
		mov    $0x1,%eax
		jmp    jump_507ae
	jump_5079e:
		cmp    $0x8,%ax
		jne    jump_507b3
		call   func_55ebc
		mov    $0xff,%eax
	jump_507ae:
		call   w_dos_exit
	jump_507b3:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     jump_50771
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_507be:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %al,0x4(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		cmp    $0x9,%al
		jle    jump_50841
		mov    0x1(%esp),%eax
		sar    $0x18,%eax
		call   func_5019c
		mov    %eax,%ecx
		test   %eax,%eax
		jne    jump_50854
		subb   $0xa,0x4(%esp)
		mov    0x1(%esp),%eax
		sar    $0x18,%eax
		mov    data_1102b8,%ebx
		mov    data_cc968(,%eax,8),%edx
		test   %ebx,%ebx
		je     jump_50819
		mov    %ebx,%esi
		mov    0xb(%ebx),%ebx
		inc    %eax
		sar    $0x18,%ebx
		cmp    %eax,%ebx
		jne    jump_50819
		mov    %esi,%ecx
		jmp    jump_50854
	jump_50819:
		test   %edx,%edx
		je     jump_50837
		test   %ecx,%ecx
		je     jump_50830
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_50832
	jump_50830:
		mov    %edx,%ecx
	jump_50832:
		mov    0x7b(%edx),%edx
		jmp    jump_50819
	jump_50837:
		test   %ecx,%ecx
		je     jump_508df
		jmp    jump_50854
	jump_50841:
		xor    %edx,%edx
		mov    0x1(%esp),%eax
		mov    (%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		mov    %eax,%ecx
	jump_50854:
		test   %ecx,%ecx
		jne    jump_508b4
		xor    %eax,%eax
		mov    (%esp),%al
		call   func_500ed
		mov    %eax,%esi
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_508df
		cmpb   $0x0,0x87(%eax)
		je     jump_508df
		mov    data_fdf7e,%ax
		add    $0x6,%eax
		movswl %ax,%edx
		mov    data_fdf80,%ax
		add    $0x6,%eax
		cwtl
		call   func_1124a
		mov    data_ba83c,%al
		add    $0x6,%al
		mov    %al,(%esi)
		mov    data_ba83e,%al
		mov    $0x2,%ebx
		add    $0x6,%al
		mov    %edi,%edx
		mov    %al,0x1(%esi)
		mov    %esi,%eax
		jmp    jump_508cf
	jump_508b4:
		mov    data_1102b8,%esi
		cmp    %esi,%ecx
		jne    jump_508c6
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    jump_508cf
	jump_508c6:
		mov    $0x1,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
	jump_508cf:
		call   func_482a5
		call   func_45559
		mov    %ecx,data_1102b8
	jump_508df:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_508e6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    data_edd74,%dx
		mov    (%esp),%ecx
		add    $0x8,%edx
		xor    %eax,%eax
		mov    %dx,data_edd74
		jmp    jump_50934
	jump_50905:
		cmp    $0x3,%cx
		jne    jump_50920
		movswl %ax,%edx
		mov    data_f0648(,%edx,4),%ebx
		mov    data_e5ad0(%edx),%dl
		mov    %dl,0x63(%ebx)
		jmp    jump_50933
	jump_50920:
		movswl %ax,%edx
		mov    $0x7,%bl
		mov    data_e5a50(%edx),%bh
		sub    %bh,%bl
		mov    %bl,data_e5a50(%edx)
	jump_50933:
		inc    %eax
	jump_50934:
		cmp    data_f0b9e,%ax
		jl     jump_50905
		mov    $0xc,%eax
		call   func_1033b
		mov    data_edd74,%di
		mov    $data_cc968,%ebp
		add    %edi,%edi
		jmp    jump_50a5a
	jump_5095a:
		call   func_4559f
		cmpw   $0x3,(%esp)
		jne    jump_509c2
		xor    %esi,%esi
		jmp    jump_509b3
	jump_5096a:
		movswl %si,%ebx
		mov    %ebx,%ecx
		mov    data_e5a4d(%ebx),%edx
		shl    $0x2,%ecx
		sar    $0x18,%edx
		mov    data_f0648(%ecx),%eax
		call   func_50216
		test   $0x1,%di
		jne    jump_509b2
		mov    data_e5a50(%ebx),%dl
		inc    %dl
		mov    %dl,data_e5a50(%ebx)
		cmp    $0x8,%dl
		jne    jump_509b2
		mov    data_f0648(%ecx),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11f74
	jump_509b2:
		inc    %esi
	jump_509b3:
		cmp    data_f0b9e,%si
		jge    jump_50a4f
		jmp    jump_5096a
	jump_509c2:
		xor    %esi,%esi
		jmp    jump_50a42
	jump_509c9:
		movswl %si,%ecx
		mov    %ecx,%ebx
		mov    data_e5a4d(%ecx),%edx
		shl    $0x2,%ebx
		sar    $0x18,%edx
		mov    data_f0648(%ebx),%eax
		call   func_50216
		test   $0x1,%di
		jne    jump_50a41
		mov    data_e5a50(%ecx),%al
		dec    %al
		mov    %al,data_e5a50(%ecx)
		cmp    $0x6,%al
		jne    jump_50a41
		mov    data_f0648(%ebx),%eax
		call   func_197ad
		mov    data_f0648(%ebx),%eax
		call   func_113e4
		mov    data_f0648(%ebx),%edx
		mov    0xb(%edx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		add    %ebp,%eax
		call   func_113cc
		mov    data_f0648(%ebx),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		xor    %ebx,%ebx
		call   func_11f74
	jump_50a41:
		inc    %esi
	jump_50a42:
		cmp    data_f0b9e,%si
		jl     jump_509c9
	jump_50a4f:
		call   func_5e9e8
		call   func_499e4
		dec    %edi
	jump_50a5a:
		test   %di,%di
		jge    jump_5095a
		cmpw   $0x4,(%esp)
		jne    jump_50a93
		xor    %esi,%esi
		jmp    jump_50a8a
	jump_50a6e:
		movswl %si,%eax
		mov    data_f0648(,%eax,4),%eax
		testb  $0x40,0x1e(%eax)
		jne    jump_50a89
		mov    0x5d(%eax),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_50a89:
		inc    %esi
	jump_50a8a:
		cmp    data_f0b9e,%si
		jl     jump_50a6e
	jump_50a93:
		call   func_4559f
		call   func_5e9e8
	jump_50a9d:
		add    $0x4,%esp
	jump_50aa0:
		pop    %ebp
	jump_50aa1:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_50aa7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		xor    %ecx,%ecx
		jmp    jump_50b9d
	jump_50ab5:
		movswl %cx,%eax
		mov    data_f0648(,%eax,4),%eax
		mov    data_ba83c,%bx
		movsbw (%eax),%dx
		cmp    %bx,%dx
		jl     jump_50b36
		mov    data_ba83a,%ebx
		sar    $0x10,%ebx
		movsbl (%eax),%edx
		add    $0xc,%ebx
		cmp    %ebx,%edx
		jge    jump_50b36
		mov    data_ba83e,%di
		movsbw 0x1(%eax),%dx
		cmp    %di,%dx
		jl     jump_50b36
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		movsbl 0x1(%eax),%ebx
		add    $0xc,%edx
		cmp    %edx,%ebx
		jge    jump_50b36
		cmp    $0x3,%si
		jb     jump_50b1b
		jbe    jump_50b28
		cmp    $0x4,%si
		je     jump_50b2f
		jmp    jump_50b4c
	jump_50b1b:
		cmp    $0x2,%si
		jne    jump_50b4c
		call   func_46710
		jmp    jump_50b4c
	jump_50b28:
		call   func_468bc
		jmp    jump_50b4c
	jump_50b2f:
		call   func_46a11
		jmp    jump_50b4c
	jump_50b36:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%ebx
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11ee4
	jump_50b4c:
		movswl %cx,%ebx
		mov    data_f0648(,%ebx,4),%eax
		call   func_197ad
		mov    data_f0648(,%ebx,4),%eax
		call   func_113e4
		mov    data_f0648(,%ebx,4),%edx
		mov    0xb(%edx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		add    $data_cc968,%eax
		call   func_113cc
		mov    data_f0648(,%ebx,4),%eax
		testb  $0x40,0x1e(%eax)
		jne    jump_50b9c
		mov    0x5d(%eax),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_50b9c:
		inc    %ecx
	jump_50b9d:
		cmp    data_f0b9e,%cx
		jl     jump_50ab5
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_50baf:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x64,%esp
		mov    data_edd74,%dx
		add    $0x8,%edx
		xor    %esi,%esi
		mov    %dx,data_edd74
		jmp    jump_50c2c
	jump_50bcc:
		movswl %si,%edi
		mov    data_f0648(,%edi,4),%eax
		lea    (%edi,%edi,2),%edx
		mov    (%eax),%bl
		mov    %bl,(%esp,%edx,1)
		mov    0x1(%eax),%bl
		mov    %bl,0x1(%esp,%edx,1)
		mov    0x63(%eax),%bl
		mov    %bl,0x2(%esp,%edx,1)
		movsbl 0x1(%eax),%edx
		xor    %ebx,%ebx
		movsbl (%eax),%eax
		call   func_11f74
		mov    data_f0648(,%edi,4),%eax
		mov    data_e5ad0(%edi),%dl
		mov    %dl,0x63(%eax)
		mov    data_f0648(,%edi,4),%ebx
		shl    $0x6,%edi
		mov    data_e520e(%edi),%edx
		mov    data_e520d(%edi),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		inc    %esi
		call   func_11f74
	jump_50c2c:
		cmp    data_f0b9e,%si
		jl     jump_50bcc
		mov    $0xc,%eax
		call   func_1033b
		mov    data_edd74,%ax
		add    %eax,%eax
		mov    %ax,0x60(%esp)
		jmp    jump_50d1c
	jump_50c51:
		call   func_4559f
		xor    %esi,%esi
		jmp    jump_50d00
	jump_50c5d:
		movswl %si,%ecx
		lea    (%ecx,%ecx,2),%eax
		mov    data_f0648(,%ecx,4),%edi
		mov    (%esp,%eax,1),%dl
		mov    %dl,(%edi)
		mov    data_f0648(,%ecx,4),%edi
		mov    0x1(%esp,%eax,1),%dl
		mov    %dl,0x1(%edi)
		mov    data_f0648(,%ecx,4),%edi
		mov    0x2(%esp,%eax,1),%al
		mov    %al,0x63(%edi)
		mov    $0x7,%edx
		movsbw data_e5a50(%ecx),%ax
		sub    %eax,%edx
		movswl %dx,%edx
		mov    data_f0648(,%ecx,4),%eax
		call   func_50216
		mov    %ecx,%eax
		shl    $0x6,%eax
		mov    data_f0648(,%ecx,4),%edi
		mov    data_e5210(%eax),%dl
		mov    %dl,(%edi)
		mov    data_f0648(,%ecx,4),%edi
		mov    data_e5211(%eax),%al
		mov    %al,0x1(%edi)
		mov    data_f0648(,%ecx,4),%eax
		mov    data_e5ad0(%ecx),%dl
		mov    %dl,0x63(%eax)
		mov    data_e5a4d(%ecx),%edx
		mov    data_f0648(,%ecx,4),%eax
		sar    $0x18,%edx
		call   func_50216
		testb  $0x1,0x60(%esp)
		jne    jump_50cff
		incb   data_e5a50(%ecx)
	jump_50cff:
		inc    %esi
	jump_50d00:
		cmp    data_f0b9e,%si
		jl     jump_50c5d
		call   func_5e9e8
		call   func_499e4
		decw   0x60(%esp)
	jump_50d1c:
		cmpw   $0x0,0x60(%esp)
		jge    jump_50c51
		call   func_4559f
		call   func_5e9e8
		add    $0x64,%esp
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_50d3a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    $0x1,%ecx
		jmp    jump_50d91
	jump_50d4c:
		movswl %cx,%ebx
		movsbl (%edi),%edx
		movsbl (%esi),%eax
		call   func_1ac08
	jump_50d5a:
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		call   func_1ac59
		test   %ax,%ax
		je     jump_50d90
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_50d5a
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x4(%esp),%al
		mov    %al,(%edi)
		jmp    jump_50d97
	jump_50d90:
		inc    %ecx
	jump_50d91:
		cmp    $0x32,%cx
		jl     jump_50d4c
	jump_50d97:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_50d9f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%ebp
		xor    %eax,%eax
		call   func_4e4c4
		mov    %ebp,%ebx
		xor    %edx,%edx
		lea    0x14(%esp),%eax
		mov    %dx,0x8(%esp)
		mov    %dx,0xc(%esp)
		mov    %dx,data_edd74
		mov    $0x1,%edx
		call   func_500c9
	jump_50dd4:
		mov    $0x1,%edx
		lea    0x20(%esp),%eax
		mov    %ebp,%ebx
		call   func_500c9
		mov    0x20(%esp),%al
		cmp    0x14(%esp),%al
		jne    jump_511de
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		inc    %ebp
		mov    0xa(%esp),%ecx
		mov    %ebp,%ebx
		mov    %ebp,0x4(%esp)
		call   func_500c9
		sar    $0x10,%ecx
		mov    0x8(%esp),%al
		mov    $0x88,%edx
		neg    %al
		inc    %ebp
		mov    %al,data_e5a50(%ecx)
		shl    $0x2,%ecx
		mov    %ebp,%ebx
		call   func_112fd
		mov    %eax,data_f0648(%ecx)
		call   func_500c9
		mov    data_f0648(%ecx),%eax
		mov    0x5c(%eax),%dl
		add    $0x88,%ebp
		test   %dl,%dl
		je     jump_50e71
		call   func_112fd
		mov    data_f0648(%ecx),%edx
		mov    %eax,0x77(%edx)
		mov    data_f0648(%ecx),%eax
		mov    %ebp,%ebx
		mov    $0x88,%edx
		mov    0x77(%eax),%eax
		add    $0x88,%ebp
		call   func_500c9
	jump_50e71:
		mov    0xa(%esp),%ecx
		sar    $0x10,%ecx
		shl    $0x2,%ecx
		mov    data_f0648(%ecx),%eax
		cmpb   $0x0,0xe(%eax)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%esi
		cmp    $0x1,%dx
		jne    jump_50edd
		mov    0xf(%eax),%al
		and    $0xff,%eax
		call   func_500ed
		mov    %eax,(%esp)
		test   %eax,%eax
		jne    jump_50eb3
		mov    data_f0648(%ecx),%eax
		call   func_4e81f
		jmp    jump_50edd
	jump_50eb3:
		mov    data_f0648(%ecx),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   func_50105
		mov    data_f0648(%ecx),%eax
		decb   0xe(%eax)
		mov    data_f0648(%ecx),%eax
		mov    0x77(%eax),%edx
		test   %edx,%edx
		je     jump_50edb
		decb   0xe(%edx)
	jump_50edb:
		xor    %esi,%esi
	jump_50edd:
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    data_f0648(,%edx,4),%eax
		incb   0xe(%eax)
		mov    data_f0648(,%edx,4),%eax
		mov    0x77(%eax),%ebx
		test   %ebx,%ebx
		je     jump_50eff
		incb   0xe(%ebx)
	jump_50eff:
		test   %si,%si
		je     jump_50f47
		mov    0xa(%esp),%esi
		sar    $0x10,%esi
		call   func_112fd
		mov    data_f0648(,%esi,4),%esi
		mov    %eax,%edi
		mov    0x77(%esi),%ecx
		mov    %eax,(%esp)
		test   %ecx,%ecx
		je     jump_50f25
		mov    %ecx,%esi
	jump_50f25:
		mov    $0x88,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    (%esp),%edx
		mov    $data_cc990,%eax
		call   func_1134f
	jump_50f47:
		mov    0xa(%esp),%esi
		mov    $data_e5ad0,%eax
		mov    $0x1,%edx
		sar    $0x10,%esi
		mov    %ebp,%ebx
		add    %esi,%eax
		inc    %ebp
		call   func_500c9
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		mov    %ebp,%ebx
		mov    %esi,%ecx
		call   func_500c9
		mov    0x8(%esp),%edi
		shl    $0x2,%ecx
		dec    %edi
		movsbw data_e5a50(%esi),%ax
		mov    %edi,%edx
		inc    %ebp
		sub    %eax,%edx
		mov    %ebp,%ebx
		mov    %edx,%eax
		mov    %di,0x8(%esp)
		add    $0x2,%eax
		mov    $0x1,%edx
		mov    %eax,0x10(%esp)
		mov    data_f0648(%ecx),%eax
		inc    %ebp
		call   func_500c9
		mov    $0x1,%edx
		mov    data_f0648(%ecx),%eax
		mov    %ebp,%ebx
		inc    %eax
		call   func_500c9
		mov    0x14(%esp),%al
		inc    %ebp
		test   %al,%al
		jne    jump_5104e
		mov    0x8(%esp),%eax
		shl    $0x6,%esi
		test   %ax,%ax
		jle    jump_51035
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		movb   $0xff,data_e5210(%esi,%eax,2)
		mov    0x8(%esp),%edx
		add    %edx,%edx
		mov    %ebp,%ebx
		mov    %dx,0x8(%esp)
		mov    $data_e5210,%eax
		mov    0x6(%esp),%edx
		add    %esi,%eax
		sar    $0x10,%edx
		call   func_500c9
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%ebp
		sar    %eax
		dec    %eax
		mov    %ax,0x8(%esp)
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		add    %eax,%esi
		mov    data_e5210(%esi),%al
		mov    %al,0x1c(%esp)
		mov    data_e5211(%esi),%al
		jmp    jump_5105d
	jump_51035:
		mov    $0xff,%ah
		mov    data_f0648(%ecx),%ecx
		mov    %ah,data_e5210(%esi)
		mov    (%ecx),%al
		mov    %al,0x1c(%esp)
		mov    0x1(%ecx),%al
		jmp    jump_5105d
	jump_5104e:
		mov    data_f0648(%ecx),%edx
		mov    (%edx),%al
		mov    %al,0x1c(%esp)
		mov    0x1(%edx),%al
	jump_5105d:
		mov    %al,0x18(%esp)
		mov    0xa(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%esi
		shl    $0x2,%esi
		mov    data_f0648(%esi),%eax
		call   func_1665b
		mov    0x15(%esp),%edx
		mov    0x19(%esp),%eax
		mov    data_e5acd(%edi),%ebx
		mov    data_f0648(%esi),%ecx
		sar    $0x18,%ebx
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_16699
		cmp    $0x1,%ax
		je     jump_510ab
		cmpb   $0x1,0x14(%esp)
		jne    jump_51199
	jump_510ab:
		mov    0xa(%esp),%ecx
		sar    $0x10,%ecx
		shl    $0x2,%ecx
		mov    data_f0648(%ecx),%eax
		mov    0x5f(%eax),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    data_f0648(%ecx),%edx
		mov    %al,0x60(%edx)
		mov    data_f0648(%ecx),%eax
		cmpl   $0x0,0x77(%eax)
		je     jump_510f4
		cmpb   $0x6,0x5c(%eax)
		ja     jump_510f4
		call   func_11b77
		mov    %eax,%edx
		mov    data_f0648(%ecx),%eax
		mov    0x77(%eax),%eax
		mov    %dl,0x60(%eax)
	jump_510f4:
		mov    0x10(%esp),%ebx
		cmp    data_edd74,%bx
		jle    jump_51108
		mov    %bx,data_edd74
	jump_51108:
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    data_f0648(,%edx,4),%edx
		mov    0xb(%edx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		add    $data_cc968,%eax
		call   func_1134f
		cmpb   $0x1,0x14(%esp)
		jne    jump_51192
		cmpw   $0x0,0xc(%esp)
		jne    jump_51145
		mov    data_f0648,%eax
		call   func_169d7
	jump_51145:
		cmpl   $0x0,(%esp)
		je     jump_5117a
		lea    0x18(%esp),%edx
		lea    0x1c(%esp),%eax
		call   func_50d3a
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    data_f0648(,%edx,4),%ebx
		mov    0x1c(%esp),%al
		mov    %al,(%ebx)
		mov    data_f0648(,%edx,4),%edx
		mov    0x18(%esp),%al
		mov    %al,0x1(%edx)
	jump_5117a:
		mov    0x15(%esp),%edx
		mov    0x19(%esp),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_13d02
	jump_51192:
		incw   0xc(%esp)
		jmp    jump_511c0
	jump_51199:
		mov    0x15(%esp),%ebx
		mov    0x19(%esp),%edx
		mov    data_f0648(%esi),%eax
		mov    data_e5acd(%edi),%ecx
		push   %eax
		sar    $0x18,%ecx
		sar    $0x18,%ebx
		sar    $0x18,%edx
		mov    0x8(%esp),%eax
		call   func_5069c
	jump_511c0:
		mov    $0x1,%edx
		lea    0x20(%esp),%eax
		mov    %ebp,%ebx
		call   func_500c9
		mov    0x20(%esp),%cl
		inc    %ebp
		cmp    $0x3,%cl
		je     jump_50dd4
	jump_511de:
		call   func_4ecd7
		mov    0xc(%esp),%eax
		mov    0x14(%esp),%ch
		dec    %ebp
		mov    %ax,data_f0b9e
		test   %ch,%ch
		jne    jump_511fd
		call   func_16d3e
		jmp    jump_51207
	jump_511fd:
		mov    $0x3,%eax
		call   func_508e6
	jump_51207:
		mov    %ebp,%eax
	jump_51209:
		add    $0x24,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_51211:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		cmpb   $0x0,data_110694
		je     jump_51441
		xor    %eax,%eax
		call   func_4e4c4
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %dx,data_edd74
		mov    %dx,(%esp)
		jmp    jump_51414
	jump_51242:
		movswl %di,%esi
		imul   $0xb,%esi,%esi
		cmpl   $0x0,data_1006bc(%esi)
		je     jump_51413
		mov    data_1006c3(%esi),%eax
		call   func_1665b
		mov    data_1006c3(%esi),%ecx
		mov    data_1006bf(%esi),%ebx
		mov    data_1006be(%esi),%edx
		mov    data_1006bd(%esi),%eax
		sar    $0x18,%ebx
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_16699
		cmp    $0x1,%ax
		jne    jump_51413
		mov    $0x1,%edx
		mov    data_1006bc(%esi),%ecx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    -0x2(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x10,%eax
		neg    %dl
		mov    %dl,data_e5a50(%eax)
		mov    data_1006c3(%esi),%edx
		mov    %edx,data_f0648(,%eax,4)
		mov    0x77(%edx),%ebx
		add    $0x89,%ecx
		test   %ebx,%ebx
		je     jump_512d9
		add    $0x88,%ecx
	jump_512d9:
		mov    -0x2(%esp),%esi
		mov    $data_e5ad0,%eax
		mov    $0x1,%edx
		sar    $0x10,%esi
		mov    %ecx,%ebx
		add    %esi,%eax
		inc    %ecx
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x4(%esp),%dl
		dec    %dl
		mov    %dl,0x4(%esp)
		mov    %dl,%al
		sub    data_e5a50(%esi),%al
		add    $0x2,%al
		mov    %al,0x8(%esp)
		mov    0x1(%esp),%eax
		shl    $0x6,%esi
		sar    $0x18,%eax
		movb   $0xff,data_e5210(%esi,%eax,2)
		mov    %dl,%bh
		add    $0x3,%ecx
		add    %dl,%bh
		mov    $data_e5210,%eax
		mov    %bh,0x4(%esp)
		add    %esi,%eax
		mov    0x1(%esp),%edx
		mov    %ecx,%ebx
		sar    $0x18,%edx
		call   func_500c9
		movsbw 0x8(%esp),%ax
		cmp    data_edd74,%ax
		jle    jump_51380
		mov    %ax,data_edd74
		movswl %di,%eax
		imul   $0xb,%eax,%eax
		mov    data_1006be(%eax),%edx
		mov    data_1006bd(%eax),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_111be
	jump_51380:
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		shl    $0x2,%ecx
		mov    data_f0648(%ecx),%edx
		mov    0xb(%edx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		add    $data_cc968,%eax
		call   func_1134f
		mov    data_f0648(%ecx),%eax
		incb   0xe(%eax)
		mov    data_f0648(%ecx),%eax
		mov    0x5f(%eax),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %eax,%edx
		mov    data_f0648(%ecx),%eax
		mov    %dl,0x60(%eax)
		mov    data_f0648(%ecx),%eax
		cmpl   $0x0,0x77(%eax)
		je     jump_513ed
		cmpb   $0x6,0x5c(%eax)
		ja     jump_513ed
		call   func_11b77
		mov    %eax,%edx
		mov    data_f0648(%ecx),%eax
		mov    0x77(%eax),%eax
		mov    %dl,0x60(%eax)
	jump_513ed:
		movswl %di,%eax
		imul   $0xb,%eax,%eax
		mov    (%esp),%esi
		mov    data_110694,%bl
		inc    %esi
		xor    %ebp,%ebp
		mov    %si,(%esp)
		mov    %ebp,data_1006bc(%eax)
		dec    %bl
		mov    %bl,data_110694
		je     jump_5141e
	jump_51413:
		inc    %edi
	jump_51414:
		cmp    $0x20,%di
		jl     jump_51242
	jump_5141e:
		mov    (%esp),%edi
		call   func_4ecd7
		test   %di,%di
		jle    jump_51437
		mov    %di,data_f0b9e
		call   func_16d3e
	jump_51437:
		call   func_4559f
		call   func_5e9e8
	jump_51441:
		add    $0x10,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_51449:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%ecx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,0x14(%esp)
		mov    %dx,data_edd74
		mov    $0xfffffffc,%edi
		mov    $0x1,%ebp
	jump_5146d:
		lea    0x18(%esp),%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		call   func_500c9
		lea    0xc(%esp),%eax
		inc    %ecx
		mov    %ebp,%edx
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0x15(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		mov    %eax,%edx
		mov    0x11(%esp),%eax
		sar    $0x18,%eax
		inc    %ecx
		mov    %edx,data_f0648(,%eax,4)
		test   %edx,%edx
		je     jump_5166e
		cmpb   $0x0,0x14(%esp)
		jne    jump_514d8
		mov    data_f0648,%eax
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		mov    %ecx,%ebx
		call   func_1124a
		lea    0x20(%esp),%eax
		mov    %ebp,%edx
		call   func_500c9
	jump_514d8:
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		call   func_500c9
		mov    0x10(%esp),%al
		mov    0x20(%esp),%dh
		inc    %ecx
		cmp    %dh,%al
		je     jump_514fa
		sub    $0x3,%ecx
		jmp    jump_5168c
	jump_514fa:
		lea    0x1c(%esp),%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    0x11(%esp),%esi
		call   func_500c9
		mov    0x1c(%esp),%al
		inc    %ecx
		sar    $0x18,%esi
		mov    %ebp,%edx
		neg    %al
		mov    %ecx,%ebx
		mov    %al,data_e5a50(%esi)
		lea    0x8(%esp),%eax
		call   func_500c9
		mov    0x20(%esp),%bl
		inc    %ecx
		test   %bl,%bl
		jne    jump_51625
		mov    data_f0648(,%esi,4),%edx
		movsbw (%edx),%ax
		mov    %ax,0x4(%esp)
		movsbw 0x1(%edx),%ax
		mov    %ax,(%esp)
		mov    %bl,0x1c(%esp)
		jmp    jump_5161a
	jump_51557:
		mov    0x5(%esp),%ebx
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x4(%esp),%eax
		cmp    data_ba83c,%ax
		jl     jump_51625
		mov    data_ba83a,%eax
		mov    0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xb,%eax
		cmp    %eax,%edx
		jg     jump_51625
		mov    (%esp),%eax
		cmp    data_ba83e,%ax
		jl     jump_51625
		mov    data_ba83c,%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xb,%eax
		cmp    %eax,%edx
		jg     jump_51625
		mov    0x4(%esp),%eax
		xor    %edx,%edx
		sub    $0x2,%eax
		mov    %ax,%dx
		mov    data_ba842,%eax
		sar    $0x10,%eax
		sub    $0x4,%eax
		cmp    %eax,%edx
		jge    jump_51625
		mov    (%esp),%eax
		xor    %edx,%edx
		add    %edi,%eax
		mov    %ax,%dx
		mov    data_ba83e,%eax
		sar    $0x10,%eax
		sub    $0x8,%eax
		cmp    %eax,%edx
		jge    jump_51625
		mov    0x11(%esp),%edx
		mov    0x19(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		shl    $0x6,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x4(%esp),%al
		mov    %al,data_e5210(%edx)
		mov    (%esp),%al
		mov    %al,data_e5211(%edx)
		incb   0x1c(%esp)
	jump_5161a:
		cmpb   $0xc,0x1c(%esp)
		jl     jump_51557
	jump_51625:
		mov    0x11(%esp),%eax
		sar    $0x18,%eax
		mov    0x19(%esp),%edx
		mov    %eax,%ebx
		sar    $0x18,%edx
		shl    $0x6,%ebx
		movb   $0xff,data_e5210(%ebx,%edx,2)
		mov    0x1c(%esp),%dl
		mov    data_e5a50(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al
		add    $0x2,%al
		mov    data_edd74,%dx
		mov    %al,0x1c(%esp)
		cbtw
		cmp    %dx,%ax
		jle    jump_51668
		mov    %ax,data_edd74
	jump_51668:
		incb   0x14(%esp)
		jmp    jump_51671
	jump_5166e:
		add    $0x3,%ecx
	jump_51671:
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		mov    %ebp,%edx
		call   func_500c9
		mov    0x10(%esp),%bh
		inc    %ecx
		cmp    $0x4,%bh
		je     jump_5146d
	jump_5168c:
		mov    0x14(%esp),%al
		dec    %ecx
		test   %al,%al
		jle    jump_516c9
		cbtw
		mov    %ax,data_f0b9e
		mov    0x20(%esp),%ah
		test   %ah,%ah
		jne    jump_516ac
		call   func_17071
		jmp    jump_516c9
	jump_516ac:
		cmp    $0x1,%ah
		jne    jump_516bd
		mov    $0x4,%eax
		call   func_508e6
		jmp    jump_516c9
	jump_516bd:
		mov    0x1d(%esp),%eax
		sar    $0x18,%eax
		call   func_50aa7
	jump_516c9:
		mov    %ecx,%eax
		jmp    jump_51209


/*----------------------------------------------------------------*/
func_516d0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		mov    %eax,%ecx
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,0x18(%esp)
		xor    %dh,%dh
		mov    %ah,(%esp)
		mov    %dx,data_edd74
	jump_516ee:
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x5(%esp),%eax
		xor    %edx,%edx
		mov    -0x3(%esp),%ebx
		mov    0x4(%esp),%dl
		sar    $0x18,%ebx
		sar    $0x18,%eax
		shl    $0x2,%ebx
		inc    %ecx
		call   func_501ba
		mov    %eax,data_f0648(%ebx)
		test   %eax,%eax
		je     jump_51744
		mov    %eax,%ebx
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_11ee4
	jump_51744:
		cmpb   $0x0,(%esp)
		jne    jump_5175a
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
	jump_5175a:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x10(%esp),%al
		mov    0xc(%esp),%bl
		inc    %ecx
		cmp    %bl,%al
		je     jump_5177f
		sub    $0x3,%ecx
		jmp    jump_5192f
	jump_5177f:
		mov    -0x3(%esp),%esi
		mov    $data_e5ad0,%eax
		mov    $0x1,%edx
		sar    $0x18,%esi
		mov    %ecx,%ebx
		add    %esi,%eax
		inc    %ecx
		call   func_500c9
		mov    $0x1,%edx
		lea    0x18(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x10(%esp),%bh
		inc    %ecx
		test   %bh,%bh
		jne    jump_5181d
		mov    0x18(%esp),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x18(%esp)
		add    $0x2,%al
		mov    %esi,%edx
		mov    %al,0x14(%esp)
		mov    0x15(%esp),%eax
		shl    $0x6,%edx
		sar    $0x18,%eax
		movb   $0xff,data_e5210(%edx,%eax,2)
		mov    0x18(%esp),%bh
		add    %bh,%bh
		shl    $0x2,%esi
		mov    %bh,0x18(%esp)
		cmpl   $0x0,data_f0648(%esi)
		je     jump_51818
		mov    $0x1,%edx
		mov    %ecx,%ebx
		mov    data_f0648(%esi),%eax
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		mov    data_f0648(%esi),%eax
		mov    %ecx,%ebx
		inc    %eax
		call   func_500c9
		inc    %ecx
		jmp    jump_51827
	jump_51818:
		add    $0x2,%ecx
		jmp    jump_51827
	jump_5181d:
		mov    $0x2,%al
		mov    %al,0x14(%esp)
		mov    %al,0x18(%esp)
	jump_51827:
		movsbw 0x18(%esp),%ax
		mov    -0x3(%esp),%esi
		xor    %ah,%ah
		sar    $0x18,%esi
		movswl %ax,%edx
		mov    %esi,%eax
		shl    $0x6,%eax
		mov    %ecx,%ebx
		add    $data_e5210,%eax
		call   func_500c9
		mov    0x15(%esp),%eax
		sar    $0x18,%eax
		mov    data_f0648(,%esi,4),%edi
		add    %eax,%ecx
		test   %edi,%edi
		je     jump_51912
		movsbw 0x14(%esp),%ax
		cmp    data_edd74,%ax
		jle    jump_51877
		mov    %ax,data_edd74
	jump_51877:
		mov    -0x3(%esp),%eax
		sar    $0x18,%eax
		xor    %dl,%dl
		mov    %dl,data_e5a50(%eax)
		cmpb   $0x1,0x10(%esp)
		jne    jump_5190f
		cmpb   $0x0,(%esp)
		jne    jump_518a1
		mov    data_f0648,%eax
		call   func_169d7
	jump_518a1:
		mov    -0x3(%esp),%ebx
		sar    $0x18,%ebx
		shl    $0x6,%ebx
		mov    data_e5210(%ebx),%al
		mov    %al,0x18(%esp)
		mov    data_e5211(%ebx),%al
		mov    %al,0x14(%esp)
		mov    0x11(%esp),%edx
		mov    0x15(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_518f7
		lea    0x14(%esp),%edx
		lea    0x18(%esp),%eax
		call   func_50d3a
		mov    0x18(%esp),%al
		mov    %al,data_e5210(%ebx)
		mov    0x14(%esp),%al
		mov    %al,data_e5211(%ebx)
	jump_518f7:
		mov    0x11(%esp),%edx
		mov    0x15(%esp),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_13d02
	jump_5190f:
		incb   (%esp)
	jump_51912:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0xc(%esp),%al
		inc    %ecx
		cmp    $0x5,%al
		je     jump_516ee
	jump_5192f:
		mov    (%esp),%ah
		dec    %ecx
		test   %ah,%ah
		jle    jump_51955
		movsbw %ah,%ax
		mov    0x10(%esp),%dl
		mov    %ax,data_f0b9e
		test   %dl,%dl
		jne    jump_51950
		call   func_16d3e
		jmp    jump_51955
	jump_51950:
		call   func_50baf
	jump_51955:
		mov    %ecx,%eax
	jump_51957:
		add    $0x1c,%esp
		jmp    jump_50aa1

vtable_5195f:
		.long   func_51a5c
		.long   func_51a9c
		.long   func_51b2b
		.long   func_51b71


/*----------------------------------------------------------------*/
func_5196f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %eax
		mov    $data_fa784,%edx
		mov    %eax,%ebx
		mov    %edx,0x4(%esp)
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		mov    $data_fa784,%edi
		call   func_500c9
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		mov    %ecx,(%esp)
		call   func_500c9
		mov    $0x1,%ah
		lea    0x1(%ecx),%esi
		mov    %ah,0xc(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x10(%esp),%al
		mov    %esi,(%esp)
		call   func_184ca
		mov    %eax,%esi
		push   %edi
	jump_519c9:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_519e1
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_519c9
	jump_519e1:
		pop    %edi
		mov    $data_77fc4,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_519f0:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_51a08
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_519f0
	jump_51a08:
		pop    %edi
		mov    data_11024c,%edi
		test   %edi,%edi
		jne    jump_51a39
		mov    data_cc968,%edx
		xor    %ebp,%ebp
	jump_51a1b:
		test   %edx,%edx
		je     jump_51a3b
		test   %ebp,%ebp
		je     jump_51a32
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_51a34
	jump_51a32:
		mov    %edx,%ebp
	jump_51a34:
		mov    0x7b(%edx),%edx
		jmp    jump_51a1b
	jump_51a39:
		mov    %edi,%ebp
	jump_51a3b:
		test   %ebp,%ebp
		je     jump_51c69
		mov    0x8(%esp),%dl
		cmp    $0x3,%dl
		ja     jump_51bba
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *vtable_5195f(,%eax,4)


/*----------------------------------------------------------------*/
func_51a5c:
/*----------------------------------------------------------------*/
		mov    $data_77fcc,%esi
		xor    %eax,%eax
		mov    0x4(%esp),%edi
		mov    0x10(%esp),%al
		mov    $0x1,%ebx
		call   func_4ece4
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_51a7e:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_51a96
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_51a7e
	jump_51a96:
		pop    %edi
		jmp    jump_51b12


/*----------------------------------------------------------------*/
func_51a9c:
/*----------------------------------------------------------------*/
		mov    $0x1,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x10(%esp),%dl
		call   func_1832d
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_51b20
		cmpb   $0x0,0x5b(%ebp)
		je     jump_51ad0
		xor    %eax,%eax
		mov    0x5b(%ebp),%al
		mov    $0x1,%edx
		call   func_4ece4
		mov    %ebp,%eax
		call   func_18262
	jump_51ad0:
		mov    $0x1,%ebx
		mov    $data_77fd9,%esi
	jump_51ada:
		xor    %edx,%edx
		mov    %ebp,%eax
	jump_51ade:
		mov    0x10(%esp),%dl
		mov    0x4(%esp),%edi
		call   func_181a6
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_51af4:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_51b0c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_51af4
	jump_51b0c:
		pop    %edi
		mov    $0x1,%ebx
	jump_51b12:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   func_482a5
		jmp    jump_51bba
	jump_51b20:
		xor    %ch,%ch
		mov    %ch,0xc(%esp)
		jmp    jump_51bba


/*----------------------------------------------------------------*/
func_51b2b:
/*----------------------------------------------------------------*/
		mov    %ebp,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x10(%esp),%dl
		call   func_1832d
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_51b69
		mov    0x5a(%ebp),%cl
		test   %cl,%cl
		je     jump_51b59
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   func_4ece4
		mov    %ebp,%eax
		call   func_18262
	jump_51b59:
		mov    $data_77fe6,%esi
		mov    %ebp,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		jmp    jump_51ade
	jump_51b69:
		xor    %bh,%bh
		mov    %bh,0xc(%esp)
		jmp    jump_51bba


/*----------------------------------------------------------------*/
func_51b71:
/*----------------------------------------------------------------*/
		mov    $0x2,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x10(%esp),%dl
		call   func_1832d
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_51bb4
		mov    0x5d(%ebp),%bl
		test   %bl,%bl
		je     jump_51ba5
		xor    %eax,%eax
		mov    %bl,%al
		mov    $0x2,%edx
		call   func_4ece4
		mov    %ebp,%eax
		call   func_18262
	jump_51ba5:
		mov    $0x2,%ebx
		mov    $data_77ff1,%esi
		jmp    jump_51ada
	jump_51bb4:
		xor    %dh,%dh
		mov    %dh,0xc(%esp)
	jump_51bba:
		mov    0xc(%esp),%ah
		test   %ah,%ah
		jne    jump_51c69
		cmpb   $0x0,0x5e(%ebp)
		jne    jump_51bd0
		xor    %al,%al
		jmp    jump_51c1e
	jump_51bd0:
		mov    0x5f(%ebp),%dh
		test   %dh,%dh
		jne    jump_51bde
		mov    $0x1,%eax
		jmp    jump_51c1e
	jump_51bde:
		xor    %eax,%eax
		mov    $data_78000,%esi
		mov    %dh,%al
		mov    0x4(%esp),%edi
		call   func_4ece4
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_51bf9:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_51c11
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_51bf9
	jump_51c11:
		pop    %edi
		mov    0x10(%esp),%al
		mov    %al,0x5f(%ebp)
		mov    $0xffffffff,%eax
	jump_51c1e:
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_51c59
		mov    $data_78024,%esi
		lea    (%eax,%ebp,1),%edx
		mov    0x10(%esp),%al
		mov    0x4(%esp),%edi
		mov    %al,0x5e(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_51c40:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_51c58
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_51c40
	jump_51c58:
		pop    %edi
	jump_51c59:
		mov    $0x1,%ebx
		mov    0x4(%esp),%edx
		mov    %ebp,%eax
		call   func_482a5
	jump_51c69:
		mov    (%esp),%eax
	jump_51c6c:
		add    $0x14,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_51c74:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		xor    %cl,%cl
		mov    %dx,data_f0b9e
		jmp    jump_51d46
	jump_51c8f:
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %esi
		lea    0x10(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0x1(%esp),%eax
		mov    0x10(%esp),%dl
		sar    $0x18,%eax
		inc    %esi
		call   func_501ba
		test   %eax,%eax
		jne    jump_51ccc
		lea    0x1(%esi),%eax
		jmp    jump_51c6c
	jump_51ccc:
		test   %cl,%cl
		jne    jump_51cd4
		mov    %eax,%edi
		jmp    jump_51ce8
	jump_51cd4:
		movsbl %cl,%edx
		mov    %eax,data_f0644(,%edx,4)
		movsbw %cl,%ax
		mov    %ax,data_f0b9e
	jump_51ce8:
		mov    %esp,%eax
		mov    $0x1,%edx
		movsbl %cl,%ebp
		mov    %esi,%ebx
		add    %ebp,%eax
		inc    %esi
		call   func_500c9
		test   %cl,%cl
		jne    jump_51d09
		cmpb   $0x1,(%esp,%ebp,1)
		jle    jump_51d2a
		inc    %esi
		jmp    jump_51d4f
	jump_51d09:
		mov    (%esp,%ebp,1),%ah
		cmp    $0x2,%ah
		jl     jump_51d16
		cmp    $0x32,%ah
		jle    jump_51d2a
	jump_51d16:
		mov    data_f0b9e,%bx
		dec    %ebx
		sub    $0x3,%esi
		mov    %bx,data_f0b9e
		jmp    jump_51d4f
	jump_51d2a:
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    0x8(%esp),%bl
		inc    %esi
		cmp    $0x7,%bl
		jne    jump_51d4f
		inc    %cl
	jump_51d46:
		cmp    $0x2,%cl
		jl     jump_51c8f
	jump_51d4f:
		dec    %esi
		test   %cl,%cl
		jle    jump_51e0f
		xor    %dl,%dl
		mov    %dl,0xc(%esp)
		jmp    jump_51ddc
	jump_51d63:
		mov    0x9(%esp),%ecx
		sar    $0x18,%ecx
		mov    %ecx,%ebp
		mov    0x1(%esp,%ecx,1),%bl
		shl    $0x2,%ebp
		lea    (%ecx,%ecx,1),%eax
		cmp    $0x2,%bl
		jne    jump_51d99
		movw   $0x1,data_f0430(%eax)
		mov    %ecx,%ebx
		mov    0x60(%edi),%edx
		mov    data_f0648(%ebp),%eax
		sar    $0x18,%edx
		call   func_4609a
		jmp    jump_51dc5
	jump_51d99:
		cmp    $0x3,%bl
		jne    jump_51dbc
		movw   $0x2,data_f0430(%eax)
		mov    %ecx,%ebx
		mov    0x60(%edi),%edx
		mov    data_f0648(%ebp),%eax
		sar    $0x18,%edx
		call   func_461c6
		jmp    jump_51dd8
	jump_51dbc:
		movw   $0xffff,data_f0430(%eax)
	jump_51dc5:
		mov    %ecx,%ebx
		mov    0x60(%edi),%edx
		mov    data_f0648(%ebp),%eax
		sar    $0x18,%edx
		call   func_45ed2
	jump_51dd8:
		incb   0xc(%esp)
	jump_51ddc:
		movsbw 0xc(%esp),%ax
		cmp    data_f0b9e,%ax
		jl     jump_51d63
		cmpb   $0x1,(%esp)
		jne    jump_51dfe
		movw   $0x1,data_f0b8c
	jump_51dfe:
		mov    %edi,%eax
		call   func_1e61d
		call   func_1ef5c
		jmp    jump_51e84
	jump_51e0f:
		mov    (%esp),%bh
		test   %bh,%bh
		jne    jump_51e1f
		mov    %edi,%eax
	jump_51e18:
		call   func_1e61d
		jmp    jump_51e84
	jump_51e1f:
		cmp    $0x1,%bh
		jne    jump_51e34
		mov    $0x1,%ecx
		mov    %edi,%eax
		mov    %cx,data_f0b8c
		jmp    jump_51e18
	jump_51e34:
		mov    %bh,%ch
		sub    $0x32,%ch
		mov    %ch,(%esp)
		test   %ch,%ch
		jge    jump_51e44
		movb   $0xa,(%esp)
	jump_51e44:
		mov    -0x3(%esp),%edx
		sar    $0x18,%edx
		mov    $0xb,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %al,0x63(%edi)
		mov    -0x3(%esp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,0x64(%edi)
		call   func_4559f
		call   func_5e9e8
		mov    $0x20,%eax
		call   func_1033b
		call   func_499e4
	jump_51e84:
		mov    %esi,%eax
		jmp    jump_51c6c


/*----------------------------------------------------------------*/
func_51e8b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    %edx,(%esp)
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0xd(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x18,%eax
		inc    %ecx
		call   func_501ba
		mov    %ecx,%ebx
		mov    $0x1,%edx
		mov    %eax,%edi
		mov    %eax,%esi
		lea    0x8(%esp),%eax
		inc    %ecx
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		inc    %ecx
		test   %dx,%dx
		jne    jump_51f0b
		test   %edi,%edi
		jne    jump_51f13
		cmpb   $0x64,0x8(%esp)
		jae    jump_51f13
		jmp    jump_51fd1
	jump_51f0b:
		test   %edi,%edi
		je     jump_51fd1
	jump_51f13:
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		mov    (%esp),%ebx
		call   func_1124a
		test   %bx,%bx
		jne    jump_51f86
		mov    0x8(%esp),%bl
		cmp    $0x64,%bl
		jae    jump_51f77
		movzbl %bl,%edi
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x4(%esp),%dl
		shl    $0x2,%eax
		shl    $0x2,%edx
		sub    %edi,%eax
		mov    data_7423c(%edx,%eax,4),%eax
		call   func_28883
		mov    $0x1,%eax
		xor    %ebx,%ebx
		call   func_28422
		xor    %edx,%edx
		mov    0x8(%esp),%bl
		mov    0x4(%esp),%dl
		mov    %esi,%eax
		call   *data_f13b0(,%ebx,4)
		xor    %eax,%eax
		call   func_28422
		jmp    jump_51fd1
	jump_51f77:
		xor    %eax,%eax
		mov    %bl,%al
		sub    $0x64,%eax
		cwtl
		call   func_2c8a4
		jmp    jump_51fd1
	jump_51f86:
		mov    $0x1,%eax
		call   func_2ca39
		mov    0x8(%esp),%dl
		cmp    $0x64,%dl
		jae    jump_51fae
		xor    %ebx,%ebx
		mov    %dl,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x4(%esp),%dl
		call   *data_f1474(,%ebx,4)
		jmp    jump_51fc4
	jump_51fae:
		mov    %dl,%dh
		sub    $0x64,%dh
		mov    %dh,0x8(%esp)
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x8(%esp),%dl
		call   func_302e6
	jump_51fc4:
		xor    %eax,%eax
		call   func_2ca39
		movw   $0x0,0x57(%esi)
	jump_51fd1:
		mov    %ecx,%eax
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_51fdb:
		.long   func_52078
		.long   func_52084
		.long   func_520c5
		.long   func_520ce
		.long   func_520d7
		.long   func_520e0
		.long   func_52101


/*----------------------------------------------------------------*/
func_51ff7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %eax,%ebx
		lea    0x1(%eax),%ebp
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ebp,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ebp
		lea    0x8(%esp),%eax
		mov    %ebp,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0x1(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x18,%eax
		inc    %ebp
		call   func_501ba
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_52115
		movsbl 0x1(%eax),%edx
		movsbl (%eax),%eax
		call   func_1124a
		mov    0x8(%esp),%ah
		cmp    $0x6,%ah
		ja     jump_52115
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *vtable_51fdb(,%edx,4)


/*----------------------------------------------------------------*/
func_52078:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_3bc17
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_52084:
/*----------------------------------------------------------------*/
		mov    $0x1,%eax
		call   func_28422
		mov    $data_78030,%eax
		call   func_28883
		mov    $0x2,%eax
		call   func_499bd
		test   %ax,%ax
		je     jump_520ae
		mov    $0x3,%ebx
		jmp    jump_520b3
	jump_520ae:
		mov    $0x4,%ebx
	jump_520b3:
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_2a75a
		xor    %eax,%eax
		call   func_28422
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_520c5:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_3c09f
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_520ce:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_3c12d
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_520d7:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_3c3a5
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_520e0:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    %esp,%eax
		mov    %ebp,%ebx
		call   func_500c9
		mov    -0x3(%esp),%edx
		sar    $0x18,%edx
		mov    %esi,%eax
		add    $0xf,%edx
		call   func_3c548
		jmp    jump_52115


/*----------------------------------------------------------------*/
func_52101:
/*----------------------------------------------------------------*/
		sub    $0x88,%esp
		mov    $0x22,%ecx
		mov    %esp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_3bc67
	jump_52115:
		inc    %ebp
		mov    %ebp,%eax
		jmp    jump_51441


/*----------------------------------------------------------------*/
func_5211d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %eax,%ebx
		lea    0x1(%eax),%ebp
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ebp,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0xd(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x18,%eax
		inc    %ebp
		call   func_501ba
		mov    %ebp,%ebx
		mov    $0x2,%edx
		mov    %eax,%ecx
		mov    %eax,%esi
		lea    0x4(%esp),%eax
		add    $0x2,%ebp
		call   func_500c9
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		mov    %ebp,%ebx
		mov    0x2(%esp),%edi
		call   func_500c9
		sar    $0x10,%edi
		inc    %ebp
		test   %ecx,%ecx
		je     jump_522a0
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1124a
		test   %edi,%edi
		jne    jump_521ac
		mov    %ecx,%edx
		jmp    jump_52299
	jump_521ac:
		cmp    $0x7fff,%edi
		jne    jump_521d7
		mov    0x4c(%ecx),%edx
		mov    0x48(%ecx),%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		mov    %ecx,%eax
	jump_521cd:
		call   func_462a7
		jmp    jump_522a0
	jump_521d7:
		test   %edi,%edi
		jle    jump_521ee
		mov    %edi,%edx
		shl    $0x2,%edx
		sub    %edi,%edx
		shl    $0x3,%edx
		add    %edi,%edx
		mov    %ecx,%eax
		shl    $0x2,%edx
		jmp    jump_521cd
	jump_521ee:
		neg    %edi
		mov    %edi,%edx
		shl    $0x2,%edi
		sub    %edx,%edi
		shl    $0x3,%edi
		add    %edx,%edi
		mov    %ecx,%eax
		shl    $0x2,%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		call   func_45bfb
		sub    %edi,0x48(%ecx)
		mov    %ecx,%eax
		mov    0x5(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x18,%edx
		call   func_45ed2
		mov    $0x5,%eax
		mov    $0x1,%edx
		call   func_1033b
		mov    %dx,(%esp)
	jump_52230:
		mov    -0x2(%esp),%edi
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    $0x10,%edi
		call   func_454b3
		mov    %edi,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   func_45f29
		mov    0xb(%esi),%eax
		sar    $0x18,%eax
		mov    %edi,%ebx
		mov    data_70a5f(%eax),%ecx
		xor    %edx,%edx
		sar    $0x18,%ecx
		mov    %esi,%eax
		call   func_45ccb
		mov    (%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,(%esp)
		cmp    $0x19,%bx
		jl     jump_52230
		mov    %esi,%eax
		call   func_12124
		cmpl   $0x0,0x48(%esi)
		jg     jump_522a0
		mov    %esi,%edx
	jump_52299:
		xor    %eax,%eax
		call   func_1db1d
	jump_522a0:
		mov    %ebp,%eax
		jmp    jump_51c6c


/*----------------------------------------------------------------*/
func_522a7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		mov    %esp,%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    -0x3(%esp),%eax
		mov    0x4(%esp),%dl
		sar    $0x18,%eax
		inc    %ecx
		call   func_501ba
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		jne    jump_522f5
		add    $0x5,%ecx
		jmp    jump_5236d
	jump_522f5:
		mov    $0x1,%edx
		mov    %ecx,%ebx
		add    $0x6c,%eax
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x6d(%esi),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x6e(%esi),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    -0x3(%esp),%eax
		sar    $0x18,%eax
		inc    %ecx
		cmp    $0xffffffff,%eax
		je     jump_52349
		mov    (%esp),%al
		mov    %al,0x80(%esi)
	jump_52349:
		mov    $0x1,%edx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    -0x3(%esp),%eax
		sar    $0x18,%eax
		inc    %ecx
		cmp    $0xffffffff,%eax
		je     jump_5236d
		mov    (%esp),%al
		mov    %al,0x82(%edi)
	jump_5236d:
		mov    %ecx,%eax
	jump_5236f:
		add    $0x8,%esp
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_52377:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		mov    %esp,%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    -0x3(%esp),%eax
		mov    0x4(%esp),%dl
		sar    $0x18,%eax
		inc    %ecx
		call   func_501ba
		mov    %eax,%esi
		test   %eax,%eax
		jne    jump_523c2
		add    $0x3,%ecx
		jmp    jump_52445
	jump_523c2:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0xc(%esp),%ah
		inc    %ecx
		cmp    $0x1,%ah
		jb     jump_52407
		jbe    jump_5241b
		cmp    $0x2,%ah
		je     jump_52430
		jmp    jump_52445
	jump_52407:
		test   %ah,%ah
		jne    jump_52445
		mov    0x8(%esp),%al
		mov    %al,0x6f(%esi)
		mov    0x10(%esp),%al
		mov    %al,0x70(%esi)
		jmp    jump_52445
	jump_5241b:
		mov    0xd(%esp),%edx
		mov    0x5(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_11db2
		jmp    jump_52442
	jump_52430:
		xor    %edx,%edx
		mov    0x5(%esp),%eax
		mov    0x10(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
	jump_52442:
		mov    %eax,0x73(%esi)
	jump_52445:
		mov    %ecx,%eax
		add    $0x14,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_5244f:
		.long   func_5252e
		.long   func_525c3
		.long   func_5267c
		.long   func_526c6
		.long   func_5270b


/*----------------------------------------------------------------*/
func_52463:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x9c,%esp
		push   %eax
		mov    (%esp),%ebx
		add    $0x8b,%eax
		mov    $0x1,%edx
		mov    %eax,0x8c(%esp)
		lea    0x90(%esp),%eax
		call   func_500c9
		mov    (%esp),%edx
		inc    %edx
		lea    0x94(%esp),%eax
		mov    %edx,(%esp)
		mov    %edx,%ebx
		mov    $0x1,%edx
		call   func_500c9
		xor    %edx,%edx
		mov    0x8d(%esp),%eax
		mov    0x94(%esp),%dl
		sar    $0x18,%eax
		mov    (%esp),%ebx
		call   func_501ba
		inc    %ebx
		mov    $0x1,%edx
		mov    %eax,%ecx
		mov    %eax,%ebp
		mov    %ebx,(%esp)
		lea    0x9c(%esp),%eax
		mov    (%esp),%esi
		call   func_500c9
		mov    (%esp),%edx
		inc    %esi
		add    $0x2,%edx
		mov    %esi,(%esp)
		test   %ecx,%ecx
		jne    jump_5250c
		cmpb   $0x1,0x9c(%esp)
		jne    jump_52505
		mov    0x8c(%esp),%eax
		jmp    jump_5274c
	jump_52505:
		mov    %edx,%eax
		jmp    jump_5274c
	jump_5250c:
		cmpb   $0x4,0x9c(%esp)
		ja     jump_52742
		xor    %eax,%eax
		mov    0x9c(%esp),%al
		lea    0x61(%ecx),%esi
		jmp    *vtable_5244f(,%eax,4)


/*----------------------------------------------------------------*/
func_5252e:
/*----------------------------------------------------------------*/
		mov    (%esp),%ebx
		lea    0x98(%esp),%eax
		mov    %edx,(%esp)
		mov    $0x1,%edx
		call   func_500c9
		mov    0xb(%ecx),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ecx,%edx
		add    $data_cc968,%eax
		call   func_1137a
		mov    0x95(%esp),%eax
		sar    $0x18,%eax
		mov    data_fdaf6(,%eax,2),%al
		mov    0x77(%ecx),%esi
		mov    %al,0xe(%ecx)
		test   %esi,%esi
		je     jump_5257b
		mov    %al,0xe(%esi)
	jump_5257b:
		mov    0xb(%ebp),%eax
		sar    $0x18,%eax
		shl    $0x3,%eax
		sub    $0x8,%eax
		mov    %ebp,%edx
		add    $data_cc968,%eax
		call   func_1134f
		cmpb   $0x0,0x87(%ebp)
		je     jump_52742
		mov    0x98(%esp),%al
		mov    0x77(%ebp),%edi
		mov    %al,0x87(%ebp)
		test   %edi,%edi
		je     jump_52742
		mov    %al,0x87(%edi)
		jmp    jump_52742


/*----------------------------------------------------------------*/
func_525c3:
/*----------------------------------------------------------------*/
		mov    (%esp),%ebx
		mov    $0x88,%edx
		lea    0x4(%esp),%eax
		call   func_500c9
		mov    0x77(%ecx),%edx
		test   %edx,%edx
		je     jump_525df
		mov    %edx,%ebp
		jmp    jump_525e1
	jump_525df:
		xor    %ecx,%ecx
	jump_525e1:
		lea    0x6(%esp),%esi
		lea    0x2(%ebp),%edi
		push   %edi
	jump_525e9:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_52601
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_525e9
	jump_52601:
		pop    %edi
		mov    0x14(%esp),%al
		mov    %al,0x10(%ebp)
		mov    0x15(%esp),%al
		mov    %al,0x11(%ebp)
		mov    0x2f(%esp),%al
		mov    %al,0x2b(%ebp)
		mov    0x44(%esp),%al
		mov    %al,0x40(%ebp)
		mov    0x45(%esp),%al
		mov    %al,0x41(%ebp)
		mov    0x46(%esp),%al
		mov    %al,0x42(%ebp)
		mov    0x47(%esp),%al
		mov    %al,0x43(%ebp)
		mov    0x48(%esp),%eax
		mov    %ax,0x44(%ebp)
		mov    0x4a(%esp),%eax
		mov    %ax,0x46(%ebp)
		mov    0x50(%esp),%eax
		mov    %eax,0x4c(%ebp)
		mov    0x56(%esp),%eax
		mov    %ax,0x52(%ebp)
		mov    0x58(%esp),%eax
		mov    %ax,0x54(%ebp)
		test   %ecx,%ecx
		je     jump_52670
		xor    %edx,%edx
		mov    0x10(%ebp),%al
		mov    0x5c(%ecx),%dl
		mov    %al,0x10(%ecx)
		mov    %ecx,%eax
		call   func_17e6d
	jump_52670:
		addl   $0x88,(%esp)
		jmp    jump_52742


/*----------------------------------------------------------------*/
func_5267c:
/*----------------------------------------------------------------*/
		mov    0x5d(%ecx),%eax
		sar    $0x18,%eax
		mov    (%esp),%ebx
		call   func_119b6
		mov    %edx,(%esp)
		mov    $0x1,%edx
		mov    %esi,%eax
		call   func_500c9
		cmpl   $0x0,0x77(%ecx)
		jne    jump_526b2
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		call   func_1198d
		mov    %al,0x60(%ecx)
		jmp    jump_52742
	jump_526b2:
		mov    %ecx,%eax
		call   func_11b77
		mov    %eax,%edx
		mov    0x77(%ecx),%eax
		mov    %dl,0x60(%eax)
		jmp    jump_52742


/*----------------------------------------------------------------*/
func_526c6:
/*----------------------------------------------------------------*/
		mov    (%esp),%ebx
		mov    $0x88,%edx
		lea    0x4(%esp),%eax
		lea    0x6(%esp),%esi
		lea    0x2(%ecx),%edi
		call   func_500c9
		push   %edi
	jump_526df:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_526f7
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_526df
	jump_526f7:
		pop    %edi
		mov    0x14(%esp),%al
		mov    %al,0x10(%ecx)
		mov    0x8c(%esp),%eax
		mov    %eax,(%esp)
		jmp    jump_52742


/*----------------------------------------------------------------*/
func_5270b:
/*----------------------------------------------------------------*/
		mov    0x5d(%ecx),%eax
		mov    (%esp),%ebx
		sar    $0x18,%eax
		mov    $0x2,%edx
		call   func_119b6
		mov    %esi,%eax
		call   func_500c9
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		mov    (%esp),%edi
		call   func_1198d
		mov    %al,0x60(%ecx)
		add    $0x2,%edi
		mov    0x4c(%ecx),%eax
		mov    %edi,(%esp)
		mov    %eax,0x48(%ecx)
	jump_52742:
		mov    %ebp,%eax
		call   func_113e4
		mov    (%esp),%eax
	jump_5274c:
		add    $0xa0,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_52757:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		mov    %esp,%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%ah
		inc    %ecx
		test   %ah,%ah
		jne    jump_52798
		movsbw 0x4(%esp),%ax
		add    %ax,data_f0ba0
		jmp    jump_527a5
	jump_52798:
		movsbw 0x4(%esp),%ax
		add    %ax,data_f0ba2
	jump_527a5:
		mov    data_f0ba2,%si
		cmp    $0x32,%si
		jge    jump_527bd
		movw   $0x32,data_f0ba2
		jmp    jump_527cd
	jump_527bd:
		cmp    $0x96,%si
		jle    jump_527cd
		movw   $0x96,data_f0ba2
	jump_527cd:
		mov    data_f0ba2,%bx
		cmp    $0x32,%bx
		jge    jump_527e5
		movw   $0x32,data_f0ba2
		jmp    jump_527f5
	jump_527e5:
		cmp    $0x96,%bx
		jle    jump_527f5
		movw   $0x96,data_f0ba2
	jump_527f5:
		mov    %ecx,%eax
	jump_527f7:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_527ff:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		mov    %esp,%eax
		call   func_500c9
		mov    (%esp),%al
		cmp    data_ba84d,%al
		je     jump_52834
		mov    %al,data_ba84d
		mov    -0x3(%esp),%eax
		sar    $0x18,%eax
		call   func_44f30
	jump_52834:
		mov    %ecx,%eax
	jump_52836:
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5283d:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    %edx,data_74134
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_52848:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %eax,%ebx
		lea    0x1(%eax),%ecx
		mov    $0x1,%edx
		mov    %esp,%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    -0x3(%esp),%eax
		mov    0x4(%esp),%dl
		sar    $0x18,%eax
		inc    %ecx
		call   func_501ba
		mov    %ecx,%ebx
		mov    $0x1,%edx
		mov    %eax,%edi
		mov    %eax,%esi
		mov    %esp,%eax
		inc    %ecx
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    -0x3(%esp),%eax
		mov    0x4(%esp),%dl
		sar    $0x18,%eax
		inc    %ecx
		call   func_501ba
		mov    %eax,%ebp
		test   %edi,%edi
		je     jump_52936
		test   %eax,%eax
		je     jump_52936
		mov    (%edi),%bl
		sub    (%eax),%bl
		test   %bl,%bl
		jle    jump_528db
		mov    %bl,%al
		jmp    jump_528df
	jump_528db:
		mov    %bl,%al
		neg    %al
	jump_528df:
		movsbl %al,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x64,%edi
		sar    $0x1f,%edx
		idiv   %edi
		mov    0x1(%esi),%ah
		sub    0x1(%ebp),%ah
		test   %ah,%ah
		jle    jump_5290c
		mov    %ah,%dl
		jmp    jump_52910
	jump_5290c:
		mov    %ah,%dl
		neg    %dl
	jump_52910:
		test   %bl,%bl
		je     jump_52918
		cmp    %dl,%al
		jge    jump_52928
	jump_52918:
		test   %ah,%ah
		jle    jump_52922
		movb   $0x2,0x63(%esi)
		jmp    jump_52936
	jump_52922:
		movb   $0x0,0x63(%esi)
		jmp    jump_52936
	jump_52928:
		test   %bl,%bl
		jle    jump_52932
		movb   $0x1,0x63(%esi)
		jmp    jump_52936
	jump_52932:
		movb   $0x3,0x63(%esi)
	jump_52936:
		mov    %ecx,%eax
		add    $0x8,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_52940:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		mov    %eax,%esi
		mov    %eax,%ebx
		lea    0x1(%eax),%esi
		mov    $0x1,%edx
		lea    0x8(%esp),%eax
		call   func_500c9
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %esi
		mov    %esp,%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %esi
		lea    0x4(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    0x8(%esp),%ah
		inc    %esi
		cmp    $0x3,%ah
		jne    jump_52aa0
		xor    %edx,%edx
		mov    0x9(%esp),%eax
		mov    (%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_52b45
		mov    (%eax),%al
		sub    $0x6,%al
		mov    %al,0xc(%esp)
		mov    0x1(%edx),%al
		sub    $0x6,%al
		mov    0xc(%esp),%bl
		mov    %al,(%esp)
		test   %bl,%bl
		jge    jump_529d5
		xor    %bh,%bh
		mov    %bh,0xc(%esp)
		jmp    jump_529f7
	jump_529d5:
		mov    data_ba842,%edx
		mov    0x9(%esp),%eax
		sar    $0x10,%edx
		sar    $0x18,%eax
		sub    $0xc,%edx
		cmp    %edx,%eax
		jle    jump_529f7
		mov    data_ba844,%al
		sub    $0xc,%al
		mov    %al,0xc(%esp)
	jump_529f7:
		cmpb   $0x0,(%esp)
		jge    jump_52a07
		xor    %ch,%ch
		mov    %ch,(%esp)
		jmp    jump_52a2c
	jump_52a07:
		mov    data_ba83e,%edx
		mov    -0x3(%esp),%eax
		sar    $0x10,%edx
		sar    $0x18,%eax
		sub    $0xc,%edx
		cmp    %edx,%eax
		jle    jump_52a2c
		mov    data_ba840,%al
		sub    $0xc,%al
		mov    %al,(%esp)
	jump_52a2c:
		cmpw   $0x0,data_110584
		je     jump_52b24
		cmpw   $0x0,data_110582
		je     jump_52b24
		mov    data_110692,%edx
		sar    $0x18,%edx
		movsbw 0x8(%esp),%bx
		mov    %bx,data_10065c(,%edx,2)
		inc    %edx
		movsbw 0xc(%esp),%bx
		mov    %bx,data_10063a(,%edx,2)
		movsbw (%esp),%bx
		mov    %bx,data_10061a(,%edx,2)
		movsbw 0x4(%esp),%bx
		mov    %edx,%eax
		mov    %bx,data_1005fa(,%edx,2)
		mov    $0x10,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,data_110695
		jmp    jump_52b45
	jump_52aa0:
		cmp    $0x2,%ah
		jne    jump_52a2c
		mov    $0x9,%eax
		call   func_1033b
		cmpb   $0x0,0xc(%esp)
		jne    jump_52b11
	jump_52ab6:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5046b
		test   %ax,%ax
		jne    jump_52b18
		call   func_5e9e8
		call   func_499e4
		jmp    jump_52ab6
	jump_52ae2:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5046b
		cmp    $0x1,%ax
		je     jump_52b18
		call   func_5e9e8
		call   func_499e4
		decb   0xc(%esp)
	jump_52b11:
		cmpb   $0x0,0xc(%esp)
		jg     jump_52ae2
	jump_52b18:
		call   func_4559f
		call   func_5e9e8
		jmp    jump_52b45
	jump_52b24:
		mov    0x1(%esp),%ecx
		mov    -0x3(%esp),%ebx
		mov    0x9(%esp),%edx
		mov    0x5(%esp),%eax
		sar    $0x18,%ecx
		sar    $0x18,%ebx
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_50339
	jump_52b45:
		mov    %esi,%eax
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_52b4f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x2,%edx
		mov    %eax,%ebx
		mov    %esp,%eax
		add    $0x2,%ecx
		call   func_500c9
		mov    $0x2,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    data_110250,%edx
		add    $0x2,%ecx
		test   %edx,%edx
		je     jump_52bcf
		mov    data_11068e,%eax
		sar    $0x18,%eax
		imul   $0x10b,%eax,%eax
		mov    0x2(%esp),%edx
		mov    %ecx,%ebx
		sar    $0x10,%edx
		add    $data_ff0bc,%eax
		call   func_500c9
		mov    data_11068e,%edx
		sar    $0x18,%edx
		inc    %edx
		mov    (%esp),%eax
		mov    $0x10,%ebx
		mov    %ax,data_10016a(,%edx,2)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,data_110691
		jmp    jump_52bf6
	jump_52bcf:
		mov    0x2(%esp),%edx
		mov    $data_110586,%eax
		mov    %ecx,%ebx
		sar    $0x10,%edx
		call   func_500c9
		mov    $data_110586,%ebx
		mov    (%esp),%eax
		mov    %ebx,data_110250
		mov    %ax,data_11057c
	jump_52bf6:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		add    %ecx,%eax
	jump_52bff:
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_52c06:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x18,%esp
		mov    %eax,%ecx
		mov    $0x1,%esi
	jump_52c14:
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   func_500c9
		lea    0x4(%esp),%eax
		inc    %ecx
		mov    %esi,%edx
		mov    %ecx,%ebx
		call   func_500c9
		lea    0x14(%esp),%eax
		inc    %ecx
		mov    %esi,%edx
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		lea    0x10(%esp),%eax
		add    $0x2,%ecx
		mov    %esi,%edx
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		inc    %ecx
		test   %dx,%dx
		jle    jump_52c6b
		mov    %edx,%ebx
		inc    %ebx
		mov    %ebx,(%esp)
	jump_52c6b:
		movsbw 0x14(%esp),%ax
		mov    data_ba844,%dx
		imul   %eax,%edx
		movsbw 0x4(%esp),%ax
		add    %edx,%eax
		cmpb   $0x0,0x8(%esp)
		jne    jump_52c9a
		movswl %ax,%edx
		mov    (%esp),%eax
		mov    %ax,data_78a04(,%edx,2)
		jmp    jump_52ca8
	jump_52c9a:
		movswl %ax,%edx
		mov    (%esp),%eax
		mov    %ax,data_83db4(,%edx,2)
	jump_52ca8:
		mov    0x11(%esp),%edx
		xor    %ebx,%ebx
		mov    0x1(%esp),%eax
		mov    0x10(%esp),%bl
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_10957
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   func_500c9
		mov    0xc(%esp),%dh
		inc    %ecx
		cmp    $0x10,%dh
		je     jump_52c14
		call   func_4559f
		dec    %ecx
		call   func_5e9e8
		mov    %ecx,%eax
		add    $0x18,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_52cf1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    $0x2,%edx
		mov    %eax,%ebx
		mov    %esp,%eax
		add    $0x2,%ecx
		call   func_500c9
		mov    $0x1,%edx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    -0x2(%esp),%ebx
		mov    0x4(%esp),%al
		sar    $0x10,%ebx
		inc    %ecx
		mov    %al,data_fdf86(%ebx)
		mov    %ecx,%eax
		jmp    jump_52bff


/*----------------------------------------------------------------*/
func_52d33:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $0x10,%edx
		mov    %eax,%ebx
		mov    $data_10018c,%eax
		call   func_500c9
		mov    $0x2,%eax
		call   func_4e4c4
		call   func_4e622
		call   func_4ec51
		call   func_4ecd7
		call   func_55ebc
		xor    %edx,%edx
		mov    $data_10018c,%eax
		call   func_4fd6b
		mov    $0x1,%eax
		call   w_dos_exit
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_52d7d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   func_5af1b
		mov    $0x1,%edx
		mov    $data_ff0b7,%eax
		mov    %ecx,%ebx
		call   func_500c9
		inc    %ecx
		call   func_4f369
	jump_52d9e:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_52da4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    $0x1,%edx
		call   func_5cd0d
		mov    %ecx,%ebx
		mov    $data_ff0b8,%eax
		inc    %ecx
		call   func_500c9
		call   func_4f3bd
		call   func_4f427
		jmp    jump_52d9e
.data
		.ascii  "\x90"
data_52dcf:
		.ascii   "wsqolfe"
		.ascii  "\x13\x12\x11\x10\x0f\x0e\x0d\x0c"
		.ascii  "\x0b\x0a\x09\x08\x07\x06\x05\x04"
		.ascii  "\x03\x02\x01"
data_52de9:
		.long   jump_52f01
		.long   func_52e69
		.long   func_52e7d
		.long   func_52ec9
		.long   func_52ed2
		.long   func_52edb
		.long   func_52ee4
		.long   func_52eed
		.long   func_52ef6
		.long   func_52f75
		.long   func_52f7e
		.long   func_52f8a
		.long   func_52fa2
		.long   func_52fae
		.long   func_52fc6
		.long   func_52fd2
		.long   func_52fea
		.long   func_52ff6
		.long   func_53002
		.long   func_5300e
		.long   func_52e73
		.long   func_52ec0
		.long   func_52f6c
		.long   func_52f96
		.long   func_52fba
		.long   func_52fde
		.long   func_5301a
.text


/*----------------------------------------------------------------*/
func_52e55:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x74,%esp
		mov    %eax,%esi
		call   func_4a321
		jmp    jump_52f01


/*----------------------------------------------------------------*/
func_52e69:
/*----------------------------------------------------------------*/
		call   func_506f3
		jmp    jump_52f01


/*----------------------------------------------------------------*/
func_52e73:
/*----------------------------------------------------------------*/
		call   func_50751
		jmp    jump_52f01


/*----------------------------------------------------------------*/
func_52e7d:
/*----------------------------------------------------------------*/
		mov    $0x2,%edx
		lea    0x64(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    0x62(%esp),%edx
		mov    %esp,%eax
		add    $0x2,%esi
		sar    $0x10,%edx
		mov    %esi,%ebx
		call   func_500c9
		mov    0x62(%esp),%eax
		mov    0x65(%esp),%edx
		sar    $0x10,%eax
		mov    %esp,%ebx
		add    %eax,%esi
		mov    0x69(%esp),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		call   func_507be
		jmp    jump_52f01


/*----------------------------------------------------------------*/
func_52ec0:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52848
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52ec9:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_50d9f
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52ed2:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_51449
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52edb:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_516d0
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52ee4:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_5196f
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52eed:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_51c74
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52ef6:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		xor    %edx,%edx
	jump_52efa:
		call   func_51e8b
	jump_52eff:
		mov    %eax,%esi
	jump_52f01:
		mov    $0x1,%edx
		lea    0x70(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    0x70(%esp),%ah
		inc    %esi
		test   %ah,%ah
		je     jump_53026
		cmp    $0x2,%ah
		je     jump_52f2b
		xor    %edx,%edx
		mov    %edx,data_1102b8
	jump_52f2b:
		cmpb   $0x2,0x70(%esp)
		jne    jump_52f54
		mov    $0x1,%edx
		lea    0x6c(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %esi
		lea    0x68(%esp),%eax
		mov    %esi,%ebx
		call   func_500c9
		inc    %esi
	jump_52f54:
		mov    0x70(%esp),%al
		mov    $0x1b,%ecx
		mov    $data_52dcf,%edi
		repnz scas %es:(%edi),%al
		jmp    *data_52de9(,%ecx,4)


/*----------------------------------------------------------------*/
func_52f6c:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    %esi,%eax
		jmp    jump_52efa


/*----------------------------------------------------------------*/
func_52f75:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_51ff7
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52f7e:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_5211d
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52f8a:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_522a7
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52f96:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52377
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fa2:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52463
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fae:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52757
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fba:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_527ff
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fc6:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_5283d
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fd2:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52940
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fde:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52b4f
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52fea:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52c06
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_52ff6:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52cf1
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_53002:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52d33
		jmp    jump_52f01


/*----------------------------------------------------------------*/
func_5300e:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52d7d
		jmp    jump_52eff


/*----------------------------------------------------------------*/
func_5301a:
/*----------------------------------------------------------------*/
		mov    %esi,%eax
		call   func_52da4
		jmp    jump_52eff
	jump_53026:
		mov    $0x9,%eax
		call   func_1033b
	jump_53030:
		call   func_5046b
		cmp    $0x1,%ax
		je     jump_5305d
		call   func_5e9e8
		call   func_499e4
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		jmp    jump_53030
	jump_5305d:
		call   func_5e9e8
		add    $0x74,%esp
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_5306a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		xor    %ecx,%ecx
	jump_53073:
		mov    -0x2(%esp),%esi
		movswl %cx,%edx
		mov    $0x4,%ebx
		shl    $0x2,%edx
		sar    $0x10,%esi
		add    $data_10081c,%edx
		mov    %esi,%eax
		inc    %ecx
		call   w_dos_read
		cmp    $0xc,%cx
		jl     jump_53073
		mov    %esi,%eax
		call   func_filelength_
		mov    %eax,%ecx
		mov    %esi,%eax
		xor    %ebp,%ebp
		call   w_dos_tell
		sub    %eax,%ecx
	jump_530ad:
		sub    $0x40,%ecx
		test   %ecx,%ecx
		jl     jump_530bb
		mov    $0x40,%esi
		jmp    jump_530be
	jump_530bb:
		lea    0x40(%ecx),%esi
	jump_530be:
		mov    $data_10084c,%edx
		mov    -0x2(%esp),%edi
		mov    %esi,%ebx
		sar    $0x10,%edi
		add    %ebp,%edx
		mov    %edi,%eax
		call   w_dos_read
		add    %esi,%ebp
		test   %ecx,%ecx
		jg     jump_530ad
		mov    $0x2,%ebx
		mov    $0xffffff38,%edx
		mov    %edi,%eax
		call   w_dos_lseek
		jmp    jump_50a9d


/*----------------------------------------------------------------*/
func_530f1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		mov    %eax,%edi
		mov    $0x4,%edx
		mov    %eax,%ebx
		mov    %esp,%eax
		call   func_500c9
		cmpl   $0x0,(%esp)
		je     jump_53166
		mov    $0x1,%edx
		add    $0x4,%edi
		lea    0x18(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x18(%esp),%ah
		inc    %edi
		cmp    $0x1,%ah
		jb     jump_53135
		jbe    jump_53148
		cmp    $0x2,%ah
		je     jump_53157
		jmp    jump_53169
	jump_53135:
		test   %ah,%ah
		jne    jump_53169
		call   func_19d47
		cmp    (%esp),%eax
		je     jump_53169
		jmp    jump_532e9
	jump_53148:
		call   func_19d47
		cmp    (%esp),%eax
		jae    jump_53169
		jmp    jump_532e9
	jump_53157:
		call   func_19d47
		cmp    (%esp),%eax
		jbe    jump_53169
		jmp    jump_532e9
	jump_53166:
		add    $0x5,%edi
	jump_53169:
		mov    $0x1,%edx
		lea    0x3(%edi),%esi
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x10(%esp),%bh
		inc    %edi
		test   %bh,%bh
		je     jump_531d1
		mov    $0x1,%edx
		lea    0x18(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		xor    %edx,%edx
		mov    0x9(%esp),%eax
		mov    0x10(%esp),%dl
		sar    $0x18,%eax
		mov    %esi,%edi
		call   func_501ba
		test   %eax,%eax
		jne    jump_531ca
		cmpb   $0x0,0x18(%esp)
	jump_531c3:
		jne    jump_531d3
		jmp    jump_532e9
	jump_531ca:
		cmpb   $0x1,0x18(%esp)
		jmp    jump_531c3
	jump_531d1:
		mov    %esi,%edi
	jump_531d3:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x18(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x10(%esp),%al
		inc    %edi
		test   %al,%al
		je     jump_5327f
		mov    $0x200,%edx
		mov    $data_7803d,%eax
		call   func_4976f
		xor    %ebx,%ebx
		movswl %ax,%esi
		mov    $0x3ee,%edx
		mov    %esi,%eax
		call   w_dos_lseek
		mov    0xd(%esp),%edx
		sar    $0x18,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		lea    -0x1(%eax),%edx
		mov    $0x1,%ebx
		mov    %esi,%eax
		call   w_dos_lseek
		mov    $0x1,%ebx
		lea    0x14(%esp),%edx
		mov    %esi,%eax
		call   w_dos_read
		mov    %esi,%eax
		call   w_dos_close
		cmpb   $0x0,0x14(%esp)
		je     jump_53278
		cmpb   $0x1,0x18(%esp)
	jump_53271:
		jne    jump_5327f
		jmp    jump_532e9
	jump_53278:
		cmpb   $0x0,0x18(%esp)
		jmp    jump_53271
	jump_5327f:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x9(%esp),%edx
		sar    $0x18,%edx
		inc    %edi
		cmp    $0xffffffff,%edx
		je     jump_532f7
		mov    data_11024c,%eax
		xor    %ebx,%ebx
		mov    0x5b(%eax),%bl
		cmp    %edx,%ebx
		je     jump_532e2
		xor    %ebx,%ebx
		mov    0x5a(%eax),%bl
		cmp    %edx,%ebx
		je     jump_532e2
		xor    %ebx,%ebx
		mov    0x5d(%eax),%bl
		cmp    %edx,%ebx
		je     jump_532e2
		xor    %ebx,%ebx
		mov    0x5e(%eax),%bl
		cmp    %edx,%ebx
		je     jump_532e2
		mov    0x5f(%eax),%al
		and    $0xff,%eax
		cmp    %edx,%eax
		jne    jump_532f0
	jump_532e2:
		cmpb   $0x1,0x10(%esp)
	jump_532e7:
		jne    jump_532f7
	jump_532e9:
		xor    %edx,%edx
		jmp    jump_5350b
	jump_532f0:
		cmpb   $0x0,0x10(%esp)
		jmp    jump_532e7
	jump_532f7:
		xor    %edx,%edx
		mov    $0x1,%cl
		mov    %dx,0x8(%esp)
		mov    %dx,0x4(%esp)
		xor    %ch,%ch
	jump_53307:
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x9(%esp),%eax
		sar    $0x18,%eax
		inc    %edi
		cmp    $0xffffffff,%eax
		je     jump_534a6
		mov    $0x1,%edx
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x4(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x8(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		movsbw 0xc(%esp),%ax
		mov    0x4(%esp),%esi
		inc    %edi
		cmp    %si,%ax
		jle    jump_53385
		mov    0xc(%esp),%al
		mov    %al,0x18(%esp)
		mov    0x4(%esp),%al
		mov    %al,0xc(%esp)
		movsbw 0x18(%esp),%ax
		mov    %ax,0x4(%esp)
	jump_53385:
		movsbw 0x10(%esp),%ax
		cmp    0x8(%esp),%ax
		jle    jump_533ad
		mov    0x10(%esp),%al
		mov    %al,0x18(%esp)
		mov    0x8(%esp),%al
		mov    %al,0x10(%esp)
		movsbw 0x18(%esp),%ax
		mov    %ax,0x8(%esp)
	jump_533ad:
		mov    0xd(%esp),%esi
		mov    data_ba842,%edx
		sar    $0x18,%esi
		sar    $0x10,%edx
		imul   %edx,%esi
		mov    0x4(%esp),%al
		mov    %ch,0x14(%esp)
		mov    0xc(%esp),%ah
		mov    0x9(%esp),%edx
		sub    %ah,%al
		sar    $0x18,%edx
		mov    %al,0xc(%esp)
		mov    0x8(%esp),%al
		add    %edx,%esi
		mov    0x10(%esp),%dl
		shl    $0x2,%esi
		sub    %dl,%al
		add    $data_cc998,%esi
		mov    %al,0x10(%esp)
		jmp    jump_5343b
	jump_533f4:
		mov    %esi,%edx
		mov    %ch,0x18(%esp)
		jmp    jump_53420
	jump_533fc:
		mov    (%edx),%eax
		movsbw 0xe(%eax),%bx
		movsbw %cl,%ax
		sub    %eax,%ebx
		cmp    $0x2,%bx
		jae    jump_53413
		incb   0x14(%esp)
	jump_53413:
		mov    0x18(%esp),%bl
		inc    %bl
		add    $0x4,%edx
		mov    %bl,0x18(%esp)
	jump_53420:
		mov    0x18(%esp),%al
		cmp    0xc(%esp),%al
		jle    jump_533fc
		mov    data_ba842,%eax
		sar    $0x10,%eax
		shl    $0x2,%eax
		add    %eax,%esi
		decb   0x10(%esp)
	jump_5343b:
		cmp    0x10(%esp),%ch
		jle    jump_533f4
		mov    $0x1,%edx
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x10(%esp),%bl
		inc    %edi
		cmp    $0x1,%bl
		jb     jump_53475
		jbe    jump_53488
		cmp    $0x2,%bl
		je     jump_53497
		jmp    jump_534a9
	jump_53475:
		cmp    %bl,%ch
		jne    jump_534a9
		mov    0x14(%esp),%al
		cmp    0xc(%esp),%al
		je     jump_534a9
		jmp    jump_532e9
	jump_53488:
		mov    0x14(%esp),%al
		cmp    0xc(%esp),%al
		jge    jump_534a9
		jmp    jump_532e9
	jump_53497:
		mov    0x14(%esp),%al
		cmp    0xc(%esp),%al
		jle    jump_534a9
		jmp    jump_532e9
	jump_534a6:
		add    $0x5,%edi
	jump_534a9:
		cmp    $0x1,%cl
		jne    jump_534b5
		mov    $0x3,%cl
		jmp    jump_53307
	jump_534b5:
		cmp    $0x3,%cl
		jne    jump_53307
		mov    $0x2,%edx
		lea    0x4(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x2,%edx
		add    $0x2,%edi
		lea    0x8(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x4(%esp),%ebx
		add    $0x2,%edi
		test   %bx,%bx
		je     jump_53509
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		mov    data_fdf86(%eax),%al
		mov    0x8(%esp),%ecx
		xor    %ah,%ah
		cmp    %cx,%ax
		jne    jump_532e9
	jump_53509:
		mov    %edi,%edx
	jump_5350b:
		mov    %edx,%eax
		jmp    jump_51957


/*----------------------------------------------------------------*/
func_53512:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%eax
		mov    data_100818(,%eax,4),%eax
		add    %ebx,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_53523:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    %edx,data_11024c
	jump_53536:
		mov    $0x4,%edx
		add    $0x2,%ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		add    $0x4,%ecx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x4(%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_527f7
		cmp    (%esp),%esi
		jne    jump_53584
		mov    %ecx,%eax
		call   func_530f1
		test   %eax,%eax
		je     jump_53584
		call   func_52e55
		jmp    jump_527f7
	jump_53584:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%ecx
		jmp    jump_53536


/*----------------------------------------------------------------*/
func_5358f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,data_11024c
		mov    $0x1,%edx
		xor    %esi,%esi
		call   func_53512
		mov    %eax,%ecx
	jump_535b1:
		mov    $0x4,%edx
		add    $0x2,%ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		add    $0x4,%ecx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0x4(%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_5236f
		cmp    (%esp),%edi
		jne    jump_53610
		mov    %ecx,%eax
		call   func_530f1
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_5236f
		movswl %si,%eax
		incb   data_11044c(%eax)
		mov    %ecx,%eax
		call   func_52e55
		jmp    jump_5236f
	jump_53610:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		inc    %esi
		add    %eax,%ecx
		jmp    jump_535b1


/*----------------------------------------------------------------*/
func_5361c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%esi
		mov    data_11024c,%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,data_11024c
		mov    $0x2,%edx
		xor    %edi,%edi
		call   func_53512
		mov    %eax,%ecx
	jump_53645:
		mov    $0x1,%edx
		add    $0x2,%ecx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x18(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x14(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x10(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_53776
		movswl %di,%eax
		cmpb   $0x0,data_1102bc(%eax)
		jne    jump_53767
		cmpb   $0xa,0x10(%esp)
		jae    jump_536f6
		xor    %edx,%edx
		mov    0xd(%esp),%eax
		mov    0xc(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		jmp    jump_53715
	jump_536f6:
		xor    %edx,%edx
		mov    0xb(%esi),%eax
		mov    0x10(%esp),%dl
		sar    $0x18,%eax
		sub    $0x9,%edx
		cmp    %edx,%eax
		jne    jump_53713
		mov    %esi,%eax
		mov    %esi,data_11024c
		jmp    jump_53715
	jump_53713:
		xor    %eax,%eax
	jump_53715:
		cmp    %eax,%esi
		jne    jump_53767
		xor    %edx,%edx
		movsbl (%eax),%eax
		mov    0x8(%esp),%dl
		cmp    %eax,%edx
		jg     jump_53767
		xor    %ebx,%ebx
		movsbl 0x1(%esi),%edx
		mov    0x4(%esp),%bl
		cmp    %edx,%ebx
		jg     jump_53767
		xor    %ebx,%ebx
		mov    0x18(%esp),%bl
		cmp    %eax,%ebx
		jl     jump_53767
		xor    %eax,%eax
		mov    0x14(%esp),%al
		cmp    %edx,%eax
		jl     jump_53767
		mov    %ecx,%eax
		call   func_530f1
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_53776
		movswl %di,%eax
		incb   data_1102bc(%eax)
		mov    %edx,%eax
		call   func_52e55
		jmp    jump_53776
	jump_53767:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		inc    %edi
		add    %eax,%ecx
		jmp    jump_53645
	jump_53776:
		mov    %ebp,data_11024c
		add    $0x1c,%esp
		jmp    jump_50aa0

vtable_53787:
		.long   func_538a2
		.long   func_53874
		.long   func_53882
		.long   func_5389c


/*----------------------------------------------------------------*/
func_53797:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    %eax,%edi
		mov    %edx,0x4(%esp)
		mov    %ebx,0x10(%esp)
		mov    data_11024c,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    %edx,data_11024c
		test   %bx,%bx
		jne    jump_537cb
		mov    $0x3,%edx
		xor    %eax,%eax
		mov    $data_110514,%ebp
		jmp    jump_537d7
	jump_537cb:
		mov    $0x4,%edx
		xor    %eax,%eax
		mov    $data_110320,%ebp
	jump_537d7:
		call   func_53512
		mov    %eax,%ecx
		xor    %esi,%esi
	jump_537e0:
		mov    $0x1,%edx
		add    $0x2,%ecx
		lea    0x1c(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x18(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x14(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %ecx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    0xc(%esp),%ebx
		add    $0x2,%ecx
		test   %bx,%bx
		je     jump_5392e
		movswl %si,%eax
		cmpb   $0x0,(%eax,%ebp,1)
		jne    jump_5393e
		xor    %edx,%edx
		mov    0x19(%esp),%eax
		mov    0x18(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		cmp    %eax,%edi
		jne    jump_5393e
		mov    0x14(%esp),%dh
		xor    %ebx,%ebx
		cmp    $0x3,%dh
		ja     jump_538a7
		xor    %eax,%eax
		mov    %dh,%al
		jmp    *vtable_53787(,%eax,4)


/*----------------------------------------------------------------*/
func_53874:
/*----------------------------------------------------------------*/
		mov    0x4c(%edi),%eax
		mov    0x48(%edi),%edx
		sar    %eax
		cmp    %edx,%eax
	jump_5387e:
		jle    jump_538a7
		jmp    func_538a2


/*----------------------------------------------------------------*/
func_53882:
/*----------------------------------------------------------------*/
		mov    $0xa,%edx
		mov    0x4c(%edi),%eax
		mov    %edx,0x8(%esp)
		mov    %eax,%edx
		sar    $0x1f,%edx
		idivl  0x8(%esp)
		cmp    0x48(%edi),%eax
		jmp    jump_5387e


/*----------------------------------------------------------------*/
func_5389c:
/*----------------------------------------------------------------*/
		cmpl   $0x0,0x48(%edi)
		jg     jump_538a7


/*----------------------------------------------------------------*/
func_538a2:
/*----------------------------------------------------------------*/
		mov    $0x1,%ebx
	jump_538a7:
		cmp    $0x1,%ebx
		jne    jump_5392e
		mov    0x4(%esp),%eax
		mov    %eax,data_11024c
		mov    %ecx,%eax
		call   func_530f1
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_5392e
		test   %edi,%edi
		je     jump_53917
		cmpl   $0x0,0x4(%esp)
		je     jump_53917
		cmpw   $0x0,0x10(%esp)
		jne    jump_538fb
		mov    0x60(%edi),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x4(%esp),%eax
		mov    %dl,0x63(%eax)
		jmp    jump_53917
	jump_538fb:
		mov    0x4(%esp),%edx
		mov    0x60(%edx),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,0x63(%edi)
	jump_53917:
		movswl %si,%eax
		incb   (%eax,%ebp,1)
		call   func_4ffef
		mov    %ebx,%eax
		call   func_52e55
		call   func_5001f
	jump_5392e:
		mov    (%esp),%eax
		mov    %eax,data_11024c
		add    $0x20,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_5393e:
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		inc    %esi
		add    %eax,%ecx
		jmp    jump_537e0


/*----------------------------------------------------------------*/
func_5394d:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,0xc(%esp)
		mov    data_11024c,%eax
		xor    %edx,%edx
		mov    %eax,0x8(%esp)
		mov    %edx,data_11024c
		test   %bx,%bx
		jne    jump_5398b
		mov    $0x5,%edx
		xor    %eax,%eax
		mov    $data_110384,%ebp
		call   func_53512
		mov    %eax,%edi
		mov    %ebp,0x4(%esp)
		jmp    jump_539a2
	jump_5398b:
		mov    $0x6,%edx
		xor    %eax,%eax
		mov    $data_1103e8,%ebx
		call   func_53512
		mov    %eax,%edi
		mov    %ebx,0x4(%esp)
	jump_539a2:
		xor    %ebx,%ebx
		mov    %bx,0x10(%esp)
	jump_539a9:
		mov    $0x1,%edx
		add    $0x2,%edi
		lea    0x24(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x18(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x20(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x1c(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %edi
		lea    0x14(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x14(%esp),%eax
		add    $0x2,%edi
		test   %ax,%ax
		je     jump_53c01
		mov    0xe(%esp),%eax
		mov    0x4(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		cmpb   $0x0,(%eax)
		jne    jump_53be9
		cmpb   $0xa,0x24(%esp)
		jae    jump_53a43
		xor    %edx,%edx
		mov    0x21(%esp),%eax
		mov    0x18(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		mov    %eax,%ebx
		jmp    jump_53a76
	jump_53a43:
		xor    %eax,%eax
		mov    0xb(%ecx),%edx
		mov    0x24(%esp),%al
		sar    $0x18,%edx
		sub    $0x9,%eax
		cmp    %eax,%edx
		jne    jump_53a60
		mov    %ecx,%ebx
		mov    %ecx,data_11024c
		jmp    jump_53a76
	jump_53a60:
		mov    0xb(%esi),%edx
		sar    $0x18,%edx
		cmp    %eax,%edx
		jne    jump_53a74
		mov    %esi,%ebx
		mov    %esi,data_11024c
		jmp    jump_53a76
	jump_53a74:
		xor    %ebx,%ebx
	jump_53a76:
		xor    %edx,%edx
		mov    0x1d(%esp),%eax
		mov    0x1c(%esp),%dl
		sar    $0x18,%eax
		call   func_501ba
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0xc(%esp),%edx
		mov    %eax,%ebp
		test   %dx,%dx
		jne    jump_53af8
		mov    0xe(%ecx),%dl
		cmp    0xe(%ebx),%dl
		jne    jump_53b8b
		mov    0xf(%ecx),%dl
		cmp    0xf(%ebx),%dl
		jne    jump_53b8b
		mov    0x87(%ecx),%dl
		cmp    0x87(%ebx),%dl
		jne    jump_53b8b
		mov    0xe(%esi),%dl
		cmp    0xe(%eax),%dl
		jne    jump_53b8b
		mov    0xf(%esi),%dl
		cmp    0xf(%eax),%dl
		jne    jump_53b8b
		mov    0x87(%esi),%dl
		cmp    0x87(%eax),%dl
		jne    jump_53b8b
	jump_53aec:
		movl   $0x1,(%esp)
		jmp    jump_53b8b
	jump_53af8:
		test   %ebx,%ebx
		je     jump_53b00
		test   %eax,%eax
		jne    jump_53b0a
	jump_53b00:
		xor    %eax,%eax
		mov    %eax,(%esp)
		jmp    jump_53b8b
	jump_53b0a:
		mov    0xe(%ecx),%dl
		cmp    0xe(%ebx),%dl
		jne    jump_53b46
		mov    0xf(%ecx),%dl
		cmp    0xf(%ebx),%dl
		jne    jump_53b46
		mov    0x87(%ecx),%dl
		cmp    0x87(%ebx),%dl
		jne    jump_53b46
		mov    0xe(%esi),%dl
		cmp    0xe(%eax),%dl
		jne    jump_53b46
		mov    0xf(%esi),%dl
		cmp    0xf(%eax),%dl
		jne    jump_53b46
		mov    0x87(%esi),%dl
		cmp    0x87(%eax),%dl
		je     jump_53aec
	jump_53b46:
		mov    0xe(%esi),%al
		cmp    0xe(%ebx),%al
		jne    jump_53b86
		mov    0xf(%esi),%al
		cmp    0xf(%ebx),%al
		jne    jump_53b86
		mov    0x87(%esi),%al
		cmp    0x87(%ebx),%al
		jne    jump_53b86
		mov    0xe(%ecx),%al
		cmp    0xe(%ebp),%al
		jne    jump_53b86
		mov    0xf(%ecx),%al
		cmp    0xf(%ebp),%al
		jne    jump_53b86
		mov    0x87(%ecx),%al
		cmp    0x87(%ebp),%al
		je     jump_53aec
	jump_53b86:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)
	jump_53b8b:
		cmpl   $0x1,(%esp)
		jne    jump_53be9
		mov    %edi,%eax
		call   func_530f1
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_53c01
		mov    0x60(%ecx),%edx
		sar    $0x18,%edx
		add    $0x2,%edx
		mov    $0x4,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0xe(%esp),%eax
		mov    0x4(%esp),%ecx
		sar    $0x10,%eax
		add    %ecx,%eax
		mov    %dl,0x63(%esi)
		incb   (%eax)
		cmpw   $0x0,0xc(%esp)
		jne    jump_53be0
		call   func_4ffef
		mov    %ebx,%eax
		call   func_52e55
		call   func_5001f
		jmp    jump_53c01
	jump_53be0:
		mov    %ebx,%eax
		call   func_52e55
		jmp    jump_53c01
	jump_53be9:
		mov    0x10(%esp),%ebx
		mov    0x12(%esp),%eax
		inc    %ebx
		sar    $0x10,%eax
		mov    %bx,0x10(%esp)
		add    %eax,%edi
		jmp    jump_539a9
	jump_53c01:
		mov    0x8(%esp),%eax
		mov    %eax,data_11024c
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_53c12:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    data_11024c,%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,data_11024c
		mov    $0x7,%edx
		call   func_53512
		xor    %edx,%edx
		mov    %eax,%edi
		mov    %dx,(%esp)
	jump_53c3d:
		mov    $0x1,%edx
		add    $0x2,%edi
		lea    0x14(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x18(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x10(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x24(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x1c(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0xc(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %edi
		lea    0x8(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %edi
		lea    0x4(%esp),%eax
		mov    %edi,%ebx
		call   func_500c9
		mov    0x4(%esp),%ebx
		add    $0x2,%edi
		test   %bx,%bx
		je     jump_53e01
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x0,data_110254(%eax)
		jne    jump_53deb
		xor    %eax,%eax
		mov    data_ba842,%edx
		mov    0x18(%esp),%al
		sar    $0x10,%edx
		imul   %eax,%edx
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    0x1c(%esp),%bl
		xor    %eax,%eax
		mov    %ecx,data_11024c
		mov    0x14(%esp),%al
		inc    %bl
		lea    (%eax,%edx,1),%esi
		mov    %bl,0x1c(%esp)
		shl    $0x2,%esi
		mov    0x18(%esp),%al
		add    $data_cc998,%esi
		mov    %al,0x20(%esp)
		jmp    jump_53d8a
	jump_53d2d:
		mov    0x14(%esp),%bl
		mov    %esi,%edx
		jmp    jump_53d6d
	jump_53d35:
		mov    (%edx),%eax
		mov    0xb(%eax),%ecx
		xor    %eax,%eax
		sar    $0x18,%ecx
		mov    0x1c(%esp),%al
		cmp    %eax,%ecx
		jne    jump_53d68
		mov    data_11024c,%eax
		inc    %bh
		test   %eax,%eax
		je     jump_53d61
		mov    $0x3,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_53d68
	jump_53d61:
		mov    (%edx),%eax
		mov    %eax,data_11024c
	jump_53d68:
		add    $0x4,%edx
		inc    %bl
	jump_53d6d:
		cmp    0x10(%esp),%bl
		jbe    jump_53d35
		mov    data_ba842,%eax
		mov    0x20(%esp),%ch
		sar    $0x10,%eax
		inc    %ch
		shl    $0x2,%eax
		mov    %ch,0x20(%esp)
		add    %eax,%esi
	jump_53d8a:
		mov    0x20(%esp),%al
		cmp    0x24(%esp),%al
		jbe    jump_53d2d
		mov    0x8(%esp),%ch
		xor    %al,%al
		cmp    $0x1,%ch
		jb     jump_53da8
		jbe    jump_53db4
		cmp    $0x2,%ch
		je     jump_53dbc
		jmp    jump_53dc4
	jump_53da8:
		test   %ch,%ch
		jne    jump_53dc4
		cmp    0xc(%esp),%bh
		jne    jump_53dc4
		jmp    jump_53dc2
	jump_53db4:
		cmp    0xc(%esp),%bh
		jb     jump_53dc4
		jmp    jump_53dc2
	jump_53dbc:
		cmp    0xc(%esp),%bh
		ja     jump_53dc4
	jump_53dc2:
		mov    $0x1,%al
	jump_53dc4:
		test   %al,%al
		je     jump_53deb
		mov    %edi,%eax
		call   func_530f1
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_53e01
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		incb   data_110254(%eax)
		mov    %edx,%eax
		call   func_52e55
		jmp    jump_53e01
	jump_53deb:
		mov    (%esp),%ecx
		mov    0x2(%esp),%eax
		inc    %ecx
		sar    $0x10,%eax
		mov    %cx,(%esp)
		add    %eax,%edi
		jmp    jump_53c3d
	jump_53e01:
		mov    %ebp,data_11024c
		add    $0x28,%esp
		jmp    jump_50aa0


/*----------------------------------------------------------------*/
func_53e0f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    data_11024c,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,data_11024c
		mov    $0x8,%edx
		xor    %esi,%esi
		call   func_53512
		mov    %eax,%ecx
	jump_53e35:
		mov    $0x1,%edx
		add    $0x2,%ecx
		lea    0xc(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x4(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x1,%edx
		inc    %ecx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_53f1e
		cmpb   $0x0,data_1104b0
		jne    jump_53f10
		mov    0xc(%esp),%dl
		test   %dl,%dl
		jbe    jump_53ea4
		cmp    $0x1,%dl
		je     jump_53eab
		jmp    jump_53eb4
	jump_53ea4:
		mov    data_f0ba0,%al
		jmp    jump_53eb0
	jump_53eab:
		mov    data_f0ba2,%al
	jump_53eb0:
		mov    %al,0x10(%esp)
	jump_53eb4:
		mov    0x8(%esp),%bl
		xor    %al,%al
		cmp    $0x1,%bl
		jb     jump_53ec8
		jbe    jump_53ed8
		cmp    $0x2,%bl
		je     jump_53ee4
		jmp    jump_53ef0
	jump_53ec8:
		test   %bl,%bl
		jne    jump_53ef0
		mov    0x10(%esp),%ah
		cmp    0x4(%esp),%ah
		jne    jump_53ef0
		jmp    jump_53eee
	jump_53ed8:
		mov    0x10(%esp),%ah
		cmp    0x4(%esp),%ah
		jb     jump_53ef0
		jmp    jump_53eee
	jump_53ee4:
		mov    0x10(%esp),%ah
		cmp    0x4(%esp),%ah
		ja     jump_53ef0
	jump_53eee:
		mov    $0x1,%al
	jump_53ef0:
		test   %al,%al
		je     jump_53f10
		mov    %ecx,%eax
		call   func_530f1
		test   %eax,%eax
		je     jump_53f1e
		movswl %si,%ebx
		movb   $0x1,data_1104b0(%ebx)
		call   func_52e55
		jmp    jump_53f1e
	jump_53f10:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%ecx
		jmp    jump_53e35
	jump_53f1e:
		mov    %edi,data_11024c
		add    $0x14,%esp
		jmp    jump_50aa1


/*----------------------------------------------------------------*/
func_53f2c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		xor    %edx,%edx
		mov    %edx,data_11024c
		test   %ax,%ax
		jne    jump_53f46
		mov    $0x9,%edx
		jmp    jump_53f4b
	jump_53f46:
		mov    $0xa,%edx
	jump_53f4b:
		xor    %eax,%eax
		call   func_53512
		mov    %eax,%ecx
	jump_53f54:
		mov    $0x2,%edx
		add    $0x3,%ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_52836
		mov    %ecx,%eax
		call   func_530f1
		test   %eax,%eax
		je     jump_53f89
		call   func_52e55
		jmp    jump_52836
	jump_53f89:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%ecx
		jmp    jump_53f54


/*----------------------------------------------------------------*/
func_53f94:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0xc,%esp
		mov    %al,0x4(%esp)
		mov    data_11024c,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,data_11024c
		mov    $0xb,%edx
		call   func_53512
		mov    %eax,%ecx
	jump_53fbb:
		mov    $0x1,%edx
		add    $0x2,%ecx
		lea    0x8(%esp),%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    $0x2,%edx
		inc    %ecx
		mov    %esp,%eax
		mov    %ecx,%ebx
		call   func_500c9
		mov    (%esp),%edx
		add    $0x2,%ecx
		test   %dx,%dx
		je     jump_5400d
		mov    0x8(%esp),%al
		cmp    0x4(%esp),%al
		jne    jump_54002
		mov    %ecx,%eax
		call   func_530f1
		test   %eax,%eax
		je     jump_54002
		call   func_52e55
	jump_54002:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%ecx
		jmp    jump_53fbb
	jump_5400d:
		mov    %esi,data_11024c
	jump_54013:
		add    $0xc,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5401b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%ecx
		movsbw 0xe(%eax),%ax
		dec    %eax
		mov    %ax,0x4(%esp)
		mov    %ecx,%edx
		mov    0x1(%esp),%esi
		mov    %ecx,%eax
		sar    $0x18,%esi
		call   func_5361c
		mov    %esi,%eax
		call   func_11ff7
		test   %ax,%ax
		je     jump_54013
		movsbw (%ecx),%ax
		mov    %ax,(%esp)
		movsbw 0x1(%ecx),%ax
		mov    %ax,0x8(%esp)
		lea    0x8(%esp),%edx
		mov    0x60(%ecx),%ebx
		mov    %esp,%eax
		sar    $0x18,%ebx
		call   func_49abc
		mov    0x6(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_540a5
		mov    $0x1,%ebx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   func_5394d
		mov    %ecx,%edx
		mov    %esi,%eax
		call   func_11ff7
		test   %ax,%ax
		je     jump_54013
	jump_540a5:
		call   func_53c12
		mov    0x1(%esp),%eax
		mov    %ecx,%edx
		sar    $0x18,%eax
		call   func_11ff7
		test   %ax,%ax
		je     jump_54013
		mov    $0x1,%eax
		jmp    jump_54013


/*----------------------------------------------------------------*/
func_540cb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %eax,%eax
	jump_540cf:
		movswl %ax,%edx
		xor    %ebx,%ebx
		inc    %eax
		mov    %ebx,data_111f04(,%edx,4)
		cmp    $0x65,%ax
		jl     jump_540cf
		mov    data_cc990,%eax
		xor    %edx,%edx
	jump_540e9:
		test   %eax,%eax
		je     jump_54107
		cmpb   $0x0,0x56(%eax)
		je     jump_540fe
		movswl %dx,%ebx
		inc    %edx
		mov    %eax,data_111f04(,%ebx,4)
	jump_540fe:
		mov    0x7b(%eax),%eax
		cmp    $0x65,%dx
		jl     jump_540e9
	jump_54107:
		mov    %dx,data_1120a4
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_54111:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x13c,%esp
		xor    %edx,%edx
		mov    %dx,0x130(%esp)
		mov    $0xff,%dl
	jump_54129:
		mov    0x130(%esp),%ebx
		mov    0x12e(%esp),%eax
		inc    %ebx
		sar    $0x10,%eax
		mov    %bx,0x130(%esp)
		mov    %dl,(%esp,%eax,1)
		cmp    $0x12c,%bx
		jl     jump_54129
		xor    %esi,%esi
		mov    %si,0x134(%esp)
		mov    %si,0x138(%esp)
		jmp    jump_5444e
	jump_54164:
		mov    0x136(%esp),%eax
		sar    $0x10,%eax
		mov    data_111f04(,%eax,4),%eax
		mov    0x5f(%eax),%edx
		sar    $0x10,%edx
		mov    (%esp,%edx,1),%bl
		test   %bl,%bl
		jl     jump_5418a
		mov    %bl,0x60(%eax)
		jmp    jump_54446
	jump_5418a:
		mov    0x134(%esp),%dl
		mov    %dl,0x60(%eax)
		mov    0x5f(%eax),%edx
		sar    $0x10,%edx
		mov    0x134(%esp),%cl
		mov    %cl,(%esp,%edx,1)
		mov    0x5f(%eax),%eax
		sar    $0x10,%eax
		mov    $0x200,%ebx
		mov    data_70024(,%eax,4),%edx
		mov    $data_7804c,%eax
		call   func_4979b
		mov    $0x80,%edx
		mov    %eax,%edi
		movswl %ax,%ecx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		lea    0x130(%esp),%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,0x130(%esp)
		mov    $0x1,%ebx
		call   w_dos_read
		cmpw   $0x0,0x130(%esp)
		je     jump_5420c
		mov    $0x1,%ebx
		mov    $0x28,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
	jump_5420c:
		movswl %di,%ecx
		xor    %esi,%esi
	jump_54211:
		mov    $0x4,%ebx
		lea    0x12c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12c(%esp),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		add    $0xa,%edx
		inc    %esi
		call   w_dos_lseek
		cmp    $0x2,%si
		jl     jump_54211
		xor    %eax,%eax
		mov    %ax,0x130(%esp)
		jmp    jump_5441f
	jump_54250:
		mov    0x132(%esp),%ebp
		sar    $0x10,%ebp
		imul   $0x34,%ebp,%ebp
		mov    $0x4,%ebx
		movswl %di,%ecx
		lea    0x12c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		mov    $data_110a80,%esi
		add    %ebp,%esi
		add    %esi,%eax
		lea    0x2(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    $0x1,%ebx
		add    $0x3,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    $0x1,%ebx
		add    $0x4,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x5(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   w_dos_lseek
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x7(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		add    %esi,%eax
		lea    0x8(%eax),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12e(%esp),%edx
		sar    $0x10,%edx
		imul   $0xd,%edx,%edx
		mov    $0x1,%al
		mov    %al,data_110a81(%edx,%ebp,1)
		xor    %bh,%bh
		mov    %al,data_110a80(%edx,%ebp,1)
		mov    0x12c(%esp),%eax
		mov    %bh,data_110a86(%edx,%ebp,1)
		call   w_dos_malloc
		mov    0x12e(%esp),%edx
		sar    $0x10,%edx
		imul   $0xd,%edx,%edx
		mov    0x12c(%esp),%ebx
		mov    %eax,data_110a89(%edx,%ebp,1)
		mov    %eax,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12e(%esp),%eax
		sar    $0x10,%eax
		imul   $0xd,%eax,%eax
		mov    data_110a89(%eax,%ebp,1),%eax
		call   func_10031
		cmpw   $0x2,0x130(%esp)
		jne    jump_54417
		movswl %di,%ecx
		xor    %esi,%esi
	jump_543e7:
		mov    $0x4,%ebx
		lea    0x12c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x12c(%esp),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		add    $0xa,%edx
		inc    %esi
		call   w_dos_lseek
		cmp    $0x6,%si
		jl     jump_543e7
	jump_54417:
		incw   0x130(%esp)
	jump_5441f:
		cmpw   $0x4,0x130(%esp)
		jl     jump_54250
		mov    0x134(%esp),%ebx
		movswl %di,%eax
		inc    %ebx
		call   w_dos_close
		mov    %bx,0x134(%esp)
	jump_54446:
		incw   0x138(%esp)
	jump_5444e:
		mov    0x138(%esp),%eax
		cmp    data_1120a4,%ax
		jl     jump_54164
		mov    0x134(%esp),%eax
		mov    %ax,data_1120a2
		add    $0x13c,%esp
	jump_54475:
		pop    %ebp
	jump_54476:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5447c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ecx,%ecx
		jmp    jump_544a5
	jump_54483:
		xor    %edx,%edx
	jump_54485:
		movswl %cx,%eax
		imul   $0x34,%eax,%eax
		movswl %dx,%ebx
		imul   $0xd,%ebx,%ebx
		mov    data_110a89(%ebx,%eax,1),%eax
		inc    %edx
		call   w_dos_free
		cmp    $0x4,%dx
		jl     jump_54485
		inc    %ecx
	jump_544a5:
		cmp    data_1120a2,%cx
		jl     jump_54483
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_544b2:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		cmpb   $0x80,0x56(%ebx)
		jne    jump_544e2
		mov    0x5d(%ebx),%edi
		sar    $0x18,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		shl    $0x2,%eax
		add    $data_110a80,%eax
		lea    0x27(%eax),%edi
		jmp    jump_54518
	jump_544e2:
		mov    0x5d(%ebx),%edi
		sar    $0x18,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		mov    $data_110a80,%edx
		shl    $0x2,%eax
		movzbl 0x56(%ebx),%edi
		add    %eax,%edx
		mov    $0xff,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		shl    $0x2,%eax
		sub    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		lea    (%edx,%eax,1),%edi
	jump_54518:
		mov    (%esp),%eax
		add    $0xc,%eax
		cwtl
		mov    %eax,0x8(%esp)
		mov    0x4(%esp),%eax
		add    $0xc,%eax
		movswl %ax,%ebp
		mov    (%esp),%eax
		sub    $0xb,%eax
		cwtl
		mov    %eax,0x10(%esp)
		mov    0x4(%esp),%eax
		mov    0x8(%esp),%ecx
		sub    $0xb,%eax
		mov    %ebp,%ebx
		cwtl
		mov    0x10(%esp),%edx
		mov    %eax,0xc(%esp)
		call   func_5edde
		mov    (%esp),%edx
		movsbw 0x5(%edi),%ax
		add    %edx,%eax
		mov    0x4(%esp),%ecx
		movswl %ax,%edx
		movsbw 0x4(%edi),%ax
		add    %ecx,%eax
		mov    0x9(%edi),%ebx
		cwtl
		call   func_5f3fd
		cmpb   $0x80,0x56(%esi)
		jne    jump_545a2
		mov    $0x1,%eax
		mov    0x8(%esp),%ecx
		mov    0x10(%esp),%edx
		call   func_5ecc7
		mov    %ebp,%ebx
		mov    0xc(%esp),%eax
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
	jump_545a2:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_545aa:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		movswl %ax,%ebx
		mov    $0x5,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    %ebx,%edx
		add    $0x8b,%eax
		sar    $0x1f,%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%ebx
		shl    $0x3,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    $0x15,%eax
		push   $data_110698
		movswl %ax,%edx
		movswl %si,%eax
		lea    0x1a(%edx),%ecx
		lea    0x1a(%eax),%ebx
		call   func_5eecf
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_54603:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %ax,%ebx
		mov    $0x5,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    %ebx,%edx
		add    $0x8b,%eax
		sar    $0x1f,%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		idiv   %edi
		mov    %eax,%ebx
		shl    $0x3,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		lea    0x15(%eax),%edi
		mov    $data_110698,%ebx
		movswl %di,%edx
		movswl %si,%eax
		call   func_5ee9b
		add    $0xd,%edi
		add    $0xd,%esi
		mov    %ecx,%ebx
		movswl %di,%edx
		movswl %si,%eax
		call   func_544b2
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5466b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    $0x4,%edx
		mov    $0x7b,%eax
		mov    $0x98,%ecx
		mov    data_f8140,%ebx
		mov    $0x22,%esi
		call   func_5f3fd
		jmp    jump_546c5
	jump_54693:
		movswl %di,%eax
		movswl %si,%edx
		mov    data_111f04(,%eax,4),%ebx
		movswl %cx,%eax
		add    $0x1c,%ecx
		call   func_544b2
		cmp    $0x108,%cx
		jle    jump_546c4
		add    $0x1b,%esi
		mov    $0x98,%ecx
		cmp    $0x73,%si
		jg     jump_54476
	jump_546c4:
		inc    %edi
	jump_546c5:
		cmp    data_1120a4,%di
		jl     jump_54693
		jmp    jump_54476


/*----------------------------------------------------------------*/
func_546d3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmp    $0x8d,%dx
		jl     jump_5473b
		cmp    $0x119,%dx
		jg     jump_5473b
		cmp    $0x17,%bx
		jl     jump_5473b
		cmp    $0x83,%bx
		jg     jump_5473b
		movswl %dx,%edx
		sub    $0x8d,%edx
		mov    $0x1c,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    %eax,%ecx
		sub    $0x17,%edx
		mov    $0x1b,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   $0x5,%eax,%ebx
		add    %ebx,%ecx
		movswl %si,%edx
		movswl %cx,%eax
		add    %eax,%edx
		mov    data_1120a2,%eax
		sar    $0x10,%eax
		cmp    %eax,%edx
		jge    jump_5473b
		mov    %ecx,%eax
		pop    %esi
		pop    %ecx
		ret
	jump_5473b:
		mov    $0xffffffff,%eax
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_54743:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%edi
		mov    $0x88,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    0x10(%eax),%bl
		mov    $0x48,%eax
		call   func_48132
		mov    $0x8c,%edx
		mov    $0x14,%eax
		mov    data_f8164,%ebx
		call   func_5f3fd
		lea    0x2(%edi),%eax
		push   %eax
		push   $0x92
		push   $0x14
		call   func_5e048
		xor    %eax,%eax
		mov    0x11(%edi),%al
		shl    $0x4,%eax
		add    $0xc,%esp
		add    $data_71118,%eax
		push   %eax
		push   $data_78056
		push   $0x10
		push   $0x1
		push   $0x93
		push   $0x6c
		call   func_60944
		add    $0x18,%esp
		mov    %edi,%eax
		call   func_13853
		cwtl
		push   %eax
		push   $data_78059
		push   $0x28
		push   $0x1
		push   $0x93
		push   $0xd0
		call   func_60944
		mov    0x4e(%edi),%eax
		add    $0x18,%esp
		sar    $0x10,%eax
		push   %eax
		push   $data_78060
		push   $0x28
		push   $0x1
		push   $0x93
		push   $0x102
		call   func_60944
		xor    %eax,%eax
		add    $0x18,%esp
		mov    0x40(%edi),%al
		push   %eax
		push   $data_78066
		push   $0x8
		push   $0x1
		push   $0x9c
		push   $0x6c
		call   func_60944
		add    $0x18,%esp
		xor    %eax,%eax
		mov    0x41(%edi),%al
		push   %eax
		push   $data_7806d
		push   $0x8
		push   $0x1
		push   $0x9c
		push   $0x9e
		call   func_60944
		xor    %eax,%eax
		add    $0x18,%esp
		mov    0x42(%edi),%al
		push   %eax
		push   $data_78074
		push   $0x8
		push   $0x1
		push   $0x9c
		push   $0xd0
		call   func_60944
		xor    %eax,%eax
		add    $0x18,%esp
		mov    0x43(%edi),%al
		push   %eax
		push   $data_7807b
		push   $0x8
		push   $0x1
		push   $0x9c
		push   $0x102
		mov    $0xa8,%edx
		call   func_60944
		add    $0x18,%esp
		mov    $0x14,%eax
		mov    data_f8170,%ebx
		call   func_5f3fd
		mov    data_ba84e,%ah
		cmp    $0x4,%ah
		jge    jump_548a1
		xor    %edx,%edx
		mov    %dx,0x4(%esp)
		jmp    jump_548ad
	jump_548a1:
		movsbw %ah,%ax
		sub    $0x3,%eax
		mov    %ax,0x4(%esp)
	jump_548ad:
		cmpb   $0x80,0x56(%edi)
		je     jump_549dc
		xor    %edx,%edx
		mov    0x11(%edi),%dl
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    data_731ac(%eax),%dh
		cmp    $0x1,%dh
		jne    jump_548d6
		cmp    data_ba84e,%dh
		jge    jump_548e3
	jump_548d6:
		cmpb   $0x4,data_ba84e
		jl     jump_549dc
	jump_548e3:
		mov    $0x72,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x8(%esp)
		mov    %cx,(%esp)
	jump_548f2:
		cmpw   $0x2,(%esp)
		jne    jump_5492c
		mov    data_ba84e,%cl
		test   %cl,%cl
		je     jump_54908
		cmp    $0x1,%cl
		jne    jump_5492c
	jump_54908:
		mov    0x11(%edi),%al
		cmp    $0x1,%al
		jb     jump_54913
		cmp    $0x5,%al
		jbe    jump_5492c
	jump_54913:
		cmpb   $0x9,0x11(%edi)
		je     jump_5492c
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %esi,%esi
		mov    %si,data_112098(,%eax,2)
		jmp    jump_5493d
	jump_5492c:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		movw   $0x1,data_112098(,%eax,2)
	jump_5493d:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		imul   $0x6,%eax,%eax
		mov    -0x2(%esp),%esi
		sar    $0x10,%esi
		add    %esi,%esi
		mov    data_75496(%esi,%eax,1),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		je     jump_549bf
		cmpw   $0x1,data_112098(%esi)
		jne    jump_549bf
		add    $0x6,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f8138,%esi
		add    %eax,%esi
		mov    0x6(%esi),%ax
		add    $0xb5,%eax
		mov    0x4(%esi),%cx
		movswl %ax,%edx
		mov    0x8(%esp),%eax
		add    %ecx,%eax
		mov    0x8(%esi),%ebx
		inc    %eax
		mov    $0xa,%ecx
		cwtl
		call   func_5f517
		mov    0x6(%esi),%ax
		add    $0xb4,%eax
		mov    0x4(%esi),%cx
		movswl %ax,%edx
		mov    0x8(%esp),%eax
		mov    0x8(%esi),%ebx
		add    %ecx,%eax
		mov    $0xf,%ecx
		cwtl
		call   func_5f517
	jump_549bf:
		mov    0x8(%esp),%esi
		mov    (%esp),%eax
		add    $0x28,%esi
		inc    %eax
		mov    %esi,0x8(%esp)
		mov    %ax,(%esp)
		cmp    $0x3,%ax
		jl     jump_548f2
	jump_549dc:
		mov    0x5c(%edi),%dh
		test   %dh,%dh
		je     jump_54a3a
		xor    %ebx,%ebx
		mov    %dh,%bl
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		dec    %ebx
		lea    (%eax,%eax,1),%edx
		movswl %bx,%eax
		imul   $0x28,%ebx,%esi
		mov    data_75496(%edx,%eax,2),%eax
		sar    $0x10,%eax
		lea    0x6(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    $data_f8138,%eax
		add    $0x72,%esi
		mov    0x8(%eax),%ebx
		mov    0x6(%eax),%dx
		mov    0x4(%eax),%ax
		add    $0xb4,%edx
		add    %esi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5f3fd
	jump_54a3a:
		mov    $0xab,%edx
		mov    $0xdc,%eax
		mov    data_f817c,%ebx
		call   func_5f3fd
		xor    %eax,%eax
		mov    data_fdf85,%ax
		mov    data_fe36f(,%eax,4),%edx
		push   %edx
		push   $data_78082
		push   $0x1
		push   $0x1
		push   $0xb3
		push   $0x104
		call   func_60944
		add    $0x18,%esp
		add    $0xc,%esp
		jmp    jump_54476


/*----------------------------------------------------------------*/
func_54a82:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		xor    %eax,%eax
		jmp    jump_54aa6
	jump_54a8f:
		movswl %ax,%ecx
		mov    data_111f04(,%ecx,4),%ecx
		cmpb   $0x80,0x56(%ecx)
		jbe    jump_54aa5
		cmpb   $0x0,0x5c(%ecx)
		je     jump_54aaf
	jump_54aa5:
		inc    %eax
	jump_54aa6:
		cmp    data_1120a4,%ax
		jl     jump_54a8f
	jump_54aaf:
		cmp    data_1120a4,%ax
		je     jump_54c24
		mov    data_1120a4,%cx
		mov    %ax,(%esp)
		xor    %edi,%edi
		xor    %eax,%eax
		jmp    jump_54adf
	jump_54acd:
		movswl %ax,%edx
		mov    data_111f04(,%edx,4),%edx
		cmpb   $0x80,0x56(%edx)
		ja     jump_54ade
		inc    %edi
	jump_54ade:
		inc    %eax
	jump_54adf:
		cmp    %cx,%ax
		jl     jump_54acd
		mov    data_ba844,%ax
		mov    data_ba840,%si
		imul   %esi,%eax
		mov    %eax,0x8(%esp)
		xor    %eax,%eax
		mov    %ax,0x4(%esp)
		jmp    jump_54c15
	jump_54b04:
		mov    0x2(%esp),%esi
		sar    $0x10,%esi
		cmpw   $0x1,data_e8f48(,%esi,2)
		jne    jump_54c10
		cmpl   $0x0,data_cc998(,%esi,4)
		jne    jump_54c10
		mov    -0x2(%esp),%ebp
		call   func_112fd
		sar    $0x10,%ebp
		mov    $0x88,%ebx
		mov    data_111f04(,%ebp,4),%edx
		mov    %eax,%ecx
		call   w_dos_memcpy
		mov    data_111f04(,%ebp,4),%eax
		movb   $0x80,0x56(%eax)
		mov    0x5f(%ecx),%eax
		sar    $0x10,%eax
		call   func_1198d
		movb   $0x0,0x56(%ecx)
		mov    %al,0x60(%ecx)
		mov    data_1120a0,%al
		movb   $0x0,0x64(%ecx)
		movb   $0xff,0x6f(%ecx)
		movl   $0x0,0x73(%ecx)
		movb   $0xff,0x71(%ecx)
		movl   $0x0,0x67(%ecx)
		mov    %esi,%edx
		mov    %al,0x63(%ecx)
		sar    $0x1f,%edx
		mov    data_ba842,%ebp
		mov    %esi,%eax
		sar    $0x10,%ebp
		idiv   %ebp
		mov    %dl,(%ecx)
		mov    %esi,%eax
		mov    data_ba842,%ebp
		mov    %esi,%edx
		sar    $0x10,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %ecx,%edx
		mov    %al,0x1(%ecx)
		mov    $data_cc968,%eax
		mov    %ecx,%ebx
		call   func_1134f
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_11e04
		movsbl 0x1(%ecx),%edx
		movsbl (%ecx),%eax
		call   func_1124a
		mov    (%esp),%edx
		jmp    jump_54bf0
	jump_54bda:
		movswl %dx,%eax
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x80,0x56(%eax)
		jbe    jump_54bf0
		cmpb   $0x0,0x5c(%eax)
		je     jump_54bfa
	jump_54bf0:
		inc    %edx
		cmp    data_1120a4,%dx
		jl     jump_54bda
	jump_54bfa:
		mov    data_1120a4,%si
		cmp    %si,%dx
		je     jump_54c24
		inc    %edi
		mov    %dx,(%esp)
		cmp    %si,%di
		je     jump_54c24
	jump_54c10:
		incw   0x4(%esp)
	jump_54c15:
		mov    0x4(%esp),%eax
		cmp    0x8(%esp),%ax
		jl     jump_54b04
	jump_54c24:
		add    $0xc,%esp
		jmp    jump_54475


/*----------------------------------------------------------------*/
func_54c2c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    $0x1,%esi
	jump_54c3d:
		test   %si,%si
		je     jump_54c8d
		mov    $0x1,%eax
		call   func_44d6e
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl (%ecx),%eax
		call   func_545aa
		movswl (%edi),%eax
		call   func_5466b
		movswl (%edi),%edx
		movswl (%ecx),%eax
		add    %edx,%eax
		mov    data_111f04(,%eax,4),%eax
		call   func_54743
		xor    %eax,%eax
		call   func_44d6e
	jump_54c8d:
		call   func_5d41e
		call   func_5e9e8
		mov    $0x3,%ebp
	jump_54c9c:
		mov    %esp,%esi
		call   func_5d22e
		call   func_61e7e
		test   %eax,%eax
		je     jump_54cc6
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_54cc6
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_54cc6:
		call   func_102ff
		cmp    $0x1,%ax
		jne    jump_54d44
		mov    (%edi),%dx
		mov    (%ecx),%bx
		add    %ebx,%edx
		mov    %dx,0x8(%esp)
		mov    0x6(%esp),%ebx
		sar    $0x10,%ebx
		shl    $0x2,%ebx
		mov    data_111f04(%ebx),%esi
		xor    %eax,%eax
		mov    0x56(%esi),%al
		mov    %ax,0x10(%esp)
		cmp    $0x80,%ax
		je     jump_54d44
		mov    0xe(%esp),%edx
		mov    $0xff,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		inc    %eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0xff,%eax
		sub    %edx,%eax
		mov    %ax,0x10(%esp)
		mov    0x10(%esp),%al
		mov    %al,0x56(%esi)
		call   func_5d570
		mov    data_111f04(%ebx),%edx
		movswl (%ecx),%eax
		call   func_54603
		call   func_5d41e
		call   func_5e9e8
	jump_54d44:
		cmpw   $0x0,(%esp)
		je     jump_54c9c
		call   func_5d570
		mov    (%esp),%ebx
		mov    $0x1,%esi
		cmp    $0xd,%bx
		jb     jump_54d89
		jbe    jump_550de
		cmp    $0x4800,%bx
		jb     jump_551c5
		jbe    jump_55126
		cmp    $0x5000,%bx
		je     jump_55172
		jmp    jump_551c5
	jump_54d89:
		cmp    %si,%bx
		jb     jump_551c5
		jbe    jump_54d9f
		cmp    $0x2,%bx
		je     jump_54dae
		jmp    jump_551c5
	jump_54d9f:
		mov    $0x1,%eax
		call   func_49c05
		jmp    jump_551c5
	jump_54dae:
		mov    0x2(%esp),%ebx
		mov    (%esp),%edx
		movswl (%edi),%eax
		sar    $0x10,%ebx
		sar    $0x10,%edx
		call   func_546d3
		movswl %ax,%edx
		mov    %ax,0x10(%esp)
		cmp    $0xffffffff,%edx
		je     jump_54e29
		mov    (%ecx),%dx
		cmp    %dx,%ax
		je     jump_54df3
		movswl %dx,%edx
		movswl (%edi),%eax
		add    %edx,%eax
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x80,0x56(%eax)
		je     jump_54e1d
		movb   $0xff,0x56(%eax)
		jmp    jump_54e1d
	jump_54df3:
		cwtl
		movswl (%edi),%edx
		add    %edx,%eax
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x0,0x5c(%eax)
		jne    jump_54e13
		cmpb   $0x4,data_ba84e
		jg     jump_551c7
	jump_54e13:
		mov    $0x1,%eax
		jmp    jump_551dc
	jump_54e1d:
		mov    0x10(%esp),%eax
	jump_54e21:
		mov    %ax,(%ecx)
		jmp    jump_551c7
	jump_54e29:
		mov    $0x20,%eax
		call   func_1033b
		mov    0x2(%esp),%ebx
		cmp    $0x11e,%bx
		jl     jump_54ea2
		cmp    $0x130,%bx
		jg     jump_54ea2
		mov    0x4(%esp),%edx
		cmp    $0x18,%dx
		jl     jump_54ea2
		cmp    $0x4a,%dx
		jge    jump_54ea2
		mov    $0x18,%edx
		mov    $0x11e,%eax
		mov    data_f814c,%ebx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    (%edi),%bx
		test   %bx,%bx
		jle    jump_551c7
		mov    %ebx,%eax
		sub    $0x5,%eax
		mov    %ax,(%edi)
		mov    (%ecx),%dx
		cmp    $0xf,%dx
		jge    jump_551c7
		mov    %edx,%ebx
		add    $0x5,%ebx
		mov    %bx,(%ecx)
		jmp    jump_551c7
	jump_54ea2:
		mov    0x2(%esp),%eax
		cmp    $0x11e,%ax
		jl     jump_54f15
		cmp    $0x130,%ax
		jg     jump_54f15
		mov    0x4(%esp),%ebx
		cmp    $0x4d,%bx
		jl     jump_54f15
		cmp    $0x7f,%bx
		jge    jump_54f15
		mov    $0x4d,%edx
		mov    $0x11e,%eax
		mov    data_f8158,%ebx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    data_1120a2,%eax
		movswl (%edi),%edx
		sar    $0x10,%eax
		sub    %edx,%eax
		cmp    $0x14,%eax
		jle    jump_551c7
		addw   $0x5,(%edi)
		mov    (%ecx),%ax
		cmp    $0x5,%ax
		jle    jump_551c7
		mov    %eax,%edx
		sub    $0x5,%edx
	jump_54f0d:
		mov    %dx,(%ecx)
		jmp    jump_551c7
	jump_54f15:
		mov    0x2(%esp),%edx
		cmp    $0x14,%dx
		jl     jump_54f3f
		cmp    $0x5c,%dx
		jg     jump_54f3f
		mov    0x4(%esp),%eax
		cmp    $0xa8,%ax
		jl     jump_54f3f
		cmp    $0xc3,%ax
		jg     jump_54f3f
		call   func_54a82
		jmp    jump_551c7
	jump_54f3f:
		mov    0x4(%esp),%ebx
		cmp    $0xa8,%bx
		jl     jump_551c7
		cmp    $0xc0,%bx
		jg     jump_551c7
		mov    data_ba84e,%bh
		cmp    $0x1,%bh
		jle    jump_54f6d
		cmp    $0x4,%bh
		jl     jump_551c7
	jump_54f6d:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		mov    data_111f04(,%eax,4),%eax
		mov    0x11(%eax),%al
		and    $0xff,%eax
		imul   $0xf,%eax,%eax
		cmpb   $0x0,data_731ac(%eax)
		jne    jump_54f9c
		cmpb   $0x4,data_ba84e
		jl     jump_551c7
	jump_54f9c:
		mov    (%esp),%edx
		sar    $0x10,%edx
		sub    $0x66,%edx
		mov    $0x28,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ax,0x10(%esp)
		mov    (%ecx),%dx
		mov    (%edi),%ax
		add    %edx,%eax
		mov    0x10(%esp),%ebx
		mov    %ax,0x8(%esp)
		test   %bx,%bx
		jl     jump_551c7
		cmp    $0x3,%bx
		jge    jump_551c7
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		cmpw   $0x1,data_112098(,%eax,2)
		jne    jump_551c7
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x80,0x56(%eax)
		je     jump_551c7
		xor    %eax,%eax
		mov    data_fdf85,%ax
		mov    data_ba84e,%bh
		mov    data_fe36f(,%eax,4),%eax
		cmp    $0x4,%bh
		jge    jump_55029
		mov    $data_754c8,%ebp
		jmp    jump_5503f
	jump_55029:
		mov    data_ba84b,%edx
		sar    $0x18,%edx
		sub    $0x4,%edx
		imul   $0xc,%edx,%edx
		mov    $data_754c8,%ebp
		add    %edx,%ebp
	jump_5503f:
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		mov    data_111f04(,%edx,4),%edx
		mov    0x5c(%edx),%bl
		test   %bl,%bl
		je     jump_55060
		mov    %bl,%dl
		and    $0xff,%edx
		add    -0x4(%ebp,%edx,4),%eax
	jump_55060:
		mov    0x6(%esp),%ebx
		sar    $0x10,%ebx
		mov    data_111f04(,%ebx,4),%ebx
		xor    %edx,%edx
		mov    0x5c(%ebx),%dl
		mov    %edx,0xc(%esp)
		incw   0x10(%esp)
		mov    0xc(%esp),%edx
		cmp    0x10(%esp),%dx
		je     jump_550cf
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		shl    $0x2,%edx
		add    %ebp,%edx
		mov    -0x4(%edx),%ebp
		cmp    %ebp,%eax
		jl     jump_550b8
		mov    0x10(%esp),%dl
		mov    %dl,0x5c(%ebx)
		xor    %edx,%edx
		mov    data_fdf85,%dx
		sub    %ebp,%eax
	jump_550ac:
		mov    %eax,data_fe36f(,%edx,4)
		jmp    jump_551c7
	jump_550b8:
		mov    %ebp,%edx
		sub    %eax,%edx
		push   %edx
		push   $data_78088
		call   func_48083
		add    $0x8,%esp
		jmp    jump_551c7
	jump_550cf:
		movb   $0x0,0x5c(%ebx)
		xor    %edx,%edx
		mov    data_fdf85,%dx
		jmp    jump_550ac
	jump_550de:
		movswl (%edi),%edx
		movswl (%ecx),%eax
		add    %edx,%eax
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x0,0x5c(%eax)
		sete   %al
		xor    %edx,%edx
		mov    data_ba84e,%bl
		mov    %al,%dl
		cmp    $0x4,%bl
		setg   %al
		and    $0xff,%eax
		test   %eax,%edx
		je     jump_5511f
		push   $data_7809e
		call   func_48083
		add    $0x4,%esp
		jmp    jump_551c7
	jump_5511f:
		mov    %esi,%eax
		jmp    jump_551dc
	jump_55126:
		mov    $0x20,%eax
		mov    $0x18,%edx
		call   func_1033b
		mov    $0x11e,%eax
		mov    data_f814c,%ebx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    (%edi),%dx
		test   %dx,%dx
		jle    jump_551c7
		mov    %edx,%ebx
		sub    $0x5,%ebx
		mov    %bx,(%edi)
		mov    (%ecx),%ax
		cmp    $0xf,%ax
		jge    jump_551c7
		mov    %eax,%edx
		add    $0x5,%edx
		jmp    jump_54f0d
	jump_55172:
		mov    $0x20,%eax
		mov    $0x4d,%edx
		call   func_1033b
		mov    $0x11e,%eax
		mov    data_f8158,%ebx
		call   func_5f3fd
		call   func_5e9e8
		call   func_499e4
		mov    data_1120a2,%edx
		movswl (%edi),%eax
		sar    $0x10,%edx
		sub    %eax,%edx
		cmp    $0x14,%edx
		jle    jump_551c7
		addw   $0x5,(%edi)
		mov    (%ecx),%bx
		cmp    $0x5,%bx
		jle    jump_551c7
		mov    %ebx,%eax
		sub    $0x5,%eax
		jmp    jump_54e21
	jump_551c5:
		xor    %esi,%esi
	jump_551c7:
		mov    (%esp),%ebx
		cmp    $0x1b,%bx
		je     jump_551da
		cmp    $0x3,%bx
		jne    jump_54c3d
	jump_551da:
		xor    %eax,%eax
	jump_551dc:
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_551e5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%edx
		mov    $0x1,%eax
		movswl %dx,%edi
		call   func_44d67
		mov    data_111f04(,%edi,4),%edi
		cmpb   $0x80,0x56(%edi)
		jne    jump_5523f
		mov    data_cc968,%esi
	jump_5520f:
		mov    0xf(%edi),%al
		cmp    0xf(%esi),%al
		je     jump_5521c
		mov    0x7b(%esi),%esi
		jmp    jump_5520f
	jump_5521c:
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    $data_cc968,%eax
		mov    %esi,%edx
		call   func_1137a
		movb   $0xff,0x56(%edi)
		jmp    jump_55381
	jump_5523f:
		call   func_112fd
		mov    $0x88,%ebx
		mov    %edi,%edx
		mov    %eax,%esi
		call   w_dos_memcpy
		cmpb   $0x0,0x5c(%edi)
		jne    jump_55265
		cmpb   $0x4,data_ba84e
		jne    jump_5536b
	jump_55265:
		call   func_112fd
		mov    $0x88,%ebx
		mov    %esi,%edx
		mov    %eax,%ecx
		call   w_dos_memcpy
		mov    %ecx,0x77(%esi)
		movb   $0x0,0x5c(%ecx)
		movl   $0x0,0x7b(%ecx)
		mov    data_ba84e,%bl
		cmp    $0x4,%bl
		jge    jump_552aa
		xor    %edx,%edx
		mov    0x5c(%edi),%dl
		mov    data_754ae(,%edx,2),%dl
		and    $0xff,%edx
		mov    %esi,%eax
		jmp    jump_55351
	jump_552aa:
		cmpb   $0x0,0x5c(%esi)
		jne    jump_55329
		mov    0x11(%esi),%cl
		test   %cl,%cl
		je     jump_552c0
		cmp    $0x1,%cl
		jne    jump_552c9
	jump_552c0:
		movb   $0x29,0x5c(%esi)
		jmp    jump_55320
	jump_552c9:
		cmp    $0xf,%cl
		je     jump_552dd
		cmp    $0x10,%cl
		je     jump_552dd
		cmp    $0x13,%cl
		je     jump_552dd
		cmp    $0x14,%cl
		jne    jump_552e3
	jump_552dd:
		movb   $0x2b,0x5c(%esi)
		jmp    jump_55320
	jump_552e3:
		cmp    $0x17,%cl
		je     jump_552ed
		cmp    $0x18,%cl
		jne    jump_552f3
	jump_552ed:
		movb   $0x2d,0x5c(%esi)
		jmp    jump_55320
	jump_552f3:
		cmp    $0x1b,%cl
		je     jump_55316
		cmp    $0x1c,%cl
		je     jump_55316
		cmp    $0x1d,%cl
		je     jump_55316
		cmp    $0x1e,%cl
		je     jump_55316
		cmp    $0x1f,%cl
		je     jump_55316
		cmp    $0x23,%cl
		je     jump_55316
		cmp    $0x25,%cl
		jne    jump_5531c
	jump_55316:
		movb   $0x2f,0x5c(%esi)
		jmp    jump_55320
	jump_5531c:
		movb   $0x27,0x5c(%esi)
	jump_55320:
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x5c(%esi),%dl
		jmp    jump_55351
	jump_55329:
		movsbw %bl,%dx
		xor    %eax,%eax
		sub    $0x3,%edx
		mov    0x5c(%edi),%al
		movswl %dx,%edx
		lea    (%eax,%eax,1),%ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_754ae(%ebx,%eax,2),%dl
		and    $0xff,%edx
		mov    %esi,%eax
	jump_55351:
		call   func_17e6d
		mov    0x4c(%esi),%eax
		mov    %eax,0x48(%esi)
		mov    %esi,%eax
		call   func_11b77
		mov    %eax,%edx
		mov    0x77(%esi),%eax
		mov    %dl,0x60(%eax)
	jump_5536b:
		mov    0x5f(%esi),%eax
		sar    $0x10,%eax
		call   func_1198d
		movb   $0x0,0x56(%esi)
		movb   $0x0,0x64(%esi)
		mov    %al,0x60(%esi)
	jump_55381:
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
	jump_55387:
		mov    $0x1,%ecx
		lea    0x4(%esp),%edx
		mov    %esp,%eax
		mov    %edi,%ebx
		call   func_4a483
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_554ce
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11db2
		cmp    %edi,%eax
		je     jump_553be
		test   %eax,%eax
		jne    jump_55387
	jump_553be:
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13cbd
		cwtl
		cmp    $0xffffffff,%eax
		jle    jump_55387
		cmpw   $0x0,0xc(%esp)
		je     jump_55403
		mov    %esi,%ebx
		movsbl 0x1(%esi),%edx
		movsbl (%esi),%eax
		call   func_11ee4
		mov    $data_cc968,%eax
		mov    %esi,%edx
		xor    %ecx,%ecx
		call   func_1137a
		mov    %ecx,0xc(%esp)
		movb   $0xff,0x56(%edi)
	jump_55403:
		cmpb   $0x5,data_ba84e
		jne    jump_55419
		mov    data_11209e,%eax
		sar    $0x10,%eax
		call   func_158ac
	jump_55419:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		movswl %ax,%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    %esi,%ebx
		call   func_10971
		cwtl
		call   func_16357
		mov    %ax,0x8(%esp)
		test   %ax,%ax
		jl     jump_55387
		mov    0x2(%esp),%edx
		movswl %ax,%ebx
		mov    %esi,%ecx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_165c2
		test   %ax,%ax
		je     jump_55387
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x4(%esp),%al
		mov    %al,0x1(%esi)
		mov    0x8(%esp),%al
		mov    %esi,%edx
		mov    %al,0x63(%esi)
		mov    $data_cc968,%eax
		mov    %esi,%ebx
		call   func_1134f
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_11e04
		movb   $0xff,0x6f(%esi)
		movl   $0x0,0x73(%esi)
		mov    0x67(%esi),%edx
		movb   $0xff,0x71(%esi)
		test   %edx,%edx
		je     jump_554bc
		movl   $0x0,0x67(%esi)
	jump_554bc:
		mov    $0x1,%eax
		movb   $0x80,0x56(%edi)
		mov    %eax,0xc(%esp)
		jmp    jump_55387
	jump_554ce:
		xor    %eax,%eax
		mov    0xc(%esp),%edx
		call   func_44d67
		test   %dx,%dx
		jne    jump_55510
		mov    0x77(%esi),%ebx
		test   %ebx,%ebx
		je     jump_554fe
		cmpb   $0x6,0x5c(%esi)
		ja     jump_554f6
		mov    0x5d(%ebx),%eax
		sar    $0x18,%eax
		call   func_119b6
	jump_554f6:
		mov    0x77(%esi),%eax
		call   func_1134a
	jump_554fe:
		mov    0x5d(%esi),%eax
		sar    $0x18,%eax
		call   func_119b6
		mov    %esi,%eax
		call   func_1134a
	jump_55510:
		add    $0x10,%esp
		jmp    jump_54476


/*----------------------------------------------------------------*/
func_55518:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		cmpw   $0x0,data_11209e
		je     jump_555bc
		call   func_540cb
		cmpw   $0x0,data_1120a4
		je     jump_555bc
		call   func_44c75
		xor    %ecx,%ecx
		call   func_103a8
		mov    %ecx,(%esp)
		mov    %ecx,0x4(%esp)
		call   func_54111
		call   func_44c75
	jump_5555d:
		mov    %esp,%edx
		lea    0x4(%esp),%eax
		call   func_54c2c
		test   %ax,%ax
		je     jump_5557c
		mov    0x4(%esp),%eax
		add    (%esp),%eax
		cwtl
		call   func_551e5
		jmp    jump_5555d
	jump_5557c:
		call   func_5447c
		xor    %esi,%esi
		xor    %edx,%edx
		jmp    jump_555a4
	jump_55587:
		movswl %dx,%eax
		mov    data_111f04(,%eax,4),%ebx
		movb   $0x0,0x5c(%ebx)
		mov    data_111f04(,%eax,4),%eax
		cmpb   $0x80,0x56(%eax)
		jne    jump_555a3
		inc    %esi
	jump_555a3:
		inc    %edx
	jump_555a4:
		cmp    data_1120a4,%dx
		jl     jump_55587
		call   func_103a0
		test   %si,%si
		jne    jump_555bc
		call   func_54a82
	jump_555bc:
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_55714:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5580f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %esp,%esi
		mov    $0x1,%edx
		call   mouse_get_state
		mov    %edx,0x8(%esp)
	jump_55828:
		cmpw   $0x0,0x8(%esp)
		je     jump_5586a
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    %eax,%edi
		mov    0x4(%esp),%eax
		add    $0x8,%eax
		cwtl
		call   func_109ce
		mov    %eax,0xc(%esp)
		cwtl
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_49fe1
		xor    %esi,%esi
		call   func_4a106
		mov    %esi,0x8(%esp)
	jump_5586a:
		call   func_5d41e
		call   func_5e9e8
	jump_55874:
		mov    %esp,%esi
		call   func_5d22e
		call   func_5d839
		test   %ax,%ax
		je     jump_5589f
		call   w_dos_getch
		mov    %ax,(%esp)
		test   %ax,%ax
		jne    jump_5589f
		call   w_dos_getch
		shl    $0x8,%eax
		mov    %ax,(%esp)
	jump_5589f:
		call   func_1031d
		test   %ax,%ax
		je     jump_558e2
		call   func_5d570
		call   func_4a210
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_4a106
		call   func_600d4
		call   func_602e3
		call   func_5d41e
		call   func_5e9e8
	jump_558e2:
		call   func_19d53
		cmp    $0x2,%ax
		jne    jump_558f1
		xor    %ecx,%ecx
		jmp    jump_5592d
	jump_558f1:
		cmp    $0x3,%ax
		jne    jump_5592d
		mov    %esp,%esi
		call   mouse_get_state
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    %eax,%edi
		mov    0x4(%esp),%eax
		add    $0x8,%eax
		cwtl
		call   func_109ce
		mov    %eax,0xc(%esp)
		cwtl
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_49fe1
	jump_5592d:
		cmpw   $0x0,(%esp)
		je     jump_55874
		call   func_5d570
		mov    (%esp),%edx
		cmp    $0x1b,%dx
		jne    jump_55962
		xor    %eax,%eax
		call   func_4e0ee
		cmp    $0x8,%ax
		je     jump_55b46
		xor    %esi,%esi
		mov    %si,(%esp)
		jmp    jump_55b46
	jump_55962:
		cmp    $0x20,%dx
		jb     jump_559a3
		jbe    jump_55b19
		cmp    $0x4b00,%dx
		jb     jump_5599c
		jbe    jump_55aff
		cmp    $0x4d00,%dx
		jb     jump_55b46
		jbe    jump_55aff
		cmp    $0x5000,%dx
	jump_55991:
		je     jump_55aff
		jmp    jump_55b46
	jump_5599c:
		cmp    $0x4800,%dx
		jmp    jump_55991
	jump_559a3:
		cmp    $0x2,%dx
		jb     jump_559be
		jbe    jump_55a6f
		cmp    $0x3,%dx
		je     jump_55ac7
		jmp    jump_55b46
	jump_559be:
		cmp    $0x1,%dx
		jne    jump_55b46
		mov    $0x1,%eax
		call   func_49c05
		mov    0x2(%esp),%esi
		cmp    $0x28,%si
		jge    jump_559e3
		mov    $0x4b00,%eax
		jmp    jump_559ef
	jump_559e3:
		cmp    $0x118,%si
		jle    jump_559f8
		mov    $0x4d00,%eax
	jump_559ef:
		call   func_4a32c
		mov    %eax,0x8(%esp)
	jump_559f8:
		mov    0x4(%esp),%edx
		cmp    $0x14,%dx
		jge    jump_55a09
		mov    $0x4800,%eax
		jmp    jump_55a15
	jump_55a09:
		cmp    $0xb4,%dx
		jle    jump_55a1e
		mov    $0x5000,%eax
	jump_55a15:
		call   func_4a32c
		mov    %eax,0x8(%esp)
	jump_55a1e:
		cmpw   $0x0,0x8(%esp)
		je     jump_55a30
	jump_55a26:
		call   func_4a321
		jmp    jump_55b46
	jump_55a30:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    0x4(%esp),%eax
		add    $0x8,%eax
		cwtl
		call   func_109ce
		cmp    %dx,%di
		jne    jump_55a5c
		cmp    0xc(%esp),%ax
		je     jump_55b46
	jump_55a5c:
		mov    $0x1,%ebx
		call   func_4a210
		mov    %ebx,0x8(%esp)
		jmp    jump_55b46
	jump_55a6f:
		mov    (%esp),%eax
		sar    $0x10,%eax
		call   func_109a3
		mov    %eax,%edx
		mov    0x4(%esp),%eax
		add    $0x8,%eax
		cwtl
		call   func_109ce
		movswl %ax,%ebp
		movswl %dx,%esi
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_11db2
		test   %eax,%eax
		je     jump_55b46
		cmpb   $0x1,0xe(%eax)
		jne    jump_55ab5
		mov    %eax,%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		call   func_4d674
		jmp    jump_55aba
	jump_55ab5:
		call   func_493a3
	jump_55aba:
		movl   $0x1,0x8(%esp)
		jmp    jump_55b46
	jump_55ac7:
		call   func_19fa3
		cmp    $0x1,%ax
		jne    jump_55b46
		movswl %cx,%eax
		call   func_1979f
		inc    %ecx
		test   %eax,%eax
		jne    jump_55aed
		call   func_1979f
		mov    $0x1,%ecx
	jump_55aed:
		mov    %eax,%ebx
		movsbl (%eax),%esi
		movsbl 0x1(%eax),%edx
		mov    %esi,%eax
		call   func_4d674
		jmp    jump_55b46
	jump_55aff:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_4a3ff
		mov    %eax,0x8(%esp)
		test   %ax,%ax
		je     jump_55b46
		jmp    jump_55a26
	jump_55b19:
		call   func_19fa3
		test   %ax,%ax
		je     jump_55b46
		call   func_10392
		cmp    $0x1,%ax
		jne    jump_55b46
		xor    %eax,%eax
		call   func_19f9d
		mov    $0x32,%eax
		call   func_1038b
		xor    %eax,%eax
		call   func_44dec
	jump_55b46:
		cmpw   $0x1b,(%esp)
		jne    jump_55828
		add    $0x10,%esp
		jmp    jump_55714


/*----------------------------------------------------------------*/
func_55b59:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		call   w_time
		mov    %eax,data_1120e8
		call   w_srand
		call   func_103a8
		mov    $0xa0,%eax
		mov    $data_12824c,%edx
		call   func_5bcaa
		call   func_102b5
		call   func_5a8c3
		call   func_49703
		call   func_4fe74
		call   func_5d7dd
		call   func_5f874
		call   func_5f7f5
		mov    $data_7821e,%eax
		mov    $data_12824c,%ebx
		call   func_6053b
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		call   func_5cea3
		mov    $data_7822a,%eax
		call   func_49b16
		mov    $data_78233,%eax
		call   func_13909
		mov    $0x1,%eax
		mov    %cs,%ecx
		call   func_5d3bf
		mov    $0x2,%eax
		mov    $mouse_isr,%ebx
		call   func_5d388
		mov    $0x7f,%eax
		call   func_5d15a
		xor    %eax,%eax
		mov    $data_7823c,%edx
		call   func_49c05
		mov    $data_78249,%eax
		mov    $0xff,%ebx
		call   func_5da68
		mov    $0x1100,%edx
		mov    $0x4,%eax
		call   func_5db66
		call   func_11bb8
		call   func_5004f
		call   func_44bce
		mov    %esi,%eax
		call   func_4ed18
		call   func_4e448
		call   func_44ab6
		call   func_18115
		call   func_2c643
		call   func_300a0
		mov    $0x4,%eax
		mov    $0x3c,%ebx
		call   func_6102c
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_6106c
		mov    $0x1,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		call   func_6106c
		mov    $0xe,%edx
		mov    $0x2,%eax
		call   func_610b6
		mov    $0x1,%eax
		mov    $0x1,%edx
		call   func_61011
		call   func_4f3bd
		mov    $data_78254,%eax
		call   func_4f460
		mov    $0x2,%edx
		mov    $data_78261,%eax
		call   func_4f460
		mov    $0x3,%edx
		mov    $data_7826e,%eax
		call   func_4f460
		mov    $0x4,%edx
		mov    $data_7827b,%eax
		call   func_4f460
		mov    $0x5,%edx
		mov    $data_78288,%eax
		call   func_4f460
		mov    $0x6,%edx
		mov    $data_78295,%eax
		call   func_4f460
		mov    $0x7,%edx
		mov    $data_782a2,%eax
		call   func_4f460
		mov    $0x8,%edx
		mov    $data_782af,%eax
		call   func_4f460
		mov    $0x9,%edx
		mov    $data_782bc,%eax
		call   func_4f460
		mov    $0xa,%edx
		mov    $data_782c9,%eax
		call   func_4f460
		mov    $0xb,%edx
		mov    $data_782d6,%eax
		call   func_4f460
		mov    $0xc,%edx
		mov    $data_782e3,%eax
		call   func_4f460
		mov    $0xd,%edx
		mov    $data_782f0,%eax
		call   func_4f460
		mov    $0xe,%edx
		mov    $data_782fd,%eax
		call   func_4f460
		mov    $0xf,%edx
		mov    $data_7830a,%eax
		call   func_4f460
		mov    $0x10,%edx
		mov    $data_78317,%eax
		call   func_4f460
		mov    $0x11,%edx
		mov    $data_78324,%eax
		call   func_4f460
		mov    $0x12,%edx
		mov    $data_78331,%eax
		call   func_4f460
		call   func_44c75
		mov    $0x13,%edx
		mov    $data_7833e,%eax
		call   func_4f460
		mov    $0x14,%edx
		mov    $data_7834b,%eax
		call   func_4f460
		mov    $0x15,%edx
		mov    $data_78358,%eax
		call   func_4f460
		mov    $0x16,%edx
		mov    $data_78365,%eax
		call   func_4f460
		mov    $0x17,%edx
		mov    $data_78372,%eax
		call   func_4f460
		mov    $0x18,%edx
		mov    $data_7837f,%eax
		call   func_4f460
		mov    $0x19,%edx
		mov    $data_7838c,%eax
		call   func_4f460
		mov    $0x1a,%edx
		mov    $data_78399,%eax
		call   func_4f460
		mov    $0x1b,%edx
		mov    $data_783a6,%eax
		call   func_4f460
		mov    $0x1c,%edx
		mov    $data_783b3,%eax
		call   func_4f460
		mov    $0x1d,%edx
		mov    $data_783c0,%eax
		call   func_4f460
		mov    $0x1e,%edx
		mov    $data_783cd,%eax
		call   func_4f460
		mov    $0x1f,%edx
		mov    $data_783da,%eax
		call   func_4f460
		mov    $0x20,%edx
		mov    $data_783e7,%eax
		call   func_4f460
		mov    $0x21,%edx
		mov    $data_783f4,%eax
		call   func_4f460
		mov    $0x22,%edx
		mov    $data_78401,%eax
		call   func_4f460
		call   func_44c75
		call   func_4f369
		call   func_4f427
		call   func_103a0
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_55ebc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		call   func_5af1b
		mov    $0x200,%ebx
		mov    $data_7840e,%edx
		mov    $data_78416,%eax
		call   func_4981d
		mov    $0x2,%ebx
		movswl %ax,%ecx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		call   func_5aa45
		mov    $0x3,%eax
		mov    $0x64,%edx
		call   func_1033b
		mov    %dx,(%esp)
		jmp    jump_55f2f
	jump_55f0d:
		mov    -0x2(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		sar    $0x10,%ecx
		call   func_5fa2c
#if 1
    /* To exit from game, data_789a7 should be 1.
     *
     * PIR ISRs are incomplete in WarGS. Therefore, it is not 1.
     * The game is never terminated.
     */
    movb   $1,data_789a7
#endif
		call   func_499e4
		subw   $0x5,(%esp)
	jump_55f2f:
		cmpw   $0x0,(%esp)
		jge    jump_55f0d
		call   func_103a8
		call   func_5c977
		call   func_102e3
		call   func_5d80b
		call   func_5d5ed
		call   func_4ff8e
		xor    %eax,%eax
		call   w_time
		mov    data_1120e8,%edx
		mov    $0xa0,%ecx
		sub    %edx,%eax
		xor    %edx,%edx
		div    %ecx
		mov    data_1120e8,%ebx
		add    %eax,%ebx
		mov    $data_1120e8,%eax
		mov    %ebx,data_1120e8
		call   w_time
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
GLOBAL (combatii)	/* 0x55f8b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		cmp    $0x1,%ax
		jne    jump_55ffb
		push   $0x200
		push   $data_78420
		call   w_dos_open
		mov    %eax,%edx
		cwtl
		add    $0x8,%esp
		cmp    $0xffffffff,%eax
		jne    jump_55fc6
		mov    $data_7842c,%eax
		call   func_4fdd1
		mov    $0xff,%eax
		call   w_dos_exit
	jump_55fc6:
		mov    $0xf,%ebx
		movswl %dx,%ecx
		mov    $data_1120ec,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %esp,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		mov    $data_78420,%eax
		call   w_dos_unlink
		jmp    jump_56032
	jump_55ffb:
		cmp    $0x2,%ax
		je     jump_5600b
		mov    $0xff,%eax
		call   w_dos_exit
	jump_5600b:
		mov    $data_1120ec,%edi
		mov    0x4(%edx),%esi
		push   %edi
	jump_56014:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_5602c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_56014
	jump_5602c:
		pop    %edi
		xor    %ah,%ah
		mov    %ah,(%esp)
	jump_56032:
		mov    $data_1120ec,%eax
		xor    %edx,%edx
		call   func_4fd6b
		xor    %eax,%eax
		call   func_4ec9a
		mov    $data_1120ec,%eax
		call   func_55b59
		call   func_55518
		call   func_137d1
		cmpb   $0x1,(%esp)
		jne    jump_56066
		call   func_4fd25
		jmp    jump_5606b
	jump_56066:
		call   func_4fcd9
	jump_5606b:
		call   func_49411
		cmp    $0x1,%ax
		jne    jump_5607d
		xor    %eax,%eax
		call   func_44d6e
	jump_5607d:
		call   func_5580f
		call   func_55ebc
		mov    $0xff,%eax
		call   w_dos_exit
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
.data
data_56099:
		.ascii  "\x0a\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0d\x00\x0c\x00\x0d\x00\x0d\x00"
		.ascii  "\x0c\x00\x0d\x00\x0d\x00"
data_560af:
		.ascii  "\x0a\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0d\x00\x0c\x00\x0d\x00\x0d\x00"
		.ascii  "\x0c\x00\x0d\x00\x0d\x00\x0a\x00"
		.ascii  "\x0b\x00\x0c\x00\x0d\x00\x0d\x00"
		.ascii  "\x0c\x00\x0d\x00\x0d\x00\x0c\x00"
		.ascii  "\x0d\x00\x0d\x00"
data_560db:
		.ascii  "\x01"
		.ascii   "012345"
		.ascii  "\x07\x00\x08\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x0a\x00\x09\x00"
data_560f0:
		.ascii  "\x01\x10\x11\x12\x13\x14\x15\x16"
		.ascii  "\x17"
data_560f9:
		.ascii  "\x01\x10\x11"
.text


/*----------------------------------------------------------------*/
func_56102:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x8(%ebx),%eax
		mov    0x6(%ebx),%si
		mov    0x4(%ebx),%di
		mov    %eax,%ebx
		add    %edi,%ecx
		add    %esi,%edx
		movswl %cx,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		call   func_5efb9
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_56129:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ecx,%ecx
	jump_5612e:
		mov    $0x1a,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		movswl %cx,%eax
		mov    $0x1a,%ebx
		mov    %edx,data_112160(,%eax,4)
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ecx
		call   w_dos_memset
		cmp    $0x64,%cx
		jl     jump_5612e
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5615d:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
	jump_56160:
		movswl %dx,%eax
		mov    data_112160(,%eax,4),%eax
		inc    %edx
		call   w_dos_free
		cmp    $0x64,%dx
		jl     jump_56160
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_56178:
/*----------------------------------------------------------------*/
		push   %esi
		mov    %edx,%esi
		cwtl
		mov    data_112160(,%eax,4),%edx
		mov    %si,(%edx)
		mov    data_112160(,%eax,4),%edx
		mov    %bx,0x2(%edx)
		mov    data_112160(,%eax,4),%edx
		mov    0xc(%esp),%ebx
		mov    %bx,0x4(%edx)
		mov    data_112160(,%eax,4),%edx
		movw   $0x0,0x6(%edx)
		mov    data_112160(,%eax,4),%edx
		mov    %cx,0x8(%edx)
		mov    data_112160(,%eax,4),%edx
		mov    0x8(%esp),%ebx
		mov    %bx,0xa(%edx)
		mov    data_112160(,%eax,4),%edx
		movw   $0x0,0xc(%edx)
		mov    data_112160(,%eax,4),%eax
		movw   $0x0,0xe(%eax)
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_561e5:
/*----------------------------------------------------------------*/
		cwtl
		mov    data_112160(,%eax,4),%eax
		movw   $0x0,0x4(%eax)
		ret


/*----------------------------------------------------------------*/
func_561f4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		movswl %dx,%edx
		cwtl
		mov    0x8(%ebx),%ecx
		mov    0x4(%ebx),%esi
		mov    0x2(%ebx),%ebx
		sar    $0x10,%esi
		sar    $0x10,%ebx
		add    %esi,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		call   func_5f29d
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_56217:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x8(%ebx),%eax
		mov    0x6(%ebx),%si
		mov    0x4(%ebx),%di
		mov    %eax,%ebx
		add    %edi,%ecx
		add    %esi,%edx
		movswl %cx,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		call   func_5f3fd
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5623e:
/*----------------------------------------------------------------*/
		mov    %ax,data_11233c
		ret


/*----------------------------------------------------------------*/
func_56245:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x300,%esp
		push   %eax
		push   %edx
		push   %ebx
		xor    %eax,%eax
	jump_56253:
		mov    data_11233a,%esi
		movswl %ax,%edi
		sar    $0x10,%esi
		lea    (%edi,%edi,2),%edi
		lea    (%esi,%esi,2),%esi
		lea    0xc(%esp,%edi,1),%edi
		lea    data_12824c(%esi),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_56253
		lea    0xc(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    0x8(%esp),%esi
		call   func_5fc21
		jmp    jump_562b0
	jump_56294:
		mov    $data_12824c,%ebx
		movswl %si,%ecx
		mov    $0xfe,%edx
		push   %ecx
		xor    %eax,%eax
		lea    0x10(%esp),%ecx
		call   func_5fd1c
		add    (%esp),%esi
	jump_562b0:
		cmp    0x4(%esp),%si
		jne    jump_56294
		add    $0x30c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_562c1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    data_7550e,%ax
		test   %ax,%ax
		jbe    jump_562de
		cmp    $0x1,%ax
		je     jump_5632a
		jmp    jump_56374
	jump_562de:
		mov    data_7550c,%ax
		add    $0x3,%eax
		movswl %ax,%edx
		mov    data_7550a,%eax
		mov    $0x3,%ebx
		sar    $0x10,%eax
		call   func_56245
		mov    data_7550c,%si
		add    $0x3,%esi
		mov    %si,data_7550c
		cmp    %si,%cx
		jge    jump_56374
		mov    $0x1,%eax
		mov    %cx,data_7550c
		mov    %ax,data_7550e
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_5632a:
		mov    data_7550c,%ax
		sub    $0x3,%eax
		movswl %ax,%edx
		mov    data_7550a,%eax
		mov    $0xfffffffd,%ebx
		sar    $0x10,%eax
		call   func_56245
		mov    data_7550c,%dx
		sub    $0x3,%edx
		mov    %dx,data_7550c
		cmp    %dx,%si
		jle    jump_56374
		mov    %si,data_7550c
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %cx,data_7550e
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_56374:
		mov    $0x2,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5637d:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %edx,%esi
		xor    %eax,%eax
		mov    $0x32,%edx
		call   func_61011
		mov    $0x1,%eax
		movswl %bx,%ebx
		call   func_61147
		mov    $0x1,%eax
		movswl %si,%esi
		call   func_61011
		mov    $data_78430,%eax
		mov    %ebx,%edx
		call   func_1fea4
		mov    %esi,%eax
		call   func_1124a
		mov    %ebx,%edx
		mov    %esi,%eax
		call   func_11db2
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		call   func_135eb
		mov    $0x5,%eax
		xor    %esi,%esi
		call   func_1033b
		call   func_56129
	jump_563e4:
		push   $0x0
		mov    $0x14,%ecx
		movswl %si,%eax
		xor    %ebx,%ebx
		push   $0x5
		xor    %edx,%edx
		inc    %esi
		call   func_56178
		cmp    $0x14,%si
		jl     jump_563e4
		xor    %esi,%esi
	jump_56402:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		movswl %si,%edx
		mov    $0xe,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    $0x6,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		mov    -0x2(%esp),%eax
		add    %edx,%ebx
		mov    0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %esi
		call   func_1fffe
		call   func_12bee
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		cmp    $0x1e,%si
		jl     jump_56402
		mov    $0xf,%eax
		call   func_1033b
		xor    %esi,%esi
	jump_5646e:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		movswl %si,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    0x2(%esp),%edx
		add    %eax,%ebx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_561f4
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		cmp    $0x6,%si
		jl     jump_5646e
		mov    $0xa,%eax
		xor    %edx,%edx
		call   func_1033b
		mov    %edx,0xc(%esp)
		mov    %edx,0x8(%esp)
		mov    $0x14,%ebp
	jump_564d8:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $data_f0de6,%ebx
		call   func_10aeb
		call   func_12bee
		mov    0x2(%esp),%edx
		mov    -0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x8(%esp),%ecx
		call   func_561f4
		test   %cx,%cx
		sete   %al
		xor    %ah,%ah
		xor    %edi,%edi
		mov    %eax,0x8(%esp)
		jmp    jump_56630
	jump_56522:
		movswl %di,%esi
		mov    %esi,%edx
		shl    $0x2,%edx
		mov    data_112160(%edx),%eax
		mov    0x4(%eax),%bx
		cmp    $0x1,%bx
		jne    jump_565cc
		add    %bx,0xc(%eax)
		mov    data_112160(%edx),%eax
		incw   0x6(%eax)
		mov    data_112160(%edx),%eax
		cmpw   $0x1e,0x6(%eax)
		jle    jump_56573
		mov    %esi,%eax
		mov    0xc(%esp),%esi
		inc    %esi
		call   func_561e5
		mov    %esi,0xc(%esp)
		cmp    $0xf,%si
		je     jump_5663a
	jump_56573:
		movswl %di,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56594
		movw   $0x0,0xc(%eax)
		jmp    jump_5662f
	jump_56594:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_561f4
		mov    data_112160(%esi),%eax
		mov    0x2(%eax),%dx
		add    $0x2,%edx
		mov    %dx,0x2(%eax)
		jmp    jump_5662f
	jump_565cc:
		call   w_rand
		mov    %eax,%edx
		mov    $0xf,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x5
		call   w_rand
		mov    %eax,%edx
		mov    $0x14,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		sub    $0x32,%eax
		add    %edx,%eax
		movswl %ax,%ebx
		call   w_rand
		mov    %eax,%edx
		mov    $0x1e,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		sub    $0xa,%eax
		add    %eax,%edx
		mov    $0x14,%ecx
		movswl %dx,%edx
		mov    %esi,%eax
		call   func_56178
	jump_5662f:
		inc    %edi
	jump_56630:
		cmp    $0x14,%di
		jl     jump_56522
	jump_5663a:
		call   func_454d5
		call   func_5e9e8
		mov    0xc(%esp),%ecx
		call   func_499e4
		cmp    $0xf,%cx
		jne    jump_564d8
		call   func_1ffcd
		call   func_61115
		call   func_5615d
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5666e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ecx
		mov    $data_7843d,%eax
		call   func_1fea4
		movswl %dx,%ebx
		movswl %cx,%ecx
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_1124a
		call   func_56129
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_11db2
		lea    0x4(%esp),%ebx
		lea    0xc(%esp),%edx
		call   func_135eb
		mov    $0x14,%eax
		call   func_1033b
		mov    $0x14,%eax
		call   func_5623e
	jump_566c0:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		cmp    $0x1,%ax
		jne    jump_566c0
		mov    $0x5,%edx
		mov    %dx,0x8(%esp)
		mov    %edx,(%esp)
		mov    $0x5,%ebp
	jump_566e4:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		mov    $0x32,%edx
		mov    $0x4b,%eax
		xor    %edi,%edi
		call   func_562c1
		jmp    jump_5680c
	jump_56715:
		movswl %di,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_567b7
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jbe    jump_5674d
		cmp    $0x1,%edx
		je     jump_56786
		jmp    jump_5680b
	jump_5674d:
		push   $0x1
		push   %ebp
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
	jump_5677c:
		call   func_56178
		jmp    jump_5680b
	jump_56786:
		push   %edx
		push   $0x8
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		jmp    jump_5677c
	jump_567b7:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_1fffe
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_5680b
		mov    %esi,%eax
		mov    (%esp),%esi
		inc    %esi
		call   func_561e5
		mov    %esi,(%esp)
		cmp    $0x1f4,%si
		jg     jump_56816
	jump_5680b:
		inc    %edi
	jump_5680c:
		cmp    $0x64,%di
		jl     jump_56715
	jump_56816:
		cmpw   $0x12c,(%esp)
		jg     jump_56858
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		test   %edx,%edx
		jne    jump_5683a
		mov    $0x32,%eax
		call   func_4f4cd
	jump_5683a:
		call   func_454d5
		mov    0x8(%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,0x8(%esp)
		jmp    jump_566e4
	jump_56858:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
	jump_56873:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		test   %ax,%ax
		jne    jump_56873
		call   func_1ffcd
		call   func_5615d
		add    $0x10,%esp
		jmp    jump_5707a


/*----------------------------------------------------------------*/
func_56896:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    $data_7843d,%eax
		call   func_1fea4
		movswl %dx,%ebx
		mov    $data_7844a,%eax
		movswl %cx,%ecx
		call   func_1fea4
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_1124a
		call   func_56129
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_11db2
		lea    0x8(%esp),%ebx
		mov    %esp,%edx
		call   func_135eb
		mov    $0x14,%eax
		call   func_1033b
		mov    $0x14,%eax
		call   func_5623e
	jump_568f0:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		cmp    $0x1,%ax
		jne    jump_568f0
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %dx,0xc(%esp)
		mov    $0x5,%ebp
	jump_56910:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %ebx,%ebx
		call   func_10aeb
		call   func_12bee
		mov    $0x32,%edx
		mov    $0x4b,%eax
		mov    %bx,0x4(%esp)
		call   func_562c1
		jmp    jump_56a3f
	jump_56946:
		mov    0x2(%esp),%esi
		sar    $0x10,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_569ec
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jbe    jump_56982
		cmp    $0x1,%edx
		je     jump_569bb
		jmp    jump_56a3a
	jump_56982:
		push   $0x1
		push   %ebp
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
	jump_569b1:
		call   func_56178
		jmp    jump_56a3a
	jump_569bb:
		push   %edx
		push   $0x8
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		jmp    jump_569b1
	jump_569ec:
		mov    0x6(%eax),%edx
		mov    0xa(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_1fffe
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56a3a
		mov    %esi,%eax
		inc    %edi
		call   func_561e5
		cmp    $0x1f4,%di
		jg     jump_56a4b
	jump_56a3a:
		incw   0x4(%esp)
	jump_56a3f:
		cmpw   $0x50,0x4(%esp)
		jl     jump_56946
	jump_56a4b:
		cmp    $0x1f4,%di
		jg     jump_56b96
		movw   $0x50,0x10(%esp)
		jmp    jump_56b30
	jump_56a62:
		mov    0xe(%esp),%esi
		sar    $0x10,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_56acf
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		jne    jump_56b2b
		push   $0x1
		push   $0x7
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0xd,%ecx
		movswl %dx,%edx
		mov    %esi,%eax
		call   func_56178
		jmp    jump_56b2b
	jump_56acf:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    data_112160(%ecx),%eax
		mov    (%eax),%dx
		add    $0x2,%edx
		mov    %dx,(%eax)
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56b2b
		mov    %esi,%eax
		inc    %edi
		call   func_561e5
		cmp    $0x1f4,%di
		jg     jump_56b3c
	jump_56b2b:
		incw   0x10(%esp)
	jump_56b30:
		cmpw   $0x64,0x10(%esp)
		jl     jump_56a62
	jump_56b3c:
		cmp    $0x1f4,%di
		jg     jump_56b96
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		test   %edx,%edx
		jne    jump_56b5f
		mov    $0x32,%eax
		call   func_4f4cd
	jump_56b5f:
		mov    $0xa,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_56b78
		mov    $0x33,%eax
		call   func_4f4cd
	jump_56b78:
		call   func_454d5
		mov    0xc(%esp),%ecx
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		mov    %cx,0xc(%esp)
		jmp    jump_56910
	jump_56b96:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
	jump_56bb1:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		test   %ax,%ax
		jne    jump_56bb1
		call   func_1ffcd
		call   func_5615d
		add    $0x14,%esp
		jmp    jump_5707a


/*----------------------------------------------------------------*/
func_56bd4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ecx
		mov    $data_7843d,%eax
		call   func_1fea4
		movswl %dx,%ebx
		mov    $data_7844a,%eax
		movswl %cx,%ecx
		call   func_1fea4
		mov    $data_78457,%eax
		mov    %ebx,%edx
		call   func_1fea4
		mov    %ecx,%eax
		call   func_1124a
		call   func_56129
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   func_11db2
		lea    0x10(%esp),%ebx
		lea    0x14(%esp),%edx
		call   func_135eb
		mov    $0x14,%eax
		call   func_1033b
		mov    $0x14,%eax
		call   func_5623e
	jump_56c3a:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		cmp    $0x1,%ax
		jne    jump_56c3a
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		mov    %dx,(%esp)
		mov    %edx,0xc(%esp)
		mov    %cx,0x4(%esp)
		mov    $0x5,%ebp
	jump_56c65:
		mov    0x4(%esp),%esi
		mov    $0xf,%ecx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_10aeb
		mov    %si,0x4(%esp)
		mov    $0x32,%edx
		mov    0x2(%esp),%ebx
		mov    $0x4b,%eax
		sar    $0x10,%ebx
		call   func_562c1
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_56cd5
		cmp    $0x28,%si
		jge    jump_56cd5
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		push   $0x1
		push   $0x3
		mov    $0xaa,%ebx
		mov    $0x14,%ecx
		add    $0x5a,%eax
		xor    %edx,%edx
		cwtl
		call   func_56178
	jump_56cd5:
		mov    $0x5a,%edi
		xor    %esi,%esi
	jump_56cdc:
		movswl %si,%ecx
		shl    $0x2,%ecx
		mov    data_1122c8(%ecx),%eax
		cmpw   $0x1,0x4(%eax)
		jne    jump_56dc4
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_1fffe
		mov    data_1122c8(%ecx),%eax
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    (%eax),%edx
		movswl (%eax),%eax
		sar    $0x10,%edx
		add    $0x78,%eax
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    data_1122c8(%ecx),%eax
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    (%eax),%edx
		movswl (%eax),%eax
		sar    $0x10,%edx
		add    $0xf0,%eax
		add    $data_f0daa,%ebx
		call   func_1fffe
		mov    data_1122c8(%ecx),%eax
		incw   0x6(%eax)
		mov    data_1122c8(%ecx),%eax
		cmpw   $0x28,0x6(%eax)
		jle    jump_56d95
		movswl %di,%eax
		call   func_561e5
		jmp    jump_56dc4
	jump_56d95:
		incw   0xc(%eax)
		mov    data_1122c8(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56daf
		movw   $0x0,0xc(%eax)
	jump_56daf:
		movswl %si,%eax
		mov    data_1122c8(,%eax,4),%eax
		mov    0x2(%eax),%dx
		sub    $0x6,%edx
		mov    %dx,0x2(%eax)
	jump_56dc4:
		inc    %esi
		inc    %edi
		cmp    $0x3,%si
		jl     jump_56cdc
		call   func_12bee
		xor    %eax,%eax
		mov    %ax,0x8(%esp)
		jmp    jump_56ee2
	jump_56de1:
		mov    0x6(%esp),%esi
		sar    $0x10,%esi
		mov    %esi,%edi
		shl    $0x2,%edi
		mov    data_112160(%edi),%ecx
		cmpw   $0x0,0x4(%ecx)
		jne    jump_56e87
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jbe    jump_56e1d
		cmp    $0x1,%edx
		je     jump_56e56
		jmp    jump_56edd
	jump_56e1d:
		push   $0x1
		push   %ebp
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
	jump_56e4c:
		call   func_56178
		jmp    jump_56edd
	jump_56e56:
		push   %edx
		push   $0x8
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		jmp    jump_56e4c
	jump_56e87:
		mov    0x6(%ecx),%eax
		mov    0xa(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %edx,%eax
		imul   $0xc,%eax,%eax
		mov    (%ecx),%edx
		mov    $data_f0daa,%ebx
		sar    $0x10,%edx
		add    %eax,%ebx
		movswl (%ecx),%eax
		call   func_1fffe
		mov    data_112160(%edi),%eax
		incw   0xc(%eax)
		mov    data_112160(%edi),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56edd
		mov    0xc(%esp),%ecx
		mov    %esi,%eax
		inc    %ecx
		call   func_561e5
		mov    %ecx,0xc(%esp)
		cmp    $0x1f4,%cx
		jg     jump_56eee
	jump_56edd:
		incw   0x8(%esp)
	jump_56ee2:
		cmpw   $0x50,0x8(%esp)
		jl     jump_56de1
	jump_56eee:
		cmpw   $0x1f4,0xc(%esp)
		jg     jump_57041
		mov    $0x50,%edi
		jmp    jump_56fd2
	jump_56f05:
		movswl %di,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_56f6d
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1,%edx
		jne    jump_56fd1
		push   %edx
		push   $0x7
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0xd,%ecx
		movswl %dx,%edx
		mov    %esi,%eax
		call   func_56178
		jmp    jump_56fd1
	jump_56f6d:
		mov    0x6(%eax),%edx
		mov    0xa(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%ebx
		mov    (%eax),%edx
		add    $data_f0daa,%ebx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_1fffe
		mov    data_112160(%ecx),%eax
		mov    (%eax),%dx
		add    $0x2,%edx
		mov    %dx,(%eax)
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_56fd1
		mov    %esi,%eax
		mov    0xc(%esp),%esi
		inc    %esi
		call   func_561e5
		mov    %esi,0xc(%esp)
		cmp    $0x1f4,%si
		jg     jump_56fdc
	jump_56fd1:
		inc    %edi
	jump_56fd2:
		cmp    $0x5a,%di
		jl     jump_56f05
	jump_56fdc:
		cmpw   $0x1f4,0xc(%esp)
		jg     jump_57041
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		test   %edx,%edx
		jne    jump_5700c
		mov    $0x2,%eax
		call   func_499bd
		cwtl
		add    %eax,%eax
		add    $0x32,%eax
		call   func_4f4cd
	jump_5700c:
		mov    $0xa,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_57025
		mov    $0x33,%eax
		call   func_4f4cd
	jump_57025:
		call   func_454d5
		mov    (%esp),%ebx
		call   func_5e9e8
		inc    %ebx
		call   func_499e4
		mov    %bx,(%esp)
		jmp    jump_56c65
	jump_57041:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
	jump_5705c:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		test   %ax,%ax
		jne    jump_5705c
	jump_5706d:
		call   func_1ffcd
		call   func_5615d
		add    $0x18,%esp
	jump_5707a:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_57081:
		.long   func_5739c
		.long   func_573bf
		.long   func_573db
		.long   func_57406

vtable_57091:
		.long   func_574b6
		.long   func_574d7
		.long   func_574f6
		.long   func_5751f


/*----------------------------------------------------------------*/
func_570a1:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		mov    %eax,%ebx
		mov    $data_78464,%eax
		call   func_1fea4
		movswl %dx,%ecx
		mov    $data_7843d,%eax
		movswl %bx,%ebx
		call   func_1fea4
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_1124a
		call   func_56129
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   func_11db2
		lea    0x10(%esp),%ebx
		mov    %esp,%edx
		call   func_135eb
		push   $0x1
		mov    $0x53,%ecx
		mov    $0x64,%ebx
		push   $0x7
		mov    $0x4e,%eax
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x4c,%ecx
		mov    $0x64,%ebx
		mov    $0x140,%edx
		push   $0x7
		mov    $0x4f,%eax
		xor    %edi,%edi
		call   func_56178
		mov    $0xa,%eax
		mov    $0x188,%edx
		call   func_1033b
		mov    $0x32,%eax
		mov    $0xffffffb8,%ecx
		call   func_4f4cd
		mov    %dx,0xc(%esp)
	jump_57143:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    $0x7,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%esi
		lea    0x53(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    $0x64,%edx
		add    %eax,%ebx
		movswl %cx,%eax
		call   func_56217
		lea    0x4c(%esi),%ebx
		imul   $0xc,%ebx,%ebx
		inc    %edi
		mov    0xa(%esp),%eax
		mov    $0x64,%edx
		sar    $0x10,%eax
		add    $data_f0daa,%ebx
		add    $0x4,%ecx
		call   func_56217
		call   func_454d5
		mov    0xc(%esp),%ebx
		call   func_5e9e8
		sub    $0x4,%ebx
		call   func_499e4
		mov    %bx,0xc(%esp)
		cmp    $0x4,%cx
		jne    jump_57143
		mov    $0x14,%eax
		call   func_1033b
		xor    %ecx,%ecx
		mov    $0x14,%eax
		mov    %ecx,0x14(%esp)
		call   func_5623e
		mov    $0x33,%eax
		mov    %ecx,0x8(%esp)
		call   func_4f4cd
		mov    $0x64,%ebp
	jump_57200:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		call   w_rand
		mov    %eax,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		dec    %edx
		mov    $0x4b,%eax
		mov    %dx,data_ba838
		mov    $0x32,%edx
		xor    %edi,%edi
		call   func_562c1
		jmp    jump_57345
	jump_5724a:
		movswl %di,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_572ee
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jbe    jump_57282
		cmp    $0x1,%edx
		je     jump_572bf
		jmp    jump_57344
	jump_57282:
		push   $0x1
		push   $0x5
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x5a,%ecx
	jump_572b0:
		movswl %dx,%edx
		mov    %esi,%eax
		call   func_56178
		jmp    jump_57344
	jump_572bf:
		push   %edx
		push   $0x8
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x5f,%ecx
		jmp    jump_572b0
	jump_572ee:
		mov    0x6(%eax),%edx
		mov    0xa(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_1fffe
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_57344
		mov    %esi,%eax
		mov    0x14(%esp),%esi
		inc    %esi
		call   func_561e5
		mov    %esi,0x14(%esp)
		cmp    $0x1f4,%si
		jg     jump_5734f
	jump_57344:
		inc    %edi
	jump_57345:
		cmp    $0x4e,%di
		jl     jump_5724a
	jump_5734f:
		cmpw   $0x1f4,0x14(%esp)
		jg     jump_57620
		mov    $0x50,%edi
	jump_57361:
		movswl %di,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_57422
		call   w_rand
		mov    %eax,%edx
		mov    $0xc,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		ja     jump_57468
		jmp    *vtable_57081(,%edx,4)


/*----------------------------------------------------------------*/
func_5739c:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0x9
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		xor    %ecx,%ecx
	jump_573b3:
		movswl %dx,%ebx
		mov    %esi,%eax
		mov    $0x1e,%edx
		jmp    jump_573ff


/*----------------------------------------------------------------*/
func_573bf:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0x9
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x9,%ecx
		jmp    jump_573b3


/*----------------------------------------------------------------*/
func_573db:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0x9
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x12,%ecx
	jump_573f5:
		movswl %dx,%ebx
		mov    %esi,%eax
		mov    $0x122,%edx
	jump_573ff:
		call   func_56178
		jmp    jump_57468


/*----------------------------------------------------------------*/
func_57406:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0x9
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x1b,%ecx
		jmp    jump_573f5
	jump_57422:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_56217
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_57468
		mov    %esi,%eax
		call   func_561e5
	jump_57468:
		inc    %edi
		cmp    $0x5a,%di
		jl     jump_57361
		mov    $0x5a,%edi
	jump_57478:
		movswl %di,%esi
		mov    %esi,%ecx
		shl    $0x2,%ecx
		mov    data_112160(%ecx),%eax
		cmpw   $0x0,0x4(%eax)
		jne    jump_5753b
		call   w_rand
		mov    %eax,%edx
		mov    $0xc,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		lea    -0x1(%edx),%eax
		cmp    $0x3,%eax
		ja     jump_57581
		jmp    *vtable_57091(,%eax,4)


/*----------------------------------------------------------------*/
func_574b6:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0xa
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x24,%ecx
		movswl %dx,%ebx
		mov    %esi,%eax
	jump_574d0:
		mov    $0xdc,%edx
		jmp    jump_57518


/*----------------------------------------------------------------*/
func_574d7:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0xa
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x2e,%ecx
		add    $0x64,%edx
		mov    %esi,%eax
		movswl %dx,%ebx
		jmp    jump_574d0


/*----------------------------------------------------------------*/
func_574f6:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0xa
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x38,%ecx
		add    $0x64,%edx
		mov    %esi,%eax
		movswl %dx,%ebx
	jump_57513:
		mov    $0x6e,%edx
	jump_57518:
		call   func_56178
		jmp    jump_57581


/*----------------------------------------------------------------*/
func_5751f:
/*----------------------------------------------------------------*/
		push   $0x1
		push   $0xa
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x42,%ecx
		movswl %dx,%ebx
		mov    %esi,%eax
		jmp    jump_57513
	jump_5753b:
		mov    0x6(%eax),%edx
		mov    0xa(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_56217
		mov    data_112160(%ecx),%eax
		incw   0xc(%eax)
		mov    data_112160(%ecx),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_57581
		mov    %esi,%eax
		call   func_561e5
	jump_57581:
		inc    %edi
		cmp    $0x5f,%di
		jl     jump_57478
		mov    $0x4e,%esi
	jump_57591:
		movswl %si,%ecx
		mov    data_112160(,%ecx,4),%eax
		mov    0x6(%eax),%edx
		mov    0xa(%eax),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_56217
		mov    data_112160(,%ecx,4),%eax
		incw   0xc(%eax)
		mov    data_112160(,%ecx,4),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_575e2
		movw   $0x0,0xc(%eax)
	jump_575e2:
		inc    %esi
		cmp    $0x50,%si
		jl     jump_57591
		mov    0x8(%esp),%esi
		cmp    $0x5,%si
		jne    jump_57605
		mov    $0x33,%eax
		call   func_4f4cd
		xor    %eax,%eax
		mov    %eax,0x8(%esp)
		jmp    jump_5760c
	jump_57605:
		mov    %esi,%edi
		inc    %edi
		mov    %edi,0x8(%esp)
	jump_5760c:
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		jmp    jump_57200
	jump_57620:
		xor    %ebx,%ebx
		mov    $data_f0daa,%ebp
		mov    %bx,data_ba838
		xor    %edi,%edi
	jump_57630:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x4e,%esi
		call   func_10aeb
		call   func_12bee
	jump_57650:
		movswl %si,%ecx
		mov    data_112160(,%ecx,4),%eax
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %edx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		add    %ebp,%ebx
		call   func_56217
		mov    data_112160(,%ecx,4),%eax
		incw   0xc(%eax)
		mov    data_112160(,%ecx,4),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_5769a
		mov    %di,0xc(%eax)
	jump_5769a:
		inc    %esi
		cmp    $0x50,%si
		jl     jump_57650
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		mov    $0x4b,%eax
		mov    %edi,%edx
		call   func_562c1
		test   %ax,%ax
		jne    jump_57630
		mov    $0x140,%edi
		mov    %ax,0x4(%esp)
		xor    %ecx,%ecx
	jump_576d1:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    $0x7,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%esi
		lea    0x53(%edx),%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebx
		mov    $0x64,%edx
		add    %eax,%ebx
		movswl %cx,%eax
		add    $0x4c,%esi
		call   func_56217
		imul   $0xc,%esi,%ebx
		mov    $0x64,%edx
		movswl %di,%eax
		sub    $0x4,%ecx
		add    $0x4,%edi
		add    $data_f0daa,%ebx
		mov    0x4(%esp),%esi
		call   func_56217
		call   func_454d5
		call   func_5e9e8
		inc    %esi
		call   func_499e4
		mov    %si,0x4(%esp)
		cmp    $0xffb4,%cx
		jne    jump_576d1
		jmp    jump_5706d


/*----------------------------------------------------------------*/
func_57766:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
		mov    %eax,%ebx
		mov    %esp,%edi
		mov    $data_56099,%esi
		xor    %edx,%edx
		mov    $data_7846c,%eax
		mov    %edx,0x28(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		call   func_56129
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11db2
		lea    0x1c(%esp),%ebx
		lea    0x20(%esp),%edx
		call   func_135eb
		push   $0x1
		xor    %ecx,%ecx
		mov    $0xa,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x3,%ecx
		mov    $0xb,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x6,%ecx
		mov    $0xc,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x9,%ecx
		mov    $0xd,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		mov    $0xa,%eax
		mov    $0x3,%ecx
		xor    %ebx,%ebx
		call   func_1033b
		mov    %ebx,0x18(%esp)
		mov    %ecx,0x24(%esp)
	jump_5782b:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xa,%edi
		call   func_454b3
	jump_57846:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%edx
		incw   0xc(%edx)
		mov    data_112160(,%eax,4),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_5786b
		movw   $0x0,0xc(%eax)
	jump_5786b:
		inc    %edi
		cmp    $0xe,%di
		jl     jump_57846
		xor    %edi,%edi
	jump_57874:
		movswl %di,%ebp
		mov    %ebp,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		mov    0x4(%eax),%dx
		cmp    $0x1,%dx
		je     jump_57974
		cmpw   $0x1,0x28(%esp)
		je     jump_57a49
		call   w_rand
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x3
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   func_56178
		call   w_rand
		mov    %eax,%edx
		mov    $0x14,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x12(%eax)
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x14(%eax)
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_57941
		mov    data_112160(%esi),%eax
		mov    0x12(%eax),%cx
		imul   $0xffffffff,%ecx,%edx
		mov    %dx,0x12(%eax)
	jump_57941:
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_57a49
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		mov    0x14(%eax),%si
		imul   $0xffffffff,%esi,%edx
		mov    %dx,0x14(%eax)
		jmp    jump_57a49
	jump_57974:
		add    %dx,0x6(%eax)
		mov    data_112160(%esi),%eax
		cmpw   $0xb,0x6(%eax)
		jl     jump_579e8
		movw   $0xb,0x6(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%dx
		mov    0x12(%eax),%bx
		add    %ebx,%edx
		mov    %dx,(%eax)
		mov    data_112160(%esi),%eax
		mov    0x2(%eax),%dx
		mov    0x14(%eax),%cx
		add    %ecx,%edx
		mov    %dx,0x2(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%si
		test   %si,%si
		jl     jump_579d7
		cmp    $0x140,%si
		jg     jump_579d7
		mov    0x2(%eax),%bx
		cmp    $0x14,%bx
		jl     jump_579d7
		cmp    $0x104,%bx
		jle    jump_579e8
	jump_579d7:
		mov    0x18(%esp),%esi
		movswl %di,%eax
		inc    %esi
		call   func_561e5
		mov    %esi,0x18(%esp)
	jump_579e8:
		cmpw   $0x1e,0x18(%esp)
		jle    jump_579f8
		movl   $0x1,0x28(%esp)
	jump_579f8:
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    jump_57a39
	jump_579fe:
		movswl %cx,%edx
		mov    -0x2(%esp,%edx,2),%edx
		sar    $0x10,%edx
		mov    data_112160(,%edx,4),%edx
		mov    0x8(%edx),%bx
		add    0xc(%edx),%bx
		movswl %bx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    0x2(%eax),%dx
		sub    %esi,%edx
		movswl (%eax),%eax
		movswl %dx,%edx
		inc    %ecx
		call   func_56102
		add    $0xa,%esi
	jump_57a39:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		cmp    0x6(%eax),%cx
		jl     jump_579fe
	jump_57a49:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_57874
		cmpw   $0x1,0x28(%esp)
		jne    jump_57a7e
		xor    %eax,%eax
		jmp    jump_57a72
	jump_57a60:
		movswl %ax,%edx
		mov    data_112160(,%edx,4),%edx
		cmpw   $0x1,0x4(%edx)
		je     jump_57a78
		inc    %eax
	jump_57a72:
		cmp    $0xa,%ax
		jl     jump_57a60
	jump_57a78:
		cmp    $0xa,%ax
		je     jump_57ab0
	jump_57a7e:
		mov    0x24(%esp),%eax
		cmp    $0x5,%ax
		jne    jump_57a9a
		mov    $0x32,%eax
		xor    %ebx,%ebx
		call   func_4f4cd
		mov    %ebx,0x24(%esp)
		jmp    jump_57aa1
	jump_57a9a:
		mov    %eax,%edx
		inc    %edx
		mov    %edx,0x24(%esp)
	jump_57aa1:
		call   func_5e9e8
		call   func_499e4
		jmp    jump_5782b
	jump_57ab0:
		call   func_1ffcd
		call   func_5615d
		add    $0x2c,%esp
	jump_57abd:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_57ac4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		mov    %eax,%ebx
		mov    %esp,%edi
		mov    $data_560af,%esi
		mov    $data_7846c,%eax
		xor    %edx,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		mov    $data_78478,%eax
		mov    %edx,0x2c(%esp)
		call   func_1fea4
		call   func_56129
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11db2
		lea    0x18(%esp),%ebx
		lea    0x24(%esp),%edx
		call   func_135eb
		push   $0x1
		xor    %ecx,%ecx
		mov    $0xa,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x3,%ecx
		mov    $0xb,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x6,%ecx
		mov    $0xc,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x9,%ecx
		mov    $0xd,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		mov    $0xa,%eax
		mov    $0x3,%ecx
		xor    %ebx,%ebx
		call   func_1033b
		mov    %ebx,0x1c(%esp)
		mov    %ecx,0x28(%esp)
	jump_57b93:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xa,%edi
		call   func_454b3
	jump_57bae:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%edx
		incw   0xc(%edx)
		mov    data_112160(,%eax,4),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_57bd3
		movw   $0x0,0xc(%eax)
	jump_57bd3:
		inc    %edi
		cmp    $0xe,%di
		jl     jump_57bae
		xor    %edi,%edi
	jump_57bdc:
		movswl %di,%ebp
		mov    %ebp,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		mov    0x4(%eax),%dx
		cmp    $0x1,%dx
		je     jump_57cdc
		cmpw   $0x1,0x2c(%esp)
		je     jump_57db0
		call   w_rand
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x3
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   func_56178
		call   w_rand
		mov    %eax,%edx
		mov    $0x14,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x12(%eax)
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x14(%eax)
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_57ca9
		mov    data_112160(%esi),%eax
		mov    0x12(%eax),%cx
		imul   $0xffffffff,%ecx,%edx
		mov    %dx,0x12(%eax)
	jump_57ca9:
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_57db0
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		mov    0x14(%eax),%si
		imul   $0xffffffff,%esi,%edx
		mov    %dx,0x14(%eax)
		jmp    jump_57db0
	jump_57cdc:
		add    %dx,0x6(%eax)
		mov    data_112160(%esi),%eax
		cmpw   $0xb,0x6(%eax)
		jl     jump_57d50
		movw   $0xb,0x6(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%dx
		mov    0x12(%eax),%bx
		add    %ebx,%edx
		mov    %dx,(%eax)
		mov    data_112160(%esi),%eax
		mov    0x2(%eax),%dx
		mov    0x14(%eax),%cx
		add    %ecx,%edx
		mov    %dx,0x2(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%si
		test   %si,%si
		jl     jump_57d3f
		cmp    $0x140,%si
		jg     jump_57d3f
		mov    0x2(%eax),%bx
		cmp    $0x14,%bx
		jl     jump_57d3f
		cmp    $0x104,%bx
		jle    jump_57d50
	jump_57d3f:
		mov    0x1c(%esp),%esi
		movswl %di,%eax
		inc    %esi
		call   func_561e5
		mov    %esi,0x1c(%esp)
	jump_57d50:
		cmpw   $0x1e,0x1c(%esp)
		jle    jump_57d60
		movl   $0x1,0x2c(%esp)
	jump_57d60:
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    jump_57da0
	jump_57d66:
		movswl %cx,%edx
		mov    -0x2(%esp,%edx,2),%edx
		sar    $0x10,%edx
		mov    data_112160(,%edx,4),%edx
		mov    0x8(%edx),%bx
		add    0xc(%edx),%bx
		movswl %bx,%ebx
		imul   $0xc,%ebx,%ebx
		mov    0x2(%eax),%dx
		inc    %ecx
		sub    %esi,%edx
		movswl (%eax),%eax
		movswl %dx,%edx
		add    $data_f0daa,%ebx
		add    $0xa,%esi
		call   func_56102
	jump_57da0:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		cmp    0x6(%eax),%cx
		jl     jump_57d66
	jump_57db0:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_57bdc
		movw   $0x50,0x20(%esp)
	jump_57dc2:
		mov    0x1e(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		cmpw   $0x1,0x4(%eax)
		je     jump_57e28
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x7
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    $0xc,%ecx
		movswl %dx,%edx
		mov    %edi,%eax
		call   func_56178
		jmp    jump_57e7d
	jump_57e28:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%edx
		mov    $data_f0daa,%ebx
		add    %edx,%ebx
		mov    (%eax),%edx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_56102
		mov    data_112160(%esi),%eax
		mov    (%eax),%dx
		add    $0x2,%edx
		mov    %dx,(%eax)
		mov    data_112160(%esi),%eax
		incw   0xc(%eax)
		mov    data_112160(%esi),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_57e7d
		mov    %edi,%eax
		call   func_561e5
	jump_57e7d:
		mov    0x20(%esp),%edi
		inc    %edi
		mov    %di,0x20(%esp)
		cmp    $0x64,%di
		jl     jump_57dc2
		cmpw   $0x1,0x2c(%esp)
		jne    jump_57ebb
		xor    %eax,%eax
		jmp    jump_57eaf
	jump_57e9d:
		movswl %ax,%edx
		mov    data_112160(,%edx,4),%edx
		cmpw   $0x1,0x4(%edx)
		je     jump_57eb5
		inc    %eax
	jump_57eaf:
		cmp    $0xa,%ax
		jl     jump_57e9d
	jump_57eb5:
		cmp    $0xa,%ax
		je     jump_57f06
	jump_57ebb:
		mov    0x28(%esp),%eax
		cmp    $0x5,%ax
		jne    jump_57ed7
		mov    $0x32,%eax
		xor    %ebx,%ebx
		call   func_4f4cd
		mov    %ebx,0x28(%esp)
		jmp    jump_57ede
	jump_57ed7:
		mov    %eax,%edx
		inc    %edx
		mov    %edx,0x28(%esp)
	jump_57ede:
		mov    $0xa,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_57ef7
		mov    $0x33,%eax
		call   func_4f4cd
	jump_57ef7:
		call   func_5e9e8
		call   func_499e4
		jmp    jump_57b93
	jump_57f06:
		call   func_1ffcd
		call   func_5615d
		add    $0x30,%esp
		jmp    jump_57abd


/*----------------------------------------------------------------*/
func_57f18:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebx
		mov    $data_7846c,%eax
		call   func_1fea4
		mov    $data_78478,%eax
		xor    %edx,%edx
		call   func_1fea4
		mov    $data_78485,%eax
		mov    %edx,0x8(%esp)
		call   func_1fea4
		call   func_56129
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_1124a
		movsbl 0x1(%ebx),%edx
		movsbl (%ebx),%eax
		call   func_11db2
		lea    0x4(%esp),%ebx
		lea    0x10(%esp),%edx
		call   func_135eb
		push   $0x1
		xor    %ecx,%ecx
		mov    $0xa,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x3,%ecx
		mov    $0xb,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x6,%ecx
		mov    $0xc,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		push   $0x1
		mov    $0x9,%ecx
		mov    $0xd,%eax
		push   $0x3
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   func_56178
		mov    $0xa,%eax
		call   func_1033b
		mov    $0x29,%eax
		call   func_5623e
	jump_57fde:
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		cmp    $0x1,%ax
		jne    jump_57fde
		mov    $0x33,%eax
		xor    %ebx,%ebx
		call   func_4f4cd
		mov    %ebx,(%esp)
	jump_57fff:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   w_rand
		mov    %eax,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		dec    %edx
		mov    $0x4b,%eax
		mov    %dx,data_ba838
		mov    $0x32,%edx
		mov    $0xa,%edi
		call   func_562c1
	jump_58042:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%edx
		incw   0xc(%edx)
		mov    data_112160(,%eax,4),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_58067
		movw   $0x0,0xc(%eax)
	jump_58067:
		inc    %edi
		cmp    $0xe,%di
		jl     jump_58042
		xor    %edi,%edi
	jump_58070:
		movswl %di,%ebp
		mov    %ebp,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		mov    0x4(%eax),%dx
		cmp    $0x1,%dx
		je     jump_58170
		cmpw   $0x1,0x8(%esp)
		je     jump_58206
		call   w_rand
		mov    %eax,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x3
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %dx,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   func_56178
		call   w_rand
		mov    %eax,%edx
		mov    $0x14,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x12(%eax)
		call   w_rand
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_112160(%esi),%eax
		add    $0x5,%edx
		mov    %dx,0x14(%eax)
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_5813d
		mov    data_112160(%esi),%eax
		mov    0x12(%eax),%cx
		imul   $0xffffffff,%ecx,%edx
		mov    %dx,0x12(%eax)
	jump_5813d:
		call   w_rand
		mov    %eax,%edx
		mov    $0x2,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     jump_58206
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		mov    0x14(%eax),%si
		imul   $0xffffffff,%esi,%edx
		mov    %dx,0x14(%eax)
		jmp    jump_58206
	jump_58170:
		add    %dx,0x6(%eax)
		mov    data_112160(%esi),%eax
		cmpw   $0xb,0x6(%eax)
		jl     jump_581e2
		movw   $0xb,0x6(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%dx
		mov    0x12(%eax),%bx
		add    %ebx,%edx
		mov    %dx,(%eax)
		mov    data_112160(%esi),%eax
		mov    0x2(%eax),%dx
		mov    0x14(%eax),%cx
		add    %ecx,%edx
		mov    %dx,0x2(%eax)
		mov    data_112160(%esi),%eax
		mov    (%eax),%si
		test   %si,%si
		jl     jump_581d3
		cmp    $0x140,%si
		jg     jump_581d3
		mov    0x2(%eax),%bx
		cmp    $0x14,%bx
		jl     jump_581d3
		cmp    $0x104,%bx
		jle    jump_581e2
	jump_581d3:
		mov    (%esp),%esi
		movswl %di,%eax
		inc    %esi
		call   func_561e5
		mov    %esi,(%esp)
	jump_581e2:
		cmpw   $0x1e,(%esp)
		jle    jump_581f1
		movl   $0x1,0x8(%esp)
	jump_581f1:
		xor    %eax,%eax
		jmp    jump_581f6
	jump_581f5:
		inc    %eax
	jump_581f6:
		movswl %di,%edx
		mov    data_112160(,%edx,4),%edx
		cmp    0x6(%edx),%ax
		jl     jump_581f5
	jump_58206:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_58070
		movw   $0x14,0xc(%esp)
	jump_58218:
		mov    0xa(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%esi
		shl    $0x2,%esi
		mov    data_112160(%esi),%eax
		cmpw   $0x1,0x4(%eax)
		je     jump_5828a
		cmpw   $0x1,0x8(%esp)
		je     jump_582de
		call   w_rand
		mov    %eax,%edx
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x7
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    $0xc,%ecx
		movswl %dx,%edx
		mov    %edi,%eax
		call   func_56178
		jmp    jump_582de
	jump_5828a:
		mov    0x6(%eax),%ebx
		mov    0xa(%eax),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		imul   $0xc,%edx,%ebx
		mov    (%eax),%edx
		add    $data_f0daa,%ebx
		sar    $0x10,%edx
		movswl (%eax),%eax
		call   func_56102
		mov    data_112160(%esi),%eax
		mov    (%eax),%dx
		add    $0x2,%edx
		mov    %dx,(%eax)
		mov    data_112160(%esi),%eax
		incw   0xc(%eax)
		mov    data_112160(%esi),%eax
		mov    0xc(%eax),%dx
		cmp    0xa(%eax),%dx
		jne    jump_582de
		mov    %edi,%eax
		call   func_561e5
	jump_582de:
		mov    0xc(%esp),%edi
		inc    %edi
		mov    %di,0xc(%esp)
		cmp    $0x28,%di
		jl     jump_58218
		mov    $0x28,%edi
	jump_582f7:
		movswl %di,%esi
		mov    %esi,%edx
		shl    $0x2,%edx
		mov    data_112160(%edx),%eax
		mov    0x4(%eax),%bx
		cmp    $0x1,%bx
		je     jump_5843b
		cmpw   $0x1,0x8(%esp)
		je     jump_58503
		call   w_rand
		mov    %eax,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1,%edx
		jb     jump_58345
		jbe    jump_5839a
		cmp    $0x2,%edx
		je     jump_583f1
		jmp    jump_58503
	jump_58345:
		test   %edx,%edx
		jne    jump_58503
		call   w_rand
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x4
		call   w_rand
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		neg    %edx
		call   w_rand
		movswl %dx,%ebx
		mov    %eax,%edx
		mov    $0x140,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x13,%ecx
		add    $0x50,%edx
		mov    %esi,%eax
		movswl %dx,%edx
		jmp    jump_583e7
	jump_5839a:
		call   w_rand
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x4
		call   w_rand
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%eax
		neg    %eax
		movswl %ax,%ebx
		call   w_rand
		mov    %eax,%edx
		mov    $0x140,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		lea    0x50(%edx),%eax
		mov    $0x17,%ecx
	jump_583e2:
		movswl %ax,%edx
		mov    %esi,%eax
	jump_583e7:
		call   func_56178
		jmp    jump_58503
	jump_583f1:
		call   w_rand
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %dx,%eax
		push   %eax
		push   $0x4
		call   w_rand
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%eax
		neg    %eax
		movswl %ax,%ebx
		call   w_rand
		mov    %eax,%edx
		mov    $0x140,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		lea    0x50(%edx),%eax
		mov    $0x1b,%ecx
		jmp    jump_583e2
	jump_5843b:
		add    %bx,0x6(%eax)
		mov    data_112160(%edx),%eax
		cmpw   $0x8,0x6(%eax)
		jge    jump_58466
		mov    (%eax),%bx
		sub    $0xa,%ebx
		mov    %bx,(%eax)
		mov    data_112160(%edx),%eax
		mov    0x2(%eax),%dx
		add    $0x14,%edx
		mov    %dx,0x2(%eax)
	jump_58466:
		movswl %di,%eax
		mov    data_112160(,%eax,4),%eax
		mov    (%eax),%dx
		test   %dx,%dx
		jle    jump_584e1
		cmp    $0x12c,%dx
		jge    jump_584e1
		mov    (%eax),%edx
		sar    $0x10,%edx
		cmp    $0xffffffb0,%edx
		jle    jump_584e1
		cmpw   $0x12c,0x2(%eax)
		jge    jump_584e1
		mov    0x6(%eax),%si
		cmp    $0x8,%si
		jge    jump_584a7
		mov    0x6(%eax),%ebx
		sar    $0x10,%ebx
		jmp    jump_584d0
	jump_584a7:
		cmp    $0x9,%si
		jge    jump_584b6
		mov    0x6(%eax),%ebx
		sar    $0x10,%ebx
		inc    %ebx
		jmp    jump_584d0
	jump_584b6:
		cmp    $0xa,%si
		jge    jump_584c7
		mov    0x6(%eax),%ebx
		sar    $0x10,%ebx
		add    $0x2,%ebx
		jmp    jump_584d0
	jump_584c7:
		mov    0x6(%eax),%ebx
		sar    $0x10,%ebx
		add    $0x3,%ebx
	jump_584d0:
		imul   $0xc,%ebx,%ebx
		movswl (%eax),%eax
		add    $data_f0daa,%ebx
		call   func_56102
	jump_584e1:
		movswl %di,%edx
		mov    data_112160(,%edx,4),%eax
		cmpw   $0xa,0x6(%eax)
		jle    jump_58503
		mov    $0x34,%eax
		call   func_4f4cd
		mov    %edx,%eax
		call   func_561e5
	jump_58503:
		inc    %edi
		cmp    $0x3c,%di
		jl     jump_582f7
		mov    $0xa,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_58527
		mov    $0x33,%eax
		call   func_4f4cd
	jump_58527:
		call   func_5e9e8
		mov    0x8(%esp),%edi
		call   func_499e4
		cmp    $0x1,%di
		jne    jump_57fff
		mov    $0x14,%edx
		jmp    jump_58558
	jump_58546:
		movswl %dx,%eax
		mov    data_112160(,%eax,4),%eax
		cmpw   $0x1,0x4(%eax)
		je     jump_5855e
		inc    %edx
	jump_58558:
		cmp    $0x3c,%dx
		jl     jump_58546
	jump_5855e:
		cmp    $0x3c,%dx
		jne    jump_57fff
		xor    %ecx,%ecx
		mov    %cx,data_ba838
	jump_58571:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    $0x4b,%eax
		xor    %edx,%edx
		call   func_562c1
		test   %ax,%ax
		je     jump_5859f
		call   func_5e9e8
		jmp    jump_58571
	jump_5859f:
		call   func_1ffcd
		call   func_5615d
		add    $0x14,%esp
		jmp    jump_57abd


/*----------------------------------------------------------------*/
func_585b1:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %bl,%cl
		movswl %dx,%edx
		cwtl
		call   func_11db2
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_58615
		mov    0xb(%eax),%edx
		sar    $0x18,%edx
		movsbl %cl,%eax
		call   func_1201d
		cmp    $0x1,%ax
		jne    jump_58615
		xor    %eax,%eax
		jmp    jump_585e8
	jump_585db:
		movswl %ax,%edx
		cmp    data_f0ba8(,%edx,4),%ebx
		je     jump_58615
		inc    %eax
	jump_585e8:
		mov    data_f13aa,%dx
		cmp    %dx,%ax
		jl     jump_585db
		mov    data_f13a8,%eax
		sar    $0x10,%eax
		mov    %ebx,data_f0ba8(,%eax,4)
		mov    $0x1,%eax
		mov    %edx,%ebx
		add    %eax,%ebx
		mov    %bx,data_f13aa
		pop    %ecx
		ret
	jump_58615:
		xor    %eax,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_58619:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x5c,%esp
		mov    %eax,%edi
		mov    %dx,0x38(%esp)
		mov    %bx,0x54(%esp)
		mov    $data_78492,%eax
		call   func_1fea4
		xor    %edx,%edx
		call   func_103a8
		mov    %dx,0x40(%esp)
		mov    %dx,0x48(%esp)
		mov    %dx,0x3c(%esp)
		mov    %dx,0x44(%esp)
		mov    0x36(%esp),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		xor    %ebx,%ebx
		call   func_1124a
		mov    data_ba83e,%si
		mov    %bx,data_f13aa
		jmp    jump_5869f
	jump_58672:
		mov    data_ba83c,%cx
		jmp    jump_5868b
	jump_5867b:
		mov    0x51(%esp),%ebx
		movswl %si,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_585b1
	jump_5868b:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_5867b
		inc    %esi
	jump_5869f:
		mov    data_ba83c,%edx
		sar    $0x10,%edx
		movswl %si,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_58672
		mov    $0x5,%eax
		call   func_1033b
		xor    %ecx,%ecx
		jmp    jump_586d0
	jump_586c0:
		movswl %cx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_1214f
		inc    %ecx
	jump_586d0:
		cmp    data_f13aa,%cx
		jl     jump_586c0
		movswl %di,%eax
		call   func_10971
		mov    0x36(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0x1,%eax
		mov    $0x64,%esi
		call   func_1033b
	jump_58706:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		sub    $0x2,%esi
		call   func_499e4
		test   %si,%si
		jge    jump_58706
		mov    0x46(%esp),%edx
		mov    0x3e(%esp),%eax
		mov    data_f0db2,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5efb9
		xor    %edx,%edx
		jmp    jump_58754
	jump_58744:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12f2a
		inc    %edx
	jump_58754:
		cmp    data_f13aa,%dx
		jl     jump_58744
		mov    $0x1,%edx
		mov    data_f0dbe,%ebx
		mov    %edx,%eax
		xor    %esi,%esi
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
	jump_5877b:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		add    $0x2,%esi
		call   func_499e4
		cmp    $0x64,%si
		jle    jump_5877b
		mov    $0x5,%eax
		call   func_1033b
		call   func_5e9e8
		xor    %edx,%edx
	jump_587ae:
		inc    %edx
		call   func_499e4
		cmp    $0x5,%dx
		jl     jump_587ae
		xor    %eax,%eax
	jump_587bc:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x28(%esp,%edx,1)
		cmp    $0xa,%ax
		jl     jump_587bc
		mov    $0x46,%ebx
		mov    $0x11,%edx
		mov    $0x3,%eax
		call   func_6106c
		mov    $0x3,%eax
		xor    %ecx,%ecx
		call   func_6104a
		mov    %cx,0x50(%esp)
		mov    %cx,0x4c(%esp)
	jump_587f6:
		cmpw   $0x64,0x4c(%esp)
		jl     jump_58809
		cmpb   $0xa,0x58(%esp)
		jae    jump_58afc
	jump_58809:
		mov    0x4c(%esp),%edx
		inc    %edx
		mov    0x48(%esp),%ebx
		mov    %dx,0x4c(%esp)
		test   %bx,%bx
		jge    jump_5882f
		mov    $0x1,%edi
		mov    %di,0x48(%esp)
		mov    %di,data_ba838
		jmp    jump_58840
	jump_5882f:
		mov    $0xffffffff,%ecx
		mov    %cx,0x48(%esp)
		mov    %cx,data_ba838
	jump_58840:
		cmpw   $0x0,0x44(%esp)
		jge    jump_58851
		movw   $0x2,0x44(%esp)
		jmp    jump_58858
	jump_58851:
		movw   $0xfffe,0x44(%esp)
	jump_58858:
		mov    0x4a(%esp),%edx
		sar    $0x10,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_588dc
		cmpw   $0x64,0x4c(%esp)
		jge    jump_588dc
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		cmpb   $0x0,0x28(%esp,%ebx,1)
		jne    jump_588c5
		movb   $0x12,0x28(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		mov    $0x12c,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		lea    0xa(%edx),%eax
		mov    %ax,(%esp,%ebx,2)
		call   w_rand
		mov    %eax,%edx
		mov    $0x8c,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		lea    0x32(%edx),%eax
		mov    %ax,0x14(%esp,%ebx,2)
		mov    $0x33,%eax
		call   func_4f4cd
	jump_588c5:
		mov    0x50(%esp),%edi
		inc    %edi
		mov    %di,0x50(%esp)
		cmp    $0x9,%di
		jle    jump_588dc
		xor    %edx,%edx
		mov    %dx,0x50(%esp)
	jump_588dc:
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		xor    %edx,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
		mov    0x46(%esp),%edx
		mov    0x3e(%esp),%eax
		mov    data_f0db2,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5efb9
		xor    %edx,%edx
		jmp    jump_5891f
	jump_5890f:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12f2a
		inc    %edx
	jump_5891f:
		cmp    data_f13aa,%dx
		jl     jump_5890f
		xor    %al,%al
		xor    %edi,%edi
		mov    %al,0x58(%esp)
	jump_58930:
		movswl %di,%esi
		mov    0x28(%esp,%esi,1),%ah
		lea    (%esi,%esi,1),%edx
		cmp    $0xa,%ah
		jbe    jump_58a2a
		mov    $0x1,%eax
		call   func_5ecc7
		mov    0x12(%esp,%edx,1),%ecx
		mov    (%esp,%edx,1),%ax
		sar    $0x10,%ecx
		mov    (%esp,%edx,1),%dx
		add    $0x5,%eax
		sub    $0x5,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		xor    %edx,%edx
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
		mov    0x28(%esp,%esi,1),%al
		dec    %al
		mov    %al,0x28(%esp,%esi,1)
		cmp    $0xf,%al
		jbe    jump_589d4
		mov    $data_f0dc2,%ecx
		mov    $0x1,%esi
	jump_58990:
		movswl %di,%eax
		mov    0x14(%esp,%eax,2),%dx
		mov    0x8(%ecx),%ebx
		add    $0x2,%edx
		mov    (%esp,%eax,2),%ax
		sub    $0x5,%eax
		add    0x6(%ecx),%dx
		add    %esi,%eax
		mov    %dx,0x34(%esp)
		mov    0x4(%ecx),%dx
		mov    0x32(%esp),%ebp
		add    %edx,%eax
		sar    $0x10,%ebp
		cwtl
		mov    %ebp,%edx
		add    $0x3,%esi
		call   func_5efb9
		cmp    $0xa,%si
		jge    jump_58ac9
		jmp    jump_58990
	jump_589d4:
		cmp    $0xa,%al
		jbe    jump_58ac9
		mov    $data_f0dce,%ecx
		mov    $0x1,%esi
	jump_589e6:
		movswl %di,%eax
		mov    0x14(%esp,%eax,2),%dx
		mov    0x8(%ecx),%ebx
		add    $0x2,%edx
		mov    (%esp,%eax,2),%ax
		sub    $0x5,%eax
		add    0x6(%ecx),%dx
		add    %esi,%eax
		mov    %dx,0x34(%esp)
		mov    0x4(%ecx),%dx
		mov    0x32(%esp),%ebp
		add    %edx,%eax
		sar    $0x10,%ebp
		cwtl
		mov    %ebp,%edx
		add    $0x3,%esi
		call   func_5efb9
		cmp    $0xa,%si
		jge    jump_58ac9
		jmp    jump_589e6
	jump_58a2a:
		test   %ah,%ah
		jbe    jump_58ac3
		mov    $0x1,%eax
		call   func_5ecc7
		mov    0x12(%esp,%edx,1),%ecx
		mov    -0x2(%esp,%edx,1),%ebp
		xor    %edx,%edx
		mov    0x28(%esp,%esi,1),%dl
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		sar    $0x10,%ebp
		lea    (%eax,%ebp,1),%edx
		sar    $0x10,%ecx
		sub    %eax,%ebp
		movswl %dx,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		cwtl
		call   func_5edde
		xor    %eax,%eax
		call   func_5ecc7
		cmpb   $0x6,0x28(%esp,%esi,1)
		jbe    jump_58aba
		mov    $data_f0dda,%ecx
		mov    $0x1,%esi
	jump_58a83:
		movswl %di,%eax
		mov    0x6(%ecx),%bx
		mov    0x14(%esp,%eax,2),%dx
		mov    (%esp,%eax,2),%ax
		add    $0x2,%edx
		sub    $0x5,%eax
		add    %ebx,%edx
		mov    0x4(%ecx),%bx
		add    %esi,%eax
		mov    0x8(%ecx),%ebp
		add    %ebx,%eax
		movswl %dx,%edx
		cwtl
		mov    %ebp,%ebx
		add    $0x3,%esi
		call   func_5efb9
		cmp    $0xa,%si
		jl     jump_58a83
	jump_58aba:
		movswl %di,%eax
		decb   0x28(%esp,%eax,1)
		jmp    jump_58ac9
	jump_58ac3:
		jne    jump_58ac9
		incb   0x58(%esp)
	jump_58ac9:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_58930
		mov    0x42(%esp),%edx
		mov    0x3a(%esp),%eax
		mov    data_f0dbe,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5efb9
		call   func_5e9e8
		call   func_499e4
		jmp    jump_587f6
	jump_58afc:
		xor    %eax,%eax
		mov    %ax,data_ba838
		mov    $0x1,%eax
		mov    $0x64,%esi
		call   func_1033b
	jump_58b13:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		sub    $0x2,%esi
		call   func_499e4
		test   %si,%si
		jge    jump_58b13
		mov    $0x17700,%ebx
		mov    data_755cc,%eax
		xor    %edx,%edx
		add    $0xbb80,%eax
		call   w_dos_memset
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   func_454b3
		call   func_5e9e8
	jump_58b67:
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		movswl %si,%ecx
		xor    %eax,%eax
		call   func_5fa2c
		add    $0x2,%esi
		call   func_499e4
		cmp    $0x64,%si
		jle    jump_58b67
		call   func_61115
		xor    %edx,%edx
		jmp    jump_58ba2
	jump_58b92:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_58ba2:
		cmp    data_f13aa,%dx
		jl     jump_58b92
		call   func_103a0
		call   func_1ffcd
		add    $0x5c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_58bbd:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%ebp
		mov    %edx,0x4(%esp)
		mov    %ebx,(%esp)
		mov    $0x2,%eax
		call   func_499bd
		test   %ax,%ax
		jne    jump_58be3
		mov    $0x32,%eax
		jmp    jump_58be8
	jump_58be3:
		mov    $0x33,%eax
	jump_58be8:
		call   func_4f4cd
		xor    %esi,%esi
	jump_58bef:
		movswl %si,%eax
		add    %ebp,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		jbe    jump_58c74
		cmp    $0xa,%dl
		je     jump_58c3e
		cmp    $0x9,%dl
		je     jump_58c3e
		cmp    $0x8,%dl
		jne    jump_58c14
	jump_58c0d:
		mov    $data_f0db6,%ecx
		jmp    jump_58c43
	jump_58c14:
		cmp    $0x7,%dl
		je     jump_58c0d
		cmp    $0x6,%dl
		jne    jump_58c25
	jump_58c1e:
		mov    $data_f0dc2,%ecx
		jmp    jump_58c43
	jump_58c25:
		cmp    $0x5,%dl
		je     jump_58c1e
		cmp    $0x4,%dl
		je     jump_58c0d
		cmp    $0x3,%dl
		je     jump_58c0d
		cmp    $0x2,%dl
		je     jump_58c3e
		cmp    $0x1,%dl
		jne    jump_58c43
	jump_58c3e:
		mov    $data_f0daa,%ecx
	jump_58c43:
		movswl %si,%edx
		mov    (%edx,%ebp,1),%bh
		mov    (%esp),%eax
		dec    %bh
		lea    (%edx,%edx,1),%edi
		mov    %bh,(%edx,%ebp,1)
		mov    (%edi,%eax,1),%ax
		add    0x6(%ecx),%ax
		movswl %ax,%edx
		mov    0x4(%esp),%eax
		mov    (%edi,%eax,1),%ax
		add    0x4(%ecx),%ax
		mov    0x8(%ecx),%ebx
		cwtl
		call   func_5efb9
	jump_58c74:
		inc    %esi
		cmp    $0xa,%si
		jl     jump_58bef
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_58c87:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		mov    %eax,%edi
		mov    %dx,0x34(%esp)
		mov    %bx,0x38(%esp)
		mov    $data_7849b,%eax
		mov    0x32(%esp),%edx
		call   func_1fea4
		call   func_103a8
		sar    $0x10,%edx
		movswl %di,%eax
		call   func_1124a
		xor    %edx,%edx
		mov    data_ba83e,%si
		mov    %dx,data_f13aa
		jmp    jump_58cf7
	jump_58cca:
		mov    data_ba83c,%cx
		jmp    jump_58ce3
	jump_58cd3:
		mov    0x35(%esp),%ebx
		movswl %si,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_585b1
	jump_58ce3:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_58cd3
		inc    %esi
	jump_58cf7:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %si,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_58cca
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_58d27
	jump_58d17:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_58d27:
		cmp    data_f13aa,%dx
		jl     jump_58d17
		mov    $0x28,%edx
		xor    %eax,%eax
		call   func_30824
		mov    $0x1,%eax
		call   func_44d6e
		xor    %edx,%edx
		jmp    jump_58d5a
	jump_58d4a:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_58d5a:
		cmp    data_f13aa,%dx
		jl     jump_58d4a
		movswl %di,%eax
		call   func_10971
		mov    %eax,%esi
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%edi
		xor    %eax,%eax
	jump_58d7d:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x28(%esp,%edx,1)
		cmp    $0xa,%ax
		jl     jump_58d7d
		xor    %ecx,%ecx
	jump_58d8f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		xor    %eax,%eax
		jmp    jump_58df8
	jump_58da9:
		movswl %ax,%ebx
		cmpb   $0x0,0x28(%esp,%ebx,1)
		jne    jump_58df7
		movb   $0x9,0x28(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		mov    $0x140,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		movswl %si,%eax
		sub    $0xa0,%eax
		add    %edx,%eax
		mov    %ax,(%esp,%ebx,2)
		call   w_rand
		mov    %eax,%edx
		mov    $0x96,%ebp
		sar    $0x1f,%edx
		idiv   %ebp
		movswl %di,%eax
		sub    $0x32,%eax
		add    %edx,%eax
		mov    %ax,0x14(%esp,%ebx,2)
		jmp    jump_58dfe
	jump_58df7:
		inc    %eax
	jump_58df8:
		cmp    $0xa,%ax
		jl     jump_58da9
	jump_58dfe:
		lea    0x14(%esp),%ebx
		mov    %esp,%edx
		lea    0x28(%esp),%eax
		call   func_58bbd
		cmpw   $0x1,data_ba838
		je     jump_58e22
		movw   $0x1,data_ba838
		jmp    jump_58e2b
	jump_58e22:
		movw   $0xffff,data_ba838
	jump_58e2b:
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x64,%cx
		jl     jump_58d8f
		call   func_44d75
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,data_ba838
		jmp    jump_58e62
	jump_58e52:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_58e62:
		cmp    data_f13aa,%dx
		jl     jump_58e52
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_103a0
		call   func_1ffcd
		add    $0x3c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_58e95:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x64,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    $data_784a5,%eax
		mov    0x2(%esp),%edx
		call   func_1fea4
		call   func_103a8
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1124a
		xor    %edx,%edx
		mov    data_ba83e,%si
		mov    %dx,data_f13aa
		jmp    jump_58f00
	jump_58ed3:
		mov    data_ba83c,%cx
		jmp    jump_58eec
	jump_58edc:
		mov    -0x3(%esp),%ebx
		movswl %si,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_585b1
	jump_58eec:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_58edc
		inc    %esi
	jump_58f00:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %si,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_58ed3
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_58f30
	jump_58f20:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_58f30:
		cmp    data_f13aa,%dx
		jl     jump_58f20
		mov    $0x28,%edx
		xor    %eax,%eax
		call   func_30824
		mov    $0x1,%eax
		call   func_44d6e
		xor    %edx,%edx
		jmp    jump_58f63
	jump_58f53:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_44d89
		inc    %edx
	jump_58f63:
		cmp    data_f13aa,%dx
		jl     jump_58f53
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   func_10971
		mov    %ax,0x58(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %ax,0x60(%esp)
		xor    %eax,%eax
	jump_58f90:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x34(%esp,%edx,1)
		cmp    $0xa,%ax
		jl     jump_58f90
		mov    0x58(%esp),%eax
		sub    $0xa0,%eax
		mov    %eax,0x5c(%esp)
		mov    0x60(%esp),%eax
		add    $0x64,%eax
		mov    %eax,0x64(%esp)
		mov    0x60(%esp),%eax
		mov    %bl,0x6c(%esp)
		sub    $0x64,%eax
		xor    %ecx,%ecx
		mov    %eax,0x68(%esp)
	jump_58fcc:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		movswl %cx,%edx
		mov    $0x14,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1,%edx
		je     jump_59004
		cmp    $0x8,%edx
		je     jump_59004
		cmp    $0xf,%edx
		jne    jump_590b9
	jump_59004:
		movswl %cx,%edx
		mov    $0x14,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x1,%edx
		jne    jump_5903a
		call   w_rand
		mov    %eax,%edx
		mov    $0xa0,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x56(%esp),%eax
		sar    $0x10,%eax
		add    %edx,%eax
		mov    0x68(%esp),%edi
		mov    %eax,0x40(%esp)
	jump_5903a:
		movswl %cx,%edx
		mov    $0x14,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x8,%edx
		jne    jump_59077
		mov    0x64(%esp),%eax
		mov    %eax,0x50(%esp)
		call   w_rand
		mov    %eax,%edx
		mov    $0xc8,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x56(%esp),%eax
		sar    $0x10,%eax
		sub    $0x32,%eax
		add    %edx,%eax
		mov    %eax,0x48(%esp)
	jump_59077:
		movswl %cx,%edx
		mov    $0x14,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0xf,%edx
		jne    jump_590b4
		call   w_rand
		mov    %eax,%edx
		mov    $0x96,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		sub    $0x64,%eax
		add    %edx,%eax
		mov    %eax,0x44(%esp)
		mov    0x5c(%esp),%eax
		mov    %eax,0x4c(%esp)
	jump_590b4:
		movb   $0x1,0x6c(%esp)
	jump_590b9:
		xor    %eax,%eax
		jmp    jump_59115
	jump_590bd:
		movswl %ax,%ebx
		cmpb   $0x0,0x34(%esp,%ebx,1)
		jne    jump_59114
		movb   $0x9,0x34(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		mov    $0x140,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    0x56(%esp),%eax
		sar    $0x10,%eax
		sub    $0xa0,%eax
		add    %edx,%eax
		mov    %ax,0x20(%esp,%ebx,2)
		call   w_rand
		mov    %eax,%edx
		mov    $0x96,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		sub    $0x32,%eax
		add    %edx,%eax
		mov    %ax,0xc(%esp,%ebx,2)
		jmp    jump_5911b
	jump_59114:
		inc    %eax
	jump_59115:
		cmp    $0x7,%ax
		jl     jump_590bd
	jump_5911b:
		lea    0xc(%esp),%ebx
		lea    0x20(%esp),%edx
		lea    0x34(%esp),%eax
		call   func_58bbd
		cmpb   $0x0,0x6c(%esp)
		je     jump_59228
		movswl %cx,%edx
		mov    $0x3,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%esi
		lea    (%edx,%ebx,1),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x6(%eax),%dx
		add    %edi,%edx
		mov    0x8(%eax),%ebx
		mov    %dx,0x54(%esp)
		mov    0x40(%esp),%edx
		mov    0x52(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		call   func_5efb9
		subl   $0xc,0x40(%esp)
		lea    0x6(%esi),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x50(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x8(%eax),%ebx
		mov    %dx,0x54(%esp)
		mov    0x48(%esp),%edx
		mov    0x52(%esp),%ebp
		add    0x4(%eax),%dx
		sar    $0x10,%ebp
		movswl %dx,%eax
		mov    %ebp,%edx
		add    $0x9,%esi
		call   func_5efb9
		imul   $0xc,%esi,%eax
		mov    0x48(%esp),%edx
		mov    0x50(%esp),%ebx
		sub    $0x10,%edx
		sub    $0x10,%ebx
		add    $data_f0daa,%eax
		mov    %edx,0x48(%esp)
		mov    0x44(%esp),%edx
		mov    0x6(%eax),%si
		mov    %ebx,0x50(%esp)
		add    %esi,%edx
		mov    0x4c(%esp),%esi
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%si
		movswl %dx,%edx
		movswl %si,%eax
		add    $0x18,%edi
		call   func_5efb9
		mov    0x4c(%esp),%eax
		mov    0x44(%esp),%edx
		add    $0x20,%eax
		add    $0x8,%edx
		mov    %eax,0x4c(%esp)
		mov    $0x3,%eax
		mov    %edx,0x44(%esp)
		call   func_499bd
		test   %ax,%ax
		jne    jump_59228
		mov    $0x34,%eax
		call   func_4f4cd
	jump_59228:
		cmpw   $0x1,data_ba838
		je     jump_5923d
		movw   $0x1,data_ba838
		jmp    jump_59246
	jump_5923d:
		movw   $0xffff,data_ba838
	jump_59246:
		call   func_5e9e8
		inc    %ecx
		call   func_499e4
		cmp    $0x64,%cx
		jl     jump_58fcc
		call   func_44d75
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,data_ba838
		jmp    jump_5927d
	jump_5926d:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_5927d:
		cmp    data_f13aa,%dx
		jl     jump_5926d
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_103a0
		call   func_1ffcd
		add    $0x70,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_592b0:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x58,%esp
		mov    %eax,%edi
		mov    %dx,0x3c(%esp)
		mov    %bx,0x40(%esp)
		mov    $data_784b0,%eax
		mov    0x3a(%esp),%edx
		call   func_1fea4
		call   func_103a8
		sar    $0x10,%edx
		movswl %di,%eax
		call   func_1124a
		xor    %edx,%edx
		mov    data_ba83e,%si
		mov    %dx,data_f13aa
		jmp    jump_5931f
	jump_592f2:
		mov    data_ba83c,%cx
		jmp    jump_5930b
	jump_592fb:
		mov    0x3d(%esp),%ebx
		movswl %si,%edx
		sar    $0x18,%ebx
		inc    %ecx
		call   func_585b1
	jump_5930b:
		mov    data_ba83a,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		add    $0xc,%edx
		cmp    %edx,%eax
		jl     jump_592fb
		inc    %esi
	jump_5931f:
		mov    data_ba83c,%eax
		sar    $0x10,%eax
		movswl %si,%edx
		add    $0xc,%eax
		cmp    %eax,%edx
		jl     jump_592f2
		mov    $0x5,%eax
		call   func_1033b
		xor    %edx,%edx
		jmp    jump_5934f
	jump_5933f:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_1214f
		inc    %edx
	jump_5934f:
		cmp    data_f13aa,%dx
		jl     jump_5933f
		mov    $0x28,%edx
		xor    %eax,%eax
		call   func_30824
		mov    $0x1,%eax
		xor    %esi,%esi
		call   func_44d6e
		jmp    jump_59382
	jump_59372:
		movswl %si,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_44d89
		inc    %esi
	jump_59382:
		cmp    data_f13aa,%si
		jl     jump_59372
		movswl %di,%eax
		call   func_10971
		mov    %eax,%edi
		mov    0x3a(%esp),%eax
		sar    $0x10,%eax
		call   func_10988
		mov    %eax,%esi
		xor    %eax,%eax
	jump_593a5:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,0x28(%esp,%edx,1)
		cmp    $0xa,%ax
		jl     jump_593a5
		xor    %eax,%eax
		mov    %bl,0x54(%esp)
		mov    %ax,0x48(%esp)
	jump_593c0:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		mov    $0x33,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x14,%edx
		jne    jump_59434
		cmpw   $0xb4,0x48(%esp)
		jge    jump_59434
		call   w_rand
		mov    %eax,%edx
		mov    $0x1e,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %eax,0x44(%esp)
		call   w_rand
		mov    %eax,%edx
		mov    $0x46,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %di,%eax
		sub    $0x1e,%eax
		mov    $0xc,%cl
		add    %eax,%edx
		mov    %cl,0x54(%esp)
		mov    %edx,0x38(%esp)
	jump_59434:
		mov    0x46(%esp),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_594e9
		cmpw   $0xaa,0x48(%esp)
		jge    jump_594e9
		call   w_rand
		mov    %eax,%edx
		mov    $0x5,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		xor    %ch,%ch
		mov    %ch,0x50(%esp)
		inc    %edx
		xor    %cl,%cl
		mov    %dl,0x4c(%esp)
		jmp    jump_594e3
	jump_5947c:
		movswl %cx,%ebx
		cmpb   $0x0,0x28(%esp,%ebx,1)
		jne    jump_594e2
		movb   $0x9,0x28(%esp,%ebx,1)
		call   w_rand
		mov    %eax,%edx
		movl   $0x140,0x34(%esp)
		sar    $0x1f,%edx
		idivl  0x34(%esp)
		movswl %di,%eax
		sub    $0xa0,%eax
		add    %edx,%eax
		mov    %ax,0x14(%esp,%ebx,2)
		call   w_rand
		mov    %eax,%edx
		movl   $0x96,0x34(%esp)
		sar    $0x1f,%edx
		idivl  0x34(%esp)
		movswl %si,%eax
		sub    $0x32,%eax
		add    %eax,%edx
		mov    %dx,(%esp,%ebx,2)
		mov    0x50(%esp),%dl
		inc    %dl
		mov    %dl,0x50(%esp)
		cmp    0x4c(%esp),%dl
		je     jump_594e9
	jump_594e2:
		inc    %ecx
	jump_594e3:
		cmp    $0x5,%cx
		jl     jump_5947c
	jump_594e9:
		mov    %esp,%ebx
		lea    0x14(%esp),%edx
		lea    0x28(%esp),%eax
		call   func_58bbd
		mov    0x54(%esp),%bl
		test   %bl,%bl
		jbe    jump_595f9
		cmp    $0x8,%bl
		jbe    jump_59510
		mov    $data_f0dce,%eax
		jmp    jump_59521
	jump_59510:
		cmp    $0x4,%bl
		jbe    jump_5951c
		mov    $data_f0dda,%eax
		jmp    jump_59521
	jump_5951c:
		mov    $data_f0de6,%eax
	jump_59521:
		mov    0x44(%esp),%edx
		add    0x6(%eax),%dx
		mov    0x38(%esp),%ecx
		mov    0x8(%eax),%ebx
		add    0x4(%eax),%cx
		movswl %dx,%edx
		movswl %cx,%eax
		call   func_5efb9
		xor    %edx,%edx
		mov    0x54(%esp),%dl
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_59560
		movw   $0x5,data_ba838
		jmp    jump_59569
	jump_59560:
		movw   $0xfffb,data_ba838
	jump_59569:
		mov    0x54(%esp),%ch
		cmp    $0x9,%ch
		jne    jump_5959b
		mov    $0x34,%eax
		mov    $0x64,%ecx
		mov    $data_12824c,%ebx
		call   func_4f4cd
		xor    %eax,%eax
		mov    $0x100,%edx
		call   func_44d6e
	jump_59592:
		xor    %eax,%eax
		call   func_5fa2c
		jmp    jump_595f3
	jump_5959b:
		cmp    $0x2,%ch
		jbe    jump_595c5
		mov    $0x1,%eax
		call   func_44d6e
		xor    %eax,%eax
		mov    %ch,%al
		imul   $0x5,%eax,%eax
		mov    $data_12824c,%ebx
		add    $0x3c,%eax
		mov    $0x100,%edx
		movswl %ax,%ecx
		jmp    jump_59592
	jump_595c5:
		jne    jump_595f3
		mov    $0x64,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fa2c
		mov    $0x1,%eax
		mov    $0x28,%edx
		call   func_44d6e
		xor    %eax,%eax
		call   func_30824
	jump_595f3:
		decb   0x54(%esp)
		jmp    jump_59602
	jump_595f9:
		xor    %ecx,%ecx
		mov    %cx,data_ba838
	jump_59602:
		mov    0x48(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x48(%esp)
		cmp    $0xc3,%dx
		jl     jump_593c0
		call   func_44d75
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %cx,data_ba838
		jmp    jump_59643
	jump_59633:
		movswl %dx,%eax
		mov    data_f0ba8(,%eax,4),%eax
		call   func_12124
		inc    %edx
	jump_59643:
		cmp    data_f13aa,%dx
		jl     jump_59633
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5f9ae
		xor    %eax,%eax
		call   func_44d6e
		call   func_103a0
		call   func_1ffcd
		add    $0x58,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_59675:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		push   %eax
		mov    $data_784bb,%eax
		mov    $0x46,%edx
		call   func_1fea4
		call   func_103a8
		mov    $0x1,%eax
		call   func_61147
		mov    (%esp),%eax
		movb   $0xa,0x64(%eax)
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%edi
		mov    (%esp),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		sub    $0x6,%eax
		xor    %ecx,%ecx
		mov    %ax,0x34(%esp)
		mov    $0xf,%eax
		add    $0xc,%edi
		call   func_1033b
	jump_596d1:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		movswl %cx,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x34(%esp),%edx
		mov    0x8(%eax),%ebx
		mov    0x6(%eax),%si
		mov    0x4(%eax),%ax
		add    %esi,%edx
		add    %edi,%eax
		movswl %dx,%edx
		cwtl
		call   func_5efb9
		call   func_12bee
		mov    (%esp),%eax
		inc    %ecx
		call   func_12f2a
		call   func_5e9e8
		call   func_499e4
		cmp    $0xc,%cx
		jle    jump_596d1
		mov    $0x32,%eax
		call   func_4f4cd
		mov    $0xd,%eax
		mov    0x34(%esp),%edx
		mov    %ax,0x10(%esp)
		mov    0x34(%esp),%eax
		sub    $0xbc,%edx
		add    $0xc,%eax
		mov    %edx,0x14(%esp)
		mov    %eax,0x8(%esp)
	jump_5975b:
		mov    0xe(%esp),%ebp
		sar    $0x10,%ebp
		imul   $0xc,%ebp,%ecx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    0x34(%esp),%eax
		add    data_f0e40,%ax
		movswl %ax,%edx
		mov    data_f0e3e,%ax
		add    %edi,%eax
		mov    data_f0e42,%ebx
		cwtl
		call   func_5efb9
		add    $data_f0daa,%ecx
		call   func_12bee
		mov    0x32(%esp),%eax
		mov    0x8(%ecx),%ebx
		mov    0x4(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x2(%ecx),%ecx
		add    $0xc,%eax
		sar    $0x10,%ecx
		add    %eax,%edx
		movswl %di,%eax
		add    $0x5,%ebp
		add    %ecx,%eax
		imul   $0xc,%ebp,%ecx
		mov    0x8(%esp),%esi
		call   func_5f29d
		add    $data_f0daa,%ecx
	jump_597dd:
		mov    0x6(%ecx),%ax
		add    %esi,%eax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %edi,%eax
		mov    %ax,0x28(%esp)
		mov    0x26(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		sub    $0x8,%esi
		call   func_5f305
		cmp    0x14(%esp),%si
		jne    jump_597dd
		mov    0x10(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %dx,0x10(%esp)
		cmp    $0x11,%dx
		jle    jump_5975b
		mov    0x34(%esp),%eax
		mov    $data_f0daa,%ebp
		xor    %ecx,%ecx
		mov    $data_f0daa,%edx
		mov    %ecx,0x24(%esp)
		add    $0x108,%edx
		add    $0xc,%eax
		mov    %edx,0x4(%esp)
		mov    0x34(%esp),%edx
		add    $0xcc,%ebp
		sub    $0xbc,%edx
		mov    %eax,0xc(%esp)
		mov    %edx,0x1c(%esp)
	jump_59863:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    0x34(%esp),%eax
		add    data_f0e40,%ax
		movswl %ax,%edx
		mov    data_f0e3e,%ax
		add    %edi,%eax
		mov    data_f0e42,%ebx
		cwtl
		call   func_5efb9
		call   func_12bee
		mov    0x32(%esp),%edx
		mov    0x4(%ebp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xc,%edx
		add    %eax,%edx
		mov    0x2(%ebp),%eax
		movswl %di,%ecx
		sar    $0x10,%eax
		mov    0x8(%ebp),%ebx
		add    %ecx,%eax
		mov    0xc(%esp),%esi
		call   func_5f29d
		mov    0x4(%esp),%ecx
	jump_598cd:
		mov    0x6(%ecx),%ax
		add    %esi,%eax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %edi,%eax
		mov    %ax,0x28(%esp)
		mov    0x26(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		sub    $0x8,%esi
		call   func_5f305
		cmp    0x1c(%esp),%si
		jne    jump_598cd
		mov    0x24(%esp),%edx
		call   func_5e9e8
		inc    %edx
		call   func_499e4
		mov    %edx,0x24(%esp)
		cmp    $0xf,%dx
		jl     jump_59863
		mov    $0xc,%ecx
		mov    $0x10,%esi
		mov    0x34(%esp),%eax
		mov    0x34(%esp),%edx
		mov    %cx,0x20(%esp)
		mov    %si,0x30(%esp)
		sub    $0xbc,%edx
		add    %ecx,%eax
		mov    %edx,0x18(%esp)
		mov    %eax,0x2c(%esp)
	jump_59943:
		mov    0x1e(%esp),%ecx
		sar    $0x10,%ecx
		imul   $0xc,%ecx,%ecx
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		mov    0x20(%esp),%eax
		mov    0x2e(%esp),%ebp
		dec    %eax
		add    $data_f0daa,%ecx
		mov    %ax,0x20(%esp)
		mov    0x34(%esp),%eax
		mov    0x6(%ecx),%dx
		sar    $0x10,%ebp
		add    %edx,%eax
		mov    0x8(%ecx),%ebx
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		imul   $0xc,%ebp,%ecx
		add    %edi,%eax
		cwtl
		call   func_5efb9
		call   func_12bee
		mov    0x32(%esp),%eax
		add    $data_f0daa,%ecx
		sar    $0x10,%eax
		mov    0x4(%ecx),%edx
		add    $0xc,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    0x2(%ecx),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		movswl %di,%ecx
		add    $0x5,%ebp
		add    %ecx,%eax
		imul   $0xc,%ebp,%ecx
		mov    0x2c(%esp),%esi
		call   func_5f29d
		add    $data_f0daa,%ecx
	jump_599d9:
		mov    0x6(%ecx),%ax
		add    %esi,%eax
		movswl %ax,%edx
		mov    0x4(%ecx),%ax
		add    %edi,%eax
		mov    %ax,0x28(%esp)
		mov    0x26(%esp),%eax
		mov    0x8(%ecx),%ebx
		sar    $0x10,%eax
		sub    $0x8,%esi
		call   func_5f305
		cmp    0x18(%esp),%si
		jne    jump_599d9
		mov    (%esp),%eax
		mov    0x30(%esp),%ecx
		call   func_12f2a
		call   func_5e9e8
		dec    %ecx
		call   func_499e4
		mov    %cx,0x30(%esp)
		cmp    $0xd,%cx
		jge    jump_59943
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		call   func_5e9e8
		call   func_499e4
		call   func_499e4
		call   func_61115
		mov    (%esp),%eax
		call   func_12124
		call   func_103a0
		call   func_1ffcd
		add    $0x38,%esp
		jmp    jump_57abd


/*----------------------------------------------------------------*/
func_59a70:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x6a4,%esp
		push   %eax
		push   %edx
		lea    0x688(%esp),%edi
		mov    $data_560db,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_103a8
		mov    $data_784c5,%eax
		mov    0x4(%esp),%edx
		call   func_1fea4
		mov    0x4(%esp),%eax
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_1124a
		mov    0x4(%esp),%edx
		mov    0x4(%esp),%ebx
		mov    0x4(%esp),%eax
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		mov    $0x50,%ebx
		mov    $0x7,%edx
		lea    0x688(%esp),%eax
		call   func_611aa
		xor    %edx,%edx
	jump_59ae0:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    $data_1282df,%esi
		lea    0x8(%esp,%eax,1),%edi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x690(%esp),%edi
		lea    0x8(%esp,%eax,1),%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x690(%esp),%esi
		lea    0x308(%esp,%eax,1),%edi
		inc    %edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%dx
		jl     jump_59ae0
		xor    %eax,%eax
	jump_59b1b:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    0x308(%esp,%esi,1),%edi
		lea    data_12824c(%esi),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x68,%ax
		jl     jump_59b1b
		lea    0x8(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		xor    %edx,%edx
	jump_59b4f:
		mov    $0x24,%eax
		call   func_499bd
		mov    %eax,%ebx
		neg    %ebx
		movswl %dx,%eax
		inc    %edx
		mov    %bx,0x608(%esp,%eax,2)
		cmp    $0x10,%dx
		jl     jump_59b4f
		mov    $0x10,%eax
		call   func_1033b
		mov    0x4(%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    %ax,0x694(%esp)
		mov    0x4(%esp),%eax
		mov    $0x64,%edx
		xor    %ebx,%ebx
		movsbl 0x1(%eax),%eax
		mov    %dx,0x6a8(%esp)
		call   func_10988
		sub    $0x2,%eax
		mov    %bx,0x69c(%esp)
		mov    %ax,0x6a0(%esp)
		xor    %edi,%edi
	jump_59bc3:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		mov    0x69c(%esp),%edx
		cmp    $0x32,%dx
		jle    jump_59c32
		mov    %edx,%eax
		xor    %dh,%ah
		and    $0x1,%al
		cwtl
		add    $0x5,%eax
		imul   $0xc,%eax,%eax
		mov    $data_f0daa,%ebp
		add    %eax,%ebp
		mov    0x4(%esp),%eax
		mov    0x69e(%esp),%edx
		mov    0x63(%eax),%eax
		sar    $0x10,%edx
		sar    $0x18,%eax
		add    %edx,%eax
		mov    0x4(%ebp),%edx
		sar    $0x10,%edx
		mov    0x2(%ebp),%ecx
		add    %eax,%edx
		mov    0x692(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		mov    0x8(%ebp),%ebx
		add    %ecx,%eax
		call   func_5ee51
	jump_59c32:
		mov    0x4(%esp),%eax
		call   func_131f8
		testb  $0x1,0x69c(%esp)
		je     jump_59c4c
		mov    0x4(%esp),%eax
		decb   0x66(%eax)
	jump_59c4c:
		mov    %edi,%ecx
	jump_59c4e:
		movswl %cx,%edx
		add    %edx,%edx
		mov    0x608(%esp,%edx,1),%si
		cmp    %si,%di
		jne    jump_59cc6
		mov    0x4(%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		mov    %eax,%ebx
		mov    $0x24,%eax
		sub    $0x6,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,0x628(%esp,%edx,1)
		mov    0x4(%esp),%eax
		movsbl 0x1(%eax),%eax
		call   func_10988
		mov    %eax,%ebx
		mov    $0x10,%eax
		sub    $0xa,%ebx
		call   func_499bd
		add    %ebx,%eax
		mov    %ax,0x668(%esp,%edx,1)
		mov    $0x3,%eax
		call   func_499bd
		inc    %eax
		mov    %si,0x608(%esp,%edx,1)
		mov    %ax,0x648(%esp,%edx,1)
	jump_59cc6:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x608(%esp,%eax,1),%dx
		cmp    $0x2b,%dx
		jg     jump_59d96
		cmp    $0xa,%dx
		jl     jump_59ce9
		cmp    $0x26,%dx
		jle    jump_59cf0
	jump_59ce9:
		mov    $data_f0daa,%ebp
		jmp    jump_59d28
	jump_59cf0:
		cmp    $0x19,%dx
		jl     jump_59cfc
		cmp    $0x23,%dx
		jl     jump_59d11
	jump_59cfc:
		movswl %cx,%eax
		mov    0x608(%esp,%eax,2),%ax
		xor    %ah,%ah
		and    $0x1,%al
		movswl %ax,%ebp
		inc    %ebp
		jmp    jump_59d1f
	jump_59d11:
		jge    jump_59d28
		mov    %edx,%eax
		xor    %dh,%ah
		and    $0x1,%al
		movswl %ax,%ebp
		add    $0x3,%ebp
	jump_59d1f:
		imul   $0xc,%ebp,%ebp
		add    $data_f0daa,%ebp
	jump_59d28:
		movswl %cx,%eax
		add    %eax,%eax
		mov    0x666(%esp,%eax,1),%edx
		sar    $0x10,%edx
		cmp    $0xffffffe2,%edx
		jle    jump_59d68
		cmp    0x608(%esp,%eax,1),%di
		jg     jump_59d68
		mov    0x4(%ebp),%esi
		sar    $0x10,%esi
		add    %esi,%edx
		mov    0x626(%esp,%eax,1),%esi
		mov    0x2(%ebp),%eax
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    0x8(%ebp),%ebx
		add    %esi,%eax
		call   func_5ee51
	jump_59d68:
		movswl %cx,%eax
		mov    0x648(%esp,%eax,2),%dx
		mov    0x668(%esp,%eax,2),%si
		sub    %edx,%esi
		mov    0x608(%esp,%eax,2),%dx
		inc    %edx
		mov    %si,0x668(%esp,%eax,2)
		mov    %dx,0x608(%esp,%eax,2)
	jump_59d96:
		inc    %ecx
		cmp    $0x10,%cx
		jl     jump_59c4e
		mov    0x6a6(%esp),%edx
		call   func_5e9e8
		sar    $0x10,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		lea    0x8(%esp),%ecx
		mov    0x69c(%esp),%esi
		mov    $data_12824c,%ebx
		cwtl
		mov    $0x100,%edx
		push   %eax
		mov    $0x60,%eax
		inc    %esi
		call   func_5fd1c
		mov    0x6a8(%esp),%ecx
		mov    %si,0x69c(%esp)
		add    $0x7f,%ecx
		call   func_499e4
		mov    %cx,0x6a8(%esp)
		cmp    $0x46,%si
		jl     jump_59bc3
		xor    %eax,%eax
	jump_59e09:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    0x8(%esp,%esi,1),%edi
		lea    0x30b(%esp),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_59e09
		lea    0x8(%esp),%ecx
		lea    0x308(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		mov    $0xa,%esi
		call   func_5fc21
	jump_59e40:
		lea    0x8(%esp),%ecx
		lea    0x308(%esp),%ebx
		movswl %si,%eax
		mov    $0x100,%edx
		push   %eax
		xor    %eax,%eax
		add    $0xa,%esi
		call   func_5fd1c
		cmp    $0x64,%si
		jle    jump_59e40
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0x32,%ebx
		call   func_454b3
		mov    $0x31,%edx
		mov    $0x3,%eax
		mov    $0xc8,%ecx
		call   func_6106c
		mov    $0x3,%eax
		mov    $0x140,%ebx
		call   func_6104a
		mov    $0x1,%eax
		xor    %edx,%edx
		call   func_5ecc7
		xor    %eax,%eax
		call   func_5edde
		xor    %eax,%eax
		mov    $0x64,%edi
		call   func_5ecc7
		mov    $0x32,%eax
		xor    %esi,%esi
		call   func_4f4cd
		xor    %ebp,%ebp
	jump_59ecf:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xc8,%ecx
		call   func_454b3
		mov    $0x1,%eax
		mov    $0x140,%ebx
		call   func_5ecc7
		mov    %ebp,%edx
		mov    %ebp,%eax
		call   func_5edde
		mov    %ebp,%eax
		call   func_5ecc7
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x1,%al
		movswl %ax,%ecx
		lea    0x10(%ecx),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		call   func_5ee51
		lea    0x5(%ecx),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		inc    %esi
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4c,%edx
		add    $0xa0,%eax
		lea    0x8(%esp),%ecx
		call   func_5f29d
		call   func_5e9e8
		call   func_499e4
		lea    0x308(%esp),%ebx
		movswl %di,%eax
		mov    $0x100,%edx
		push   %eax
		mov    %ebp,%eax
		sub    $0xa,%edi
		call   func_5fd1c
		cmp    $0xa,%si
		jl     jump_59ecf
		mov    -0x2(%esp),%edx
		mov    $0x33,%eax
		sar    $0x10,%edx
		call   func_4f4cd
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    $data_d66a8,%esi
		shl    $0x4,%eax
		mov    $0x40,%ebx
		sub    %edx,%eax
		xor    %edi,%edi
		shl    $0x2,%eax
		mov    %bx,0x698(%esp)
		add    %eax,%esi
		xor    %ebp,%ebp
	jump_59fcb:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    $0xc8,%ecx
		call   func_454b3
		mov    $0x1,%eax
		mov    $0x140,%ebx
		call   func_5ecc7
		mov    %ebp,%edx
		mov    %ebp,%eax
		call   func_5edde
		mov    %ebp,%eax
		call   func_5ecc7
		mov    %edi,%eax
		xor    %ah,%ah
		and    $0x1,%al
		movswl %ax,%ecx
		lea    0x10(%ecx),%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x64,%edx
		add    $0xa0,%eax
		add    $0x7,%ecx
		call   func_5ee51
		imul   $0xc,%ecx,%eax
		add    $data_f0daa,%eax
		cmp    $0xc,%di
		jg     jump_5a095
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4c,%edx
		add    $0xa0,%eax
		call   func_5f29d
		mov    %edi,%eax
		xor    %ah,%ah
		and    $0x3,%al
		cwtl
		add    $0x9,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4c,%edx
		add    $0xa0,%eax
		call   func_5ee51
		jmp    jump_5a146
	jump_5a095:
		cmp    $0xf,%di
		jg     jump_5a0c7
		movswl %di,%eax
		imul   $0xc,%eax,%eax
		add    $data_f0daa,%eax
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4c,%edx
		add    $0xa0,%eax
		call   func_5f29d
		jmp    jump_5a146
	jump_5a0c7:
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x4c,%edx
		add    $0xa0,%eax
		call   func_5f29d
		cmp    $0x15,%di
		jge    jump_5a126
		movsbw 0x5(%esi),%ax
		add    $0x4c,%eax
		movswl %ax,%edx
		movsbw 0x4(%esi),%ax
		add    $0xa0,%eax
		mov    0x696(%esp),%ecx
		mov    %ax,0x6a4(%esp)
		mov    0x9(%esi),%ebx
		mov    0x6a2(%esp),%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		call   func_5f517
		jmp    jump_5a146
	jump_5a126:
		movsbw 0x5(%esi),%ax
		add    $0x4c,%eax
		movswl %ax,%edx
		movsbw 0x4(%esi),%ax
		add    $0xa0,%eax
		mov    0x9(%esi),%ebx
		cwtl
		call   func_5f3fd
	jump_5a146:
		call   func_5e9e8
		call   func_499e4
		mov    %edi,%eax
		xor    %ah,%ah
		and    $0x1,%al
		imul   $0x14,%eax,%eax
		lea    0x8(%esp),%ecx
		cwtl
		lea    0x308(%esp),%ebx
		push   %eax
		mov    $0x100,%edx
		mov    %ebp,%eax
		call   func_5fd1c
		mov    0x698(%esp),%ecx
		dec    %ecx
		inc    %edi
		mov    %cx,0x698(%esp)
		cmp    $0x24,%di
		jl     jump_59fcb
		mov    0x4(%esp),%edx
		mov    0x4(%esp),%eax
		mov    0x4(%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11e04
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_454b3
		xor    %edx,%edx
	jump_5a1bd:
		add    $0xa,%edx
		cmp    $0x64,%dx
		jle    jump_5a1bd
		lea    0x8(%esp),%ecx
		movswl %dx,%eax
		lea    0x308(%esp),%ebx
		push   %eax
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		xor    %edx,%edx
	jump_5a1e3:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		lea    0x308(%esp,%eax,1),%edi
		lea    0x8(%esp,%eax,1),%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x8(%esp,%eax,1),%edi
		lea    data_12824c(%eax),%esi
		inc    %edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%dx
		jl     jump_5a1e3
		lea    0x8(%esp),%ecx
		lea    0x308(%esp),%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		xor    %eax,%eax
	jump_5a225:
		add    $0x2,%eax
		cmp    $0x64,%ax
		jle    jump_5a225
		lea    0x8(%esp),%ecx
		cwtl
		lea    0x308(%esp),%ebx
		push   %eax
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		call   func_103a0
		call   func_1ffcd
		mov    0x4(%esp),%eax
		call   func_12124
		add    $0x6ac,%esp
		jmp    jump_5707a


/*----------------------------------------------------------------*/
func_5a267:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x31c,%esp
		mov    %eax,%ebp
		lea    0x300(%esp),%edi
		mov    $0x3c,%ebx
		mov    $data_560f0,%esi
		mov    $0x9,%edx
		lea    0x300(%esp),%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_611aa
		mov    $data_784d1,%eax
		call   func_1fea4
		call   func_103a8
		mov    $0x5,%eax
		mov    %ebp,%ebx
		call   func_1033b
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		call   func_11ee4
		movsbl 0x0(%ebp),%eax
		call   func_10971
		add    $0xc,%eax
		mov    $0x19,%edx
		mov    %ax,0x318(%esp)
		movsbl 0x1(%ebp),%eax
		mov    %dx,0x310(%esp)
		call   func_10988
		mov    %ax,0x30c(%esp)
		xor    %eax,%eax
	jump_5a2f8:
		movswl %ax,%esi
		lea    (%esi,%esi,2),%esi
		lea    (%esp,%esi,1),%edi
		mov    $data_12824f,%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_5a2f8
		mov    %esp,%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		mov    $0x32,%eax
		call   func_4f4cd
	jump_5a32d:
		cmpw   $0x5,0x310(%esp)
		jle    jump_5a3c0
		xor    %esi,%esi
	jump_5a33e:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x30e(%esp),%ecx
		call   func_454b3
		sar    $0x10,%ecx
		mov    %ebp,%eax
		mov    0x30a(%esp),%edx
		call   func_12f2a
		mov    data_f0dae,%edi
		mov    %ecx,%eax
		sar    $0x10,%edx
		sar    %eax
		sar    $0x10,%edi
		add    %eax,%edx
		add    %edi,%edx
		mov    0x316(%esp),%edi
		sar    $0x10,%edi
		inc    %esi
		add    %eax,%edi
		mov    data_f0dac,%eax
		mov    data_f0db2,%ebx
		sar    $0x10,%eax
		push   %ecx
		add    %edi,%eax
		call   func_5f611
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%si
		jl     jump_5a33e
		decw   0x310(%esp)
		jmp    jump_5a32d
	jump_5a3c0:
		cmpw   $0x8,0x310(%esp)
		jge    jump_5a454
		xor    %esi,%esi
	jump_5a3d1:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x30e(%esp),%ecx
		call   func_454b3
		sar    $0x10,%ecx
		mov    %ebp,%eax
		mov    0x30a(%esp),%edx
		call   func_12f2a
		mov    data_f0dae,%edi
		mov    %ecx,%eax
		sar    $0x10,%edx
		sar    %eax
		sar    $0x10,%edi
		add    %eax,%edx
		add    %edi,%edx
		mov    0x316(%esp),%edi
		sar    $0x10,%edi
		inc    %esi
		add    %edi,%eax
		mov    data_f0dac,%edi
		mov    data_f0db2,%ebx
		sar    $0x10,%edi
		push   %ecx
		add    %edi,%eax
		call   func_5f611
		call   func_5e9e8
		call   func_499e4
		cmp    $0x2,%si
		jl     jump_5a3d1
		incw   0x310(%esp)
		jmp    jump_5a3c0
	jump_5a454:
		mov    $0x33,%eax
		mov    $0x1,%ebx
		call   func_4f4cd
		xor    %esi,%esi
		mov    %bx,0x314(%esp)
	jump_5a46d:
		xor    %edi,%edi
	jump_5a46f:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		mov    0x312(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x30a(%esp),%ecx
		sar    $0x10,%ecx
		add    $data_f0daa,%eax
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%ebx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		add    %ecx,%edx
		mov    0x316(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		add    %ecx,%eax
		call   func_5f29d
		mov    %esp,%ecx
		mov    %ebp,%eax
		mov    $data_12824c,%ebx
		call   func_12f2a
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
		movswl %si,%eax
		mov    $0x100,%edx
		push   %eax
		xor    %eax,%eax
		add    $0x2,%esi
		call   func_5fd1c
		cmp    $0x64,%si
		jle    jump_5a503
		mov    $0x64,%esi
	jump_5a503:
		inc    %edi
		cmp    $0xa,%di
		jl     jump_5a46f
		mov    0x314(%esp),%ecx
		inc    %ecx
		mov    %cx,0x314(%esp)
		cmp    $0x5,%cx
		jle    jump_5a46d
		mov    %ebp,%ebx
		movsbl 0x1(%ebp),%edx
		movsbl 0x0(%ebp),%eax
		mov    %esp,%ecx
		call   func_11e04
		push   $0x0
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		call   func_61115
		call   func_103a0
		call   func_1ffcd
		add    $0x31c,%esp
		jmp    jump_57abd


/*----------------------------------------------------------------*/
func_5a566:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x32c,%esp
		push   %eax
		lea    0x304(%esp),%edi
		mov    $data_560f9,%esi
		mov    $data_784da,%eax
		mov    (%esp),%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_1fea4
		call   func_103a8
		mov    $0x5,%eax
		mov    (%esp),%ebx
		call   func_1033b
		mov    (%esp),%eax
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		call   func_11ee4
		mov    (%esp),%eax
		movsbl (%eax),%eax
		call   func_10971
		add    $0xc,%eax
		mov    $0x1,%edx
		mov    %ax,0x318(%esp)
		mov    (%esp),%eax
		mov    $0x3c,%ebx
		mov    %dx,0x328(%esp)
		movsbl 0x1(%eax),%eax
		mov    $0x9,%edx
		call   func_10988
		mov    %ax,0x324(%esp)
		lea    0x304(%esp),%eax
		call   func_611aa
		xor    %eax,%eax
	jump_5a601:
		movswl %ax,%edi
		lea    (%edi,%edi,2),%edi
		mov    $data_12824f,%esi
		lea    0x4(%esp,%edi,1),%edi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x100,%ax
		jl     jump_5a601
		lea    0x4(%esp),%ecx
		mov    $data_12824c,%ebx
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fc21
		mov    $0x34,%eax
		mov    $0x1,%ebx
		call   func_4f4cd
		mov    %ebx,0x320(%esp)
	jump_5a645:
		movw   $0x6,0x314(%esp)
	jump_5a64f:
		xor    %esi,%esi
		jmp    jump_5a6e8
	jump_5a656:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		mov    (%esp),%eax
		call   func_12f2a
		mov    0x312(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x326(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%edi
		mov    0x322(%esp),%edx
		sar    %edi
		sar    $0x10,%edx
		sub    %edi,%edx
		add    $data_f0daa,%eax
		mov    %edx,0x310(%esp)
		mov    0x4(%eax),%edx
		mov    0x310(%esp),%ebp
		sar    $0x10,%edx
		mov    0x8(%eax),%ebx
		add    %ebp,%edx
		mov    0x316(%esp),%ebp
		mov    0x2(%eax),%eax
		sar    $0x10,%ebp
		sar    $0x10,%eax
		sub    %edi,%ebp
		push   %ecx
		add    %ebp,%eax
		inc    %esi
		call   func_5f570
		call   func_454d5
		call   func_5e9e8
		call   func_499e4
	jump_5a6e8:
		cmp    0x320(%esp),%si
		jl     jump_5a656
		mov    0x328(%esp),%ecx
		mov    0x314(%esp),%esi
		inc    %ecx
		inc    %esi
		mov    %cx,0x328(%esp)
		mov    %si,0x314(%esp)
		cmp    $0xd,%si
		jle    jump_5a64f
		mov    0x320(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x320(%esp)
		cmp    $0x6,%cx
		jl     jump_5a645
		mov    $0x32,%eax
		mov    $0x1,%edi
		call   func_4f4cd
		mov    %di,0x32c(%esp)
		mov    $data_f0daa,%edi
		xor    %esi,%esi
		add    $0x48,%edi
	jump_5a75a:
		xor    %ecx,%ecx
		mov    %ecx,0x31c(%esp)
	jump_5a763:
		mov    data_ba83c,%edx
		mov    data_ba83a,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_10aeb
		call   func_12bee
		mov    0x32a(%esp),%eax
		sar    $0x10,%eax
		imul   $0xc,%eax,%eax
		mov    0x322(%esp),%ebp
		mov    0x316(%esp),%ecx
		sar    $0x10,%ebp
		add    $data_f0daa,%eax
		sar    $0x10,%ecx
		mov    0x8(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    %ecx,%eax
		mov    %ecx,0x310(%esp)
		call   func_5f29d
		mov    0x326(%esp),%ecx
		mov    (%esp),%eax
		sar    $0x10,%ecx
		call   func_12f2a
		mov    %ecx,%eax
		sar    %eax
		mov    0x4(%edi),%edx
		sub    %eax,%ebp
		sar    $0x10,%edx
		add    %ebp,%edx
		mov    0x310(%esp),%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x2(%edi),%ebp
		mov    0x8(%edi),%ebx
		sar    $0x10,%ebp
		push   %ecx
		add    %ebp,%eax
		call   func_5f570
		call   func_5e9e8
		call   func_499e4
		mov    0x328(%esp),%ebx
		lea    0x4(%esp),%ecx
		mov    $0x100,%edx
		movswl %si,%eax
		inc    %ebx
		push   %eax
		mov    %bx,0x32c(%esp)
		xor    %eax,%eax
		mov    $data_12824c,%ebx
		add    $0x2,%esi
		call   func_5fd1c
		cmp    $0x64,%si
		jle    jump_5a840
		mov    $0x64,%esi
	jump_5a840:
		mov    0x31c(%esp),%eax
		inc    %eax
		mov    %eax,0x31c(%esp)
		cmp    $0xa,%ax
		jl     jump_5a763
		mov    0x32c(%esp),%edx
		inc    %edx
		mov    %dx,0x32c(%esp)
		cmp    $0x5,%dx
		jle    jump_5a75a
		mov    (%esp),%edx
		mov    (%esp),%eax
		mov    (%esp),%ebx
		movsbl 0x1(%edx),%edx
		movsbl (%eax),%eax
		lea    0x4(%esp),%ecx
		call   func_11e04
		mov    $0x33,%eax
		mov    $data_12824c,%ebx
		call   func_4f4cd
		push   $0x0
		mov    $0x100,%edx
		xor    %eax,%eax
		call   func_5fd1c
		call   func_61115
		call   func_103a0
		call   func_1ffcd
		add    $0x330,%esp
		jmp    jump_57abd


/*----------------------------------------------------------------*/
func_5a8c3: /* 5a8c3 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x28,%esp
		mov    $0x32,%ebx
		mov    $dpmi_real_mode_call_structure,%eax
		mov    $dpmi_real_mode_call_structure,%edi
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %esi,data_112444
		call   w_dos_memset
		mov    $0xc,%ebx
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		lea    0x1c(%esp),%ecx
		call   w_dos_memset
		mov    $0x1500,%ebx
		mov    $0x300,%edx
		mov    $0x2f,%ah
		mov    %esi,dpmi_real_mode_call_structure_ebx
		mov    %ebx,dpmi_real_mode_call_structure_eax
		mov    %dx,(%esp)
		mov    %ah,0x4(%esp)
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %dl,%dl
		xor    %ebx,%ebx
		mov    %dl,0x5(%esp)
		mov    %bx,0x8(%esp)
		mov    %ds,%edx
		mov    %esp,%ebx
		mov    $0x31,%eax
		mov    %dx,0x1c(%esp)
		mov    %esp,%edx
		mov    %edi,0x14(%esp)
#if 1
    /* force number of cdrom drive letters used 1 */
    mov   $1,%eax
    mov   %eax,dpmi_real_mode_call_structure_ebx

    /* force starting driver letter 0 */
    mov   $0,%eax
    mov   %eax,dpmi_real_mode_call_structure_ecx
#else
		call   w_dos_int386x /* cdrom installation check */
#endif
		mov    dpmi_real_mode_call_structure_ebx,%dx
		mov    dpmi_real_mode_call_structure_ecx,%al
		mov    %dx,cdrom_number
		mov    %al,cdrom_starting_letter
		and    $0xff,%eax
		mov    %eax,data_70018
		test   %dx,%dx
		jne    jump_5a976
	jump_5a96f:
		xor    %eax,%eax
		jmp    jump_5aa3c
	jump_5a976:
		call   func_5b0c4
		cmpl   $0x2,data_8b3d4
		jge    jump_5a98d
		cmpl   $0x1,data_8b3d8
		jl     jump_5a96f
	jump_5a98d:
		call   cdrom_get_audio_disc_info
		mov    cdrom_device_driver_request_return_status,%cx
		inc    %esi
		cmp    $0x8102,%cx
		jne    jump_5a9a9
		cmp    $0x1f4,%esi
		jl     jump_5a98d
	jump_5a9a9:
		cmp    $0x1f4,%esi
		je     jump_5a96f
		cmpw   $0x8000,cdrom_device_driver_request_return_status
		jae    jump_5a96f
		mov    $0x1,%edx
		mov    $data_1124a6,%ebx
		mov    $0x2,%eax
		mov    %edx,data_112444
		mov    $data_1124a8,%edx
#if 0
		call   allocate_dos_memory_block
		mov    data_1124a8,%gs
		xor    %eax,%eax
		mov    %gs,data_ba7d8
		mov    %eax,data_ba7d4
		movb   $0x0,%gs:0x1(%eax)
		lgs    data_ba7d4,%eax
		movb   $0x1,%gs:0x3(%eax)
		lgs    data_ba7d4,%eax
		movb   $0x2,%gs:0x5(%eax)
		lgs    data_ba7d4,%eax
#endif
		xor    %ecx,%ecx
		xor    %ebx,%ebx
#if 0
		movb   $0x3,%gs:0x7(%eax)
		call   cdrom_get_audio_channel_info
#endif
		mov    %ecx,data_70014
		mov    %ebx,data_7000c
		mov    %ebx,data_70008
#if 0
		call   cdrom_setup_track_related_arrays
#endif
		mov    $0x1,%eax
	jump_5aa3c:
		add    $0x28,%esp
	jump_5aa3f:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
	jump_5aa44:
		ret


/*----------------------------------------------------------------*/
func_5aa45:
/*----------------------------------------------------------------*/
		cmpl   $0x0,data_112444
		je     jump_5aa44
		call   func_5af1b
		mov    data_1124a6,%eax
		sar    $0x10,%eax


/*----------------------------------------------------------------*/
free_dos_memory_block: /* 5aa5b */
/*----------------------------------------------------------------*/
#if 0
		push   %ebx
		push   %edx
		sub    $0x1c,%esp
		mov    $0x101,%edx
		mov    %esp,%ebx
		cwtl
		mov    %edx,(%esp)
		mov    %eax,0xc(%esp)
		mov    %esp,%edx
		mov    $0x31,%eax
		call   w_dos_int386
		add    $0x1c,%esp
		pop    %edx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
func_5aa81:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpl   $0x0,data_112444
		je     jump_5ab07
		call   cdrom_get_device_status
		mov    data_75578,%ebx
		cmp    $0x1,%ebx
		jne    jump_5aaed
		mov    data_75574,%edi
		add    %ebx,%edi
		mov    %edi,data_75574
		cmp    %ebx,%edi
		jne    jump_5aac6
		mov    data_70006,%eax
		sar    $0x10,%eax
		call   cdrom_get_audio_track_info
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_5aac6:
		cmp    $0x2,%edi
		jne    jump_5ab07
		mov    data_70006,%eax
		mov    %ebx,%edx
		sar    $0x10,%eax
		call   func_5aeb5
		xor    %edx,%edx
		mov    %edx,data_75578
		mov    %edx,data_75574
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_5aaed:
		testb  $0x2,data_ba7ff
		jne    jump_5ab07
		mov    data_7000c,%ecx
		cmp    $0x1,%ecx
		jne    jump_5ab07
		mov    %ecx,data_75578
	jump_5ab07:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_cdrom_starting_letter_and_number: /* 5acf3 */
/*----------------------------------------------------------------*/
		push   %ebx
		xor    %ebx,%ebx
		mov    cdrom_starting_letter,%bl
		mov    %ebx,(%eax)
		xor    %eax,%eax
		mov    cdrom_number,%ax
		mov    %eax,(%edx)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_setup_track_related_arrays: /* 5ae4a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpl   $0x0,data_112444
		je     jump_5aeb2
		mov    $0x1,%ebx
		mov    $0x4,%edx
		jmp    jump_5aea7
	jump_5ae61:
		movswl %bx,%eax
		call   cdrom_get_audio_track_info
#if 1
    cmp    $1,%ebx /* because track 1 is data track */
#else
		cmpb   $0x40,cdrom_track_control_info
#endif
		je     jump_5aea3 /* jump if it is data track */
		mov    cdrom_track_number_related,%eax
		mov    %eax,cdrom_track_related_array_1(%edx)
		xor    %eax,%eax
		mov    cdrom_highest_track_number,%al
		cmp    %eax,%ebx
		jne    jump_5ae8f
		mov    cdrom_audio_disc_info_starting_point_of_the_lead_out_track_realted,%eax
		jmp    jump_5ae9d
	jump_5ae8f:
		mov    %ebx,%eax
		inc    %eax
		cwtl
		call   cdrom_get_audio_track_info
		mov    cdrom_track_number_related,%eax
	jump_5ae9d:
		mov    %eax,cdrom_track_related_array_2(%edx)
	jump_5aea3:
		add    $0x4,%edx
		inc    %ebx
	jump_5aea7:
		xor    %eax,%eax
		mov    cdrom_highest_track_number,%al
		cmp    %eax,%ebx
		jle    jump_5ae61
	jump_5aeb2:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5aeb5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpl   $0x0,data_112444
		jne    jump_5aec7
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_5aec7:
		movswl %ax,%ecx
		mov    cdrom_track_related_array_2(,%ecx,4),%edx
		mov    cdrom_track_related_array_1(,%ecx,4),%eax
#if 1
    push   %ecx
    dec    %ecx
    push   %ecx
    call   w_audio_music_play
    add    $4,%esp
    pop    %ecx
#else
		call   cdrom_play_audio
#endif
		mov    $0x1,%eax
		mov    %ebx,data_7000c
		mov    %ebx,data_70010
		mov    $0x1,%ebx
		mov    %ecx,data_70008
		mov    %ebx,data_70014
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5af02:
/*----------------------------------------------------------------*/
		call   cdrom_get_device_status
		xor    %eax,%eax
		mov    cdrom_device_driver_request_return_status,%ax
		sar    $0x8,%eax
		cmp    $0x1,%eax
		sete   %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_5af1b:
/*----------------------------------------------------------------*/
		push   %edx
		cmpl   $0x0,data_112444
		je     jump_5af40
		call   cdrom_stop_audio
		xor    %edx,%edx
	jump_5af2c:
		call   func_5af02
		cmp    $0x1,%ax
		je     jump_5af40
		inc    %edx
		cmp    $0x3e8,%edx
		jl     jump_5af2c
	jump_5af40:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
cdrom_stop_audio: /* 5af42 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x8,%esp
#if 1
    call   w_audio_music_stop
#endif
#if 0
		cmpl   $0x0,data_112444
		je     jump_5afaf
		cmpl   $0x1,data_70014
		jne    jump_5afaf
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    $0x2,%eax
		call   allocate_dos_memory_block
		mov    (%esp),%ebx
#endif
		xor    %edx,%edx
#if 0
		mov    %ebx,%gs
		movb   $0xd,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x85,%gs:0x2(%edx) /* stop audio */
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %ebx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
#endif
		mov    %edx,data_70014
		mov    %edx,data_7000c
	jump_5afaf:
		add    $0x8,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_send_device_driver_request: /* 5b031 */
/*----------------------------------------------------------------*/
#if 0
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%ecx
		mov    $0x32,%ebx
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %edx,%edx
		call   w_dos_memset
		mov    $0xc,%ebx
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $dpmi_real_mode_call_structure,%ebp
		call   w_dos_memset
		mov    $0x1510,%edx
		mov    data_70018,%eax
		mov    %cx,dpmi_real_mode_call_structure_es
		xor    %ebx,%ebx
		mov    $0x300,%ecx
		mov    %edx,dpmi_real_mode_call_structure_eax
		mov    %eax,dpmi_real_mode_call_structure_ecx
		mov    %ebx,dpmi_real_mode_call_structure_ebx
		mov    %ebx,0x4(%esp)
		mov    %ebx,0x8(%esp)
		mov    $0x2f,%ah
		mov    %esp,%ebx
		mov    %ecx,(%esp)
		mov    %ds,%edx
		mov    %ah,0x4(%esp)
		mov    $dpmi_real_mode_call_structure,%eax
		lea    0x1c(%esp),%ecx
		mov    $0x31,%eax
		mov    %dx,0x1c(%esp)
		mov    %esp,%edx
		mov    %ebp,0x14(%esp)
		call   w_dos_int386x
		add    $0x28,%esp
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
func_5b0c4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x28,%esp
		mov    $0x32,%ebx
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %edx,%edx
		call   w_dos_memset
		mov    $0xc,%ebx
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $dpmi_real_mode_call_structure,%ecx
		call   w_dos_memset
		mov    $0x150c,%edx
		mov    $0x2f,%ah
		xor    %ebx,%ebx
		mov    %edx,dpmi_real_mode_call_structure_eax
		mov    %ebx,dpmi_real_mode_call_structure_ebx
		mov    %ah,0x4(%esp)
		mov    $0x300,%edx
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %ebx,%ebx
		mov    %dx,(%esp)
		xor    %dl,%dl
		mov    %bx,0x8(%esp)
		mov    %dl,0x5(%esp)
		mov    %ds,%edx
		mov    %esp,%ebx
		mov    $0x31,%eax
		mov    %dx,0x1c(%esp)
		mov    %ecx,0x14(%esp)
		lea    0x1c(%esp),%ecx
		mov    %esp,%edx
#if 1
    /* force mscdex.exe version 2.1 */
    movw   $0x0201,dpmi_real_mode_call_structure_ebx
#else
		call   w_dos_int386x
#endif
		mov    dpmi_real_mode_call_structure_ebx,%eax
		sar    $0x8,%eax
		and    $0xff,%eax
		mov    %eax,data_8b3d4
		mov    dpmi_real_mode_call_structure_ebx,%eax
		and    $0xff,%eax
		mov    %eax,data_8b3d8
		add    $0x28,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_audio_disc_info: /* 5b169 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		lea    0xc(%esp),%ebx
		lea    0x14(%esp),%edx
		mov    $0x2,%eax
#if 0
		call   allocate_dos_memory_block
#endif
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    $0x1,%eax
#if 0
		call   allocate_dos_memory_block
#endif
		mov    0x14(%esp),%eax
		mov    %eax,0x10(%esp)
		xor    %ebp,%ebp
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		mov    0x10(%esp),%gs
		mov    (%esp),%eax
		movb   $0x1a,%gs:0x0(%ebp)
		movb   $0x0,%gs:0x1(%ebp)
		movb   $0x3,%gs:0x2(%ebp)
		movb   $0x0,%gs:0xd(%ebp)
		movw   $0x0,%gs:0x14(%ebp)
		mov    %ebp,%gs:0x16(%ebp)
		mov    %eax,0x8(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		movw   $0x7,%gs:0x12(%ebp)
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%ebp)
		mov    0x8(%esp),%gs
		mov    $0x1,%esi
		movb   $0xa,%gs:0x0(%ebp) /* audio disc info */
		mov    $data_ba7f4,%edi /* audio disc info except the first one byte */
		mov    0xa(%esp),%eax
		mov    %ds,%edx
		sar    $0x10,%eax
		mov    0x8(%esp),%ecx
		call   cdrom_send_device_driver_request
		mov    $0x6,%eax
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		mov    0x8(%esp),%gs
		mov    %gs:0x1(%ebp),%al
		mov    %al,data_ba7e4 /* lowest track number */
		mov    $data_ba7e7,%ebx
		mov    %gs:0x2(%ebp),%al
		mov    $data_ba7e8,%ecx
		mov    %al,cdrom_highest_track_number /* highest track number */
		mov    $data_ba7e6,%edx
		mov    %gs:0x3(%ebp),%eax /* starting point of the lead-out track */
		call   func_5b2eb
		mov    0x8(%esp),%gs
		mov    %gs:0x3(%ebp),%eax
		call   func_5b290
		mov    %eax,cdrom_audio_disc_info_starting_point_of_the_lead_out_track_realted
		mov    0x10(%esp),%gs
		mov    %gs:0x3(%ebp),%ax
		mov    %ax,cdrom_device_driver_request_return_status
#endif
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x18,%esp
		pop    %ebp
		jmp    jump_5aa3f


/*----------------------------------------------------------------*/
func_5b290:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0xc,%esp
		mov    %esp,%ecx
		lea    0x4(%esp),%ebx
		lea    0x8(%esp),%edx
		call   func_5b2eb
		xor    %edx,%edx
		mov    0x8(%esp),%dl
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		mov    %eax,%edx
		shl    $0x3,%eax
		mov    0x4(%esp),%bl
		add    %edx,%eax
		mov    %ebx,%edx
		shl    $0x2,%edx
		add    %ebx,%edx
		mov    %edx,%ebx
		shl    $0x4,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%esp),%dl
		sub    $0x96,%edx
		add    %edx,%eax
		add    $0xc,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/**
 * @param eax
 * @param edx pointer to buffer which will have the 3rd one byte of eax
 * @param ebx pointer to buffer which will have the 2nd one byte of eax
 * @param ecx pointer to buffer which will have the 1st one byte of eax
 */
/*----------------------------------------------------------------*/
func_5b2eb:
/*----------------------------------------------------------------*/
		sub    $0x4,%esp
		mov    %al,(%ecx)
		mov    %eax,%ecx
		and    $0xff00,%ecx
		shr    $0x8,%ecx
		mov    %ecx,(%esp)
		and    $0xff0000,%eax
		mov    (%esp),%cl
		shr    $0x10,%eax
		mov    %cl,(%ebx)
		mov    %al,(%edx)
		add    $0x4,%esp
		ret


/**
 * @param eax track number
 */
/*----------------------------------------------------------------*/
cdrom_get_audio_track_info: /* 5b3a7 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		sub    $0x14,%esp
		mov    %eax,%ecx
		lea    0x10(%esp),%ebx
		lea    0x4(%esp),%edx
		mov    $0x2,%eax
		call   allocate_dos_memory_block
		lea    0xc(%esp),%ebx
		mov    %esp,%edx
		mov    $0x1,%eax
		call   allocate_dos_memory_block
		mov    0x4(%esp),%esi
		xor    %edx,%edx
		mov    %esi,%gs
		mov    (%esp),%edi
		movb   $0x1a,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %dx,0x8(%esp)
		mov    %edx,%gs:0x16(%edx)
		mov    0x8(%esp),%al
		mov    %dx,%gs:0x14(%edx)
		mov    %al,%gs:0xd(%edx)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		movw   $0x7,%gs:0x12(%edx)
		shl    $0x10,%eax
		xor    %ebx,%ebx
		mov    %eax,%gs:0xe(%edx)
		mov    %edi,%gs
		movb   $0xb,%gs:(%ebx) /* audio track info */
		mov    %cl,%gs:0x1(%ebx) /* track number */
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %esi,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    %edi,%gs
		mov    %gs:0x2(%ebx),%eax /* starting point of the track */
		call   func_5b290
		mov    %eax,cdrom_track_number_related
		mov    %cx,data_ba7dd
		mov    %edi,%gs
		mov    %gs:0x6(%ebx),%dl /* track control information */
		mov    0x2(%esp),%eax
		and    $0xd0,%dl
		sar    $0x10,%eax
		mov    %dl,cdrom_track_control_info
		call   free_dos_memory_block
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x14,%esp
#endif
		jmp    jump_5aa3f


/**
 * @param eax starting sector number
 * @param edx ending sector number (exclusive)
 */
/*----------------------------------------------------------------*/
cdrom_play_audio: /* 5b4cd */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		lea    0x4(%esp),%ebx
		mov    %esp,%edx
		mov    $0x2,%eax
		call   allocate_dos_memory_block
		mov    (%esp),%ebx
		xor    %edx,%edx
		mov    %ebx,%gs
		movb   $0x16,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x84,%gs:0x2(%edx) /* play audio */
		movb   $0x0,%gs:0xd(%edx)
		sub    %ecx,%esi
		mov    %ecx,%gs:0xe(%edx) /* starting sector number */
		mov    %esi,%gs:0x12(%edx) /* number of sectors to play */
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %ebx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x8,%esp
#endif
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_device_status: /* 5b537 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		lea    0xc(%esp),%ebx
		mov    %esp,%edx
		mov    $0x2,%eax
#if 0
		call   allocate_dos_memory_block
#endif
		lea    0x4(%esp),%ebx
		lea    0x8(%esp),%edx
		mov    $0x1,%eax
#if 0
		call   allocate_dos_memory_block
#endif
		mov    (%esp),%ecx
		xor    %edx,%edx
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		mov    %ecx,%gs
		mov    0x8(%esp),%esi
		movb   $0x6,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %edx,%gs:0x16(%edx)
		mov    %dx,%gs:0x14(%edx)
		mov    %dl,%gs:0xd(%edx)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		movw   $0x5,%gs:0x12(%edx)
		shl    $0x10,%eax
		xor    %ebx,%ebx
		mov    %eax,%gs:0xe(%edx)
		mov    %esi,%gs
		movb   $0x6,%gs:(%ebx) /* device status */
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %esi,%gs
		mov    %gs:0x1(%ebx),%eax
		mov    %eax,data_ba7fa
		mov    %ecx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
#endif
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_5b63e:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
#if 0
		call   cdrom_send_device_driver_request
		mov    %ecx,%gs
		mov    %gs:0x3(%edx),%ax
#endif
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		mov    %ax,cdrom_device_driver_request_return_status
#endif
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_audio_channel_info: /* 5b66a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    %esp,%ebx
		lea    0x4(%esp),%edx
		mov    $0x2,%eax
#if 0
		call   allocate_dos_memory_block
		mov    0x4(%esp),%ecx
		xor    %edx,%edx
		mov    %ecx,%gs
		movb   $0x1a,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %edx,%gs:0x16(%edx)
		mov    %dx,%gs:0x14(%edx)
		mov    %dl,%gs:0xd(%edx)
		mov    data_1124a4,%eax
		sar    $0x10,%eax
		movw   $0x9,%gs:0x12(%edx)
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%edx)
		lgs    data_ba7d4,%ebx
		movb   $0x4,%gs:(%ebx) /* audio channel info */
#endif
		jmp    jump_5b63e

vtable_5b7cb:
		.long   func_5b846
		.long   func_5b854
		.long   func_5b85b
		.long   func_5b862
		.long   func_5b869
		.long   func_5b870
		.long   func_5b877
		.long   func_5b87e
		.long   func_5b885
		.long   func_5b88c
		.long   func_5b893
		.long   func_5b89a
		.long   func_5b8a1
		.long   func_5b8a8
		.long   func_5b8af
		.long   func_5b8b6


/*----------------------------------------------------------------*/
func_5b846:
/*----------------------------------------------------------------*/
		push   $data_7866e
	jump_5b84b:
		call   w_printf
		add    $0x4,%esp
		ret


/*----------------------------------------------------------------*/
func_5b854:
/*----------------------------------------------------------------*/
		push   $data_7868c
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b85b:
/*----------------------------------------------------------------*/
		push   $data_7869f
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b862:
/*----------------------------------------------------------------*/
		push   $data_786b5
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b869:
/*----------------------------------------------------------------*/
		push   $data_786cb
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b870:
/*----------------------------------------------------------------*/
		push   $data_786db
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b877:
/*----------------------------------------------------------------*/
		push   $data_78704
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b87e:
/*----------------------------------------------------------------*/
		push   $data_78715
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b885:
/*----------------------------------------------------------------*/
		push   $data_78729
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b88c:
/*----------------------------------------------------------------*/
		push   $data_78740
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b893:
/*----------------------------------------------------------------*/
		push   $data_7875b
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b89a:
/*----------------------------------------------------------------*/
		push   $data_7876d
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b8a1:
/*----------------------------------------------------------------*/
		push   $data_7877e
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b8a8:
/*----------------------------------------------------------------*/
		push   $data_78794
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b8af:
/*----------------------------------------------------------------*/
		push   $data_787a3
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
func_5b8b6:
/*----------------------------------------------------------------*/
		push   $data_787b2
		jmp    jump_5b84b


/*----------------------------------------------------------------*/
allocate_dos_memory_block: /* 5b909 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x28,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    $0xc,%ebx
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		call   w_dos_memset
		mov    $0x100,%edx
		mov    %esp,%ebx
		movswl %cx,%eax
		lea    0x1c(%esp),%ecx
		mov    %edx,(%esp)
		mov    %eax,0x4(%esp)
		mov    %esp,%edx
		mov    $0x31,%eax
		call   w_dos_int386x
		mov    (%esp),%eax
		mov    %ax,(%esi)
		mov    0xc(%esp),%eax
		mov    %ax,(%edi)
		add    $0x28,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
.data
data_5b997:
		.ascii  "\x87\x00\x00\x00\x83\x00\x00\x00"
		.ascii  "\x81\x00\x00\x00\x82\x00\x00\x00"
.text


/*----------------------------------------------------------------*/
func_5b9a7:
/*----------------------------------------------------------------*/
		push   $0x28
		call   func___CHK
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,0x10(%esp)
		mov    %esp,%edi
		mov    $data_5b997,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %eax,%edx
		sar    $0x10,%edx
		mov    (%esp,%ebx,4),%eax
		call   func_outp_
		xor    %edx,%edx
		mov    $0xc,%eax
		call   func_outp_
		mov    %ebp,%edx
		and    $0xff,%edx
		lea    (%ebx,%ebx,1),%ecx
		mov    %ecx,%eax
		call   func_outp_
		mov    %ebp,%edx
		sar    $0x8,%edx
		and    $0xff,%edx
		mov    %ecx,%eax
		call   func_outp_
		mov    0x10(%esp),%ebp
		dec    %ebp
		mov    %ebp,%edx
		and    $0xff,%edx
		inc    %ecx
		mov    %ecx,%eax
		call   func_outp_
		mov    %ebp,%edx
		sar    $0x8,%edx
		and    $0xff,%edx
		mov    %ecx,%eax
		call   func_outp_
		mov    %ebx,%edx
		or     $0x58,%dl
		mov    $0xb,%eax
		call   func_outp_
		mov    %ebx,%edx
		mov    $0xa,%eax
		call   func_outp_
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5ba70: /* 5ba70 */
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		mov    $0x1,%edx
		call   func_outp_
		xor    %edx,%edx
	jump_5ba8f:
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		call   func_inp_
		inc    %edx
		cmp    $0x64,%edx
		jl     jump_5ba8f
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		xor    %edx,%edx
		call   func_outp_
		xor    %edx,%edx
	jump_5bab3:
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		test   $0x80,%al
		je     jump_5baec
		xor    %edx,%edx
	jump_5bac6:
		mov    soundblaster_adr,%eax
		add    $0xa,%eax
		call   func_inp_
		cmp    $0xaa,%eax
		jne    jump_5bae1
		mov    $0x1,%eax
		pop    %edx
		ret
	jump_5bae1:
		inc    %edx
		cmp    $0x400,%edx
		jl     jump_5bac6
		jmp    jump_5baf5
	jump_5baec:
		inc    %edx
		cmp    $0x400,%edx
		jl     jump_5bab3
	jump_5baf5:
		mov    $0xffffffff,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5bb33:
/*----------------------------------------------------------------*/
#if 0
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
		jmp    jump_5bb48
	jump_5bb47:
		inc    %edx
	jump_5bb48:
		lea    0xc(%ebx),%eax
		call   func_inp_
		test   $0x80,%al
		je     jump_5bb5c
		cmp    $0x10000,%edx
		jb     jump_5bb47
	jump_5bb5c:
		cmp    $0x10000,%edx
		jae    jump_5bb70
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0xc(%ebx),%eax
		call   func_outp_
	jump_5bb70:
		pop    %ecx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
func_5bc43:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   disable_interrupts
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		mov    soundblaster_adr,%eax
		mov    $0x14,%edx
		call   func_5bb33
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_5bb33
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_5bb33
	jump_5bc91:
		mov    $0x20,%edx
		mov    %edx,%eax
#if 0
		call   func_outp_
#endif
		call   enable_interrupts
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
#if 1
    ret
#else
		iret
#endif


/*----------------------------------------------------------------*/
func_5bcaa:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    %eax,%edx
		shl    $0x5,%edx
		sub    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		shl    $0x3,%edx
		mov    $0xb6,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    $0x640000,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x6a4,%ecx
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,data_755b8
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
GLOBAL (pit_isr) /* 5bced */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
#if 1
    xor    %eax,%eax
#endif
#if 0
		call   func___GETDS
#endif
		call   disable_interrupts
		mov    data_12371c,%edx
		inc    %edx
		mov    %edx,data_12371c
		incl   data_123724
		cmp    $0xa,%edx
		jne    jump_5c586
		xor    %esi,%esi
		mov    %esi,data_12371c
#if 0
		out    %al,$0xc
#endif
		mov    soundblaster_dma,%dl
		xor    %dh,%dh
		add    %dl,%dl
		inc    %dl
#if 0
		in     (%dx),%al
#endif
		mov    %al,%ah
#if 0
		in     (%dx),%al
#endif
		xchg   %al,%ah
	jump_5bd39:
		mov    %ax,%cx
#if 0
		in     (%dx),%al
#endif
		mov    %al,%ah
#if 0
		in     (%dx),%al
#endif
		xchg   %al,%ah
		sub    %ax,%cx
		cmp    $0x10,%cx
		jg     jump_5bd39
		cmp    $0xfff0,%cx
		jl     jump_5bd39
		movzwl %ax,%eax
		neg    %eax
		add    $0x400,%eax
		cmp    $0x200,%eax
		jl     jump_5c091
		cmpl   $0x0,data_123710
		jne    jump_5c3c4
		mov    data_123734,%edi
		mov    $0x200,%ecx
		mov    $data_11330c,%esi
		push   %es
		mov    %ds,%ax
		mov    %eax,%es
		shr    $0x2,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		cmpl   $0x1,data_11273c
		jne    jump_5bdd7
		mov    data_112740,%ecx
		add    data_112744,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5bdac:
		mov    data_112738,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bdac
		addl   $0x200,data_112744
	jump_5bdd7:
		mov    data_11273c,%esi
		test   %esi,%esi
		jne    jump_5be08
		mov    $0x7f,%cl
		mov    $data_11330c,%eax
	jump_5bde8:
		mov    data_112738,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    %cl,%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bde8
	jump_5be08:
		cmpl   $0x1,data_112758
		jne    jump_5be63
		mov    data_11275c,%ecx
		add    data_112760,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5be24:
		mov    data_112754,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5be24
		addl   $0x200,data_112760
	jump_5be63:
		cmpl   $0x1,data_112774
		jne    jump_5bebb
		mov    data_112778,%ecx
		add    data_11277c,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5be7f:
		mov    data_112770,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    data_11280c(%edx),%bl
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5be7f
		addl   $0x200,data_11277c
	jump_5bebb:
		cmpl   $0x1,data_112790
		jne    jump_5bf16
		mov    data_112794,%ecx
		add    data_112798,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5bed7:
		mov    data_11278c,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bed7
		addl   $0x200,data_112798
	jump_5bf16:
		cmpl   $0x1,data_1127ac
		jne    jump_5bf71
		mov    data_1127b0,%ecx
		add    data_1127b4,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5bf32:
		mov    data_1127a8,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bf32
		addl   $0x200,data_1127b4
	jump_5bf71:
		cmpl   $0x1,data_1127c8
		jne    jump_5bfcc
		mov    data_1127cc,%ecx
		add    data_1127d0,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5bf8d:
		mov    data_1127c4,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bf8d
		addl   $0x200,data_1127d0
	jump_5bfcc:
		cmpl   $0x1,data_1127e4
		jne    jump_5c027
		mov    data_1127e8,%ecx
		add    data_1127ec,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5bfe8:
		mov    data_1127e0,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5bfe8
		addl   $0x200,data_1127ec
	jump_5c027:
		cmpl   $0x1,data_112800
		jne    jump_5c082
		mov    data_112804,%ecx
		add    data_112808,%ecx
		mov    $data_11330c,%eax
		xor    %esi,%esi
	jump_5c043:
		mov    data_1127fc,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c043
		addl   $0x200,data_112808
	jump_5c082:
		movl   $0x200,data_123710
		jmp    jump_5c3c4
	jump_5c091:
		cmpl   $0x200,data_123710
		jne    jump_5c3c4
		mov    data_123734,%edi
		add    $0x200,%edi
		mov    $0x200,%ecx
		mov    $data_11350c,%esi
		push   %es
		mov    %ds,%ax
		mov    %eax,%es
		shr    $0x2,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		cmpl   $0x1,data_11273c
		jne    jump_5c10b
		mov    data_112740,%ecx
		add    data_112744,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c0e0:
		mov    data_112738,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c0e0
		addl   $0x200,data_112744
	jump_5c10b:
		cmpl   $0x0,data_11273c
		jne    jump_5c13d
		mov    $0x7f,%cl
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c11d:
		mov    data_112738,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    %cl,%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c11d
	jump_5c13d:
		cmpl   $0x1,data_112758
		jne    jump_5c19a
		mov    data_11275c,%ecx
		add    data_112760,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c159:
		mov    data_112754,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c159
		addl   $0x200,data_112760
	jump_5c19a:
		cmpl   $0x1,data_112774
		jne    jump_5c1f5
		mov    data_112778,%ecx
		add    data_11277c,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c1b6:
		mov    data_112770,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_11280c(%edx,%ebx,1),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c1b6
		addl   $0x200,data_11277c
	jump_5c1f5:
		cmpl   $0x1,data_112790
		jne    jump_5c24d
		mov    data_112794,%ecx
		add    data_112798,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c211:
		mov    data_11278c,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    data_11280c(%edx),%bl
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c211
		addl   $0x200,data_112798
	jump_5c24d:
		cmpl   $0x1,data_1127ac
		jne    jump_5c2a5
		mov    data_1127b0,%ecx
		add    data_1127b4,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c269:
		mov    data_1127a8,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    data_11280c(%edx),%bl
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c269
		addl   $0x200,data_1127b4
	jump_5c2a5:
		cmpl   $0x1,data_1127c8
		jne    jump_5c302
		mov    data_1127cc,%ecx
		add    data_1127d0,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c2c1:
		mov    data_1127c4,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c2c1
		addl   $0x200,data_1127d0
	jump_5c302:
		cmpl   $0x1,data_1127e4
		jne    jump_5c35f
		mov    data_1127e8,%ecx
		add    data_1127ec,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c31e:
		mov    data_1127e0,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c31e
		addl   $0x200,data_1127ec
	jump_5c35f:
		cmpl   $0x1,data_112800
		jne    jump_5c3bc
		mov    data_112804,%ecx
		add    data_112808,%ecx
		mov    $data_11350c,%eax
		xor    %esi,%esi
	jump_5c37b:
		mov    data_1127fc,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_11280c(%edx,%ebx,1),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_11370c(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_5c37b
		addl   $0x200,data_112808
	jump_5c3bc:
		xor    %ebx,%ebx
		mov    %ebx,data_123710
	jump_5c3c4:
		mov    data_112730,%eax
		sub    $0x400,%eax
		cmp    data_112744,%eax
		jge    jump_5c408
		mov    data_112734,%ebx
		cmp    $0x3e7,%ebx
		je     jump_5c3ed
		lea    -0x1(%ebx),%ecx
		mov    %ecx,data_112734
	jump_5c3ed:
		cmpl   $0x1,data_112734
		jl     jump_5c400
		xor    %ebp,%ebp
		mov    %ebp,data_112744
		jmp    jump_5c408
	jump_5c400:
		xor    %edi,%edi
		mov    %edi,data_11273c
	jump_5c408:
		mov    data_11274c,%eax
		sub    $0x400,%eax
		cmp    data_112760,%eax
		jge    jump_5c447
		cmpl   $0x3e7,data_112734
		je     jump_5c42c
		decl   data_112750
	jump_5c42c:
		cmpl   $0x1,data_112750
		jl     jump_5c43f
		xor    %ebp,%ebp
		mov    %ebp,data_112760
		jmp    jump_5c447
	jump_5c43f:
		xor    %edi,%edi
		mov    %edi,data_112758
	jump_5c447:
		mov    data_112768,%eax
		sub    $0x400,%eax
		cmp    data_11277c,%eax
		jge    jump_5c47d
		mov    data_11276c,%ebx
		dec    %ebx
		mov    %ebx,data_11276c
		cmp    $0x1,%ebx
		jl     jump_5c475
		xor    %edi,%edi
		mov    %edi,data_11277c
		jmp    jump_5c47d
	jump_5c475:
		xor    %esi,%esi
		mov    %esi,data_112774
	jump_5c47d:
		mov    data_112784,%eax
		sub    $0x400,%eax
		cmp    data_112798,%eax
		jge    jump_5c4b1
		mov    data_112788,%eax
		dec    %eax
		mov    %eax,data_112788
		cmp    $0x1,%eax
		jl     jump_5c4a9
		xor    %ecx,%ecx
		mov    %ecx,data_112798
		jmp    jump_5c4b1
	jump_5c4a9:
		xor    %ebx,%ebx
		mov    %ebx,data_112790
	jump_5c4b1:
		mov    data_1127a0,%eax
		sub    $0x400,%eax
		cmp    data_1127b4,%eax
		jge    jump_5c4e6
		mov    data_1127a4,%edi
		dec    %edi
		mov    %edi,data_1127a4
		cmp    $0x1,%edi
		jl     jump_5c4df
		xor    %edx,%edx
		mov    %edx,data_1127b4
		jmp    jump_5c4e6
	jump_5c4df:
		xor    %eax,%eax
		mov    %eax,data_1127ac
	jump_5c4e6:
		mov    data_1127bc,%eax
		sub    $0x400,%eax
		cmp    data_1127d0,%eax
		jge    jump_5c51c
		mov    data_1127c0,%ecx
		dec    %ecx
		mov    %ecx,data_1127c0
		cmp    $0x1,%ecx
		jl     jump_5c514
		xor    %ebp,%ebp
		mov    %ebp,data_1127d0
		jmp    jump_5c51c
	jump_5c514:
		xor    %edi,%edi
		mov    %edi,data_1127c8
	jump_5c51c:
		mov    data_1127d8,%eax
		sub    $0x400,%eax
		cmp    data_1127ec,%eax
		jge    jump_5c552
		mov    data_1127dc,%ebx
		dec    %ebx
		mov    %ebx,data_1127dc
		cmp    $0x1,%ebx
		jl     jump_5c54a
		xor    %edi,%edi
		mov    %edi,data_1127ec
		jmp    jump_5c552
	jump_5c54a:
		xor    %esi,%esi
		mov    %esi,data_1127e4
	jump_5c552:
		mov    data_1127f4,%eax
		sub    $0x400,%eax
		cmp    data_112808,%eax
		jge    jump_5c586
		mov    data_1127f8,%eax
		dec    %eax
		mov    %eax,data_1127f8
		cmp    $0x1,%eax
		jl     jump_5c57e
		xor    %ecx,%ecx
		mov    %ecx,data_112808
		jmp    jump_5c586
	jump_5c57e:
		xor    %ebx,%ebx
		mov    %ebx,data_112800
	jump_5c586:
		mov    data_123724,%eax
		cmp    data_755b8,%eax
		jne    jump_5bc91
		xor    %edi,%edi
		mov    %edi,data_123724
#if 0
		pushf
		lcall  *data_123744
#endif
		jmp    jump_5bc91


/*----------------------------------------------------------------*/
func_5c5f0:
/*----------------------------------------------------------------*/
		push   $0x44
		call   func___CHK
		push   %ecx
		push   %esi
		sub    $0x38,%esp
		mov    %edx,%ecx
		mov    %ebx,%esi
		movw   $0x100,0x1c(%esp)
		mov    %ax,0x20(%esp)
		mov    %esp,%ebx
		lea    0x1c(%esp),%edx
		mov    $0x31,%eax
		call   w_dos_int386
		mov    (%esp),%eax
		mov    %ax,(%esi)
		xor    %eax,%eax
		mov    0xc(%esp),%ax
		mov    %eax,(%ecx)
		add    $0x38,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5c634:
/*----------------------------------------------------------------*/
		push   $0x44
		call   func___CHK
		push   %ebx
		push   %edx
		sub    $0x38,%esp
		movw   $0x101,0x1c(%esp)
		mov    %ax,0x28(%esp)
		mov    %esp,%ebx
		lea    0x1c(%esp),%edx
		mov    $0x31,%eax
		call   w_dos_int386
		add    $0x38,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5c665: /* 5c665 */
/*----------------------------------------------------------------*/
		push   $0x4c
		call   func___CHK
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		mov    %eax,%ebp
		movl   $0x6a4,0x38(%esp)
		mov    %edx,soundblaster_adr_is_not_zero
		mov    %ebx,soundblaster_adr
		mov    %ecx,soundblaster_irq
		mov    0x4c(%esp),%eax
		mov    %eax,soundblaster_dma
		movw   $0x400,0x1c(%esp)
		mov    %esp,%ebx
		lea    0x1c(%esp),%edx
		mov    $0x31,%eax
#if 1
    movb   $0x08,0xd(%esp)
    movb   $0x70,0xc(%esp)
#else
		call   w_dos_int386
#endif
		xor    %edx,%edx
    
    /* curr value of virtual master interrupt controller base interrupt */
		mov    0xd(%esp),%dl

		xor    %eax,%eax

    /* curr value of virtual slave interrupt controller base interrupt */
		mov    0xc(%esp),%al

		mov    soundblaster_irq,%edi
		cmp    $0x8,%edi
		jge    jump_5c6cd
		lea    (%edi,%edx,1),%eax
		jmp    jump_5c6d2
	jump_5c6cd:
		add    %edi,%eax
		sub    $0x8,%eax
	jump_5c6d2:
		mov    %eax,soundblaster_interrupt_number
		xor    %ecx,%ecx
		mov    $0xa,%edi
	jump_5c6de:
		mov    %ecx,%eax
		shl    $0x3,%eax
		sub    %ecx,%eax
		xor    %ebx,%ebx
		mov    %ebx,data_112740(,%eax,4)
		mov    %ebx,data_112730(,%eax,4)
		mov    %edi,data_112738(,%eax,4)
		mov    %ebx,data_11273c(,%eax,4)
		mov    %ebx,data_112744(,%eax,4)
		inc    %ecx
		cmp    $0x8,%ecx
		jl     jump_5c6de
		xor    %ecx,%ecx
	jump_5c712:
		xor    %esi,%esi
		mov    %esi,data_1124b0(,%ecx,8)
		mov    %esi,data_1124ac(,%ecx,8)
		inc    %ecx
		cmp    $0x50,%ecx
		jl     jump_5c712
		xor    %ecx,%ecx
	jump_5c72a:
		xor    %ebx,%ebx
	jump_5c72c:
		mov    %ecx,%eax
		add    %ebx,%eax
		sub    $0x80,%eax
		cmp    $0xff,%ax
		jle    jump_5c741
		mov    $0xff,%eax
	jump_5c741:
		test   %ax,%ax
		jge    jump_5c748
		xor    %eax,%eax
	jump_5c748:
		mov    %ecx,%edx
		shl    $0x8,%edx
		mov    %al,data_11370c(%edx,%ebx,1)
		inc    %ebx
		cmp    $0x100,%ebx
		jl     jump_5c72c
		inc    %ecx
		cmp    $0x100,%ecx
		jl     jump_5c72a
		xor    %ecx,%ecx
	jump_5c768:
		xor    %ebx,%ebx
	jump_5c76a:
		mov    %ecx,%esi
		shl    $0x8,%esi
		add    %ebx,%esi
		cmp    $0x80,%ebx
		jge    jump_5c79e
		mov    $0x7f,%edx
		sub    %ebx,%edx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    $0xa,%edi
		idiv   %edi
		mov    $0x7f,%edx
		sub    %eax,%edx
		mov    %dl,data_11280c(%esi)
		jmp    jump_5c7b9
	jump_5c79e:
		lea    -0x7f(%ebx),%edx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		mov    $0xa,%edi
		idiv   %edi
		add    $0x7f,%eax
		mov    %al,data_11280c(%esi)
	jump_5c7b9:
		inc    %ebx
		cmp    $0x100,%ebx
		jl     jump_5c76a
		inc    %ecx
		cmp    $0xb,%ecx
		jl     jump_5c768
		mov    $data_123750,%ebx /* real mode segment of allocated block */
		mov    $data_123718,%edx /* first selector for allocated block */
		mov    $0x41,%eax /* number of paragraphs to allocate */
#if 0
		call   func_5c5f0
#endif
		mov    data_12374e,%eax
		sar    $0x10,%eax
		shl    $0x4,%eax
#if 1
    movl   $1040,%eax
    call   w_dos_malloc
#endif
		mov    %eax,data_123734
		xor    %eax,%eax
		mov    %eax,data_123710
		xor    %ecx,%ecx
	jump_5c7f5:
		mov    data_123734,%eax
#if 0
		movb   $0x7f,(%ecx,%eax,1)
#endif
		movb   $0x7f,data_11330c(%ecx)
		inc    %ecx
		cmp    $0x400,%ecx
		jl     jump_5c7f5
		mov    $0x21,%eax
#if 0
		call   func_inp_
#endif
		mov    %eax,pic_masks
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_5c8c6
#if 0
		call   func_5ba70 /* reset dsp */
#endif
		mov    soundblaster_interrupt_number,%eax
#if 0
		call   func__dos_getvect_
#endif
		mov    %dx,data_12374e
		mov    %eax,data_12374a
		mov    soundblaster_interrupt_number,%eax
		mov    %cs,%ecx
		mov    $func_5bc43,%ebx
#if 0
		call   func__dos_setvect_
#endif
		mov    soundblaster_irq,%cl
		mov    $0xfe,%edx
		shl    %cl,%edx
		and    pic_masks,%edx
		mov    $0x21,%eax
#if 0
		call   func_outp_
#endif
		mov    $0x1,%eax
		call   func_5ce22
		mov    %ebp,%eax
		call   func_5c934
		mov    soundblaster_dma,%ebx
		mov    data_123734,%eax
		mov    $0x400,%edx
#if 0
		call   func_5b9a7
#endif
		mov    soundblaster_adr,%eax
		mov    $0x14,%edx
		call   func_5bb33
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_5bb33
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_5bb33
	jump_5c8c6:
		mov    $0x8,%eax
#if 0
		call   func__dos_getvect_
#endif
		mov    %dx,data_123748
		mov    %eax,data_123744
		mov    %cs,%ecx
		mov    $pit_isr,%ebx
		mov    $0x8,%eax
#if 1
    call   w_game_install_pit_isr
#else
		call   func__dos_setvect_
#endif
		call   disable_interrupts
		mov    $0x36,%edx
		mov    $0x43,%eax
#if 0
		call   func_outp_
#endif
		mov    0x38(%esp),%edx
		and    $0xff,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		mov    0x38(%esp),%edx
		sar    $0x8,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		call   enable_interrupts
		add    $0x3c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_5c934:
/*----------------------------------------------------------------*/
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    soundblaster_adr,%eax
		mov    $0x40,%edx
		call   func_5bb33
		mov    $0xf4240,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    %al,%dl
		mov    soundblaster_adr,%eax
		call   func_5bb33
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5c977:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		call   disable_interrupts
		mov    pic_masks,%edx
		mov    $0x21,%eax
#if 0
		call   func_outp_
#endif
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_5c9ca
#if 0
		call   func_5ba70 /* reset dsp */
#endif
		xor    %eax,%eax
		call   func_5ce22
		call   func_5ce59
		mov    data_12374e,%cx
		mov    data_12374a,%ebx
		mov    soundblaster_interrupt_number,%eax
#if 0
		call   func__dos_setvect_
#endif
	jump_5c9ca:
		mov    data_123748,%cx
		mov    data_123744,%ebx
		mov    $0x8,%eax
#if 1
    call   w_game_uninstall_pit_isr
#else
		call   func__dos_setvect_
#endif
		mov    $0x36,%edx
		mov    $0x43,%eax
#if 0
		call   func_outp_
#endif
		xor    %edx,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		xor    %edx,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		call   enable_interrupts
		mov    data_123718,%eax
#if 1
    mov    data_123734,%eax
    call   w_dos_free
#else
		call   func_5c634 /* free dos memory block */
#endif
		call   func_5cdd5
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5ca62:
/*----------------------------------------------------------------*/
		push   $0x18
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %esi
		cmp    $0x50,%edx
		jl     jump_5ca7d
	jump_5ca74:
		mov    $0xffffffff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_5ca7d:
		push   $0x200
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		shl    $0x3,%ecx
		mov    data_1124b0(%ecx),%ebx
		test   %ebx,%ebx
		je     jump_5caa3
		mov    %ebx,%eax
		call   w_dos_free
	jump_5caa3:
		mov    %esi,%eax
		call   func_filelength_
		mov    %edx,%ecx
		shl    $0x3,%ecx
		sub    $0x40,%eax
		mov    %eax,data_1124ac(%ecx)
		call   w_dos_malloc
		mov    %eax,data_1124b0(%ecx)
		test   %eax,%eax
		je     jump_5ca74
		xor    %ebx,%ebx
		mov    $0x40,%edx
		mov    %esi,%eax
		call   w_dos_lseek
		mov    data_1124ac(%ecx),%ebx
		mov    data_1124b0(%ecx),%edx
		mov    %esi,%eax
		call   w_dos_read
		mov    %esi,%eax
		call   w_dos_close
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5cb97:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_5cc1c
		cmp    $0x50,%ecx
		jge    jump_5cc1c
		mov    $0x2,%edx
#if 1
    push   %eax
    pushl  $0
    pushl  data_1124ac(,%ecx,8)
    pushl  data_1124b0(,%ecx,8)
    call   w_audio_sound_play
    add    $12,%esp
    pop    %eax
#endif
	jump_5cbbd:
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		cmpl   $0x0,data_11273c(%eax)
		jne    jump_5cc16
		movl   $0x5622,data_11272c(%eax)
		mov    data_1124ac(,%ecx,8),%ebx
		mov    %ebx,data_112730(%eax)
		mov    %edi,data_112734(%eax)
		mov    data_1124b0(,%ecx,8),%edx
		mov    %edx,data_112740(%eax)
		xor    %edx,%edx
		mov    %edx,data_112744(%eax)
		mov    %esi,data_112738(%eax)
		movl   $0x1,data_11273c(%eax)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_5cc16:
		inc    %edx
		cmp    $0x8,%edx
		jl     jump_5cbbd
	jump_5cc1c:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5cc20:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ecx
		mov    soundblaster_adr_is_not_zero,%esi
		cmp    $0x1,%esi
		jne    jump_5cc85
		cmp    $0x50,%edx
		jge    jump_5cc85
		mov    %esi,%eax
		call   func_5cd0d
		movl   $0x1f40,data_11272c
		mov    %edx,%eax
		mov    data_1124ac(,%edx,8),%edx
		mov    %edx,data_112730
		mov    %ebx,data_112734
		mov    data_1124b0(,%eax,8),%eax
		mov    %eax,data_112740
		xor    %ebp,%ebp
		mov    %ebp,data_112744
		mov    %ecx,data_112738
		mov    %esi,data_11273c
#if 1
    push   %eax
    pushl  $1
    pushl  data_112730
    pushl  data_112740
    call   w_audio_sound_play
    add    $12,%esp
    pop    %eax
#endif
	jump_5cc85:
		pop    %ebp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5cd0d:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		cmp    $0x7,%eax
		jle    jump_5cd24
		mov    $0xffffffff,%eax
		pop    %edx
		ret
	jump_5cd24:
		mov    %eax,%edx
		shl    $0x3,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %edx,data_11273c(,%eax,4)
		mov    $0x1,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5cdd5:
/*----------------------------------------------------------------*/
		push   $0x14
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
	jump_5cde5:
		mov    %edx,%eax
		call   func_5cd0d
		inc    %edx
		cmp    $0x8,%edx
		jl     jump_5cde5
		xor    %edx,%edx
	jump_5cdf4:
		mov    %edx,%ebx
		shl    $0x3,%ebx
		mov    data_1124b0(%ebx),%ecx
		test   %ecx,%ecx
		je     jump_5ce12
		mov    %ecx,%eax
		call   w_dos_free
		xor    %esi,%esi
		mov    %esi,data_1124b0(%ebx)
	jump_5ce12:
		inc    %edx
		cmp    $0x50,%edx
		jl     jump_5cdf4
		mov    $0x1,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5ce22:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		mov    soundblaster_adr_is_not_zero,%edx
		cmp    $0x1,%edx
		jne    jump_5ce57
		cmp    %edx,%eax
		jne    jump_5ce48
		mov    soundblaster_adr,%eax
		mov    $0xd1,%edx
		jmp    jump_5ce52
	jump_5ce48:
		mov    soundblaster_adr,%eax
		mov    $0xd3,%edx
	jump_5ce52:
		call   func_5bb33
	jump_5ce57:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5ce59:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_5ce7c
		mov    soundblaster_adr,%eax
		mov    $0xd0,%edx
		call   func_5bb33
	jump_5ce7c:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5cea3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x4,%esp
		mov    $data_123830,%ebx
		xor    %edx,%edx
		mov    $0x33,%eax
		mov    %dx,data_123810
		mov    $data_123810,%edx
#if 1
    movl   $0x0000ffff,data_123830
    movl   $0x00000002,data_123834
#else
		call   w_dos_int386
#endif
		mov    data_123830,%ax
		mov    %ax,(%esp)
		mov    data_123834,%ax
		mov    %ax,0x2(%esp)
		mov    (%esp),%eax
		add    $0x4,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
mouse_get_state: /* 5cce3 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x8,%esp
		mov    %esi,%ecx
		mov    $0x3,%edx
		mov    $data_123830,%ebx
		mov    $0x33,%eax
		mov    %dx,data_123810
		mov    $data_123810,%edx
#if 1
    call   w_mouse_get_state
    mov    EXTERN(mouse_state_button),%ax
    mov    %ax,data_123834
    mov    EXTERN(mouse_state_x),%ax
    mov    %ax,data_123838
    mov    EXTERN(mouse_state_y),%ax
    mov    %ax,data_12383c
#else
		call   w_dos_int386
#endif
		mov    data_123834,%ax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    data_123838,%ax
		sar    %eax
		mov    %esi,%edi
		mov    %ax,0x2(%esp)
		mov    data_12383c,%ax
		mov    %esp,%esi
		mov    %ax,0x4(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %ecx,%eax
		jmp    jump_5d2c7


/*----------------------------------------------------------------*/
func_5cf3e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x4,%edx
		mov    $data_123830,%ebx
		add    %eax,%eax
		mov    %dx,data_123810
		mov    %ax,data_123818 /* column */
		mov    $data_123810,%edx
		mov    $0x33,%eax
		mov    %cx,data_12381c /* row */
#if 1
    pushl  data_12381c
    sub    %esi,data_123818
    pushl  data_123818
    call   w_mouse_set_position
    add    $8,%esp
    add    %esi,data_123818
#else
		call   w_dos_int386
#endif
		cmpw   $0x0,data_123856
		je     jump_5cfbc
		call   func_5d570
		mov    $0x1,%edi
		mov    %cx,0x4(%esp)
		mov    %si,0x2(%esp)
		mov    0x4(%esp),%edx
		mov    %di,(%esp)
		push   %edx
		mov    0x4(%esp),%ebx
		push   %ebx
		mov    %si,data_12385a
		mov    %cx,data_123858
		call   func_5d1b0
		call   func_5d41e
	jump_5cfbc:
		add    $0x8,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
mouse_set_horizontal_range: /* 5d044 */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x7,%ebx
		add    %eax,%eax
		add    %edx,%edx
		mov    %bx,data_123810
		mov    %ax,data_123818
		mov    %dx,data_12381c
		mov    $data_123830,%ebx
		mov    $data_123810,%edx
		mov    $0x33,%eax
		jmp    jump_5d09c


/*----------------------------------------------------------------*/
mouse_set_vertical_range: /* 5d073 */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x8,%ebx
		mov    %ax,data_123818
		mov    %dx,data_12381c
		mov    $data_123810,%edx
		mov    $0x33,%eax
		mov    %bx,data_123810
		mov    $data_123830,%ebx
	jump_5d09c:
#if 0
		call   w_dos_int386
#endif
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d15a:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %ecx,%edx
		mov    %esp,%eax
		mov    $0xc,%ecx
#if 0
		call   func_segread_
#endif
		mov    %cx,data_123810
		mov    %si,data_123818
		mov    %ebx,%eax
		mov    %ebx,data_12381c
		mov    %esp,%ecx
		mov    $data_123830,%ebx
		mov    $0x33,%eax
		mov    %dx,(%esp)
		mov    $data_123810,%edx
#if 1
    call   w_game_install_mouse_isr
#else
		call   w_dos_int386x
#endif
		add    $0xc,%esp
		pop    %esi
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5d1b0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    data_12385f,%dl
		inc    %edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_12385e,%ah
		mov    %dl,data_12385f
		cmp    %ah,%dl
		je     jump_5d211
		xor    %edx,%edx
		mov    data_12385f,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    0xc(%esp),%eax
		mov    %ax,data_123754(%edx)
		mov    0xe(%esp),%eax
		mov    %ax,data_123756(%edx)
		mov    0x10(%esp),%eax
		mov    %ax,data_123758(%edx)
		mov    $0x1,%al
		pop    %edx
		pop    %ebx
		ret    $0x8
	jump_5d211:
		xor    %edx,%edx
		mov    data_12385f,%dl
		dec    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,data_12385f
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    $0x8


/*----------------------------------------------------------------*/
func_5d22e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x8,%esp
		mov    %esi,%ebx
		mov    data_12385f,%al
		mov    data_12385e,%ah
		cmp    %ah,%al
		je     jump_5d27a
		xor    %edx,%edx
		mov    %ah,%dl
		inc    %edx
		mov    $0x1e,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,data_12385e
		xor    %edx,%edx
		mov    data_12385e,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_123754(,%eax,2),%ax
		mov    %ax,(%esp)
		jmp    jump_5d280
	jump_5d27a:
		xor    %edx,%edx
		mov    %dx,(%esp)
	jump_5d280:
		xor    %edx,%edx
		mov    data_12385e,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    data_123756(%edx),%ax
		mov    %ax,0x2(%esp)
		mov    data_123758(%edx),%ax
		mov    %ax,0x4(%esp)
		mov    0x2(%esp),%eax
		mov    %esp,%esi
		mov    %ax,data_12385a
		mov    0x4(%esp),%eax
		mov    %ebx,%edi
		mov    %ax,data_123858
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %ebx,%eax
	jump_5d2c7:
		add    $0x8,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d2f5:
/*----------------------------------------------------------------*/
		mov    data_12385f,%al
		mov    %al,data_12385e
		ret


/*----------------------------------------------------------------*/
func_5d351:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_12384c,%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		call   mouse_set_horizontal_range
		mov    data_12384e,%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		call   mouse_set_vertical_range
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_5d388:
/*----------------------------------------------------------------*/
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		call   func_5d570
		mov    %si,data_123856
		mov    %esp,%esi
		call   func_5d2f5
		call   mouse_get_state
		mov    0x2(%esp),%eax
		mov    %ax,data_12385a
		mov    0x4(%esp),%eax
		mov    %ax,data_123858
		add    $0x8,%esp
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_5d3bf:
/*----------------------------------------------------------------*/
		mov    %al,data_123860
		ret


/*----------------------------------------------------------------*/
func_5d3c5:
/*----------------------------------------------------------------*/
		push   %esi
		mov    %eax,%esi
		call   func_5d570
		mov    %esi,data_123808
		mov    data_12380c,%esi
		test   %esi,%esi
		je     jump_5d3e4
		mov    %esi,%eax
		call   w_dos_free
	jump_5d3e4:
		xor    %eax,%eax
		movzbl %dl,%esi
		mov    %bl,%al
		imul   %esi,%eax
		dec    %dl
		add    $0x10,%eax
		dec    %bl
		call   w_dos_malloc
		mov    %eax,data_12380c
		mov    %dl,data_12385d
		mov    %bl,data_12385c
		mov    0x8(%esp),%al
		mov    %cl,data_123862
		mov    %al,data_123861
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_5d41e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x0,data_755bc
		jne    jump_5d56c
		movsbw data_123862,%dx
		mov    data_12385a,%ax
		sub    %edx,%eax
		movsbw data_123861,%dx
		mov    %ax,data_123852
		mov    data_123858,%ax
		sub    %edx,%eax
		mov    %ax,data_123854
		call   func_5f85e
		cmpb   $0x0,data_123860
		jne    jump_5d46f
		call   func_5f839
		jmp    jump_5d474
	jump_5d46f:
		call   func_5f804
	jump_5d474:
		mov    data_123856,%ax
		cmp    $0x1,%ax
		jb     jump_5d491
		jbe    jump_5d4bf
		cmp    $0x2,%ax
		je     jump_5d510
		jmp    jump_5d55f
	jump_5d491:
		test   %ax,%ax
		jne    jump_5d55f
		mov    $0x1,%edx
		mov    $data_123830,%ebx
		mov    $0x33,%eax
		mov    %dx,data_123810
		mov    $data_123810,%edx
		call   w_dos_int386
		jmp    jump_5d55f
	jump_5d4bf:
		mov    data_12380c,%ebx
		mov    data_123852,%edx
		mov    data_123859,%ecx
		mov    data_123850,%eax
		push   %ebx
		sar    $0x10,%edx
		sar    $0x18,%ecx
		mov    data_12385a,%ebx
		sar    $0x10,%eax
		sar    $0x18,%ebx
		add    %edx,%ecx
		add    %eax,%ebx
		call   func_5eecf
		mov    data_123808,%ebx
		mov    data_123852,%edx
		mov    data_123850,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee51
		jmp    jump_5d55f
	jump_5d510:
		mov    data_12380c,%edx
		mov    data_123859,%ecx
		mov    data_123850,%eax
		mov    data_12385a,%ebx
		push   %edx
		sar    $0x18,%ecx
		sar    $0x10,%eax
		mov    data_123852,%edx
		sar    $0x18,%ebx
		sar    $0x10,%edx
		add    %eax,%ebx
		add    %edx,%ecx
		call   func_5eecf
		mov    data_123808,%ebx
		mov    data_123852,%edx
		mov    data_123850,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5f3fd
	jump_5d55f:
		mov    $0x1,%dh
		call   func_5f869
		mov    %dh,data_755bc
	jump_5d56c:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d570:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpb   $0x1,data_755bc
		jne    jump_5d5ea
		call   func_5f85e
		cmpb   $0x0,data_123860
		jne    jump_5d590
		call   func_5f839
		jmp    jump_5d595
	jump_5d590:
		call   func_5f804
	jump_5d595:
		cmpw   $0x0,data_123856
		jne    jump_5d5c1
		mov    $0x2,%ebx
		mov    $data_123810,%edx
		mov    $0x33,%eax
		mov    %bx,data_123810
		mov    $data_123830,%ebx
		call   w_dos_int386
		jmp    jump_5d5dd
	jump_5d5c1:
		mov    data_12380c,%ebx
		mov    data_123852,%edx
		mov    data_123850,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5ee9b
	jump_5d5dd:
		xor    %dh,%dh
		call   func_5f869
		mov    %dh,data_755bc
	jump_5d5ea:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d5ed:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_5d15a
		mov    data_12380c,%edx
		test   %edx,%edx
		je     jump_5d60c
		mov    %edx,%eax
		call   w_dos_free
	jump_5d60c:
		call   func_5cea3
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
GLOBAL (mouse_isr) /* 5d615 */
/*----------------------------------------------------------------*/
		push   %ds
#if 0
		call   func___GETDS
#endif
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
#if 0
		cli
#endif
		cmpb   $0x0,data_755c1
		je     jump_5d633
		mov    data_12385e,%al
		mov    %al,data_12385f
	jump_5d633:
		movswl %cx,%eax
		mov    %dx,data_123850
		sar    %eax
		mov    (%esp),%dl
		mov    %ax,data_12384e
		test   $0x1,%dl
		je     jump_5d67d
		test   %bx,%bx
		jle    jump_5d661
		mov    %ebx,%eax
		add    $0x5,%eax
		mov    %ax,data_12384c
		jmp    jump_5d66a
	jump_5d661:
		movw   $0x1,data_12384c
	jump_5d66a:
		mov    data_123850,%edx
		push   %edx
		mov    data_12384c,%ecx
		push   %ecx
		call   func_5d1b0
	jump_5d67d:
		mov    (%esp),%dh
		test   $0x2,%dh
		jne    jump_5d68a
		test   $0x8,%dh
		je     jump_5d6f5
	jump_5d68a:
		mov    data_755bd,%eax
		mov    data_123863,%esi
#if 0
		mov    (%eax),%eax
#endif
		sub    %esi,%eax
		cmp    $0x7,%eax
		jae    jump_5d6c4
		test   %esi,%esi
		je     jump_5d6c4
		add    $0x3,%ebx
		mov    %bx,data_12384c
		mov    data_123850,%ebx
		push   %ebx
		mov    data_12384c,%ecx
		xor    %edx,%edx
		push   %ecx
		mov    %edx,data_123863
		jmp    jump_5d6f0
	jump_5d6c4:
		mov    data_755bd,%eax
#if 0
		mov    (%eax),%eax
#endif
		mov    %eax,data_123863
		cmp    $0x2,%bx
		jle    jump_5d6db
		mov    $0xa,%ebx
	jump_5d6db:
		inc    %ebx
		mov    data_123850,%ebp
		mov    %bx,data_12384c
		push   %ebp
		mov    data_12384c,%eax
		push   %eax
	jump_5d6f0:
		call   func_5d1b0
	jump_5d6f5:
		mov    (%esp),%ebx
		cmp    $0xa,%bx
		jne    jump_5d718
		mov    data_123850,%esi
		mov    %bx,data_12384c
		push   %esi
		mov    data_12384c,%edi
		push   %edi
		call   func_5d1b0
	jump_5d718:
		testb  $0x4,(%esp)
		je     jump_5d73c
		mov    $0x8,%esi
		mov    data_123850,%ebp
		mov    %si,data_12384c
		push   %ebp
		mov    data_12384c,%eax
		push   %eax
		call   func_5d1b0
	jump_5d73c:
		testb  $0x10,(%esp)
		je     jump_5d761
		mov    $0x9,%edi
		mov    data_123850,%edx
		mov    %di,data_12384c
		push   %edx
		mov    data_12384c,%ebx
		push   %ebx
		call   func_5d1b0
	jump_5d761:
#if 0
		sti
#endif
		cld
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ds
#if 1
    ret
#else
		lret
#endif


/*----------------------------------------------------------------*/
GLOBAL (keyboard_isr) /* 5d76b */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
#if 0
		call   func___GETDS
		mov    $0x60,%eax
		cli
		call   func_inp_
#endif
		cmp    $0xe0,%al
		je     jump_5d7b5
		test   $0x80,%al
		jne    jump_5d7a2
		and    $0xff,%eax
		mov    $0x1,%bl
		mov    %bl,data_12386e(%eax)
		add    %bl,data_1238ed
		jmp    jump_5d7b5
	jump_5d7a2:
		and    $0xff,%eax
		xor    %dl,%dl
		mov    %dl,data_1237ee(%eax)
		decb   data_1238ed
	jump_5d7b5:
#if 0
		mov    $0x40,%edx
		mov    $0x1a,%eax
		mov    %edx,%gs
		mov    $0x1c,%edx
		mov    %gs:(%eax),%al
		mov    %al,%gs:(%edx)
		pushf
		lcall  *data_123868
		sti
#endif
		cld
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
#if 1
    ret
#else
		iret
#endif


/*----------------------------------------------------------------*/
func_5d7dd:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x9,%eax
		mov    $keyboard_isr,%ebx
#if 0
		call   func__dos_getvect_
#endif
		mov    %cs,%ecx
		mov    %eax,data_123868
		mov    $0x9,%eax
		mov    %dx,data_12386c
#if 1
    call   w_game_install_keyboard_isr
#else
		call   func__dos_setvect_
#endif
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d80b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    $0x9,%eax
		mov    data_12386c,%cx
		mov    data_123868,%ebx
#if 1
    call   w_game_uninstall_keyboard_isr
#else
		call   func__dos_setvect_
#endif
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5d827:
/*----------------------------------------------------------------*/
		and    $0xff,%eax
		mov    data_12386e(%eax),%al
		ret


/*----------------------------------------------------------------*/
func_5d839:
/*----------------------------------------------------------------*/
#if 1
    call   w_game_update

    call   w_keyboard_has_input
    test   %eax,%eax
    setne  %al
#else
		push   %ecx
		push   %edx
		mov    $0x40,%ecx
		mov    $0x1c,%eax
		mov    %ecx,%gs
		mov    $0x1a,%edx
		mov    %gs:(%eax),%al /* 0x41c: end address of kbd buffer */
		cmp    %gs:(%edx),%al /* 0x40a: start address of kbd buffer */
		setne  %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
#endif
		ret
.data
data_5d85a:
		.ascii  "\x00\x00\x01\x02\x03\x04\x05\x06"
		.ascii  "\x07\x08\x09\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x0f\x10\x11\x12\x13"
		.fill   0xb
data_5d87a:
		.ascii  "\x00\x00\x00\x01\x02\x03\x04\x05"
		.ascii  "\x00\x00\x06\x07\x08\x09\x0a\x0b"
		.ascii  "\x00\x00\x0c\x0d\x0e\x0f\x10\x11"
		.ascii  "\x00\x00\x12\x13\x14\x15\x00\x00"
data_5d89a:
		.ascii  "\x00\x00\x01\x02\x03\x04\x05\x06"
		.ascii  "\x07\x08\x09\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x0f\x10\x00\x11\x12\x13\x14\x15"
		.ascii  "\x16\x17\x18\x19\x1a\x1b\x00\x00"
data_5d8ba:
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x00\x01\x01\x01"
data_5d8ce:
		.ascii  "\x00\x02\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x02\x03\x03\x03"
data_5d8e2:
		.ascii  "\x00\x00\x02\x00\x02\x01\x02\x01"
		.ascii  "\x02\x03\x00\x02\x01\x03\x03\x01"
		.ascii  "\x02\x01\x03\x03\x01\x01"
data_5d8f8:
		.fill   0x9
		.ascii  "\x01\x03\x03\x03\x01\x02\x04\x04"
		.ascii  "\x04\x02\x01\x03\x00"
data_5d90e:
		.ascii  "\x00\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x06\x07\x07\x07\x06\x06\x07"
		.ascii  "\x07\x07\x06\x06\x07\x05"
data_5d924:
		.ascii  "\x08\x00\x7e\x00\x10\x00\x0d\x00"
		.ascii  "\x05\x00\x07\x00\x14\x00\x71\x00"
		.ascii  "\x69\x00\x6b\x00\x67\x00\x81\x00"
		.ascii  "\x7f\x00\x78\x00\x68\x00\x6e\x00"
		.ascii  "\x09\x00\x02\x00\x04\x00\x0b\x00"
		.ascii  "\x6f\x00\x13\x00\x0e\x00\x12\x00"
		.ascii  "\x77\x00\x11\x00"
data_5d958:
		.ascii  "\x08\x00\x7e\x00\x10\x00\x0d\x00"
		.ascii  "\x06\x00\x07\x00\x14\x00\x71\x00"
		.ascii  "\x69\x00\x6b\x00\x67\x00\x81\x00"
		.ascii  "\x7f\x00\x78\x00\x6a\x00\x70\x00"
		.ascii  "\x0a\x00\x03\x00\x04\x00\x0c\x00"
		.ascii  "\x6f\x00\x13\x00\x0f\x00\x12\x00"
		.ascii  "\x77\x00\x11\x00"
data_5d98c:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x05\x00\x08\x00\x01\x00\x09\x00"
		.ascii  "\x11\x00\x13\x00\x01\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x18\x00\x01\x00"
		.ascii  "\x19\x00\x1a\x00\x1b\x00\x1c\x00"
		.ascii  "\x1d\x00"
data_5d9b6:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x64\x00\x04\x00\x65\x00\x66\x00"
		.ascii  "\x05\x00\x07\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x6a\x00\x6b\x00\x6c\x00"
		.ascii  "\x6d\x00\x08\x00\x01\x00\x09\x00"
		.ascii  "\x6e\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x10\x00\x11\x00\x12\x00"
		.ascii  "\x13\x00\x14\x00"
data_5d9f2:
		.ascii  "\x02\x00"
data_5d9f4:
		.ascii  "\x0b\x00"
data_5d9f6:
		.ascii  "\x04\x00\x05\x00\x0e\x00\x06\x00"
		.ascii  "\x05\x00\x14\x00\x07\x00\x09\x00"
		.ascii  "\x02\x00\x0a\x00\x09\x00\x08\x00"
		.ascii  "\x0b\x00\x09\x00\x09\x00\x0c\x00"
		.ascii  "\x09\x00\x0b\x00\x0d\x00\x09\x00"
		.ascii  "\x12\x00\x0e\x00\x09\x00\x13\x00"
		.ascii  "\x0f\x00\x09\x00\x14\x00\x10\x00"
		.ascii  "\x13\x00\x0b\x00\x14\x00"
data_5da34:
		.ascii  "\x02\x00\x05\x00\x09\x00\x0b\x00"
		.ascii  "\x0e\x00"
data_5da3e:
		.ascii  "\x0d\x00"
data_5da40:
		.ascii  "\x03\x00"
data_5da42:
		.ascii  "\x0e\x00\x0d\x00\x04\x00\x0f\x00"
		.ascii  "\x0d\x00\x1d\x00\x12\x00\x14\x00"
		.ascii  "\x07\x00\x15\x00\x14\x00\x0a\x00"
		.ascii  "\x16\x00\x14\x00\x1d\x00\x17\x00"
		.ascii  "\x1b\x00\x1d\x00\x1c\x00"
.text


/*----------------------------------------------------------------*/
func_5da68:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		call   func_5daa8
		mov    $0xf,%edx
		mov    $0x7,%ecx
		xor    %edi,%edi
		mov    %dx,data_12761c
		mov    %dx,data_12761e
		mov    %cx,data_127608
		mov    %dx,data_12760a
		mov    %di,data_127646
		mov    %di,data_127648
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5daa8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%esi
		push   $0x200
		push   %eax
		mov    $0x1400,%ebx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    $data_1238f8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xb00,%ebx
		mov    $data_124cf8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0xe00,%ebx
		mov    $data_1257f8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		push   $0x200
		push   %esi
		mov    $0x1000,%ebx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    $data_1265f8,%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5db25:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %ebx,%esi
		xor    %edx,%edx
		jmp    jump_5db42
	jump_5db32:
		movswl %dx,%ebx
		lea    (%ecx,%ebx,1),%eax
		mov    (%edi,%ebx,1),%bl
		mov    (%eax),%bh
		or     %bl,%bh
		inc    %edx
		mov    %bh,(%eax)
	jump_5db42:
		cmp    %si,%dx
		jne    jump_5db32
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_5db4e:
		.long   func_5db79
		.long   func_5db8a
		.long   func_5db9a
		.long   func_5db79
		.long   func_5db79
		.long   func_5db79


/*----------------------------------------------------------------*/
func_5db66:
/*----------------------------------------------------------------*/
		cwtl
		mov    %eax,data_1275f8
		cmp    $0x5,%eax
		ja     jump_5dbad
		jmp    *vtable_5db4e(,%eax,4)


/*----------------------------------------------------------------*/
func_5db79:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		mov    %eax,data_1275fc
		movswl %bx,%eax
	jump_5db84:
		mov    %eax,data_127604
		ret


/*----------------------------------------------------------------*/
func_5db8a:
/*----------------------------------------------------------------*/
		mov    $0xff,%ebx
		movswl %dx,%eax
		mov    %ebx,data_1275fc
		jmp    jump_5db84


/*----------------------------------------------------------------*/
func_5db9a:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		mov    $0xff,%edx
		mov    %eax,data_1275fc
		mov    %edx,data_127604
	jump_5dbad:
		ret

vtable_5dbae:
		.long   func_5dbfb
		.long   func_5dbfb
		.long   func_5dbfb
		.long   func_5dc17
		.long   func_5dc38
		.long   func_5dce9


/*----------------------------------------------------------------*/
func_5dbc6:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %ebx,%esi
		mov    data_1275f8,%ecx
		cmp    $0x5,%ecx
		ja     jump_5dd3e
		mov    data_1275fc,%edi
		mov    data_1275fc,%ebx
		and    $0xff,%edi
		sar    $0x8,%ebx
		jmp    *vtable_5dbae(,%ecx,4)


/*----------------------------------------------------------------*/
func_5dbfb:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		xor    %ebx,%ebx
		cwtl
		mov    data_127604,%bl
		xor    %ecx,%ecx
		push   %ebx
		mov    data_1275fc,%cl
		mov    %esi,%ebx
		jmp    jump_5dd39


/*----------------------------------------------------------------*/
func_5dc17:
/*----------------------------------------------------------------*/
		movswl %dx,%edx
		xor    %ebx,%ebx
		cwtl
		mov    data_127604,%bl
		xor    %ecx,%ecx
		push   %ebx
		mov    data_1275fc,%cl
		mov    %esi,%ebx
		call   func_5f728
		jmp    jump_5dd3e


/*----------------------------------------------------------------*/
func_5dc38:
/*----------------------------------------------------------------*/
		xor    %ecx,%ecx
		mov    data_127604,%cl
		mov    %edi,(%esp)
		push   %ecx
		movzbl 0x4(%esp),%edi
		and    $0xff,%ebx
		movswl %dx,%ebp
		cwtl
		mov    %ebx,0x8(%esp)
		mov    %ebx,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    %eax,0xc(%esp)
		call   func_5f6aa
		push   $0xff
		lea    -0x1(%ebp),%eax
		mov    %edi,%ecx
		mov    %eax,0x10(%esp)
		mov    0xc(%esp),%eax
		mov    %esi,%ebx
		dec    %eax
		mov    0x10(%esp),%edx
		mov    %eax,0x14(%esp)
		call   func_5f6aa
		push   $0xff
		lea    0x1(%ebp),%eax
		mov    %edi,%ecx
		mov    %eax,0x18(%esp)
		mov    0xc(%esp),%eax
		mov    %esi,%ebx
		inc    %eax
		mov    0x18(%esp),%edx
		mov    %eax,0x1c(%esp)
		call   func_5f6aa
		push   $0xff
		mov    0x18(%esp),%edx
		mov    0x14(%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   func_5f6aa
		push   $0xff
		mov    0x10(%esp),%edx
		mov    0x1c(%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   func_5f6aa
		push   $0xff
		mov    0x8(%esp),%ecx
		mov    0xc(%esp),%eax
		mov    %esi,%ebx
		mov    %ebp,%edx
		jmp    jump_5dd39


/*----------------------------------------------------------------*/
func_5dce9:
/*----------------------------------------------------------------*/
		mov    %edi,(%esp)
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		movswl %dx,%ebp
		mov    data_127604,%bl
		movswl %ax,%edi
		push   %ebx
		xor    %ebx,%ebx
		mov    %ebp,%edx
		mov    %cl,%bl
		mov    %edi,%eax
		mov    %ebx,0x8(%esp)
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   func_5f6aa
		push   $0xff
		lea    0x1(%ebp),%edx
		lea    0x1(%edi),%eax
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    0x4(%esp),%cl
		call   func_5f6aa
		push   $0xff
		mov    0x8(%esp),%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		mov    %edi,%eax
	jump_5dd39:
		call   func_5f6aa
	jump_5dd3e:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5dd5b:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		mov    %ebx,%ebp
		mov    %ax,data_127646
		mov    %ebx,%edi
		mov    %dx,data_127648
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,0x4(%esp)
		xor    %ecx,%ecx
		jmp    jump_5e013
	jump_5dd89:
		xor    %eax,%eax
		mov    %cx,%ax
		mov    (%eax,%ebp,1),%al
		mov    %al,0x14(%esp)
		cmp    $0x7f,%al
		jbe    jump_5df52
		mov    $0x20,%ebx
		mov    $data_127620,%eax
		xor    %edx,%edx
		call   w_dos_memset
		cmpw   $0x130,data_127646
		jle    jump_5dde1
		cmpw   $0x0,data_755c8
		je     jump_5dde1
		xor    %eax,%eax
		mov    data_127648,%dx
		mov    %ax,data_127646
		mov    data_755c6,%ax
		add    %eax,%edx
		mov    %dx,data_127648
	jump_5dde1:
		inc    %ecx
		xor    %eax,%eax
		mov    %cx,%ax
		mov    (%eax,%ebp,1),%ah
		mov    0x14(%esp),%al
		xor    %edx,%edx
		and    $0x7c,%al
		mov    %al,%dl
		sar    $0x2,%edx
		mov    %dl,%al
		mov    0x14(%esp),%dl
		and    $0x3,%dl
		mov    %edx,%ebx
		xor    %edx,%edx
		and    $0xff,%ebx
		mov    %ah,%dl
		shl    $0x3,%ebx
		sar    $0x5,%edx
		and    $0x1f,%ah
		add    %ebx,%edx
		mov    %ah,0xc(%esp)
		mov    %dl,0x10(%esp)
		xor    %edx,%edx
		and    $0xff,%eax
		mov    0x10(%esp),%dl
		mov    data_5d85a(%eax),%al
		mov    data_5d87a(%edx),%ah
		xor    %edx,%edx
		mov    0xc(%esp),%dl
		mov    %ah,0x10(%esp)
		mov    data_5d89a(%edx),%ah
		xor    %edx,%edx
		mov    0x10(%esp),%dl
		mov    %ah,0xc(%esp)
		movzbw data_5d8e2(%edx),%di
		test   %ah,%ah
		jne    jump_5de76
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    data_5d8f8(%edx),%dl
		movzbw data_5d8ba(%ebx),%si
	jump_5de6e:
		xor    %dh,%dh
		mov    %edx,0x8(%esp)
		jmp    jump_5de93
	jump_5de76:
		test   %al,%al
		je     jump_5de8e
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    data_5d90e(%edx),%dl
		movzbw data_5d8ce(%ebx),%si
		jmp    jump_5de6e
	jump_5de8e:
		mov    $0x2,%esi
	jump_5de93:
		test   %al,%al
		je     jump_5dec3
		xor    %edx,%edx
		mov    0x8(%esp),%dx
		imul   $0x280,%edx,%edx
		add    $data_1238f8,%edx
		and    $0xff,%eax
		shl    $0x5,%eax
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_127620,%edx
		call   func_5db25
	jump_5dec3:
		mov    0x10(%esp),%bh
		test   %bh,%bh
		je     jump_5def3
		xor    %eax,%eax
		mov    %si,%ax
		imul   $0x2c0,%eax,%eax
		xor    %edx,%edx
		mov    %bh,%dl
		shl    $0x5,%edx
		add    $data_124cf8,%eax
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_127620,%edx
		call   func_5db25
	jump_5def3:
		cmpb   $0x0,0xc(%esp)
		je     jump_5df25
		xor    %edx,%edx
		mov    %di,%dx
		imul   $0x380,%edx,%edx
		xor    %eax,%eax
		mov    0xc(%esp),%al
		shl    $0x5,%eax
		add    $data_1257f8,%edx
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_127620,%edx
		call   func_5db25
	jump_5df25:
		mov    $data_12761c,%ebx
		mov    data_127646,%edx
		mov    data_127644,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5dbc6
		mov    data_755c4,%ax
		add    %ax,data_127646
		jmp    jump_5e012
	jump_5df52:
		cmp    $0xa,%al
		jne    jump_5df7a
		mov    (%esp),%eax
		mov    data_127648,%bx
		mov    %ax,data_127646
		mov    data_755c6,%ax
		add    %eax,%ebx
		mov    %bx,data_127648
		jmp    jump_5e012
	jump_5df7a:
		mov    $0x10,%ebx
		mov    $data_12760c,%eax
		xor    %edx,%edx
		call   w_dos_memset
		cmpw   $0x138,data_127646
		jle    jump_5dfbf
		cmpw   $0x0,data_755c8
		je     jump_5dfbf
		mov    data_755c6,%ax
		mov    data_127648,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    %di,data_127646
		mov    %dx,data_127648
	jump_5dfbf:
		xor    %edx,%edx
		mov    0x14(%esp),%dl
		mov    $0x10,%ebx
		shl    $0x4,%edx
		mov    $data_12760c,%eax
		add    $data_1265f8,%edx
		call   w_dos_memmove
		mov    $data_127608,%ebx
		mov    data_127646,%edx
		mov    data_127644,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5dbc6
		mov    data_755c2,%eax
		mov    data_127644,%edx
		sar    $0x11,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    %dx,data_127646
	jump_5e012:
		inc    %ecx
	jump_5e013:
		cmp    0x4(%esp),%cx
		jb     jump_5dd89
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5e048:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x3ec,%esp
		lea    0x404(%esp),%eax
		lea    0x3e8(%esp),%ebx
		mov    0x400(%esp),%edx
		mov    %eax,0x3e8(%esp)
		mov    %esp,%eax
		call   w_dos_vsprintf
		mov    0x3fa(%esp),%edx
		mov    0x3f6(%esp),%eax
		mov    %esp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_5dd5b
		xor    %edx,%edx
		mov    %edx,0x3e8(%esp)
		add    $0x3ec,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5e940:
/*----------------------------------------------------------------*/
#if 0
		int    $0x10
#endif
		ret


/*----------------------------------------------------------------*/
func_5e943:
/*----------------------------------------------------------------*/
#if 0
		push   %cx
		push   %dx
		mov    $0x10000,%ecx
		mov    $0x3da,%dx
	jump_5e950:
		in     (%dx),%al
		and    $0x8,%al
		je     jump_5e957
		loop   jump_5e950
	jump_5e957:
		mov    $0x10000,%ecx
	jump_5e95c:
		in     (%dx),%al
		and    $0x8,%al
		jne    jump_5e963
		loop   jump_5e95c
	jump_5e963:
		pop    %dx
		pop    %cx
#endif
		ret


/*----------------------------------------------------------------*/
func_5e9d0:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		mov    data_755d0,%edi
		add    data_755d6,%edi
		add    %edx,%edi
		mov    %ebx,%ecx
		cld
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5e9e8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    data_755cc,%esi
		add    $0xbb80,%esi
		mov    EXTERN(video_buffer),%edi
		mov    $0x1e0,%eax
		sub    $0x140,%eax
		mov    $0xc8,%bx
		cld
	jump_5ea0c:
		mov    $0x50,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %eax,%esi
		dec    %bx
		jne    jump_5ea0c
#if 1
    call   w_game_update
#endif
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5eae3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    data_755cc,%edi
		add    data_755d6,%edi
		cld
		mov    $0x5dc0,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5eb00:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		add    data_755d6,%ecx
		mov    %edx,%eax
		mov    data_755da,%edx
		mul    %edx
		add    %ecx,%eax
		add    data_755d0,%eax
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5eb1f:
/*----------------------------------------------------------------*/
		call   func_5eb00
		mov    %bl,(%eax)
		ret


/*----------------------------------------------------------------*/
func_5eb27:
/*----------------------------------------------------------------*/
		call   func_5eb00
		mov    (%eax),%eax
		ret


/*----------------------------------------------------------------*/
func_5eb2f:
/*----------------------------------------------------------------*/
		cmp    $0x1,%al
		je     jump_5eb3f
		movl   $func_5eb1f,data_755de
		jmp    jump_5eb49
	jump_5eb3f:
		movl   $func_5ee12,data_755de
	jump_5eb49:
		ret


/*----------------------------------------------------------------*/
func_5eb4a:
/*----------------------------------------------------------------*/
		mov    %ax,data_755d4
		ret


/*----------------------------------------------------------------*/
func_5eb58:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x1,%si
		mov    $0x1,%di
		mov    %ax,-0x6(%ebp)
		mov    %dx,-0x8(%ebp)
		sub    %ax,%bx
		cmp    $0x0,%bx
		jge    jump_5eb82
		neg    %bx
		neg    %si
	jump_5eb82:
		mov    %bx,-0x2(%ebp)
		sub    %dx,%cx
		cmp    $0x0,%cx
		jge    jump_5eb95
		neg    %cx
		neg    %di
	jump_5eb95:
		mov    %cx,-0x4(%ebp)
		movzwl -0x6(%ebp),%ecx
		movzwl -0x8(%ebp),%edx
		mov    -0x2(%ebp),%ax
		cmp    -0x4(%ebp),%ax
		jge    jump_5ebf5
		incw   -0x4(%ebp)
		mov    -0x4(%ebp),%ax
		mov    %ax,-0x8(%ebp)
		shr    %ax
		mov    %ax,-0x6(%ebp)
		mov    $0x0,%bx
	jump_5ebc2:
		push   %bx
		movzwl %cx,%eax
		movzwl %dx,%edx
		movzwl data_755d4,%ebx
		call   *data_755de
		pop    %bx
		add    %di,%dx
		add    -0x2(%ebp),%bx
		cmp    -0x6(%ebp),%bx
		jle    jump_5ebed
		add    %si,%cx
		sub    -0x4(%ebp),%bx
	jump_5ebed:
		decw   -0x8(%ebp)
		jne    jump_5ebc2
		jmp    jump_5ec3d
	jump_5ebf5:
		incw   -0x2(%ebp)
		mov    -0x2(%ebp),%ax
		mov    %ax,-0x8(%ebp)
		shr    %ax
		mov    %ax,-0x6(%ebp)
		mov    $0x0,%bx
	jump_5ec0c:
		push   %bx
		movzwl %cx,%eax
		movzwl %dx,%edx
		movzwl data_755d4,%ebx
		call   *data_755de
		pop    %bx
		add    %si,%cx
		add    -0x4(%ebp),%bx
		cmp    -0x6(%ebp),%bx
		jle    jump_5ec37
		add    %di,%dx
		sub    -0x2(%ebp),%bx
	jump_5ec37:
		decw   -0x8(%ebp)
		jne    jump_5ec0c
	jump_5ec3d:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5ec44:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		cmp    $0x0,%bx
		jle    jump_5ec5f
		call   func_5eb00
		mov    %eax,%edi
		mov    data_755d4,%ax
		movzwl %bx,%ecx
		cld
		rep stos %al,%es:(%edi)
	jump_5ec5f:
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5ec62:
/*----------------------------------------------------------------*/
		push   %ecx
		cmp    $0x0,%bx
		jle    jump_5ec7d
		call   func_5eb00
		mov    data_755d4,%dx
		movzwl %bx,%ecx
	jump_5ec78:
		xor    %dl,(%eax)
		inc    %eax
		loop   jump_5ec78
	jump_5ec7d:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5ecc7:
/*----------------------------------------------------------------*/
		cmp    $0x2,%al
		je     jump_5ecdb
		cmp    $0x1,%al
		je     jump_5ece7
		movl   $func_5ec44,data_755e2
		jmp    jump_5ecf1
	jump_5ecdb:
		movl   $func_5ec62,data_755e2
		jmp    jump_5ecf1
	jump_5ece7:
		movl   $func_5ee2b,data_755e2
	jump_5ecf1:
		ret


/*----------------------------------------------------------------*/
func_5ecf2:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    %bx,%ax
		jle    jump_5ed09
		push   %ax
		mov    %bx,%ax
		pop    %bx
	jump_5ed09:
		cmp    %cx,%dx
		jle    jump_5ed15
		push   %dx
		mov    %cx,%dx
		pop    %cx
	jump_5ed15:
		sub    %ax,%bx
		mov    %bx,-0x2(%ebp)
		movzwl -0x2(%ebp),%edi
		sub    %dx,%cx
		mov    %cx,-0x4(%ebp)
		call   func_5eb00
		push   %eax
		mov    data_755da,%eax
		mul    %ecx
		mov    %eax,%esi
		pop    %eax
		push   %eax
		mov    -0x2(%ebp),%cx
		inc    %cx
		mov    data_755d4,%dx
	jump_5ed45:
		mov    %dl,(%eax)
		mov    %dl,(%esi,%eax,1)
		inc    %eax
		loop   jump_5ed45
		pop    %eax
		mov    -0x4(%ebp),%cx
		inc    %cx
	jump_5ed54:
		mov    %dl,(%eax)
		mov    %dl,(%edi,%eax,1)
		add    data_755da,%eax
		loop   jump_5ed54
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5edde:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		cmp    %bx,%ax
		jle    jump_5eded
		push   %ax
		mov    %bx,%ax
		pop    %bx
	jump_5eded:
		cmp    %cx,%dx
		jle    jump_5edf9
		push   %dx
		mov    %cx,%dx
		pop    %cx
	jump_5edf9:
		sub    %ax,%bx
		sub    %dx,%cx
	jump_5edff:
		push   %eax
		push   %edx
		push   %ebx
		call   *data_755e2
		pop    %ebx
		pop    %edx
		pop    %eax
		inc    %edx
		loop   jump_5edff
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5ee12:
/*----------------------------------------------------------------*/
		push   %ebx
		call   func_5eb00
		mov    $0x0,%ebx
		mov    (%eax),%bl
		add    data_128550,%ebx
		mov    (%ebx),%bl
		mov    %bl,(%eax)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5ee2b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		cmp    $0x0,%bx
		jle    jump_5ee4e
		call   func_5eb00
		mov    %ebx,%ecx
	jump_5ee3a:
		mov    $0x0,%ebx
		mov    (%eax),%bl
		add    data_128550,%ebx
		mov    (%ebx),%bl
		mov    %bl,(%eax)
		inc    %eax
		loop   jump_5ee3a
	jump_5ee4e:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5ee51:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%esi
		mov    (%ebx),%si
		movzwl %si,%edx
		mov    data_755da,%ecx
		sub    %edx,%ecx
		mov    %ecx,-0x4(%ebp)
		mov    0x2(%ebx),%di
		add    $0x4,%ebx
	jump_5ee7e:
		mov    %esi,%ecx
	jump_5ee80:
		mov    (%ebx),%dl
		cmp    $0xff,%dl
		je     jump_5ee89
		mov    %dl,(%eax)
	jump_5ee89:
		inc    %ebx
		inc    %eax
		loop   jump_5ee80
		add    -0x4(%ebp),%eax
		dec    %di
		jne    jump_5ee7e
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5ee9b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ecx
		call   func_5eb00
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    (%esi),%bx
		mov    0x2(%esi),%dx
		add    $0x4,%esi
		mov    data_755da,%eax
		sub    %bx,%ax
		cld
	jump_5eebd:
		movzwl %bx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %eax,%edi
		dec    %dx
		jne    jump_5eebd
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5eecf:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    %ax,%bx
		inc    %bx
		sub    %dx,%cx
		inc    %cx
		call   func_5eb00
		mov    %eax,%esi
		mov    0x8(%ebp),%edi
		mov    %bx,(%edi)
		mov    %cx,0x2(%edi)
		mov    %cx,%dx
		add    $0x4,%edi
		mov    data_755da,%eax
		sub    %bx,%ax
		cld
	jump_5ef01:
		movzwl %bx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %eax,%esi
		dec    %dx
		jne    jump_5ef01
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_5efb9:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffe8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    %eax,-0xc(%ebp)
		mov    %eax,-0x10(%ebp)
		mov    %eax,-0x14(%ebp)
		mov    %eax,-0x18(%ebp)
		mov    (%ebx),%ax
		mov    %eax,-0x4(%ebp)
		mov    0x2(%ebx),%ax
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		add    -0x4(%ebp),%eax
		cmp    $0x13f,%eax
		jle    jump_5eff3
		sub    $0x13f,%eax
		mov    %eax,-0x10(%ebp)
	jump_5eff3:
		mov    %edx,%eax
		add    -0x8(%ebp),%eax
		cmp    $0xc7,%eax
		jle    jump_5f007
		sub    $0xc7,%eax
		mov    %eax,-0x18(%ebp)
	jump_5f007:
		mov    %ecx,%eax
		cmp    $0x0,%eax
		jge    jump_5f018
		neg    %eax
		mov    %eax,-0xc(%ebp)
		mov    $0x0,%ecx
	jump_5f018:
		mov    %edx,%eax
		cmp    $0x0,%eax
		jge    jump_5f029
		neg    %eax
		mov    %eax,-0x14(%ebp)
		mov    $0x0,%edx
	jump_5f029:
		mov    -0x4(%ebp),%eax
		sub    -0xc(%ebp),%eax
		sub    -0x10(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f039
		jmp    jump_5f08e
	jump_5f039:
		mov    %eax,-0x4(%ebp)
		mov    -0x8(%ebp),%eax
		sub    -0x14(%ebp),%eax
		sub    -0x18(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f04c
		jmp    jump_5f08e
	jump_5f04c:
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		call   func_5eb00
		push   %eax
		mov    (%ebx),%cx
		mov    -0x14(%ebp),%eax
		mul    %cx
		shl    $0x10,%edx
		mov    %ax,%dx
		add    %edx,%ebx
		add    $0x4,%ebx
		pop    %edx
	jump_5f06c:
		mov    -0x4(%ebp),%ecx
		add    -0xc(%ebp),%ebx
		push   %edx
	jump_5f073:
		mov    (%ebx),%al
		cmp    $0xff,%al
		je     jump_5f07b
		mov    %al,(%edx)
	jump_5f07b:
		inc    %ebx
		inc    %edx
		loop   jump_5f073
		add    -0x10(%ebp),%ebx
		pop    %edx
		add    data_755da,%edx
		decl   -0x8(%ebp)
		jne    jump_5f06c
	jump_5f08e:
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f093:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%esi
		mov    (%ebx),%si
		mov    0x2(%ebx),%di
		add    $0x4,%ebx
		mov    %cl,%dh
	jump_5f0ae:
		mov    %esi,%ecx
		push   %eax
	jump_5f0b1:
		mov    (%ebx),%dl
		cmp    $0xff,%dl
		je     jump_5f0ba
		mov    %dh,(%eax)
	jump_5f0ba:
		inc    %ebx
		inc    %eax
		loop   jump_5f0b1
		pop    %eax
		add    data_755da,%eax
		dec    %di
		jne    jump_5f0ae
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5f0cf:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffe8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    %eax,-0xc(%ebp)
		mov    %eax,-0x10(%ebp)
		mov    %eax,-0x14(%ebp)
		mov    %eax,-0x18(%ebp)
		mov    (%ebx),%ax
		mov    %eax,-0x4(%ebp)
		mov    0x2(%ebx),%ax
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		add    -0x4(%ebp),%eax
		cmp    $0x13f,%eax
		jle    jump_5f109
		sub    $0x13f,%eax
		mov    %eax,-0x10(%ebp)
	jump_5f109:
		mov    %edx,%eax
		add    -0x8(%ebp),%eax
		cmp    $0xc7,%eax
		jle    jump_5f11d
		sub    $0xc7,%eax
		mov    %eax,-0x18(%ebp)
	jump_5f11d:
		mov    %ecx,%eax
		cmp    $0x0,%eax
		jge    jump_5f12e
		neg    %eax
		mov    %eax,-0xc(%ebp)
		mov    $0x0,%ecx
	jump_5f12e:
		mov    %edx,%eax
		cmp    $0x0,%eax
		jge    jump_5f13f
		neg    %eax
		mov    %eax,-0x14(%ebp)
		mov    $0x0,%edx
	jump_5f13f:
		mov    -0x4(%ebp),%eax
		sub    -0xc(%ebp),%eax
		sub    -0x10(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f14f
		jmp    jump_5f1a6
	jump_5f14f:
		mov    %eax,-0x4(%ebp)
		mov    -0x8(%ebp),%eax
		sub    -0x14(%ebp),%eax
		sub    -0x18(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f162
		jmp    jump_5f1a6
	jump_5f162:
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		call   func_5eb00
		push   %eax
		mov    (%ebx),%cx
		mov    -0x14(%ebp),%eax
		mul    %cx
		shl    $0x10,%edx
		mov    %ax,%dx
		add    %edx,%ebx
		add    $0x4,%ebx
		pop    %edx
	jump_5f182:
		mov    -0x4(%ebp),%ecx
		add    -0x10(%ebp),%ebx
		push   %edx
		add    %ecx,%edx
	jump_5f18b:
		mov    (%ebx),%al
		cmp    $0xff,%al
		je     jump_5f193
		mov    %al,(%edx)
	jump_5f193:
		inc    %ebx
		dec    %edx
		loop   jump_5f18b
		add    -0xc(%ebp),%ebx
		pop    %edx
		add    data_755da,%edx
		decl   -0x8(%ebp)
		jne    jump_5f182
	jump_5f1a6:
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f1ab:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffe8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    %eax,-0xc(%ebp)
		mov    %eax,-0x10(%ebp)
		mov    %eax,-0x14(%ebp)
		mov    %eax,-0x18(%ebp)
		mov    (%ebx),%ax
		mov    %eax,-0x4(%ebp)
		mov    0x2(%ebx),%ax
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		add    -0x4(%ebp),%eax
		cmp    $0x13f,%eax
		jle    jump_5f1e5
		sub    $0x13f,%eax
		mov    %eax,-0x10(%ebp)
	jump_5f1e5:
		mov    %edx,%eax
		add    -0x8(%ebp),%eax
		cmp    $0xc7,%eax
		jle    jump_5f1f9
		sub    $0xc7,%eax
		mov    %eax,-0x18(%ebp)
	jump_5f1f9:
		mov    %ecx,%eax
		cmp    $0x0,%eax
		jge    jump_5f20a
		neg    %eax
		mov    %eax,-0xc(%ebp)
		mov    $0x0,%ecx
	jump_5f20a:
		mov    %edx,%eax
		cmp    $0x0,%eax
		jge    jump_5f21b
		neg    %eax
		mov    %eax,-0x14(%ebp)
		mov    $0x0,%edx
	jump_5f21b:
		mov    -0x4(%ebp),%eax
		sub    -0xc(%ebp),%eax
		sub    -0x10(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f22b
		jmp    jump_5f298
	jump_5f22b:
		mov    %eax,-0x4(%ebp)
		mov    -0x8(%ebp),%eax
		sub    -0x14(%ebp),%eax
		sub    -0x18(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f23e
		jmp    jump_5f298
	jump_5f23e:
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		call   func_5eb00
		push   %eax
		mov    (%ebx),%cx
		mov    -0x18(%ebp),%eax
		mul    %cx
		shl    $0x10,%edx
		mov    %ax,%dx
		add    %edx,%ebx
		add    $0x4,%ebx
		mov    data_755da,%eax
		mov    -0x8(%ebp),%ecx
		mul    %cx
		shl    $0x10,%edx
		add    %edx,%eax
		pop    %edx
		add    %eax,%edx
		sub    data_755da,%edx
	jump_5f276:
		mov    -0x4(%ebp),%ecx
		add    -0xc(%ebp),%ebx
		push   %edx
	jump_5f27d:
		mov    (%ebx),%al
		cmp    $0xff,%al
		je     jump_5f285
		mov    %al,(%edx)
	jump_5f285:
		inc    %ebx
		inc    %edx
		loop   jump_5f27d
		add    -0x10(%ebp),%ebx
		pop    %edx
		sub    data_755da,%edx
		decl   -0x8(%ebp)
		jne    jump_5f276
	jump_5f298:
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f29d:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%esi
		mov    (%ebx),%si
		mov    %esi,-0x8(%ebp)
		movzwl %si,%edx
		mov    data_755da,%ecx
		sub    %edx,%ecx
		mov    %ecx,-0x4(%ebp)
		mov    0x2(%ebx),%di
		add    $0x4,%ebx
	jump_5f2cd:
		mov    -0x8(%ebp),%ecx
	jump_5f2d0:
		mov    (%ebx),%dl
		cmp    $0xff,%dl
		je     jump_5f2f3
		mov    $data_12764c,%esi
		shl    $0x2,%edx
		add    %edx,%esi
		shr    $0x2,%edx
		mov    (%esi),%esi
		cmp    $0x0,%esi
		je     jump_5f2f1
		mov    (%eax),%dl
		add    %edx,%esi
		mov    (%esi),%dl
	jump_5f2f1:
		mov    %dl,(%eax)
	jump_5f2f3:
		inc    %ebx
		inc    %eax
		loop   jump_5f2d0
		add    -0x4(%ebp),%eax
		dec    %di
		jne    jump_5f2cd
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f305:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffe8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    %eax,-0xc(%ebp)
		mov    %eax,-0x10(%ebp)
		mov    %eax,-0x14(%ebp)
		mov    %eax,-0x18(%ebp)
		mov    (%ebx),%ax
		mov    %eax,-0x4(%ebp)
		mov    0x2(%ebx),%ax
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		add    -0x4(%ebp),%eax
		cmp    $0x13f,%eax
		jle    jump_5f340
		sub    $0x13f,%eax
		mov    %eax,-0x10(%ebp)
	jump_5f340:
		mov    %edx,%eax
		add    -0x8(%ebp),%eax
		cmp    $0xc7,%eax
		jle    jump_5f354
		sub    $0xc7,%eax
		mov    %eax,-0x18(%ebp)
	jump_5f354:
		mov    %ecx,%eax
		cmp    $0x0,%eax
		jge    jump_5f365
		neg    %eax
		mov    %eax,-0xc(%ebp)
		mov    $0x0,%ecx
	jump_5f365:
		mov    %edx,%eax
		cmp    $0x0,%eax
		jge    jump_5f376
		neg    %eax
		mov    %eax,-0x14(%ebp)
		mov    $0x0,%edx
	jump_5f376:
		mov    -0x4(%ebp),%eax
		sub    -0xc(%ebp),%eax
		sub    -0x10(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f386
		jmp    jump_5f3f7
	jump_5f386:
		mov    %eax,-0x4(%ebp)
		mov    -0x8(%ebp),%eax
		sub    -0x14(%ebp),%eax
		sub    -0x18(%ebp),%eax
		cmp    $0x0,%eax
		jg     jump_5f399
		jmp    jump_5f3f7
	jump_5f399:
		mov    %eax,-0x8(%ebp)
		mov    %ecx,%eax
		call   func_5eb00
		push   %eax
		mov    (%ebx),%cx
		mov    -0x14(%ebp),%eax
		mul    %cx
		shl    $0x10,%edx
		mov    %ax,%dx
		add    %edx,%ebx
		add    $0x4,%ebx
		pop    %edx
		xor    %eax,%eax
	jump_5f3bb:
		mov    -0x4(%ebp),%ecx
		add    -0xc(%ebp),%ebx
		push   %edx
	jump_5f3c2:
		mov    (%ebx),%al
		cmp    $0xff,%al
		je     jump_5f3e4
		mov    $data_12764c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
		shr    $0x2,%eax
		mov    (%esi),%esi
		cmp    $0x0,%esi
		je     jump_5f3e2
		mov    (%edx),%al
		add    %eax,%esi
		mov    (%esi),%al
	jump_5f3e2:
		mov    %al,(%edx)
	jump_5f3e4:
		inc    %ebx
		inc    %edx
		loop   jump_5f3c2
		add    -0x10(%ebp),%ebx
		pop    %edx
		add    data_755da,%edx
		decl   -0x8(%ebp)
		jne    jump_5f3bb
	jump_5f3f7:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f3fd:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    $0x0,%ecx
	jump_5f414:
		lods   %ds:(%esi),%eax
		movzwl %ax,%edx
		add    %edx,%edi
		shr    $0x10,%eax
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		dec    %bx
		jne    jump_5f414
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5f42d:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %esi
		push   %edi
		call   func_5eb00
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		mov    %cx,-0x2(%ebp)
		cmp    $0x0,%cx
		je     jump_5f491
		mov    $0x0,%edx
		cld
	jump_5f453:
		lods   %ds:(%esi),%eax
		add    %ax,%dx
		movzwl %ax,%ecx
		add    %ecx,%edi
		shr    $0x10,%eax
		cmp    data_755da,%edx
		jl     jump_5f475
		sub    data_755da,%edx
		decw   -0x2(%ebp)
		jne    jump_5f475
		jmp    jump_5f49a
	jump_5f475:
		mov    $0x0,%ecx
		mov    %al,%cl
		shl    $0x2,%ecx
		shr    $0x8,%ax
		add    %ax,%cx
		add    %ecx,%esi
		add    %ecx,%edi
		add    %cx,%dx
		dec    %bx
		jmp    jump_5f453
	jump_5f491:
		lods   %ds:(%esi),%eax
		movzwl %ax,%ecx
		add    %ecx,%edi
		shr    $0x10,%eax
	jump_5f49a:
		mov    $0x0,%ecx
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		dec    %bx
		jne    jump_5f491
		pop    %edi
		pop    %esi
		leave
		ret


/*----------------------------------------------------------------*/
func_5f4af:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %esi
		push   %edi
		cmp    $0x0,%cx
		je     jump_5f513
		call   func_5eb00
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    %cx,-0x2(%ebp)
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		mov    $0x0,%edx
		cld
	jump_5f4d5:
		lods   %ds:(%esi),%eax
		movzwl %ax,%ecx
		add    %ecx,%edi
		add    %ecx,%edx
		shr    $0x10,%eax
		cmp    data_755da,%edx
		jl     jump_5f4f4
		sub    data_755da,%edx
		decw   -0x2(%ebp)
		je     jump_5f513
	jump_5f4f4:
		mov    $0x0,%ecx
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		shl    $0x2,%cx
		add    %cx,%dx
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		add    %cx,%dx
		dec    %bx
		jne    jump_5f4d5
	jump_5f513:
		pop    %edi
		pop    %esi
		leave
		ret


/*----------------------------------------------------------------*/
func_5f517:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    %cl,%al
		mov    %cl,%ah
		push   %ax
		shl    $0x10,%eax
		pop    %ax
		mov    %eax,-0x4(%ebp)
		mov    (%esi),%bx
		inc    %esi
		inc    %esi
		cld
		mov    $0x0,%ecx
	jump_5f544:
		lods   %ds:(%esi),%eax
		movzwl %ax,%edx
		add    %edx,%edi
		shr    $0x10,%eax
		mov    %ax,%dx
		mov    -0x4(%ebp),%eax
		mov    %dl,%cl
		add    %ecx,%esi
		add    %ecx,%esi
		add    %ecx,%esi
		add    %ecx,%esi
		rep stos %eax,%es:(%edi)
		mov    %dh,%cl
		add    %ecx,%esi
		rep stos %al,%es:(%edi)
		dec    %bx
		jne    jump_5f544
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret


/*----------------------------------------------------------------*/
func_5f570:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff0,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%esi
		mov    $0x0,%edi
		mov    (%ebx),%si
		mov    0x2(%ebx),%di
		mov    %esi,-0xc(%ebp)
		mov    %edi,-0x10(%ebp)
		push   %eax
		mov    -0xc(%ebp),%eax
		mov    $0x186a0,%edx
		mul    %edx
		div    %ecx
		mov    %eax,-0x4(%ebp)
		mov    -0x10(%ebp),%eax
		mov    $0x186a0,%edx
		mul    %edx
		movzwl 0x8(%ebp),%ecx
		div    %ecx
		mov    %eax,-0x8(%ebp)
		pop    %eax
		add    $0x4,%ebx
		mov    $0xfffe7960,%edi
	jump_5f5c3:
		mov    -0xc(%ebp),%ecx
		mov    $0xfffe7960,%esi
		push   %ebx
		push   %eax
	jump_5f5cd:
		mov    (%ebx),%dl
		cmp    $0xff,%dl
		je     jump_5f5d6
		mov    %dl,(%eax)
	jump_5f5d6:
		inc    %eax
		add    -0x4(%ebp),%esi
		js     jump_5f5cd
		inc    %ebx
		sub    -0x4(%ebp),%esi
		sub    $0x186a0,%esi
		dec    %cx
		jne    jump_5f5cd
		pop    %eax
		add    data_755da,%eax
		pop    %ebx
		add    -0x8(%ebp),%edi
		js     jump_5f5c3
		sub    -0x8(%ebp),%edi
		sub    $0x186a0,%edi
		add    -0xc(%ebp),%ebx
		decl   -0x10(%ebp)
		jne    jump_5f5c3
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_5f611:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff0,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%esi
		mov    $0x0,%edi
		mov    (%ebx),%si
		mov    0x2(%ebx),%di
		mov    %esi,-0xc(%ebp)
		mov    %edi,-0x10(%ebp)
		push   %eax
		mov    -0xc(%ebp),%eax
		mov    $0x186a0,%edx
		mul    %edx
		div    %ecx
		mov    %eax,-0x4(%ebp)
		mov    -0x10(%ebp),%eax
		mov    $0x186a0,%edx
		mul    %edx
		movzwl 0x8(%ebp),%ecx
		div    %ecx
		mov    %eax,-0x8(%ebp)
		pop    %eax
		add    $0x4,%ebx
		mov    -0x8(%ebp),%edi
	jump_5f662:
		sub    $0x186a0,%edi
		jns    jump_5f672
		add    -0xc(%ebp),%ebx
		add    -0x8(%ebp),%edi
		jmp    jump_5f69c
	jump_5f672:
		mov    -0xc(%ebp),%ecx
		mov    -0x4(%ebp),%esi
		push   %eax
	jump_5f679:
		sub    $0x186a0,%esi
		jns    jump_5f686
		add    -0x4(%ebp),%esi
		jmp    jump_5f690
	jump_5f686:
		mov    (%ebx),%dl
		cmp    $0xff,%dl
		je     jump_5f68f
		mov    %dl,(%eax)
	jump_5f68f:
		inc    %eax
	jump_5f690:
		inc    %ebx
		dec    %cx
		jne    jump_5f679
		pop    %eax
		add    data_755da,%eax
	jump_5f69c:
		decl   -0x10(%ebp)
		jne    jump_5f662
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_5f6aa:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff8,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%edx
		mov    (%ebx),%dx
		inc    %dx
		mov    %edx,-0x4(%ebp)
		mov    0x2(%ebx),%dx
		inc    %dx
		mov    %dx,-0x6(%ebp)
		add    $0x4,%ebx
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    %cl,%bl
		mov    0x8(%ebp),%bh
	jump_5f6dd:
		mov    -0x4(%ebp),%ecx
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_5f6e4:
		test   $0x80,%dh
		je     jump_5f6f2
		cmp    $0xff,%bl
		je     jump_5f6f9
		mov    %bl,(%edi)
		jmp    jump_5f6f9
	jump_5f6f2:
		cmp    $0xff,%bh
		je     jump_5f6f9
		mov    %bh,(%edi)
	jump_5f6f9:
		shl    %dx
		cmp    $0x100,%dx
		jne    jump_5f708
		inc    %esi
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_5f708:
		inc    %edi
		loop   jump_5f6e4
		cmp    $0x1,%dl
		je     jump_5f711
		inc    %esi
	jump_5f711:
		add    data_755da,%eax
		mov    %eax,%edi
		decw   -0x6(%ebp)
		jne    jump_5f6dd
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_5f728:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xffffffec,%esp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   func_5eb00
		mov    $0x0,%edx
		mov    (%ebx),%dx
		inc    %dx
		mov    %edx,-0x4(%ebp)
		mov    0x2(%ebx),%dx
		inc    %dx
		mov    %dx,-0x6(%ebp)
		add    $0x4,%ebx
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    -0x4(%ebp),%ebx
		mov    data_755da,%eax
		sub    %ebx,%eax
		mov    %eax,-0x14(%ebp)
		mov    $0xff,%bl
		cmp    $0xff,%cl
		je     jump_5f779
		mov    data_128554,%eax
		shl    $0x8,%ecx
		add    %ecx,%eax
		mov    %eax,-0xc(%ebp)
		mov    $0x0,%bl
	jump_5f779:
		mov    $0xff,%bh
		mov    $0x0,%ecx
		mov    0x8(%ebp),%cl
		cmp    $0xff,%cl
		je     jump_5f797
		mov    data_128554,%eax
		shl    $0x8,%ecx
		add    %ecx,%eax
		mov    %eax,-0x10(%ebp)
		mov    $0x0,%bh
	jump_5f797:
		mov    -0x4(%ebp),%ecx
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_5f79e:
		test   $0x80,%dh
		je     jump_5f7b8
		cmp    $0xff,%bl
		je     jump_5f7cb
		mov    $0x0,%eax
		mov    (%edi),%al
		add    -0xc(%ebp),%eax
		mov    (%eax),%al
		mov    %al,(%edi)
		jmp    jump_5f7cb
	jump_5f7b8:
		cmp    $0xff,%bh
		je     jump_5f7cb
		mov    $0x0,%eax
		mov    (%edi),%al
		add    -0x10(%ebp),%eax
		mov    (%eax),%al
		mov    %al,(%edi)
	jump_5f7cb:
		shl    %dx
		cmp    $0x100,%dx
		jne    jump_5f7da
		inc    %esi
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_5f7da:
		inc    %edi
		loop   jump_5f79e
		cmp    $0x1,%dl
		je     jump_5f7e3
		inc    %esi
	jump_5f7e3:
		add    -0x14(%ebp),%edi
		decw   -0x6(%ebp)
		jne    jump_5f797
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_5f7f5:
/*----------------------------------------------------------------*/
		mov    $0x2ee00,%eax
		call   w_dos_malloc
		mov    %eax,data_755cc


/*----------------------------------------------------------------*/
func_5f804:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $0xbb80,%edx
		mov    $0x1e0,%ebx
		mov    data_755cc,%eax
		mov    %edx,data_755d6
		mov    %ebx,data_755da
		mov    %eax,data_755d0
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5f839:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x140,%ebx
		xor    %edx,%edx
		mov    EXTERN(video_buffer),%ecx
		mov    %edx,data_755d6
		mov    %ebx,data_755da
		mov    %ecx,data_755d0
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5f85e:
/*----------------------------------------------------------------*/
		mov    data_755d6,%al
		mov    %al,data_128562
		ret


/*----------------------------------------------------------------*/
func_5f869:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_128562
		je     func_5f839
		jmp    func_5f804


/*----------------------------------------------------------------*/
func_5f874:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x13,%eax
		call   func_5e940
		push   $0x200
		push   $data_78804
		call   w_dos_open
		add    $0x8,%esp
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     jump_5f914
		mov    $0x80,%edx
		xor    %ebx,%ebx
		call   w_dos_lseek
		xor    %ecx,%ecx
	jump_5f8a9:
		mov    $0x20,%eax
		mov    $0x1,%ebx
		mov    $0x8,%edx
		call   w_dos_malloc
		mov    %eax,data_127d4c(%ecx)
		mov    %esi,%eax
		call   w_dos_lseek
		mov    $0x1d,%ebx
		mov    %esi,%eax
		mov    data_127d4c(%ecx),%edx
		add    $0x4,%ecx
		call   w_dos_read
		cmp    $0x190,%ecx
		jne    jump_5f8a9
		mov    %esi,%eax
		call   w_dos_close
		xor    %eax,%eax
		call   func_5eb2f
		xor    %eax,%eax
		mov    $data_12824c,%ebx
		call   func_5ecc7
		xor    %eax,%eax
		mov    $0x100,%edx
		call   func_61011
		xor    %eax,%eax
		call   func_5f945
	jump_5f914:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_5f945:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		call   func_5e943
		mov    $0x3c7,%edx
		mov    %cl,%al
#if 1
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
		mov    $0x3c9,%edx
		jmp    jump_5f97d
	jump_5f962:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		sub    %eax,%eax
#if 1
    call   w_video_get_palette

    movb   EXTERN(palette_index),%al
    inc    %al
    movb   %al,EXTERN(palette_index)

    movb   EXTERN(palette_r),%al
#else
		in     (%dx),%al
#endif
		inc    %ecx
		mov    %al,(%esi,%ebx,1)
		sub    %eax,%eax
#if 1
    movb   EXTERN(palette_g),%al
#else
		in     (%dx),%al
#endif
		mov    %al,0x1(%esi,%ebx,1)
		sub    %eax,%eax
#if 1
    movb   EXTERN(palette_b),%al
#else
		in     (%dx),%al
#endif
		mov    %al,0x2(%esi,%ebx,1)
	jump_5f97d:
		cmp    %di,%cx
		jl     jump_5f962
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5f986:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %al,%dl
		call   func_5e943
		mov    %dl,%al
		mov    $0x3c8,%edx
		out    %al,(%dx)
		mov    0x8(%esp),%al
		mov    $0x3c9,%edx
		out    %al,(%dx)
		mov    0x9(%esp),%al
		out    %al,(%dx)
		mov    0xa(%esp),%al
		out    %al,(%dx)
		pop    %edx
		ret    $0x4


/*----------------------------------------------------------------*/
func_5f9ae:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		call   func_5e943
		mov    $0x3c8,%edx
		mov    %cl,%al
#if 1
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
		mov    $0x3c9,%edx
		jmp    jump_5f9e0
	jump_5f9cb:
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    (%esi,%ebx,1),%al
#if 1
    movb   %al,EXTERN(palette_r)
#else
		out    %al,(%dx)
#endif
		mov    0x1(%esi,%ebx,1),%al
#if 1
    movb   %al,EXTERN(palette_g)
#else
		out    %al,(%dx)
#endif
		mov    0x2(%esi,%ebx,1),%al
		inc    %ecx
#if 1
    movb   %al,EXTERN(palette_b)

    call   w_video_set_palette

    movb   EXTERN(palette_index),%al
    inc    %al
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
	jump_5f9e0:
		cmp    %di,%cx
		jl     jump_5f9cb
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_5f9e9:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%esi
		call   func_5e943
		mov    (%esp),%al
		mov    $0x3c8,%edx
		mov    (%esp),%ecx
		out    %al,(%dx)
		mov    $0x3c9,%edx
		jmp    jump_5fa20
	jump_5fa0b:
		movswl %si,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    (%ebx,%ebp,1),%al
		out    %al,(%dx)
		mov    0x1(%ebx,%ebp,1),%al
		out    %al,(%dx)
		mov    0x2(%ebx,%ebp,1),%al
		inc    %ecx
		out    %al,(%dx)
	jump_5fa20:
		cmp    %di,%cx
		jl     jump_5fa0b
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_5fa2c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		mov    %ebx,%edi
		mov    %cx,0x8(%esp)
		mov    0x4(%esp),%al
		mov    $0x3c8,%edx
		mov    0x4(%esp),%ecx
		mov    $0x64,%ebp
#if 1
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
		call   func_5e943
		jmp    jump_5faa4
	jump_5fa55:
		movswl %cx,%eax
		mov    0x6(%esp),%esi
		lea    (%eax,%eax,2),%eax
		xor    %edx,%edx
		lea    (%edi,%eax,1),%ebx
		sar    $0x10,%esi
		mov    (%ebx),%dl
		imul   %esi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x3c9,%edx
#if 1
    movb   %al,EXTERN(palette_r)
#else
		out    %al,(%dx)
#endif
		xor    %edx,%edx
		mov    0x1(%ebx),%dl
		imul   %esi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x3c9,%edx
#if 1
    movb   %al,EXTERN(palette_g)
#else
		out    %al,(%dx)
#endif
		xor    %edx,%edx
		mov    0x2(%ebx),%dl
		imul   %esi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x3c9,%edx
		inc    %ecx
#if 1
    movb   %al,EXTERN(palette_b)

    call   w_video_set_palette

    movb   EXTERN(palette_index),%al
    inc    %al
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
	jump_5faa4:
		cmp    (%esp),%cx
		jl     jump_5fa55
		mov    0x8(%esp),%al
		mov    %al,data_755e8
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_5fc21:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %eax,%ebx
		jmp    jump_5fc50
	jump_5fc2e:
		movswl %bx,%edx
		lea    (%edx,%edx,2),%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%edx,%edi,1),%cl
		sub    %cl,(%eax)
		mov    0x1(%edx,%edi,1),%cl
		sub    %cl,0x1(%eax)
		mov    0x2(%edx,%edi,1),%dl
		mov    0x2(%eax),%dh
		sub    %dl,%dh
		inc    %ebx
		mov    %dh,0x2(%eax)
	jump_5fc50:
		cmp    %si,%bx
		jl     jump_5fc2e
		pop    %ebp
		pop    %edi
		pop    %esi
		ret
	jump_5fcd6:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_5fd1c:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    0xc(%esp),%al
		mov    $0x3c8,%edx
#if 1
    movb   %al,EXTERN(palette_index)
#else
		out    %al,(%dx)
#endif
		cmpw   $0x64,0x24(%esp)
		jle    jump_5fd3f
		movw   $0x64,0x24(%esp)
	jump_5fd3f:
		call   func_5e943
		mov    0xc(%esp),%esi
		jmp    jump_5fdd0
	jump_5fd4d:
		mov    (%esp),%ecx
		movswl %si,%ebx
		mov    0x4(%esp),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    0x22(%esp),%edi
		add    %ebx,%ecx
		sar    $0x10,%edi
		add    %edx,%ebx
		movsbl (%ecx),%edx
		imul   %edi,%edx
		movl   $0x64,0x10(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x10(%esp)
		movzbl (%ebx),%ebp
		mov    $0x3c9,%edx
		add    %ebp,%eax
#if 1
    movb   %al,EXTERN(palette_r)
#else
		out    %al,(%dx)
#endif
		movsbl 0x1(%ecx),%edx
		imul   %edi,%edx
		movl   $0x64,0x10(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x10(%esp)
		movzbl 0x1(%ebx),%ebp
		mov    $0x3c9,%edx
		add    %ebp,%eax
#if 1
    movb   %al,EXTERN(palette_g)
#else
		out    %al,(%dx)
#endif
		mov    0x2(%ebx),%bl
		movsbl 0x2(%ecx),%edx
		imul   %edi,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		and    $0xff,%ebx
		mov    $0x3c9,%edx
		add    %ebx,%eax
		inc    %esi
#if 1
    movb   %al,EXTERN(palette_b)

    call   w_video_set_palette

    push   %eax
    movb   EXTERN(palette_index),%al
    inc    %al
    movb   %al,EXTERN(palette_index)
    pop    %eax
#else
		out    %al,(%dx)
#endif
	jump_5fdd0:
		cmp    0x8(%esp),%si
		jl     jump_5fd4d
		add    $0x14,%esp
		jmp    jump_5fcd6


/*----------------------------------------------------------------*/
func_5ffb5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %al,%bl
		mov    %dl,%bh
		mov    %al,%cl
		add    %dl,%cl
		test   %dl,%dl
		jle    jump_5ffe2
		xor    %edx,%edx
		mov    data_128568,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %bl,data_1281dc(%eax)
		mov    %cl,data_1281dd(%eax)
		jmp    jump_5fffd
	jump_5ffe2:
		xor    %edx,%edx
		mov    data_128568,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %cl,data_1281dc(%eax)
		mov    %bl,data_1281dd(%eax)
	jump_5fffd:
		movzbl data_128568,%esi
		mov    %esi,%edx
		shl    $0x2,%edx
		sub    %esi,%edx
		mov    data_1281d9(%edx),%ecx
		mov    %bh,data_1281de(%edx)
		sar    $0x18,%ecx
		mov    %esi,%ebx
		mov    data_1281da(%edx),%edx
		mov    %ecx,%edi
		shl    $0x2,%ebx
		sar    $0x18,%edx
		sub    %esi,%ebx
		shl    $0x2,%edi
		shl    $0x4,%ebx
		sub    %ecx,%edi
		add    $data_127a4c,%ebx
		mov    %ecx,%eax
		sub    %edi,%ebx
		call   func_5f945
		incb   data_128568
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_6004e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ecx,%ecx
		jmp    jump_60096
	jump_60055:
		xor    %eax,%eax
		mov    data_128568,%al
		lea    (%eax,%eax,2),%eax
		mov    data_1281d9(%eax),%ebx
		movswl %cx,%eax
		imul   $0x30,%eax,%edx
		sar    $0x18,%ebx
		lea    (%ebx,%ebx,2),%ebx
		add    $data_127a4c,%edx
		sub    %ebx,%edx
		lea    (%eax,%eax,2),%eax
		mov    %edx,%ebx
		mov    data_1281da(%eax),%edx
		mov    data_1281d9(%eax),%eax
		sar    $0x18,%edx
		sar    $0x18,%eax
		inc    %ecx
		call   func_5f945
	jump_60096:
		xor    %eax,%eax
		mov    data_128568,%al
		cmp    %ax,%cx
		jl     jump_60055
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_600d4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		xor    %ecx,%ecx
	jump_600de:
		movswl %cx,%eax
		lea    (%eax,%eax,2),%esi
		mov    data_1281de(%esi),%dl
		test   %dl,%dl
		je     jump_601dc
		imul   $0x30,%eax,%eax
		test   %dl,%dl
		jle    jump_6014e
		movsbw %dl,%dx
		dec    %edx
		movswl %dx,%ebx
		lea    (%ebx,%ebx,2),%ebx
		lea    0x4(%esp),%edi
		lea    data_127a4c(%ebx,%eax,1),%esi
		mov    %edx,%eax
		jmp    jump_60134
	jump_60113:
		movswl %cx,%esi
		imul   $0x30,%esi,%esi
		movswl %ax,%ebx
		lea    -0x1(%ebx),%edx
		lea    (%ebx,%ebx,2),%ebx
		lea    (%edx,%edx,2),%edx
		lea    data_127a4c(%esi,%ebx,1),%edi
		lea    data_127a4c(%edx,%esi,1),%esi
		dec    %eax
	jump_60134:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %ax,%ax
		jg     jump_60113
		movswl %cx,%esi
		imul   $0x30,%esi,%esi
		lea    data_127a4c(%esi),%edi
		lea    0x4(%esp),%esi
		jmp    jump_601a8
	jump_6014e:
		mov    %esp,%edi
		movsbw %dl,%dx
		lea    data_127a4c(%eax),%esi
		neg    %edx
		mov    $0x1,%eax
		dec    %edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %edx,0x8(%esp)
		jmp    jump_6018d
	jump_6016b:
		movswl %cx,%edx
		imul   $0x30,%edx,%edx
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%esi
		dec    %ebx
		lea    (%ebx,%ebx,2),%ebx
		lea    data_127a4c(%edx,%ebx,1),%edi
		lea    data_127a4c(%edx,%esi,1),%esi
		inc    %eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
	jump_6018d:
		cmp    0x8(%esp),%ax
		jle    jump_6016b
		movswl %cx,%esi
		imul   $0x30,%esi,%esi
		cwtl
		dec    %eax
		lea    (%eax,%eax,2),%eax
		lea    data_127a4c(%esi,%eax,1),%edi
		mov    %esp,%esi
	jump_601a8:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movswl %cx,%ebx
		lea    (%ebx,%ebx,2),%edx
		imul   $0x30,%ebx,%ebx
		mov    data_1281d9(%edx),%eax
		sar    $0x18,%eax
		mov    data_1281da(%edx),%edx
		lea    (%eax,%eax,2),%esi
		add    $data_127a4c,%ebx
		sar    $0x18,%edx
		sub    %esi,%ebx
		inc    %ecx
		call   func_5f9ae
		jmp    jump_600de
	jump_601dc:
		add    $0xc,%esp
	jump_601df:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_601e5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %dl,%bl
		mov    %al,%ah
		add    %dl,%ah
		test   %dl,%dl
		jle    jump_6020a
		xor    %edx,%edx
		mov    data_128564,%dl
		mov    %al,data_12820c(,%edx,4)
		mov    %ah,data_12820d(,%edx,4)
		jmp    jump_60220
	jump_6020a:
		xor    %edx,%edx
		mov    data_128564,%dl
		mov    %ah,data_12820c(,%edx,4)
		mov    %al,data_12820d(,%edx,4)
	jump_60220:
		movzbl data_128564,%esi
		mov    %bl,data_12820f(,%esi,4)
		mov    %esi,%edx
		mov    data_128209(,%esi,4),%ecx
		mov    %bl,data_12820e(,%esi,4)
		shl    $0x2,%edx
		sar    $0x18,%ecx
		sub    %esi,%edx
		mov    %ecx,%ebx
		shl    $0x4,%edx
		shl    $0x2,%ebx
		add    $data_127edc,%edx
		sub    %ecx,%ebx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    data_12820a(,%esi,4),%edx
		mov    %ecx,%eax
		sar    $0x18,%edx
		call   func_5f945
		incb   data_128564
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_60275:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		jmp    jump_602ae
	jump_6027e:
		movswl %cx,%edx
		mov    %edx,%eax
		mov    data_128209(,%edx,4),%esi
		imul   $0x30,%edx,%edx
		sar    $0x18,%esi
		mov    $data_127edc,%ebx
		lea    (%esi,%esi,2),%edi
		add    %edx,%ebx
		mov    data_12820a(,%eax,4),%edx
		sub    %edi,%ebx
		sar    $0x18,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_5f945
	jump_602ae:
		xor    %eax,%eax
		mov    data_128564,%al
		cmp    %ax,%cx
		jl     jump_6027e
		jmp    jump_601df


/*----------------------------------------------------------------*/
func_602bf:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_128564,%ah
		test   %ah,%ah
		jbe    jump_602e1
		mov    %ah,%dl
		dec    %dl
		xor    %eax,%eax
		mov    %dl,%al
		mov    %dl,data_128564
		xor    %dh,%dh
		mov    %dh,data_12820e(,%eax,4)
	jump_602e1:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_602e3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x18,%esp
		xor    %ecx,%ecx
	jump_602ed:
		movswl %cx,%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		mov    data_12820e(%esi),%dl
		test   %dl,%dl
		je     jump_60533
		imul   $0x30,%eax,%eax
		test   %dl,%dl
		jle    jump_6041b
		movsbw %dl,%dx
		dec    %edx
		mov    data_12820f(%esi),%bh
		mov    %dx,0x14(%esp)
		test   %bh,%bh
		jle    jump_603a1
		mov    0x12(%esp),%edx
		sar    $0x10,%edx
		lea    (%edx,%edx,2),%edx
		lea    0x8(%esp),%edi
		lea    data_127edc(%edx,%eax,1),%esi
		mov    0x14(%esp),%eax
		jmp    jump_60362
	jump_60341:
		movswl %cx,%edx
		imul   $0x30,%edx,%edx
		movswl %ax,%esi
		lea    -0x1(%esi),%ebx
		lea    (%esi,%esi,2),%esi
		lea    (%ebx,%ebx,2),%ebx
		lea    data_127edc(%edx,%esi,1),%edi
		lea    data_127edc(%edx,%ebx,1),%esi
		dec    %eax
	jump_60362:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %ax,%ax
		jg     jump_60341
		movswl %cx,%edx
		imul   $0x30,%edx,%esi
		lea    data_127edc(%esi),%edi
		lea    0x8(%esp),%esi
	jump_6037a:
		shl    $0x2,%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    data_12820f(%edx),%bl
		dec    %bl
		mov    %bl,data_12820f(%edx)
		jne    jump_604fd
		mov    data_12820e(%edx),%al
		neg    %al
		jmp    jump_604f7
	jump_603a1:
		lea    0xc(%esp),%edi
		lea    data_127edc(%eax),%esi
		mov    $0x1,%eax
		jmp    jump_603d1
	jump_603b2:
		movswl %cx,%edx
		imul   $0x30,%edx,%edx
		movswl %ax,%esi
		lea    (%esi,%esi,2),%ebx
		dec    %esi
		lea    (%esi,%esi,2),%esi
		lea    data_127edc(%edx,%esi,1),%edi
		lea    data_127edc(%edx,%ebx,1),%esi
		inc    %eax
	jump_603d1:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    0x14(%esp),%ax
		jle    jump_603b2
		movswl %cx,%edx
		imul   $0x30,%edx,%eax
		mov    0x12(%esp),%esi
		sar    $0x10,%esi
		lea    (%esi,%esi,2),%esi
		lea    data_127edc(%esi,%eax,1),%edi
		lea    0xc(%esp),%esi
		shl    $0x2,%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    data_12820f(%edx),%al
		inc    %al
		mov    %al,data_12820f(%edx)
		jne    jump_604fd
		mov    data_12820e(%edx),%al
		jmp    jump_604f7
	jump_6041b:
		movsbw %dl,%dx
		neg    %edx
		dec    %edx
		mov    data_12820f(%esi),%bl
		mov    %dx,0x10(%esp)
		test   %bl,%bl
		jle    jump_60487
		mov    %esp,%edi
		lea    data_127edc(%eax),%esi
		mov    $0x1,%eax
		jmp    jump_6045f
	jump_60440:
		movswl %cx,%esi
		imul   $0x30,%esi,%esi
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		dec    %edx
		lea    (%edx,%edx,2),%edx
		lea    data_127edc(%edx,%esi,1),%edi
		lea    data_127edc(%esi,%ebx,1),%esi
		inc    %eax
	jump_6045f:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    0x10(%esp),%ax
		jle    jump_60440
		movswl %cx,%edx
		imul   $0x30,%edx,%esi
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		lea    (%eax,%eax,2),%eax
		lea    data_127edc(%esi,%eax,1),%edi
		mov    %esp,%esi
		jmp    jump_6037a
	jump_60487:
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		lea    (%edx,%edx,2),%edx
		lea    0x4(%esp),%edi
		lea    data_127edc(%edx,%eax,1),%esi
		mov    0x10(%esp),%eax
		jmp    jump_604c3
	jump_604a2:
		movswl %cx,%esi
		imul   $0x30,%esi,%esi
		movswl %ax,%edx
		lea    -0x1(%edx),%ebx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		lea    data_127edc(%edx,%esi,1),%edi
		lea    data_127edc(%esi,%ebx,1),%esi
		dec    %eax
	jump_604c3:
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		test   %ax,%ax
		jg     jump_604a2
		movswl %cx,%edx
		imul   $0x30,%edx,%esi
		lea    data_127edc(%esi),%edi
		lea    0x4(%esp),%esi
		shl    $0x2,%edx
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    data_12820f(%edx),%al
		inc    %al
		mov    %al,data_12820f(%edx)
		jne    jump_604fd
		mov    data_12820e(%edx),%al
	jump_604f7:
		mov    %al,data_12820f(%edx)
	jump_604fd:
		movswl %cx,%edx
		mov    %edx,%eax
		mov    data_128209(,%edx,4),%esi
		imul   $0x30,%edx,%edx
		sar    $0x18,%esi
		lea    (%esi,%esi,2),%ebx
		add    $data_127edc,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    data_12820a(,%eax,4),%edx
		sar    $0x18,%edx
		mov    %esi,%eax
		inc    %ecx
		call   func_5f9ae
		jmp    jump_602ed
	jump_60533:
		add    $0x18,%esp
		jmp    jump_601df


/*----------------------------------------------------------------*/
func_6053b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   $0x200
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    $0x300,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		pop    %ecx
		pop    %ebx
		ret
	jump_60752:
		add    $0x30,%esp
		jmp    jump_5fcd6


/*----------------------------------------------------------------*/
func_6075a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		push   %eax
		push   %edx
		mov    0x3e(%esp),%eax
		sar    $0x10,%eax
		call   func_5eb4a
		movswl %bx,%eax
		imul   %eax,%eax
		mov    %eax,0x10(%esp)
		add    %eax,%eax
		movswl %cx,%edi
		mov    %eax,0x1c(%esp)
		mov    %edi,%eax
		imul   %edi,%eax
		mov    %eax,0xc(%esp)
		add    %eax,%eax
		mov    %eax,0x18(%esp)
		mov    0x10(%esp),%eax
		imul   %edi,%eax
		mov    0xc(%esp),%esi
		sub    %eax,%esi
		mov    0x10(%esp),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		shl    $0x2,%edx
		sbb    %edx,%eax
		sar    $0x2,%eax
		add    %eax,%esi
		mov    0x1c(%esp),%eax
		imul   %edi,%eax
		xor    %ebp,%ebp
		mov    %ebp,0x28(%esp)
		mov    %eax,0x2c(%esp)
	jump_607c1:
		mov    0x28(%esp),%eax
		mov    0x2c(%esp),%ebx
		cmp    %ebx,%eax
		jge    jump_60838
		mov    -0x2(%esp),%edx
		mov    0x2(%esp),%ecx
		sar    $0x10,%edx
		sar    $0x10,%ecx
		lea    (%edx,%edi,1),%ebx
		lea    (%ecx,%ebp,1),%eax
		mov    %ebx,0x14(%esp)
		sub    %ebp,%ecx
		sub    %edi,%edx
		test   %esi,%esi
		jle    jump_6081f
		sub    %ecx,%eax
		cwtl
		mov    %eax,0x8(%esp)
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   *data_755e2
		mov    0x8(%esp),%ebx
		mov    0x14(%esp),%edx
		mov    %ecx,%eax
		call   *data_755e2
		mov    0x1c(%esp),%eax
		mov    0x2c(%esp),%edx
		sub    %eax,%edx
		dec    %edi
		mov    %edx,0x2c(%esp)
		sub    %edx,%esi
	jump_6081f:
		mov    0x18(%esp),%eax
		mov    0x28(%esp),%ecx
		add    %eax,%ecx
		mov    0xc(%esp),%eax
		inc    %ebp
		add    %ecx,%eax
		mov    %ecx,0x28(%esp)
		add    %eax,%esi
		jmp    jump_607c1
	jump_60838:
		mov    0x10(%esp),%edx
		mov    0xc(%esp),%ecx
		sub    %ecx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x28(%esp),%edx
		add    %ebx,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		add    %ecx,%esi
	jump_60867:
		test   %edi,%edi
		jl     jump_60752
		mov    0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    -0x2(%esp),%edx
		lea    (%ecx,%ebp,1),%eax
		sar    $0x10,%edx
		sub    %ebp,%ecx
		lea    (%edx,%edi,1),%ebx
		sub    %ecx,%eax
		mov    %ebx,0x20(%esp)
		cwtl
		sub    %edi,%edx
		mov    %eax,0x24(%esp)
		mov    %eax,%ebx
		mov    %ecx,%eax
		mov    %edx,0x8(%esp)
		call   *data_755e2
		mov    0x20(%esp),%eax
		cmp    0x8(%esp),%eax
		je     jump_608b8
		mov    0x24(%esp),%ebx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   *data_755e2
	jump_608b8:
		test   %esi,%esi
		jge    jump_608cd
		mov    0x18(%esp),%eax
		mov    0x28(%esp),%ecx
		add    %eax,%ecx
		inc    %ebp
		mov    %ecx,0x28(%esp)
		add    %ecx,%esi
	jump_608cd:
		mov    0x1c(%esp),%eax
		mov    0x2c(%esp),%edx
		sub    %eax,%edx
		mov    0x10(%esp),%eax
		dec    %edi
		sub    %edx,%eax
		mov    %edx,0x2c(%esp)
		add    %eax,%esi
		jmp    jump_60867


/*----------------------------------------------------------------*/
func_608e6:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %cx,(%esp)
	jump_608f6:
		mov    (%esi),%ah
		test   %ah,%ah
		je     jump_6093c
		mov    %ah,%al
		cmp    $0x61,%ah
		jl     jump_6090e
		cmp    $0x7a,%ah
		jg     jump_6090c
		sub    $0x20,%al
		jmp    jump_6090e
	jump_6090c:
		sub    $0x1a,%al
	jump_6090e:
		dec    %al
		test   %al,%al
		jle    jump_6092d
		movsbl %al,%ebx
		xor    %ecx,%ecx
		mov    %ebp,%edx
		mov    0x14(%esp),%cl
		mov    %edi,%eax
		mov    data_127d4c(,%ebx,4),%ebx
		call   func_5f093
	jump_6092d:
		mov    -0x2(%esp),%ebx
		add    $0x5,%edi
		sar    $0x10,%ebx
		inc    %esi
		add    %ebx,%edi
		jmp    jump_608f6
	jump_6093c:
		add    $0x4,%esp
		jmp    jump_5fcd6


/*----------------------------------------------------------------*/
func_60944:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x58,%esp
		lea    0x7c(%esp),%eax
		lea    0x54(%esp),%ebx
		mov    0x78(%esp),%edx
		mov    %eax,0x54(%esp)
		mov    %esp,%eax
		mov    0x6e(%esp),%ecx
		call   w_dos_vsprintf
		xor    %eax,%eax
		sar    $0x10,%ecx
		mov    0x74(%esp),%al
		mov    %esp,%ebx
		push   %eax
		mov    0x70(%esp),%edx
		mov    0x6c(%esp),%eax
		call   func_608e6
		xor    %edx,%edx
		mov    %edx,0x54(%esp)
		add    $0x58,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_6098b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x64,%edx
		mov    data_128558,%bx
		cwtl
		sub    %ebx,%edx
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    data_12824c(%ebx),%al
		movswl %dx,%ecx
		mov    %eax,%edx
		imul   %ecx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   %ecx,%edx
		mov    %al,data_128563
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   %ecx,%edx
		mov    %al,data_128566
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %al,data_128565
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_609f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		movswl %ax,%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		mov    data_128556,%ecx
		sub    %edx,%ebx
		xor    %edx,%edx
		sar    $0x10,%ecx
		mov    data_12824c(%ebx),%dl
		imul   %ecx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_128563,%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   %ecx,%edx
		add    $0x9,%eax
		mov    %al,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_128566,%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   %ecx,%edx
		add    $0x9,%eax
		mov    %al,0xc(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_128565,%dl
		mov    %esi,%ebx
		add    %edx,%eax
		xor    %esi,%ebx
		add    $0x9,%eax
		mov    $0x7fff,%ecx
		mov    %al,(%esp)
	jump_60a89:
		movswl %bx,%edx
		lea    (%edx,%edx,2),%edx
		mov    data_12824c(%edx),%dl
		xor    %eax,%eax
		xor    %dh,%dh
		mov    0x8(%esp),%al
		sub    %edx,%eax
		test   %ax,%ax
		jge    jump_60aa6
		neg    %eax
	jump_60aa6:
		movswl %bx,%edx
		lea    (%edx,%edx,2),%edx
		mov    data_12824d(%edx),%dl
		movzbw 0xc(%esp),%si
		xor    %dh,%dh
		sub    %edx,%esi
		mov    %esi,%edx
		test   %si,%si
		jge    jump_60ac5
		neg    %edx
	jump_60ac5:
		add    %edx,%eax
		movswl %bx,%edx
		lea    (%edx,%edx,2),%edx
		mov    data_12824e(%edx),%dl
		movzbw (%esp),%si
		xor    %dh,%dh
		sub    %edx,%esi
		mov    %esi,%edx
		test   %si,%si
		jge    jump_60ae5
		neg    %edx
	jump_60ae5:
		add    %edx,%eax
		cmp    %cx,%ax
		jge    jump_60af2
		mov    %eax,%ecx
		mov    %bl,0x4(%esp)
	jump_60af2:
		inc    %ebx
		cmp    $0x100,%bx
		jl     jump_60a89
		mov    0x4(%esp),%al
	jump_60afe:
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_60b06:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cwtl
		mov    %eax,%ebx
		mov    data_128556,%ecx
		shl    $0x2,%ebx
		xor    %edx,%edx
		sub    %eax,%ebx
		sar    $0x10,%ecx
		mov    data_12824c(%ebx),%dl
		imul   %ecx,%edx
		mov    $0x64,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_128563,%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_12824d(%ebx),%dl
		imul   %ecx,%edx
		add    $0x9,%eax
		mov    %al,data_128577
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_128566,%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_12824e(%ebx),%dl
		imul   %ecx,%edx
		add    $0x9,%eax
		mov    %al,data_128576
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    data_128565,%dl
		xor    %esi,%ebx
		add    %edx,%eax
		mov    %bx,data_12856d
		add    $0x9,%eax
		mov    $0x7fff,%edx
		mov    %al,data_128575
		mov    %dx,data_12856f
		jmp    jump_60ca6
	jump_60ba9:
		mov    data_12856b,%eax
		sar    $0x10,%eax
		xor    %ebx,%ebx
		lea    (%eax,%eax,2),%eax
		xor    %edx,%edx
		mov    data_128577,%bl
		mov    data_12824c(%eax),%dl
		sub    %edx,%ebx
		mov    %bx,data_12856b
		mov    data_128569,%edx
		sar    $0x10,%edx
		cmp    $0x12,%edx
		ja     jump_60c9f
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    data_128576,%dl
		mov    data_12824d(%eax),%bl
		sub    %ebx,%edx
		mov    %dx,data_128569
		mov    data_128567,%edx
		sar    $0x10,%edx
		cmp    $0x12,%edx
		ja     jump_60c9f
		mov    data_128569,%dx
		mov    data_12856b,%si
		add    %edx,%esi
		mov    data_12824e(%eax),%al
		mov    %si,data_12856b
		xor    %edx,%edx
		xor    %ah,%ah
		mov    data_128575,%dl
		sub    %eax,%edx
		mov    %dx,data_128569
		mov    data_128567,%eax
		sar    $0x10,%eax
		cmp    $0x12,%eax
		ja     jump_60c9f
		mov    %esi,%edi
		add    %edx,%edi
		mov    %di,data_12856b
		cmp    $0xf,%di
		jge    jump_60c67
		mov    $0x1b,%eax
		sub    %edi,%eax
		mov    %ax,data_12856b
		jmp    jump_60c73
	jump_60c67:
		mov    %edi,%edx
		sub    $0x1b,%edx
		mov    %dx,data_12856b
	jump_60c73:
		mov    data_12856b,%ax
		cmp    data_12856f,%ax
		jge    jump_60c9f
		mov    %ax,data_12856f
		mov    data_12856d,%al
		mov    data_12856f,%si
		mov    %al,data_128571
		cmp    $0x9,%si
		jle    jump_60cb5
	jump_60c9f:
		incw   data_12856d
	jump_60ca6:
		cmpw   $0x100,data_12856d
		jl     jump_60ba9
	jump_60cb5:
		mov    data_128571,%al
		jmp    jump_601df


/*----------------------------------------------------------------*/
func_60dde:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    data_12824c(%eax),%dl
		mov    %dx,data_12855e
		xor    %edx,%edx
		mov    data_12824d(%eax),%dl
		mov    %dx,data_12855a
		mov    data_12824e(%eax),%al
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		mov    data_12855e,%bx
		mov    %ax,data_128560
		cmp    %dx,%bx
		jle    jump_60e2c
		mov    %ebx,%edx
	jump_60e2c:
		mov    data_12855a,%cx
		cmp    %cx,%dx
		jge    jump_60e3a
		mov    %ecx,%edx
	jump_60e3a:
		mov    data_128560,%si
		cmp    %si,%dx
		jge    jump_60e48
		mov    %esi,%edx
	jump_60e48:
		test   %dx,%dx
		jne    jump_60e6c
		mov    $0x64,%edi
		mov    %di,data_128560
		mov    %di,data_12855a
		mov    %di,data_12855e
		jmp    jump_601df
	jump_60e6c:
		mov    data_12855c,%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x3,%eax
		add    %eax,%ebx
		shl    $0x2,%ebx
		movswl %dx,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_128558,%edx
		sar    $0x10,%edx
		mov    %ax,data_12855e
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_12855e,%edx
		sar    $0x10,%edx
		mov    %ax,data_12855a
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		shl    $0x2,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ax,data_128560
		jmp    jump_601df


/*----------------------------------------------------------------*/
func_60ee5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_12824c(%eax),%dl
		mov    %dl,0x4(%esp)
		mov    data_12824d(%eax),%dl
		mov    %dl,(%esp)
		xor    %edx,%edx
		mov    0x4(%esp),%dl
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    data_12824e(%eax),%al
		mov    (%esp),%dl
		mov    %al,0xc(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0xc(%esp),%dl
		add    %ebx,%eax
		add    %edx,%edx
		add    %eax,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_12855c,%edx
		movswl %ax,%ebx
		sar    $0x10,%edx
		imul   %ebx,%edx
		mov    $0x64,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_128558,%edx
		sar    $0x10,%edx
		imul   %ebx,%edx
		mov    %al,0x4(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_12855e,%edx
		sar    $0x10,%edx
		imul   %ebx,%edx
		mov    %al,(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %ebx,%ebx
		mov    $0x7fff,%ecx
		mov    %al,0xc(%esp)
	jump_60f97:
		movswl %bx,%eax
		lea    (%eax,%eax,2),%eax
		xor    %edx,%edx
		mov    data_12824c(%eax),%dl
		xor    %eax,%eax
		mov    0x4(%esp),%al
		sub    %edx,%eax
		mov    %eax,%edx
		test   %ax,%ax
		jge    jump_60fb6
		neg    %edx
	jump_60fb6:
		movswl %bx,%eax
		lea    (%eax,%eax,2),%eax
		mov    data_12824d(%eax),%al
		movzbw (%esp),%si
		xor    %ah,%ah
		sub    %eax,%esi
		mov    %esi,%eax
		test   %si,%si
		jge    jump_60fd4
		neg    %eax
	jump_60fd4:
		add    %eax,%edx
		movswl %bx,%eax
		lea    (%eax,%eax,2),%eax
		movzbw data_12824e(%eax),%si
		xor    %eax,%eax
		mov    0xc(%esp),%al
		sub    %esi,%eax
		test   %ax,%ax
		jge    jump_60ff3
		neg    %eax
	jump_60ff3:
		add    %eax,%edx
		cmp    %cx,%dx
		jge    jump_61000
		mov    %edx,%ecx
		mov    %bl,0x8(%esp)
	jump_61000:
		inc    %ebx
		cmp    $0x100,%bx
		jl     jump_60f97
		mov    0x8(%esp),%al
		jmp    jump_60afe


/*----------------------------------------------------------------*/
func_61011:
/*----------------------------------------------------------------*/
		test   %ax,%ax
		jne    jump_61021
		movl   $func_609f9,data_12854c
		ret
	jump_61021:
		movl   $func_60b06,data_12854c
		ret


/*----------------------------------------------------------------*/
func_6102c:
/*----------------------------------------------------------------*/
		cwtl
		shl    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,data_128554
		mov    %eax,data_128550
		ret


/*----------------------------------------------------------------*/
func_6104a:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %ax,data_12855c
		cwtl
		mov    %eax,%edx
		mov    data_128554,%eax
		shl    $0x8,%edx
		add    %edx,%eax
		mov    %eax,data_128550
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_6106c:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %bl,%al
		mov    $0x64,%ebx
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %bx,data_128558
		call   func_6098b
		xor    %edx,%edx
	jump_6108c:
		xor    %eax,%eax
		movswl %si,%ecx
		mov    %dx,%ax
		shl    $0x8,%ecx
		call   *data_12854c
		mov    data_128554,%ebx
		add    %ecx,%ebx
		movswl %dx,%ecx
		inc    %edx
		mov    %al,(%ecx,%ebx,1)
		cmp    $0x100,%dx
		jl     jump_6108c
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_610b6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		movswl %dx,%eax
		call   func_60dde
		xor    %edx,%edx
	jump_610c6:
		movswl %dx,%ebx
		mov    %ebx,%eax
		movswl %di,%esi
		call   func_60ee5
		shl    $0x8,%esi
		mov    data_128554,%ecx
		add    %esi,%ecx
		inc    %edx
		mov    %al,(%ecx,%ebx,1)
		cmp    $0x100,%dx
		jl     jump_610c6
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_61115:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
	jump_6111b:
		movswl %bx,%edx
		shl    $0x2,%edx
		mov    data_12764c(%edx),%ecx
		test   %ecx,%ecx
		je     jump_6113a
		mov    %ecx,%eax
		xor    %esi,%esi
		call   w_dos_free
		mov    %esi,data_12764c(%edx)
	jump_6113a:
		inc    %ebx
		cmp    $0x100,%bx
		jl     jump_6111b
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_61147:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		movswl %si,%ebx
		mov    $0x64,%eax
		shl    $0x2,%ebx
		sub    %edx,%eax
		mov    data_12764c(%ebx),%edx
		mov    %ax,data_128558
		test   %edx,%edx
		jne    jump_61179
		mov    $0x100,%eax
		call   w_dos_malloc
		mov    %eax,data_12764c(%ebx)
	jump_61179:
		movswl %si,%eax
		call   func_6098b
		xor    %edx,%edx
	jump_61183:
		xor    %eax,%eax
		mov    %dx,%ax
		movswl %si,%ebx
		call   *data_12854c
		mov    data_12764c(,%ebx,4),%ebx
		movswl %dx,%ecx
		inc    %edx
		mov    %al,(%ecx,%ebx,1)
		cmp    $0x100,%dx
		jl     jump_61183
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_611aa:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%ebp
		mov    %dl,(%esp)
		mov    $0x64,%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,data_128558
		jmp    jump_61225
	jump_611c7:
		movswl %di,%eax
		movzbw (%eax,%ebp,1),%si
		mov    (%eax,%ebp,1),%al
		and    $0xff,%eax
		cmpl   $0x0,data_12764c(,%eax,4)
		jne    jump_611f5
		mov    $0x100,%eax
		movswl %si,%ecx
		call   w_dos_malloc
		mov    %eax,data_12764c(,%ecx,4)
	jump_611f5:
		movswl %si,%eax
		call   func_6098b
		xor    %edx,%edx
	jump_611ff:
		xor    %eax,%eax
		mov    %dx,%ax
		call   *data_12854c
		mov    %al,%bl
		movswl %si,%eax
		mov    data_12764c(,%eax,4),%eax
		movswl %dx,%ecx
		inc    %edx
		mov    %bl,(%ecx,%eax,1)
		cmp    $0x100,%dx
		jl     jump_611ff
		inc    %edi
	jump_61225:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    %ax,%di
		jl     jump_611c7
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
_start:	/* 0x61650 */
/*----------------------------------------------------------------*/
		jmp    jump_616ca
.data
		.ascii   "WATCOM C/C++32 Run-Time system. (c) Copyright by WATCOM International Corp. 1988-1994. All rights reserved."
		.ascii  "\x8d\x40\x00"
		.long   func____begtext
data_616c4:
		.ascii  "\x00\x00"
data_616c6:
		.ascii  "\x63\x6f\x6e\x00"
.text
	jump_616ca:
		sti
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,data_75648
		mov    %ebx,data_75634
		mov    $0x24,%ax
		mov    %ax,data_75640
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x30,%ah
		int    $0x21
		mov    %al,data_7566b
		mov    %ah,data_7566c
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x81,%edi
		shr    $0x10,%eax
		cmp    $0x4458,%ax
		jne    jump_6174c
		sub    $0x30,%bl
		mov    %bl,%al
		mov    $0x0,%ah
		push   %eax
		data16 		mov    data_75640,%es
		mov    %es:0x5c,%ebx
		add    $0xfff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,data_75634
		shr    $0xc,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x4a,%ah
		int    $0x21
		pop    %eax
		mov    %ds,%bx
		mov    $0x2c,%cx
		jmp    jump_61784
	jump_6174c:
		cmp    $0x4243,%ax
		jne    jump_61786
		mov    %edx,data_755ec
		mov    %edx,%esi
		mov    0x1c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x4a,%ah
		int    $0x21
		mov    %ds,%bx
		data16 		mov    %ds,data_75640
		mov    0x10(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x2c(%eax),%si
		shl    $0x4,%esi
		mov    %ds,%cx
		mov    $0x9,%al
		mov    $0x0,%ah
	jump_61784:
		jmp    jump_617df
	jump_61786:
		mov    $0x78,%dx
		mov    $0xff00,%ax
		int    $0x21
		cmp    $0x0,%al
		je     jump_617c8
		mov    %gs,%ax
		cmp    $0x0,%ax
		je     jump_617a3
		mov    %ax,data_755f0
	jump_617a3:
		mov    $0x6,%ax
		mov    %ds,%bx
		int    $0x31
		mov    $0x1,%al
		mov    $0x0,%ah
		or     %cx,%dx
		je     jump_617b7
		mov    $0x1,%ah
	jump_617b7:
		data16 		mov    %es,data_75640
		mov    %es:0x2c,%cx
		jmp    jump_617df
	jump_617c8:
		mov    %ds,%dx
		mov    $0x24,%cx
		mov    %ecx,%ds
		mov    $0x2c,%cx
		mov    %edx,%ds
		mov    $0x17,%bx
		mov    $0x0,%al
		mov    $0x0,%ah
	jump_617df:
		mov    %al,data_75662
		mov    %ah,data_75663
		mov    %ebx,%es
		data16 		mov    %ds,%es:data_616c4
		mov    %esi,data_75665
		mov    %cx,data_75669
		push   %esi
		data16 		mov    data_75640,%es
		ds
		mov    $data_128640,%edx
		add    $0xf,%edx
		and    $0xf0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x1(%edi),%cl
		cld
		mov    $0x20,%al
		repz scas %es:(%edi),%al
		lea    -0x1(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     jump_61834
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)
	jump_61834:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		es
		data16 		mov    data_75669,%ds
		sub    %ebp,%ebp
	jump_61846:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    jump_6185b
		cmpb   $0x3d,0x4(%esi)
		jne    jump_6185b
		inc    %ebp
	jump_6185b:
		cmpb   $0x0,(%esi)
		lods   %ds:(%esi),%al
		jne    jump_6185b
		cmpb   $0x0,(%esi)
		jne    jump_61846
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi
	jump_61869:
		cmpb   $0x0,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    jump_61869
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,data_75660
		mov    %edi,data_75644
		mov    %ebx,data_75630
		ds
		mov    $data_128640,%ecx
		ds
		mov    $data_78998,%edi
		sub    %edi,%ecx
		cmpb   $0x1,data_75662
		jne    jump_618aa
		cmp    $0x1000,%ecx
		jbe    jump_618aa
		mov    $0x1000,%ecx
	jump_618aa:
		mov    %cl,%dl
		shr    $0x2,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x3,%cl
		rep stos %al,%es:(%edi)
		ds
		mov    $data_128640,%eax
		add    $0xf,%eax
		and    $0xf0,%al
		mov    %eax,data_75638
		mov    %esi,data_7563c
		mov    $0xff,%eax
		call   func___InitRtns
		sub    %ebp,%ebp
		call   func___CMain


/*----------------------------------------------------------------*/
func___exit_:	/* 0x618e1 */
/*----------------------------------------------------------------*/
		jmp    jump_61906


/*----------------------------------------------------------------*/
func___do_exit_with_msg__:	/* 0x618e3 */
/*----------------------------------------------------------------*/
		push   %edx
		push   %eax
		mov    $data_616c6,%edx
		mov    $0x3d01,%ax
		int    $0x21
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld
	jump_618f7:
		lods   %ds:(%esi),%al
		cmp    $0x0,%al
		jne    jump_618f7
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x40,%ah
		int    $0x21
		pop    %eax
	jump_61906:
		push   %eax
		mov    $0x0,%eax
		mov    $0xff,%edx
		call   func___FiniRtns
		pop    %eax
		mov    $0x4c,%ah
		int    $0x21
		nop


/*----------------------------------------------------------------*/
func___GETDS:	/* 0x6191c */
/*----------------------------------------------------------------*/
		data16 		mov    data_616c4,%ds
		ret


/*----------------------------------------------------------------*/
func__dos_getvect_:	/* 0x61925 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    data_75662,%ah
		cmp    $0x2,%ah
		jb     jump_61942
		cmp    $0x8,%ah
		ja     jump_61942
		mov    $0x2502,%eax
		mov    %bl,%cl
		jmp    jump_6194e
	jump_61942:
		mov    %ebx,%eax
		and    $0xff,%eax
		xor    %cl,%cl
		or     $0x35,%ah
	jump_6194e:
		push   %es
		int    $0x21
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__dos_setvect_:	/* 0x61959 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %ebx,%edx
		mov    data_75662,%bl
		cmp    $0x2,%bl
		jb     jump_6197a
		cmp    $0x8,%bl
		ja     jump_6197a
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x4,%al
		mov    $0x25,%ah
		int    $0x21
		pop    %ds
		pop    %edx
		ret
	jump_6197a:
		push   %ds
		mov    %ecx,%ds
		mov    $0x25,%ah
		int    $0x21
		pop    %ds
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func__nfree_:	/* 0x61984 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		mov    %eax,%ebx
		mov    data_755f4,%ecx
		jmp    jump_6199d
	jump_61992:
		cmp    %ebx,%ecx
		ja     jump_6199a
		cmp    %edx,%ebx
		jb     jump_619a4
	jump_6199a:
		mov    0x8(%ecx),%ecx
	jump_6199d:
		mov    0x8(%ecx),%edx
		test   %edx,%edx
		jne    jump_61992
	jump_619a4:
		mov    $data_755f4,%eax
		mov    %ds,%edx
		and    $0xffff,%edx
		mov    %ebx,%eax
		mov    %ecx,%ebx
		call   func___MemFree
		cmp    data_755f8,%ecx
		je     jump_619d5
		mov    data_755fc,%ebp
		mov    0x14(%ecx),%edx
		cmp    %ebp,%edx
		jbe    jump_619d5
		mov    %edx,data_755fc
	jump_619d5:
		xor    %ah,%ah
		mov    %ah,data_128579
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_read_:	/* 0x619e2 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%ecx
		call   func___IOMode_
		mov    %eax,%edx
		mov    %eax,0xc(%esp)
		test   %eax,%eax
		jne    jump_61a11
		mov    $0x4,%eax
	jump_61a02:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_61aed
	jump_61a11:
		test   $0x1,%al
		jne    jump_61a1c
		mov    $0x6,%eax
		jmp    jump_61a02
	jump_61a1c:
		test   $0x40,%al
		je     jump_61a4a
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x3f,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,0x8(%esp)
		test   %eax,%eax
		jge    jump_61ae9
		xor    %eax,%eax
		mov    %si,%ax
	jump_61a40:
		call   func___set_errno_dos_
		jmp    jump_61aed
	jump_61a4a:
		xor    %eax,%edx
		mov    %ebx,0x4(%esp)
		mov    %edx,0x8(%esp)
	jump_61a54:
		mov    (%esp),%ebx
		mov    0x4(%esp),%ecx
		mov    %ebp,%edx
		mov    $0x3f,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%esi
		mov    %eax,0x10(%esp)
		test   %eax,%eax
		jge    jump_61a78
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    jump_61a40
	jump_61a78:
		je     jump_61ae9
		mov    0x8(%esp),%esi
		mov    %ebp,%eax
		xor    %edi,%edi
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x14(%esp)
		jmp    jump_61ac2
	jump_61a91:
		mov    (%eax),%bl
		cmp    $0x1a,%bl
		jne    jump_61ab2
		mov    0x10(%esp),%ebp
		mov    %edi,%edx
		mov    (%esp),%eax
		sub    %ebp,%edx
		mov    $0x1,%ebx
		inc    %edx
		call   w_dos_lseek
		mov    %esi,%eax
		jmp    jump_61aed
	jump_61ab2:
		cmp    $0xd,%bl
		je     jump_61ac0
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)
	jump_61ac0:
		inc    %eax
		inc    %edi
	jump_61ac2:
		cmp    0x14(%esp),%eax
		jb     jump_61a91
		mov    0x4(%esp),%ecx
		mov    0xd(%esp),%ah
		mov    %esi,0x8(%esp)
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x4(%esp)
		test   $0x20,%ah
		jne    jump_61ae9
		test   %ecx,%ecx
		jne    jump_61a54
	jump_61ae9:
		mov    0x8(%esp),%eax
	jump_61aed:
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_lseek_:	/* 0x61af5 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %ebx,%eax
		mov    %esp,%edi
		mov    %ecx,%ebx
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x2(%edi)
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_61b2d
		and    $0xffff,%eax
		call   func___set_errno_dos_
		mov    $0xffffffff,%eax
		jmp    jump_61b30
	jump_61b2d:
		mov    (%esp),%eax
	jump_61b30:
		add    $0x4,%esp
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func__nmalloc_:	/* 0x61b36 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_61b4f
		cmp    $0xffffffd4,%eax
		jbe    jump_61b56
	jump_61b4f:
		xor    %eax,%eax
		jmp    jump_61c0a
	jump_61b56:
		mov    $data_755f4,%ebp
		lea    0x3(%esi),%edi
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,(%esp)
		and    $0xfffc,%di
	jump_61b69:
		mov    %edi,%eax
		cmp    $0xc,%edi
		jae    jump_61b75
		mov    $0xc,%eax
	jump_61b75:
		cmp    data_755fc,%eax
		jbe    jump_61b95
		mov    data_755f8,%ecx
		test   %ecx,%ecx
		jne    jump_61bcd
	jump_61b87:
		mov    %ecx,data_755fc
		mov    data_755f4,%ecx
		jmp    jump_61bcd
	jump_61b95:
		xor    %ecx,%ecx
		jmp    jump_61b87
	jump_61b99:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,data_755f8
		and    $0xffff,%edx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   func___MemAllocator
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_61c00
		mov    data_755fc,%eax
		mov    0x14(%ecx),%edx
		cmp    %eax,%edx
		jbe    jump_61bca
		mov    %edx,data_755fc
	jump_61bca:
		mov    0x8(%ecx),%ecx
	jump_61bcd:
		test   %ecx,%ecx
		jne    jump_61b99
		cmpb   $0x0,(%esp)
		jne    jump_61be2
		mov    %esi,%eax
		call   func___ExpandDGROUP_
		test   %eax,%eax
		jne    jump_61bf7
	jump_61be2:
		mov    %esi,%eax
		call   func_636b0
		test   %eax,%eax
		je     jump_61c00
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    jump_61b69
	jump_61bf7:
		movb   $0x1,(%esp)
		jmp    jump_61b69
	jump_61c00:
		xor    %ch,%ch
		mov    %ebx,%eax
		mov    %ch,data_128579
	jump_61c0a:
		add    $0x4,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_j___close_:	/* 0x61c19 */
/*----------------------------------------------------------------*/
		jmp    func___close_


/*----------------------------------------------------------------*/
func_filelength_:	/* 0x61c1e */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x1,%ebx
		xor    %edx,%edx
		call   w_dos_lseek
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     jump_61c55
		mov    $0x2,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_lseek
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    %edi,%eax
	jump_61c55:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_eof_:	/* 0x61c5b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   func_filelength_
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     jump_61c85
		mov    %edx,%eax
		call   w_dos_tell
		cmp    $0xffffffff,%eax
		je     jump_61c85
		cmp    %ebx,%eax
		jne    jump_61c83
		mov    $0x1,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_61c83:
		xor    %eax,%eax
	jump_61c85:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_strcat_:	/* 0x61c88 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_61c9b:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_61cb7
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_61c9b
	jump_61cb7:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_printf_:	/* 0x61cbf */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x4,%esp
		lea    0x14(%esp),%ebx
		mov    $data_756fa,%eax
		mov    0x10(%esp),%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		call   func___fprtf_
		add    $0x4,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_getch_:	/* 0x61ce1 */
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    data_75654,%eax
		mov    %edx,data_75654
		test   %eax,%eax
		jne    jump_61cfc
		mov    $0x8,%ah
		int    $0x21
		and    $0xff,%eax
	jump_61cfc:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___null_int23_exit_:	/* 0x61cfe */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func_exit_:	/* 0x61cff */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   *data_75600
		call   *data_75604
		mov    %edx,%eax
		call   func__exit_
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func__exit_:	/* 0x61d17 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   *data_75604
		call   *data_75608
		mov    %edx,%eax
		jmp    func___exit_
.data
data_61d2d:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"
.text


/*----------------------------------------------------------------*/
func_ultoa_:	/* 0x61d52 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %ebp
		sub    $0x28,%esp
		push   %edx
		mov    %ebx,%ebp
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x5(%esp),%ecx
		mov    %dl,0x4(%esp)
	jump_61d67:
		lea    0x28(%esp),%ebx
		mov    %ebp,0x28(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x28(%esp),%edx
		mov    data_61d2d(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    jump_61d67
	jump_61d87:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    jump_61d87
		mov    (%esp),%eax
		add    $0x2c,%esp
		pop    %ebp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_ltoa_:	/* 0x61d9b */
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		cmp    $0xa,%ebx
		jne    jump_61dad
		test   %eax,%eax
		jge    jump_61dad
		neg    %eax
		movb   $0x2d,(%edx)
		inc    %edx
	jump_61dad:
		call   func_ultoa_
		mov    %ecx,%eax
		pop    %ecx
		ret
.data
data_61db6:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"
.text


/*----------------------------------------------------------------*/
func_utoa_:	/* 0x61ddb */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x1(%esp),%ecx
		mov    %dl,(%esp)
	jump_61df1:
		lea    0x24(%esp),%ebx
		mov    %edi,0x24(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    data_61db6(%edx),%al
		mov    %al,(%ecx)
		mov    0x24(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    jump_61df1
	jump_61e11:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    jump_61e11
		mov    %ebp,%eax
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_itoa_:	/* 0x61e25 */
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		cmp    $0xa,%ebx
		jne    jump_61e37
		test   %eax,%eax
		jge    jump_61e37
		neg    %eax
		movb   $0x2d,(%edx)
		inc    %edx
	jump_61e37:
		call   func_utoa_
		mov    %ecx,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_strlen_:	/* 0x61e40 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%eax
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_memcpy_:	/* 0x61e59 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_61e7e:
/*----------------------------------------------------------------*/
		cmpl   $0x0,data_75654
		je     jump_61e8d
		mov    $0x1,%eax
		ret
	jump_61e8d:
		mov    $0xb,%ah
#if 1
    call   w_game_update

    call   w_keyboard_has_input
    test   %eax,%eax
    jne    jump_func_61e7e_1
    jmp    jump_func_61e7e_2
  jump_func_61e7e_1:
    movb   $0xff,%al
  jump_func_61e7e_2:
#else
		int    $0x21
#endif
		cbtw
		cwtl
		ret


/*----------------------------------------------------------------*/
func___CHP:	/* 0x61e96 */
/*----------------------------------------------------------------*/
		push   %eax
		fstcw  (%esp)
		fwait
		pushl  (%esp)
		movb   $0x1f,0x1(%esp)
		fldcw  (%esp)
		frndint
		fldcw  0x4(%esp)
		fwait
		lea    0x8(%esp),%esp
		ret


/*----------------------------------------------------------------*/
func_j___sys_init_387_emulator:	/* 0x61eb4 */
/*----------------------------------------------------------------*/
		jmp    func___sys_init_387_emulator


/*----------------------------------------------------------------*/
func_j___sys_fini_387_emulator:	/* 0x61eb9 */
/*----------------------------------------------------------------*/
		jmp    func___sys_fini_387_emulator


/*----------------------------------------------------------------*/
func_memset_:	/* 0x61ec0 */
/*----------------------------------------------------------------*/
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x8,%edx
		mov    %dh,%dl
		shl    $0x8,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   func___STOSB
		pop    %ecx
		pop    %eax
		ret


/*----------------------------------------------------------------*/
func_61ed8:
/*----------------------------------------------------------------*/
		mov    $data_75610,%eax
		ret


/*----------------------------------------------------------------*/
func_rand_:	/* 0x61ede */
/*----------------------------------------------------------------*/
		push   %edx
		call   func_61ed8
		test   %eax,%eax
		je     jump_61f00
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x3039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x10,%eax
		and    $0x7fff,%eax
	jump_61f00:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_srand_:	/* 0x61f02 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_61ed8
		test   %eax,%eax
		je     jump_61f10
		mov    %edx,(%eax)
	jump_61f10:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_mem_putc_:	/* 0x61f12 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x1(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x10(%eax)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_vsprintf_:	/* 0x61f25 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    $func_mem_putc_,%ecx
		call   func___prtf_
		movb   $0x0,(%esi,%eax,1)
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_open_:	/* 0x61f3a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		lea    0x14(%esp),%eax
		add    $0x4,%eax
		mov    -0x4(%eax),%eax
		push   %eax
		push   $0x0
		mov    0x18(%esp),%edx
		push   %edx
		mov    0x18(%esp),%ebx
		push   %ebx
		call   func_sopen_
		add    $0x10,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_sopen_:	/* 0x61f5e */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    0x24(%esp),%esi
	jump_61f6a:
		cmpb   $0x20,(%esi)
		jne    jump_61f72
		inc    %esi
		jmp    jump_61f6a
	jump_61f72:
		mov    0x28(%esp),%eax
		and    $0x83,%eax
		mov    %eax,(%esp)
		mov    0x2c(%esp),%dl
		mov    (%esp),%al
		or     %dl,%al
		mov    %esi,%edx
		mov    $0xffffffff,%edi
		mov    $0x3d,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_61fa5
		xor    %edi,%edi
		mov    0x4(%esp),%di
	jump_61fa5:
		mov    0x28(%esp),%dh
		test   $0x3,%dh
		je     jump_6201f
		cmp    $0xffffffff,%edi
		je     jump_6201f
		mov    %edi,%eax
		call   func_isatty_
		test   %eax,%eax
		jne    jump_6201f
		testb  $0x4,0x29(%esp)
		je     jump_61fe7
		mov    %edi,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    $0x7,%eax
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_6211a
	jump_61fe7:
		test   $0x40,%dh
		je     jump_6201f
		lea    0x8(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jge    jump_6201f
		mov    %edi,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
	jump_6200e:
		xor    %eax,%eax
		mov    0x4(%esp),%ax
		call   func___set_errno_dos_
		jmp    jump_6211a
	jump_6201f:
		cmp    $0xffffffff,%edi
		jne    jump_620ad
		testb  $0x20,0x28(%esp)
		je     jump_6200e
		cmpw   $0x2,0x4(%esp)
		jne    jump_6200e
		lea    0x30(%esp),%eax
		add    $0x4,%eax
		mov    -0x4(%eax),%eax
		test   %eax,%eax
		jne    jump_6204a
		mov    $0x180,%eax
	jump_6204a:
		xor    data_75940,%eax
		xor    %ecx,%ecx
		test   $0x80,%al
		jne    jump_6205b
		mov    $0x1,%ecx
	jump_6205b:
		mov    %esi,%edx
		and    $0xff,%ecx
		mov    $0x3c,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_6200e
		mov    0x4(%esp),%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_6200e
		mov    (%esp),%al
		mov    0x2c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x3d,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_6200e
		xor    %edi,%edi
		mov    0x4(%esp),%di
	jump_620ad:
		mov    %edi,%eax
		call   func___IOMode_
		and    $0x3c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_620c6
		or     $0x20,%dh
	jump_620c6:
		andb   $0x7f,(%esp)
		cmpl   $0x2,(%esp)
		jne    jump_620d3
		or     $0x3,%dl
	jump_620d3:
		cmpl   $0x0,(%esp)
		jne    jump_620dc
		or     $0x1,%dl
	jump_620dc:
		cmpl   $0x1,(%esp)
		jne    jump_620e5
		or     $0x2,%dl
	jump_620e5:
		testb  $0x10,0x28(%esp)
		je     jump_620ef
		or     $0x80,%dl
	jump_620ef:
		mov    %edx,%eax
		mov    0x29(%esp),%bl
		or     $0x40,%al
		test   $0x3,%bl
		je     jump_62103
		test   $0x2,%bl
		je     jump_62111
		jmp    jump_6210f
	jump_62103:
		cmpl   $0x200,data_758e9
		jne    jump_62111
	jump_6210f:
		mov    %eax,%edx
	jump_62111:
		mov    %edi,%eax
		call   func___SetIOMode_
		mov    %edi,%eax
	jump_6211a:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_putch_:	/* 0x62188 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x6,%ah
		mov    %ebx,%edx
		int    $0x21
		mov    %ebx,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_getcwd_:	/* 0x62197 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x90,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		lea    0x3(%esp),%esi
		xor    %dl,%dl
		mov    $0x47,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_621c6
		mov    $0x1,%eax
	jump_621bd:
		call   func___set_errno_
		xor    %eax,%eax
		jmp    jump_62215
	jump_621c6:
		mov    $0x19,%ah
		int    $0x21
		mov    $0x3a,%ah
		mov    $0x5c,%dl
		add    $0x41,%al
		mov    %esp,%edi
		mov    %al,(%esp)
		mov    %ah,0x1(%esp)
		mov    %dl,0x2(%esp)
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		lea    0x1(%ecx),%edx
		test   %ebx,%ebx
		jne    jump_6220a
		mov    %edx,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_62208
		mov    $0x5,%eax
		jmp    jump_621bd
	jump_62208:
		mov    %edx,%ebp
	jump_6220a:
		mov    %esp,%edx
		mov    %ebx,%eax
		mov    %ebp,%ebx
		call   func_strncpy_
	jump_62215:
		add    $0x90,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_creat_:	/* 0x62221 */
/*----------------------------------------------------------------*/
		push   %edx
		push   $0x62
		push   %eax
		call   w_dos_open
		add    $0xc,%esp
		ret


/*----------------------------------------------------------------*/
func_tell_:	/* 0x6222e */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $0x1,%ebx
		xor    %edx,%edx
		call   w_dos_lseek
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_write_:	/* 0x6223f */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   func___IOMode_
		mov    %eax,%edx
		mov    %eax,-0x18(%ebp)
		test   %eax,%eax
		jne    jump_6226d
		mov    $0x4,%eax
	jump_6225e:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_62409
	jump_6226d:
		test   $0x2,%al
		jne    jump_62278
		mov    $0x6,%eax
		jmp    jump_6225e
	jump_62278:
		test   $0x80,%al
		je     jump_622af
		mov    -0x1c(%ebp),%ebx
		xor    %eax,%edx
		mov    $0x2,%al
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		rcl    %dx
		ror    %dx
		shl    $0x10,%edx
		mov    %ax,%dx
		mov    %edx,-0x10(%ebp)
		test   %edx,%edx
		jge    jump_622af
	jump_6229f:
		xor    %eax,%eax
		mov    -0x10(%ebp),%ax
		call   func___set_errno_dos_
		jmp    jump_62409
	jump_622af:
		testb  $0x40,-0x18(%ebp)
		je     jump_622ea
		mov    -0x1c(%ebp),%ebx
		mov    -0x20(%ebp),%edx
		mov    -0x24(%ebp),%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_6229f
		cmp    -0x24(%ebp),%eax
		je     jump_62406
		mov    $0xc,%eax
		call   func___set_errno_
		mov    %edx,-0x24(%ebp)
		jmp    jump_62406
	jump_622ea:
		call   func_64560
		mov    %eax,%edx
		cmp    $0xb0,%eax
		jae    jump_622fd
		call   func___STKOVERFLOW_
	jump_622fd:
		mov    $0x200,%edi
		cmp    $0x230,%edx
		jae    jump_6230f
		mov    $0x80,%edi
	jump_6230f:
		lea    0x3(%edi),%eax
		xor    %edx,%edx
		and    $0xfc,%al
		xor    %esi,%esi
		sub    %eax,%esp
		mov    %edx,-0x4(%ebp)
		mov    %edx,-0x14(%ebp)
		mov    -0x20(%ebp),%eax
		mov    %esp,-0x8(%ebp)
		mov    %eax,-0xc(%ebp)
	jump_62329:
		mov    -0x4(%ebp),%eax
		cmp    -0x24(%ebp),%eax
		jae    jump_623d0
		mov    -0xc(%ebp),%eax
		cmpb   $0xa,(%eax)
		jne    jump_62385
		mov    -0x8(%ebp),%eax
		movb   $0xd,(%esi,%eax,1)
		inc    %esi
		cmp    %edi,%esi
		jne    jump_62385
		mov    -0x1c(%ebp),%ebx
		mov    %eax,%edx
		mov    %edi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_6229f
		cmp    %edi,%eax
		je     jump_6237d
	jump_62369:
		mov    $0xc,%eax
		call   func___set_errno_
		mov    -0x14(%ebp),%eax
		add    %esi,%eax
		jmp    jump_62409
	jump_6237d:
		mov    -0x4(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x14(%ebp)
	jump_62385:
		mov    -0x8(%ebp),%eax
		mov    -0xc(%ebp),%edx
		mov    -0xc(%ebp),%ebx
		mov    -0x4(%ebp),%ecx
		inc    %ebx
		inc    %ecx
		mov    (%edx),%dl
		mov    %ebx,-0xc(%ebp)
		mov    %dl,(%esi,%eax,1)
		inc    %esi
		mov    %ecx,-0x4(%ebp)
		cmp    %edi,%esi
		jne    jump_62329
		mov    -0x1c(%ebp),%ebx
		mov    %eax,%edx
		mov    %edi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_6229f
		cmp    %edi,%eax
		jne    jump_62369
		mov    -0x4(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x14(%ebp)
		jmp    jump_62329
	jump_623d0:
		test   %esi,%esi
		je     jump_62406
		mov    -0x1c(%ebp),%ebx
		mov    -0x8(%ebp),%edx
		mov    %esi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_6229f
		cmp    %esi,%eax
		je     jump_62406
		mov    $0xc,%eax
		call   func___set_errno_
		mov    -0x14(%ebp),%eax
		add    %edx,%eax
		jmp    jump_62409
	jump_62406:
		mov    -0x24(%ebp),%eax
	jump_62409:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_strcmp_:	/* 0x62410 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     jump_62484
	jump_62418:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_62489
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_62484
		mov    0x4(%ebx),%eax
		mov    0x4(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_62489
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_62484
		mov    0x8(%ebx),%eax
		mov    0x8(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_62489
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_62484
		mov    0xc(%ebx),%eax
		mov    0xc(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_62489
		add    $0x10,%ebx
		add    $0x10,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     jump_62418
	jump_62484:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_62489:
		cmp    %cl,%al
		jne    jump_624aa
		cmp    $0x0,%al
		je     jump_62484
		cmp    %ch,%ah
		jne    jump_624aa
		cmp    $0x0,%ah
		je     jump_62484
		shr    $0x10,%eax
		shr    $0x10,%ecx
		cmp    %cl,%al
		jne    jump_624aa
		cmp    $0x0,%al
		je     jump_62484
		cmp    %ch,%ah
	jump_624aa:
		sbb    %eax,%eax
		or     $0x1,%al
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_unlink_:	/* 0x624b1 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    $0x41,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_624cc
		and    $0xffff,%eax
		call   func___set_errno_dos_
		pop    %edx
		ret
	jump_624cc:
		xor    %eax,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_int386x_:	/* 0x624d0 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebp,%edx
		call   func___int386x_
		mov    0x0(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_time_:	/* 0x624e9 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x24,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   func___getctime_
		cmp    $0x1f4,%eax
		jl     jump_62501
		incl   (%esp)
	jump_62501:
		mov    %esp,%eax
		call   w_dos_mktime
		mov    %eax,%ebx
		test   %edx,%edx
		je     jump_62510
		mov    %eax,(%edx)
	jump_62510:
		add    $0x24,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_int386_:	/* 0x62516 */
/*----------------------------------------------------------------*/
		push   %ecx
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %esp,%eax
		call   func_segread_
		mov    %ecx,%eax
		mov    %esp,%ecx
		call   w_dos_int386x
		add    $0xc,%esp
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_62532:
/*----------------------------------------------------------------*/
		data16 		mov    %ss,data_7561c
		ret


/*----------------------------------------------------------------*/
func___CHK:	/* 0x6253a */
/*----------------------------------------------------------------*/
		xchg   %eax,0x4(%esp)
		call   func___STK
		mov    0x4(%esp),%eax
		ret    $0x4


/*----------------------------------------------------------------*/
func___STK:	/* 0x6254d */
/*----------------------------------------------------------------*/
		cmp    %esp,%eax
		jae    jump_6255e
		sub    %esp,%eax
		neg    %eax
		cmp    data_75644,%eax
		jbe    jump_6255e
		ret
	jump_6255e:
		mov    %ss,%ax
		cmp    data_7561c,%ax
		je     func___STKOVERFLOW_
		ret


/*----------------------------------------------------------------*/
func___STKOVERFLOW_:	/* 0x6256b */
/*----------------------------------------------------------------*/
		mov    $data_7561e,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_


/*----------------------------------------------------------------*/
func_outp_:	/* 0x6257a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %cl,%al
		out    %al,(%dx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_inp_:	/* 0x62588 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		sub    %eax,%eax
		in     (%dx),%al
		pop    %edx
		ret


/*----------------------------------------------------------------*/
disable_interrupts: /* 62590 */
/*----------------------------------------------------------------*/
#if 0
		cli
#endif
		ret


/*----------------------------------------------------------------*/
enable_interrupts: /* 62592 */
/*----------------------------------------------------------------*/
#if 0
		sti
#endif
		ret


/*----------------------------------------------------------------*/
func_ftell_:	/* 0x62594 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x10(%eax),%eax
		call   w_dos_tell
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     jump_625c0
		mov    0x4(%edx),%ecx
		test   %ecx,%ecx
		je     jump_625c0
		testb  $0x10,0xd(%edx)
		je     jump_625bc
		lea    (%ecx,%ebx,1),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_625bc:
		mov    %ebx,%eax
		sub    %ecx,%eax
	jump_625c0:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_segread_:	/* 0x62702 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x2(%edx)
		mov    %ds,%eax
		mov    %ax,0x6(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x4(%edx)
		mov    %fs,%eax
		mov    %ax,0x8(%edx)
		mov    %gs,%eax
		mov    %ax,0xa(%edx)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_memmove_:	/* 0x6272a */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     jump_62772
		jae    jump_6275e
		add    %ebx,%edx
		cmp    %eax,%edx
		jbe    jump_6275e
		lea    (%eax,%ebx,1),%edi
		lea    -0x1(%edx),%esi
		dec    %edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		std
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_6275e:
		mov    %ds,%edx
		mov    %eax,%edi
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x2,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x3,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
	jump_62772:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_fputc_:	/* 0x629a8 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x2,0xc(%edx)
		jne    jump_629cd
		mov    $0x4,%eax
		call   func___set_errno_
		orb    $0x20,0xc(%edx)
	jump_629c3:
		mov    $0xffffffff,%eax
		jmp    jump_62a46
	jump_629cd:
		cmpl   $0x0,0x8(%edx)
		jne    jump_629da
		mov    %edx,%eax
		call   func___ioalloc_
	jump_629da:
		mov    $0x400,%ecx
		cmp    $0xa,%ebx
		jne    jump_62a17
		mov    0xc(%edx),%al
		mov    $0x600,%ecx
		test   $0x40,%al
		jne    jump_62a17
		orb    $0x10,0xd(%edx)
		mov    (%edx),%eax
		movb   $0xd,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x4(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x14(%edx),%ebp
		mov    %edi,0x4(%edx)
		cmp    %ebp,%edi
		jne    jump_62a17
		mov    %edx,%eax
		call   func___flush_
		test   %eax,%eax
		jne    jump_629c3
	jump_62a17:
		orb    $0x10,0xd(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x4(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0xc(%edx),%edi
		mov    %esi,0x4(%edx)
		test   %edi,%ecx
		jne    jump_62a37
		cmp    0x14(%edx),%esi
		jne    jump_62a42
	jump_62a37:
		mov    %edx,%eax
		call   func___flush_
		test   %eax,%eax
		jne    jump_629c3
	jump_62a42:
		xor    %eax,%eax
		mov    %bl,%al
	jump_62a46:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___shutdown_stream_:	/* 0x62c62 */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		call   func___doclose_
		mov    %eax,%edx
		mov    %ebx,%eax
		call   func___freefp_
		mov    %edx,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___hex_:	/* 0x62c77 */
/*----------------------------------------------------------------*/
		add    $0x30,%eax
		cmp    $0x39,%eax
		jle    jump_62c82
		add    $0x27,%eax
	jump_62c82:
		ret


/*----------------------------------------------------------------*/
func___MkTmpFile_:	/* 0x62c83 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   func_65005
		mov    $0x4,%edx
		mov    %eax,%ebx
		mov    %ecx,%esi
		movb   $0x74,(%ecx)
		add    %ecx,%edx
	jump_62c9e:
		mov    %ebx,%eax
		and    $0xf,%eax
		call   func___hex_
		mov    %al,(%edx)
		dec    %edx
		shr    $0x4,%ebx
		cmp    %esi,%edx
		jne    jump_62c9e
		mov    %edi,%eax
		sar    $0x4,%eax
		and    $0xf,%eax
		movb   $0x5f,0x5(%ecx)
		call   func___hex_
		mov    %al,0x6(%ecx)
		mov    %edi,%eax
		and    $0xf,%eax
		call   func___hex_
		movb   $0x2e,0x8(%ecx)
		movb   $0x74,0x9(%ecx)
		movb   $0x6d,0xa(%ecx)
		movb   $0x70,0xb(%ecx)
		movb   $0x0,0xc(%ecx)
		mov    %al,0x7(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___doclose_:	/* 0x62cec */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x0,0xc(%eax)
		jne    jump_62d04
		mov    $0xffffffff,%esi
		jmp    jump_62d6b
	jump_62d04:
		mov    0xd(%eax),%ah
		xor    %esi,%esi
		test   $0x10,%ah
		je     jump_62d17
		mov    %ecx,%eax
		call   func___flush_
		mov    %eax,%esi
	jump_62d17:
		mov    %ecx,%eax
		call   func_ftell_
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     jump_62d2f
		mov    0x10(%ecx),%eax
		xor    %ebx,%ebx
		call   w_dos_lseek
	jump_62d2f:
		test   %edi,%edi
		je     jump_62d3d
		mov    0x10(%ecx),%eax
		call   func___close_
		or     %eax,%esi
	jump_62d3d:
		testb  $0x8,0xc(%ecx)
		je     jump_62d52
		mov    0x8(%ecx),%eax
		call   w_dos_free
		movl   $0x0,0x8(%ecx)
	jump_62d52:
		testb  $0x8,0xd(%ecx)
		je     jump_62d6b
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x19(%ecx),%dl
		call   func___MkTmpFile_
		mov    %esp,%eax
		call   func_j_unlink_
	jump_62d6b:
		mov    %esi,%eax
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___CMain:	/* 0x62d75 */
/*----------------------------------------------------------------*/
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    data_7564c,%edx
		add    $0x3,%edx
		and    $0xfc,%dl
		call   func_64560
		cmp    %eax,%edx
		jae    jump_62d96
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    jump_62d98
	jump_62d96:
		xor    %eax,%eax
	jump_62d98:
		mov    data_7564c,%edx
		add    %edx,%eax
		mov    %eax,data_75650
		call   func_65010
		mov    data_12858c,%edx
		mov    data_128588,%eax
		call   combatii
		call   w_dos_exit
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___InitRtns:	/* 0x62dc4 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx
	jump_62dcb:
		ds
		mov    $data_7895c,%esi
		ds
		mov    $data_7898c,%edi
		mov    %edi,%ebx
		mov    %dl,%al
	jump_62ddb:
		cmp    %edi,%esi
		jae    jump_62df3
		cmpb   $0x2,(%esi)
		je     jump_62dee
		cmp    %al,0x1(%esi)
		ja     jump_62dee
		mov    %esi,%ebx
		mov    0x1(%esi),%al
	jump_62dee:
		add    $0x6,%esi
		jmp    jump_62ddb
	jump_62df3:
		cmp    %edi,%ebx
		je     jump_62e09
		mov    0x2(%ebx),%eax
		or     %eax,%eax
		je     jump_62e04
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx
	jump_62e04:
		movb   $0x2,(%ebx)
		jmp    jump_62dcb
	jump_62e09:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___FiniRtns:	/* 0x62e0f */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl
	jump_62e17:
		ds
		mov    $data_7898c,%esi
		ds
		mov    $data_78998,%edi
		mov    %edi,%ebx
		mov    %dl,%al
	jump_62e27:
		cmp    %edi,%esi
		jae    jump_62e3f
		cmpb   $0x2,(%esi)
		je     jump_62e3a
		cmp    0x1(%esi),%al
		ja     jump_62e3a
		mov    %esi,%ebx
		mov    0x1(%esi),%al
	jump_62e3a:
		add    $0x6,%esi
		jmp    jump_62e27
	jump_62e3f:
		cmp    %edi,%ebx
		je     jump_62e59
		cmp    %dh,%al
		ja     jump_62e54
		mov    0x2(%ebx),%eax
		or     %eax,%eax
		je     jump_62e54
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx
	jump_62e54:
		movb   $0x2,(%ebx)
		jmp    jump_62e17
	jump_62e59:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_nullsub_2:	/* 0x62e5e */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func___MemAllocator:	/* 0x62e60 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     jump_62eaf
		add    $0x7,%eax
		jb     jump_62eaf
		and    $0xfc,%al
		mov    $0xc,%edx
		sub    %edx,%eax
		cmc
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x14(%ebx),%eax
		ja     jump_62eaf
		mov    0xc(%ebx),%esi
		mov    0x10(%ebx),%edi
		cmp    %edi,%eax
		ja     jump_62e93
		mov    0x28(%ebx),%esi
		sub    %edi,%edi
	jump_62e93:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    jump_62eb3
		sub    %edx,%edi
		cmc
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x20(%ebx),%edx
		mov    0x8(%esi),%esi
		cmp    %edx,%esi
		jne    jump_62e93
		mov    %edi,0x14(%ebx)
	jump_62eaf:
		sub    %eax,%eax
		jmp    jump_62efe
	jump_62eb3:
		sub    %eax,%edx
		mov    %edi,0x10(%ebx)
		incl   0x18(%ebx)
		mov    0x8(%esi),%ecx
		cmp    $0xc,%edx
		jb     jump_62ee1
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0xc(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x4(%esi),%ebx
		mov    %ebx,0x4(%edi)
		mov    %ecx,0x8(%edi)
		mov    %edi,0x8(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x4(%ebx)
		jmp    jump_62ef6
	jump_62ee1:
		decl   0x1c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x4(%esi),%esi
		mov    %edi,0x8(%esi)
		mov    %esi,0x4(%edi)
		mov    %esi,0xc(%ebx)
		mov    %eax,%esi
	jump_62ef6:
		orl    $0x1,(%esi)
		mov    %esi,%eax
		add    $0x4,%eax
	jump_62efe:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret
	jump_62f03:
		jmp    jump_6300e


/*----------------------------------------------------------------*/
func___MemFree:	/* 0x62f08 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     jump_62f03
		mov    %eax,%esi
		sub    $0x4,%esi
		mov    (%esi),%eax
		test   $0x1,%al
		je     jump_62f03
		and    $0xfe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x1,(%edi)
		jne    jump_62f4a
		cmp    0xc(%ebx),%edi
		jne    jump_62f33
		mov    %esi,0xc(%ebx)
	jump_62f33:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x4(%edi),%ebx
		mov    0x8(%edi),%edi
		mov    %edi,0x8(%ebx)
		mov    %ebx,0x4(%edi)
		pop    %ebx
		decl   0x1c(%ebx)
		jmp    jump_62fc6
	jump_62f4a:
		mov    %eax,(%esi)
		mov    0xc(%ebx),%edi
		cmp    %edi,%esi
		jae    jump_62f61
		cmp    0x4(%edi),%esi
		ja     jump_62fc6
		mov    0x28(%ebx),%edi
		cmp    %edi,%esi
		jb     jump_62fc6
		jmp    jump_62f70
	jump_62f61:
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_62fc6
		lea    0x20(%ebx),%edi
		cmp    0x24(%ebx),%esi
		ja     jump_62fc6
	jump_62f70:
		sub    %edx,%edx
		mov    0x18(%ebx),%eax
		mov    0x1c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    jump_62fa5
		mov    0x18(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     jump_62f8d
		sub    %eax,%eax
	jump_62f8d:
		mov    %esi,%edi
		add    (%esi),%edi
	jump_62f91:
		mov    (%edi),%edx
		test   $0x1,%dl
		je     jump_62fc6
		cmp    $0xffffffff,%edx
		je     jump_62fa5
		and    $0xfe,%dl
		add    %edx,%edi
		dec    %eax
		jne    jump_62f91
	jump_62fa5:
		mov    0xc(%ebx),%edi
		cmp    %edi,%esi
		jae    jump_62faf
		mov    0x28(%ebx),%edi
	jump_62faf:
		cmp    %edi,%esi
		jb     jump_62fc6
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_62fc6
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_62fc6
		mov    0x8(%edi),%edi
		jmp    jump_62faf
	jump_62fc6:
		mov    0x4(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    jump_62fe5
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0xc(%ebx),%esi
		jne    jump_62fe1
		mov    %edi,0xc(%ebx)
	jump_62fe1:
		mov    %edi,%esi
		jmp    jump_62ff6
	jump_62fe5:
		incl   0x1c(%ebx)
		mov    %edx,0x8(%esi)
		mov    %edi,0x4(%esi)
		mov    %esi,0x8(%edi)
		mov    %edx,%edi
		mov    %esi,0x4(%edi)
	jump_62ff6:
		decl   0x18(%ebx)
		cmp    0xc(%ebx),%esi
		jae    jump_63006
		cmp    0x10(%ebx),%ecx
		jbe    jump_63006
		mov    %ecx,0x10(%ebx)
	jump_63006:
		cmp    0x14(%ebx),%ecx
		jbe    jump_6300e
		mov    %ecx,0x14(%ebx)
	jump_6300e:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___IOMode_:	/* 0x63013 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    data_75674,%eax
		jb     jump_63026
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_63026:
		cmp    $0x5,%eax
		jg     jump_6305c
		mov    %eax,%ebx
		mov    data_756c8,%eax
		shl    $0x2,%ebx
		add    %ebx,%eax
		mov    0x1(%eax),%cl
		test   $0x40,%cl
		jne    jump_6305c
		mov    %cl,%ch
		or     $0x40,%ch
		mov    %ch,0x1(%eax)
		mov    %edx,%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_6305c
		mov    data_756c8,%eax
		orb    $0x20,0x1(%ebx,%eax,1)
	jump_6305c:
		mov    data_756c8,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___SetIOMode_:	/* 0x63068 */
/*----------------------------------------------------------------*/
		push   %ebx
		or     $0x40,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    data_756c8,%eax
		shl    $0x2,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___set_errno_:	/* 0x63082 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_6501b
		mov    %edx,(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___set_ERANGE_:	/* 0x6308e */
/*----------------------------------------------------------------*/
		mov    $0xe,%eax
		jmp    func___set_errno_


/*----------------------------------------------------------------*/
func___set_doserrno_:	/* 0x630a5 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_65021
		mov    %edx,(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___set_errno_dos_:	/* 0x630c4 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		call   func___set_doserrno_
		cmp    $0x100,%edx
		jae    jump_63113
		cmpb   $0x3,data_7566b
		jb     jump_630fd
		cmp    $0x50,%dl
		jne    jump_630ed
		mov    $0xe,%bl
		jmp    jump_630fd
	jump_630ed:
		cmp    $0x22,%dl
		jb     jump_630f6
		mov    $0x13,%bl
		jmp    jump_630fd
	jump_630f6:
		cmp    $0x20,%dl
		jb     jump_630fd
		mov    $0x5,%bl
	jump_630fd:
		cmp    $0x13,%bl
		jbe    jump_63104
		mov    $0x13,%bl
	jump_63104:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    data_756c9(%edx),%eax
		sar    $0x18,%eax
		jmp    jump_6311d
	jump_63113:
		mov    %edx,%eax
		shr    $0x8,%eax
		and    $0xff,%eax
	jump_6311d:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___unlink_:	/* 0x6312a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_755f8,%edx
		cmp    %edx,%eax
		jne    jump_6313f
		mov    0x8(%edx),%edx
		mov    %edx,data_755f8
	jump_6313f:
		mov    data_755f4,%ebx
		cmp    %ebx,%eax
		jne    jump_63152
		mov    0x8(%ebx),%edx
		mov    %edx,data_755f4
	jump_63152:
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%eax
		test   %edx,%edx
		je     jump_6315f
		mov    %eax,0x8(%edx)
	jump_6315f:
		test   %eax,%eax
		je     jump_63166
		mov    %edx,0x4(%eax)
	jump_63166:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___FreeDPMIBlocks_:	/* 0x63169 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_755f4,%edx
	jump_63174:
		test   %edx,%edx
		je     jump_63440
		mov    0x24(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x2c,%eax
		cmp    %ebx,%eax
		jne    jump_631c2
		lea    -0x8(%edx),%ebx
		mov    %edx,%eax
		mov    0x8(%edx),%ecx
		call   func___unlink_
		mov    %ecx,%edx
		mov    0x4(%ebx),%ecx
		test   %ecx,%ecx
		jne    jump_631b2
		mov    (%ebx),%eax
		shr    $0x10,%eax
		mov    (%ebx),%di
		mov    %eax,%esi
		mov    $0x5,%ah
		mov    $0x2,%al
		int    $0x31
		jmp    jump_63174
	jump_631b2:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x49,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    jump_63174
	jump_631c2:
		mov    0x8(%edx),%edx
		jmp    jump_63174


/*----------------------------------------------------------------*/
func___LinkUpNewMHeap_:	/* 0x632b1 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    data_755f4,%eax
		xor    %ebx,%ebx
		jmp    jump_632c7
	jump_632be:
		cmp    %eax,%edx
		jb     jump_632cb
		mov    %eax,%ebx
		mov    0x8(%eax),%eax
	jump_632c7:
		test   %eax,%eax
		jne    jump_632be
	jump_632cb:
		mov    %ebx,0x4(%edx)
		mov    %eax,0x8(%edx)
		test   %ebx,%ebx
		je     jump_632da
		mov    %edx,0x8(%ebx)
		jmp    jump_632e0
	jump_632da:
		mov    %edx,data_755f4
	jump_632e0:
		test   %eax,%eax
		je     jump_632e7
		mov    %edx,0x4(%eax)
	jump_632e7:
		lea    0x20(%edx),%ebx
		mov    (%edx),%eax
		add    $0x2c,%edx
		movl   $0x0,-0xc(%edx)
		movl   $0x0,-0x1c(%edx)
		movl   $0x0,-0x14(%edx)
		movl   $0x0,-0x10(%edx)
		mov    %ebx,-0x8(%edx)
		mov    %ebx,-0x4(%edx)
		sub    $0x2c,%eax
		mov    %ebx,-0x20(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___LastFree_:	/* 0x63325 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_755f4,%edx
		test   %edx,%edx
		je     jump_6336e
		mov    0x24(%edx),%edx
		mov    (%edx),%ebx
		add    %edx,%ebx
		mov    data_75662,%ah
		add    $0x4,%ebx
		cmp    $0x2,%ah
		jb     jump_63361
		cmp    $0x8,%ah
		ja     jump_63361
		cmpb   $0x0,data_75664
		jne    jump_63361
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,data_75634
	jump_63361:
		cmp    data_75634,%ebx
		jne    jump_6336e
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret
	jump_6336e:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_RationalAlloc_:	/* 0x63373 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		call   func___FreeDPMIBlocks_
		mov    (%esp),%eax
		shr    $0x10,%eax
		mov    (%esp),%ecx
		mov    %eax,%ebx
		mov    $0x5,%ah
		mov    $0x1,%al
		int    $0x31
		sbb    %eax,%eax
		inc    %eax
		je     jump_633a4
		mov    %bx,%ax
		shl    $0x10,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x2(%eax)
	jump_633a4:
		test   %eax,%eax
		je     jump_633c1
		mov    (%esp),%ebx
		lea    0x8(%eax),%edx
		sub    $0x8,%ebx
		mov    %ebx,(%edx)
		movl   $0x0,0x4(%eax)
		mov    %edx,%eax
		jmp    jump_6343d
	jump_633c1:
		testw  $0xfff0,data_12859a
		je     jump_633d6
		movl   $0xfffff,data_128598
	jump_633d6:
		cmpl   $0x10000,(%esp)
		ja     jump_6343b
		mov    data_128598,%ebx
		shr    $0x4,%ebx
		or     $0x1,%bl
		mov    $0x48,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     jump_6343b
		mov    (%esp),%ebx
		shr    $0x4,%ebx
		mov    $0x48,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x49,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     jump_6343b
		mov    $0x0,%ah
		mov    $0x6,%al
		int    $0x31
		mov    %ecx,%eax
		shl    $0x10,%eax
		mov    %dx,%ax
		add    $0x8,%eax
		mov    (%esp),%edx
		mov    %esi,-0x4(%eax)
		sub    $0x8,%edx
		mov    %edx,(%eax)
		jmp    jump_6343d
	jump_6343b:
		xor    %eax,%eax
	jump_6343d:
		add    $0x4,%esp
	jump_63440:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___CreateNewNHeap_:	/* 0x63446 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x0,data_75944
		jne    jump_63459
	jump_63455:
		xor    %eax,%eax
		jmp    jump_6343d
	jump_63459:
		cmpl   $0xfffffffe,data_75634
		je     jump_63455
		mov    %esp,%eax
		call   func___AdjustAmount_
		test   %eax,%eax
		je     jump_6343d
		cmpb   $0x1,data_75662
		jne    jump_6348d
		mov    (%esp),%eax
		call   func_RationalAlloc_
		mov    %eax,%ebx
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_634a8
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    jump_634a8
	jump_6348d:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x21
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x4,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)
	jump_634a8:
		test   %edx,%edx
		je     jump_63455
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x4,%eax
		cmp    %esi,%eax
		ja     jump_63455
		mov    %eax,(%esp)
		cmp    $0x38,%eax
		jb     jump_63455
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   func___LinkUpNewMHeap_
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x1,%al
		mov    %eax,(%ebx)
		mov    0x18(%edx),%edi
		movl   $0xffffffff,0x14(%edx)
		inc    %edi
		lea    0x4(%ebx),%eax
		mov    %edi,0x18(%edx)
		call   w_dos_free
		mov    $0x1,%eax
		jmp    jump_6343d


/*----------------------------------------------------------------*/
func___ExpandDGROUP_:	/* 0x634f5 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		cmpb   $0x1,data_75662
		jne    jump_6350d
		cmpb   $0x0,data_75663
		je     jump_63516
	jump_6350d:
		cmpb   $0x9,data_75662
		jne    jump_63523
	jump_63516:
		mov    (%esp),%eax
		call   func___CreateNewNHeap_
		jmp    jump_63630
	jump_63523:
		cmpl   $0x0,data_75944
		jne    jump_63533
	jump_6352c:
		xor    %eax,%eax
		jmp    jump_63630
	jump_63533:
		cmpl   $0xfffffffe,data_75634
		je     jump_6352c
		mov    %esp,%eax
		call   func___AdjustAmount_
		test   %eax,%eax
		je     jump_63630
		mov    data_75662,%bl
		cmp    $0x2,%bl
		jb     jump_63571
		cmp    $0x8,%bl
		ja     jump_63571
		cmpb   $0x0,data_75664
		jne    jump_63571
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,data_75634
	jump_63571:
		mov    (%esp),%edx
		mov    data_75634,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    jump_63585
		mov    $0xfffffffe,%edx
	jump_63585:
		mov    %edx,%eax
		call   func___brk_
		cmp    $0xffffffff,%eax
		je     jump_6352c
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     jump_6352c
		cmp    %eax,%edx
		jbe    jump_6352c
		sub    %eax,%edx
		lea    -0x4(%edx),%eax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		ja     jump_6352c
		mov    data_755f4,%edx
		mov    %eax,(%esp)
		jmp    jump_635c5
	jump_635b3:
		mov    0x8(%edx),%ebp
		test   %ebp,%ebp
		je     jump_635c9
		cmp    %ebx,%edx
		ja     jump_635c2
		cmp    %ebp,%ebx
		jb     jump_635c9
	jump_635c2:
		mov    0x8(%edx),%edx
	jump_635c5:
		test   %edx,%edx
		jne    jump_635b3
	jump_635c9:
		test   %edx,%edx
		je     jump_635f3
		mov    (%edx),%eax
		lea    -0x4(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    jump_635f3
		mov    (%esp),%esi
		add    $0x4,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		lea    (%eax,%ebp,1),%ecx
		mov    %eax,%ebx
		movl   $0xffffffff,(%ecx)
		jmp    jump_63612
	jump_635f3:
		cmpl   $0x38,(%esp)
		jb     jump_6352c
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   func___LinkUpNewMHeap_
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
	jump_63612:
		mov    (%esp),%eax
		or     $0x1,%al
		mov    %eax,(%ebx)
		incl   0x18(%edx)
		lea    0x4(%ebx),%eax
		movl   $0xffffffff,0x14(%edx)
		call   w_dos_free
		mov    $0x1,%eax
	jump_63630:
		add    $0x4,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___AdjustAmount_:	/* 0x63639 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x3,%edx
		and    $0xfc,%dl
		test   %edx,%edx
		jne    jump_63650
	jump_6364a:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret
	jump_63650:
		cmpb   $0x1,data_75662
		jne    jump_63662
		cmpb   $0x0,data_75663
		je     jump_6366b
	jump_63662:
		cmpb   $0x9,data_75662
		jne    jump_63670
	jump_6366b:
		add    $0x8,%edx
		jmp    jump_63677
	jump_63670:
		call   func___LastFree_
		sub    %eax,%edx
	jump_63677:
		mov    %edx,(%ebx)
		add    $0x3c,%edx
		cmp    (%ebx),%edx
		jb     jump_6364a
		mov    data_75948,%esi
		cmp    %esi,%edx
		jae    jump_6368f
		mov    %esi,%edx
		and    $0xfe,%dl
	jump_6368f:
		mov    %edx,(%ebx)
		add    $0xfff,%edx
		cmp    (%ebx),%edx
		jb     jump_6364a
		and    $0xf0,%dh
		xor    %dl,%dl
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0xff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_636b0:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func___close_:	/* 0x636b3 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     jump_636d3
		mov    %edx,%eax
		xor    %edx,%edx
		call   func___SetIOMode_
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_636d3:
		mov    $0x4,%eax
		call   func___set_errno_
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_file_putc_:	/* 0x636e5 */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   w_dos_fputc
		incl   0x10(%ebx)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___fprtf_:	/* 0x636f6 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0xc(%eax),%ebp
		mov    0xc(%eax),%ah
		mov    0x8(%esi),%ecx
		and    $0xcf,%ah
		and    $0x30,%ebp
		mov    %ah,0xc(%esi)
		test   %ecx,%ecx
		jne    jump_63719
		mov    %esi,%eax
		call   func___ioalloc_
	jump_63719:
		mov    0xd(%esi),%cl
		xor    %edi,%edi
		test   $0x4,%cl
		je     jump_63737
		mov    %cl,%ch
		and    $0xfa,%ch
		mov    %ch,%al
		mov    %ch,0xd(%esi)
		or     $0x1,%al
		mov    $0x1,%edi
		mov    %al,0xd(%esi)
	jump_63737:
		mov    $func_file_putc_,%ecx
		mov    %esi,%eax
		call   func___prtf_
		mov    %eax,%edx
		test   %edi,%edi
		je     jump_63761
		mov    0xd(%esi),%ah
		and    $0xfa,%ah
		mov    %ah,%bl
		mov    %ah,0xd(%esi)
		or     $0x4,%bl
		mov    %esi,%eax
		mov    %bl,0xd(%esi)
		call   func___flush_
	jump_63761:
		testb  $0x20,0xc(%esi)
		je     jump_6376c
		mov    $0xffffffff,%edx
	jump_6376c:
		mov    0xc(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0xc(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___setEFGfmt_:	/* 0x6377b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $func__EFG_Format_,%edx
		mov    $func___cnvs2d_,%ebx
		mov    %edx,data_7594c
		mov    %ebx,data_75950
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___sys_init_387_emulator:	/* 0x63796 */
/*----------------------------------------------------------------*/
		push   %es
		push   %ecx
		push   %ebx
		push   %edx
		fninit
		push   %eax
		fnstcw (%esp)
		pop    %eax
		cmp    $0x3,%ah
		je     jump_637a7
		inc    %ebp
	jump_637a7:
		or     %ebp,%ebp
		je     jump_637b0
		call   func_637c6
	jump_637b0:
		finit
		fldcw  data_759d4
		fldz
		fldz
		fldz
		fldz
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %es
		ret


/*----------------------------------------------------------------*/
func_637c6:
/*----------------------------------------------------------------*/
		movb   $0x3,data_7560c
		movb   $0x1,data_7593c
		data16 		smsw   data_7593a
		andw   $0x6,data_7593a
		sub    $0x8,%esp
		sidtl  (%esp)
		mov    0x2(%esp),%ebx
		add    $0x38,%ebx
		add    $0x8,%esp
		cmpb   $0x0,data_75664
		je     jump_63818
		call   func_63891
		data16 		mov    data_755f2,%es
		mov    %edx,%es:(%ebx)
		mov    %ecx,%es:0x4(%ebx)
		call   func_638fb
		jmp    jump_63890
	jump_63818:
		cmpb   $0x0,data_75662
		jne    jump_6383c
		mov    $0x2507,%ax
		push   %ds
		mov    %cs,%cx
		mov    %ecx,%ds
		lea    func___int7,%edx
		int    $0x21
		pop    %ds
		mov    $0x4,%al
		mov    $0xf3,%ah
		int    $0x21
		jmp    jump_63890
	jump_6383c:
		cmpb   $0x9,data_75662
		jne    jump_63864
		call   func_63891
		mov    %edx,(%ebx)
		mov    %ecx,0x4(%ebx)
		mov    $0xe02,%eax
		mov    $0x4,%ebx
		mov    data_755ec,%ecx
		call   *0x30(%ecx)
		jmp    jump_63890
	jump_63864:
		cmpb   $0x1,data_75662
		jne    jump_6387d
		mov    data_755f0,%dx
		sub    %eax,%eax
		call   func___hook387
		jmp    jump_63890
	jump_6387d:
		sub    %dx,%dx
		sub    %eax,%eax
		call   func___hook387
		cmp    $0x1,%al
		je     jump_63890
		call   func_638ae
	jump_63890:
		ret


/*----------------------------------------------------------------*/
func_63891:
/*----------------------------------------------------------------*/
		lea    func___int7,%ecx
		mov    %cs,%dx
		shl    $0x10,%edx
		mov    %cx,%dx
		mov    %cs,%cx
		and    $0x3,%cl
		shl    $0xd,%cx
		or     $0x8e,%ch
		ret


/*----------------------------------------------------------------*/
func_638ae:
/*----------------------------------------------------------------*/
		mov    $0x7,%cl
		mov    $0x2502,%ax
		int    $0x21
		mov    %ebx,data_75934
		data16 		mov    %es,data_75938
		cmpb   $0x3,data_75662
		mov    $0x7,%cl
		mov    $0x2504,%ax
		push   %ds
		push   %cs
		pop    %ds
		jl     jump_638e5
		lea    func___int7_pl3,%edx
		int    $0x21
		pop    %ds
		call   func_638fb
		jmp    jump_638fa
	jump_638e5:
		lea    func___int7,%edx
		int    $0x21
		pop    %ds
		mov    %cr0,%ecx
		or     $0x4,%ecx
		and    $0xfffffffd,%ecx
		mov    %ecx,%cr0
	jump_638fa:
		ret


/*----------------------------------------------------------------*/
func_638fb:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		lea    data_758f4,%edx
		mov    $0x2535,%ax
		int    $0x21
		orl    $0x4,data_758f4
		andl   $0xfffffffd,data_758f4
		inc    %ebx
		int    $0x21
		ret


/*----------------------------------------------------------------*/
func___sys_fini_387_emulator:	/* 0x6391b */
/*----------------------------------------------------------------*/
		cmpb   $0x1,data_7593c
		je     jump_63925
		ret
	jump_63925:
		push   %ecx
		push   %ebx
		push   %edx
		mov    data_75662,%al
		cmpb   $0x0,data_75664
		je     jump_6393d
		call   func_639d0
		jmp    jump_6398a
	jump_6393d:
		cmp    $0x9,%al
		jne    jump_63956
		mov    $0xe02,%eax
		mov    $0x0,%ebx
		mov    data_755ec,%ecx
		call   *0x30(%ecx)
		jmp    jump_6398a
	jump_63956:
		cmp    $0x0,%al
		jne    jump_63966
		mov    data_7593a,%ax
		mov    $0xf3,%ah
		int    $0x21
		jmp    jump_6398a
	jump_63966:
		cmp    $0x1,%al
		jne    jump_6397a
		mov    data_755f0,%dx
		sub    %eax,%eax
		call   func___unhook387
		jmp    jump_6398a
	jump_6397a:
		sub    %edx,%edx
		call   func___unhook387
		cmp    $0x1,%al
		je     jump_6398a
		call   func_63995
	jump_6398a:
		movb   $0x0,data_7593c
		pop    %edx
		pop    %ebx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_63995:
/*----------------------------------------------------------------*/
		mov    $0x7,%cl
		mov    $0x2504,%ax
		mov    data_75934,%edx
		push   %ds
		data16 		mov    data_75938,%ds
		int    $0x21
		pop    %ds
		cmpb   $0x3,data_75662
		jl     jump_639bc
		call   func_639d0
		jmp    jump_639cf
	jump_639bc:
		mov    %cr0,%ecx
		and    $0xfffffff9,%ecx
		mov    data_7593a,%dx
		or     %dx,%cx
		mov    %ecx,%cr0
	jump_639cf:
		ret


/*----------------------------------------------------------------*/
func_639d0:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		lea    data_758f4,%edx
		mov    $0x2535,%ax
		int    $0x21
		xor    %ecx,%ecx
		mov    data_7593a,%cx
		mov    %ecx,data_758f4
		inc    %ebx
		int    $0x21
		ret


/*----------------------------------------------------------------*/
func___save_8087_:	/* 0x639f1 */
/*----------------------------------------------------------------*/
		fsave  (%eax)
		fwait
		ret


/*----------------------------------------------------------------*/
func___rest_8087_:	/* 0x639f6 */
/*----------------------------------------------------------------*/
		frstor (%eax)
		fwait
		ret


/*----------------------------------------------------------------*/
func___init_8087_:	/* 0x639fa */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpb   $0x0,data_7560d
		je     jump_63a1b
		mov    $func___save_8087_,%edx
		mov    $func___rest_8087_,%ebx
		mov    %edx,data_759d8
		mov    %ebx,data_759dc
	jump_63a1b:
		xor    %eax,%eax
		mov    data_759d4,%ax
		call   func___init_80x87
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___chk8087_:	/* 0x63a35 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_7560c,%ah
		test   %ah,%ah
		jne    jump_63a73
		mov    %ah,data_7560d
		sub    %eax,%eax
		push   %eax
		fninit
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		cmp    $0x3,%al
		jne    jump_63a5e
		call   func___init_8087_
		mov    %al,%dl
	jump_63a5e:
		cmpb   $0x0,data_75660
		jne    jump_63a73
		mov    %dl,data_7560c
		mov    %dl,data_7560d
	jump_63a73:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___STOSB:	/* 0x63a80 */
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		je     jump_63ab0
		cmp    %dl,(%eax)
	jump_63a86:
		test   $0x3,%al
		je     jump_63a93
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x8,%edx
		dec    %ecx
		jne    jump_63a86
	jump_63a93:
		push   %ecx
		shr    $0x2,%ecx
		call   func___STOSD
		pop    %ecx
		and    $0x3,%ecx
		je     jump_63ab0
		mov    %dl,(%eax)
		dec    %ecx
		je     jump_63ab0
		mov    %dh,0x1(%eax)
		dec    %ecx
		je     jump_63ab0
		mov    %dl,0x2(%eax)
	jump_63ab0:
		ret


/*----------------------------------------------------------------*/
func___STOSD:	/* 0x63ab7 */
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		je     jump_63b22
	jump_63abb:
		test   $0x1f,%al
		je     jump_63ac7
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		jne    jump_63abb
	jump_63ac7:
		push   %ecx
		shr    $0x2,%ecx
		je     jump_63b07
		dec    %ecx
		je     jump_63af9
	jump_63ad0:
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		dec    %ecx
		mov    %edx,0x8(%eax)
		mov    %edx,0xc(%eax)
		je     jump_63af6
		cmp    %dl,0x20(%eax)
		mov    %edx,0x10(%eax)
		mov    %edx,0x14(%eax)
		dec    %ecx
		mov    %edx,0x18(%eax)
		mov    %edx,0x1c(%eax)
		lea    0x20(%eax),%eax
		jne    jump_63ad0
		lea    -0x10(%eax),%eax
	jump_63af6:
		lea    0x10(%eax),%eax
	jump_63af9:
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		mov    %edx,0x8(%eax)
		mov    %edx,0xc(%eax)
		lea    0x10(%eax),%eax
	jump_63b07:
		pop    %ecx
		and    $0x3,%ecx
		je     jump_63b22
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		je     jump_63b22
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		je     jump_63b22
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
	jump_63b22:
		ret


/*----------------------------------------------------------------*/
func___prtf_:	/* 0x63b23 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x4c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x44(%esp)
		xor    %bl,%bl
		mov    %eax,0x28(%esp)
		mov    %bl,0x48(%esp)
		mov    %bl,0x3c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x38(%esp)
		mov    $0x4,%ebp
		jmp    jump_63ba6
	jump_63b4d:
		lea    0x28(%esp),%ebx
		mov    %esi,%edx
		call   func_getprintspecs_
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x3d(%esp)
		test   %al,%al
		je     jump_63d98
		cmp    $0x6e,%al
		jne    jump_63c48
		mov    0x3c(%esp),%bl
		test   $0x20,%bl
		je     jump_63bd3
		test   $0x80,%bl
		je     jump_63b92
		mov    (%esi),%ecx
		add    $0x8,%ecx
		mov    %ecx,(%esi)
		les    -0x8(%ecx),%edx
	jump_63b89:
		mov    0x38(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    jump_63ba6
	jump_63b92:
		test   $0x40,%bl
		je     jump_63bc8
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x4(%ebx),%edx
	jump_63ba0:
		mov    0x38(%esp),%eax
		mov    %eax,(%edx)
	jump_63ba6:
		mov    (%edi),%cl
		test   %cl,%cl
		je     jump_63d98
		lea    0x1(%edi),%eax
		cmp    $0x25,%cl
		je     jump_63b4d
		mov    %eax,%edi
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %cl,%dl
		call   *0x44(%esp)
		jmp    jump_63ba6
	jump_63bc8:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		jmp    jump_63ba0
	jump_63bd3:
		test   $0x10,%bl
		je     jump_63c13
		test   $0x80,%bl
		je     jump_63bf1
		mov    (%esi),%eax
		add    $0x8,%eax
		mov    %eax,(%esi)
		les    -0x8(%eax),%edx
		mov    0x38(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    jump_63ba6
	jump_63bf1:
		test   $0x40,%bl
		je     jump_63c08
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x4(%ecx),%edx
	jump_63bff:
		mov    0x38(%esp),%eax
		mov    %ax,(%edx)
		jmp    jump_63ba6
	jump_63c08:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x4(%ebx),%edx
		jmp    jump_63bff
	jump_63c13:
		test   $0x80,%bl
		je     jump_63c27
		mov    (%esi),%edx
		add    $0x8,%edx
		mov    %edx,(%esi)
		les    -0x8(%edx),%edx
		jmp    jump_63b89
	jump_63c27:
		test   $0x40,%bl
		je     jump_63c3a
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x4(%eax),%edx
		jmp    jump_63ba0
	jump_63c3a:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x4(%ecx),%edx
		jmp    jump_63ba0
	jump_63c48:
		mov    %esp,%eax
		lea    0x28(%esp),%ebx
		lea    0x48(%esp),%ecx
		mov    %esi,%edx
		call   func_formstring_
		mov    %edx,%es
		mov    0x3c(%esp),%dl
		mov    %eax,%ebx
		test   $0x8,%dl
		jne    jump_63c8a
		cmpb   $0x20,0x3e(%esp)
		jne    jump_63c8a
	jump_63c6d:
		mov    0x2c(%esp),%eax
		dec    %eax
		mov    %eax,0x2c(%esp)
		test   %eax,%eax
		jl     jump_63c8a
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    0x3e(%esp),%dl
		call   *0x44(%esp)
		jmp    jump_63c6d
	jump_63c8a:
		lea    0x3f(%esp),%ecx
	jump_63c8e:
		mov    (%ecx),%al
		test   %al,%al
		je     jump_63ca3
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x28(%esp),%eax
		inc    %ecx
		call   *0x44(%esp)
		jmp    jump_63c8e
	jump_63ca3:
		mov    0x34(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x34(%esp)
		test   %eax,%eax
		je     jump_63cc1
		lea    0x28(%esp),%eax
		mov    $0x30,%edx
		call   *0x44(%esp)
		jmp    jump_63ca3
	jump_63cc1:
		testb  $0x8,0x3c(%esp)
		jne    jump_63cec
		cmpb   $0x20,0x3e(%esp)
		je     jump_63cec
	jump_63ccf:
		mov    0x2c(%esp),%eax
		dec    %eax
		mov    %eax,0x2c(%esp)
		test   %eax,%eax
		jl     jump_63cec
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    0x3e(%esp),%dl
		call   *0x44(%esp)
		jmp    jump_63ccf
	jump_63cec:
		mov    0x3d(%esp),%dh
		cmp    $0x73,%dh
		je     jump_63cfa
		cmp    $0x53,%dh
		jne    jump_63d41
	jump_63cfa:
		testb  $0x20,0x3c(%esp)
		je     jump_63d22
	jump_63d01:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x30(%esp)
		test   %eax,%eax
		je     jump_63d60
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		add    $0x2,%ebx
		jmp    jump_63d01
	jump_63d22:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%edx
		mov    %edx,0x30(%esp)
		test   %eax,%eax
		je     jump_63d60
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		inc    %ebx
		jmp    jump_63d22
	jump_63d41:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x30(%esp)
		test   %eax,%eax
		je     jump_63d60
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		inc    %ebx
		jmp    jump_63d41
	jump_63d60:
		testb  $0x8,0x3c(%esp)
		je     jump_63ba6
		cmpl   $0x0,0x2c(%esp)
		jle    jump_63ba6
	jump_63d76:
		mov    0x2c(%esp),%eax
		lea    -0x1(%eax),%edx
		mov    %edx,0x2c(%esp)
		test   %eax,%eax
		je     jump_63ba6
		lea    0x28(%esp),%eax
		mov    $0x20,%edx
		call   *0x44(%esp)
		jmp    jump_63d76
	jump_63d98:
		mov    0x38(%esp),%eax
		add    $0x4c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_getprintspecs_:	/* 0x63da4 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x0,0x17(%ebx)
		mov    %ebx,%edx
		movb   $0x20,0x16(%ebx)
		call   func_evalflags_
		movl   $0x0,0x4(%ebx)
		mov    (%eax),%cl
		mov    %eax,%edx
		cmp    $0x30,%cl
		jb     jump_63dec
		cmp    $0x39,%cl
		ja     jump_63dec
	jump_63dcd:
		imul   $0xa,0x4(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x30,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x4(%ebx)
		mov    (%eax),%cl
		cmp    $0x30,%cl
		jb     jump_63e13
		cmp    $0x39,%cl
		jbe    jump_63dcd
		jmp    jump_63e13
	jump_63dec:
		cmpb   $0x2a,(%eax)
		jne    jump_63e13
		mov    (%esi),%edx
		add    $0x4,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		mov    %edx,0x4(%ebx)
		test   %edx,%edx
		jge    jump_63e12
		mov    %edx,%edi
		mov    0x14(%ebx),%dh
		neg    %edi
		or     $0x8,%dh
		mov    %edi,0x4(%ebx)
		mov    %dh,0x14(%ebx)
	jump_63e12:
		inc    %eax
	jump_63e13:
		movl   $0xffffffff,0x8(%ebx)
		cmpb   $0x2e,(%eax)
		jne    jump_63e66
		inc    %eax
		movl   $0x0,0x8(%ebx)
		cmpb   $0x2a,(%eax)
		jne    jump_63e47
		mov    (%esi),%edx
		add    $0x4,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		mov    %edx,0x8(%ebx)
		test   %edx,%edx
		jge    jump_63e44
		movl   $0xffffffff,0x8(%ebx)
	jump_63e44:
		inc    %eax
		jmp    jump_63e66
	jump_63e47:
		mov    (%eax),%cl
		cmp    $0x30,%cl
		jb     jump_63e66
		cmp    $0x39,%cl
		ja     jump_63e66
		imul   $0xa,0x8(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x30,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x8(%ebx)
		jmp    jump_63e47
	jump_63e66:
		mov    (%eax),%cl
		lea    0x1(%eax),%edx
		cmp    $0x4e,%cl
		jb     jump_63e8b
		jbe    jump_63ec8
		cmp    $0x6c,%cl
		jb     jump_63e82
		jbe    jump_63e9b
		cmp    $0x77,%cl
		je     jump_63e9b
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63e82:
		cmp    $0x68,%cl
		je     jump_63ea9
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63e8b:
		cmp    $0x46,%cl
		jb     jump_63ed3
		jbe    jump_63ec2
		cmp    $0x4c,%cl
		je     jump_63eb8
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63e9b:
		mov    0x14(%ebx),%dl
		or     $0x20,%dl
		inc    %eax
		mov    %dl,0x14(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63ea9:
		mov    0x14(%ebx),%cl
		or     $0x10,%cl
		mov    %edx,%eax
		mov    %cl,0x14(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63eb8:
		orb    $0x40,0x14(%ebx)
	jump_63ebc:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_63ec2:
		orb    $0x80,0x14(%ebx)
		jmp    jump_63ebc
	jump_63ec8:
		mov    0x14(%ebx),%ch
		or     $0x40,%ch
		mov    %edx,%eax
		mov    %ch,0x14(%ebx)
	jump_63ed3:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_evalflags_:	/* 0x63ed7 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		movb   $0x0,0x14(%edx)
	jump_63edd:
		mov    (%eax),%bl
		cmp    $0x2d,%bl
		jne    jump_63eea
		orb    $0x8,0x14(%edx)
		jmp    jump_63f2c
	jump_63eea:
		cmp    $0x23,%bl
		jne    jump_63ef5
		orb    $0x1,0x14(%edx)
		jmp    jump_63f2c
	jump_63ef5:
		cmp    $0x2b,%bl
		jne    jump_63f0d
		mov    0x14(%edx),%ch
		or     $0x4,%ch
		mov    %ch,%bl
		mov    %ch,0x14(%edx)
		and    $0xfd,%bl
		mov    %bl,0x14(%edx)
		jmp    jump_63f2c
	jump_63f0d:
		cmp    $0x20,%bl
		jne    jump_63f24
		mov    0x14(%edx),%bh
		test   $0x4,%bh
		jne    jump_63f2c
		mov    %bh,%cl
		or     $0x2,%cl
		mov    %cl,0x14(%edx)
		jmp    jump_63f2c
	jump_63f24:
		cmp    $0x30,%bl
		jne    jump_63f2f
		mov    %bl,0x16(%edx)
	jump_63f2c:
		inc    %eax
		jmp    jump_63edd
	jump_63f2f:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_far_strlen_:	/* 0x63f32 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %eax,%edx
		xor    %eax,%eax
	jump_63f3e:
		mov    %esi,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%cl
		inc    %edx
		test   %cl,%cl
		je     jump_63f51
		cmp    %edi,%eax
		je     jump_63f51
		inc    %eax
		jmp    jump_63f3e
	jump_63f51:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_far_other_strlen_:	/* 0x63f56 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%esi
		mov    %eax,%edx
		xor    %eax,%eax
	jump_63f62:
		mov    %ecx,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%di
		add    $0x2,%edx
		test   %di,%di
		je     jump_63f51
		cmp    %esi,%eax
		je     jump_63f51
		inc    %eax
		jmp    jump_63f62


/*----------------------------------------------------------------*/
func_fmt4hex_:	/* 0x63f79 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x10,%ebx
		mov    %ebp,%edi
		call   func_itoa_
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ecx,%esi
		mov    %ebp,%edi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    jump_63fb9
	jump_63fb1:
		dec    %edx
		dec    %esi
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx
	jump_63fb9:
		cmp    %edi,%edx
		jne    jump_63fb1
		lea    (%eax,%ebp,1),%edx
	jump_63fc0:
		test   %eax,%eax
		jl     jump_63fcb
		dec    %eax
		movb   $0x30,(%edx)
		dec    %edx
		jmp    jump_63fc0
	jump_63fcb:
		add    (%esp),%ebp
		movb   $0x0,0x0(%ebp)
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_FixedPoint_Format_:	/* 0x63fda */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    jump_63ff6
		neg    %edx
		lea    0x1(%eax),%ecx
		movb   $0x2d,(%eax)
		mov    %edx,(%esp)
	jump_63ff6:
		cmpl   $0xffffffff,0x8(%esi)
		jne    jump_64003
		movl   $0x4,0x8(%esi)
	jump_64003:
		mov    $0xa,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x2(%esp),%ax
		call   func_itoa_
		mov    %ecx,%ebx
	jump_64018:
		mov    (%ecx),%ah
		lea    0x1(%ecx),%edx
		test   %ah,%ah
		je     jump_64025
		mov    %edx,%ecx
		jmp    jump_64018
	jump_64025:
		cmpl   $0x0,0x8(%esi)
		je     jump_64057
		movb   $0x2e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    jump_6404f
	jump_64034:
		xor    %edx,%edx
		mov    %dx,0x2(%esp)
		mov    (%esp),%edi
		imul   $0xa,%edi,%edx
		mov    %edx,(%esp)
		mov    0x2(%esp),%dl
		add    $0x30,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx
	jump_6404f:
		cmp    0x8(%esi),%eax
		jl     jump_64034
		movb   $0x0,(%ecx)
	jump_64057:
		testb  $0x80,0x1(%esp)
		je     jump_640ae
	jump_6405e:
		cmp    %ebx,%ecx
		jne    jump_64094
		lea    0x1(%ebx),%ecx
		movb   $0x31,(%ebx)
	jump_64068:
		mov    (%ecx),%dl
		lea    0x1(%ecx),%eax
		cmp    $0x30,%dl
		jne    jump_64076
		mov    %eax,%ecx
		jmp    jump_64068
	jump_64076:
		cmp    $0x2e,%dl
		jne    jump_6408b
		movb   $0x30,(%ecx)
		lea    0x1(%eax),%ecx
		mov    %dl,(%eax)
	jump_64083:
		cmpb   $0x30,(%ecx)
		jne    jump_6408b
		inc    %ecx
		jmp    jump_64083
	jump_6408b:
		movb   $0x30,(%ecx)
		inc    %ecx
		movb   $0x0,(%ecx)
		jmp    jump_640ae
	jump_64094:
		dec    %ecx
		cmpb   $0x2e,(%ecx)
		jne    jump_6409b
		dec    %ecx
	jump_6409b:
		mov    (%ecx),%al
		cmp    $0x39,%al
		je     jump_640a9
		mov    %al,%ah
		inc    %ah
		mov    %ah,(%ecx)
		jmp    jump_640ae
	jump_640a9:
		movb   $0x30,(%ecx)
		jmp    jump_6405e
	jump_640ae:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_float_format_:	/* 0x640b5 */
/*----------------------------------------------------------------*/
		call   *data_7594c
		ret


/*----------------------------------------------------------------*/
func_formstring_:	/* 0x640bc */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    $0x1,%ebx
		mov    %ds,%eax
		mov    %edi,%ecx
		mov    %ebx,0x4(%esp)
		mov    %eax,%es
		mov    0x15(%esi),%al
		movl   $0x0,0xc(%esi)
		cmp    $0x69,%al
		jb     jump_640fd
		jbe    jump_6413d
		cmp    $0x75,%al
		jb     jump_640f9
		jbe    jump_64109
		cmp    $0x78,%al
	jump_640f5:
		je     jump_64109
		jmp    jump_64147
	jump_640f9:
		cmp    $0x6f,%al
		jmp    jump_640f5
	jump_640fd:
		cmp    $0x58,%al
		jb     jump_64147
		jbe    jump_64109
		cmp    $0x64,%al
		je     jump_6413d
		jmp    jump_64147
	jump_64109:
		mov    0x14(%esi),%ah
		test   $0x20,%ah
		je     jump_6411d
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%ebp
		jmp    jump_64139
	jump_6411d:
		test   $0x10,%ah
		je     jump_6412f
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		movzwl -0x4(%eax),%ebp
		jmp    jump_64139
	jump_6412f:
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    -0x4(%ebp),%ebp
	jump_64139:
		andb   $0xf9,0x14(%esi)
	jump_6413d:
		cmpl   $0xffffffff,0x8(%esi)
		je     jump_64147
		movb   $0x20,0x16(%esi)
	jump_64147:
		mov    0x15(%esi),%al
		mov    $0xa,%ebx
		cmp    $0x65,%al
		jb     jump_641ac
		jbe    jump_6421d
		cmp    $0x6f,%al
		jb     jump_64195
		jbe    jump_64231
		cmp    $0x73,%al
		jb     jump_64188
		jbe    jump_642ac
		cmp    $0x75,%al
		jb     jump_64440
		jbe    jump_64375
		cmp    $0x78,%al
		je     jump_64358
		jmp    jump_64440
	jump_64188:
		cmp    $0x70,%al
		je     jump_64394
		jmp    jump_64440
	jump_64195:
		cmp    $0x67,%al
		jb     jump_641f3
		jbe    jump_6421d
		cmp    $0x69,%al
		je     jump_6426c
		jmp    jump_64440
	jump_641ac:
		cmp    $0x50,%al
		jb     jump_641e0
		jbe    jump_64394
		cmp    $0x58,%al
		jb     jump_641d3
		jbe    jump_64358
		cmp    $0x63,%al
		jb     jump_64440
		jbe    jump_64413
		jmp    jump_6426c
	jump_641d3:
		cmp    $0x53,%al
		je     jump_642ac
		jmp    jump_64440
	jump_641e0:
		cmp    $0x46,%al
		jb     jump_641ef
		jbe    jump_641f3
		cmp    $0x47,%al
	jump_641e8:
		je     jump_6421d
		jmp    jump_64440
	jump_641ef:
		cmp    $0x45,%al
		jmp    jump_641e8
	jump_641f3:
		testb  $0x10,0x14(%esi)
		je     jump_6421d
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    %edi,%eax
		mov    -0x4(%ebx),%edx
		mov    %esi,%ebx
		call   func_FixedPoint_Format_
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    jump_64262
	jump_6421d:
		mov    %edi,%eax
		mov    %esi,%ebx
		call   func_float_format_
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    jump_64262
	jump_64231:
		mov    0x14(%esi),%al
		mov    $0x8,%ebx
		test   $0x1,%al
		je     jump_64241
		movb   $0x30,(%edi)
		inc    %edi
	jump_64241:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   func_ltoa_
	jump_6424a:
		cmpl   $0x0,0x8(%esi)
		jne    jump_64259
		cmpb   $0x30,(%edi)
		jne    jump_64259
		movb   $0x0,%es:(%ecx)
	jump_64259:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax
	jump_64262:
		call   func_far_strlen_
		jmp    jump_6446a
	jump_6426c:
		mov    0x14(%esi),%al
		test   $0x20,%al
		je     jump_64286
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x4(%ebp),%eax
	jump_6427f:
		call   func_ltoa_
		jmp    jump_6424a
	jump_64286:
		test   $0x10,%al
		je     jump_64299
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    %edi,%edx
		movswl -0x4(%eax),%eax
		jmp    jump_6427f
	jump_64299:
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x4(%ebp),%eax
		call   func_itoa_
		jmp    jump_6424a
	jump_642ac:
		mov    0x14(%esi),%ah
		test   $0x80,%ah
		je     jump_642d6
		mov    (%edx),%ecx
		add    $0x8,%ecx
		mov    %ecx,(%edx)
		mov    -0x4(%ecx),%dx
		mov    -0x8(%ecx),%ecx
		test   %ecx,%ecx
		jne    jump_642cb
		test   %dx,%dx
		je     jump_642cf
	jump_642cb:
		mov    %edx,%es
		jmp    jump_64302
	jump_642cf:
		mov    %ds,%eax
		mov    (%esp),%ecx
		jmp    jump_64300
	jump_642d6:
		test   $0x40,%ah
		je     jump_642ed
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%ecx
		test   %ecx,%ecx
		je     jump_642cf
	jump_642e9:
		mov    %ds,%eax
		jmp    jump_64300
	jump_642ed:
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    -0x4(%eax),%ecx
		test   %ecx,%ecx
		jne    jump_642e9
		mov    %ds,%eax
		mov    (%esp),%ecx
	jump_64300:
		mov    %eax,%es
	jump_64302:
		mov    0x14(%esi),%bh
		mov    0x15(%esi),%al
		xor    %edi,%edi
		and    $0xf9,%bh
		mov    %edi,0x4(%esp)
		mov    %bh,0x14(%esi)
		cmp    $0x53,%al
		jne    jump_64336
		test   $0x20,%bh
		je     jump_6432b
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x2,%ecx
		jmp    jump_6446a
	jump_6432b:
		xor    %eax,%eax
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    jump_6446a
	jump_64336:
		test   $0x20,%bh
		je     jump_6434c
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x8(%esi),%ebx
		call   func_far_other_strlen_
		jmp    jump_6446a
	jump_6434c:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x8(%esi),%ebx
		jmp    jump_64262
	jump_64358:
		testb  $0x1,0x14(%esi)
		je     jump_64370
		test   %ebp,%ebp
		je     jump_64370
		movb   $0x30,0x17(%esi)
		mov    0x15(%esi),%al
		movb   $0x0,0x19(%esi)
		mov    %al,0x18(%esi)
	jump_64370:
		mov    $0x10,%ebx
	jump_64375:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   func_ultoa_
		cmpb   $0x58,0x15(%esi)
		jne    jump_6424a
		mov    %edi,%eax
		call   func_zupstr_
		jmp    jump_6424a
	jump_64394:
		cmpl   $0x0,0x4(%esi)
		jne    jump_643b0
		testb  $0x80,0x14(%esi)
		je     jump_643a9
		movl   $0xd,0x4(%esi)
		jmp    jump_643b0
	jump_643a9:
		movl   $0x8,0x4(%esi)
	jump_643b0:
		andb   $0xf9,0x14(%esi)
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    0x14(%esi),%bl
		mov    -0x4(%eax),%ebp
		test   $0x80,%bl
		je     jump_643ef
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    $0x4,%ebx
		mov    -0x4(%eax),%eax
		mov    %edi,%edx
		and    $0xffff,%eax
		call   func_fmt4hex_
		mov    $0x8,%ebx
		lea    0x5(%edi),%edx
		mov    %ebp,%eax
		movb   $0x3a,0x4(%edi)
		jmp    jump_643f8
	jump_643ef:
		mov    $0x8,%ebx
		mov    %ebp,%eax
		mov    %edi,%edx
	jump_643f8:
		call   func_fmt4hex_
		cmpb   $0x50,0x15(%esi)
		jne    jump_64259
		mov    %edi,%eax
		call   func_zupstr_
		jmp    jump_64259
	jump_64413:
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%al
		movb   $0x0,0x1(%edi)
		mov    %al,(%edi)
		movl   $0x1,0x8(%esi)
		mov    $0x1,%eax
		mov    0x14(%esi),%dh
		xor    %edi,%edi
		and    $0xf9,%dh
		mov    %edi,0x4(%esp)
		mov    %dh,0x14(%esi)
		jmp    jump_6446a
	jump_64440:
		movl   $0x0,0x4(%esi)
		mov    0x15(%esi),%al
		movb   $0x0,0x1(%edi)
		mov    %al,(%edi)
		movl   $0x1,0x8(%esi)
		mov    0x14(%esi),%al
		xor    %edi,%edi
		and    $0xf9,%al
		mov    %edi,0x4(%esp)
		mov    %al,0x14(%esi)
		mov    $0x1,%eax
	jump_6446a:
		cmpl   $0x0,0x4(%esp)
		je     jump_644b0
		mov    %es:(%ecx),%dl
		cmp    $0x2d,%dl
		jne    jump_64484
		inc    %ecx
		movb   $0x0,0x18(%esi)
		dec    %eax
		mov    %dl,0x17(%esi)
		jmp    jump_6449f
	jump_64484:
		mov    0x14(%esi),%dh
		test   $0x2,%dh
		je     jump_64492
		movb   $0x20,0x17(%esi)
		jmp    jump_6449b
	jump_64492:
		test   $0x4,%dh
		je     jump_6449f
		movb   $0x2b,0x17(%esi)
	jump_6449b:
		movb   $0x0,0x18(%esi)
	jump_6449f:
		mov    0x8(%esi),%edx
		cmp    %edx,%eax
		jle    jump_644ab
		mov    %eax,0x8(%esi)
		jmp    jump_644b0
	jump_644ab:
		sub    %eax,%edx
		mov    %edx,0xc(%esi)
	jump_644b0:
		cmpb   $0x2a,0x16(%esi)
		jne    jump_644c3
		mov    0x14(%esi),%dl
		movb   $0x0,0x17(%esi)
		and    $0xf9,%dl
		mov    %dl,0x14(%esi)
	jump_644c3:
		mov    0x8(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     jump_644cf
		cmp    %ebx,%eax
		jge    jump_644d8
	jump_644cf:
		cmpb   $0x63,0x15(%esi)
		je     jump_644d8
		mov    %eax,0x8(%esi)
	jump_644d8:
		mov    $0xffffffff,%ebx
		lea    0x17(%esi),%eax
		mov    %ds,%edx
		call   func_far_strlen_
		mov    0x8(%esi),%ebp
		mov    0xc(%esi),%edx
		add    %ebp,%eax
		mov    0x4(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x4(%esi)
		add    $0x8,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_zupstr_:	/* 0x64505 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
	jump_64508:
		cmpb   $0x0,(%edx)
		je     jump_6451b
		xor    %eax,%eax
		mov    (%edx),%al
		call   func_toupper_
		mov    %al,(%edx)
		inc    %edx
		jmp    jump_64508
	jump_6451b:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_isatty_:	/* 0x6451d */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x0,%al
		mov    $0x44,%ah
		int    $0x21
		rcl    %edx
		ror    %edx
		test   $0x80,%dl
		setne  %al
		and    $0xff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_strncpy_:	/* 0x6453b */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		jmp    jump_6454c
	jump_64541:
		mov    (%edx),%cl
		test   %cl,%cl
		je     jump_64550
		inc    %edx
		dec    %ebx
		mov    %cl,(%eax)
		inc    %eax
	jump_6454c:
		test   %ebx,%ebx
		jne    jump_64541
	jump_64550:
		test   %ebx,%ebx
		je     jump_6455b
		dec    %ebx
		movb   $0x0,(%eax)
		inc    %eax
		jmp    jump_64550
	jump_6455b:
		mov    %esi,%eax
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_64560:
/*----------------------------------------------------------------*/
		mov    %esp,%eax
		sub    data_75644,%eax
		ret


/*----------------------------------------------------------------*/
func___int386x_:	/* 0x6456a */
/*----------------------------------------------------------------*/
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   func_645a2
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x8(%ebp),%edi
		mov    0xc(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x4(%edi)
		mov    %ecx,0x8(%edi)
		mov    %edx,0xc(%edi)
		mov    %esi,0x10(%edi)
		popl   0x14(%edi)
		sbb    %eax,%eax
		mov    %eax,0x18(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x6(%ebx)
		data16 		mov    %es,(%ebx)
		pop    %es
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_645a2:
/*----------------------------------------------------------------*/
		lea    (%esi,%esi,2),%esi
#if 1
		lea    data_64648(%esi),%eax
#else
		lea    data_64648(%esi),%eax
#endif
		push   %eax
		mov    (%ebx),%es
		mov    0x6(%ebx),%bp
		mov    (%edi),%eax
		mov    0x4(%edi),%ebx
		mov    0x8(%edi),%ecx
		mov    0xc(%edi),%edx
		mov    0x10(%edi),%esi
		mov    0x14(%edi),%edi
		mov    %ebp,%ds
		ret
.data
data_64648:
		.ascii  "\xcd\x00\xc3\xcd\x01\xc3\xcd\x02"
		.ascii  "\xc3\xcc\x90\xc3\xcd\x04\xc3\xcd"
		.ascii  "\x05\xc3\xcd\x06\xc3\xcd\x07\xc3"
		.ascii  "\xcd\x08\xc3\xcd\x09\xc3\xcd\x0a"
		.ascii  "\xc3\xcd\x0b\xc3\xcd\x0c\xc3\xcd"
		.ascii  "\x0d\xc3\xcd\x0e\xc3\xcd\x0f\xc3"
		.ascii  "\xcd\x10\xc3\xcd\x11\xc3\xcd\x12"
		.ascii  "\xc3\xcd\x13\xc3\xcd\x14\xc3\xcd"
		.ascii  "\x15\xc3\xcd\x16\xc3\xcd\x17\xc3"
		.ascii  "\xcd\x18\xc3\xcd\x19\xc3\xcd\x1a"
		.ascii  "\xc3\xcd\x1b\xc3\xcd\x1c\xc3\xcd"
		.ascii  "\x1d\xc3\xcd\x1e\xc3\xcd\x1f\xc3"
		.ascii  "\xcd\x20\xc3\xcd\x21\xc3\xcd\x22"
		.ascii  "\xc3\xcd\x23\xc3\xcd\x24\xc3\xcd"
		.ascii  "\x25\xc3\xcd\x26\xc3\xcd\x27\xc3"
		.ascii  "\xcd\x28\xc3\xcd\x29\xc3\xcd\x2a"
		.ascii  "\xc3\xcd\x2b\xc3\xcd\x2c\xc3\xcd"
		.ascii  "\x2d\xc3\xcd\x2e\xc3\xcd\x2f\xc3"
		.ascii  "\xcd\x30\xc3\xcd\x31\xc3\xcd\x32"
		.ascii  "\xc3\xcd\x33\xc3\xcd\x34\xc3\xcd"
		.ascii  "\x35\xc3\xcd\x36\xc3\xcd\x37\xc3"
		.ascii  "\xcd\x38\xc3\xcd\x39\xc3\xcd\x3a"
		.ascii  "\xc3\xcd\x3b\xc3\xcd\x3c\xc3\xcd"
		.ascii  "\x3d\xc3\xcd\x3e\xc3\xcd\x3f\xc3"
		.ascii  "\xcd\x40\xc3\xcd\x41\xc3\xcd\x42"
		.ascii  "\xc3\xcd\x43\xc3\xcd\x44\xc3\xcd"
		.ascii  "\x45\xc3\xcd\x46\xc3\xcd\x47\xc3"
		.ascii  "\xcd\x48\xc3\xcd\x49\xc3\xcd\x4a"
		.ascii  "\xc3\xcd\x4b\xc3\xcd\x4c\xc3\xcd"
		.ascii  "\x4d\xc3\xcd\x4e\xc3\xcd\x4f\xc3"
		.ascii  "\xcd\x50\xc3\xcd\x51\xc3\xcd\x52"
		.ascii  "\xc3\xcd\x53\xc3\xcd\x54\xc3\xcd"
		.ascii  "\x55\xc3\xcd\x56\xc3\xcd\x57\xc3"
		.ascii  "\xcd\x58\xc3\xcd\x59\xc3\xcd\x5a"
		.ascii  "\xc3\xcd\x5b\xc3\xcd\x5c\xc3\xcd"
		.ascii  "\x5d\xc3\xcd\x5e\xc3\xcd\x5f\xc3"
		.ascii  "\xcd\x60\xc3\xcd\x61\xc3\xcd\x62"
		.ascii  "\xc3\xcd\x63\xc3\xcd\x64\xc3\xcd"
		.ascii  "\x65\xc3\xcd\x66\xc3\xcd\x67\xc3"
		.ascii  "\xcd\x68\xc3\xcd\x69\xc3\xcd\x6a"
		.ascii  "\xc3\xcd\x6b\xc3\xcd\x6c\xc3\xcd"
		.ascii  "\x6d\xc3\xcd\x6e\xc3\xcd\x6f\xc3"
		.ascii  "\xcd\x70\xc3\xcd\x71\xc3\xcd\x72"
		.ascii  "\xc3\xcd\x73\xc3\xcd\x74\xc3\xcd"
		.ascii  "\x75\xc3\xcd\x76\xc3\xcd\x77\xc3"
		.ascii  "\xcd\x78\xc3\xcd\x79\xc3\xcd\x7a"
		.ascii  "\xc3\xcd\x7b\xc3\xcd\x7c\xc3\xcd"
		.ascii  "\x7d\xc3\xcd\x7e\xc3\xcd\x7f\xc3"
		.ascii  "\xcd\x80\xc3\xcd\x81\xc3\xcd\x82"
		.ascii  "\xc3\xcd\x83\xc3\xcd\x84\xc3\xcd"
		.ascii  "\x85\xc3\xcd\x86\xc3\xcd\x87\xc3"
		.ascii  "\xcd\x88\xc3\xcd\x89\xc3\xcd\x8a"
		.ascii  "\xc3\xcd\x8b\xc3\xcd\x8c\xc3\xcd"
		.ascii  "\x8d\xc3\xcd\x8e\xc3\xcd\x8f\xc3"
		.ascii  "\xcd\x90\xc3\xcd\x91\xc3\xcd\x92"
		.ascii  "\xc3\xcd\x93\xc3\xcd\x94\xc3\xcd"
		.ascii  "\x95\xc3\xcd\x96\xc3\xcd\x97\xc3"
		.ascii  "\xcd\x98\xc3\xcd\x99\xc3\xcd\x9a"
		.ascii  "\xc3\xcd\x9b\xc3\xcd\x9c\xc3\xcd"
		.ascii  "\x9d\xc3\xcd\x9e\xc3\xcd\x9f\xc3"
		.ascii  "\xcd\xa0\xc3\xcd\xa1\xc3\xcd\xa2"
		.ascii  "\xc3\xcd\xa3\xc3\xcd\xa4\xc3\xcd"
		.ascii  "\xa5\xc3\xcd\xa6\xc3\xcd\xa7\xc3"
		.ascii  "\xcd\xa8\xc3\xcd\xa9\xc3\xcd\xaa"
		.ascii  "\xc3\xcd\xab\xc3\xcd\xac\xc3\xcd"
		.ascii  "\xad\xc3\xcd\xae\xc3\xcd\xaf\xc3"
		.ascii  "\xcd\xb0\xc3\xcd\xb1\xc3\xcd\xb2"
		.ascii  "\xc3\xcd\xb3\xc3\xcd\xb4\xc3\xcd"
		.ascii  "\xb5\xc3\xcd\xb6\xc3\xcd\xb7\xc3"
		.ascii  "\xcd\xb8\xc3\xcd\xb9\xc3\xcd\xba"
		.ascii  "\xc3\xcd\xbb\xc3\xcd\xbc\xc3\xcd"
		.ascii  "\xbd\xc3\xcd\xbe\xc3\xcd\xbf\xc3"
		.ascii  "\xcd\xc0\xc3\xcd\xc1\xc3\xcd\xc2"
		.ascii  "\xc3\xcd\xc3\xc3\xcd\xc4\xc3\xcd"
		.ascii  "\xc5\xc3\xcd\xc6\xc3\xcd\xc7\xc3"
		.ascii  "\xcd\xc8\xc3\xcd\xc9\xc3\xcd\xca"
		.ascii  "\xc3\xcd\xcb\xc3\xcd\xcc\xc3\xcd"
		.ascii  "\xcd\xc3\xcd\xce\xc3\xcd\xcf\xc3"
		.ascii  "\xcd\xd0\xc3\xcd\xd1\xc3\xcd\xd2"
		.ascii  "\xc3\xcd\xd3\xc3\xcd\xd4\xc3\xcd"
		.ascii  "\xd5\xc3\xcd\xd6\xc3\xcd\xd7\xc3"
		.ascii  "\xcd\xd8\xc3\xcd\xd9\xc3\xcd\xda"
		.ascii  "\xc3\xcd\xdb\xc3\xcd\xdc\xc3\xcd"
		.ascii  "\xdd\xc3\xcd\xde\xc3\xcd\xdf\xc3"
		.ascii  "\xcd\xe0\xc3\xcd\xe1\xc3\xcd\xe2"
		.ascii  "\xc3\xcd\xe3\xc3\xcd\xe4\xc3\xcd"
		.ascii  "\xe5\xc3\xcd\xe6\xc3\xcd\xe7\xc3"
		.ascii  "\xcd\xe8\xc3\xcd\xe9\xc3\xcd\xea"
		.ascii  "\xc3\xcd\xeb\xc3\xcd\xec\xc3\xcd"
		.ascii  "\xed\xc3\xcd\xee\xc3\xcd\xef\xc3"
		.ascii  "\xcd\xf0\xc3\xcd\xf1\xc3\xcd\xf2"
		.ascii  "\xc3\xcd\xf3\xc3\xcd\xf4\xc3\xcd"
		.ascii  "\xf5\xc3\xcd\xf6\xc3\xcd\xf7\xc3"
		.ascii  "\xcd\xf8\xc3\xcd\xf9\xc3\xcd\xfa"
		.ascii  "\xc3\xcd\xfb\xc3\xcd\xfc\xc3\xcd"
		.ascii  "\xfd\xc3\xcd\xfe\xc3\xcd\xff\xc3"
.text


/*----------------------------------------------------------------*/
func___getctime_:	/* 0x64948 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0xc,%esp
		mov    %eax,%ebx
		mov    $0x2a,%ah
		int    $0x21
		sub    $0x76c,%cx
		mov    %al,%ch
		shl    $0x10,%ecx
		mov    %dx,%cx
		mov    %ecx,0x4(%esp)
		xor    %eax,%eax
		mov    0x6(%esp),%al
		mov    %eax,0x14(%ebx)
		xor    %eax,%eax
		mov    0x5(%esp),%al
		dec    %eax
		mov    %eax,0x10(%ebx)
		xor    %eax,%eax
		mov    0x4(%esp),%al
		mov    %eax,0xc(%ebx)
		mov    $0x2c,%ah
		int    $0x21
		shl    $0x10,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x3(%esp),%al
		xor    %edx,%edx
		mov    %eax,0x8(%ebx)
		xor    %eax,%eax
		mov    (%esp),%dl
		mov    0x2(%esp),%al
		mov    %edx,%esi
		mov    %eax,0x4(%ebx)
		xor    %eax,%eax
		shl    $0x2,%esi
		mov    0x1(%esp),%al
		add    %edx,%esi
		mov    %eax,(%ebx)
		mov    $0x2a,%ah
		int    $0x21
		sub    $0x76c,%cx
		mov    %al,%ch
		shl    $0x10,%ecx
		mov    %dx,%cx
		mov    %ecx,0x8(%esp)
		mov    0x4(%esp),%ah
		mov    0x8(%esp),%al
		add    %esi,%esi
		cmp    %ah,%al
		je     jump_649fa
		cmpl   $0x17,0x8(%ebx)
		je     jump_649fa
		xor    %eax,%eax
		mov    0xa(%esp),%al
		mov    %eax,0x14(%ebx)
		xor    %eax,%eax
		mov    0x9(%esp),%al
		dec    %eax
		mov    %eax,0x10(%ebx)
		xor    %eax,%eax
		mov    0x8(%esp),%al
		mov    %eax,0xc(%ebx)
	jump_649fa:
		mov    %esi,%eax
		movl   $0xffffffff,0x20(%ebx)
		add    $0xc,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_mktime_:	/* 0x64a0b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0xc,%esi
		mov    0x10(%ebp),%edx
		mov    0x10(%eax),%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    $data_788b0,%ebx
		mov    0x14(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    jump_64a3f
	jump_64a35:
		mov    $0xffffffff,%eax
		jmp    jump_64b58
	jump_64a3f:
		mov    0x10(%ebp),%eax
		mov    %eax,%edx
		mov    $0xc,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		add    %eax,%esi
	jump_64a50:
		test   %edi,%edi
		jge    jump_64a5a
		dec    %esi
		add    $0xc,%edi
		jmp    jump_64a50
	jump_64a5a:
		test   %esi,%esi
		jl     jump_64a35
		lea    0x76c(%esi),%eax
		call   func___leapyear_
		test   %eax,%eax
		je     jump_64a72
		mov    $data_788ca,%ebx
	jump_64a72:
		mov    %esi,%eax
		shl    $0x3,%eax
		add    %esi,%eax
		shl    $0x3,%eax
		add    %esi,%eax
		lea    0x3(%esi),%ecx
		mov    %eax,%edx
		shl    $0x2,%eax
		sar    $0x2,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0xc(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     jump_64a9f
		dec    %edi
	jump_64a9f:
		mov    0x8(%ebp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    0x4(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x0(%ebp),%esi
		shl    $0x2,%eax
		add    %eax,%esi
	jump_64ac0:
		test   %esi,%esi
		jge    jump_64acd
		dec    %edi
		add    $0x15180,%esi
		jmp    jump_64ac0
	jump_64acd:
		mov    %edi,%eax
		mov    %esi,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		call   func___brktime_
		call   func_tzset_
		mov    data_75a28,%edx
		mov    0x20(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    jump_64af5
		mov    %ebp,%eax
		call   func___isindst_
	jump_64af5:
		cmpl   $0x0,0x20(%ebp)
		jle    jump_64b01
		sub    data_75a2c,%esi
	jump_64b01:
		test   %esi,%esi
		jge    jump_64b0e
		dec    %edi
		add    $0x15180,%esi
		jmp    jump_64b01
	jump_64b0e:
		cmp    $0x63de,%edi
		jl     jump_64a35
		jne    jump_64b38
		mov    data_75a28,%eax
		sub    $0x15180,%esi
		test   %eax,%eax
		jle    jump_64a35
		test   %esi,%esi
		jge    jump_64b56
		jmp    jump_64a35
	jump_64b38:
		lea    -0x63df(%edi),%eax
		mov    %eax,%edi
		shl    $0x3,%edi
		sub    %eax,%edi
		shl    $0x5,%edi
		add    %eax,%edi
		shl    $0x7,%edi
		mov    %edi,%eax
		shl    $0x2,%edi
		sub    %eax,%edi
		add    %edi,%esi
	jump_64b56:
		mov    %esi,%eax
	jump_64b58:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___Init_Argv_:	/* 0x64b5f */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %esp,%ebx
		mov    data_75638,%eax
		xor    %edx,%edx
		call   func__SplitParms_
		mov    (%esp),%ecx
		lea    0x1(%eax),%ebp
		mov    data_75638,%edx
		mov    %ebp,%eax
		sub    %edx,%ecx
		shl    $0x2,%eax
		inc    %ecx
		mov    %eax,0x4(%esp)
		add    $0x4,%eax
		add    %ecx,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_64bf8
		mov    data_75638,%esi
		add    %ecx,%eax
		mov    %edx,%edi
		mov    %eax,data_75618
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    data_75618,%ecx
		mov    data_7563c,%eax
		mov    %esp,%ebx
		mov    %eax,(%ecx)
		add    $0x4,%ecx
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x4(%esp),%esi
		call   func__SplitParms_
		mov    data_75618,%edx
		add    %esi,%edx
		mov    %ebp,data_75614
		movl   $0x0,(%edx)
		jmp    jump_64c02
	jump_64bf8:
		mov    %eax,data_75618
		mov    %eax,data_75614
	jump_64c02:
		mov    data_75618,%eax
		mov    %ebp,data_128588
		mov    %eax,data_12858c
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__SplitParms_:	/* 0x64c1c */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %edx,%esi
		mov    %ebx,0x4(%esp)
		xor    %ecx,%ecx
	jump_64c2b:
		mov    (%eax),%dl
		cmp    $0x20,%dl
		je     jump_64c37
		cmp    $0x9,%dl
		jne    jump_64c3a
	jump_64c37:
		inc    %eax
		jmp    jump_64c2b
	jump_64c3a:
		test   %dl,%dl
		je     jump_64cf5
		cmp    $0x22,%dl
		jne    jump_64c86
		inc    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
	jump_64c4d:
		mov    (%eax),%bh
		cmp    $0x22,%bh
		je     jump_64cbb
		test   %bh,%bh
		je     jump_64cbb
		cmp    $0x5c,%bh
		jne    jump_64c72
		mov    0x1(%eax),%bl
		cmp    $0x22,%bl
		je     jump_64c71
		cmp    %bh,%bl
		jne    jump_64c72
	jump_64c71:
		inc    %eax
	jump_64c72:
		lea    0x1(%eax),%ebx
		test   %esi,%esi
		je     jump_64c82
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    jump_64c4d
	jump_64c82:
		mov    %ebx,%eax
		jmp    jump_64c4d
	jump_64c86:
		mov    %eax,(%esp)
		mov    %eax,%edx
	jump_64c8b:
		mov    (%eax),%bl
		test   %bl,%bl
		je     jump_64cbb
		cmp    $0x20,%bl
		je     jump_64cbb
		cmp    $0x9,%bl
		je     jump_64cbb
		cmp    $0x5c,%bl
		jne    jump_64ca7
		cmpb   $0x22,0x1(%eax)
		jne    jump_64ca7
		inc    %eax
	jump_64ca7:
		lea    0x1(%eax),%ebx
		test   %esi,%esi
		je     jump_64cb7
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    jump_64c8b
	jump_64cb7:
		mov    %ebx,%eax
		jmp    jump_64c8b
	jump_64cbb:
		lea    0x1(%eax),%ebp
		lea    0x1(%ecx),%edi
		test   %esi,%esi
		je     jump_64ce6
		shl    $0x2,%ecx
		lea    (%esi,%ecx,1),%ebx
		mov    (%esp),%ecx
		mov    %ecx,(%ebx)
		mov    (%eax),%bl
		mov    %edi,%ecx
		test   %bl,%bl
		jne    jump_64cdc
		mov    %bl,(%edx)
		jmp    jump_64cf5
	jump_64cdc:
		mov    %ebp,%eax
		movb   $0x0,(%edx)
		jmp    jump_64c2b
	jump_64ce6:
		mov    (%eax),%dl
		mov    %edi,%ecx
		test   %dl,%dl
		je     jump_64cf5
		mov    %ebp,%eax
		jmp    jump_64c2b
	jump_64cf5:
		mov    0x4(%esp),%edx
		mov    %eax,(%edx)
		mov    %ecx,%eax
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___fatal_runtime_error_:	/* 0x64d0a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   func___EnterWVIDEO_
		test   %eax,%eax
		jne    jump_64d24
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   func___do_exit_with_msg__
	jump_64d24:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___flush_:	/* 0x64d27 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0xd(%eax),%ah
		xor    %esi,%esi
		test   $0x10,%ah
		je     jump_64d94
		mov    0xd(%ecx),%bh
		and    $0xef,%bh
		mov    0xc(%ecx),%al
		mov    %bh,0xd(%ecx)
		test   $0x2,%al
		je     jump_64dd3
		cmpl   $0x0,0x8(%ecx)
		je     jump_64dd3
		mov    0x4(%ecx),%ebx
		mov    0x8(%ecx),%edx
		mov    0x10(%ecx),%eax
		call   func___qwrite_
		cmp    $0xffffffff,%eax
		jne    jump_64d75
		mov    0xc(%ecx),%dl
		or     $0x20,%dl
		mov    %eax,%esi
		mov    %dl,0xc(%ecx)
		jmp    jump_64dd3
	jump_64d75:
		cmp    0x4(%ecx),%eax
		je     jump_64dd3
		mov    $0xc,%eax
		call   func___set_errno_
		mov    0xc(%ecx),%ah
		or     $0x20,%ah
		mov    $0xffffffff,%esi
		mov    %ah,0xc(%ecx)
		jmp    jump_64dd3
	jump_64d94:
		cmpl   $0x0,0x8(%ecx)
		je     jump_64dd3
		mov    0xc(%ecx),%dl
		and    $0xef,%dl
		mov    0xd(%ecx),%dh
		mov    %dl,0xc(%ecx)
		test   $0x20,%dh
		jne    jump_64dd3
		mov    0x4(%ecx),%eax
		test   %eax,%eax
		je     jump_64dc3
		mov    %eax,%edx
		mov    $0x1,%ebx
		neg    %edx
		mov    0x10(%ecx),%eax
		call   w_dos_lseek
	jump_64dc3:
		cmp    $0xffffffff,%eax
		jne    jump_64dd3
		mov    0xc(%ecx),%bl
		or     $0x20,%bl
		mov    %eax,%esi
		mov    %bl,0xc(%ecx)
	jump_64dd3:
		mov    0x8(%ecx),%eax
		movl   $0x0,0x4(%ecx)
		mov    %eax,(%ecx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___delay_init_:	/* 0x64de6 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x2c,%ah
		int    $0x21
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx
	jump_64df4:
		mov    $0x2c,%ah
		int    $0x21
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     jump_64df4
		xor    %esi,%esi
		mov    %al,%bl
	jump_64e04:
		mov    $0x2c,%ah
		int    $0x21
		inc    %esi
		cmp    %dh,%bl
		je     jump_64e04
		mov    %esi,data_128580
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___freefp_:	/* 0x64f06 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $data_128584,%edx
	jump_64f10:
		mov    (%edx),%eax
		test   %eax,%eax
		je     jump_64f3b
		mov    0x4(%eax),%ecx
		cmp    %ecx,%ebx
		je     jump_64f21
		mov    %eax,%edx
		jmp    jump_64f10
	jump_64f21:
		mov    0xc(%ecx),%cl
		or     $0x3,%cl
		mov    %cl,0xc(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    data_12857c,%edx
		mov    %eax,data_12857c
		mov    %edx,(%eax)
	jump_64f3b:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___purgefp_:	/* 0x64f3f */
/*----------------------------------------------------------------*/
		push   %edx
	jump_64f40:
		mov    data_12857c,%edx
		test   %edx,%edx
		je     jump_64f5b
		mov    %edx,%eax
		mov    (%edx),%edx
		call   w_dos_free
		mov    %edx,data_12857c
		jmp    jump_64f40
	jump_64f5b:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___chktty_:	/* 0x64f5d */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x20,0xd(%eax)
		jne    jump_64f8a
		mov    0x10(%edx),%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_64f8a
		mov    0xd(%edx),%bl
		or     $0x20,%bl
		mov    %bl,0xd(%edx)
		test   $0x7,%bl
		jne    jump_64f8a
		mov    %bl,%cl
		or     $0x2,%cl
		mov    %cl,0xd(%edx)
	jump_64f8a:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___ioalloc_:	/* 0x64f8e */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   func___chktty_
		cmpl   $0x0,0x14(%edx)
		jne    jump_64fc3
		mov    0xd(%edx),%ah
		test   $0x2,%ah
		je     jump_64fae
		movl   $0x86,0x14(%edx)
		jmp    jump_64fc3
	jump_64fae:
		test   $0x4,%ah
		je     jump_64fbc
		movl   $0x1,0x14(%edx)
		jmp    jump_64fc3
	jump_64fbc:
		movl   $0x1000,0x14(%edx)
	jump_64fc3:
		mov    0x14(%edx),%eax
		call   w_dos_malloc
		mov    %eax,0x8(%edx)
		test   %eax,%eax
		jne    jump_64ff2
		lea    0x18(%edx),%eax
		mov    0xd(%edx),%cl
		movl   $0x1,0x14(%edx)
		and    $0xf8,%cl
		mov    %eax,0x8(%edx)
		mov    %cl,%ch
		mov    %cl,0xd(%edx)
		or     $0x4,%ch
		mov    %ch,0xd(%edx)
		jmp    jump_64ff6
	jump_64ff2:
		orb    $0x8,0xc(%edx)
	jump_64ff6:
		mov    0x8(%edx),%eax
		movl   $0x0,0x4(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_65005:
/*----------------------------------------------------------------*/
		mov    data_75640,%eax
		ret


/*----------------------------------------------------------------*/
func_j_unlink_:	/* 0x6500b */
/*----------------------------------------------------------------*/
		jmp    w_dos_unlink


/*----------------------------------------------------------------*/
func_65010:
/*----------------------------------------------------------------*/
		movl   $0x8000,data_75948
		ret


/*----------------------------------------------------------------*/
func_6501b:
/*----------------------------------------------------------------*/
		mov    $data_128594,%eax
		ret


/*----------------------------------------------------------------*/
func_65021:
/*----------------------------------------------------------------*/
		mov    $data_128590,%eax
		ret
	jump_650f0:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___brk_:	/* 0x650f6 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    data_75648,%eax
		jb     jump_6515d
		cmpb   $0x0,data_75662
		jne    jump_6516f
		mov    (%esp),%ebp
		add    $0xf,%ebp
		shr    $0x4,%ebp
		test   %ebp,%ebp
		jne    jump_65121
		mov    $0xfffffff,%ebp
	jump_65121:
		xor    %ebx,%ebx
		mov    %ds,%eax
		mov    %ax,%bx
		mov    $0xed,%ah
		int    $0x21
		shl    $0x1f,%eax
		and    $0xffff,%edi
		or     %eax,%edi
		test   %edi,%edi
		jge    jump_6514b
		mov    %edi,%es
		mov    %ebp,%ebx
		mov    $0x4a,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     jump_6515d
	jump_6514b:
		mov    %ds,%eax
		mov    %eax,%es
		mov    %ebp,%ebx
	jump_65151:
		mov    $0x4a,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_651a0
	jump_6515d:
		call   func_6501b
		movl   $0x5,(%eax)
		mov    $0xffffffff,%eax
		jmp    jump_651ae
	jump_6516f:
		mov    (%esp),%ebx
		add    $0xfff,%ebx
		shr    $0xc,%ebx
		test   %ebx,%ebx
		jne    jump_65184
		mov    $0xfffff,%ebx
	jump_65184:
		mov    data_75662,%dl
		cmp    $0x1,%dl
		jne    jump_6519a
		cmp    data_75663,%dl
		jne    jump_6519a
		shl    $0x8,%ebx
	jump_6519a:
		mov    %ds,%eax
		mov    %eax,%es
		jmp    jump_65151
	jump_651a0:
		mov    (%esp),%ebx
		mov    data_75634,%eax
		mov    %ebx,data_75634
	jump_651ae:
		add    $0x4,%esp
		pop    %ebp
		pop    %es
		jmp    jump_650f0


/*----------------------------------------------------------------*/
func__EFG_Format_:	/* 0x651b8 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		movl   $0x0,0xc(%ebx)
		mov    %ds,0x8(%esp)
		mov    0x15(%edi),%cl
		xor    %ebx,%ebx
		cmp    $0x47,%cl
		jb     jump_651f5
		jbe    jump_65202
		cmp    $0x66,%cl
		jb     jump_651eb
		jbe    jump_65217
		cmp    $0x67,%cl
		je     jump_65202
		jmp    jump_65289
	jump_651eb:
		cmp    $0x65,%cl
		je     jump_65212
		jmp    jump_65289
	jump_651f5:
		cmp    $0x45,%cl
		jb     jump_65289
		jbe    jump_65212
		jmp    jump_65217
	jump_65202:
		cmpl   $0x0,0x8(%edi)
		jne    jump_6520f
		movl   $0x1,0x8(%edi)
	jump_6520f:
		sub    $0x2,%cl
	jump_65212:
		mov    $0x1,%ebx
	jump_65217:
		mov    (%edx),%ebp
		add    $0x8,%ebp
		mov    %ebp,(%edx)
		mov    -0x8(%ebp),%eax
		mov    %eax,(%esp)
		mov    -0x4(%ebp),%eax
		mov    %eax,0x4(%esp)
		cmpl   $0xffffffff,0x8(%edi)
		jne    jump_65238
		movl   $0x6,0x8(%edi)
	jump_65238:
		mov    0x15(%edi),%al
		and    $0x5f,%al
		and    $0xff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %cl,%al
		push   %eax
		push   $0x3
		push   %ebx
		lea    0x10(%esp),%edx
		xor    %ecx,%ecx
		push   $0x27
		mov    %esi,%eax
		mov    0x8(%edi),%ebx
		call   func__FtoS_
		mov    (%esi),%ah
		cmp    $0x2a,%ah
		jne    jump_65267
		mov    %ah,0x16(%edi)
	jump_65267:
		movb   $0x0,0x27(%esi)
	jump_6526b:
		cmpb   $0x20,(%esi)
		jne    jump_65273
		inc    %esi
		jmp    jump_6526b
	jump_65273:
		mov    %esi,%eax
		mov    %edi,%edx
		call   func_forcedecpt_
		mov    %ds,0x8(%esp)
		mov    %esi,%eax
		movl   $0xffffffff,0x8(%edi)
	jump_65289:
		mov    0x8(%esp),%edx
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_forcedecpt_:	/* 0x65295 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		testb  $0x1,0x14(%edx)
		jne    jump_652da
	jump_6529f:
		mov    (%eax),%dh
		test   %dh,%dh
		je     jump_652b2
		cmp    $0x65,%dh
		je     jump_652b2
		cmp    $0x45,%dh
		je     jump_652b2
		inc    %eax
		jmp    jump_6529f
	jump_652b2:
		mov    %eax,%edx
		mov    0x15(%ebx),%cl
		dec    %eax
		cmp    $0x47,%cl
		je     jump_652c2
		cmp    $0x67,%cl
		jne    jump_652ca
	jump_652c2:
		cmpb   $0x30,(%eax)
		jne    jump_652ca
		dec    %eax
		jmp    jump_652c2
	jump_652ca:
		cmpb   $0x2e,(%eax)
		je     jump_652d0
		inc    %eax
	jump_652d0:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    jump_652d0
	jump_652da:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___cnvs2d_:	/* 0x652dd */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   func_strtod_
		fstpl  (%ebx)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_652eb:
/*----------------------------------------------------------------*/
		push   %edx
		mov    $data_78838,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_
		pop    %edx
		ret
.data
		.ascii  "\x00\x00\x00"
data_65300:
		.fill   0x4
data_65304:
		.fill   0x4
data_65308:
		.ascii  "\x00\x00"
data_6530a:
		.ascii  "\x0a\x00"
data_6530c:
		.ascii  "\x46\x00"
data_6530e:
		.fill   0x6
		.ascii  "\x14"
		.fill   0x4
		.ascii  "\x08\x01\x00\x00\x00\x1e\x00\x0a"
		.ascii  "\x00\x00\x10\x02\x00\x00\x00\x28"
		.ascii  "\x00\x14\x00\x00\x18\x03\x00\x00"
		.ascii  "\x00\x32\x00\x1e\x00\x00\x20\x04"
		.ascii  "\x00\x00\x00\x3c\x00\x28\x00\x00"
		.ascii  "\x28\x05\x00\x00\x00\x46\x00\x32"
		.ascii  "\x00\x00\x30\x06"
		.fill   0x5
		.ascii  "\x3c\x00\x00\x38\x07\x00\x00\x00"
data_6535a:
		.ascii  "\xfc\xff"
data_6535c:
		.ascii  "\x01\x00\x00\x00"
data_65360:
		.ascii  "\x02\x00"
data_65362:
		.ascii  "\x03\x00\xf3\xff\x04\x00\x00\x00"
		.ascii  "\x08\x00\x0c\x00\xcf\xff\x10\x00"
		.ascii  "\x00\x00\x20\x00\x30\x00\x3f\xff"
		.ascii  "\x40\x00\x00\x00\x80\x00\xc0\x00"
		.ascii  "\xff\xfc\x00\x01\x00\x00\x00\x02"
		.ascii  "\x00\x03\xff\xf3\x00\x04\x00\x00"
		.ascii  "\x00\x08\x00\x0c\xff\xcf\x00\x10"
		.ascii  "\x00\x00\x00\x20\x00\x30\xff\x3f"
		.ascii  "\x00\x40\x00\x00\x00\x80\x00\xc0"
data_653aa:
		.ascii  "\x01\x40\x00\x45"
data_653ae:
		.ascii  "\x00\x02\x40\x42\x01\x03\x41\x43"
		.ascii  "\x87\xdb"
.text

vtable_653b8:
		.long   func_6596a
		.long   func_65970
		.long   func_65976
		.long   func_6597c
		.long   func_65a2c
		.long   func_6598a
		.long   func_65990
		.long   func_65996
		.long   func_6599c
		.long   func_659a4
		.long   func_659ac
		.long   func_659b4
		.long   func_65a2c
		.long   func_659c6
		.long   func_659d0
		.long   func_659d8
		.long   func_659e0
		.long   func_659e9
		.long   func_659f2
		.long   func_659fb
		.long   func_65a2c
		.long   func_65a0f
		.long   func_65a1a
		.long   func_65a23

vtable_65418:
		.long   func_6596a
		.long   func_65970
		.long   func_65976
		.long   func_6597c
		.long   func_65982
		.long   func_6598a
		.long   func_65990
		.long   func_65996
		.long   func_6599c
		.long   func_659a4
		.long   func_659ac
		.long   func_659b4
		.long   func_659bc
		.long   func_659c6
		.long   func_659d0
		.long   func_659d8
		.long   func_659e0
		.long   func_659e9
		.long   func_659f2
		.long   func_659fb
		.long   func_65a04
		.long   func_65a0f
		.long   func_65a1a
		.long   func_65a23

vtable_65478:
		.long   func_65a69
		.long   func_65b5b
		.long   func_65c37
		.long   func_65d29
		.long   func_65dc3
		.long   func_65f1c
		.long   func_66022
		.long   func_66124
		.long   func_65a88
		.long   func_65a64
		.long   func_65c56
		.long   func_65a64
		.long   func_65de6
		.long   func_65a64
		.long   func_66043
		.long   func_65a64
		.long   func_65aa7
		.long   func_65b95
		.long   func_65c75
		.long   func_65d63
		.long   func_65e09
		.long   func_65f5a
		.long   func_66064
		.long   func_66160
		.long   func_65ac3
		.long   func_65ba6
		.long   func_65c91
		.long   func_65d9f
		.long   func_65e29
		.long   func_65f8d
		.long   func_66082
		.long   func_661a8
		.long   func_65adf
		.long   func_65bb7
		.long   func_65cad
		.long   func_65a64
		.long   func_65e49
		.long   func_65fa2
		.long   func_660a0
		.long   func_661d8
		.long   func_65afe
		.long   func_65bd5
		.long   func_65ccc
		.long   func_65ed5
		.long   func_65e6c
		.long   func_65a64
		.long   func_660c1
		.long   func_661dd
		.long   func_65b1d
		.long   func_65c15
		.long   func_65ceb
		.long   func_65a64
		.long   func_65e8f
		.long   func_65fe9
		.long   func_660e2
		.long   func_66217
		.long   func_65b3c
		.long   func_65c29
		.long   func_65d0a
		.long   func_65f6f
		.long   func_65eb2
		.long   func_66014
		.long   func_66103
		.long   func_6621c

vtable_65578:
		.long   func_66272
		.long   func_66314
		.long   func_66240
		.long   func_66240
		.long   func_66925
		.long   func_669a3
		.long   func_66a3e
		.long   func_669a3
		.long   func_66287
		.long   func_6635c
		.long   func_66240
		.long   func_66240
		.long   func_6693a
		.long   func_6635c
		.long   func_66a89
		.long   func_6635c
		.long   func_6629c
		.long   func_66245
		.long   func_66240
		.long   func_66240
		.long   func_6629c
		.long   func_669c2
		.long   func_66240
		.long   func_669c2
		.long   func_662ae
		.long   func_66a12
		.long   func_66240
		.long   func_66240
		.long   func_662ae
		.long   func_66a12
		.long   func_66ad4
		.long   func_66a12
		.long   func_662c0
		.long   func_66384
		.long   func_66240
		.long   func_668cb
		.long   func_6694f
		.long   func_669ee
		.long   func_66b5d
		.long   func_66c89
		.long   func_662d5
		.long   func_66405
		.long   func_66842
		.long   func_66240
		.long   func_66964
		.long   func_66a00
		.long   func_66ba8
		.long   func_66240
		.long   func_662ea
		.long   func_66620
		.long   func_66240
		.long   func_66240
		.long   func_66979
		.long   func_66240
		.long   func_66bf3
		.long   func_66240
		.long   func_662ff
		.long   func_6672a
		.long   func_66240
		.long   func_66240
		.long   func_6698e
		.long   func_66240
		.long   func_66c3e
		.long   func_66240


/*----------------------------------------------------------------*/
func___int7_pl3:	/* 0x65678 */
/*----------------------------------------------------------------*/
		sti
		pusha
		mov    %esp,%ebp
		pushl  0x40(%ebp)
		pushl  0x44(%ebp)
		mov    0x3c(%ebp),%cx
		mov    %cx,-0x6(%ebp)
		mov    0x38(%ebp),%ecx
		mov    %ecx,0xc(%ebp)
		call   func_6570c
		pop    %ds
		pop    %es
		popa
		iret


/*----------------------------------------------------------------*/
func___int7:	/* 0x656e8 */
/*----------------------------------------------------------------*/
		sti
		sub    $0xc,%esp
		push   %eax
		mov    %esp,%eax
		add    $0x1c,%eax
		push   %ecx
		push   %edx
		push   %ebx
		push   %eax
		push   %ebp
		push   %esi
		push   %edi
		push   %es
		push   %ds
		mov    %ss,0x2(%esp)
		call   func_6570c
		pop    %ds
		pop    %es
		popa
		add    $0xc,%esp
		iret


/*----------------------------------------------------------------*/
func_6570c:
/*----------------------------------------------------------------*/
		mov    %esp,%ebp
		mov    0x38(%ebp),%esi
		mov    0x3c(%ebp),%ds
		mov    0x4(%ebp),%cx
		mov    0x6(%ebp),%dx
		mov    (%esi),%al
		cmp    $0x9b,%al
		jbe    jump_65798
	jump_65726:
		mov    %al,%bl
		and    $0xf8,%bl
		cmp    $0xd8,%bl
		jne    jump_6583f
		mov    0x1(%esi),%ah
		add    $0x2,%esi
		and    $0x7,%al
		cmp    $0xc0,%ah
		jae    jump_657f5
		mov    %ah,%bl
		mov    %ah,%bh
		shr    $0x3,%bh
		and    $0x1807,%ebx
		or     %bh,%bl
		mov    $0x0,%bh
		call   *vtable_653b8(,%ebx,4)
		mov    %cx,%es
		mov    %esi,0x38(%ebp)
		mov    %ebx,%esi
		mov    %ah,%bl
		and    $0x38,%ebx
		or     %al,%bl
		call   func___GETDS
		lea    data_75954,%ebp
		mov    %ds:0x4(%ebp),%edi
		and    $0x3800,%edi
		shr    $0xb,%edi
		lea    (%edi,%edi,4),%edi
		add    %edi,%edi
		jmp    *vtable_65478(,%ebx,4)
	jump_65792:
		mov    (%esi),%al
		cmp    $0x9b,%al
		ja     jump_65726
	jump_65798:
		je     jump_657be
		cmp    $0x26,%al
		je     jump_657dc
		cmp    $0x2e,%al
		je     jump_657c1
		cmp    $0x36,%al
		je     jump_657d3
		cmp    $0x3e,%al
		je     jump_657ca
		cmp    $0x64,%al
		je     jump_657e5
		cmp    $0x65,%al
		je     jump_657ed
		cmp    $0x66,%al
		je     jump_657be
		cmp    $0x67,%al
		jne    jump_65726
	jump_657be:
		inc    %esi
		jmp    jump_65792
	jump_657c1:
		mov    0x3c(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657ca:
		mov    0x4(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657d3:
		mov    0x6(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657dc:
		mov    0x8(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657e5:
		mov    %fs,%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657ed:
		mov    %gs,%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_65792
	jump_657f5:
		mov    %esi,0x38(%ebp)
		call   func___GETDS
		lea    data_75954,%ebp
		mov    %ah,%dl
		and    $0x38,%edx
		or     %al,%dl
		mov    %ds:0x4(%ebp),%edi
		and    $0x3800,%edi
		shr    $0xb,%edi
		mov    %ah,%bl
		and    $0x7,%ebx
		mov    %ebx,%esi
		cmp    $0xf801,%ax
		jne    jump_65828
		mov    $0x1,%si
	jump_65828:
		add    %edi,%esi
		and    $0x7,%esi
		lea    (%edi,%edi,4),%edi
		add    %edi,%edi
		lea    (%esi,%esi,4),%esi
		add    %esi,%esi
		jmp    *vtable_65578(,%edx,4)
	jump_6583f:
		ret


/*----------------------------------------------------------------*/
func_65840:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    $0xffffff00,%edx
		mov    0x4(%ebx),%eax
		shl    $0x19,%eax
		jae    jump_6586e
		jne    jump_6585a
		cmpl   $0x0,(%ebx)
		jne    jump_6585a
		add    %edx,%edx
	jump_6585a:
		addl   $0x100,0x4(%ebx)
		jae    jump_6586e
		movl   $0x80000000,0x4(%ebx)
		incw   0x8(%ebx)
	jump_6586e:
		and    %edx,0x4(%ebx)
		movl   $0x0,(%ebx)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_6587c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    $0xfffff800,%edx
		mov    (%ebx),%eax
		shl    $0x16,%eax
		jae    jump_658a7
		jne    jump_65890
		add    %edx,%edx
	jump_65890:
		addl   $0x800,(%ebx)
		adcl   $0x0,0x4(%ebx)
		jae    jump_658a7
		movl   $0x80000000,0x4(%ebx)
		incw   0x8(%ebx)
	jump_658a7:
		and    %edx,(%ebx)
		jmp    func_6570c
	jump_658ae:
		inc    %eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_653aa(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
	jump_658c5:
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_6570c
	jump_65900:
		inc    %eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_653aa(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_6591c:
/*----------------------------------------------------------------*/
		or     %al,%ds:0x4(%ebp)
		test   %al,%ds:0x0(%ebp)
		jne    jump_65969
		push   %esi
		push   %edi
		push   %ecx
		push   %es
		push   %ds
		sub    $0x6c,%esp
		mov    %ss,%cx
		mov    %cx,%es
		mov    %ebp,%esi
		mov    %esp,%edi
		mov    $0x1b,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		movzbl %ah,%eax
		call   *data_7566d
		mov    %ds,%cx
		mov    %cx,%es
		mov    %ss,%cx
		mov    %cx,%ds
		mov    %ebp,%edi
		mov    %esp,%esi
		mov    $0x1b,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		add    $0x6c,%esp
		pop    %ds
		pop    %es
		pop    %ecx
		pop    %edi
		pop    %esi
	jump_65969:
		ret


/*----------------------------------------------------------------*/
func_6596a:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65970:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65976:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_6597c:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65982:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_6598a:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		ret


/*----------------------------------------------------------------*/
func_65990:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65996:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_6599c:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659a4:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659ac:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659b4:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659bc:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_659c6:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x14(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_659d0:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659d8:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659e0:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659e9:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659f2:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_659fb:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65a04:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_65a0f:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x14(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_65a1a:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65a23:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_65a2c:
/*----------------------------------------------------------------*/
		mov    (%esi),%bl
		inc    %esi
		push   %ebx
		and    $0x7,%bl
		mov    %ah,%bh
		shr    $0x3,%bh
		and    $0x18,%bh
		or     %bh,%bl
		mov    $0x0,%bh
		call   *vtable_65418(,%ebx,4)
		pop    %edx
		push   %ecx
		mov    %edx,%ecx
		and    $0x38,%dl
		cmp    $0x20,%dl
		je     jump_65a62
		shr    %edx
		neg    %edx
		mov    0x28(%ebp,%edx,1),%edx
		shr    $0x6,%cl
		shl    %cl,%edx
		add    %edx,%ebx
	jump_65a62:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_65a64:
/*----------------------------------------------------------------*/
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65a69:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65a88:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65aa7:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_65ac3:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_65adf:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65afe:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65b1d:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65b3c:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6765a
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65b5b:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_6765a
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65b95:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_67514
		mov    %eax,%es:(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65ba6:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_67514
		mov    %eax,%es:(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_65bb7:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		push   %ds
		push   %es
		mov    %es,%ax
		mov    %ds,%dx
		mov    %dx,%es
		mov    %ax,%ds
		mov    %ebp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		pop    %ds
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65bd5:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		mov    %ax,%ds:0x0(%ebp)
		and    $0x300,%ax
		cmp    $0x300,%ax
		jne    jump_65bf4
		lea    func_6570c,%edx
		mov    %edx,%ds:0x76(%ebp)
		jmp    jump_65c10
	jump_65bf4:
		cmp    $0x200,%ax
		jne    jump_65c06
		lea    func_6587c,%edx
		mov    %edx,%ds:0x76(%ebp)
		jmp    jump_65c10
	jump_65c06:
		lea    func_65840,%edx
		mov    %edx,%ds:0x76(%ebp)
	jump_65c10:
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65c15:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		mov    %edi,%ebx
		mov    %esi,%edi
		mov    %ebp,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ebx,%edi
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65c29:
/*----------------------------------------------------------------*/
		mov    %ds:0x0(%ebp),%ax
		mov    %ax,%es:(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65c37:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65c56:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65c75:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_65c91:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_65cad:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65ccc:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65ceb:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65d0a:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65d29:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_6744e
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65d63:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_673df
		mov    %eax,%es:(%esi)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65d9f:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_673df
		mov    %eax,%es:(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_65dc3:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65de6:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65e09:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_65e29:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_65e49:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65e6c:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65e8f:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65eb2:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_67494
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_65ed5:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		mov    %eax,0x1c(%edi,%ebp,1)
		mov    %es:0x4(%esi),%eax
		mov    %eax,0x20(%edi,%ebp,1)
		mov    %es:0x8(%esi),%ax
		mov    %ax,0x24(%edi,%ebp,1)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65f1c:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67494
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65f5a:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_67593
		mov    %eax,%es:(%esi)
		mov    %edx,%es:0x4(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65f6f:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%es:(%esi)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%es:0x4(%esi)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%es:0x8(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_65f8d:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_67593
		mov    %eax,%es:(%esi)
		mov    %edx,%es:0x4(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_65fa2:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		push   %ds
		push   %es
		mov    %es,%ax
		mov    %ds,%dx
		mov    %dx,%es
		mov    %ax,%ds
		mov    %ebp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %es:0x4(%ebp),%ebx
		and    $0x3800,%ebx
		shr    $0xb,%ebx
		lea    (%ebx,%ebx,4),%ebx
		add    %ebx,%ebx
		mov    $0x8,%ecx
	jump_65fd0:
		lea    0x1c(%ebp,%ebx,1),%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movzwl data_6530a(%ebx),%ebx
		loop   jump_65fd0
		pop    %es
		pop    %ds
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_65fe9:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		mov    %edi,%ebx
		mov    %esi,%edi
		mov    %ebp,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
	jump_65ffb:
		lea    0x1c(%ebx,%ebp,1),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movzwl data_6530a(%ebx),%ebx
		loop   jump_65ffb
		mov    %ebx,%edi
		jmp    func_668ff


/*----------------------------------------------------------------*/
func_66014:
/*----------------------------------------------------------------*/
		mov    %ds:0x4(%ebp),%ax
		mov    %ax,%es:(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66022:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66043:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66064:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_66082:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_660a0:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_660c1:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_660e2:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66103:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_6744e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66124:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%ax
		cwtl
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_6744e
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66160:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_673df
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_66193
		mov    $0x8000,%ax
	jump_66193:
		mov    %ax,%es:(%esi)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_661a8:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_673df
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_661cf
		mov    $0x8000,%ax
	jump_661cf:
		mov    %ax,%es:(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_661d8:
/*----------------------------------------------------------------*/
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_661dd:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_6745f
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66217:
/*----------------------------------------------------------------*/
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_6621c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_673e4
		mov    %eax,%es:(%esi)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_66240:
/*----------------------------------------------------------------*/
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66245:
/*----------------------------------------------------------------*/
		jmp    *vtable_6624d(,%ebx,4)

vtable_6624d:
		.long   func_6626d
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_6626d:
/*----------------------------------------------------------------*/
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66272:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66287:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6629c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_662ae:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_662c0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_662d5:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_662ea:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_662ff:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66314:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    0x1c(%esi,%ebp,1),%eax
		mov    %eax,0x1c(%edi,%ebp,1)
		mov    0x20(%esi,%ebp,1),%eax
		mov    %eax,0x20(%edi,%ebp,1)
		mov    0x24(%esi,%ebp,1),%ax
		mov    %ax,0x24(%edi,%ebp,1)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_6635c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		lea    0x1c(%esi,%ebp,1),%esi
		mov    (%esi),%eax
		xchg   %eax,(%ebx)
		mov    %eax,(%esi)
		mov    0x4(%esi),%eax
		xchg   %eax,0x4(%ebx)
		mov    %eax,0x4(%esi)
		mov    0x8(%esi),%ax
		xchg   %ax,0x8(%ebx)
		mov    %ax,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66384:
/*----------------------------------------------------------------*/
		jmp    *vtable_6638c(,%ebx,4)

vtable_6638c:
		.long   func_663ac
		.long   func_663b9
		.long   func_66240
		.long   func_66240
		.long   func_663c6
		.long   func_663f7
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_663ac:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		xorb   $0x80,0x9(%eax)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_663b9:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		andb   $0x7f,0x9(%eax)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_663c6:
/*----------------------------------------------------------------*/
		mov    data_65300,%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    data_65304,%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    data_65308,%ax
		mov    %ax,%ds:0x74(%ebp)
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_663f7:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_67ba6
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66405:
/*----------------------------------------------------------------*/
		jmp    *vtable_6640d(,%ebx,4)

vtable_6640d:
		.long   func_6642d
		.long   func_66470
		.long   func_664b5
		.long   func_664fa
		.long   func_6653f
		.long   func_66584
		.long   func_665c9
		.long   func_66240


/*----------------------------------------------------------------*/
func_6642d:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		movl   $0x80000000,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66470:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xcd1b8afe,(%esi)
		movl   $0xd49a784b,0x4(%esi)
		movw   $0x4000,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_664b5:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0x5c17f0bc,(%esi)
		movl   $0xb8aa3b29,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_664fa:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0x2168c235,(%esi)
		movl   $0xc900daa2,0x4(%esi)
		movw   $0x4000,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_6653f:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xfbcff799,(%esi)
		movl   $0x9a209a84,0x4(%esi)
		movw   $0x3ffd,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66584:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xd1cf79ac,(%esi)
		movl   $0xb17217f7,0x4(%esi)
		movw   $0x3ffe,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_665c9:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		mov    %eax,0x4(%esi)
		mov    %ax,0x8(%esi)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_6535c(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66620:
/*----------------------------------------------------------------*/
		jmp    *vtable_66628(,%ebx,4)

vtable_66628:
		.long   func_66648
		.long   func_66655
		.long   func_6669c
		.long   func_66cb1
		.long   func_66cfa
		.long   func_66d5f
		.long   func_666e8
		.long   func_66709


/*----------------------------------------------------------------*/
func_66648:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_681cc
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66655:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_67cad
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6669c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_68196
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		movl   $0x80000000,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_666e8:
/*----------------------------------------------------------------*/
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66709:
/*----------------------------------------------------------------*/
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_6672a:
/*----------------------------------------------------------------*/
		jmp    *vtable_66732(,%ebx,4)

vtable_66732:
		.long   func_66752
		.long   func_6677c
		.long   func_667c3
		.long   func_667d0
		.long   func_66d89
		.long   func_66da1
		.long   func_66828
		.long   func_66835


/*----------------------------------------------------------------*/
func_66752:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_67ac5
		and    $0x7,%eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_653ae(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6677c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_67c94
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_667c3:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_683a0
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_667d0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_6817f
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_68189
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66828:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_6817f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66835:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_68189
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66842:
/*----------------------------------------------------------------*/
		jmp    *vtable_6684a(,%ebx,4)

vtable_6684a:
		.long   func_66240
		.long   func_6686a
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_6686a:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%ds:0x74(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_668cb:
/*----------------------------------------------------------------*/
		jmp    *vtable_668d3(,%ebx,4)

vtable_668d3:
		.long   func_66240
		.long   func_66240
		.long   func_668f3
		.long   func_668ff
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_668f3:
/*----------------------------------------------------------------*/
		andw   $0x7f00,%ds:0x4(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_668ff:
/*----------------------------------------------------------------*/
		movw   $0x33f,%ds:0x0(%ebp)
		movw   $0x0,%ds:0x4(%ebp)
		movw   $0xffff,%ds:0x8(%ebp)
		lea    func_6570c,%edx
		mov    %edx,%ds:0x76(%ebp)
		sub    %edi,%edi
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66925:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e30
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6693a:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_67264
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6694f:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66964:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e22
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66979:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_6698e:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_6708f
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_669a3:
/*----------------------------------------------------------------*/
		mov    data_6535a(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%esi),%bx
		or     %bx,%ds:0x8(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_669c2:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,0x1c(%esi,%ebp,1)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,0x20(%esi,%ebp,1)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,0x24(%esi,%ebp,1)
		mov    data_6535a(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_669ee:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_65900


/*----------------------------------------------------------------*/
func_66a00:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_66a12:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,0x1c(%esi,%ebp,1)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,0x20(%esi,%ebp,1)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,0x24(%esi,%ebp,1)
		mov    data_6535a(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		jmp    jump_658c5


/*----------------------------------------------------------------*/
func_66a3e:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e30
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66a89:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_67264
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66ad4:
/*----------------------------------------------------------------*/
		jmp    *vtable_66adc(,%ebx,4)

vtable_66adc:
		.long   func_66240
		.long   func_66afc
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_66afc:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%ds:0x74(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_66ff6
		jmp    jump_658ae


/*----------------------------------------------------------------*/
func_66b5d:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e22
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66ba8:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_66e22
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66bf3:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_6708f
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66c3e:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_6708f
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66c89:
/*----------------------------------------------------------------*/
		jmp    *vtable_66c91(,%ebx,4)

vtable_66c91:
		.long   func_66e12
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240
		.long   func_66240


/*----------------------------------------------------------------*/
func_66cb1:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%edx
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_65362(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_6530a(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ebx
		call   func_678ac
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66cfa:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%esi
		movzwl data_6530c(%edi),%edi
		mov    data_6530e(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_6535a(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    (%esi),%eax
		mov    %eax,(%ebx)
		mov    0x4(%esi),%eax
		mov    %eax,0x4(%ebx)
		mov    0x8(%esi),%ax
		mov    %ax,%dx
		and    $0x8000,%dx
		or     $0x3fff,%dx
		mov    %dx,0x8(%ebx)
		and    $0x7fff,%ax
		sub    $0x3fff,%ax
		cwtl
		mov    %esi,%edx
		call   func_673df
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66d5f:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_67ac5
		and    $0x7,%eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_653ae(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_66d89:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_6771f
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66da1:
/*----------------------------------------------------------------*/
		mov    %edi,%esi
		movzwl data_6530a(%edi),%edi
		lea    0x1c(%edi,%ebp,1),%eax
		mov    0x8(%eax),%cx
		call   func_673df
		mov    %esi,%edi
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_66de0
		or     %ch,%ch
		jns    jump_66dd1
		sub    %dx,%dx
		sub    %cx,%cx
		jmp    jump_66dde
	jump_66dd1:
		mov    $0x7fff,%dx
		mov    0x8(%ebx),%cx
		and    $0x8000,%cx
	jump_66dde:
		jmp    jump_66e06
	jump_66de0:
		mov    0x8(%ebx),%dx
		mov    %dx,%cx
		and    $0x8000,%cx
		and    $0x7fff,%dx
		add    %ax,%dx
		jns    jump_66e06
		or     %ah,%ah
		jns    jump_66e02
		sub    %dx,%dx
		sub    %cx,%cx
		jmp    jump_66e06
	jump_66e02:
		mov    $0x7fff,%dx
	jump_66e06:
		or     %cx,%dx
		mov    %dx,0x8(%ebx)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66e12:
/*----------------------------------------------------------------*/
		mov    %ds:0x4(%ebp),%ax
		mov    %esp,%ebp
		mov    %ax,0x28(%ebp)
		jmp    func_6570c


/*----------------------------------------------------------------*/
func_66e22:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		xor    $0x8000,%si
		jmp    jump_66e37


/*----------------------------------------------------------------*/
func_66e30:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
	jump_66e37:
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_66e8a
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_66e5a:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x18(%esp),%si
		mov    0x14(%esp),%ecx
		mov    0x10(%esp),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_66e8a
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret    $0xc


/*----------------------------------------------------------------*/
func_66e8a:
/*----------------------------------------------------------------*/
		or     %eax,%eax
		jne    jump_66ead
		or     %edx,%edx
		jne    jump_66ead
		add    %si,%si
		jne    jump_66eaa
		shr    $0x10,%esi
		mov    %ebx,%eax
		mov    %ecx,%edx
		add    %esi,%esi
		or     %si,%bx
		or     %edx,%ebx
		je     jump_66ea9
		shr    %esi
	jump_66ea9:
		ret
	jump_66eaa:
		rcr    %si
	jump_66ead:
		or     %ecx,%ecx
		jne    jump_66ebe
		or     %ebx,%ebx
		jne    jump_66ebe
		test   $0x7fff0000,%esi
		jne    jump_66ebe
		ret
	jump_66ebe:
		push   %ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		mov    %ecx,%ebp
		rol    $0x10,%edi
		rol    $0x10,%ecx
		add    %di,%cx
		rol    $0x10,%edi
		rol    $0x10,%ecx
		sub    %di,%cx
		je     jump_66f0d
		jae    jump_66ef9
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %edx,%esi
	jump_66ef9:
		cmp    $0x40,%cx
		jbe    jump_66f0d
		add    %ebp,%ebp
		rcr    %bp
		mov    %ebx,%eax
		mov    %esi,%edx
		mov    %ebp,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_66f0d:
		mov    $0x0,%ch
		or     %ecx,%ecx
		jns    jump_66f22
		mov    $0xff,%ch
		neg    %esi
		neg    %ebx
		sbb    $0x0,%esi
		xor    $0x80000000,%ebp
	jump_66f22:
		sub    %edi,%edi
		cmp    $0x0,%cl
		je     jump_66f55
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x20,%cl
		jb     jump_66f47
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		cmp    $0x40,%cl
		jne    jump_66f43
		or     %edx,%edi
		sub    %edx,%edx
	jump_66f43:
		mov    %edx,%eax
		sub    %edx,%edx
	jump_66f47:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx
	jump_66f55:
		add    %ebx,%eax
		adc    %esi,%edx
		adc    $0x0,%ch
		jns    jump_66f86
		cmp    $0x40,%cl
		jne    jump_66f77
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x0,%eax
		adc    $0x0,%edx
		adc    $0x0,%ch
	jump_66f77:
		neg    %edx
		neg    %eax
		sbb    $0x0,%edx
		mov    $0x0,%ch
		xor    $0x80000000,%ebp
	jump_66f86:
		mov    %eax,%ebx
		or     %ch,%bl
		or     %edx,%ebx
		je     jump_66fdd
		or     %bp,%bp
		je     jump_66fdf
		cmp    $0x0,%ch
		jne    jump_66fa6
		rol    %edi
		ror    %edi
	jump_66f9c:
		dec    %bp
		je     jump_66fdf
		adc    %eax,%eax
		adc    %edx,%edx
		jae    jump_66f9c
	jump_66fa6:
		inc    %bp
		cmp    $0x7fff,%bp
		je     jump_66fe9
		stc
		rcr    %edx
		rcr    %eax
		jae    jump_66fdb
		add    %edi,%edi
		jne    jump_66fc2
		ror    %eax
		rol    %eax
	jump_66fc2:
		adc    $0x0,%eax
		adc    $0x0,%edx
		jae    jump_66fdb
		rcr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x7fff,%bp
		je     jump_66fe9
	jump_66fdb:
		jmp    jump_66fdf
	jump_66fdd:
		mov    %ebx,%ebp
	jump_66fdf:
		add    %ebp,%ebp
		rcr    %bp
		mov    %ebp,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_66fe9:
		mov    $0x7fff,%bp
		sub    %eax,%eax
		mov    $0x80000000,%edx
		jmp    jump_66fdf


/*----------------------------------------------------------------*/
func_66ff6:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		mov    0x8(%eax),%si
		or     $0x8000,%si
		inc    %si
		jne    jump_6700e
		mov    0x4(%eax),%esi
		add    %esi,%esi
		or     (%eax),%esi
		jne    jump_67061
	jump_6700e:
		mov    0x8(%edx),%si
		or     $0x8000,%si
		inc    %si
		jne    jump_67024
		mov    0x4(%edx),%esi
		add    %esi,%esi
		or     (%edx),%esi
		jne    jump_67061
	jump_67024:
		mov    0x6(%eax),%esi
		mov    0x6(%edx),%edi
		xor    %esi,%edi
		mov    $0x0,%edi
		js     jump_67069
		mov    0x8(%eax),%si
		cmp    0x8(%edx),%si
		jne    jump_67049
		mov    0x4(%eax),%edi
		cmp    0x4(%edx),%edi
		jne    jump_67049
		mov    (%eax),%edi
		cmp    (%edx),%edi
	jump_67049:
		mov    $0x0,%edi
		je     jump_6705c
		rcr    %eax
		xor    %eax,%esi
	jump_67054:
		add    %esi,%esi
		sbb    $0x0,%edi
		add    %edi,%edi
		inc    %edi
	jump_6705c:
		mov    %edi,%eax
		pop    %esi
		pop    %edi
		ret
	jump_67061:
		mov    $0x2,%eax
		pop    %esi
		pop    %edi
		ret
	jump_67069:
		or     (%eax),%edi
		or     (%edx),%edi
		or     0x4(%eax),%edi
		or     0x4(%edx),%edi
		mov    0x8(%eax),%ax
		shl    $0x10,%eax
		mov    0x8(%edx),%ax
		and    $0x7fff7fff,%eax
		or     %edi,%eax
		mov    $0x0,%edi
		jne    jump_67054
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_6708f:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_670b9
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_670b9:
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		jne    jump_67104
		or     %ebx,%ebx
		jne    jump_67104
		test   $0x7fff0000,%esi
		jne    jump_67104
		or     %eax,%eax
		jne    jump_670ee
		or     %edx,%edx
		jne    jump_670ee
		mov    %esi,%eax
		add    %ax,%ax
		jne    jump_670ee
		mov    $0x1,%al
		mov    $0x81,%ah
		call   func_6591c
		mov    $0xc0000000,%edx
		sub    %eax,%eax
		mov    $0xffff,%si
		jmp    jump_67103
	jump_670ee:
		mov    $0x4,%al
		mov    $0x83,%ah
		call   func_6591c
		mov    $0x80000000,%edx
		sub    %eax,%eax
		or     $0x7fff,%si
	jump_67103:
		ret
	jump_67104:
		or     %eax,%eax
		jne    jump_67115
		or     %edx,%edx
		jne    jump_67115
		add    %si,%si
		jne    jump_67112
		ret
	jump_67112:
		rcr    %si
	jump_67115:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		rol    $0x10,%edi
		rol    $0x10,%ecx
		add    %cx,%di
		rol    $0x10,%edi
		rol    $0x10,%ecx
		or     %di,%di
		jne    jump_67150
	jump_67146:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		or     %edx,%edx
		jns    jump_67146
	jump_67150:
		or     %cx,%cx
		jne    jump_6715f
	jump_67155:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		or     %esi,%esi
		jns    jump_67155
	jump_6715f:
		sub    %cx,%di
		add    $0x3fff,%di
		js     jump_67182
		cmp    $0x7fff,%di
		jb     jump_67182
		mov    %ecx,%edi
		mov    $0x7fff,%di
		mov    $0x80000000,%edx
		sub    %eax,%eax
		jmp    jump_6725a
	jump_67182:
		cmp    $0xffc0,%di
		jge    jump_67193
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %edi,%edi
		jmp    jump_6725a
	jump_67193:
		push   %edi
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edi,%ecx
		ja     jump_671a5
		sub    %ecx,%edx
		inc    %eax
	jump_671a5:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %ebx,%edx
		mul    %edx
		add    %ebx,%eax
		adc    $0x0,%edx
		mov    -0x10(%ebp),%ebx
		testb  $0x1,-0x14(%ebp)
		je     jump_671c6
		add    %ebx,%eax
		adc    -0xc(%ebp),%edx
	jump_671c6:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     jump_671e0
	jump_671ce:
		subl   $0x1,-0x18(%ebp)
		sbbl   $0x0,-0x14(%ebp)
		add    %ebx,%ecx
		adc    -0xc(%ebp),%esi
		adc    $0x0,%edi
		jne    jump_671ce
	jump_671e0:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0xc(%ebp),%ecx
		cmp    %edi,%ecx
		ja     jump_671f5
		sub    %ecx,%edi
		addl   $0x1,-0x18(%ebp)
		adcl   $0x0,-0x14(%ebp)
	jump_671f5:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     jump_6722c
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %ebx,%edx
		mul    %edx
		add    %ebx,%eax
		adc    $0x0,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     jump_6722c
	jump_67215:
		subl   $0x1,-0x1c(%ebp)
		sbbl   $0x0,-0x18(%ebp)
		sbbl   $0x0,-0x14(%ebp)
		add    -0x10(%ebp),%ecx
		adc    -0xc(%ebp),%esi
		adc    $0x0,%edi
		jne    jump_67215
	jump_6722c:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x8,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    jump_6723e
		rcr    %edx
		rcr    %eax
		inc    %edi
	jump_6723e:
		or     %di,%di
		jg     jump_6725a
		jne    jump_67249
		mov    $0x1,%cl
		jmp    jump_6724f
	jump_67249:
		neg    %di
		mov    %di,%cx
	jump_6724f:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di
	jump_6725a:
		add    %edi,%edi
		rcr    %di
		mov    %edi,%esi
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_67264:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_6728e
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_6728e:
/*----------------------------------------------------------------*/
		or     %eax,%eax
		jne    jump_6729f
		or     %edx,%edx
		jne    jump_6729f
		add    %si,%si
		jne    jump_6729c
		ret
	jump_6729c:
		rcr    %si
	jump_6729f:
		or     %ecx,%ecx
		jne    jump_672b6
		or     %ebx,%ebx
		jne    jump_672b6
		test   $0x7fff0000,%esi
		jne    jump_672b6
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %esi,%esi
		ret
	jump_672b6:
		push   %ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		add    %edi,%ecx
		sub    $0x3ffe,%cx
		jb     jump_672e6
		cmp    $0x7fff,%cx
		jb     jump_672e6
		jmp    jump_6737d
	jump_672e6:
		cmp    $0xffc0,%cx
		jge    jump_672f7
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %ecx,%ecx
		jmp    jump_67373
	jump_672f7:
		push   %ecx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x0,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		mov    %ecx,%ebx
		pop    %ecx
		js     jump_6732e
		add    %ebx,%ebx
		adc    %eax,%eax
		adc    %edx,%edx
		dec    %cx
	jump_6732e:
		add    %ebx,%ebx
		jae    jump_6735a
		jne    jump_67341
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     jump_67341
		mov    %eax,%esi
		shr    %esi
	jump_67341:
		adc    $0x0,%eax
		adc    $0x0,%edx
		jae    jump_6735a
		rcr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x7fff,%cx
		je     jump_6737d
	jump_6735a:
		or     %cx,%cx
		jg     jump_67373
		jne    jump_67365
		mov    $0x1,%cl
		jmp    jump_67368
	jump_67365:
		neg    %cx
	jump_67368:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx
	jump_67373:
		add    %ecx,%ecx
		rcr    %cx
		mov    %ecx,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_6737d:
		mov    $0x7fff,%cx
		mov    $0x80000000,%edx
		sub    %eax,%eax
		jmp    jump_67373


/*----------------------------------------------------------------*/
func_673df:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x1f,%bl
		jmp    jump_673e7


/*----------------------------------------------------------------*/
func_673e4:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x20,%bl
	jump_673e7:
		mov    0x9(%eax),%bh
		shr    %bh
		or     %bl,%bh
		push   %ecx
		mov    0x8(%eax),%cx
		and    $0x7fff,%cx
		sub    $0x3ffe,%cx
		jl     jump_67449
		cmp    $0x20,%cx
		jg     jump_67441
		and    $0x3f,%bl
		cmp    %bl,%cl
		jg     jump_67441
		mov    %bh,%ch
		mov    (%eax),%ebx
		mov    0x4(%eax),%eax
		add    %ebx,%ebx
		rcr    %ch
		cmp    $0x20,%cl
		jne    jump_67420
		add    %ch,%ch
		jmp    jump_6742d
	jump_67420:
		sub    %ebx,%ebx
		shld   %cl,%eax,%ebx
		shl    %cl,%eax
		add    %ch,%ch
		add    %eax,%eax
		mov    %ebx,%eax
	jump_6742d:
		mov    $0xff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x0,%eax
		add    %ch,%ch
		jae    jump_6743e
		neg    %eax
	jump_6743e:
		pop    %ecx
		pop    %ebx
		ret
	jump_67441:
		mov    $0x80000000,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_67449:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_6744e:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		or     %eax,%eax
		jns    jump_6745e
		neg    %eax
		mov    $0xbfff,%edx
		jmp    jump_67467
	jump_6745e:
		pop    %ebx


/*----------------------------------------------------------------*/
func_6745f:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		mov    $0x3fff,%edx
	jump_67467:
		push   %ecx
		or     %eax,%eax
		je     jump_67482
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x1f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		jmp    jump_67486
	jump_67482:
		sub    %edx,%edx
		sub    %ecx,%ecx
	jump_67486:
		sub    %eax,%eax
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %cx,0x8(%ebx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_67494:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		shld   $0xb,%eax,%edx
		shl    $0xb,%eax
		sar    $0x14,%ecx
		and    $0x7ff,%cx
		je     jump_674df
		cmp    $0x7ff,%cx
		je     jump_674b6
		add    $0x3c00,%cx
		jmp    jump_674d7
	jump_674b6:
		mov    $0x7fff,%cx
		test   $0x7fffffff,%edx
		jne    jump_674c4
		or     %eax,%eax
	jump_674c4:
		je     jump_674d7
		push   %eax
		mov    $0x1,%al
		mov    $0x81,%ah
		call   func_6591c
		pop    %eax
		or     $0x40000000,%edx
	jump_674d7:
		or     $0x80000000,%edx
		jmp    jump_67504
	jump_674df:
		or     %edx,%edx
		jne    jump_674eb
		or     %eax,%eax
		jne    jump_674eb
		sub    %ecx,%ecx
		jmp    jump_67504
	jump_674eb:
		mov    $0x3c01,%cx
		or     %edx,%edx
		jne    jump_674f8
		xchg   %eax,%edx
		sub    $0x20,%cx
	jump_674f8:
		or     %edx,%edx
		js     jump_67504
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    jump_674f8
	jump_67504:
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x8(%ebx)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_67514:
/*----------------------------------------------------------------*/
		push   %edx
		push   %ecx
		push   %ebx
		mov    %eax,%ebx
		mov    $0xffffff00,%edx
		mov    0x4(%ebx),%eax
		mov    %eax,%ecx
		shl    $0x19,%ecx
		mov    0x8(%ebx),%cx
		jae    jump_67543
		jne    jump_67535
		cmpl   $0x0,(%ebx)
		jne    jump_67535
		add    %edx,%edx
	jump_67535:
		add    $0x100,%eax
		jae    jump_67543
		mov    $0x80000000,%eax
		inc    %cx
	jump_67543:
		and    %edx,%eax
		mov    %ecx,%ebx
		and    $0x7fff,%cx
		je     jump_6758f
		cmp    $0x7fff,%cx
		jne    jump_67566
		add    %eax,%eax
		shr    $0x8,%eax
		or     $0xff000000,%eax
		add    %bx,%bx
		rcr    %eax
		jmp    jump_6758f
	jump_67566:
		add    $0xc080,%cx
		jns    jump_67571
		sub    %eax,%eax
		jmp    jump_6758f
	jump_67571:
		cmp    $0xff,%cx
		jl     jump_67584
		mov    $0xff000000,%eax
		add    %bx,%bx
		rcr    %eax
		jmp    jump_6758f
	jump_67584:
		add    %eax,%eax
		shrd   $0x8,%ecx,%eax
		add    %bx,%bx
		rcr    %eax
	jump_6758f:
		pop    %ebx
		pop    %ecx
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_67593:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x8(%eax),%cx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x16,%ebx
		jae    jump_675c0
		jne    jump_675af
		add    %esi,%esi
	jump_675af:
		add    $0x800,%eax
		adc    $0x0,%edx
		jae    jump_675c0
		mov    $0x80000000,%edx
		inc    %cx
	jump_675c0:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x7fff,%cx
		add    $0xc400,%cx
		cmp    $0x7ff,%cx
		jae    jump_675f6
		or     %cx,%cx
		jne    jump_675e5
		shrd   $0xc,%edx,%eax
		add    %edx,%edx
		shr    $0xc,%edx
		jmp    jump_675ef
	jump_675e5:
		shrd   $0xb,%edx,%eax
		add    %edx,%edx
		shrd   $0xb,%ecx,%edx
	jump_675ef:
		add    %bx,%bx
		rcr    %edx
		jmp    jump_67656
	jump_675f6:
		cmp    $0xc400,%cx
		jb     jump_67630
		cmp    $0xffcc,%cx
		jl     jump_6762a
		sub    $0xc,%cx
		neg    %cx
		cmp    $0x20,%cl
		jb     jump_67618
		sub    $0x20,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx
	jump_67618:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x0,%eax
		adc    $0x0,%edx
		jmp    jump_6762e
	jump_6762a:
		sub    %eax,%eax
		sub    %edx,%edx
	jump_6762e:
		jmp    jump_67656
	jump_67630:
		shrd   $0xb,%edx,%eax
		add    %edx,%edx
		shr    $0xb,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x43ff,%cx
		je     jump_67656
		push   %eax
		mov    $0x8,%al
		mov    $0x84,%ah
		call   func_6591c
		pop    %eax
	jump_67656:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_6765a:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %ebx
		mov    %edx,%ebx
		sub    %edx,%edx
		mov    %eax,%ecx
		sar    $0x17,%ecx
		and    $0xff,%cx
		je     jump_67693
		shl    $0x8,%eax
		cmp    $0xff,%cl
		je     jump_6767b
		add    $0x3f80,%cx
		jmp    jump_67689
	jump_6767b:
		mov    $0xff,%ch
		and    $0x7fffffff,%eax
		je     jump_67689
		or     $0x40000000,%eax
	jump_67689:
		add    %ecx,%ecx
		rcr    %cx
		or     $0x80000000,%eax
	jump_67693:
		mov    %edx,(%ebx)
		mov    %eax,0x4(%ebx)
		mov    %cx,0x8(%ebx)
		pop    %ebx
		pop    %ecx
		ret
.data
data_6769f:
		.ascii  "\xff\xff\xff\x7f\xff\xff\xff\x3f"
		.ascii  "\xff\xff\xff\x1f\xff\xff\xff\x0f"
		.ascii  "\xff\xff\xff\x07\xff\xff\xff\x03"
		.ascii  "\xff\xff\xff\x01\xff\xff\xff\x00"
		.ascii  "\xff\xff\x7f\x00\xff\xff\x3f\x00"
		.ascii  "\xff\xff\x1f\x00\xff\xff\x0f\x00"
		.ascii  "\xff\xff\x07\x00\xff\xff\x03\x00"
		.ascii  "\xff\xff\x01\x00\xff\xff\x00\x00"
		.ascii  "\xff\x7f\x00\x00\xff\x3f\x00\x00"
		.ascii  "\xff\x1f\x00\x00\xff\x0f\x00\x00"
		.ascii  "\xff\x07\x00\x00\xff\x03\x00\x00"
		.ascii  "\xff\x01\x00\x00\xff\x00\x00\x00"
		.ascii  "\x7f\x00\x00\x00\x3f\x00\x00\x00"
		.ascii  "\x1f\x00\x00\x00\x0f\x00\x00\x00"
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x01"
		.fill   0x7
.text


/*----------------------------------------------------------------*/
func_6771f:
/*----------------------------------------------------------------*/
		push   %edi
		mov    %eax,%edi
		sub    %ebx,%ebx
		mov    0x8(%edi),%bx
		cmp    $0x400,%dx
		je     jump_67734
		cmp    $0x800,%dx
	jump_67734:
		jne    jump_6773f
		or     %bh,%bh
		jns    jump_6773f
		xor    $0xc00,%dx
	jump_6773f:
		cmp    $0xc00,%dx
		jne    jump_6774a
		mov    $0x400,%dx
	jump_6774a:
		and    $0x7fff,%bx
		sub    $0x403f,%bx
		jl     jump_67758
		pop    %edi
		ret
	jump_67758:
		mov    (%edi),%ecx
		add    $0x20,%bx
		jl     jump_677ae
		mov    data_6769f(,%ebx,4),%eax
		and    %eax,%ecx
		xor    %ecx,(%edi)
		inc    %eax
		cmp    $0x400,%dx
		je     jump_677ac
		cmp    $0x0,%dx
		jne    jump_67799
		add    %ecx,%ecx
		cmp    %ecx,%eax
		ja     jump_677ac
		jne    jump_67799
		rol    %eax
		jae    jump_6778f
		test   %eax,0x4(%edi)
		jmp    jump_67791
	jump_6778f:
		test   %eax,(%edi)
	jump_67791:
		je     jump_677ac
		ror    %eax
	jump_67799:
		or     %ecx,%ecx
		je     jump_677ac
		add    %eax,(%edi)
		adcl   $0x0,0x4(%edi)
		jae    jump_677ac
		rcrl   0x4(%edi)
		incw   0x8(%edi)
	jump_677ac:
		pop    %edi
		ret
	jump_677ae:
		push   %esi
		movl   $0x0,(%edi)
		mov    0x4(%edi),%esi
		add    $0x20,%bx
		jl     jump_67811
		mov    data_6769f(,%ebx,4),%eax
		and    %eax,%esi
		xor    %esi,0x4(%edi)
		inc    %eax
		cmp    $0x400,%dx
		je     jump_6780e
		cmp    $0x0,%dx
		jne    jump_677fe
		rol    %ecx
		adc    %esi,%esi
		cmp    %esi,%eax
		ja     jump_6780e
		jne    jump_677fe
		or     %ecx,%ecx
		jne    jump_67802
		add    %eax,%eax
		jb     jump_677f6
		test   %eax,0x4(%edi)
	jump_677f6:
		je     jump_6780e
		shr    %eax
	jump_677fe:
		or     %esi,%ecx
		je     jump_6780e
	jump_67802:
		add    %eax,0x4(%edi)
		jae    jump_6780e
		rcrl   0x4(%edi)
		incw   0x8(%edi)
	jump_6780e:
		pop    %esi
		pop    %edi
		ret
	jump_67811:
		cmp    $0x400,%dx
		je     jump_67846
		cmp    $0x0,%dx
		jne    jump_67836
		inc    %bx
		jne    jump_67846
		cmp    $0x80000000,%esi
		jne    jump_67836
		or     %ecx,%ecx
		je     jump_67846
	jump_67836:
		movl   $0x80000000,0x4(%edi)
		orw    $0x3fff,0x8(%edi)
		pop    %esi
		pop    %edi
		ret
	jump_67846:
		sub    %eax,%eax
		mov    %eax,0x4(%edi)
		mov    %ax,0x8(%edi)
		pop    %esi
		pop    %edi
		ret
.data
data_67852:
		.ascii  "\x4e\x18\xe6\xc0\xe4\xc7\xd1\xb5"
		.ascii  "\xfa\x3f\x29\x0b\x01\x08\x08\x9b"
		.ascii  "\xc6\x84\xfb\xbf\x1a\x26\xc5\x6c"
		.ascii  "\x2e\x02\x46\x9d\xfb\x3f\x2a\x98"
		.ascii  "\x6b\x0a\x9d\xb9\x2b\xba\xfb\xbf"
		.ascii  "\x71\x01\x2b\x95\x27\x27\x8e\xe3"
		.ascii  "\xfb\x3f\xfc\x68\x9c\xdd\x72\x24"
		.ascii  "\x49\x92\xfc\xbf\xc1\xad\xeb\x94"
		.ascii  "\xcc\xcc\xcc\xcc\xfc\x3f\xf2\x81"
		.ascii  "\x97\xaa\xaa\xaa\xaa\xaa\xfd\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
.text


/*----------------------------------------------------------------*/
func_678ac:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		mov    %eax,%edi
		mov    0x8(%edi),%cx
		shl    %cx
		jne    jump_678ea
		testb  $0x80,0x9(%edx)
		je     jump_678d5
		movw   $0x4000,0x8(%ebx)
		movl   $0xc90fdaa2,0x4(%ebx)
		movl   $0x2168c235,(%ebx)
		jmp    jump_678e8
	jump_678d5:
		movw   $0x0,0x8(%ebx)
		movl   $0x0,0x4(%ebx)
		movl   $0x0,(%ebx)
	jump_678e8:
		jmp    jump_6795e
	jump_678ea:
		mov    0x8(%edx),%cx
		shl    %cx
		jne    jump_67912
		mov    0x8(%edi),%ax
		and    $0x8000,%ax
		or     $0x3fff,%ax
		mov    %ax,0x8(%ebx)
		movl   $0xc90fdaa2,0x4(%ebx)
		movl   $0x2168c235,(%ebx)
		jmp    jump_6795e
	jump_67912:
		mov    0x9(%edi),%ch
		call   func_6708f
		mov    %ebx,%eax
		call   func_67962
		mov    0x9(%ebx),%dl
		or     %ch,%ch
		js     jump_67944
		or     %dl,%dl
		jns    jump_67942
		mov    %ebx,%eax
		push   $0x4000
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_66e5a
	jump_67942:
		jmp    jump_6795e
	jump_67944:
		or     %dl,%dl
		jle    jump_6795e
		mov    %ebx,%eax
		push   $0xc000
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_66e5a
	jump_6795e:
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_67962:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		mov    %eax,%edi
		mov    $0x0,%ch
		mov    0x9(%edi),%cl
		andb   $0x7f,0x9(%edi)
		cmpw   $0x3fff,0x8(%edi)
		jne    jump_679a4
		cmpl   $0x80000000,0x4(%edi)
		jne    jump_679a4
		cmpl   $0x0,(%edi)
		jne    jump_679a4
		movl   $0x2168c235,(%edi)
		movl   $0xc90fdaa2,0x4(%edi)
		mov    $0x3ffe,%ax
		and    $0x80,%cl
		or     %cl,%ah
		mov    %ax,0x8(%edi)
		pop    %ecx
		pop    %esi
		pop    %edi
		ret
	jump_679a4:
		push   %edx
		push   %ebx
		cmpw   $0x3fff,0x8(%edi)
		jl     jump_679da
		push   %ecx
		mov    0x8(%edi),%si
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%esi
		mov    $0x3fff,%si
		mov    $0x80000000,%edx
		mov    $0x0,%eax
		call   func_670b9
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		mov    $0x2,%ch
	jump_679da:
		mov    0x8(%edi),%ax
		cmp    $0x3ffd,%ax
		jne    jump_679f5
		mov    0x4(%edi),%eax
		cmp    $0x8930a2f4,%eax
		jne    jump_679f5
		mov    (%edi),%eax
		cmp    $0xf66ab09b,%eax
	jump_679f5:
		jbe    jump_67a68
		push   %ecx
		mov    $0xc265539e,%ebx
		mov    $0xddb3d742,%ecx
		mov    $0x3fff0000,%esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		call   func_66e8a
		push   %eax
		push   %edx
		push   %esi
		mov    $0xc265539e,%ebx
		mov    $0xddb3d742,%ecx
		mov    $0x3fff0000,%esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		call   func_6728e
		sub    %ebx,%ebx
		mov    $0x80000000,%ecx
		rol    $0x10,%esi
		mov    $0xbfff,%si
		rol    $0x10,%esi
		call   func_66e8a
		pop    %ebx
		shl    $0x10,%ebx
		mov    %si,%bx
		mov    %ebx,%esi
		pop    %ecx
		pop    %ebx
		call   func_670b9
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		or     $0x1,%ch
	jump_67a68:
		mov    %edi,%eax
		lea    data_67852,%edx
		mov    $0x8,%ebx
		call   func_684de
		shr    %ch
		jae    jump_67a96
		mov    %edi,%eax
		push   $0x3ffe
		push   $0x860a91c1
		push   $0x6b9b2c23
		mov    %edi,%ebx
		call   func_66e5a
	jump_67a96:
		shr    %ch
		jae    jump_67ab6
		push   $0xbfff
		push   $0xc90fdaa2
		push   $0x2168c235
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_66e5a
		xorb   $0x80,0x9(%ebx)
	jump_67ab6:
		cmp    $0x0,%cl
		jns    jump_67abf
		xorb   $0x80,0x9(%edi)
	jump_67abf:
		pop    %ebx
		pop    %edx
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_67ac5:
/*----------------------------------------------------------------*/
		cmpw   $0x0,0x8(%eax)
		jne    jump_67ada
		cmpl   $0x0,0x4(%eax)
		jne    jump_67ada
		cmpl   $0x0,(%eax)
		jne    jump_67ada
		sub    %eax,%eax
		ret
	jump_67ada:
		cmpw   $0x0,0x8(%edx)
		jne    jump_67afa
		cmpl   $0x0,0x4(%edx)
		jne    jump_67afa
		cmpl   $0x0,(%edx)
		jne    jump_67afa
		sub    %edx,%edx
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		mov    %dx,0x8(%eax)
		sub    %eax,%eax
		ret
	jump_67afa:
		push   %ebp
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x8(%eax),%si
		mov    0x8(%edx),%di
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_67b2b
		pop    %ecx
		mov    %eax,(%ecx)
		mov    %edx,0x4(%ecx)
		mov    %si,0x8(%ecx)
		mov    %edi,%eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_67b2b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		and    $0x7fff,%esi
		and    $0x7fff,%edi
		sub    %edi,%esi
		jl     jump_67b8a
		sub    %edi,%edi
	jump_67b3f:
		cmp    %edx,%ecx
		jne    jump_67b4b
		cmp    %eax,%ebx
		je     jump_67b4d
	jump_67b4b:
		jae    jump_67b52
	jump_67b4d:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc
	jump_67b52:
		adc    %edi,%edi
		dec    %esi
		jl     jump_67b67
		add    %eax,%eax
		adc    %edx,%edx
		jb     jump_67b4d
		or     %edx,%edx
		js     jump_67b3f
		jmp    jump_67b52
	jump_67b67:
		sub    %esi,%esi
		or     %eax,%eax
		jne    jump_67b73
		or     %edx,%edx
		jne    jump_67b73
		jmp    jump_67b88
	jump_67b73:
		or     %edx,%edx
		js     jump_67b7e
		adc    %eax,%eax
		adc    %edx,%edx
		dec    %esi
		jmp    jump_67b73
	jump_67b7e:
		pop    %ecx
		push   %ecx
		and    $0x7fff,%ecx
		add    %ecx,%esi
	jump_67b88:
		jmp    jump_67b8e
	jump_67b8a:
		add    %edi,%esi
		sub    %edi,%edi
	jump_67b8e:
		pop    %ecx
		pop    %ebx
		and    $0x8000,%ebx
		or     %ebx,%esi
		or     %edx,%edx
		jne    jump_67b9e
		sub    %esi,%esi
	jump_67b9e:
		xor    %cx,%bx
		jns    jump_67ba5
		neg    %edi
	jump_67ba5:
		ret


/*----------------------------------------------------------------*/
func_67ba6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    data_65362(%edi),%ax
		mov    %eax,%edx
		and    %ds:0x8(%ebp),%ax
		cmp    %dx,%ax
		jne    jump_67bc4
		mov    $0x41,%al
		mov    $0x0,%dh
		jmp    jump_67c37
	jump_67bc4:
		not    %edx
		and    %dx,%ds:0x8(%ebp)
		mov    0x8(%ebx),%ax
		mov    %eax,%edx
		and    $0x80,%dh
		rol    %dh
		shl    %dh
		and    $0x7fff,%ax
		jne    jump_67bf8
		mov    0x4(%ebx),%eax
		or     (%ebx),%eax
		mov    $0x44,%al
		jne    jump_67bf6
		mov    data_6535c(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		mov    $0x40,%al
	jump_67bf6:
		jmp    jump_67c37
	jump_67bf8:
		cmp    $0x7fff,%ax
		jne    jump_67c20
		mov    data_65360(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		cmpl   $0x0,(%ebx)
		jne    jump_67c18
		mov    0x4(%ebx),%eax
		cmp    $0x80000000,%eax
	jump_67c18:
		mov    $0x1,%al
		jne    jump_67c1e
		mov    $0x5,%al
	jump_67c1e:
		jmp    jump_67c37
	jump_67c20:
		testb  $0x80,0x7(%ebx)
		mov    $0x4,%al
		jne    jump_67c37
		mov    data_65360(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		mov    $0x44,%al
	jump_67c37:
		or     %dh,%al
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     %al,%dh
		mov    %dx,%ds:0x4(%ebp)
		pop    %edx
		pop    %ebx
		ret
.data
		.ascii  "\x90"
data_67c4e:
		.ascii  "\xe9\x46\xe9\xb5\x9a\xad\x20\xca"
		.ascii  "\xfe\xbf\x09\x65\x7f\xb5\x00\x51"
		.ascii  "\x12\x83\x03\x40\x28\xd2\xac\x9d"
		.ascii  "\x95\xf8\x3f\x80\x05\xc0"
data_67c6c:
		.fill   0x7
		.ascii  "\x80\xff\x3f\xbb"
		.ascii   "vp>["
		.ascii  "\x02\xac\x8e\x04\xc0\x60\xef\x33"
		.ascii  "\xa9\xd0\x1f\x04\x9c\x07\x40\x96"
		.ascii  "\xbb\x83\x6c\xe0\xf4\x5f\xc0\x08"
		.ascii  "\xc0"
.text


/*----------------------------------------------------------------*/
func_67c94:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %eax
		push   $0x3fff
		push   $0x80000000
		push   $0x0
		mov    %eax,%ebx
		call   func_66e5a
		pop    %eax
		pop    %edx
		pop    %ebx


/*----------------------------------------------------------------*/
func_67cad:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		call   func_67cf0
		pop    %eax
		mov    %edx,%ebx
		push   %edx
		call   func_67264
		pop    %edi
		mov    0x8(%edi),%si
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%esi
		mov    $0x3fff,%si
		mov    $0xb8aa3b29,%edx
		mov    $0x5c17f0bd,%eax
		call   func_6728e
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_67cf0:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		sub    %ecx,%ecx
		mov    0x8(%eax),%cx
		or     %cx,%cx
		js     jump_67d02
		jmp    jump_67d02
	jump_67d02:
		mov    %eax,%edi
		mov    $0x3ffe,%edx
		sub    $0x3ffe,%ecx
		push   %ecx
		mov    %dx,0x8(%edi)
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    $0xbffe3ffe,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_66e8a
		cmpw   $0x3ffe,0x8(%edi)
		jne    jump_67d41
		cmpl   $0xb504f333,0x4(%edi)
		jne    jump_67d41
		cmpl   $0xf9de6484,(%edi)
	jump_67d41:
		jbe    jump_67d5d
		and    $0xffff,%esi
		or     $0xbffe0000,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_66e8a
		jmp    jump_67d69
	jump_67d5d:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		decl   (%esp)
	jump_67d69:
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		dec    %si
		and    $0xffff,%esi
		or     $0x3ffe0000,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_66e8a
		shl    $0x10,%esi
		mov    %edx,%ecx
		mov    %eax,%ebx
		pop    %eax
		mov    %ax,%si
		pop    %edx
		pop    %eax
		call   func_670b9
		push   %eax
		push   %edx
		push   %esi
		mov    %esi,%ecx
		shl    $0x10,%esi
		mov    %cx,%si
		mov    %edx,%ecx
		mov    %eax,%ebx
		call   func_6728e
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		mov    $0x3,%ebx
		lea    data_67c6c,%ecx
		call   func_6848c
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		lea    data_67c4e,%ecx
		mov    $0x2,%ebx
		call   func_6848c
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_670b9
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_6728e
		rol    $0x10,%esi
		mov    (%esp),%si
		rol    $0x10,%esi
		mov    0x4(%esp),%ecx
		mov    0x8(%esp),%ebx
		call   func_6728e
		rol    $0x10,%esi
		pop    %ecx
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_66e8a
		pop    %ecx
		or     %ecx,%ecx
		je     jump_67eb2
		push   %eax
		push   %edx
		push   %esi
		mov    %edi,%edx
		mov    %ecx,%eax
		call   func_6744e
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		and    $0xffff,%esi
		or     $0xbff20000,%esi
		mov    $0xde8082e3,%ecx
		mov    $0x865435c,%ebx
		call   func_6728e
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_66e8a
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		and    $0xffff,%esi
		or     $0x3ffe0000,%esi
		mov    $0xb1800000,%ecx
		sub    %ebx,%ebx
		call   func_6728e
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_66e8a
	jump_67eb2:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret
.data
		.ascii  "\x90"
data_67ec2:
		.ascii  "\x59\x53\x6a\x85\x81\x3b\x96\xca"
		.ascii  "\xce\x3f\x8f\xf8\xc0\x9d\x39\x9f"
		.ascii  "\x3f\xd7\xd6\xbf\xe5\x4b\x68\x43"
		.ascii  "\x9d\x30\x92\xb0\xde\x3f\x7f\x1c"
		.ascii  "\x27\xaa\x3f\x2b\x32\xd7\xe5\xbf"
		.ascii  "\x7d\x9c\x39\xb6\x2a\x1d\xef\xb8"
		.ascii  "\xec\x3f\x0c\xd0\x00\x0d\xd0\x00"
		.ascii  "\x0d\xd0\xf2\xbf\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\xf8\x3f\xaa\xaa"
		.ascii  "\xaa\xaa\xaa\xaa\xaa\xaa\xfc\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
data_67f1c:
		.ascii  "\x8f\xf8\xc0\x9d\x39\x9f\x3f\xd7"
		.ascii  "\xd2\x3f\x05\xe9\xe4\x03\x46\xa5"
		.ascii  "\xcb\xc9\xda\xbf\xaa\xbd\xc4\xc6"
		.ascii  "\x7f\xc7\x76\x8f\xe2\x3f\x97\xe3"
		.ascii  "\xfa\xc4\xbb\x7d\xf2\x93\xe9\xbf"
		.ascii  "\x0d\xd0\x00\x0d\xd0\x00\x0d\xd0"
		.ascii  "\xef\x3f\x0b\xb6\x60\x0b\xb6\x60"
		.ascii  "\x0b\xb6\xf5\xbf\xaa\xaa\xaa\xaa"
		.ascii  "\xaa\xaa\xaa\xaa\xfa\x3f"
		.fill   0x7
		.ascii  "\x80\xfe\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
data_67f76:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x04\x00\x04\x00\x05\x00\x05\x00"
		.ascii  "\x06\x00"
.text


/*----------------------------------------------------------------*/
func_67f88:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %edx
		push   %ecx
		push   %ebx
		mov    %esp,%ebp
		sub    $0xc,%esp
		mov    %eax,%edi
		sub    %ecx,%ecx
		mov    0x8(%eax),%cx
		and    $0x7fff,%cx
		sub    $0x3ffe,%cx
		cmp    $0x20,%cx
		jl     jump_67faa
	jump_67faa:
		push   %ecx
		push   %esi
		push   %edi
		mov    0x8(%eax),%si
		mov    $0x3ffe,%di
		mov    $0xc90fdaa2,%ecx
		mov    $0x2168c235,%ebx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_67b2b
		pop    %ecx
		mov    %eax,(%ecx)
		mov    %edx,0x4(%ecx)
		mov    %si,0x8(%ecx)
		mov    %edi,%eax
		mov    %ecx,%edi
		pop    %esi
		testb  $0x80,0x9(%edi)
		je     jump_67ff9
		push   %eax
		mov    %edi,%ebx
		mov    %edi,%eax
		push   $0x3ffe
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_66e5a
		pop    %eax
		dec    %eax
	jump_67ff9:
		mov    %esi,%ebx
		mov    %bl,%ah
		and    $0x2,%bl
		add    %bl,%al
		and    $0x7,%al
		push   %eax
		test   $0x1,%al
		je     jump_68025
		push   $0xbffe
		push   $0xc90fdaa2
		push   $0x2168c235
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_66e5a
		xorb   $0x80,0x9(%ebx)
	jump_68025:
		sub    %ecx,%ecx
		mov    0x8(%edi),%cx
		sub    $0x3ffe,%cx
		cmp    $0xffe0,%cx
		jge    jump_6804f
		movl   $0x0,-0xc(%ebp)
		movl   $0x80000000,-0x8(%ebp)
		movw   $0x3fff,-0x4(%ebp)
		jmp    jump_680e6
	jump_6804f:
		or     %cx,%cx
		js     jump_68058
		mov    $0x0,%cx
	jump_68058:
		neg    %cx
		cmp    $0x8,%cx
		jle    jump_68065
		mov    $0x8,%cx
	jump_68065:
		mov    data_67f76(,%ecx,2),%cx
		push   %ecx
		mov    -0x14(%ebp),%eax
		inc    %al
		and    $0x2,%al
		jne    jump_6807f
		cmp    $0x1,%ah
		je     jump_6807f
		jmp    jump_680bd
	jump_6807f:
		push   %eax
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_6728e
		mov    -0x18(%ebp),%ecx
		mov    $0x8,%ebx
		sub    %ecx,%ebx
		lea    (%ecx,%ecx,4),%ecx
		lea    data_67f1c(,%ecx,2),%ecx
		call   func_6848c
		mov    %eax,-0xc(%ebp)
		mov    %edx,-0x8(%ebp)
		mov    %si,-0x4(%ebp)
		pop    %eax
	jump_680bd:
		cmp    $0x0,%al
		je     jump_680c8
		cmp    $0x1,%ah
		je     jump_680c8
		jmp    jump_680e6
	jump_680c8:
		mov    %edi,%eax
		mov    -0x18(%ebp),%ecx
		mov    $0x8,%ebx
		sub    %ecx,%ebx
		lea    (%ecx,%ecx,4),%ecx
		add    %ecx,%ecx
		lea    data_67ec2,%edx
		add    %ecx,%edx
		call   func_684de
	jump_680e6:
		mov    -0x14(%ebp),%eax
		inc    %al
		and    $0x2,%al
		je     jump_680fb
		mov    -0xc(%ebp),%eax
		mov    -0x8(%ebp),%edx
		mov    -0x4(%ebp),%si
		jmp    jump_68104
	jump_680fb:
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
	jump_68104:
		mov    -0x14(%ebp),%ecx
		test   $0x4,%cl
		je     jump_68111
		xor    $0x8000,%si
	jump_68111:
		cmp    $0x1,%ch
		jne    jump_6816e
		rol    $0x10,%esi
		add    $0x2,%cl
		mov    %cl,%bl
		inc    %bl
		and    $0x2,%bl
		je     jump_68134
		and    $0x4,%cl
		mov    -0xc(%ebp),%ebx
		mov    -0x8(%ebp),%ecx
		mov    -0x4(%ebp),%si
		jmp    jump_68140
	jump_68134:
		and    $0x4,%cl
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		mov    0x8(%edi),%si
	jump_68140:
		je     jump_68148
		xor    $0x8000,%esi
	jump_68148:
		rol    $0x10,%esi
		or     %ebx,%ebx
		jne    jump_68169
		or     %ecx,%ecx
		jne    jump_68169
		test   $0x7fff0000,%esi
		jne    jump_68169
		sub    %eax,%eax
		mov    $0x80000000,%edx
		or     $0x7fff,%si
		jmp    jump_6816e
	jump_68169:
		call   func_670b9
	jump_6816e:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		mov    %ebp,%esp
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_6817f:
/*----------------------------------------------------------------*/
		push   %esi
		sub    %esi,%esi
		call   func_67f88
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_68189:
/*----------------------------------------------------------------*/
		push   %esi
		mov    $0x2,%esi
		call   func_67f88
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_68196:
/*----------------------------------------------------------------*/
		push   %esi
		mov    $0x1,%esi
		call   func_67f88
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_681a4:
/*----------------------------------------------------------------*/
		adc    $0x67cc487b,%eax
		ret


/*----------------------------------------------------------------*/
func_681cc:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    %eax,%edi
		sub    %esi,%esi
		mov    0x8(%edi),%cx
		andb   $0x7f,0x9(%edi)
		cmpw   $0x0,0x8(%edi)
		jne    jump_681ee
		cmpl   $0x0,0x4(%edi)
		jne    jump_681ee
		cmpl   $0x0,(%edi)
	jump_681ee:
		je     jump_68256
		or     %cx,%cx
		jns    jump_6820f
		dec    %esi
		push   $0xbfff
		push   $0x80000000
		push   $0x0
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_66e5a
		xorb   $0x80,0x9(%ebx)
	jump_6820f:
		mov    0x8(%edi),%bx
		add    $0x4,%bx
		sub    %ecx,%ecx
		mov    0x4(%edi),%edx
		mov    (%edi),%eax
	jump_6821e:
		cmp    $0x3fff,%bx
		jb     jump_6822f
		add    %eax,%eax
		adc    %edx,%edx
		adc    %ecx,%ecx
		dec    %bx
		jmp    jump_6821e
	jump_6822f:
		or     %edx,%edx
		jne    jump_68235
		or     %eax,%eax
	jump_68235:
		jne    jump_6823b
		sub    %ebx,%ebx
		jmp    jump_6824b
	jump_6823b:
		or     %edx,%edx
		js     jump_68247
		add    %eax,%eax
		adc    %edx,%edx
		dec    %bx
		jmp    jump_6823b
	jump_68247:
		sub    $0x4,%bx
	jump_6824b:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %bx,0x8(%edi)
		jmp    jump_68258
	jump_68256:
		sub    %ecx,%ecx
	jump_68258:
		push   %esi
		push   %ecx
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_6728e
		push   %eax
		push   %edx
		push   %esi
		mov    $0xa6829a79,%ecx
		mov    $0x1bf21f8c,%ebx
		and    $0xffff,%esi
		or     $0x40030000,%esi
		call   func_66e8a
		mov    %esp,%ebp
		xchg   %eax,0x8(%ebp)
		xchg   %edx,0x4(%ebp)
		xchg   %esi,0x0(%ebp)
		mov    $0xec96f0d6,%ecx
		mov    $0x9d7bfdb,%ebx
		and    $0xffff,%esi
		or     $0x3ffa0000,%esi
		call   func_6728e
		mov    $0xe6d5051a,%ecx
		mov    $0xe536e187,%ebx
		and    $0xffff,%esi
		or     $0x40010000,%esi
		call   func_66e8a
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_6728e
		push   %eax
		push   %edx
		push   %esi
		xor    $0x8000,%esi
		rol    $0x10,%esi
		mov    0x0(%ebp),%si
		rol    $0x10,%esi
		mov    0x8(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_66e8a
		xchg   %eax,-0x4(%ebp)
		xchg   %edx,-0x8(%ebp)
		xchg   %esi,-0xc(%ebp)
		rol    $0x10,%esi
		mov    0x0(%ebp),%si
		rol    $0x10,%esi
		mov    0x8(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_66e8a
		rol    $0x10,%esi
		mov    -0xc(%ebp),%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ecx
		pop    %ebx
		call   func_670b9
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		add    $0xc,%esp
		pop    %ecx
		lea    func_681a4,%esi
	jump_68347:
		or     %ecx,%ecx
		je     jump_6837f
		shr    %ecx
		jae    jump_6837a
		push   %ecx
		push   %esi
		mov    0x8(%edi),%ax
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%eax
		mov    %cs:0x8(%esi),%ax
		mov    %cs:0x4(%esi),%edx
		mov    %cs:(%esi),%esi
		xchg   %eax,%esi
		call   func_6728e
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %esi
		pop    %ecx
	jump_6837a:
		lea    0xa(%esi),%esi
		jmp    jump_68347
	jump_6837f:
		pop    %esi
		add    %si,0x8(%edi)
		mov    %edi,%eax
		push   $0xbfff
		push   $0x80000000
		push   $0x0
		mov    %edi,%ebx
		call   func_66e5a
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_683a0:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x8(%eax),%cx
		mov    0x4(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    jump_683e6
		or     %edx,%edx
		jne    jump_683db
		add    %cx,%cx
		je     jump_68466
	jump_683bf:
		movw   $0xffff,0x8(%eax)
		movl   $0x0,0x4(%eax)
		movl   $0x0,(%eax)
	jump_683d2:
		orb    $0xc0,0x7(%eax)
		jmp    jump_68466
	jump_683db:
		cmp    $0x7fff,%cx
		je     jump_68466
	jump_683e6:
		mov    %ecx,%edx
		and    $0x7f,%dh
		cmp    $0x7fff,%dx
		je     jump_683d2
		add    %cx,%cx
		jb     jump_683d2
		shr    %cx
		je     jump_68403
		mov    0x4(%eax),%edx
		add    %edx,%edx
		jae    jump_683bf
	jump_68403:
		mov    0x4(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x3fff,%cx
		sar    %cx
		jb     jump_68419
		shr    %edx
		rcr    %ebx
		rcr    %edi
	jump_68419:
		add    $0x3fff,%cx
		mov    %cx,0x8(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc
		rcr    %esi
		inc    %edx
		je     jump_6844c
		dec    %edx
	jump_6842f:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    jump_68441
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    jump_6842f
	jump_68441:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    jump_68455
	jump_6844c:
		cmp    %esi,%eax
		je     jump_6845e
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi
	jump_68455:
		sub    %edx,%edx
		stc
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax
	jump_6845e:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x4(%esi)
	jump_68466:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_6848c:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		push   %esi
		push   %edx
		push   %eax
		mov    %esp,%ebp
		mov    %ecx,%edi
		mov    %cs:(%edi),%eax
		mov    %cs:0x4(%edi),%edx
		mov    %cs:0x8(%edi),%si
	jump_684a3:
		rol    $0x10,%esi
		mov    0x8(%ebp),%si
		rol    $0x10,%esi
		mov    0x0(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_6728e
		lea    0xa(%edi),%edi
		mov    %cs:(%edi),%ebx
		mov    %cs:0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    %cs:0x8(%edi),%si
		rol    $0x10,%esi
		call   func_66e8a
		decl   0xc(%ebp)
		jne    jump_684a3
		add    $0x10,%esp
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_684de:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%edi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_6728e
		pop    %ecx
		pop    %ebx
		call   func_6848c
		rol    $0x10,%esi
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_6728e
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func___hook387:	/* 0x68526 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %edx
		mov    %eax,%ebp
		mov    $0x1600,%ax
		int    $0x2f
		test   %al,%al
		je     jump_6858c
		cmp    $0x80,%al
		je     jump_6858c
		xor    %al,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		cmp    $0x666,%ax
		jne    jump_6858c
		mov    $0x22,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		test   %ax,%ax
		jne    jump_6858c
		mov    $0x1,%dh
		mov    $0x1e,%al
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %dh,data_759d1
		xor    %edx,%edx
		mov    $0xfa,%ah
		int    $0x2f
		mov    %cs,%eax
		mov    $data_12859c,%ebx
		mov    %eax,%edx
		mov    %ebx,%ecx
		mov    $0x20,%al
		shr    $0x10,%ecx
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1,%al
		jmp    jump_685e6
	jump_6858c:
		mov    (%esp),%edx
		test   %ebp,%ebp
		jne    jump_68598
		test   %dx,%dx
		je     jump_685e4
	jump_68598:
		mov    $data_7885c,%esi
		mov    $0xa00,%eax
		push   %es
		int    $0x31
		sbb    %eax,%eax
		pop    %es
		test   %eax,%eax
		jne    jump_685e4
		mov    $0x7,%eax
		mov    $func___int7,%ebx
		mov    %cs,%ecx
		call   func__dos_setvect_
		mov    (%esp),%es
		mov    %es:0x40(%ebp),%ah
		movb   $0x1,%es:0x3e(%ebp)
		or     $0x4,%ah
		mov    %ah,%es:0x40(%ebp)
		mov    %cr0,%eax
		or     $0x4,%al
		mov    $0x1,%dl
		mov    %eax,%cr0
		mov    $0x30,%ah
		int    $0x21
		mov    %dl,data_759d0
	jump_685e4:
		xor    %al,%al
	jump_685e6:
		add    $0x4,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___unhook387:	/* 0x685f0 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %es
		mov    %edx,%es
		mov    data_759d1,%dl
		test   %dl,%dl
		je     jump_6861f
		mov    %cs,%eax
		mov    %eax,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0x21,%al
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1f,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1,%al
		pop    %es
		pop    %ecx
		pop    %ebx
		ret
	jump_6861f:
		cmpb   $0x0,data_759d0
		je     jump_68643
		mov    %es:0x40(%eax),%bl
		mov    %dl,%es:0x3e(%eax)
		and    $0xfb,%bl
		mov    %bl,%es:0x40(%eax)
		mov    %cr0,%eax
		and    $0xfb,%al
		mov    %eax,%cr0
		mov    $0x30,%ah
		int    $0x21
	jump_68643:
		xor    %al,%al
		pop    %es
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_nullsub_3:	/* 0x68649 */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func___init_80x87:	/* 0x6864a */
/*----------------------------------------------------------------*/
		push   %ax
		finit
		fld1
		fldz
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs
		fcompp
		fnstsw %ax
		mov    $0x2,%al
		sahf
		je     jump_68664
		mov    $0x3,%al
	jump_68664:
		finit
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret


/*----------------------------------------------------------------*/
func_toupper_:	/* 0x68671 */
/*----------------------------------------------------------------*/
		cmp    $0x61,%eax
		jl     jump_6867e
		cmp    $0x7a,%eax
		jg     jump_6867e
		sub    $0x20,%eax
	jump_6867e:
		ret


/*----------------------------------------------------------------*/
func___leapyear_:	/* 0x6867f */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x3,%bl
		jne    jump_686b4
		mov    %eax,%edx
		mov    $0x64,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     jump_686a2
	jump_68699:
		mov    $0x1,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_686a2:
		mov    $0x190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     jump_68699
	jump_686b4:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_calc_yday_:	/* 0x686ba */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%ebx
		mov    0x20(%eax),%ecx
		test   %ecx,%ecx
		jne    jump_68787
		lea    0x76c(%edx),%eax
		call   func___leapyear_
		test   %eax,%eax
		je     jump_686f1
		mov    0x10(%ebx),%eax
		mov    data_788ca(,%eax,2),%esi
		mov    data_788c8(,%eax,2),%eax
		jmp    jump_68702
	jump_686f1:
		mov    0x10(%ebx),%eax
		mov    data_788b0(,%eax,2),%esi
		mov    data_788ae(,%eax,2),%eax
	jump_68702:
		sar    $0x10,%esi
		sar    $0x10,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x1,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x4(%esp)
		mov    %edi,0x8(%esp)
		mov    %ecx,0xc(%esp)
		mov    0x10(%ebx),%eax
		mov    %eax,0x10(%esp)
		mov    %edx,0x14(%esp)
		mov    %esp,%eax
		mov    %edi,0x20(%esp)
		call   w_dos_mktime
		mov    0x18(%esp),%ebp
		mov    0x18(%ebx),%edx
		sub    %ebp,%edx
		add    $0x7,%edx
		mov    $0x7,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0xc(%ebx),%eax
		cmp    $0x5,%eax
		jne    jump_68775
		lea    -0x1(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x3,%edi
		lea    0x1(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    jump_68771
		mov    0xc(%ebx),%eax
		sub    $0x2,%eax
		jmp    jump_68776
	jump_68771:
		mov    %ecx,%eax
		jmp    jump_68776
	jump_68775:
		dec    %eax
	jump_68776:
		mov    0x1c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x3,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    jump_68796
	jump_68787:
		cmp    $0x1,%ecx
		jne    jump_68793
		mov    0x1c(%eax),%eax
		sub    %ecx,%eax
		jmp    jump_68796
	jump_68793:
		mov    0x1c(%eax),%eax
	jump_68796:
		add    $0x24,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_check_order_:	/* 0x6879f */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%edx
		call   func_calc_yday_
		mov    %eax,%edi
		mov    %ebx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   func_calc_yday_
		cmp    %eax,%edi
		jle    jump_687c1
		mov    $0x1,%ecx
	jump_687c1:
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___isindst_:	/* 0x687c7 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%ecx
		mov    $data_75a04,%edx
		mov    0x14(%eax),%ebx
		mov    $data_759e0,%eax
		xor    %edi,%edi
		call   func_check_order_
		mov    %eax,0xc(%esp)
		test   %eax,%eax
		je     jump_687fa
		mov    $data_75a04,%ebx
		mov    $data_759e0,%esi
		jmp    jump_68804
	jump_687fa:
		mov    $data_759e0,%ebx
		mov    $data_75a04,%esi
	jump_68804:
		mov    0x14(%ecx),%eax
		add    $0x76c,%eax
		mov    0x10(%ecx),%ebp
		call   func___leapyear_
		mov    %eax,%edx
		lea    0x0(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     jump_6882c
		mov    data_788ca(%eax),%edx
		mov    data_788c8(%eax),%eax
		jmp    jump_68838
	jump_6882c:
		mov    data_788b0(%eax),%edx
		mov    data_788ae(%eax),%eax
	jump_68838:
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,0x8(%esp)
		xor    %edx,%edx
		mov    0x20(%ebx),%eax
		mov    %edx,0x14(%esp)
		test   %eax,%eax
		jne    jump_68908
		mov    0x10(%ebx),%eax
		cmp    %eax,%ebp
		jle    jump_68866
		mov    $0x1,%edi
		jmp    jump_68941
	jump_68866:
		jne    jump_68941
		mov    0x18(%ecx),%edx
		mov    0x18(%ebx),%eax
		add    $0x7,%edx
		sub    %eax,%edx
		movl   $0x7,0x18(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x18(%esp)
		mov    0xc(%ecx),%eax
		sub    %edx,%eax
		mov    0x18(%ecx),%edx
		mov    %eax,0x4(%esp)
		add    $0x6,%edx
		sub    0x18(%ebx),%edx
		movl   $0x7,0x18(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idivl  0x18(%esp)
		mov    0xc(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0xc(%ebx),%edx
		mov    %eax,(%esp)
		cmp    $0x5,%edx
		jne    jump_688e1
		mov    0x8(%esp),%eax
		mov    0x4(%esp),%edx
		sub    $0x7,%eax
		cmp    %edx,%eax
		jge    jump_68941
		mov    (%esp),%edx
		mov    $0x1,%edi
		cmp    %edx,%eax
		jl     jump_68941
		jmp    jump_6893d
	jump_688e1:
		lea    -0x1(%edx),%eax
		mov    %eax,0x18(%esp)
		mov    0x18(%esp),%edx
		shl    $0x3,%eax
		sub    %edx,%eax
		mov    0x4(%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     jump_68941
		mov    (%esp),%edx
		mov    $0x1,%edi
		cmp    %edx,%eax
		jle    jump_68941
		jmp    jump_6893d
	jump_68908:
		mov    0x1c(%ebx),%edx
		cmp    $0x1,%eax
		jne    jump_6892f
		mov    0x14(%ecx),%eax
		add    $0x76c,%eax
		call   func___leapyear_
		test   %eax,%eax
		je     jump_6892e
		mov    data_788b2,%eax
		sar    $0x10,%eax
		cmp    %eax,%edx
		jle    jump_6892e
		inc    %edx
	jump_6892e:
		dec    %edx
	jump_6892f:
		mov    0x1c(%ecx),%eax
		cmp    %eax,%edx
		jg     jump_68941
		mov    $0x1,%edi
		jne    jump_68941
	jump_6893d:
		mov    %edi,0x14(%esp)
	jump_68941:
		cmpl   $0x0,0x14(%esp)
		je     jump_68959
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   func_time_less_
		test   %eax,%eax
		sete   %al
		movzbl %al,%edi
	jump_68959:
		test   %edi,%edi
		jne    jump_68970
		mov    0xc(%esp),%esi
		test   %esi,%esi
		je     jump_68a5c
		mov    %esi,%edi
		jmp    jump_68a5c
	jump_68970:
		xor    %ebx,%ebx
		mov    0x20(%esi),%eax
		mov    %ebx,0x10(%esp)
		test   %eax,%eax
		jne    jump_68a00
		mov    0x10(%esi),%ebx
		cmp    %ebx,%ebp
		jle    jump_6898f
		xor    %edi,%edi
		jmp    jump_68a3c
	jump_6898f:
		jne    jump_68a3c
		mov    0x18(%ecx),%edx
		mov    0x18(%esi),%ebx
		add    $0x7,%edx
		sub    %ebx,%edx
		mov    $0x7,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0xc(%ecx),%ebp
		sub    %edx,%ebp
		mov    0x18(%ecx),%edx
		mov    0x18(%esi),%eax
		add    $0x6,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0xc(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0xc(%esi),%ebx
		mov    %eax,%edx
		cmp    $0x5,%ebx
		jne    jump_689ed
		mov    0x8(%esp),%eax
		sub    $0x7,%eax
		cmp    %eax,%ebp
		jg     jump_689e7
	jump_689e0:
		mov    $0x1,%edi
		jmp    jump_68a3c
	jump_689e7:
		cmp    %eax,%edx
		jg     jump_68a3c
		jmp    jump_68a34
	jump_689ed:
		dec    %ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		sub    %ebx,%eax
		inc    %eax
		cmp    %eax,%ebp
		jl     jump_689e0
		cmp    %eax,%edx
		jge    jump_68a3c
		jmp    jump_68a34
	jump_68a00:
		mov    0x1c(%esi),%ebx
		cmp    $0x1,%eax
		jne    jump_68a27
		mov    0x14(%ecx),%eax
		add    $0x76c,%eax
		call   func___leapyear_
		test   %eax,%eax
		je     jump_68a26
		mov    data_788b2,%eax
		sar    $0x10,%eax
		cmp    %eax,%ebx
		jle    jump_68a26
		inc    %ebx
	jump_68a26:
		dec    %ebx
	jump_68a27:
		mov    0x1c(%ecx),%ebp
		cmp    %ebp,%ebx
		jg     jump_68a3c
		xor    %edi,%edi
		cmp    %ebp,%ebx
		jne    jump_68a3c
	jump_68a34:
		movl   $0x1,0x10(%esp)
	jump_68a3c:
		cmpl   $0x0,0x10(%esp)
		je     jump_68a4e
		mov    %ecx,%eax
		mov    %esi,%edx
		call   func_time_less_
		mov    %eax,%edi
	jump_68a4e:
		mov    0xc(%esp),%ebx
		test   %ebx,%ebx
		je     jump_68a5c
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
	jump_68a5c:
		mov    %edi,%eax
		mov    %edi,0x20(%ecx)
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_time_less_:	/* 0x68a6b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x8(%eax),%ecx
		mov    0x8(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     jump_68a8f
		jne    jump_68a94
		mov    0x4(%eax),%ecx
		mov    0x4(%edx),%ebp
		cmp    %ebp,%ecx
		jl     jump_68a8f
		jne    jump_68a94
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    jump_68a94
	jump_68a8f:
		mov    $0x1,%ebx
	jump_68a94:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___brktime_:	/* 0x68a9b */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0xa8c0,%edx
		jae    jump_68ac8
		test   %ebx,%ebx
		jle    jump_68ac8
		lea    0x15180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x15180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    jump_68ad7
	jump_68ac8:
		mov    $0x15180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
	jump_68ad7:
		mov    $0x15180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0xe10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x8(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x3c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x4(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x16e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    jump_68b3e
		lea    -0x1(%edx),%eax
		shr    $0x2,%eax
		sub    %eax,%ebx
	jump_68b3e:
		lea    0x76c(%edx),%eax
		call   func___leapyear_
		add    $0x16d,%eax
	jump_68b4e:
		cmp    %eax,%ebx
		jb     jump_68b57
		inc    %edx
		sub    %eax,%ebx
		jmp    jump_68b4e
	jump_68b57:
		mov    $data_788b0,%esi
		mov    %ebx,0x1c(%ecx)
		lea    0x76c(%edx),%eax
		mov    %edx,0x14(%ecx)
		call   func___leapyear_
		test   %eax,%eax
		je     jump_68b76
		mov    $data_788ca,%esi
	jump_68b76:
		mov    $0x1f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x10,%edx
		cmp    %edx,%ebx
		jb     jump_68b8e
		inc    %eax
	jump_68b8e:
		mov    %eax,0x10(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x1(%edi),%eax
		mov    %ebx,0xc(%ecx)
		mov    $0x7,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x18(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_tzset_:	/* 0x68bda */
/*----------------------------------------------------------------*/
		mov    $data_7886c,%eax
		call   func_getenv_
		test   %eax,%eax
		jne    func___parse_tz_
		ret


/*----------------------------------------------------------------*/
func_parse_time_:	/* 0x68bed */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %edx,%edx
	jump_68bf3:
		mov    (%eax),%bl
		cmp    $0x30,%bl
		jb     jump_68c0e
		cmp    $0x39,%bl
		ja     jump_68c0e
		imul   $0xa,%edx,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		add    %ebx,%edx
		inc    %eax
		sub    $0x30,%edx
		jmp    jump_68bf3
	jump_68c0e:
		mov    %edx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_parse_offset_:	/* 0x68c13 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,0x10(%esp)
		cmpb   $0x3a,(%eax)
		jne    jump_68c26
		inc    %ebp
	jump_68c26:
		mov    %ebp,%esi
	jump_68c28:
		mov    0x0(%ebp),%dl
		test   %dl,%dl
		je     jump_68c4b
		cmp    $0x2c,%dl
		je     jump_68c4b
		cmp    $0x2d,%dl
		je     jump_68c4b
		cmp    $0x2b,%dl
		je     jump_68c4b
		cmp    $0x30,%dl
		jb     jump_68c48
		cmp    $0x39,%dl
		jbe    jump_68c4b
	jump_68c48:
		inc    %ebp
		jmp    jump_68c28
	jump_68c4b:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0xc(%esp)
		cmp    $0x1e,%eax
		jle    jump_68c60
		movl   $0x1e,0xc(%esp)
	jump_68c60:
		mov    0x10(%esp),%edi
		mov    0xc(%esp),%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0xc(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		xor    %esi,%esi
		movb   $0x0,(%eax)
		lea    0x1(%ebp),%eax
		cmp    $0x2d,%dl
		jne    jump_68c99
		mov    $0x1,%esi
		jmp    jump_68c9e
	jump_68c99:
		cmp    $0x2b,%dl
		jne    jump_68ca0
	jump_68c9e:
		mov    %eax,%ebp
	jump_68ca0:
		mov    0x0(%ebp),%al
		cmp    $0x30,%al
		jb     jump_68d1f
		cmp    $0x39,%al
		ja     jump_68d1f
		lea    0x8(%esp),%edx
		xor    %edi,%edi
		mov    %ebp,%eax
		mov    %edi,(%esp)
		mov    %edi,0x4(%esp)
		mov    %edi,0x8(%esp)
		call   func_parse_time_
		mov    %eax,%edx
		mov    (%eax),%cl
		mov    %eax,%ebp
		cmp    $0x3a,%cl
		jne    jump_68cf0
		lea    0x4(%esp),%edx
		inc    %eax
		call   func_parse_time_
		mov    %eax,%edx
		mov    (%eax),%ch
		mov    %eax,%ebp
		cmp    %cl,%ch
		jne    jump_68cf0
		mov    %esp,%edx
		inc    %eax
		call   func_parse_time_
		mov    %eax,%ebp
	jump_68cf0:
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x4(%esp),%edx
		shl    $0x2,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		shl    $0x2,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %esi,%esi
		je     jump_68d1f
		mov    %edx,%ecx
		neg    %ecx
		mov    %ecx,(%ebx)
	jump_68d1f:
		mov    %ebp,%eax
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_parse_rule_:	/* 0x68d29 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x10,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%eax),%ah
		mov    $0xffffffff,%esi
		cmp    $0x4a,%ah
		jne    jump_68d46
		mov    $0x1,%esi
		add    %esi,%ebx
	jump_68d46:
		cmpb   $0x4d,(%ebx)
		jne    jump_68d4e
		inc    %ebx
		xor    %esi,%esi
	jump_68d4e:
		lea    0xc(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x20(%ecx)
		call   func_parse_time_
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     jump_68d6d
		mov    0xc(%esp),%eax
		mov    %eax,0x1c(%ecx)
		jmp    jump_68db2
	jump_68d6d:
		mov    0xc(%esp),%eax
		dec    %eax
		mov    %eax,0x10(%ecx)
		cmpb   $0x2e,(%edx)
		jne    jump_68dab
		lea    0x1(%edx),%eax
		lea    0xc(%esp),%edx
		call   func_parse_time_
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0xc(%esp),%eax
		mov    %eax,0xc(%ecx)
		cmpb   $0x2e,(%edx)
		jne    jump_68dab
		lea    0x1(%edx),%eax
		lea    0xc(%esp),%edx
		call   func_parse_time_
		mov    %eax,%ebx
		mov    0xc(%esp),%eax
		mov    %eax,0x18(%ecx)
	jump_68dab:
		movl   $0x0,0x1c(%ecx)
	jump_68db2:
		mov    $0x2,%edx
		xor    %esi,%esi
		mov    %edx,0x8(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x4(%esp)
		cmpb   $0x2f,(%ebx)
		jne    jump_68dff
		lea    0x8(%esp),%edx
		lea    0x1(%ebx),%eax
		call   func_parse_time_
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x3a,(%eax)
		jne    jump_68dff
		lea    0x1(%edx),%eax
		lea    0x4(%esp),%edx
		call   func_parse_time_
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x3a,(%eax)
		jne    jump_68dff
		lea    0x1(%edx),%eax
		mov    %esp,%edx
		call   func_parse_time_
		mov    %eax,%ebx
	jump_68dff:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x4(%esp),%eax
		mov    %eax,0x4(%ecx)
		mov    0x8(%esp),%eax
		mov    %eax,0x8(%ecx)
		mov    %ebx,%eax
		add    $0x10,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___parse_tz_:	/* 0x68e1b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		xor    %edx,%edx
		mov    $data_75a28,%ebx
		mov    %edx,data_75a30
		mov    $data_75a34,%edx
		call   func_parse_offset_
		mov    %eax,%edx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    jump_68e48
		mov    %ah,data_75a53
		jmp    jump_68ea3
	jump_68e48:
		mov    $0x1,%ebx
		mov    data_75a28,%eax
		mov    %ebx,data_75a30
		sub    $0xe10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %edx,%eax
		mov    $data_75a53,%edx
		call   func_parse_offset_
		mov    (%esp),%ecx
		mov    data_75a28,%ebx
		sub    %ecx,%ebx
		mov    %ebx,data_75a2c
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x2c,%bl
		jne    jump_68e93
		mov    $data_759e0,%edx
		inc    %eax
		call   func_parse_rule_
	jump_68e93:
		cmpb   $0x2c,(%eax)
		jne    jump_68ea3
		mov    $data_75a04,%edx
		inc    %eax
		call   func_parse_rule_
	jump_68ea3:
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___EnterWVIDEO_:	/* 0x68eaa */
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_75a7c
		je     jump_68ecd
		and    $0xffff,%edx
		push   %edx
		push   %eax
		int3
		jmp    jump_68ec4
	jump_68ec4:
		mov    $0x1,%eax
		add    $0x8,%esp
		ret
	jump_68ecd:
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func___qwrite_:	/* 0x68ed0 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		call   func___IOMode_
		test   $0x80,%al
		je     jump_68f14
		mov    $0x2,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		rcl    %dx
		ror    %dx
		shl    $0x10,%edx
		mov    %ax,%dx
		mov    %edx,%edi
		test   %edx,%edx
		jge    jump_68f14
		xor    %eax,%eax
		mov    %dx,%ax
	jump_68f0d:
		call   func___set_errno_dos_
		jmp    jump_68f44
	jump_68f14:
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %eax,%edx
		test   %eax,%eax
		jge    jump_68f34
		xor    %eax,%eax
		mov    %si,%ax
		jmp    jump_68f0d
	jump_68f34:
		cmp    %ebp,%eax
		je     jump_68f42
		mov    $0xc,%eax
		call   func___set_errno_
	jump_68f42:
		mov    %edx,%eax
	jump_68f44:
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___InitFiles_:	/* 0x68f4c */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    data_75721,%ah
		and    $0xf8,%ah
		mov    %ah,%dl
		mov    %ah,data_75721
		or     $0x4,%dl
		mov    $data_756e0,%ecx
		mov    %dl,data_75721
		jmp    jump_68fb3
	jump_68f70:
		mov    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_68f9f
		mov    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_68f9f
		mov    $data_78870,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_
	jump_68f9f:
		mov    data_128584,%edx
		mov    %ecx,0x4(%ebx)
		mov    %ebx,data_128584
		add    $0x1a,%ecx
		mov    %edx,(%ebx)
	jump_68fb3:
		mov    0xc(%ecx),%edx
		test   %edx,%edx
		jne    jump_68f70
		mov    %edx,data_12857c
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___full_io_exit_:	/* 0x68fc4 */
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		call   func_docloseall_
		jmp    func___purgefp_


/*----------------------------------------------------------------*/
func_docloseall_:	/* 0x68fd5 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $data_756e0,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    data_128584,%eax
		jmp    jump_6901c
	jump_68ff7:
		mov    (%eax),%ecx
		mov    0x4(%eax),%eax
		mov    $0x1,%edx
		testb  $0x40,0xd(%eax)
		jne    jump_69014
		cmp    %esi,%eax
		jb     jump_6901a
		cmp    $data_75762,%eax
		jae    jump_69014
		xor    %edx,%edx
	jump_69014:
		call   func___shutdown_stream_
		inc    %ebx
	jump_6901a:
		mov    %ecx,%eax
	jump_6901c:
		test   %eax,%eax
		jne    jump_68ff7
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_DoEFormat_:	/* 0x6902d */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		test   %edx,%edx
		jge    jump_69046
		mov    $0x2d,%dh
		neg    %esi
		mov    %dh,(%esp)
		jmp    jump_6904a
	jump_69046:
		movb   $0x2b,(%esp)
	jump_6904a:
		mov    $0x64,%ebx
		mov    $0x3,%edx
		cmp    %ebx,%esi
		jge    jump_6906d
		mov    $0xa,%ebx
		mov    $0x2,%edx
		cmp    %ebx,%esi
		jge    jump_6906d
		mov    $0x1,%edx
		mov    %edx,%ebx
	jump_6906d:
		test   %eax,%eax
		jne    jump_6907d
		mov    $0x2,%eax
		cmp    $0x3,%edx
		jne    jump_6907d
		mov    %edx,%eax
	jump_6907d:
		lea    0x1(%eax),%ebp
		cmp    %ecx,%ebp
		jg     jump_690cb
		cmp    %eax,%edx
		jg     jump_690c8
		mov    (%esp),%cl
		mov    %cl,(%edi)
	jump_6908d:
		inc    %edi
		cmp    %edx,%eax
		jle    jump_69098
		dec    %eax
		movb   $0x30,(%edi)
		jmp    jump_6908d
	jump_69098:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x30,%eax
		sar    $0x1f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0xa,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_69098
		jmp    jump_690cb
	jump_690c8:
		lea    0x1(%edx),%ebp
	jump_690cb:
		mov    %ebp,%eax
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
	jump_690d2:
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_DoFFormat_:	/* 0x690d4 */
/*----------------------------------------------------------------*/
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    jump_690e9
		test   %ebx,%ebx
		jg     jump_690e9
		movb   $0x30,(%eax)
		inc    %eax
		movb   $0x2e,(%eax)
		inc    %eax
		pop    %esi
		ret
	jump_690e9:
		test   %esi,%esi
		jle    jump_690fa
		mov    (%edx),%bl
		test   %bl,%bl
		je     jump_690fa
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    jump_690e9
	jump_690fa:
		test   %esi,%esi
		jle    jump_69107
	jump_690fe:
		dec    %esi
		movb   $0x30,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     jump_690fe
	jump_69107:
		movb   $0x2e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    jump_6911b
	jump_6910f:
		test   %esi,%esi
		je     jump_6911b
		inc    %esi
		movb   $0x30,(%eax)
		inc    %eax
		dec    %ecx
		jne    jump_6910f
	jump_6911b:
		test   %ecx,%ecx
		jle    jump_690d2
	jump_6911f:
		mov    (%edx),%bh
		test   %bh,%bh
		je     jump_6912c
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    jump_6911f
	jump_6912c:
		test   %ecx,%ecx
		je     jump_690d2
		dec    %ecx
		movb   $0x30,(%eax)
		inc    %eax
		jmp    jump_6912c


/*----------------------------------------------------------------*/
func_AdjField_:	/* 0x69137 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     jump_6919a
		mov    %edi,-0x14(%ebp)
		mov    0x1(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x10(%ebp)
		lea    (%esi,%edi,1),%eax
	jump_69157:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x14(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    jump_69157
		mov    (%edi),%ah
		cmp    $0x2e,%ah
		jne    jump_69174
		dec    %ebx
		movb   $0x30,(%edi,%ebx,1)
		jmp    jump_6918e
	jump_69174:
		cmp    $0x2b,%ah
		je     jump_6917e
		cmp    $0x2d,%ah
		jne    jump_6918e
	jump_6917e:
		cmpb   $0x2e,-0x10(%ebp)
		jne    jump_6918e
		movb   $0x30,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)
	jump_6918e:
		mov    $0x20,%edx
		mov    %edi,%eax
		call   w_dos_memset
	jump_6919a:
		lea    -0xc(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func__FtoS_:	/* 0x691a2 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x3c,%esp
		mov    0x8(%ebp),%edi
		mov    %eax,-0x14(%ebp)
		mov    %cl,-0x10(%ebp)
		lea    -0x44(%ebp),%eax
		push   %eax
		mov    0x4(%edx),%ecx
		push   %ecx
		mov    (%edx),%esi
		push   %esi
		call   func___Nan_Inf_
		test   %eax,%eax
		je     jump_691e3
		mov    -0x14(%ebp),%eax
		xor    %esi,%esi
		jmp    jump_691d6
	jump_691ce:
		cmp    %edi,%esi
		jge    jump_691d4
		mov    %ch,(%eax)
	jump_691d4:
		inc    %eax
		inc    %esi
	jump_691d6:
		mov    -0x44(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    jump_691ce
		jmp    jump_693a9
	jump_691e3:
		mov    0x18(%ebp),%al
		mov    %al,-0xc(%ebp)
		cmp    $0x47,%al
		jne    jump_69267
		fldl   (%edx)
		fabs
		fstpl  -0x30(%ebp)
		mov    -0x2c(%ebp),%eax
		mov    -0x30(%ebp),%ecx
		test   $0x7fffffff,%eax
		jne    jump_69209
		test   %ecx,%ecx
		je     jump_6925d
	jump_69209:
		fldl   -0x30(%ebp)
		fldlg2
		fxch   %st(1)
		fyl2x
		fstpl  -0x30(%ebp)
		mov    -0x2c(%ebp),%eax
		push   %eax
		mov    -0x30(%ebp),%ecx
		push   %ecx
		call   func_floor_
		call   func___CHP
		fistpl -0x18(%ebp)
		mov    -0x18(%ebp),%esi
		cmp    $0xfffffffc,%esi
		jl     jump_69236
		cmp    %esi,%ebx
		jg     jump_6923c
	jump_69236:
		movb   $0x45,-0xc(%ebp)
		jmp    jump_69267
	jump_6923c:
		fldz
		fcompl -0x30(%ebp)
		fnstsw %ax
		sahf
		ja     jump_6924c
		lea    0x1(%esi),%ecx
		mov    %ecx,-0x18(%ebp)
	jump_6924c:
		mov    -0x18(%ebp),%esi
		xor    %eax,%eax
		mov    $0x46,%ch
		mov    %eax,0xc(%ebp)
		mov    %ch,-0xc(%ebp)
		sub    %esi,%ebx
		jmp    jump_69267
	jump_6925d:
		xor    %esi,%esi
		mov    $0x46,%cl
		mov    %esi,0xc(%ebp)
		mov    %cl,-0xc(%ebp)
	jump_69267:
		cmpb   $0x45,-0xc(%ebp)
		jne    jump_69293
		mov    %ebx,%eax
		mov    0xc(%ebp),%ecx
		neg    %eax
		cmp    %ecx,%eax
		jge    jump_6927f
		lea    0x2(%ebx),%eax
		cmp    %ecx,%eax
		jg     jump_69293
	jump_6927f:
		mov    -0x14(%ebp),%eax
		mov    $0x2a,%edx
		mov    %edi,%ebx
		call   w_dos_memset
		jmp    jump_693bd
	jump_69293:
		mov    0x18(%ebp),%al
		mov    %ebx,%ecx
		cmp    $0x45,%al
		jne    jump_692ad
		mov    0xc(%ebp),%eax
		test   %eax,%eax
		jle    jump_692a8
		lea    0x1(%ebx),%ecx
		jmp    jump_692ad
	jump_692a8:
		jge    jump_692ad
		lea    (%eax,%ebx,1),%ecx
	jump_692ad:
		mov    (%edx),%eax
		mov    %eax,-0x28(%ebp)
		mov    0x4(%edx),%eax
		mov    -0x28(%ebp),%edx
		mov    %eax,-0x24(%ebp)
		test   $0x7fffffff,%eax
		jne    jump_692c6
		test   %edx,%edx
		je     jump_692e4
	jump_692c6:
		cmpb   $0x45,-0xc(%ebp)
		je     jump_692e4
		mov    0xc(%ebp),%ebx
		test   %ebx,%ebx
		je     jump_692e4
		push   %ebx
		mov    -0x24(%ebp),%eax
		push   %eax
		mov    -0x28(%ebp),%edx
		push   %edx
		call   func__Scale10V_
		fstpl  -0x28(%ebp)
	jump_692e4:
		lea    -0x44(%ebp),%eax
		push   %eax
		xor    %eax,%eax
		mov    -0xc(%ebp),%al
		push   %eax
		lea    -0x20(%ebp),%eax
		push   %eax
		lea    -0x1c(%ebp),%eax
		push   %eax
		push   %ecx
		mov    -0x24(%ebp),%ebx
		push   %ebx
		mov    -0x28(%ebp),%esi
		push   %esi
		mov    -0x14(%ebp),%edx
		call   func___cvt_
		mov    -0x20(%ebp),%ebx
		lea    0x1(%edx),%eax
		test   %ebx,%ebx
		je     jump_69316
		movb   $0x2d,(%edx)
		jmp    jump_6931f
	jump_69316:
		cmpb   $0x0,-0x10(%ebp)
		je     jump_69321
		movb   $0x2b,(%edx)
	jump_6931f:
		mov    %eax,%edx
	jump_69321:
		cmpb   $0x45,-0xc(%ebp)
		jne    jump_6937e
		mov    0xc(%ebp),%ebx
		mov    %edx,%eax
		lea    -0x44(%ebp),%edx
		sub    %ebx,%ecx
		call   func_DoFFormat_
		mov    -0x14(%ebp),%ecx
		mov    %eax,%esi
		mov    %eax,%ebx
		sub    %ecx,%esi
		mov    0x14(%ebp),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     jump_69352
		cmp    %edi,%esi
		jge    jump_69352
		lea    0x1(%eax),%edx
		inc    %esi
		mov    %cl,(%eax)
	jump_69352:
		mov    -0x24(%ebp),%eax
		mov    -0x28(%ebp),%ebx
		test   $0x7fffffff,%eax
		jne    jump_69363
		test   %ebx,%ebx
		je     jump_69369
	jump_69363:
		mov    0xc(%ebp),%eax
		sub    %eax,-0x1c(%ebp)
	jump_69369:
		mov    0x10(%ebp),%ebx
		mov    %edi,%ecx
		mov    %edx,%eax
		mov    -0x1c(%ebp),%edx
		sub    %esi,%ecx
		call   func_DoEFormat_
		add    %eax,%esi
		jmp    jump_693a9
	jump_6937e:
		mov    -0x14(%ebp),%esi
		mov    -0x1c(%ebp),%eax
		mov    %edx,%ebx
		inc    %eax
		sub    %esi,%ebx
		add    %ecx,%eax
		add    %ebx,%eax
		cmp    %eax,%edi
		jge    jump_69396
		lea    0x1(%edi),%esi
		jmp    jump_693a9
	jump_69396:
		mov    -0x1c(%ebp),%ebx
		mov    %edx,%eax
		lea    -0x44(%ebp),%edx
		call   func_DoFFormat_
		mov    %esi,%edx
		mov    %eax,%esi
		sub    %edx,%esi
	jump_693a9:
		cmp    %edi,%esi
		jg     jump_6927f
		mov    -0x14(%ebp),%eax
		mov    %esi,%edx
		mov    %edi,%ebx
		call   func_AdjField_
	jump_693bd:
		lea    -0x8(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x14


/*----------------------------------------------------------------*/
func_strtod_:	/* 0x693c6 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		push   %edx
		mov    %eax,-0x14(%ebp)
	jump_693d4:
		mov    (%eax),%dl
		cmp    $0x20,%dl
		je     jump_693e5
		cmp    $0x9,%dl
		jb     jump_693e8
		cmp    $0xd,%dl
		ja     jump_693e8
	jump_693e5:
		inc    %eax
		jmp    jump_693d4
	jump_693e8:
		lea    0x1(%eax),%ebx
		xor    %cl,%cl
		cmp    $0x2b,%dl
		je     jump_693f9
		cmp    $0x2d,%dl
		jne    jump_693fb
		mov    $0x1,%cl
	jump_693f9:
		mov    %ebx,%eax
	jump_693fb:
		mov    $0x30,%bl
		xor    %edx,%edx
		xor    %esi,%esi
	jump_69401:
		mov    (%eax),%ch
		inc    %eax
		cmp    $0x2e,%ch
		jne    jump_69413
		test   $0x8,%cl
		jne    jump_69439
		or     $0x8,%cl
		jmp    jump_69401
	jump_69413:
		cmp    $0x30,%ch
		jb     jump_69439
		cmp    $0x39,%ch
		ja     jump_69439
		test   $0x8,%cl
		je     jump_69423
		inc    %esi
	jump_69423:
		or     %ch,%bl
		cmp    $0x30,%bl
		je     jump_69434
		cmp    $0x11,%edx
		jge    jump_69433
		mov    %ch,-0x34(%edx,%ebp,1)
	jump_69433:
		inc    %edx
	jump_69434:
		or     $0x4,%cl
		jmp    jump_69401
	jump_69439:
		xor    %ebx,%ebx
		test   $0x4,%cl
		je     jump_694af
		cmp    $0x65,%ch
		je     jump_69458
		cmp    $0x45,%ch
		je     jump_69458
		cmp    $0x64,%ch
		je     jump_69458
		cmp    $0x44,%ch
		jne    jump_694ab
	jump_69458:
		lea    -0x1(%eax),%edi
		mov    %edi,-0x18(%ebp)
		lea    0x1(%eax),%edi
		mov    (%eax),%ch
		cmp    $0x2b,%ch
		je     jump_69470
		cmp    $0x2d,%ch
		jne    jump_69472
		or     $0x2,%cl
	jump_69470:
		mov    %edi,%eax
	jump_69472:
		and    $0xfb,%cl
	jump_69475:
		mov    (%eax),%ch
		cmp    $0x30,%ch
		jb     jump_6949a
		cmp    $0x39,%ch
		ja     jump_6949a
		cmp    $0x3e8,%ebx
		jge    jump_69494
		imul   $0xa,%ebx,%ebx
		movzbl %ch,%edi
		add    %edi,%ebx
		sub    $0x30,%ebx
	jump_69494:
		or     $0x4,%cl
		inc    %eax
		jmp    jump_69475
	jump_6949a:
		test   $0x2,%cl
		je     jump_694a1
		neg    %ebx
	jump_694a1:
		test   $0x4,%cl
		jne    jump_694ac
		mov    -0x18(%ebp),%eax
		jmp    jump_694ac
	jump_694ab:
		dec    %eax
	jump_694ac:
		mov    %eax,-0x14(%ebp)
	jump_694af:
		sub    %esi,%ebx
		cmp    $0x11,%edx
		jle    jump_694c0
		sub    $0x11,%edx
		add    %edx,%ebx
		mov    $0x11,%edx
	jump_694c0:
		test   %edx,%edx
		jle    jump_694cf
		cmpb   $0x30,-0x35(%edx,%ebp,1)
		jne    jump_694cf
		inc    %ebx
		dec    %edx
		jmp    jump_694c0
	jump_694cf:
		test   %edx,%edx
		jne    jump_694de
		mov    %edx,-0x20(%ebp)
		mov    %edx,-0x1c(%ebp)
		jmp    jump_69555
	jump_694de:
		xor    %ah,%ah
		mov    %ah,-0x34(%edx,%ebp,1)
		lea    -0x34(%ebp),%eax
		lea    -0x20(%ebp),%edx
		call   func_69a28
		cmp    $0x134,%ebx
		jle    jump_69520
		call   func___set_ERANGE_
		test   $0x1,%cl
		je     jump_6950e
		fldl   data_78904
		fchs
		fstpl  -0x20(%ebp)
		jmp    jump_69555
	jump_6950e:
		mov    data_78904,%eax
		mov    %eax,-0x20(%ebp)
		mov    data_78908,%eax
		mov    %eax,-0x1c(%ebp)
		jmp    jump_69555
	jump_69520:
		cmp    $0xfffffebb,%ebx
		jge    jump_69537
		xor    %ebx,%ebx
		call   func___set_ERANGE_
		mov    %ebx,-0x20(%ebp)
		mov    %ebx,-0x1c(%ebp)
		jmp    jump_69555
	jump_69537:
		test   %ebx,%ebx
		je     jump_6954c
		push   %ebx
		mov    -0x1c(%ebp),%eax
		push   %eax
		mov    -0x20(%ebp),%edx
		push   %edx
		call   func__Scale10V_
		fstpl  -0x20(%ebp)
	jump_6954c:
		test   $0x1,%cl
		je     jump_69555
		xorb   $0x80,-0x19(%ebp)
	jump_69555:
		cmpl   $0x0,-0x38(%ebp)
		je     jump_69563
		mov    -0x38(%ebp),%edx
		mov    -0x14(%ebp),%eax
		mov    %eax,(%edx)
	jump_69563:
		fldl   -0x20(%ebp)
		lea    -0x10(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_getenv_:	/* 0x6956f */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    data_75a84,%esi
		test   %esi,%esi
		je     jump_695c0
		test   %eax,%eax
		je     jump_695c0
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    jump_695ba
	jump_6959b:
		mov    %ecx,%eax
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   func_strnicmp_
		test   %eax,%eax
		jne    jump_695b7
		cmpb   $0x3d,(%ecx,%edi,1)
		jne    jump_695b7
		lea    0x1(%edi),%eax
		add    %ecx,%eax
		jmp    jump_695c2
	jump_695b7:
		add    $0x4,%esi
	jump_695ba:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    jump_6959b
	jump_695c0:
		xor    %eax,%eax
	jump_695c2:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___Nan_Inf_:	/* 0x695c9 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x8,%esp
		mov    0x1c(%esp),%edx
		mov    0x14(%esp),%eax
		mov    %eax,(%esp)
		mov    0x18(%esp),%eax
		mov    %eax,0x4(%esp)
		mov    0x6(%esp),%eax
		and    $0x7ff0,%eax
		cmp    $0x7ff0,%ax
		jne    jump_69643
		mov    0x7(%esp),%bl
		mov    %edx,%eax
		test   $0x80,%bl
		je     jump_69601
		lea    0x1(%edx),%eax
		movb   $0x2d,(%edx)
	jump_69601:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x2(%esp),%bx
		mov    (%esp),%dx
		or     %ebx,%edx
		xor    %ebx,%ebx
		mov    0x4(%esp),%bx
		or     %ebx,%edx
		mov    0x6(%esp),%ebx
		and    $0xf,%bl
		xor    %bh,%bh
		and    $0xffff,%ebx
		or     %ebx,%edx
		jne    jump_69634
		mov    data_788a0,%edx
		jmp    jump_6963a
	jump_69634:
		mov    data_788a4,%edx
	jump_6963a:
		mov    %edx,(%eax)
		mov    $0x1,%eax
		jmp    jump_69645
	jump_69643:
		xor    %eax,%eax
	jump_69645:
		add    $0x8,%esp
		pop    %edx
		pop    %ebx
		ret    $0xc


/*----------------------------------------------------------------*/
func_floor_:	/* 0x6964d */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		push   %ebx
		push   %edx
		sub    $0x8,%esp
		lea    -0x14(%ebp),%eax
		push   %eax
		mov    0xc(%ebp),%edx
		push   %edx
		mov    0x8(%ebp),%ebx
		push   %ebx
		call   func_modf_
		fldz
		fcompp
		fnstsw %ax
		sahf
		jbe    jump_6967c
		fldl   -0x14(%ebp)
		faddl  data_788a8
		fstpl  -0x14(%ebp)
	jump_6967c:
		fldl   -0x14(%ebp)
		lea    -0xc(%ebp),%esp
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %ebp
		ret    $0x8


/*----------------------------------------------------------------*/
func__Scale_:	/* 0x69689 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x10(%ebp),%ecx
		mov    0x14(%ebp),%ebx
		cmp    %ecx,%eax
		je     jump_696af
		mov    %ecx,%edx
		sub    %eax,%edx
		push   %edx
		mov    0xc(%ebp),%edx
		push   %edx
		mov    0x8(%ebp),%esi
		push   %esi
		call   func__Scale10V_
		fstpl  0x8(%ebp)
	jump_696af:
		lea    0x8(%ebp),%eax
		mov    %ebx,%edx
		call   func_69b70
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   func_69b36
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    $0x10


/*----------------------------------------------------------------*/
func__Scale10V_:	/* 0x696ca */
/*----------------------------------------------------------------*/
		push   %eax
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x8,%esp
		mov    0x28(%esp),%ecx
		fldl   0x20(%esp)
		fcompl data_788e4
		fnstsw %ax
		sahf
		jne    jump_696f5
		mov    data_788f4,%eax
		mov    %eax,0x20(%esp)
		mov    data_788f8,%eax
		jmp    jump_69712
	jump_696f5:
		fldl   0x20(%esp)
		fcompl data_788ec
		fnstsw %ax
		sahf
		jne    jump_69716
		mov    data_788fc,%eax
		mov    %eax,0x20(%esp)
		mov    data_78900,%eax
	jump_69712:
		mov    %eax,0x24(%esp)
	jump_69716:
		mov    $data_7890c,%eax
		test   %ecx,%ecx
		jge    jump_6973d
		mov    %ecx,%edx
		neg    %edx
		cmp    $0x134,%edx
		jle    jump_6975b
		fldl   0x20(%esp)
		fdivl  data_7890e
		sub    $0xd8,%edx
		jmp    jump_69757
	jump_6973d:
		mov    %ecx,%edx
		cmp    $0x134,%ecx
		jle    jump_6975b
		fldl   0x20(%esp)
		fmull  data_7890e
		lea    -0xd8(%ecx),%edx
	jump_69757:
		fstpl  0x20(%esp)
	jump_6975b:
		xor    %ebx,%ebx
		mov    $0x3ff00000,%esi
		mov    %ebx,(%esp)
		mov    %esi,0x4(%esp)
	jump_69769:
		movswl (%eax),%ebx
		cmp    %ebx,%edx
		jl     jump_6977b
		fldl   (%esp)
		fmull  0x2(%eax)
		sub    %ebx,%edx
		fstpl  (%esp)
	jump_6977b:
		test   %edx,%edx
		je     jump_6978a
		cmpw   $0x1,(%eax)
		je     jump_69769
		add    $0xa,%eax
		jmp    jump_69769
	jump_6978a:
		test   %ecx,%ecx
		jge    jump_69797
		fldl   0x20(%esp)
		fdivl  (%esp)
		jmp    jump_6979e
	jump_69797:
		fldl   0x20(%esp)
		fmull  (%esp)
	jump_6979e:
		fstpl  0x20(%esp)
		fldl   0x20(%esp)
		add    $0x8,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		ret    $0xc


/*----------------------------------------------------------------*/
func___cvt_:	/* 0x697b1 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x2c,%esp
		mov    0x10(%ebp),%ebx
		mov    0x14(%ebp),%ecx
		mov    0x18(%ebp),%edi
		mov    0x20(%ebp),%edx
		push   %edx
		mov    0xc(%ebp),%esi
		push   %esi
		mov    0x8(%ebp),%eax
		movl   $0x0,(%edi)
		push   %eax
		movl   $0x0,(%ecx)
		call   func___Nan_Inf_
		test   %eax,%eax
		je     jump_697ed
		mov    %edx,%eax
		jmp    jump_6998b
	jump_697ed:
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %dx,-0x2c(%ebp)
		mov    %si,-0x2a(%ebp)
		mov    %dx,-0x28(%ebp)
		mov    %dx,-0x26(%ebp)
		mov    0xc(%ebp),%edx
		mov    0x8(%ebp),%esi
		test   $0x7fffffff,%edx
		jne    jump_69817
		test   %esi,%esi
		je     jump_69944
	jump_69817:
		fldz
		fcompl 0x8(%ebp)
		fnstsw %ax
		sahf
		jbe    jump_69830
		mov    0xf(%ebp),%ah
		xor    $0x80,%ah
		movl   $0xffffffff,(%edi)
		mov    %ah,0xf(%ebp)
	jump_69830:
		push   %ecx
		mov    0xc(%ebp),%eax
		push   %eax
		mov    0x8(%ebp),%edx
		push   %edx
		call   func_frexp_
		mov    (%ecx),%edx
		fstp   %st(0)
		test   %edx,%edx
		jge    jump_69848
		neg    %edx
	jump_69848:
		mov    %edx,%eax
		shl    $0x2,%edx
		sub    %eax,%edx
		add    $0x5,%edx
		mov    $0xa,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    (%ecx),%esi
		mov    %eax,%edx
		test   %esi,%esi
		jge    jump_69868
		neg    %edx
	jump_69868:
		mov    0x1c(%ebp),%eax
		mov    %edx,(%ecx)
		cmp    $0x46,%eax
		jne    jump_69874
		add    %edx,%ebx
	jump_69874:
		test   %ebx,%ebx
		jl     jump_69910
		cmp    $0x10,%ebx
		jle    jump_69886
		mov    $0x10,%ebx
	jump_69886:
		xor    %al,%al
		mov    %al,-0x18(%ebp)
		lea    -0x24(%ebp),%eax
		push   %eax
		mov    0xc(%ebp),%esi
		push   %esi
		mov    0x8(%ebp),%eax
		push   %eax
		call   func_modf_
		fldz
		fcompp
		fnstsw %ax
		sahf
		jne    jump_698b0
		cmp    %edx,%ebx
		jle    jump_698b0
		mov    $0x1,%ah
		mov    %edx,%ebx
		mov    %ah,-0x18(%ebp)
	jump_698b0:
		lea    -0x2c(%ebp),%eax
		push   %eax
		push   %ebx
		mov    0xc(%ebp),%esi
		push   %esi
		mov    0x8(%ebp),%eax
		push   %eax
		mov    (%ecx),%eax
		call   func__Scale_
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_69910
		mov    0x1c(%ebp),%esi
		add    %eax,(%ecx)
		cmp    $0x46,%esi
		je     jump_698da
		cmpb   $0x0,-0x18(%ebp)
		je     jump_698dc
	jump_698da:
		add    %eax,%ebx
	jump_698dc:
		cmp    $0x1,%ebx
		jge    jump_698e8
		mov    $0x1,%ebx
		jmp    jump_698f2
	jump_698e8:
		cmp    $0x10,%ebx
		jle    jump_698f2
		mov    $0x10,%ebx
	jump_698f2:
		lea    -0x2c(%ebp),%eax
		push   %eax
		push   %ebx
		mov    0xc(%ebp),%eax
		push   %eax
		mov    0x8(%ebp),%esi
		push   %esi
		mov    (%ecx),%eax
		call   func__Scale_
		test   %eax,%eax
		jle    jump_69910
		mov    (%ecx),%eax
		inc    %eax
		inc    %ebx
		mov    %eax,(%ecx)
	jump_69910:
		mov    -0x2c(%ebp),%eax
		sar    $0x10,%eax
		mov    %eax,-0x1c(%ebp)
		mov    -0x2e(%ebp),%eax
		mov    -0x1c(%ebp),%esi
		sar    $0x10,%eax
		or     %esi,%eax
		mov    -0x2a(%ebp),%esi
		sar    $0x10,%esi
		or     %esi,%eax
		mov    -0x28(%ebp),%esi
		sar    $0x10,%esi
		or     %esi,%eax
		jne    jump_69944
		mov    %eax,(%edi)
		mov    0x1c(%ebp),%edi
		mov    %eax,(%ecx)
		cmp    $0x46,%edi
		jne    jump_69944
		sub    %edx,%ebx
	jump_69944:
		cmp    $0x1,%ebx
		jge    jump_69950
		mov    $0x1,%ebx
		jmp    jump_6995a
	jump_69950:
		cmp    $0x11,%ebx
		jle    jump_6995a
		mov    $0x11,%ebx
	jump_6995a:
		lea    -0x2c(%ebp),%eax
		lea    -0x40(%ebp),%edx
		mov    0x20(%ebp),%edi
		lea    -0x40(%ebp),%esi
		call   func_69bdb
		push   %edi
	jump_6996c:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_69988
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_6996c
	jump_69988:
		pop    %edi
		mov    %edi,%eax
	jump_6998b:
		lea    -0x14(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    $0x1c


/*----------------------------------------------------------------*/
func_69a28:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax
	jump_69a36:
		mov    (%esi),%al
		cmp    $0x0,%al
		je     jump_69a5a
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0xf,%al
		add    %eax,%ecx
		adc    $0x0,%edx
		inc    %esi
		jmp    jump_69a36
	jump_69a5a:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   func_69a73
		pop    %ebp
		mov    %edx,0x4(%ebp)
		mov    %eax,0x0(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_69a73:
/*----------------------------------------------------------------*/
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     jump_69ac3
		test   $0xfff00000,%edx
		jne    jump_69a97
	jump_69a83:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     jump_69a83
		jmp    jump_69abb
	jump_69a97:
		test   $0xffe00000,%edx
		je     jump_69abb
	jump_69a9f:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    jump_69a9f
		adc    %esi,%esi
		adc    $0x0,%eax
		adc    $0x0,%edx
	jump_69abb:
		and    $0xfffff,%edx
		or     %edi,%edx
	jump_69ac3:
		ret


/*----------------------------------------------------------------*/
func_strnicmp_:	/* 0x69ac4 */
/*----------------------------------------------------------------*/
		push   %ecx
		sub    $0x4,%esp
	jump_69ac8:
		test   %ebx,%ebx
		jne    jump_69ad3
	jump_69acc:
		xor    %eax,%eax
		add    $0x4,%esp
		pop    %ecx
		ret
	jump_69ad3:
		mov    (%edx),%ch
		mov    (%eax),%cl
		mov    %ch,(%esp)
		cmp    $0x41,%cl
		jb     jump_69ae7
		cmp    $0x5a,%cl
		ja     jump_69ae7
		add    $0x20,%cl
	jump_69ae7:
		mov    (%esp),%ch
		cmp    $0x41,%ch
		jb     jump_69afa
		cmp    $0x5a,%ch
		ja     jump_69afa
		add    $0x20,%ch
		mov    %ch,(%esp)
	jump_69afa:
		mov    (%esp),%ch
		cmp    %ch,%cl
		je     jump_69b12
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %cl,%dl
		mov    %ch,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x4,%esp
		pop    %ecx
		ret
	jump_69b12:
		test   %ch,%ch
		je     jump_69acc
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    jump_69ac8


/*----------------------------------------------------------------*/
func_modf_:	/* 0x69b1c */
/*----------------------------------------------------------------*/
		push   %eax
		fldl   0x8(%esp)
		fld    %st(0)
		call   func___CHP
		fsubr  %st,%st(1)
		mov    0x10(%esp),%eax
		fstpl  (%eax)
		pop    %eax
		fwait
		ret    $0xc


/*----------------------------------------------------------------*/
func_69b36:
/*----------------------------------------------------------------*/
		push   %edi
		push   %ecx
		call   func_69c45
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x4(%edx),%edx
		sub    %eax,%eax
	jump_69b48:
		cmp    %cs:(%edi),%edx
		jne    jump_69b51
		cmp    %cs:0x4(%edi),%ecx
	jump_69b51:
		jb     jump_69b59
		add    $0x8,%edi
		inc    %eax
		jmp    jump_69b48
	jump_69b59:
		sub    $0x8,%edi
	jump_69b5c:
		cmp    %cs:(%edi),%edx
		jne    jump_69b65
		cmp    %cs:0x4(%edi),%ecx
	jump_69b65:
		jae    jump_69b6d
		sub    $0x8,%edi
		dec    %eax
		jmp    jump_69b5c
	jump_69b6d:
		pop    %ecx
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_69b70:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x0(%ebp),%ecx
		mov    0x4(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x14,%ebp
		sub    $0x433,%ebp
		je     jump_69bce
		jbe    jump_69ba4
	jump_69b9b:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    jump_69b9b
		jmp    jump_69bce
	jump_69ba4:
		sub    %eax,%eax
		sub    %esi,%esi
	jump_69ba8:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    jump_69ba8
		cmp    $0x80000000,%eax
		jb     jump_69bce
		jne    jump_69bc8
		or     %esi,%esi
		jne    jump_69bc8
		test   $0x1,%ecx
		je     jump_69bce
	jump_69bc8:
		add    $0x1,%ecx
		adc    $0x0,%ebx
	jump_69bce:
		pop    %ebp
		mov    %ecx,0x0(%ebp)
		mov    %ebx,0x4(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_69bdb:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x0(%ebp),%ecx
		mov    0x4(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x0,0x0(%ebp)
		push   %eax
	jump_69bf0:
		pop    %eax
		mov    $0x2710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    jump_69c03
		or     %ecx,%ecx
		jne    jump_69c05
		push   %eax
		jmp    jump_69c1b
	jump_69c03:
		div    %edi
	jump_69c05:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x64,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x0,%ah
		aam    $0xa
		xchg   %eax,%edx
		mov    $0x0,%ah
		aam    $0xa
	jump_69c1b:
		add    $0x3030,%ax
		add    $0x3030,%dx
		sub    $0x4,%ebp
		mov    %al,0x3(%ebp)
		dec    %ebx
		je     jump_69c3f
		mov    %ah,0x2(%ebp)
		dec    %ebx
		je     jump_69c3f
		mov    %dl,0x1(%ebp)
		dec    %ebx
		je     jump_69c3f
		mov    %dh,0x0(%ebp)
		dec    %ebx
		jne    jump_69bf0
	jump_69c3f:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_69c45:
/*----------------------------------------------------------------*/
		call   func_69cfa
.data
		.fill   0xc
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"
.text


/*----------------------------------------------------------------*/
func_69cfa:
/*----------------------------------------------------------------*/
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_frexp_:	/* 0x69cfc */
/*----------------------------------------------------------------*/
		push   %eax
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    0x1c(%esp),%eax
		mov    0x1c(%esp),%ecx
		mov    %eax,(%esp)
		mov    0x20(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x4(%esp)
		test   $0x7fffffff,%eax
		jne    jump_69d23
		test   %ecx,%ecx
		je     jump_69d58
	jump_69d23:
		mov    0x6(%esp),%edx
		and    $0x7ff0,%edx
		mov    0x6(%esp),%ebx
		and    $0xffff,%edx
		and    $0x800f,%ebx
		sar    $0x4,%edx
		mov    %ebx,%ecx
		mov    %bx,0x6(%esp)
		or     $0x3fe0,%ecx
		sub    $0x3fe,%edx
		mov    %cx,0x6(%esp)
	jump_69d58:
		mov    0x24(%esp),%eax
		fldl   (%esp)
		mov    %edx,(%eax)
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %eax
		ret    $0xc


/*----------------------------------------------------------------*/
func___setenvp_:	/* 0x69d6b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x0,data_75a84
		jne    jump_69e36
		mov    data_75669,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    data_75665,%edi
		mov    %eax,%es
		mov    %edi,%eax
	jump_69d96:
		cmp    %es:(%eax),%dl
		je     jump_69dae
	jump_69d9b:
		mov    %es:(%eax),%dh
		lea    0x1(%eax),%ebx
		cmp    %dh,%dl
		je     jump_69da9
		mov    %ebx,%eax
		jmp    jump_69d9b
	jump_69da9:
		inc    %ecx
		mov    %ebx,%eax
		jmp    jump_69d96
	jump_69dae:
		sub    %edi,%eax
		jne    jump_69db7
		mov    $0x1,%eax
	jump_69db7:
		call   w_dos_malloc
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     jump_69e36
		mov    %ecx,%eax
		shl    $0x2,%eax
		add    $0x4,%eax
		add    %ecx,%eax
		call   w_dos_malloc
		test   %eax,%eax
		je     jump_69e2f
		mov    %eax,data_75a84
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax
	jump_69dea:
		cmpb   $0x0,%es:(%eax)
		je     jump_69e0a
		mov    data_75a84,%edx
		mov    %ebx,(%ecx,%edx,1)
	jump_69df9:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    jump_69df9
		add    $0x4,%ecx
		inc    %esi
		jmp    jump_69dea
	jump_69e0a:
		mov    data_75a84,%edx
		movl   $0x0,(%ecx,%edx,1)
		add    $0x4,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,data_75a88
		mov    %edx,%eax
		xor    %edx,%edx
		call   w_dos_memset
		jmp    jump_69e36
	jump_69e2f:
		mov    %edx,%eax
		call   w_dos_free
	jump_69e36:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
data_70000:
		.ascii  "\x01\x01\x01\x00"
data_70004:
		.ascii  "\x01\x00"
data_70006:
		.ascii  "\x01\x00"
data_70008:
		.fill   0x4
data_7000c:
		.fill   0x4
data_70010:
		.fill   0x4
data_70014:
		.fill   0x4
data_70018:
		.ascii  "\x00\x00"
data_7001a:
		.ascii  "\x00\x00"
data_7001c:
		.ascii  "\x0c\x00"
data_7001e:
		.ascii  "\x04\x00"
data_70020:
		.ascii  "\x04\x00\x00\x00"
data_70024:
		.long   data_75aa8
		.long   data_75ab4
		.long   data_75ac0
		.long   data_75acc
		.long   data_75ad8
		.long   data_75ae5
		.long   data_75af2
		.long   data_75afe
		.long   data_75b0b
		.long   data_75b18
		.long   data_75b24
		.long   data_75b31
		.long   data_75b3d
		.long   data_75b47
		.long   data_75b52
		.long   data_75b5d
		.long   data_75b67
		.long   data_75b71
		.long   data_75b7c
		.long   data_75b88
		.long   data_75b94
		.long   data_75ba1
		.long   data_75bae
		.long   data_75bbb
		.long   data_75bc7
		.long   data_75bd3
		.long   data_75bdf
		.long   data_75bea
		.long   data_75bf7
		.long   data_75c03
		.long   data_75c0d
		.long   data_75c18
		.long   data_75c23
		.long   data_75c2f
		.long   data_75c3a
		.long   data_75c46
		.long   data_75c52
		.long   data_75c5e
		.long   data_75c6a
		.long   data_75c75
		.long   data_75c81
		.long   data_75c8d
		.long   data_75c97
		.long   data_75ca2
		.long   data_75cad
		.long   data_75cb8
		.long   data_75cc4
		.long   data_75cce
		.long   data_75cd8
		.long   data_75ce5
		.long   data_75cf2
		.long   data_75cff
		.long   data_75d0c
		.long   data_75d18
		.long   data_75d24
		.long   data_75d30
		.long   data_75d3c
		.long   data_75d47
		.long   data_75d52
		.long   data_75d5e
		.long   data_75d6a
		.long   data_75d73
		.long   data_75d7e
		.long   data_75d89
		.long   data_75d96
		.long   data_75da2
		.long   data_75dae
		.long   data_75db8
		.long   data_75dc3
		.long   data_75dd0
		.long   data_75ddd
		.long   data_75de9
		.long   data_75df5
		.long   data_75e01
		.long   data_75e0d
		.long   data_75e1a
		.long   data_75e23
		.long   data_75e30
		.long   data_75e3d
		.long   data_75e4a
		.long   data_75e56
		.long   data_75e63
		.long   data_75e6f
		.long   data_75e7c
		.long   data_75e89
		.long   data_75e96
		.long   data_75ea3
		.long   data_75eb0
		.long   data_75ebd
		.long   data_75eca
		.long   data_75ed7
		.long   data_75ee4
		.long   data_75ef1
		.long   data_75efe
		.long   data_75f0a
		.long   data_75f16
		.long   data_75f22
		.long   data_75f2e
		.long   data_75f38
		.long   data_75f43
		.long   data_75f4e
		.long   data_75f59
		.long   data_75f66
		.long   data_75f73
		.long   data_75f7f
		.long   data_75f8b
		.long   data_75f97
		.long   data_75fa3
		.long   data_75faf
		.long   data_75fbb
		.long   data_75fc6
		.long   data_75fd2
		.long   data_75fdb
		.long   data_75fe4
		.long   data_75fed
		.long   data_75ff6
		.long   data_75fff
		.long   data_76008
		.long   data_76011
		.long   data_7601a
		.long   data_76026
		.long   data_76033
		.long   data_7603e
		.long   data_76049
		.long   data_76054
		.long   data_7605f
		.long   data_7606c
		.long   data_76079
		.long   data_76086
		.long   data_76091
		.long   data_7609c
		.long   data_760a7
		.long   data_760b2
		.long   data_760bf
		.long   data_760cc
		.long   data_760d9
		.long   data_760e0
		.long   data_760e9
		.long   data_760f2
		.long   data_760fb
		.long   data_76104
		.long   data_7610f
		.long   data_76119
		.long   data_76123
		.long   data_7612d
		.long   data_76137
		.long   data_76143
		.long   data_76150
		.long   data_7615d
		.long   data_7616a
		.long   data_76177
		.long   data_76182
		.long   data_76190
		.long   data_7619e
		.long   data_761ac
		.long   data_761ba
		.long   data_761c7
		.long   data_761d4
		.long   data_761e1
		.long   data_761ee
		.long   data_761fa
		.long   data_76206
		.long   data_76212
		.long   data_7621e
		.long   data_76229
		.long   data_76234
		.long   data_7623f
		.long   data_7624a
		.long   data_76257
		.long   data_76264
		.long   data_76271
		.long   data_7627e
		.long   data_7628a
		.long   data_76296
		.long   data_762a2
		.long   data_762ae
		.long   data_762b9
		.long   data_762c4
		.long   data_762cf
		.long   data_762da
		.long   data_762e7
		.long   data_762f4
		.long   data_76301
		.long   data_7630e
		.long   data_7631a
		.long   data_76326
		.long   data_76332
		.long   data_7633e
		.long   data_76348
		.long   data_76353
		.long   data_7635e
		.long   data_76368
		.long   data_76373
		.long   data_7637d
		.long   data_76388
		.long   data_76394
		.long   data_7639e
		.long   data_763a8
		.long   data_763b2
		.long   data_763bc
		.long   data_763c6
		.long   data_763d2
		.long   data_763db
		.long   data_763e5
		.long   data_763f0
		.long   data_763fd
		.long   data_76406
		.long   data_76411
		.long   data_7641e
		.long   data_7642b
		.long   data_76437
		.long   data_76442
		.long   data_7644d
		.long   data_76456
		.long   data_76460
		.long   data_7646d
		.long   data_7647a
		.long   data_76484
		.long   data_7648e
		.long   data_76498
		.long   data_764a2
		.long   data_764ae
		.long   data_764b6
		.long   data_764c1
		.long   data_764cc
data_703a8:
		.long   data_764d7
		.long   data_764e2
		.long   data_764ed
		.long   data_764f8
		.long   data_76503
		.long   data_7650d
		.long   data_76517
		.long   data_76524
		.long   data_76531
		.long   data_7653e
		.long   data_7654b
		.long   data_76558
		.long   data_7654b
		.long   data_76558
		.long   data_76565
		.long   data_76571
		.long   data_7657a
		.long   data_76584
		.long   data_76591
		.long   data_7659e
		.long   data_765a9
		.long   data_765b0
		.long   data_765ba
		.long   data_765c7
		.long   data_765d1
		.long   data_765db
		.long   data_765e5
		.long   data_765ef
		.long   data_765f9
		.long   data_76603
		.long   data_7660c
		.long   data_76616
		.long   data_76622
		.long   data_7662e
		.long   data_76638
		.long   data_76642
		.long   data_7664c
		.long   data_76656
		.long   data_7665f
		.long   data_7666a
		.long   data_76677
		.long   data_76682
		.long   data_7668f
		.long   data_7669a
		.long   data_766a7
		.long   data_766b2
		.long   data_766bf
		.long   data_766ca
		.long   data_766d7
		.long   data_766e2
		.long   data_766ef
		.long   data_766f9
		.long   data_76705
		.long   data_76710
		.long   data_7671d
		.long   data_76729
		.long   data_76733
		.long   data_7673f
		.long   data_76747
		.long   data_76751
		.long   data_7675c
		.long   data_76769
		.long   data_76771
		.long   data_7677b
		.long   data_76788
		.long   data_76795
		.long   data_7679d
		.long   data_767a6
		.long   data_767af
		.long   data_767b9
		.long   data_767c3
		.long   data_767cf
		.long   data_767db
		.long   data_767e7
		.long   data_767f3
		.long   data_767fd
		.long   data_76807
		.long   data_76811
		.long   data_7681b
		.long   data_76828
		.long   data_76834
		.long   data_76840
		.long   data_76503
		.long   data_7650d
		.long   data_7684c
		.long   data_76857
		.long   data_76862
		.long   data_7686d
		.long   data_76878
		.long   data_76885
		.long   data_76892
		.long   data_7689f
		.long   data_768ac
		.long   data_768b8
		.long   data_768c3
		.long   data_768d0
		.long   data_768dc
		.long   data_768e9
		.long   data_768f6
		.long   data_76903
		.long   data_76910
		.long   data_7691d
		.long   data_7692a
		.long   data_76935
		.long   data_76940
		.long   data_7694b
		.long   data_76957
		.long   data_76961
		.long   data_7696c
		.long   data_76979
		.long   data_76984
		.long   data_76990
		.long   data_7699a
		.long   data_769a7
		.long   data_769b4
		.long   data_769c0
		.long   data_769c8
		.long   data_769d0
		.long   data_769d8
		.long   data_769e0
		.long   data_769e8
		.long   data_769f0
		.long   data_769f8
		.long   data_76a00
		.long   data_76a08
		.long   data_76a10
		.long   data_76a18
data_705a4:
		.long   data_76a20
		.long   data_76a2c
		.long   data_76a39
		.long   data_76a43
		.long   data_76a4c
		.long   data_76a56
		.long   data_76a5f
		.long   data_76a69
		.long   data_76a74
		.long   data_76a7c
		.long   data_76a85
		.long   data_76a8f
		.long   data_76a98
		.long   data_76aa2
		.long   data_76aae
		.long   data_76abb
		.long   data_76ac7
		.long   data_76ad4
		.long   data_76ae1
		.long   data_76aee
		.long   data_76af9
		.long   data_76b05
		.long   data_76b0f
		.long   data_76b1a
		.long   data_76b26
		.long   data_76b33
		.long   data_76b3e
		.long   data_76b4a
		.long   data_76b54
		.long   data_76b5f
		.long   data_76b6b
		.long   data_76b78
		.long   data_76b83
		.long   data_76b8f
		.long   data_76b9a
		.long   data_76ba6
		.long   data_76bb2
		.long   data_76bbd
		.long   data_76bc8
		.long   data_76bd3
		.long   data_76bdd
		.long   data_76be8
		.long   data_76bf3
		.long   data_76bff
		.long   data_76c0c
		.long   data_76c16
		.long   data_76c21
		.long   data_76c2d
		.long   data_76c39
		.long   data_76c46
		.long   data_76c50
		.long   data_76c5a
		.long   data_76c63
		.long   data_76c6c
		.long   data_76c78
		.long   data_76c84
		.long   data_76c91
		.long   data_76c9c
		.long   data_76ca6
		.long   data_76cb2
		.long   data_76cbd
		.long   data_76cc7
		.long   data_76cd3
		.long   data_76cde
		.long   data_76cea
		.long   data_76cf5
		.long   data_76d00
		.long   data_76d0b
		.long   data_76d16
		.long   data_76d23
		.long   data_76d2d
		.long   data_76d38
		.long   data_76d44
		.long   data_76d4f
		.long   data_76d59
		.long   data_76d65
data_706d4:
		.ascii  "\x00\x00\x02\x00\x01\x00\x00\x00"
		.ascii  "\x02\x00\x01\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x00\x00"
		.ascii  "\x02\x00\x01\x00\x00\x00\x02\x00"
		.ascii  "\x01\x00\xff\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x00\x00\x01\x00\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x03\x00\x05\x00\x04\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x08\x00"
		.ascii  "\x09\x00\x09\x00\x0a\x00\xff\xff"
		.ascii  "\x0b\x00\x0b\x00\x0b\x00\x0c\x00"
		.ascii  "\xff\xff\xff\xff\x0d\x00\x0d\x00"
		.ascii  "\x0e\x00\xff\xff\x0f\x00\x0f\x00"
		.ascii  "\x0f\x00\x10\x00\xff\xff\x11\x00"
		.ascii  "\x11\x00\x12\x00\xff\xff\x13\x00"
		.ascii  "\x13\x00\x14\x00\xff\xff\x15\x00"
		.ascii  "\x15\x00\x16\x00\xff\xff\x17\x00"
		.ascii  "\x17\x00\x18\x00\xff\xff\x19\x00"
		.ascii  "\x19\x00\x1a\x00\xff\xff\x1b\x00"
		.ascii  "\x1b\x00\x1c\x00\xff\xff\x1d\x00"
		.ascii  "\x1d\x00\x1e\x00\xff\xff\x1f\x00"
		.ascii  "\x1f\x00\x20\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x21\x00\x22\x00"
		.ascii  "\xff\xff\x23\x00\xff\xff\xff\xff"
		.ascii  "\x24\x00\x25\x00\x26\x00\xff\xff"
		.ascii  "\xff\xff\x27\x00\x28\x00\xff\xff"
		.ascii  "\x29\x00\xff\xff\x2a\x00\xff\xff"
		.ascii  "\xff\xff\x2b\x00\xff\xff\xff\xff"
		.ascii  "\x2c\x00\x2d\x00\x2e\x00\xff\xff"
		.ascii  "\x06\x00\x06\x00\x07\x00\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff"
data_70896:
		.ascii  "\xff\xff\xff\xff\xff\xff\x2f\x00"
		.ascii  "\x31\x00\x30\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x34\x00"
		.ascii  "\x33\x00\xff\xff\xff\xff\xff\xff"
		.ascii  "\x34\x00\x34\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x35\x00\xff\xff"
		.ascii  "\xff\xff\xff\xff\x36\x00\x36\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x37\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x38\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x39\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x3a\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x3b\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x3c\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x3d\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\x3e\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x4b\x00\xff\xff"
		.ascii  "\xff\xff\x3f\x00\xff\xff\xff\xff"
		.ascii  "\x40\x00\x48\x00\x41\x00\xff\xff"
		.ascii  "\xff\xff\x49\x00\x42\x00\xff\xff"
		.ascii  "\x43\x00\xff\xff\x4a\x00\xff\xff"
		.ascii  "\xff\xff\x44\x00\xff\xff\xff\xff"
		.ascii  "\x45\x00\x46\x00\x47\x00\xff\xff"
		.ascii  "\x32\x00\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff"
data_70a58:
		.ascii  "\x00\x08\x08\x04\x00\x00\x04"
data_70a5f:
		.ascii  "\x00\x00\x00"
data_70a62:
		.ascii  "\x04\x10\x31\x51\x20\x01"
data_70a68:
		.ascii  "\x00\x00\x01\x01\x00\x01\x00\x00"
		.ascii  "\x00\x01\x00\x01\x01\x01"
		.fill   0x1e
		.ascii  "\x01\x01\x01"
		.fill   0x8
		.ascii  "\x01\x01\x04\x04\x04\x05\x05\x05"
		.fill   0x12
		.ascii  "\x05\x05"
		.fill   0x8
		.ascii  "\x04\x00\x00\x05\x01\x02\x02\x02"
		.ascii  "\x02\x05\x05\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x00\x00\x02\x02"
		.fill   0x8
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x00"
		.ascii  "\x00\x05\x00"
data_70b0d:
		.ascii  "\xff\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.ascii  "\x00\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.ascii  "\x00\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.ascii  "\x00\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.ascii  "\x00\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.ascii  "\x00\x05\x06\x06\x08\xff\x0a\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x09"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x07\x0a\xff\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x40
		.ascii  "\xff\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x00\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x00\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x00\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x00\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x00\x05\x05\x05\x05\xff\x05\xff"
		.ascii  "\xff\x05\x05\x05\x05\x05\x05\x05"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\x06\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x40
		.ascii  "\xff\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.ascii  "\x00\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.ascii  "\x00\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.ascii  "\x00\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.ascii  "\x00\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.ascii  "\x00\x04\x06\x07\xff\xff\x08\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x5
		.ascii  "\x08\x08\xff\x08\x08\x08\x08\x08"
		.ascii  "\x08\x08\x0a"
		.fill   0x40
		.ascii  "\xff\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x00\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x00\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x00\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x00\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x00\x04\x05\x06\xff\xff\x06\xff"
		.ascii  "\xff\x06\x06\x06\x06\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x5
		.ascii  "\x06\xff\xff\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06"
		.fill   0x40
		.ascii  "\xff\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.ascii  "\x00\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.ascii  "\x00\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.ascii  "\x00\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.ascii  "\x00\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.ascii  "\x00\x06\x07\x07\x0a\xff\x0c\xff"
		.ascii  "\xff\x07\x08\x08\x07\x07\x08\x05"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x5
		.ascii  "\x09\x04\x04\x0a\x08\x08\x08\x08"
		.ascii  "\x08\x08\x06"
		.fill   0x40
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x06\x04\x04\x04\x04\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x5
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04"
		.fill   0x40
data_7110d:
		.ascii  "\x02\x03\x04\x03"
data_71111:
		.ascii  "\x03\x04\x03\x04"
data_71115:
		.ascii  "\x05\x00\x00"
data_71118:
		.string "Knight"
		.fill   0x9
		.string "Paladin"
		.fill   0x8
		.string "Death lord"
		.fill   0x5
		.string "Dragon knight"
		.ascii  "\x00\x00"
		.string "King"
		.fill   0xb
		.string "Dragon slayer"
		.ascii  "\x00\x00"
		.string "Fighter"
		.fill   0x8
		.string "Assassin"
		.fill   0x7
		.string "Gradiater"
		.fill   0x6
		.string "Valkyrie"
		.fill   0x7
		.string "Thief"
		.fill   0xa
		.string "Ranger"
		.fill   0x9
		.string "Scout"
		.fill   0xa
		.string "Archeaogist"
		.fill   0x4
		.string "Soldier"
		.fill   0x8
		.string "Lancer"
		.fill   0x9
		.string "General"
		.fill   0x8
		.string "Dark General"
		.ascii  "\x00\x00\x00"
		.string "Guard"
		.fill   0xa
		.string "Royal Guard "
		.ascii  "\x00\x00\x00"
		.string "Earthquaker"
		.fill   0x4
		.string "Archer"
		.fill   0x9
		.string "Hunter"
		.fill   0x9
		.string "Eagle"
		.fill   0xa
		.string "Sniper"
		.fill   0x9
		.string "Mage"
		.fill   0xb
		.string "Magician"
		.fill   0x7
		.string "Alchemist"
		.fill   0x6
		.string "Fire Master"
		.fill   0x4
		.string "Ice Master"
		.fill   0x5
		.string "Thunder Master"
		.ascii  "\x00"
		.string "Wizard"
		.fill   0x9
		.string "Dark Wizard"
		.fill   0x4
		.string "Monk"
		.fill   0xb
		.string "Cleric"
		.fill   0x9
		.string "Priest"
		.fill   0x9
		.string "Druid"
		.fill   0xa
		.string "Bishop"
		.fill   0x9
		.string "Warlock"
		.fill   0x8
		.string "Necromancer"
		.fill   0x4
		.string "Lich"
		.fill   0xb
		.string "Sorcerer"
		.fill   0x7
		.string "Sharman"
		.fill   0x8
		.string "Exorcist"
		.fill   0x7
		.string "Warrior"
		.fill   0x8
		.string "Berserker"
		.fill   0x6
		.string "Genoicider"
		.fill   0x5
		.string "Tusa"
		.fill   0xb
		.string "Martial Arts"
		.ascii  "\x00\x00\x00"
		.string "Musa"
		.fill   0xb
		.string "Sword Master"
		.ascii  "\x00\x00\x00"
		.string "Tamer"
		.fill   0xa
		.string "Savant"
		.fill   0x9
		.string "Killer"
		.fill   0x9
		.string "Cleaner"
		.fill   0x8
		.string "Shadow Killer"
		.ascii  "\x00\x00"
		.string "Shadow Master"
		.ascii  "\x00\x00"
		.string "Merman Soldier"
		.ascii  "\x00"
		.string "Merman Armor"
		.ascii  "\x00\x00\x00"
		.string "Merman Lord"
		.fill   0x4
		.string "Valtan Soldier"
		.ascii  "\x00"
		.string "Asult Valtan"
		.ascii  "\x00\x00\x00"
		.string "Valtan Lord"
		.fill   0x4
		.string "Goblin"
		.fill   0x9
		.string "Goblin Lord"
		.fill   0x4
		.ascii  "\x4f\x72\x63"
		.fill   0xd
		.string "Orc Lord"
		.fill   0x7
		.string "Ogre"
		.fill   0xb
		.string "Ogre Lord"
		.fill   0x6
		.string "Skeleton"
		.fill   0x7
		.string "Dark Skeleton"
		.ascii  "\x00\x00"
		.string "DTWarrior"
		.fill   0x6
		.string "Slime"
		.fill   0xa
		.string "Dark Slime"
		.fill   0x5
		.string "Ghoul"
		.fill   0xa
		.string "Zombi"
		.fill   0xa
		.ascii  "\x42\x61\x74"
		.fill   0xd
		.string "Bamp"
		.fill   0xb
		.string "Vampire"
		.fill   0x8
		.string "Vampire Lord"
		.ascii  "\x00\x00\x00"
		.string "Scorpion"
		.fill   0x7
		.string "Wyvern"
		.fill   0x9
		.string "Gargoyle"
		.fill   0x7
		.string "Fire Golem"
		.fill   0x5
		.string "Ice Golem"
		.fill   0x6
		.string "Thunder Golem"
		.ascii  "\x00\x00"
		.string "Dark Golem"
		.fill   0x5
		.ascii  "\x44\x61\x6f"
		.fill   0xd
		.string "Djinni"
		.fill   0x9
		.string "Marid"
		.fill   0xa
		.string "Salamanda"
		.fill   0x6
		.string "Kraken"
		.fill   0x9
		.string "Fire Dragon"
		.fill   0x4
		.string "Dragon Hand"
		.fill   0x4
		.string "Harpy"
		.fill   0xa
		.string "Grima"
		.fill   0xa
		.string "Brown Horse"
		.fill   0x4
		.string "White Horse"
		.fill   0x4
		.string "Green Horse"
		.fill   0x4
		.string "Black Horse"
		.fill   0x4
		.string "Blue Drake"
		.fill   0x5
		.string "Dark Drake"
		.fill   0x5
		.string "Cannon M. A."
		.ascii  "\x00\x00\x00"
		.string "I. Cannon M. A."
		.string "Arrow M. A."
		.fill   0x4
		.string "I. Arrow M. A."
		.ascii  "\x00"
		.string "Shaft M. A. "
		.ascii  "\x00\x00\x00"
		.string "I. Shaft M.A."
		.ascii  "\x00\x00"
		.string "Aero M.A."
		.fill   0x6
		.string "I. Aero M.A."
		.ascii  "\x00\x00\x00"
		.string "Abarest"
		.fill   0x8
		.string "Arondight"
		.fill   0x6
		.string "Asura"
		.fill   0xa
		.string "Dun Grnid"
		.fill   0x6
		.string "ElGenaro"
		.fill   0x7
		.string "Garius"
		.fill   0x9
		.ascii  "\x52\x61"
		.fill   0xe
		.string "Yanus"
		.fill   0xa
		.string "Carrier"
		.fill   0x8
		.string "Abarest"
		.fill   0x8
		.string "Arondight"
		.fill   0x6
		.string "Asura"
		.fill   0xa
		.string "Dun Grnid"
		.fill   0x6
		.string "ElGenaro"
		.fill   0x7
		.string "Garius"
		.fill   0x9
		.ascii  "\x52\x61"
		.fill   0xe
		.string "Yanus"
		.fill   0xa
		.string "Blue Drake"
		.fill   0x5
		.string "Dark Drake"
		.fill   0x5
		.string "F.Arondight"
		.fill   0x4
		.string "F.Asura"
		.fill   0x8
		.string "F.Dun Grnid"
		.fill   0x4
		.string "F.Ra"
		.fill   0xb
		.string "Asmodeus"
		.fill   0x7
		.string "Infantry"
		.fill   0x7
		.string "I. Infantry"
		.fill   0x4
		.string "Cavalry"
		.fill   0x8
		.string "I. Cavalry"
		.fill   0x5
		.string "Spear"
		.fill   0xa
		.string "I. Spear"
		.fill   0x7
		.ascii  "\x42\x6f\x77"
		.fill   0xd
		.string "I. Bow"
		.fill   0x9
		.string "Magic"
		.fill   0xa
		.string "I. Magic"
		.fill   0x7
		.string "Canon"
		.fill   0xa
		.string "I. Canon"
		.fill   0x7
		.string "Galley Ship"
		.fill   0x4
		.string "I. Galley"
		.fill   0x6
		.string "Sailer"
		.fill   0x9
		.string "I. Sailer"
		.fill   0x6
		.string "Ironclad Ship"
		.ascii  "\x00\x00"
		.string "BattleShip"
		.fill   0x5
		.string "I. BattleShip"
		.ascii  "\x00\x00"
		.string "Air Fighter"
		.fill   0x4
		.string "I. Air Fighter"
		.ascii  "\x00"
		.string "Air Advanced"
		.ascii  "\x00\x00\x00"
		.string "I. Air Advanced"
		.string "Air Battler"
		.fill   0x4
		.string "I, Air Battler"
		.ascii  "\x00"
		.string "Air Pirate"
		.fill   0x5
		.string "Ace Pirate"
		.fill   0x5
		.string "Canon"
		.fill   0xa
		.string "Gate"
		.fill   0xb
		.string "Oddy Guardian"
		.ascii  "\x00\x00\x47\x6f\x64"
		.fill   0xd
data_71b68:
		.ascii  "\x3c\x00"
data_71b6a:
		.ascii  "\x28\x00"
data_71b6c:
		.ascii  "\x46\x00"
data_71b6e:
		.ascii  "\x0b\x00\x50\x00\x3c\x00\x55\x00"
		.ascii  "\x0c\x00\x64\x00\x3c\x00\x5a\x00"
		.ascii  "\x0a\x00\x4b\x00\x46\x00\x5f\x00"
		.ascii  "\x0a\x00\x5a\x00\x3c\x00\x55\x00"
		.ascii  "\x0b\x00\x55\x00\x64\x00\x64\x00"
		.ascii  "\x0c\x00\x1e\x00\x00\x00\x28\x00"
		.ascii  "\x08\x00\x28\x00\x00\x00\x32\x00"
		.ascii  "\x09\x00\x28\x00\x00\x00\x37\x00"
		.ascii  "\x08\x00\x32\x00\x1e\x00\x3c\x00"
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x14\x00\x05\x00\x0a\x00\x00\x00"
		.ascii  "\x1e\x00\x06\x00\x14\x00\x00\x00"
		.ascii  "\x28\x00\x06\x00\x1e\x00\x0a\x00"
		.ascii  "\x2d\x00\x06\x00\x28\x00\x00\x00"
		.ascii  "\x32\x00\x0b\x00\x37\x00\x00\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x0d\x00\x64\x00\x00\x00"
		.ascii  "\x50\x00\x0d\x00\x1e\x00\x32\x00"
		.ascii  "\x23\x00\x09\x00\x28\x00\x3c\x00"
		.ascii  "\x32\x00\x0a\x00\x32\x00\x4b\x00"
		.ascii  "\x37\x00\x0a\x00\x0a\x00\x00\x00"
		.ascii  "\x14\x00\x07\x00\x0f\x00\x00\x00"
		.ascii  "\x1e\x00\x08\x00\x19\x00\x00\x00"
		.ascii  "\x28\x00\x08\x00\x1e\x00\x00\x00"
		.ascii  "\x28\x00\x07\x00\x00\x00\x46\x00"
		.ascii  "\x14\x00\x06\x00\x00\x00\x4b\x00"
		.ascii  "\x14\x00\x05\x00\x00\x00\x3c\x00"
		.ascii  "\x19\x00\x07\x00\x00\x00\x50\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x50\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x50\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x5a\x00"
		.ascii  "\x1e\x00\x05\x00\x0a\x00\x64\x00"
		.ascii  "\x32\x00\x07\x00\x0f\x00\x50\x00"
		.ascii  "\x14\x00\x06\x00\x14\x00\x55\x00"
		.ascii  "\x14\x00\x05\x00\x1e\x00\x5a\x00"
		.ascii  "\x19\x00\x05\x00\x14\x00\x50\x00"
		.ascii  "\x1e\x00\x06\x00\x28\x00\x64\x00"
		.ascii  "\x1e\x00\x05\x00\x00\x00\x3c\x00"
		.ascii  "\x23\x00\x05\x00\x00\x00\x46\x00"
		.ascii  "\x2d\x00\x06\x00\x00\x00\x5a\x00"
		.ascii  "\x37\x00\x06\x00\x00\x00\x32\x00"
		.ascii  "\x14\x00\x05\x00\x00\x00\x37\x00"
		.ascii  "\x19\x00\x05\x00\x00\x00\x41\x00"
		.ascii  "\x23\x00\x06\x00\x32\x00\x3c\x00"
		.ascii  "\x32\x00\x0d\x00\x3c\x00\x41\x00"
		.ascii  "\x3c\x00\x0e\x00\x46\x00\x46\x00"
		.ascii  "\x4b\x00\x0f\x00\x23\x00\x00\x00"
		.ascii  "\x46\x00\x0d\x00\x37\x00\x00\x00"
		.ascii  "\x50\x00\x0c\x00\x14\x00\x00\x00"
		.ascii  "\x1e\x00\x07\x00\x2d\x00\x00\x00"
		.ascii  "\x3c\x00\x08\x00\x14\x00\x00\x00"
		.ascii  "\x41\x00\x0c\x00\x00\x00\x64\x00"
		.ascii  "\x23\x00\x05"
		.fill   0x5
		.ascii  "\x19\x00\x05\x00\x0a\x00\x0a\x00"
		.ascii  "\x1e\x00\x05\x00\x1e\x00\x14\x00"
		.ascii  "\x23\x00\x05\x00\x32\x00\x32\x00"
		.ascii  "\x28\x00\x05\x00\x23\x00\x28\x00"
		.ascii  "\x37\x00\x0c\x00\x28\x00\x28\x00"
		.ascii  "\x41\x00\x0d\x00\x32\x00\x28\x00"
		.ascii  "\x4b\x00\x0d\x00\x14\x00\x00\x00"
		.ascii  "\x23\x00\x06\x00\x19\x00\x00\x00"
		.ascii  "\x2d\x00\x06\x00\x23\x00\x00\x00"
		.ascii  "\x37\x00\x07\x00\x14\x00\x00\x00"
		.ascii  "\x32\x00\x0a\x00\x23\x00\x1e\x00"
		.ascii  "\x32\x00\x0a\x00\x28\x00\x00\x00"
		.ascii  "\x28\x00\x0b\x00\x37\x00\x1e\x00"
		.ascii  "\x3c\x00\x0b\x00\x46\x00\x00\x00"
		.ascii  "\x28\x00\x0c\x00\x5f\x00\x1e\x00"
		.ascii  "\x28\x00\x0c\x00\x28\x00\x32\x00"
		.ascii  "\x2d\x00\x09\x00\x32\x00\x32\x00"
		.ascii  "\x37\x00\x09\x00\x5a\x00\x32\x00"
		.ascii  "\x46\x00\x0a\x00\x50\x00\x00\x00"
		.ascii  "\x1e\x00\x0f\x00\x64\x00\x00\x00"
		.ascii  "\x32\x00\x0f"
		.fill   0x5
		.ascii  "\x2d\x00\x0c\x00\x1e\x00\x1e\x00"
		.ascii  "\x28\x00\x0d\x00\x0a\x00\x00\x00"
		.ascii  "\x14\x00\x06\x00\x0f\x00\x00\x00"
		.ascii  "\x1e\x00\x06\x00\x1e\x00\x3c\x00"
		.ascii  "\x2d\x00\x0b\x00\x32\x00\x3c\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x00\x00"
		.ascii  "\x41\x00\x0c\x00\x55\x00\x00\x00"
		.ascii  "\x50\x00\x0d\x00\x28\x00\x28\x00"
		.ascii  "\x2d\x00\x08\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x50\x00"
		.ascii  "\x32\x00\x0e\x00\x64\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x28\x00\x3c\x00"
		.ascii  "\x37\x00\x08\x00\x23\x00\x3c\x00"
		.ascii  "\x41\x00\x0a\x00\x46\x00\x3c\x00"
		.ascii  "\x2d\x00\x0b\x00\x32\x00\x32\x00"
		.ascii  "\x28\x00\x0f\x00\x64\x00\x32\x00"
		.ascii  "\x3c\x00\x0f\x00\x64\x00\x32\x00"
		.ascii  "\x3c\x00\x11\x00\x1e\x00\x14\x00"
		.ascii  "\x28\x00\x0b\x00"
data_71e60:
		.ascii  "\x64\x00\x64\x00"
data_71e64:
		.ascii  "\x64\x00\x06\x00\x32\x00\x00\x00"
		.ascii  "\x1e\x00\x0b\x00\x46\x00\x1e\x00"
		.ascii  "\x32\x00\x0b\x00\x32\x00\x00\x00"
		.ascii  "\x1e\x00\x0b\x00\x46\x00\x1e\x00"
		.ascii  "\x32\x00\x0b\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0e\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0e\x00\x28\x00\x64\x00"
		.ascii  "\x28\x00\x0d\x00\x28\x00\x64\x00"
		.ascii  "\x28\x00\x0d\x00\x32\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x32\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x1e\x00\x64\x00"
		.ascii  "\x46\x00\x0b\x00\x1e\x00\x64\x00"
		.ascii  "\x46\x00\x0b\x00\xaa\x00\x64\x00"
		.ascii  "\x46\x00\x0c\x00\xc8\x00\x64\x00"
		.ascii  "\x3c\x00\x0f\x00\xb4\x00\x64\x00"
		.ascii  "\x37\x00\x0e\x00\x6e\x00\x64\x00"
		.ascii  "\x41\x00\x0d\x00\x78\x00\x64\x00"
		.ascii  "\x32\x00\x0d\x00\xa0\x00\x64\x00"
		.ascii  "\x46\x00\x0e\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0e\x00\x96\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0f\x00\xaa\x00\x64\x00"
		.ascii  "\x46\x00\x0c\x00\xc8\x00\x64\x00"
		.ascii  "\x3c\x00\x0f\x00\xb4\x00\x64\x00"
		.ascii  "\x37\x00\x0e\x00\x6e\x00\x64\x00"
		.ascii  "\x41\x00\x0d\x00\x78\x00\x64\x00"
		.ascii  "\x32\x00\x0d\x00\xa0\x00\x64\x00"
		.ascii  "\x46\x00\x0e\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0e\x00\x96\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\xc8\x00\x64\x00"
		.ascii  "\x50\x00\x0f\x00\xaa\x00\x64\x00"
		.ascii  "\x4b\x00\x0d\x00\x8c\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0f\x00\xc8\x00\x64\x00"
		.ascii  "\x64\x00\x0d\x00\x37"
		.fill   0x5
		.ascii  "\x0c\x00\x2d"
		.fill   0x5
		.ascii  "\x0c\x00\x46\x00\x1e\x00\x00\x00"
		.ascii  "\x0a\x00\x4b\x00\x1e\x00\x00\x00"
		.ascii  "\x09\x00\x28\x00\x0a\x00\x00\x00"
		.ascii  "\x0d\x00\x28\x00\x0a\x00\x00\x00"
		.ascii  "\x0d\x00\x1e"
		.fill   0x5
		.ascii  "\x08\x00\x23"
		.fill   0x5
		.ascii  "\x08\x00\x0a\x00\x32\x00\x00\x00"
		.ascii  "\x07\x00\x0f\x00\x32\x00\x00\x00"
		.ascii  "\x07\x00\x14\x00\x32\x00\x00\x00"
		.ascii  "\x0f\x00\x1e\x00\x32\x00\x00\x00"
		.ascii  "\x0f\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x2d\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x37\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x64\x00\x64\x00\x00\x00"
		.ascii  "\x0c\x00\x50\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x5a\x00\x64\x00\x00\x00"
		.ascii  "\x0e\x00\x14\x00\x64\x00\x00\x00"
		.ascii  "\x07\x00\x1e\x00\x64\x00\x00\x00"
		.ascii  "\x08\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x09\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0e\x00\x3c\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x0a\x00\x64\x00\x00\x00"
		.ascii  "\x05\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0f\x00\x37\x00\x64\x00\x00\x00"
		.ascii  "\x0f\x00\x00\x00\x64\x00\x64\x00"
		.ascii  "\x0f\x00\x00\x00\x64\x00\x00\x00"
		.ascii  "\x0f\x00"
data_72090:
		.ascii  "\x01\x03\x03\x01\x02\x03\x05\x00"
		.ascii  "\x00\x00\x01\x03\x03\x01\x02\x03"
		.ascii  "\x04\x00\x00\x00\x01\x03\x03\x01"
		.ascii  "\x02\x03\x03\x00\x00\x00\x01\x03"
		.ascii  "\x03\x01\x02\x03\x03\x00\x00\x00"
		.ascii  "\x01\x03\x03\x01\x02\x03\x03\x00"
		.ascii  "\x00\x00\x01\x03\x03\x01\x02\x03"
		.ascii  "\x04\x00\x00\x00\x03\x02\x04\x04"
		.ascii  "\x03\x05\x0a\x00\x00\x00\x03\x02"
		.ascii  "\x04\x04\x03\x05\x08\x00\x00\x00"
		.ascii  "\x03\x02\x04\x03\x03\x05\x05\x00"
		.ascii  "\x00\x00\x03\x02\x04\x03\x03\x05"
		.ascii  "\x05\x00\x00\x00\x04\x01\x05\x05"
		.ascii  "\x04\x05\x0f\x00\x00\x00\x04\x01"
		.ascii  "\x05\x05\x04\x05\x0c\x00\x00\x00"
		.ascii  "\x04\x01\x05\x05\x04\x05\x0a\x00"
		.ascii  "\x00\x00\x04\x01\x05\x05\x04\x05"
		.ascii  "\x08\x00\x00\x00\x02\x03\x05\x04"
		.ascii  "\x01\x05\x00\x00\x0a\x00\x02\x03"
		.ascii  "\x05\x03\x01\x05\x00\x00\x07\x00"
		.ascii  "\x02\x03\x05\x02\x01\x05\x00\x00"
		.ascii  "\x05\x00\x02\x03\x05\x02\x01\x05"
		.ascii  "\x00\x00\x05\x00\x03\x04\x02\x04"
		.ascii  "\x03\x02\x00\x00\x0a\x00\x03\x04"
		.ascii  "\x02\x03\x03\x02\x00\x00\x08\x00"
		.ascii  "\x03\x04\x02\x02\x03\x02\x00\x00"
		.ascii  "\x05\x00\x04\x03\x04\x05\x04\x05"
		.ascii  "\x00\x00\x00\x0a\x04\x03\x04\x04"
		.ascii  "\x04\x05\x00\x00\x00\x08\x04\x03"
		.ascii  "\x04\x03\x04\x05\x00\x00\x00\x06"
		.ascii  "\x04\x03\x04\x02\x04\x05\x00\x00"
		.ascii  "\x00\x04\x05\x04\x01\x05\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x04\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x03\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x04\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x04\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x04\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x02\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x02\x05\x01"
		.fill   0x4
		.ascii  "\x03\x05\x02\x04\x04\x02"
		.fill   0x4
		.ascii  "\x03\x05\x02\x03\x04\x02"
		.fill   0x4
		.ascii  "\x03\x05\x02\x03\x04\x02"
		.fill   0x4
		.ascii  "\x04\x04\x01\x05\x05\x01"
		.fill   0x4
		.ascii  "\x03\x03\x02\x02\x04\x02"
		.fill   0x4
		.ascii  "\x05\x04\x01\x02\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x02\x05\x01"
		.fill   0x4
		.ascii  "\x05\x04\x01\x02\x05\x01"
		.fill   0x4
		.ascii  "\x03\x03\x01\x05\x03\x02"
		.fill   0x4
		.ascii  "\x03\x03\x01\x04\x03\x02"
		.fill   0x4
		.ascii  "\x03\x03\x01\x03\x03\x02"
		.fill   0x4
		.ascii  "\x01\x04\x05\x04\x01\x05\x00\x08"
		.ascii  "\x00\x00\x01\x04\x05\x03\x01\x05"
		.ascii  "\x00\x06\x00\x00\x01\x04\x05\x02"
		.ascii  "\x01\x05\x00\x04\x00\x00\x01\x03"
		.ascii  "\x05\x05\x01\x05"
		.fill   0x4
		.ascii  "\x01\x03\x05\x05\x01\x05"
		.fill   0x4
		.ascii  "\x03\x02\x05\x05\x02\x05\x04\x00"
		.ascii  "\x00\x00\x03\x02\x05\x05\x02\x05"
		.ascii  "\x02\x00\x00\x00\x02\x04\x05\x05"
		.ascii  "\x03\x05"
		.fill   0x4
		.ascii  "\x04\x03\x01\x01\x04\x01"
		.fill   0x4
		.ascii  "\x01\x01\x05\x05\x04\x04\x00\x00"
		.ascii  "\x00\x05\x01\x01\x05\x05\x04\x04"
		.ascii  "\x00\x00\x00\x05\x01\x01\x05\x05"
		.ascii  "\x04\x04\x00\x00\x00\x05\x01\x01"
		.ascii  "\x05\x05\x04\x04\x00\x00\x00\x05"
		.ascii  "\x02\x03\x04\x04\x03\x03\x00\x00"
		.ascii  "\x08\x00\x02\x03\x04\x03\x03\x03"
		.ascii  "\x00\x00\x06\x00\x02\x03\x04\x02"
		.ascii  "\x03\x03\x00\x00\x04\x00\x04\x02"
		.ascii  "\x04\x04\x03\x04\x00\x00\x09\x00"
		.ascii  "\x04\x02\x04\x03\x03\x04\x00\x00"
		.ascii  "\x07\x00\x04\x02\x04\x02\x03\x04"
		.ascii  "\x00\x00\x05"
		.fill   0xb
data_72310:
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x00\x00\x00\x02"
		.ascii  "\x02\x02\x00\x00\x00\x03\x02\x02"
		.ascii  "\x02"
		.fill   0x4
		.ascii  "\x02\x02\x02\x02\x00\x00\x00\x03"
		.ascii  "\x03\x03\x03\x00\x00\x03"
		.fill   0x17
		.ascii  "\x01"
		.fill   0x46
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x01"
		.fill   0x1f
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x02\x02\x02"
		.fill   0x4
		.ascii  "\x03\x03\x03"
		.fill   0x4
		.ascii  "\x03"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x4
		.ascii  "\x03\x03\x03"
		.fill   0x4
		.ascii  "\x03\x03\x03\x00\x00\x00\x03\x00"
		.ascii  "\x00\x00\x02\x01"
		.fill   0x5
		.ascii  "\x02\x02"
		.fill   0x5
		.ascii  "\x03\x02"
		.fill   0x5
		.ascii  "\x02\x03"
		.fill   0x5
		.ascii  "\x03\x02"
		.fill   0x8
		.ascii  "\x02"
		.fill   0x6
		.ascii  "\x03"
		.fill   0x6
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x02"
		.fill   0x4
		.ascii  "\x01\x00\x03"
		.fill   0x4
		.ascii  "\x01\x01\x03"
		.fill   0x39
		.ascii  "\x03\x03\x03\x02\x02\x00\x01"
		.fill   0x1b
		.ascii  "\x01\x00\x01"
		.fill   0x6
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x02\x00\x01"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x02\x00\x01"
		.fill   0x39
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x02"
		.fill   0x30
		.ascii  "\x01"
		.fill   0x6
		.ascii  "\x02"
		.fill   0x15
		.ascii  "\x03"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x7
		.ascii  "\x03"
		.fill   0xa
		.ascii  "\x03"
		.fill   0x9
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x03"
		.fill   0xd
		.ascii  "\x03"
		.fill   0x6
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x03\x00\x00\x01"
		.fill   0xa
		.ascii  "\x03"
		.fill   0x1e3
data_72793:
		.ascii  "\x01"
data_72794:
		.ascii  "\x00"
data_72795:
		.ascii  "\x01\x01\x00\x01\x01\x00\x01\x01"
		.ascii  "\x00\x01\x01\x00\x01\x01\x00\x01"
		.ascii  "\x01\x00\x02\x01\x00\x02\x01\x00"
		.ascii  "\x02\x01\x00\x02\x01\x00\x02\x01"
		.ascii  "\x00\x02\x01\x00\x02\x01\x00\x02"
		.ascii  "\x03\x00\x00\x03\x00\x01\x03\x00"
		.ascii  "\x01\x03\x00\x01\x03\x00\x00\x03"
		.ascii  "\x00\x00\x03\x00\x00\x05\x00\x00"
		.ascii  "\x05\x00\x00\x05\x00\x00\x05\x00"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x05\x00\x02\x00\x00\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x00\x00\x02\x00"
		.ascii  "\x00\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x00\x00\x02\x00\x00\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x00\x00\x02\x00"
		.ascii  "\x00\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x00\x00\x04\x00\x01\x04\x00\x01"
		.ascii  "\x04\x00\x01\x00\x00\x02\x00\x00"
		.ascii  "\x02\x01\x00\x02\x01\x00\x02\x00"
		.ascii  "\x00\x00\x02\x00\x00\x05\x00\x02"
		.ascii  "\x05\x00\x02\x05\x00\x02\x05\x00"
		.ascii  "\x02\x03\x00\x00\x03\x00\x01\x03"
		.ascii  "\x00\x01\x03\x00\x00\x03\x00\x00"
		.ascii  "\x03"
		.fill   0xe
		.ascii  "\x06\x00\x00\x06\x01\x00\x01\x00"
		.ascii  "\x01\x01\x04\x01\x01\x04\x01"
		.fill   0x4
		.ascii  "\x04\x00\x00\x05\x00\x00\x05\x00"
		.ascii  "\x00\x00\x02\x00\x05\x02\x00\x04"
		.ascii  "\x00\x00\x04\x00\x00\x05\x00\x0e"
		.ascii  "\x01\x00\x06\x00\x00\x06\x01\x00"
		.ascii  "\x06\x02\x00\x06\x03\x00\x06\x04"
		.ascii  "\x00\x06\x00\x00\x00\x03\x02\x00"
		.ascii  "\x02\x00\x00\x01\x00\x06\x02\x00"
		.ascii  "\x0e\x01\x00\x06\x04"
		.fill   0x4
		.ascii  "\x06\x04\x00\x03\x00\x00\x03\x00"
		.ascii  "\x00\x03\x00\x00\x03\x00\x00\x0e"
		.ascii  "\x01\x00\x0e\x01\x00\x0b\x00\x00"
		.ascii  "\x0b\x00\x02\x0c\x00\x00\x0c\x00"
		.ascii  "\x00\x06\x00\x00\x06\x00\x00\x0b"
		.ascii  "\x00\x00\x0b\x00\x00\x07\x00\x00"
		.ascii  "\x07\x00\x00\x09\x00\x00\x08\x00"
		.ascii  "\x00\x07\x00\x00\x08\x00\x00\x07"
		.ascii  "\x00\x00\x07\x00\x00\x06\x00\x00"
		.ascii  "\x01\x00\x00\x01\x00\x00\x04\x00"
		.ascii  "\x00\x03\x00\x00\x01\x00\x00\x03"
		.ascii  "\x00\x00\x01\x00\x00\x01\x00\x00"
		.ascii  "\x00\x01\x00\x00\x01\x00\x01\x00"
		.ascii  "\x00\x04\x00\x00\x03\x00\x00\x01"
		.ascii  "\x00\x00\x07\x00\x00\x01\x00\x00"
		.ascii  "\x01\x00\x00\x01\x00\x00\x01\x00"
		.ascii  "\x00\x01\x00\x00\x01\x00\x00\x0f"
		.ascii  "\x00\x00\x0f\x00\x00\x10\x00\x00"
		.ascii  "\x10\x00\x00\x11\x00\x00\x11\x00"
		.ascii  "\x00\x0f\x00\x00\x0f\x00\x00\x12"
		.ascii  "\x00\x00\x12\x00\x00\x12\x00\x00"
		.ascii  "\x12\x00\x00\x12\x00\x00\x13\x00"
		.ascii  "\x00\x13\x00\x00\x13\x00\x00\x13"
		.ascii  "\x00\x00\x11\x00\x00\x11\x00\x00"
		.ascii  "\x13\x00\x00\x11\x00\x00\x0b"
		.fill   0x5
		.ascii  "\x01\x03"
		.fill   0x4
data_72982:
		.ascii   "\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\xf6\x14\x00"
		.string "\n\n\n\n\n"
		.ascii  "\xf6\x14"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x14\x00\xf6"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x05"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x05"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x05"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x05"
		.string "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x00\x00\x00"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.string "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x00\x00\x0a\x00\x00\x00\x14\x00"
		.ascii  "\xf6\x14\x0a\x05\x0a\x0f\x14\x00"
		.ascii  "\xf6\x14\x0a\x05\x0a\x0f\x14\x00"
		.ascii  "\xf6\x14\x0a\x05\x0a\x0f\x14\x14"
		.ascii  "\x00\xf6\x0a\x05\x0a\x0f\x14\x14"
		.ascii  "\x00\xf6\x0a\x05\x0a\x0f\x14\x14"
		.ascii  "\x00\xf6\x0a\x05\x0a\x0f\x14"
		.ascii   "\n\n\n\n\n\n"
		.ascii  "\x0f"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0f"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0f"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0f"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0f"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0f\x0a\x0f\x0a\x0a\x0a\x05\x05"
		.ascii  "\x0f\x01\x0f\x0a\x0a\x0a\x05\x05"
		.ascii  "\x0f\x01\x0f\x0a\x0a\x0a\x05\x05"
		.ascii  "\x0f\x01\x14\x0a\x0a\x0a"
		.fill   0x4
		.ascii  "\x14\x0a\x0a\x0a"
		.fill   0x4
		.ascii  "\x0a\x0a\x14\x0a\x05\x05\x0a\x03"
		.ascii  "\x0a\x0a\x14\x0a\x05\x05\x0a\x03"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x14"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x14"
		.ascii   "\n\n\n\n"
		.ascii  "\x01\x01\x01\x01"
		.ascii   "\n\n\n\n"
		.ascii  "\x01\x01\x01\x01"
		.ascii   "\n\n\n\n"
		.ascii  "\x0f\x0a\x14"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x0f\x0a\x0a\x14"
		.ascii   "\n\n\n\n"
		.ascii  "\x0f\x0a\x0a\x14\xf6\x14\x00\x0a"
		.ascii  "\x0a\x05\x0f\x05\x00\xf6\x14\x0a"
		.ascii  "\x0a\x05\x0f\x05\x14\x00\xf6\x0a"
		.ascii  "\x0a\x05\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x05"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x05\x0f\x0a\x14\x00\xf6"
		.string "\n\n\n\n\n"
		.ascii  "\xf6\x14"
		.ascii   "\n\n\n\n\n"
		.ascii  "\xf6\x14\x00"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0f\x0a\xf6\x14\x00"
		.ascii   "\n\n\n\n\n"
		.ascii  "\xf6\x14\x00"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x14"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x14"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x14"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x14"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x14"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0f\x05\x0a\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x0f\x05\x0a\x0f"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x0f\x05\x0f"
		.ascii   "\n\n\n\n\n"
		.ascii  "\x0f\x05\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n"
		.ascii  "\x05\x0a\x0f\x0f"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
data_72e9a:
		.ascii  "\x0a\x0a"
data_72e9c:
		.ascii  "\x0a\x0a"
data_72e9e:
		.ascii  "\x0a\x0a"
data_72ea0:
		.ascii  "\x0a\x0a"
data_72ea2:
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x64\x00\x64\x00\x64\x00\x28\x00"
		.ascii  "\x14"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x96\x00\x3c\x00"
		.ascii  "\x14"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x64\x00\x28\x00"
		.ascii  "\x14"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x96\x00\x3c\x00"
		.ascii  "\x14"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x2c\x01\x46\x00"
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x2c\x01\x46\x00"
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x28\x00\x32\x00\x2c\x01\x50"
		.fill   0x9
		.ascii  "\x28\x00\x32\x00\x2c\x01\x50"
		.fill   0x9
		.ascii  "\x32\x00\x37\x00\xfa\x00\x32"
		.fill   0x9
		.ascii  "\x32\x00\x37\x00\xfa\x00\x32"
		.fill   0x9
		.ascii  "\x23\x00\x28\x00\x90\x01\x3c"
		.fill   0x9
		.ascii  "\x23\x00\x28\x00\x90\x01\x3c"
		.fill   0x9
		.ascii  "\x1e\x00\x64\x00\xc8\x00\x28"
		.fill   0x9
		.ascii  "\x1e\x00\x64\x00\xc8\x00\x28"
		.fill   0x9
		.ascii  "\x46\x00\x46\x00\x20\x03\xc8"
		.fill   0x9
		.ascii  "\x50\x00\x32\x00\xe8\x03\xfa"
		.fill   0x9
		.ascii  "\x50\x00\x32\x00\x84\x03\xe6"
		.fill   0x9
		.ascii  "\x3c\x00\x3c\x00\xf4\x01\xaa"
		.fill   0x9
		.ascii  "\x3c\x00\x32\x00\x26\x02\xb4"
		.fill   0x9
		.ascii  "\x4b\x00\x3c\x00\xbc\x02\xdc"
		.fill   0x9
		.ascii  "\x50\x00\x46\x00\x20\x03\xdc"
		.fill   0x9
		.ascii  "\x41\x00\x3c\x00\x58\x02\xd2"
		.fill   0x9
		.ascii  "\x64\x00\x64\x00\x2c\x01"
		.fill   0xa
		.ascii  "\x46\x00\x46\x00\x20\x03\xc8"
		.fill   0x9
		.ascii  "\x50\x00\x32\x00\xe8\x03\xfa"
		.fill   0x9
		.ascii  "\x50\x00\x32\x00\x84\x03\xe6"
		.fill   0x9
		.ascii  "\x3c\x00\x3c\x00\xf4\x01\xaa"
		.fill   0x9
		.ascii  "\x3c\x00\x32\x00\x26\x02\xb4"
		.fill   0x9
		.ascii  "\x4b\x00\x3c\x00\xbc\x02\xdc"
		.fill   0x9
		.ascii  "\x50\x00\x46\x00\x20\x03\xdc"
		.fill   0x9
		.ascii  "\x41\x00\x3c\x00\x58\x02\xd2"
		.fill   0x9
		.ascii  "\x64\x00\x64\x00\x2c\x01\x46\x00"
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\x2c\x01\x46\x00"
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x64\x00\x64\x00\xe8\x03\xfa"
		.fill   0x9
		.ascii  "\x50\x00\x3c\x00\x20\x03\xe6"
		.fill   0x9
		.ascii  "\x3c\x00\x46\x00\x58\x02\xc8"
		.fill   0x9
		.ascii  "\x50\x00\x46\x00\x20\x03\xdc"
		.fill   0x9
		.ascii  "\x64\x00\x64\x00\xb8\x0b\x2c\x01"
		.fill   0x6
data_73108:
		.ascii  "\x00\x00"
data_7310a:
		.ascii  "\x32\x00\xb8\x0b"
data_7310e:
		.ascii  "\x50\x00\x32\x00\xb8\x0b\x50\x00"
		.ascii  "\xb4\x00\xe8\x03\x78\x00\xb4\x00"
		.ascii  "\xe8\x03\x78\x00\x32\x00\xb8\x0b"
		.ascii  "\x46\x00\x32\x00\xb8\x0b\x46\x00"
		.ascii  "\x46\x00\xd0\x07\x3c\x00\x46\x00"
		.ascii  "\xd0\x07\x3c\x00\x78\x00\xe8\x03"
		.ascii  "\x28\x00\x78\x00\xe8\x03\x28\x00"
		.ascii  "\xc8\x00\xe8\x03\x28\x00\xc8\x00"
		.ascii  "\xe8\x03\x28\x00\x64\x00\x2c\x01"
		.ascii  "\x78\x00\x64\x00\x40\x01\x78\x00"
		.ascii  "\x7d\x00\x90\x01\x46\x00\x6e\x00"
		.ascii  "\x90\x01\x46\x00\xc8\x00\xf4\x01"
		.ascii  "\x64\x00\xaa\x00\xe8\x03\x5a\x00"
		.ascii  "\x64\x00\xb0\x04\x46\x00\x6e\x00"
		.ascii  "\x78\x00\x46\x00\x64\x00\x78\x00"
		.ascii  "\x46\x00\x91\x00\xc8\x00\x64\x00"
		.ascii  "\xa0\x00\xc8\x00\x78\x00\xbe\x00"
		.ascii  "\xe8\x03\x28\x00\xc8\x00\xb0\x04"
		.ascii  "\x28\x00\x78\x00\x64\x00\x64\x00"
		.ascii  "\x96\x00\x5e\x01\x82\x00"
data_731ac:
		.ascii  "\x01"
data_731ad:
		.ascii  "\x00"
data_731ae:
		.ascii  "\x00"
data_731af:
		.ascii  "\x00"
data_731b0:
		.ascii  "\x00"
data_731b1:
		.ascii  "\x00"
data_731b2:
		.ascii  "\x00"
data_731b3:
		.ascii  "\x00"
data_731b4:
		.ascii  "\x00"
data_731b5:
		.ascii  "\x00"
data_731b6:
		.ascii  "\x00"
data_731b7:
		.ascii  "\x00"
data_731b8:
		.ascii  "\x00"
data_731b9:
		.ascii  "\x00"
data_731ba:
		.ascii  "\x00\x01"
		.fill   0x9
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01\x00\x00\x00\x01\x01"
		.fill   0xc
		.ascii  "\x01\x00\x01"
		.fill   0x9
		.ascii  "\x01\x00\x00\x00\x01\x01"
		.fill   0x7
		.ascii  "\x02\x00\x01\x00\x00\x00\x01"
		.fill   0x18
		.ascii  "\x01"
		.fill   0x1e
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01\x00\x01"
		.fill   0xd
		.ascii  "\x01\x00\x00\x00\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01"
		.fill   0x22
		.ascii  "\x01"
		.fill   0x3d
		.ascii  "\x01"
		.fill   0x5e
		.ascii  "\x01\x00\x00\x00\x01"
		.fill   0xa
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x13
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x5e
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x48
		.ascii  "\x01"
		.fill   0x21
		.ascii  "\x01\x01"
		.fill   0xd
		.ascii  "\x01\x01"
		.fill   0xd
		.ascii  "\x02\x01"
		.fill   0xd
		.ascii  "\x02\x01"
		.fill   0xa
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xa
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xbe
		.ascii  "\x01"
		.fill   0x4a
		.ascii  "\x01"
		.fill   0x12
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xb3
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xc
		.ascii  "\x01\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x2c
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x347
data_73b57:
		.ascii  "\x00"
data_73b58:
		.ascii  "\x00"
data_73b59:
		.ascii  "\x00"
data_73b5a:
		.fill   0x4
data_73b5e:
		.ascii  "\x00"
data_73b5f:
		.fill   0x12
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01\x00\x00\x00\x01"
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x01\x01"
		.fill   0x6
		.ascii  "\x01\x00\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x23
		.ascii  "\x01"
		.fill   0x1a
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01"
		.fill   0xe
		.ascii  "\x01"
		.fill   0x47
		.ascii  "\x01"
		.fill   0x3a
		.ascii  "\x01"
		.fill   0xc
		.ascii  "\x01"
		.fill   0x1a
		.ascii  "\x01\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01\x00\x01\x01"
		.fill   0x5
		.ascii  "\x01\x00\x01\x01"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x5
		.ascii  "\x01\x01"
		.fill   0x7
		.ascii  "\x01\x01"
		.fill   0x15
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0xbe
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x01"
		.fill   0x8d
		.ascii  "\x01\x01\x00\x00\x00\x01\x00\x01"
		.fill   0x26d
data_74124:
		.ascii  "\xff\x01\x05\x03\x02\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x00\x00"
data_74134:
		.ascii  "\xff\xff\xff\xff"
data_74138:
		.ascii  "\x0a"
data_74139:
		.ascii  "\xf8\xf7\xef\x1f"
data_7413d:
		.ascii  "\xf8\xf7\xef\x9f\x7f\x00\x00"
data_74144:
		.ascii  "\x0b\x03\x0f\x01\x0e\x09\x12\x13"
		.ascii  "\x05\x14\x0a\x02\x11\x10\x0c\x08"
		.ascii  "\x04\x0d\x07\x06\x13\x0d\x11\x09"
		.ascii  "\x02\x10\x03\x0c\x07\x12\x05\x08"
		.ascii  "\x01\x0f\x14\x06\x0e\x0b\x0a\x04"
		.ascii  "\x09\x12\x0e\x0c\x13\x0f\x0d\x11"
		.ascii  "\x06\x03\x07\x0a\x10\x02\x04\x05"
		.ascii  "\x08\x14\x0b\x01\x09\x08\x0e\x05"
		.ascii  "\x0d\x13\x14\x12\x0f\x03\x02\x07"
		.ascii  "\x0c\x0b\x06\x04\x01\x11\x10\x0a"
		.ascii  "\x11\x0c\x06\x03\x08\x04\x05\x0d"
		.ascii  "\x02\x0a\x12\x0f\x13\x0b\x09\x10"
		.ascii  "\x14\x01\x07\x0e\x09\x0a\x07\x0e"
		.ascii  "\x0b\x02\x06\x12\x10\x11\x01\x0c"
		.ascii  "\x04\x05\x08\x03\x0f\x0d\x14\x13"
		.ascii  "\x0f\x04\x0d\x10\x11\x03\x07\x14"
		.ascii  "\x0b\x06\x08\x13\x01\x05\x12\x0c"
		.ascii  "\x0a\x02\x09\x0e\x0c\x02\x0f\x08"
		.ascii  "\x0b\x0a\x05\x12\x01\x0e\x14\x09"
		.ascii  "\x03\x0d\x06\x11\x04\x13\x10\x07"
		.ascii  "\x14\x0f\x05\x06\x01\x0d\x0c\x0e"
		.ascii  "\x04\x08\x0a\x13\x07\x09\x10\x11"
		.ascii  "\x02\x12\x0b\x03\x10\x05\x08\x11"
		.ascii  "\x01\x13\x0b\x0e\x02\x09\x06\x0f"
		.ascii  "\x0a\x12\x04\x03\x14\x0d\x07\x0c"
		.ascii  "\x12\x09\x0e\x04\x14\x08\x10\x0c"
		.ascii  "\x01\x07\x0d\x0b\x0f\x02\x0a\x11"
		.ascii  "\x05\x06\x13\x03\x08\x0a\x0d\x07"
		.ascii  "\x09\x02\x05\x12\x04\x03\x0f\x01"
		.ascii  "\x06\x0e\x13\x10\x0c\x11\x0b\x14"
data_74234:
		.ascii  "\x01\x00\x03\x00\x07\x00\x0c\x00"
data_7423c:
		.long   data_77354
		.long   data_7735f
		.long   data_77369
		.long   data_77374
		.long   data_7737f
		.long   data_7738b
		.long   data_77398
		.long   data_773a3
		.long   data_773ad
		.long   data_773b9
		.long   data_773c4
		.long   data_773ce
		.long   data_773da
		.long   data_773da
		.long   data_773da
		.long   data_773e4
		.long   data_773ee
		.long   data_773f9
		.long   data_77403
data_74288:
		.long   data_77403
		.long   data_7740a
		.long   data_77415
		.long   data_77421
		.long   data_7742b
		.long   data_77438
		.long   data_77442
		.long   data_7744a
		.long   data_77458
		.long   data_77460
		.long   data_7746d
		.long   data_77476
		.long   data_77483
data_742bc:
		.long   data_7748e
		.long   data_7749a
		.long   data_7749a
		.long   data_7749a
		.long   data_774a0
		.long   data_774a8
		.long   data_774b2
		.long   data_774ba
data_742dc:
		.long   data_774ba
		.long   data_774c6
		.long   data_774d1
		.long   data_774d8
		.long   data_774e1
		.long   data_774ea
		.long   data_774ea
		.long   data_774ea
		.long   data_774f2
		.long   data_774fa
		.long   data_77501
		.long   data_7750a
		.long   data_77511
		.long   data_7751a
		.long   data_77524
		.long   data_77524
		.long   data_77524
		.long   data_7752b
		.long   data_77536
		.long   data_7753e
		.long   data_77548
		.long   data_77555
		.long   data_77562
		.long   data_7756e
		.long   data_7756e
		.long   data_7756e
		.long   data_77573
		.long   data_77573
		.long   data_77573
		.long   data_7757d
		.long   data_7757d
		.long   data_7757d
		.long   data_77582
		.long   data_77582
		.long   data_77582
		.long   data_7758e
		.long   data_7758e
		.long   data_7758e
		.long   data_77598
		.long   data_77598
		.long   data_77598
		.long   data_775a0
		.long   data_775aa
		.long   data_775a0
		.long   data_775b4
		.long   data_775b4
		.long   data_775b4
		.long   data_775bd
		.long   data_775bd
		.long   data_775bd
		.long   data_775c6
		.long   data_775c6
		.long   data_775c6
		.long   data_775d2
		.long   data_775d2
		.long   data_775d2
		.long   data_775d8
		.long   data_775d8
		.long   data_775e0
		.long   data_775e9
		.long   data_775e9
		.long   data_775e9
		.long   data_775f1
		.long   data_775f1
		.long   data_775f1
		.long   data_775f7
		.long   data_775f7
		.long   data_775f7
		.long   data_775fb
		.long   data_775fb
		.long   data_775fb
		.long   data_77601
		.long   data_77601
		.long   data_77601
		.long   data_77608
		.long   data_77608
		.long   data_77608
		.long   data_7760c
		.long   data_7760c
		.long   data_7760c
		.long   data_77611
		.long   data_77611
		.long   data_77611
		.long   data_77617
		.long   data_77617
		.long   data_77617
		.long   data_77620
		.long   data_77620
		.long   data_77620
		.long   data_77628
		.long   data_77628
		.long   data_77628
		.long   data_77632
		.long   data_77632
		.long   data_77632
		.long   data_77638
		.long   data_77638
		.long   data_77638
		.long   data_77644
		.long   data_77644
		.long   data_77644
		.long   data_7764f
		.long   data_7764f
		.long   data_7764f
		.long   data_7765a
		.long   data_77664
		.long   data_77671
data_74488:
		.ascii  "\x1e\x00"
data_7448a:
		.ascii  "\x28\x00"
data_7448c:
		.ascii  "\x32\x00\x3c\x00\x46\x00"
data_74492:
		.ascii  "\x00\x00\xe8\x03\x00\x00"
data_74498:
		.ascii  "\x00\x00\xb8\x0b"
data_7449c:
		.ascii  "\x00\x00"
data_7449e:
		.ascii  "\x88\x13"
data_744a0:
		.ascii  "\xa0\x0f"
data_744a2:
		.ascii  "\x00\x00"
data_744a4:
		.ascii  "\xb8\x0b"
data_744a6:
		.ascii  "\xb8\x0b\xb8\x0b\xb8\x0b"
data_744ac:
		.ascii  "\x00\x00"
data_744ae:
		.ascii  "\xa0\x0f"
data_744b0:
		.ascii  "\x70\x17"
data_744b2:
		.ascii  "\xe8\x03"
data_744b4:
		.ascii  "\xd0\x07"
data_744b6:
		.ascii  "\xa0\x0f"
data_744b8:
		.ascii  "\xb8\x0b\xd0\x07\xb8\x0b"
data_744be:
		.ascii  "\xb8\x0b\x00\x00\x88\x13"
		.fill   0x4
data_744c8:
		.fill   0x4
		.ascii  "\x59\xf8\x8e\x3c\xc6\xf2\x0e"
		.ascii   "=:^V={"
		.ascii  "\xdc\x8e\x3d\xb6\x7e\xb2\x3d\x05"
		.ascii  "\x13\xd6\x3d\xa2\x96\xf9\x3d\x65"
		.ascii  "\x83\x0e"
		.ascii   ">[0 >"
		.ascii  "\xd4\xd0"
		.ascii   "1>ocC>"
		.ascii  "\xcd\xe6\x54\x3e\x92"
		.ascii   "Yf>`"
		.ascii  "\xba\x77\x3e\xee\x83\x84\x3e\x57"
		.ascii  "\x20\x8d\x3e\xbe\xb1\x95\x3e\x7a"
		.ascii  "\x37\x9e\x3e\xdf\xb0\xa6\x3e\x44"
		.ascii  "\x1d\xaf\x3e\x01\x7c\xb7\x3e\x6f"
		.ascii  "\xcc\xbf\x3e\xe9\x0d\xc8\x3e\xc9"
		.ascii  "\x3f\xd0\x3e\x6c\x61\xd8\x3e\x2f"
		.ascii  "\x72\xe0\x3e\x71\x71\xe8\x3e\x94"
		.ascii  "\x5e\xf0\x3e\xf7\x38\xf8\x3e\x00"
		.ascii  "\x00\x00\x3f\x89\xd9\x03\x3f\xca"
		.ascii  "\xa8\x07\x3f\x77\x6d\x0b\x3f\x44"
		.ascii  "\x27\x0f\x3f\xe8\xd5\x12\x3f\x18"
		.ascii  "\x79\x16\x3f\x8d\x10\x1a\x3f\xfe"
		.ascii  "\x9b\x1d\x3f\x24\x1b\x21\x3f\xbb"
		.ascii  "\x8d\x24\x3f\x7c\xf3"
		.ascii   "'?%L+?r"
		.ascii  "\x97\x2e\x3f\x22\xd5\x31\x3f\xf3"
		.ascii  "\x04\x35\x3f\xa7\x26\x38\x3f\xff"
		.ascii  "\x39\x3b\x3f\xbd\x3e\x3e\x3f\xa6"
		.ascii   "4A?}"
		.ascii  "\x1b\x44\x3f\x0a\xf3\x46\x3f\x13"
		.ascii  "\xbb"
		.ascii   "I?`sL?"
		.ascii  "\xbd\x1b\x4f\x3f\xf3\xb3\x51\x3f"
		.ascii  "\xce\x3b\x54\x3f\x1d\xb3\x56\x3f"
		.ascii  "\xae\x19"
		.ascii   "Y?Qo[?"
		.ascii  "\xd7\xb3\x5d\x3f\x14\xe7\x5f\x3f"
		.ascii  "\xda\x08\x62\x3f\x01\x19\x64\x3f"
		.ascii  "\x5e\x17\x66\x3f\xca\x03\x68\x3f"
		.ascii  "\x1d\xde\x69\x3f\x35\xa6\x6b\x3f"
		.ascii  "\xec"
		.ascii   "[m? "
		.ascii  "\xff\x6e\x3f\xb2\x8f\x70\x3f\x81"
		.ascii   "\rr?qxs?c"
		.ascii  "\xd0\x74\x3f\x3f\x15\x76\x3f\xea"
		.ascii   "Fw?Mex?Qpy?"
		.ascii  "\xe0\x67\x7a\x3f\xeb"
		.ascii   "K{?B\"|?%"
		.ascii  "\xd9\x7c\x3f\x35\x82\x7d\x3f\x81"
		.ascii  "\x17\x7e\x3f\xfd\x98\x7e\x3f\x9e"
		.ascii  "\x06\x7f\x3f\x5c\x60\x7f\x3f\x2f"
		.ascii  "\xa6\x7f\x3f\x14\xd8\x7f\x3f\x05"
		.ascii  "\xf6\x7f\x3f\x00\x00\x80\x3f\x05"
		.ascii  "\xf6\x7f\x3f\x14\xd8\x7f\x3f\x2f"
		.ascii  "\xa6\x7f\x3f\x5c\x60\x7f\x3f\x9e"
		.ascii  "\x06\x7f\x3f\xfd\x98\x7e\x3f\x81"
		.ascii  "\x17\x7e\x3f\x35\x82\x7d\x3f\x25"
		.ascii  "\xd9"
		.ascii   "|?B\"|?"
		.ascii  "\xeb\x4b\x7b\x3f\xe0"
		.ascii   "gz?Qpy?Mex?"
		.ascii  "\xea"
		.ascii   "Fw??"
		.ascii  "\x15\x76\x3f\x63\xd0"
		.ascii   "t?qxs?"
		.ascii  "\x81\x0d\x72\x3f\xb2\x8f\x70\x3f"
		.ascii  "\x20\xff\x6e\x3f\xec"
		.ascii   "[m?5"
		.ascii  "\xa6\x6b\x3f\x1d\xde\x69\x3f\xca"
		.ascii  "\x03\x68\x3f\x5e\x17\x66\x3f\x01"
		.ascii  "\x19\x64\x3f\xda\x08\x62\x3f\x14"
		.ascii  "\xe7\x5f\x3f\xd7\xb3"
		.ascii   "]?Qo[?"
		.ascii  "\xae\x19\x59\x3f\x1d\xb3\x56\x3f"
		.ascii  "\xce\x3b\x54\x3f\xf3\xb3\x51\x3f"
		.ascii  "\xbd\x1b"
		.ascii   "O?`sL?"
		.ascii  "\x13\xbb\x49\x3f\x0a\xf3\x46\x3f"
		.ascii  "\x7d\x1b\x44\x3f\xa6\x34\x41\x3f"
		.ascii  "\xbd\x3e\x3e\x3f\xff\x39\x3b\x3f"
		.ascii  "\xa7\x26\x38\x3f\xf3\x04\x35\x3f"
		.ascii  "\x22\xd5\x31\x3f\x72\x97"
		.ascii   ".?%L+?|"
		.ascii  "\xf3\x27\x3f\xbb\x8d\x24\x3f\x24"
		.ascii  "\x1b\x21\x3f\xfe\x9b\x1d\x3f\x8d"
		.ascii  "\x10\x1a\x3f\x18\x79\x16\x3f\xe8"
		.ascii  "\xd5\x12\x3f\x44\x27\x0f\x3f\x77"
		.ascii  "\x6d\x0b\x3f\xca\xa8\x07\x3f\x89"
		.ascii  "\xd9\x03\x3f\x00\x00\x00\x3f\xf7"
		.ascii  "\x38\xf8\x3e\x94\x5e\xf0\x3e\x71"
		.ascii  "\x71\xe8\x3e\x2f\x72\xe0\x3e\x6c"
		.ascii  "\x61\xd8\x3e\xc9\x3f\xd0\x3e\xe9"
		.ascii  "\x0d\xc8\x3e\x6f\xcc\xbf\x3e\x01"
		.ascii  "\x7c\xb7\x3e\x44\x1d\xaf\x3e\xdf"
		.ascii  "\xb0\xa6\x3e\x7a\x37\x9e\x3e\xbe"
		.ascii  "\xb1\x95\x3e\x57\x20\x8d\x3e\xee"
		.ascii  "\x83\x84\x3e\x60\xba\x77\x3e\x92"
		.ascii  "\x59\x66\x3e\xcd\xe6"
		.ascii   "T>ocC>"
		.ascii  "\xd4\xd0"
		.ascii   "1>[0 >e"
		.ascii  "\x83\x0e\x3e\xa2\x96\xf9\x3d\x05"
		.ascii  "\x13\xd6\x3d\xb6\x7e\xb2\x3d\x7b"
		.ascii  "\xdc\x8e"
		.ascii   "=:^V="
		.ascii  "\xc6\xf2\x0e\x3d\x59\xf8\x8e\x3c"
		.fill   0x4
		.ascii  "\x59\xf8\x8e\xbc\xc6\xf2\x0e\xbd"
		.ascii  "\x3a\x5e\x56\xbd\x7b\xdc\x8e\xbd"
		.ascii  "\xb6\x7e\xb2\xbd\x05\x13\xd6\xbd"
		.ascii  "\xa2\x96\xf9\xbd\x65\x83\x0e\xbe"
		.ascii  "\x5b\x30\x20\xbe\xd4\xd0\x31\xbe"
		.ascii  "\x6f\x63\x43\xbe\xcd\xe6\x54\xbe"
		.ascii  "\x92\x59\x66\xbe\x60\xba\x77\xbe"
		.ascii  "\xee\x83\x84\xbe\x57\x20\x8d\xbe"
		.ascii  "\xbe\xb1\x95\xbe\x7a\x37\x9e\xbe"
		.ascii  "\xdf\xb0\xa6\xbe\x44\x1d\xaf\xbe"
		.ascii  "\x01\x7c\xb7\xbe\x6f\xcc\xbf\xbe"
		.ascii  "\xe9\x0d\xc8\xbe\xc9\x3f\xd0\xbe"
		.ascii  "\x6c\x61\xd8\xbe\x2f\x72\xe0\xbe"
		.ascii  "\x71\x71\xe8\xbe\x94\x5e\xf0\xbe"
		.ascii  "\xf7\x38\xf8\xbe\x00\x00\x00\xbf"
		.ascii  "\x89\xd9\x03\xbf\xca\xa8\x07\xbf"
		.ascii  "\x77\x6d\x0b\xbf\x44\x27\x0f\xbf"
		.ascii  "\xe8\xd5\x12\xbf\x18\x79\x16\xbf"
		.ascii  "\x8d\x10\x1a\xbf\xfe\x9b\x1d\xbf"
		.ascii  "\x24\x1b\x21\xbf\xbb\x8d\x24\xbf"
		.ascii  "\x7c\xf3\x27\xbf\x25\x4c\x2b\xbf"
		.ascii  "\x72\x97\x2e\xbf\x22\xd5\x31\xbf"
		.ascii  "\xf3\x04\x35\xbf\xa7\x26\x38\xbf"
		.ascii  "\xff\x39\x3b\xbf\xbd\x3e\x3e\xbf"
		.ascii  "\xa6\x34\x41\xbf\x7d\x1b\x44\xbf"
		.ascii  "\x0a\xf3\x46\xbf\x13\xbb\x49\xbf"
		.ascii  "\x60\x73\x4c\xbf\xbd\x1b\x4f\xbf"
		.ascii  "\xf3\xb3\x51\xbf\xce\x3b\x54\xbf"
		.ascii  "\x1d\xb3\x56\xbf\xae\x19\x59\xbf"
		.ascii  "\x51\x6f\x5b\xbf\xd7\xb3\x5d\xbf"
		.ascii  "\x14\xe7\x5f\xbf\xda\x08\x62\xbf"
		.ascii  "\x01\x19\x64\xbf\x5e\x17\x66\xbf"
		.ascii  "\xca\x03\x68\xbf\x1d\xde\x69\xbf"
		.ascii  "\x35\xa6\x6b\xbf\xec\x5b\x6d\xbf"
		.ascii  "\x20\xff\x6e\xbf\xb2\x8f\x70\xbf"
		.ascii  "\x81\x0d\x72\xbf\x71\x78\x73\xbf"
		.ascii  "\x63\xd0\x74\xbf\x3f\x15\x76\xbf"
		.ascii  "\xea\x46\x77\xbf\x4d\x65\x78\xbf"
		.ascii  "\x51\x70\x79\xbf\xe0\x67\x7a\xbf"
		.ascii  "\xeb\x4b\x7b\xbf\x42\x22\x7c\xbf"
		.ascii  "\x25\xd9\x7c\xbf\x35\x82\x7d\xbf"
		.ascii  "\x81\x17\x7e\xbf\xfd\x98\x7e\xbf"
		.ascii  "\x9e\x06\x7f\xbf\x5c\x60\x7f\xbf"
		.ascii  "\x2f\xa6\x7f\xbf\x14\xd8\x7f\xbf"
		.ascii  "\x05\xf6\x7f\xbf\x00\x00\x80\xbf"
		.ascii  "\x05\xf6\x7f\xbf\x14\xd8\x7f\xbf"
		.ascii  "\x2f\xa6\x7f\xbf\x5c\x60\x7f\xbf"
		.ascii  "\x9e\x06\x7f\xbf\xfd\x98\x7e\xbf"
		.ascii  "\x81\x17\x7e\xbf\x35\x82\x7d\xbf"
		.ascii  "\x25\xd9\x7c\xbf\x42\x22\x7c\xbf"
		.ascii  "\xeb\x4b\x7b\xbf\xe0\x67\x7a\xbf"
		.ascii  "\x51\x70\x79\xbf\x4d\x65\x78\xbf"
		.ascii  "\xea\x46\x77\xbf\x3f\x15\x76\xbf"
		.ascii  "\x63\xd0\x74\xbf\x71\x78\x73\xbf"
		.ascii  "\x81\x0d\x72\xbf\xb2\x8f\x70\xbf"
		.ascii  "\x20\xff\x6e\xbf\xec\x5b\x6d\xbf"
		.ascii  "\x35\xa6\x6b\xbf\x1d\xde\x69\xbf"
		.ascii  "\xca\x03\x68\xbf\x5e\x17\x66\xbf"
		.ascii  "\x01\x19\x64\xbf\xda\x08\x62\xbf"
		.ascii  "\x14\xe7\x5f\xbf\xd7\xb3\x5d\xbf"
		.ascii  "\x51\x6f\x5b\xbf\xae\x19\x59\xbf"
		.ascii  "\x1d\xb3\x56\xbf\xce\x3b\x54\xbf"
		.ascii  "\xf3\xb3\x51\xbf\xbd\x1b\x4f\xbf"
		.ascii  "\x60\x73\x4c\xbf\x13\xbb\x49\xbf"
		.ascii  "\x0a\xf3\x46\xbf\x7d\x1b\x44\xbf"
		.ascii  "\xa6\x34\x41\xbf\xbd\x3e\x3e\xbf"
		.ascii  "\xff\x39\x3b\xbf\xa7\x26\x38\xbf"
		.ascii  "\xf3\x04\x35\xbf\x22\xd5\x31\xbf"
		.ascii  "\x72\x97\x2e\xbf\x25\x4c\x2b\xbf"
		.ascii  "\x7c\xf3\x27\xbf\xbb\x8d\x24\xbf"
		.ascii  "\x24\x1b\x21\xbf\xfe\x9b\x1d\xbf"
		.ascii  "\x8d\x10\x1a\xbf\x18\x79\x16\xbf"
		.ascii  "\xe8\xd5\x12\xbf\x44\x27\x0f\xbf"
		.ascii  "\x77\x6d\x0b\xbf\xca\xa8\x07\xbf"
		.ascii  "\x89\xd9\x03\xbf\x00\x00\x00\xbf"
		.ascii  "\xf7\x38\xf8\xbe\x94\x5e\xf0\xbe"
		.ascii  "\x71\x71\xe8\xbe\x2f\x72\xe0\xbe"
		.ascii  "\x6c\x61\xd8\xbe\xc9\x3f\xd0\xbe"
		.ascii  "\xe9\x0d\xc8\xbe\x6f\xcc\xbf\xbe"
		.ascii  "\x01\x7c\xb7\xbe\x44\x1d\xaf\xbe"
		.ascii  "\xdf\xb0\xa6\xbe\x7a\x37\x9e\xbe"
		.ascii  "\xbe\xb1\x95\xbe\x57\x20\x8d\xbe"
		.ascii  "\xee\x83\x84\xbe\x60\xba\x77\xbe"
		.ascii  "\x92\x59\x66\xbe\xcd\xe6\x54\xbe"
		.ascii  "\x6f\x63\x43\xbe\xd4\xd0\x31\xbe"
		.ascii  "\x5b\x30\x20\xbe\x65\x83\x0e\xbe"
		.ascii  "\xa2\x96\xf9\xbd\x05\x13\xd6\xbd"
		.ascii  "\xb6\x7e\xb2\xbd\x7b\xdc\x8e\xbd"
		.ascii  "\x3a\x5e\x56\xbd\xc6\xf2\x0e\xbd"
		.ascii  "\x59\xf8\x8e\xbc"
data_74a68:
		.ascii  "\x00\x00\x80\x3f\x05\xf6\x7f\x3f"
		.ascii  "\x14\xd8\x7f\x3f\x2f\xa6\x7f\x3f"
		.ascii  "\x5c\x60\x7f\x3f\x9e\x06\x7f\x3f"
		.ascii  "\xfd\x98\x7e\x3f\x81\x17\x7e\x3f"
		.ascii  "\x35\x82\x7d\x3f\x25\xd9"
		.ascii   "|?B\"|?"
		.ascii  "\xeb\x4b\x7b\x3f\xe0"
		.ascii   "gz?Qpy?Mex?"
		.ascii  "\xea"
		.ascii   "Fw??"
		.ascii  "\x15\x76\x3f\x63\xd0"
		.ascii   "t?qxs?"
		.ascii  "\x81\x0d\x72\x3f\xb2\x8f\x70\x3f"
		.ascii  "\x20\xff\x6e\x3f\xec"
		.ascii   "[m?5"
		.ascii  "\xa6\x6b\x3f\x1d\xde\x69\x3f\xca"
		.ascii  "\x03\x68\x3f\x5e\x17\x66\x3f\x01"
		.ascii  "\x19\x64\x3f\xda\x08\x62\x3f\x14"
		.ascii  "\xe7\x5f\x3f\xd7\xb3"
		.ascii   "]?Qo[?"
		.ascii  "\xae\x19\x59\x3f\x1d\xb3\x56\x3f"
		.ascii  "\xce\x3b\x54\x3f\xf3\xb3\x51\x3f"
		.ascii  "\xbd\x1b"
		.ascii   "O?`sL?"
		.ascii  "\x13\xbb\x49\x3f\x0a\xf3\x46\x3f"
		.ascii  "\x7d\x1b\x44\x3f\xa6\x34\x41\x3f"
		.ascii  "\xbd\x3e\x3e\x3f\xff\x39\x3b\x3f"
		.ascii  "\xa7\x26\x38\x3f\xf3\x04\x35\x3f"
		.ascii  "\x22\xd5\x31\x3f\x72\x97"
		.ascii   ".?%L+?|"
		.ascii  "\xf3\x27\x3f\xbb\x8d\x24\x3f\x24"
		.ascii  "\x1b\x21\x3f\xfe\x9b\x1d\x3f\x8d"
		.ascii  "\x10\x1a\x3f\x18\x79\x16\x3f\xe8"
		.ascii  "\xd5\x12\x3f\x44\x27\x0f\x3f\x77"
		.ascii  "\x6d\x0b\x3f\xca\xa8\x07\x3f\x89"
		.ascii  "\xd9\x03\x3f\x00\x00\x00\x3f\xf7"
		.ascii  "\x38\xf8\x3e\x94\x5e\xf0\x3e\x71"
		.ascii  "\x71\xe8\x3e\x2f\x72\xe0\x3e\x6c"
		.ascii  "\x61\xd8\x3e\xc9\x3f\xd0\x3e\xe9"
		.ascii  "\x0d\xc8\x3e\x6f\xcc\xbf\x3e\x01"
		.ascii  "\x7c\xb7\x3e\x44\x1d\xaf\x3e\xdf"
		.ascii  "\xb0\xa6\x3e\x7a\x37\x9e\x3e\xbe"
		.ascii  "\xb1\x95\x3e\x57\x20\x8d\x3e\xee"
		.ascii  "\x83\x84\x3e\x60\xba\x77\x3e\x92"
		.ascii  "\x59\x66\x3e\xcd\xe6"
		.ascii   "T>ocC>"
		.ascii  "\xd4\xd0"
		.ascii   "1>[0 >e"
		.ascii  "\x83\x0e\x3e\xa2\x96\xf9\x3d\x05"
		.ascii  "\x13\xd6\x3d\xb6\x7e\xb2\x3d\x7b"
		.ascii  "\xdc\x8e"
		.ascii   "=:^V="
		.ascii  "\xc6\xf2\x0e\x3d\x59\xf8\x8e\x3c"
		.fill   0x4
		.ascii  "\x59\xf8\x8e\xbc\xc6\xf2\x0e\xbd"
		.ascii  "\x3a\x5e\x56\xbd\x7b\xdc\x8e\xbd"
		.ascii  "\xb6\x7e\xb2\xbd\x05\x13\xd6\xbd"
		.ascii  "\xa2\x96\xf9\xbd\x65\x83\x0e\xbe"
		.ascii  "\x5b\x30\x20\xbe\xd4\xd0\x31\xbe"
		.ascii  "\x6f\x63\x43\xbe\xcd\xe6\x54\xbe"
		.ascii  "\x92\x59\x66\xbe\x60\xba\x77\xbe"
		.ascii  "\xee\x83\x84\xbe\x57\x20\x8d\xbe"
		.ascii  "\xbe\xb1\x95\xbe\x7a\x37\x9e\xbe"
		.ascii  "\xdf\xb0\xa6\xbe\x44\x1d\xaf\xbe"
		.ascii  "\x01\x7c\xb7\xbe\x6f\xcc\xbf\xbe"
		.ascii  "\xe9\x0d\xc8\xbe\xc9\x3f\xd0\xbe"
		.ascii  "\x6c\x61\xd8\xbe\x2f\x72\xe0\xbe"
		.ascii  "\x71\x71\xe8\xbe\x94\x5e\xf0\xbe"
		.ascii  "\xf7\x38\xf8\xbe\x00\x00\x00\xbf"
		.ascii  "\x89\xd9\x03\xbf\xca\xa8\x07\xbf"
		.ascii  "\x77\x6d\x0b\xbf\x44\x27\x0f\xbf"
		.ascii  "\xe8\xd5\x12\xbf\x18\x79\x16\xbf"
		.ascii  "\x8d\x10\x1a\xbf\xfe\x9b\x1d\xbf"
		.ascii  "\x24\x1b\x21\xbf\xbb\x8d\x24\xbf"
		.ascii  "\x7c\xf3\x27\xbf\x25\x4c\x2b\xbf"
		.ascii  "\x72\x97\x2e\xbf\x22\xd5\x31\xbf"
		.ascii  "\xf3\x04\x35\xbf\xa7\x26\x38\xbf"
		.ascii  "\xff\x39\x3b\xbf\xbd\x3e\x3e\xbf"
		.ascii  "\xa6\x34\x41\xbf\x7d\x1b\x44\xbf"
		.ascii  "\x0a\xf3\x46\xbf\x13\xbb\x49\xbf"
		.ascii  "\x60\x73\x4c\xbf\xbd\x1b\x4f\xbf"
		.ascii  "\xf3\xb3\x51\xbf\xce\x3b\x54\xbf"
		.ascii  "\x1d\xb3\x56\xbf\xae\x19\x59\xbf"
		.ascii  "\x51\x6f\x5b\xbf\xd7\xb3\x5d\xbf"
		.ascii  "\x14\xe7\x5f\xbf\xda\x08\x62\xbf"
		.ascii  "\x01\x19\x64\xbf\x5e\x17\x66\xbf"
		.ascii  "\xca\x03\x68\xbf\x1d\xde\x69\xbf"
		.ascii  "\x35\xa6\x6b\xbf\xec\x5b\x6d\xbf"
		.ascii  "\x20\xff\x6e\xbf\xb2\x8f\x70\xbf"
		.ascii  "\x81\x0d\x72\xbf\x71\x78\x73\xbf"
		.ascii  "\x63\xd0\x74\xbf\x3f\x15\x76\xbf"
		.ascii  "\xea\x46\x77\xbf\x4d\x65\x78\xbf"
		.ascii  "\x51\x70\x79\xbf\xe0\x67\x7a\xbf"
		.ascii  "\xeb\x4b\x7b\xbf\x42\x22\x7c\xbf"
		.ascii  "\x25\xd9\x7c\xbf\x35\x82\x7d\xbf"
		.ascii  "\x81\x17\x7e\xbf\xfd\x98\x7e\xbf"
		.ascii  "\x9e\x06\x7f\xbf\x5c\x60\x7f\xbf"
		.ascii  "\x2f\xa6\x7f\xbf\x14\xd8\x7f\xbf"
		.ascii  "\x05\xf6\x7f\xbf\x00\x00\x80\xbf"
		.ascii  "\x05\xf6\x7f\xbf\x14\xd8\x7f\xbf"
		.ascii  "\x2f\xa6\x7f\xbf\x5c\x60\x7f\xbf"
		.ascii  "\x9e\x06\x7f\xbf\xfd\x98\x7e\xbf"
		.ascii  "\x81\x17\x7e\xbf\x35\x82\x7d\xbf"
		.ascii  "\x25\xd9\x7c\xbf\x42\x22\x7c\xbf"
		.ascii  "\xeb\x4b\x7b\xbf\xe0\x67\x7a\xbf"
		.ascii  "\x51\x70\x79\xbf\x4d\x65\x78\xbf"
		.ascii  "\xea\x46\x77\xbf\x3f\x15\x76\xbf"
		.ascii  "\x63\xd0\x74\xbf\x71\x78\x73\xbf"
		.ascii  "\x81\x0d\x72\xbf\xb2\x8f\x70\xbf"
		.ascii  "\x20\xff\x6e\xbf\xec\x5b\x6d\xbf"
		.ascii  "\x35\xa6\x6b\xbf\x1d\xde\x69\xbf"
		.ascii  "\xca\x03\x68\xbf\x5e\x17\x66\xbf"
		.ascii  "\x01\x19\x64\xbf\xda\x08\x62\xbf"
		.ascii  "\x14\xe7\x5f\xbf\xd7\xb3\x5d\xbf"
		.ascii  "\x51\x6f\x5b\xbf\xae\x19\x59\xbf"
		.ascii  "\x1d\xb3\x56\xbf\xce\x3b\x54\xbf"
		.ascii  "\xf3\xb3\x51\xbf\xbd\x1b\x4f\xbf"
		.ascii  "\x60\x73\x4c\xbf\x13\xbb\x49\xbf"
		.ascii  "\x0a\xf3\x46\xbf\x7d\x1b\x44\xbf"
		.ascii  "\xa6\x34\x41\xbf\xbd\x3e\x3e\xbf"
		.ascii  "\xff\x39\x3b\xbf\xa7\x26\x38\xbf"
		.ascii  "\xf3\x04\x35\xbf\x22\xd5\x31\xbf"
		.ascii  "\x72\x97\x2e\xbf\x25\x4c\x2b\xbf"
		.ascii  "\x7c\xf3\x27\xbf\xbb\x8d\x24\xbf"
		.ascii  "\x24\x1b\x21\xbf\xfe\x9b\x1d\xbf"
		.ascii  "\x8d\x10\x1a\xbf\x18\x79\x16\xbf"
		.ascii  "\xe8\xd5\x12\xbf\x44\x27\x0f\xbf"
		.ascii  "\x77\x6d\x0b\xbf\xca\xa8\x07\xbf"
		.ascii  "\x89\xd9\x03\xbf\x00\x00\x00\xbf"
		.ascii  "\xf7\x38\xf8\xbe\x94\x5e\xf0\xbe"
		.ascii  "\x71\x71\xe8\xbe\x2f\x72\xe0\xbe"
		.ascii  "\x6c\x61\xd8\xbe\xc9\x3f\xd0\xbe"
		.ascii  "\xe9\x0d\xc8\xbe\x6f\xcc\xbf\xbe"
		.ascii  "\x01\x7c\xb7\xbe\x44\x1d\xaf\xbe"
		.ascii  "\xdf\xb0\xa6\xbe\x7a\x37\x9e\xbe"
		.ascii  "\xbe\xb1\x95\xbe\x57\x20\x8d\xbe"
		.ascii  "\xee\x83\x84\xbe\x60\xba\x77\xbe"
		.ascii  "\x92\x59\x66\xbe\xcd\xe6\x54\xbe"
		.ascii  "\x6f\x63\x43\xbe\xd4\xd0\x31\xbe"
		.ascii  "\x5b\x30\x20\xbe\x65\x83\x0e\xbe"
		.ascii  "\xa2\x96\xf9\xbd\x05\x13\xd6\xbd"
		.ascii  "\xb6\x7e\xb2\xbd\x7b\xdc\x8e\xbd"
		.ascii  "\x3a\x5e\x56\xbd\xc6\xf2\x0e\xbd"
		.ascii  "\x59\xf8\x8e\xbc"
		.fill   0x4
		.ascii  "\x59\xf8\x8e\x3c\xc6\xf2\x0e"
		.ascii   "=:^V={"
		.ascii  "\xdc\x8e\x3d\xb6\x7e\xb2\x3d\x05"
		.ascii  "\x13\xd6\x3d\xa2\x96\xf9\x3d\x65"
		.ascii  "\x83\x0e"
		.ascii   ">[0 >"
		.ascii  "\xd4\xd0"
		.ascii   "1>ocC>"
		.ascii  "\xcd\xe6\x54\x3e\x92"
		.ascii   "Yf>`"
		.ascii  "\xba\x77\x3e\xee\x83\x84\x3e\x57"
		.ascii  "\x20\x8d\x3e\xbe\xb1\x95\x3e\x7a"
		.ascii  "\x37\x9e\x3e\xdf\xb0\xa6\x3e\x44"
		.ascii  "\x1d\xaf\x3e\x01\x7c\xb7\x3e\x6f"
		.ascii  "\xcc\xbf\x3e\xe9\x0d\xc8\x3e\xc9"
		.ascii  "\x3f\xd0\x3e\x6c\x61\xd8\x3e\x2f"
		.ascii  "\x72\xe0\x3e\x71\x71\xe8\x3e\x94"
		.ascii  "\x5e\xf0\x3e\xf7\x38\xf8\x3e\x00"
		.ascii  "\x00\x00\x3f\x89\xd9\x03\x3f\xca"
		.ascii  "\xa8\x07\x3f\x77\x6d\x0b\x3f\x44"
		.ascii  "\x27\x0f\x3f\xe8\xd5\x12\x3f\x18"
		.ascii  "\x79\x16\x3f\x8d\x10\x1a\x3f\xfe"
		.ascii  "\x9b\x1d\x3f\x24\x1b\x21\x3f\xbb"
		.ascii  "\x8d\x24\x3f\x7c\xf3"
		.ascii   "'?%L+?r"
		.ascii  "\x97\x2e\x3f\x22\xd5\x31\x3f\xf3"
		.ascii  "\x04\x35\x3f\xa7\x26\x38\x3f\xff"
		.ascii  "\x39\x3b\x3f\xbd\x3e\x3e\x3f\xa6"
		.ascii   "4A?}"
		.ascii  "\x1b\x44\x3f\x0a\xf3\x46\x3f\x13"
		.ascii  "\xbb"
		.ascii   "I?`sL?"
		.ascii  "\xbd\x1b\x4f\x3f\xf3\xb3\x51\x3f"
		.ascii  "\xce\x3b\x54\x3f\x1d\xb3\x56\x3f"
		.ascii  "\xae\x19"
		.ascii   "Y?Qo[?"
		.ascii  "\xd7\xb3\x5d\x3f\x14\xe7\x5f\x3f"
		.ascii  "\xda\x08\x62\x3f\x01\x19\x64\x3f"
		.ascii  "\x5e\x17\x66\x3f\xca\x03\x68\x3f"
data_74fa8:
		.ascii  "\x1d\xde\x69\x3f\x35\xa6\x6b\x3f"
		.ascii  "\xec"
		.ascii   "[m? "
		.ascii  "\xff\x6e\x3f\xb2\x8f\x70\x3f\x81"
		.ascii   "\rr?qxs?c"
		.ascii  "\xd0\x74\x3f\x3f\x15\x76\x3f\xea"
		.ascii   "Fw?Mex?Qpy?"
		.ascii  "\xe0\x67\x7a\x3f\xeb"
		.ascii   "K{?B\"|?%"
		.ascii  "\xd9\x7c\x3f\x35\x82\x7d\x3f\x81"
		.ascii  "\x17\x7e\x3f\xfd\x98\x7e\x3f\x9e"
		.ascii  "\x06\x7f\x3f\x5c\x60\x7f\x3f\x2f"
		.ascii  "\xa6\x7f\x3f\x14\xd8\x7f\x3f\x05"
		.ascii  "\xf6\x7f\x3f"
data_75008:
		.ascii  "\x01\x00"
data_7500a:
		.ascii  "\xfa\x00"
data_7500c:
		.ascii  "\x26\x00"
data_7500e:
		.ascii  "\x01\x00"
data_75010:
		.fill   0x4
data_75014:
		.ascii  "\x00\x00"
data_75016:
		.ascii  "\x00\x00\x0e"
		.fill   0x5
		.ascii  "\x0e\x00\x0e"
data_75021:
		.ascii  "\x00\x0e\x00"
data_75024:
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x13"
		.fill   0x9
		.ascii  "\x14"
		.fill   0x13
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x15"
		.fill   0x5
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x06"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x09\x00\x10\x00\x11\x00\x00\x00"
		.ascii  "\x0a\x00\x00\x00\x0b\x00\x00\x00"
		.ascii  "\x0c"
		.fill   0x7
		.ascii  "\x0d\x00\x00\x00\x0e\x00\x00\x00"
		.ascii  "\x0f"
		.fill   0xd
		.ascii  "\x12"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x15
		.ascii  "\x26"
		.fill   0x5
		.ascii  "\x16\x00\x25\x00\x17\x00\x00\x00"
		.ascii  "\x18"
		.fill   0x7
		.ascii  "\x19\x00\x29\x00\x1a\x00\x00\x00"
		.ascii  "\x1b"
		.fill   0x7
		.ascii  "\x1c\x00\x00\x00\x1d\x00\x00\x00"
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x1f\x00\x00\x00\x20\x00\x00\x00"
		.ascii  "\x21\x00\x2a"
		.fill   0x5
		.ascii  "\x22\x00\x00\x00\x23\x00\x00\x00"
		.ascii  "\x24\x00\x00\x00\x27"
		.fill   0x19
		.ascii  "\x3e"
		.fill   0x13
		.ascii  "\x3d"
		.fill   0x5
		.ascii  "\x2b\x00\x00\x00\x2c\x00\x00\x00"
		.ascii  "\x2d"
		.fill   0x7
		.ascii  "\x2e\x00\x00\x00\x2f\x00\x00\x00"
		.ascii  "\x30\x00\x3f"
		.fill   0x5
		.ascii  "\x31\x00\x3b\x00\x32\x00\x00\x00"
		.ascii  "\x33"
		.fill   0x5
		.ascii  "\x3c\x00\x34\x00\x00\x00\x35\x00"
		.ascii  "\x00\x00\x36"
		.fill   0x7
		.ascii  "\x37\x00\x00\x00\x38\x00\x00\x00"
		.ascii  "\x39"
		.fill   0x7
		.ascii  "\x3a"
		.fill   0xd
		.ascii  "\x53"
		.fill   0xd
		.ascii  "\x4f"
		.fill   0x13
		.ascii  "\x40\x00\x54\x00\x41\x00\x00\x00"
		.ascii  "\x42"
		.fill   0x7
		.ascii  "\x43\x00\x00\x00\x44\x00\x00\x00"
		.ascii  "\x45"
		.fill   0x7
		.ascii  "\x46\x00\x51\x00\x47\x00\x00\x00"
		.ascii  "\x48"
		.fill   0x7
		.ascii  "\x49\x00\x00\x00\x4a\x00\x00\x00"
		.ascii  "\x4b\x00\x52"
		.fill   0x5
		.ascii  "\x4c\x00\x00\x00\x4d\x00\x00\x00"
		.ascii  "\x4e"
		.fill   0x7
		.ascii  "\x50"
		.fill   0x11
		.ascii  "\x64"
		.fill   0x11
		.ascii  "\x65"
		.fill   0xb
		.ascii  "\x55\x00\x69\x00\x56\x00\x00\x00"
		.ascii  "\x57"
		.fill   0x7
		.ascii  "\x58\x00\x00\x00\x59\x00\x68\x00"
		.ascii  "\x5a\x00\x00\x00\x67\x00\x00\x00"
		.ascii  "\x5b\x00\x00\x00\x5c\x00\x00\x00"
		.ascii  "\x5d"
		.fill   0x7
		.ascii  "\x5e\x00\x00\x00\x5f\x00\x00\x00"
		.ascii  "\x60"
		.fill   0x7
		.ascii  "\x61\x00\x00\x00\x62\x00\x00\x00"
		.ascii  "\x63"
		.fill   0xd
		.ascii  "\x66"
		.fill   0x11
		.ascii  "\x7b"
		.fill   0xb
		.ascii  "\x79"
		.fill   0xb
		.ascii  "\x6a\x00\x00\x00\x6b\x00\x00\x00"
		.ascii  "\x6c\x00\x7e"
		.fill   0x5
		.ascii  "\x6d\x00\x7d\x00\x6e\x00\x00\x00"
		.ascii  "\x6f"
		.fill   0x7
		.ascii  "\x70\x00\x7a\x00\x71\x00\x00\x00"
		.ascii  "\x72"
		.fill   0x7
		.ascii  "\x73\x00\x00\x00\x74\x00\x00\x00"
		.ascii  "\x75\x00\x00\x00\x7c\x00\x00\x00"
		.ascii  "\x76\x00\x00\x00\x77\x00\x00\x00"
		.ascii  "\x78"
		.fill   0x13
		.ascii  "\x8e"
		.fill   0x17
		.ascii  "\x8f"
		.fill   0xb
		.ascii  "\x7f\x00\x00\x00\x80\x00\x00\x00"
		.ascii  "\x81"
		.fill   0x7
		.ascii  "\x82\x00\x00\x00\x83\x00\x91\x00"
		.ascii  "\x84"
		.fill   0x7
		.ascii  "\x85\x00\x00\x00\x86\x00\x00\x00"
		.ascii  "\x87\x00\x00\x00\x93\x00\x00\x00"
		.ascii  "\x88\x00\x00\x00\x89\x00\x00\x00"
		.ascii  "\x8a"
		.fill   0x7
		.ascii  "\x8b\x00\x00\x00\x8c\x00\x92\x00"
		.ascii  "\x8d\x00\x00\x00\x90"
		.fill   0xf
data_753a8:
		.ascii  "\x28\x00\x32\x00\x3c\x00\x50\x00"
		.ascii  "\x64\x00\x78\x00"
data_753b4:
		.ascii  "\x8c\x00"
data_753b6:
		.ascii  "\x0a\x00\x0f\x00\x14\x00\x1e\x00"
		.ascii  "\x28\x00\x3c\x00"
data_753c2:
		.ascii  "\x50\x00"
data_753c4:
		.ascii  "\x50\x00\x3c\x00\x32\x00\x64\x00"
		.ascii  "\x32\x00\x78\x00\xb4\x00"
data_753d2:
		.ascii  "\x32\x00\x50\x00\x64\x00\x8c\x00"
data_753da:
		.ascii  "\x3c\x00\x32\x00\x46\x00\x64\x00"
data_753e2:
		.ascii  "\x3c\x00\x3c\x00\x78\x00\x64\x00"
data_753ea:
		.ascii  "\x3c\x00\x32\x00\x50\x00\x00\x00"
		.ascii  "\x64\x00"
data_753f4:
		.ascii  "\x82\x00\xe8\x03\xe8\x03\xe8\x03"
		.ascii  "\xe8\x03\xb8\x0b\xa0\x0f\x88\x13"
		.ascii  "\xe8\x03\xe8\x03\xd0\x07\xa0\x0f"
		.ascii  "\xe8\x03\xe8\x03\xb8\x0b\xa0\x0f"
		.ascii  "\xe8\x03\xe8\x03\xb8\x0b\xa0\x0f"
		.ascii  "\xe8\x03\xe8\x03\xb8\x0b\xa0\x0f"
		.ascii  "\xb8\x0b"
data_75426:
		.ascii  "\x88\x13\xa0\x00\xc8\x00\xa0\x00"
		.ascii  "\xb4\x00\xc8\x00\x96\x00\x96\x00"
		.ascii  "\x78\x00\xb4\x00\xa0\x00\xa0\x00"
		.ascii  "\xc8\x00"
data_75440:
		.ascii  "\xb4\x00\x00\x00\x10\x27\x10\x27"
		.ascii  "\x58\x1b\x58\x1b\xa0\x0f\x88\x13"
		.ascii  "\x10\x27\x00\x00\x70\x17\x10\x27"
		.ascii  "\x70\x17\x40\x1f"
data_7545c:
		.long   data_77dc8
		.long   data_77dd2
		.long   data_77ddd
		.long   data_77de8
		.long   data_77df2
		.long   data_77dfe
		.long   data_77e0d
		.long   data_77e1e
		.long   data_77e2c
data_75480:
		.long   data_77e34
		.long   data_77f28
		.long   data_77f35
		.long   data_77f40
		.long   data_77f4d
		.ascii  "\x56\x7f"
data_75496:
		.ascii  "\x07\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xff\xff\x03\x00\x02\x00\x04\x00"
		.ascii  "\x05\x00\x02\x00\xff\xff\x06\x00"
data_754ae:
		.ascii  "\x07\x00\x01\x00\x02\x00\x05\x00"
		.ascii  "\x00\x00\x31\x00\x20\x00\x33\x00"
		.ascii  "\x35\x00\x20\x00\x00\x00\x3a\x00"
		.ascii  "\x3c\x00"
data_754c8:
		.ascii  "\x64\x00\x00\x00\x96\x00\x00\x00"
		.ascii  "\xf4\x01"
		.fill   0x6
		.ascii  "\x64\x00\x00\x00\xf4\x01\x00\x00"
		.ascii  "\x64\x00\x00\x00\xc8\x00\x00\x00"
		.ascii  "\xf4\x01"
		.fill   0x6
		.ascii  "\xc8\x00\x00\x00\xf4\x01"
		.fill   0x14
data_7550a:
		.ascii  "\x00\x00"
data_7550c:
		.ascii  "\x00\x00"
data_7550e:
		.fill   0x16
		.string "C o p y r i g h t   b y   S O F T M A X   C o . , L t d . "
		.fill   0x15
data_75574:
		.fill   0x4
data_75578:
		.fill   0x4
		.string "C o p y r i g h t   b y   S O F T M A X Co. 1 9 9 6 "
		.fill   0x7
data_755b8:
		.ascii  "\x27\x00\x00\x00"
data_755bc:
		.ascii  "\x00"
data_755bd:
		.ascii  "\x6c\x04\x00\x00"
data_755c1:
		.ascii  "\x01"
data_755c2:
		.ascii  "\x00\x00"
data_755c4:
		.ascii  "\x10\x00"
data_755c6:
		.ascii  "\x10\x00"
data_755c8:
		.ascii  "\x01\x00\x00\x00"
data_755cc:
		.fill   0x4
data_755d0:
		.ascii  "\x00\x00\x0a\x00"
data_755d4:
		.ascii  "\x0f\x00"
data_755d6:
		.fill   0x4
data_755da:
		.ascii  "\xe0\x01\x00\x00"
data_755de:
		.fill   0x4
data_755e2:
		.fill   0x6
data_755e8:
		.ascii  "\x64\x00\x00\x00"
data_755ec:
		.fill   0x4
data_755f0:
		.ascii  "\x20\x00"
data_755f2:
		.ascii  "\x00\x00"
data_755f4:
		.fill   0x4
data_755f8:
		.fill   0x4
data_755fc:
		.fill   0x4
data_75600:
		.long   func___null_int23_exit_
data_75604:
		.long   func___null_int23_exit_
data_75608:
		.long   func___null_int23_exit_
data_7560c:
		.ascii  "\x00"
data_7560d:
		.ascii  "\x00\x00\x00"
data_75610:
		.ascii  "\x01\x00\x00\x00"
data_75614:
		.fill   0x4
data_75618:
		.fill   0x4
data_7561c:
		.ascii  "\x00\x00"
data_7561e:
		.string "Stack Overflow!\r\n"
data_75630:
		.fill   0x4
data_75634:
		.fill   0x4
data_75638:
		.fill   0x4
data_7563c:
		.fill   0x4
data_75640:
		.fill   0x4
data_75644:
		.fill   0x4
data_75648:
		.fill   0x4
data_7564c:
		.fill   0x4
data_75650:
		.fill   0x4
data_75654:
		.fill   0xc
data_75660:
		.ascii  "\x00\x00"
data_75662:
		.ascii  "\x00"
data_75663:
		.ascii  "\x00"
data_75664:
		.ascii  "\x00"
data_75665:
		.fill   0x4
data_75669:
		.ascii  "\x00\x00"
data_7566b:
		.ascii  "\x00"
data_7566c:
		.ascii  "\x00"
data_7566d:
		.long   func_nullsub_2
		.ascii  "\x00\x00\x00"
data_75674:
		.ascii  "\x14\x00\x00\x00"
data_75678:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f
data_756c8:
		.ascii  "\x78"
data_756c9:
		.ascii  "\x56\x07\x00\x00\x09\x01\x01\x0b"
		.ascii  "\x06\x04\x05\x05\x05\x02\x03\xff"
		.ascii  "\xff\x07\x08\x06\x08\x01\xff"
data_756e0:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd
data_756fa:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"
data_75721:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9
data_75762:
		.fill   0x186
data_758e8:
		.ascii  "\x61"
data_758e9:
		.ascii  "\x00\x01\x00\x00"
		.long   data_128584
		.ascii  "\x00\x00\x00"
data_758f4:
		.fill   0x40
data_75934:
		.fill   0x4
data_75938:
		.ascii  "\x00\x00"
data_7593a:
		.ascii  "\x00\x00"
data_7593c:
		.fill   0x4
data_75940:
		.fill   0x4
data_75944:
		.ascii  "\x01\x00\x00\x00"
data_75948:
		.ascii  "\x10\x00\x00\x00"
data_7594c:
		.long   func_652eb
data_75950:
		.long   func_652eb
data_75954:
		.fill   0x7c
data_759d0:
		.ascii  "\x00"
data_759d1:
		.ascii  "\x00\x00\x00"
data_759d4:
		.ascii  "\x7f\x12\x00\x00"
data_759d8:
		.long   func_nullsub_3
data_759dc:
		.long   func_nullsub_3
data_759e0:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13
data_75a04:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13
data_75a28:
		.ascii  "\x50\x46\x00\x00"
data_75a2c:
		.ascii  "\x10\x0e\x00\x00"
data_75a30:
		.ascii  "\x01\x00\x00\x00"
data_75a34:
		.ascii  "\x45\x53\x54"
		.fill   0x1c
data_75a53:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   data_75a34
		.long   data_75a53
		.ascii  "\x00\x00"
data_75a7c:
		.fill   0x4
data_75a80:
		.ascii  "\x11\x00\x00\x00"
data_75a84:
		.fill   0x4
data_75a88:
		.fill   0x4
data_75a8c:
		.string "MAP_EFFC.SYB"
data_75a99:
		.string "SCENARIO\\"
data_75aa3:
		.ascii  "\x66\x70\x6d\x00\x00"
data_75aa8:
		.string "KNIGHT1.NC2"
data_75ab4:
		.string "KNIGHT2.NC2"
data_75ac0:
		.string "KNIGHTW.NC2"
data_75acc:
		.string "PARADIN.NC2"
data_75ad8:
		.string "IMPEPARA.NC2"
data_75ae5:
		.string "PARADINW.NC2"
data_75af2:
		.string "FIGHTER.NC2"
data_75afe:
		.string "FIGHTER2.NC2"
data_75b0b:
		.string "FIGHTERW.NC2"
data_75b18:
		.string "ASSASIN.NC2"
data_75b24:
		.string "GRDIATER.NC2"
data_75b31:
		.string "GRADIAW.NC2"
data_75b3d:
		.string "THIEF.NC2"
data_75b47:
		.string "THIEFW.NC2"
data_75b52:
		.string "RANGER.NC2"
data_75b5d:
		.string "RANGW.NC2"
data_75b67:
		.string "SCOUT.NC2"
data_75b71:
		.string "SCOUTW.NC2"
data_75b7c:
		.string "ARCHAEO.NC2"
data_75b88:
		.string "ARCHEOW.NC2"
data_75b94:
		.string "SOLDIER1.NC2"
data_75ba1:
		.string "SOLDIER2.NC2"
data_75bae:
		.string "SOLDIERW.NC2"
data_75bbb:
		.string "LANCER1.NC2"
data_75bc7:
		.string "LANCER2.NC2"
data_75bd3:
		.string "LANCERW.NC2"
data_75bdf:
		.string "GENERA.NC2"
data_75bea:
		.string "GENERAL2.NC2"
data_75bf7:
		.string "GENERAW.NC2"
data_75c03:
		.string "GUARD.NC2"
data_75c0d:
		.string "GUARDW.NC2"
data_75c18:
		.string "ROYALG.NC2"
data_75c23:
		.string "ROYALGW.NC2"
data_75c2f:
		.string "EARTHQ.NC2"
data_75c3a:
		.string "EARTHQW.NC2"
data_75c46:
		.string "ARCHER1.NC2"
data_75c52:
		.string "ARCHER2.NC2"
data_75c5e:
		.string "ARCHERW.NC2"
data_75c6a:
		.string "HUNTER.NC2"
data_75c75:
		.string "HUNTER2.NC2"
data_75c81:
		.string "HUNTERW.NC2"
data_75c8d:
		.string "EAGLE.NC2"
data_75c97:
		.string "EAGLED.NC2"
data_75ca2:
		.string "EAGLEW.NC2"
data_75cad:
		.string "SNIPER.NC2"
data_75cb8:
		.string "SNIPERW.NC2"
data_75cc4:
		.string "MAGE1.NC2"
data_75cce:
		.string "MAGE2.NC2"
data_75cd8:
		.string "MAGICIA1.NC2"
data_75ce5:
		.string "MAGICIA2.NC2"
data_75cf2:
		.string "ALCHEMI1.NC2"
data_75cff:
		.string "ALCHEMI0.NC2"
data_75d0c:
		.string "M_FIRE1.NC2"
data_75d18:
		.string "M_FIRE2.NC2"
data_75d24:
		.string "M_THUN1.NC2"
data_75d30:
		.string "M_THUN2.NC2"
data_75d3c:
		.string "M_ICE1.NC2"
data_75d47:
		.string "M_ICE2.NC2"
data_75d52:
		.string "WIZARD1.NC2"
data_75d5e:
		.string "WIZARD2.NC2"
data_75d6a:
		.string "MONK.NC2"
data_75d73:
		.string "SISTER.NC2"
data_75d7e:
		.string "CLERIC.NC2"
data_75d89:
		.string "CLERICKW.NC2"
data_75d96:
		.string "PRIEST2.NC2"
data_75da2:
		.string "PRIEST1.NC2"
data_75dae:
		.string "DRUID.NC2"
data_75db8:
		.string "BISHOP.NC2"
data_75dc3:
		.string "WARLOCK1.NC2"
data_75dd0:
		.string "WARLOCK2.NC2"
data_75ddd:
		.string "WITCH1G.NC2"
data_75de9:
		.string "WITCH1F.NC2"
data_75df5:
		.string "WITCH2G.NC2"
data_75e01:
		.string "WITCH2F.NC2"
data_75e0d:
		.string "NECROMAN.NC2"
data_75e1a:
		.string "LICH.NC2"
data_75e23:
		.string "WARRIOR1.NC2"
data_75e30:
		.string "WARRIOR2.NC2"
data_75e3d:
		.string "BERSERKE.NC2"
data_75e4a:
		.string "GENOCID.NC2"
data_75e56:
		.string "SORCERER.NC2"
data_75e63:
		.string "SHARMAN.NC2"
data_75e6f:
		.string "EXORCIST.NC2"
data_75e7c:
		.string "VALTANSG.NC2"
data_75e89:
		.string "VALTANSF.NC2"
data_75e96:
		.string "VALTANAG.NC2"
data_75ea3:
		.string "VALTANAF.NC2"
data_75eb0:
		.string "VALTANLG.NC2"
data_75ebd:
		.string "VALTANLF.NC2"
data_75eca:
		.string "E_VAL_AG.NC2"
data_75ed7:
		.string "E_VAL_AF.NC2"
data_75ee4:
		.string "E_VAL_LG.NC2"
data_75ef1:
		.string "E_VAL_LF.NC2"
data_75efe:
		.string "MERMANS.NC2"
data_75f0a:
		.string "MERMANL.NC2"
data_75f16:
		.string "MERMANA.NC2"
data_75f22:
		.string "BRIGAND.NC2"
data_75f2e:
		.string "TAMER.NC2"
data_75f38:
		.string "PIRATE.NC2"
data_75f43:
		.string "TAMER1.NC2"
data_75f4e:
		.string "TAMER2.NC2"
data_75f59:
		.string "ORIENTAL.NC2"
data_75f66:
		.string "NORMADIC.NC2"
data_75f73:
		.string "KILLER0.NC2"
data_75f7f:
		.string "KILLER1.NC2"
data_75f8b:
		.string "KILLER2.NC2"
data_75f97:
		.string "CAPTAIN.NC2"
data_75fa3:
		.string "SAVANT1.NC2"
data_75faf:
		.string "SAVANT2.NC2"
data_75fbb:
		.string "GOBLIN.NC2"
data_75fc6:
		.string "GOBLINL.NC2"
data_75fd2:
		.string "ORC0.NC2"
data_75fdb:
		.string "ORC1.NC2"
data_75fe4:
		.string "ORC2.NC2"
data_75fed:
		.string "BAT0.NC2"
data_75ff6:
		.string "BAT1.NC2"
data_75fff:
		.string "BAT2.NC2"
data_76008:
		.string "BAT3.NC2"
data_76011:
		.string "BAT4.NC2"
data_7601a:
		.string "VAMPIRE.NC2"
data_76026:
		.string "VAMPIREW.NC2"
data_76033:
		.string "ZOMBI0.NC2"
data_7603e:
		.string "ZOMBI1.NC2"
data_76049:
		.string "ZOMBI2.NC2"
data_76054:
		.string "ZOMBI3.NC2"
data_7605f:
		.string "Z_GHOUL1.NC2"
data_7606c:
		.string "Z_GHOUL2.NC2"
data_76079:
		.string "Z_GHOUL3.NC2"
data_76086:
		.string "SLIME1.NC2"
data_76091:
		.string "SLIME2.NC2"
data_7609c:
		.string "SLIME3.NC2"
data_760a7:
		.string "SLIME4.NC2"
data_760b2:
		.string "SKELETON.NC2"
data_760bf:
		.string "DTOOTH01.NC2"
data_760cc:
		.string "DTOOTHW1.NC2"
data_760d9:
		.string "BP.NC2"
data_760e0:
		.string "S_GS.NC2"
data_760e9:
		.string "L_GS.NC2"
data_760f2:
		.string "B_GS.NC2"
data_760fb:
		.string "M_GS.NC2"
data_76104:
		.string "STYNER.NC2"
data_7610f:
		.string "NS_GS.NC2"
data_76119:
		.string "NL_GS.NC2"
data_76123:
		.string "NB_GS.NC2"
data_7612d:
		.string "NM_GS.NC2"
data_76137:
		.string "BERADIN.NC2"
data_76143:
		.string "S_LACIDE.NC2"
data_76150:
		.string "L_LACIDE.NC2"
data_7615d:
		.string "B_LACIDE.NC2"
data_7616a:
		.string "M_LACIDE.NC2"
data_76177:
		.string "HLACID.NC2"
data_76182:
		.string "NS_LACIDE.NC2"
data_76190:
		.string "NL_LACIDE.NC2"
data_7619e:
		.string "NB_LACIDE.NC2"
data_761ac:
		.string "NM_LACIDE.NC2"
data_761ba:
		.string "S_IYOLIN.NC2"
data_761c7:
		.string "L_IYOLIN.NC2"
data_761d4:
		.string "B_IYOLIN.NC2"
data_761e1:
		.string "M_IYOLIN.NC2"
data_761ee:
		.string "S_ROBIN.NC2"
data_761fa:
		.string "L_ROBIN.NC2"
data_76206:
		.string "B_ROBIN.NC2"
data_76212:
		.string "M_ROBIN.NC2"
data_7621e:
		.string "S_KAJA.NC2"
data_76229:
		.string "L_KAJA.NC2"
data_76234:
		.string "B_KAJA.NC2"
data_7623f:
		.string "M_KAJA.NC2"
data_7624a:
		.string "S_GISHNE.NC2"
data_76257:
		.string "L_GISHNE.NC2"
data_76264:
		.string "B_GISHNE.NC2"
data_76271:
		.string "M_GISHNE.NC2"
data_7627e:
		.string "S_SHURI.NC2"
data_7628a:
		.string "L_SHURI.NC2"
data_76296:
		.string "B_SHURI.NC2"
data_762a2:
		.string "M_SHURI.NC2"
data_762ae:
		.string "S_CROW.NC2"
data_762b9:
		.string "L_CROW.NC2"
data_762c4:
		.string "B_CROW.NC2"
data_762cf:
		.string "M_CROW.NC2"
data_762da:
		.string "S_ARCION.NC2"
data_762e7:
		.string "L_ARCION.NC2"
data_762f4:
		.string "B_ARCION.NC2"
data_76301:
		.string "M_ARCION.NC2"
data_7630e:
		.string "S_ROVEL.NC2"
data_7631a:
		.string "L_ROVEL.NC2"
data_76326:
		.string "B_ROVEL.NC2"
data_76332:
		.string "M_ROVEL.NC2"
data_7633e:
		.string "AKIRA.NC2"
data_76348:
		.string "AGACYG.NC2"
data_76353:
		.string "AGACYF.NC2"
data_7635e:
		.string "ALCIA.NC2"
data_76368:
		.string "ARIANA.NC2"
data_76373:
		.string "CAMEO.NC2"
data_7637d:
		.string "DBLADE.NC2"
data_76388:
		.string "DIABLRO.NC2"
data_76394:
		.string "DICUS.NC2"
data_7639e:
		.string "DURAN.NC2"
data_763a8:
		.string "ERICH.NC2"
data_763b2:
		.string "GRIUM.NC2"
data_763bc:
		.string "HANJO.NC2"
data_763c6:
		.string "ILJIMEA.NC2"
data_763d2:
		.string "IRUS.NC2"
data_763db:
		.string "KARLS.NC2"
data_763e5:
		.string "KASHIM.NC2"
data_763f0:
		.string "KASHUTAR.NC2"
data_763fd:
		.string "KOON.NC2"
data_76406:
		.string "LANDAM.NC2"
data_76411:
		.string "NANGCHUN.NC2"
data_7641e:
		.string "PALTAMIL.NC2"
data_7642b:
		.string "ROCARNO.NC2"
data_76437:
		.string "SAAD-G.NC2"
data_76442:
		.string "SAAD_F.NC2"
data_7644d:
		.string "SARA.NC2"
data_76456:
		.string "SIREN.NC2"
data_76460:
		.string "VUNSTAIN.NC2"
data_7646d:
		.string "DRAUPNIR.NC2"
data_7647a:
		.string "SGRAY.NC2"
data_76484:
		.string "LGRAY.NC2"
data_7648e:
		.string "BGRAY.NC2"
data_76498:
		.string "MGRAY.NC2"
data_764a2:
		.string "VANDYKE.NC2"
data_764ae:
		.string "KIM.NC2"
data_764b6:
		.string "HARPY1.NC2"
data_764c1:
		.string "HARPY2.NC2"
data_764cc:
		.string "HARPY3.NC2"
data_764d7:
		.string "HORSE1.BCR"
data_764e2:
		.string "HORSE2.BCR"
data_764ed:
		.string "HORSE3.BCR"
data_764f8:
		.string "HORSE4.BCR"
data_76503:
		.string "WYV-A.BCR"
data_7650d:
		.string "WYV-D.BCR"
data_76517:
		.string "M-MECHA1.BCR"
data_76524:
		.string "M-MECHE1.BCR"
data_76531:
		.string "M-MECHA2.BCR"
data_7653e:
		.string "M-MECHE2.BCR"
data_7654b:
		.string "M-MECHA3.BCR"
data_76558:
		.string "M-MECHE3.BCR"
data_76565:
		.string "ABALEST.MAR"
data_76571:
		.string "ARON.MAR"
data_7657a:
		.string "ASURA.MAR"
data_76584:
		.string "DUNGRINI.MAR"
data_76591:
		.string "ELJENARO.MAR"
data_7659e:
		.string "GARIUS.MAR"
data_765a9:
		.string "RA.MAR"
data_765b0:
		.string "YANUS.MAR"
data_765ba:
		.string "IMPERIOR.MAR"
data_765c7:
		.string "ABA-S.BCR"
data_765d1:
		.string "ARO-S.BCR"
data_765db:
		.string "ASU-S.BCR"
data_765e5:
		.string "DUN-S.BCR"
data_765ef:
		.string "ELJ-S.BCR"
data_765f9:
		.string "GAR-S.BCR"
data_76603:
		.string "RA-S.BCR"
data_7660c:
		.string "YAN-S.BCR"
data_76616:
		.string "WYV-A-S.BCR"
data_76622:
		.string "WYV-D-S.BCR"
data_7662e:
		.string "ARO-F.BCR"
data_76638:
		.string "ASU-F.BCR"
data_76642:
		.string "DUN-F.BCR"
data_7664c:
		.string "ELJ-F.BCR"
data_76656:
		.string "ASMO.BCR"
data_7665f:
		.string "INFTRP.WCR"
data_7666a:
		.string "E_INFTRP.WCR"
data_76677:
		.string "CAVTRP.WCR"
data_76682:
		.string "E_CAVTRP.WCR"
data_7668f:
		.string "SPRTRP.WCR"
data_7669a:
		.string "E_SPRTRP.WCR"
data_766a7:
		.string "BOWTRP.WCR"
data_766b2:
		.string "E_BOWTRP.WCR"
data_766bf:
		.string "MAGTRP.WCR"
data_766ca:
		.string "E_MAGTRP.WCR"
data_766d7:
		.string "CANTRP.WCR"
data_766e2:
		.string "E_CANTRP.WCR"
data_766ef:
		.string "GALSH.WCR"
data_766f9:
		.string "E_GALSH.WCR"
data_76705:
		.string "FLAGSH.WCR"
data_76710:
		.string "E_FLAGSH.WCR"
data_7671d:
		.string "STEELSH.WCR"
data_76729:
		.string "BATSH.WCR"
data_76733:
		.string "E_BATSH.WCR"
data_7673f:
		.string "AIR.WCR"
data_76747:
		.string "E_AIR.WCR"
data_76751:
		.string "ACEAIR.WCR"
data_7675c:
		.string "E_ACEAIR.WCR"
data_76769:
		.string "STA.WCR"
data_76771:
		.string "E_STA.WCR"
data_7677b:
		.string "SKYPIRA1.WCR"
data_76788:
		.string "SKYPIRA2.WCR"
data_76795:
		.string "DAO.BCR"
data_7679d:
		.string "DJIN.BCR"
data_767a6:
		.string "GARG.BCR"
data_767af:
		.string "GARG1.BCR"
data_767b9:
		.string "GARG2.BCR"
data_767c3:
		.string "GOLEM-D.BCR"
data_767cf:
		.string "GOLEM-F.BCR"
data_767db:
		.string "GOLEM-I.BCR"
data_767e7:
		.string "GOLEM-T.BCR"
data_767f3:
		.string "MARID.BCR"
data_767fd:
		.string "OGRE1.BCR"
data_76807:
		.string "OGRE2.BCR"
data_76811:
		.string "OGREL.BCR"
data_7681b:
		.string "SALAMAND.BCR"
data_76828:
		.string "SCORPIB.BCR"
data_76834:
		.string "SCORPIO.BCR"
data_76840:
		.string "SCORPIS.BCR"
data_7684c:
		.string "GRIMA0.BCR"
data_76857:
		.string "GRIMA1.BCR"
data_76862:
		.string "GRIMA2.BCR"
data_7686d:
		.string "GRIMA3.BCR"
data_76878:
		.string "KRAKEN-H.BCR"
data_76885:
		.string "KRAKEN-L.BCR"
data_76892:
		.string "KRAKEN-M.BCR"
data_7689f:
		.string "KRAKEN-N.BCR"
data_768ac:
		.string "ASTDOOR.BCR"
data_768b8:
		.string "CANNON.BCR"
data_768c3:
		.string "MTFTDOOR.BCR"
data_768d0:
		.string "PANDOOR.BCR"
data_768dc:
		.string "PLFTDOOR.BCR"
data_768e9:
		.string "PRSDOOR1.BCR"
data_768f6:
		.string "PRSDOOR2.BCR"
data_76903:
		.string "PRSDOOR3.BCR"
data_76910:
		.string "THNDWALL.BCR"
data_7691d:
		.string "INVISUAL.BCR"
data_7692a:
		.string "FDRA-H.BCR"
data_76935:
		.string "FDRA-L.BCR"
data_76940:
		.string "FDRA-R.BCR"
data_7694b:
		.string "ATREIUS.BCR"
data_76957:
		.string "DIENE.BCR"
data_76961:
		.string "ERGYAS.BCR"
data_7696c:
		.string "ERLGAMES.BCR"
data_76979:
		.string "KARATE.BCR"
data_76984:
		.string "LAEBIUS.BCR"
data_76990:
		.string "PRIOS.BCR"
data_7699a:
		.string "SHAQBARI.BCR"
data_769a7:
		.string "VIDGOSHU.BCR"
data_769b4:
		.string "BERADIN.BCR"
data_769c0:
		.string "BIT.BCR"
data_769c8:
		.string "ABI.BCR"
data_769d0:
		.string "ATR.BCR"
data_769d8:
		.string "DIE.BCR"
data_769e0:
		.string "DEI.BCR"
data_769e8:
		.string "ERG.BCR"
data_769f0:
		.string "ERL.BCR"
data_769f8:
		.string "KAR.BCR"
data_76a00:
		.string "PRI.BCR"
data_76a08:
		.string "SHA.BCR"
data_76a10:
		.string "VID.BCR"
data_76a18:
		.string "VIS.BCR"
data_76a20:
		.string "RSILVER.RCR"
data_76a2c:
		.string "RSILVERW.RCR"
data_76a39:
		.string "RDARK.RCR"
data_76a43:
		.string "RS_E.RCR"
data_76a4c:
		.string "RS_EW.RCR"
data_76a56:
		.string "RD_E.RCR"
data_76a5f:
		.string "RGRAY.RCR"
data_76a69:
		.string "RGRAYE.RCR"
data_76a74:
		.string "RBP.RCR"
data_76a7c:
		.string "RGS1.RCR"
data_76a85:
		.string "RGS1E.RCR"
data_76a8f:
		.string "RGS2.RCR"
data_76a98:
		.string "RGS2E.RCR"
data_76aa2:
		.string "RLACID1.RCR"
data_76aae:
		.string "RLACID1E.RCR"
data_76abb:
		.string "RLACID2.RCR"
data_76ac7:
		.string "RLACID2E.RCR"
data_76ad4:
		.string "RIYOLINE.RCR"
data_76ae1:
		.string "RIYOLIEE.RCR"
data_76aee:
		.string "RROBIN.RCR"
data_76af9:
		.string "RROBINE.RCR"
data_76b05:
		.string "RKAJA.RCR"
data_76b0f:
		.string "RKAJAE.RCR"
data_76b1a:
		.string "RGISHNE.RCR"
data_76b26:
		.string "RGISHNEE.RCR"
data_76b33:
		.string "RSHURI.RCR"
data_76b3e:
		.string "RSHURIE.RCR"
data_76b4a:
		.string "RCROW.RCR"
data_76b54:
		.string "RCROWE.RCR"
data_76b5f:
		.string "RARCION.RCR"
data_76b6b:
		.string "RARCIONE.RCR"
data_76b78:
		.string "RROBEL.RCR"
data_76b83:
		.string "RROBELE.RCR"
data_76b8f:
		.string "RALCIA.RCR"
data_76b9a:
		.string "RARIANA.RCR"
data_76ba6:
		.string "RDBLADE.RCR"
data_76bb2:
		.string "RDURAN.RCR"
data_76bbd:
		.string "RERICH.RCR"
data_76bc8:
		.string "RGRIUM.RCR"
data_76bd3:
		.string "RIRUS.RCR"
data_76bdd:
		.string "RKARLS.RCR"
data_76be8:
		.string "RKASHU.RCR"
data_76bf3:
		.string "RLANDAM.RCR"
data_76bff:
		.string "RROCARNO.RCR"
data_76c0c:
		.string "RSARA.RCR"
data_76c16:
		.string "RSIREN.RCR"
data_76c21:
		.string "RVUNSTA.RCR"
data_76c2d:
		.string "DSILVER.RCR"
data_76c39:
		.string "DSILVERW.RCR"
data_76c46:
		.string "DDARK.RCR"
data_76c50:
		.string "DGRAY.RCR"
data_76c5a:
		.string "DGS1.RCR"
data_76c63:
		.string "DGS2.RCR"
data_76c6c:
		.string "DLACID1.RCR"
data_76c78:
		.string "DLACID2.RCR"
data_76c84:
		.string "DIYOLINE.RCR"
data_76c91:
		.string "DROBIN.RCR"
data_76c9c:
		.string "DKAJA.RCR"
data_76ca6:
		.string "DGISHNE.RCR"
data_76cb2:
		.string "DSHURI.RCR"
data_76cbd:
		.string "DCROW.RCR"
data_76cc7:
		.string "DARCION.RCR"
data_76cd3:
		.string "DROBEL.RCR"
data_76cde:
		.string "DDBLADE.RCR"
data_76cea:
		.string "DDURAN.RCR"
data_76cf5:
		.string "DGRIUM.RCR"
data_76d00:
		.string "DKARLS.RCR"
data_76d0b:
		.string "DKASHU.RCR"
data_76d16:
		.string "DROCARNO.RCR"
data_76d23:
		.string "DSARA.RCR"
data_76d2d:
		.string "DSIREN.RCR"
data_76d38:
		.string "DVUNSTA.RCR"
data_76d44:
		.string "DERICH.RCR"
data_76d4f:
		.string "DIRUS.RCR"
data_76d59:
		.string "DLANDAM.RCR"
data_76d65:
		.string "DALCIA.RCR"
data_76d70:
		.string "MAX Character 400 unit....!!!"
data_76d8e:
		.string "Character Link"
data_76d9d:
		.string "Character Enter Too Many!!!"
data_76db9:
		.string "Slot Full"
data_76dc3:
		.string "CHARACTE\\"
data_76dcd:
		.string "Error : Character Image Slot Used Fail!!!\n"
data_76df8:
		.string "%d %d\n"
data_76dff:
		.string "Normal %d\n"
data_76e0a:
		.string "Big %d\n"
data_76e12:
		.string "Rider %d\n"
data_76e1c:
		.string "shadow.syb"
data_76e27:
		.string "wea_effc.syb"
data_76e34:
		.string "chr_effc.syb"
data_76e41:
		.string "clear error: %d\n"
		.ascii  "\x00\x00"
data_76e54:
		.ascii  "\x3e\x00"
data_76e56:
		.ascii  "\x25\x64\x5d\x00"
data_76e5a:
		.string "Ehh?\n"
data_76e60:
		.ascii  "\x0a\x00"
data_76e62:
		.ascii  "\x89\x81\xb5"
		.string "i LEVEL ["
data_76e6f:
		.ascii   "]\n    "
		.ascii  "\xcf\xa9\xac\x69\x8b\xa1\x20\xaf"
		.ascii  "\x73\x97\x62\x21\x00"
data_76e82:
		.ascii  "\x89\x81\xb5\x69\x20\xa2\x85\xb8"
		.ascii  "\x77\x20\x00"
data_76e8d:
		.ascii  "\x20\xaf\x73\x97\x62\x21\x00"
data_76e94:
		.ascii  "\x0a\x89\x77\xd0\xf1\xc3\xa1\x20"
		.ascii  "\x00"
data_76e9d:
		.ascii  "\x20\xd2\x42\x97\x62\x21\x0a\x00"
data_76ea5:
		.ascii   " ELD "
		.ascii  "\xd2\x42\x97\x62\x21\x00"
data_76eb0:
		.ascii   "\n LEVEL   "
		.ascii  "\x9d\xa1\x20\xac\x77\xaf\x77\xd0"
		.ascii  "\x96\xaf\x73\x93\xa1\x94\x61\x2e"
		.ascii  "\x00"
data_76ecb:
		.ascii  "\xb5\xc5\x9d\x62\x20\xac\x77\xaf"
		.ascii  "\x77\x21\x0a\x00"
data_76ed7:
		.ascii  "\xa3\xa5\xc0\xf3\x95\xa1\x20\xac"
		.ascii  "\x77\xaf\x77\x21\x0a\x00"
data_76ee5:
		.ascii  "\xbb\xa1\x9d\x62\x20\xac\x77\xaf"
		.ascii  "\x77\x21\x0a\x00"
data_76ef1:
		.ascii  "\x8a\xa5\xb6\xe1\x20\xac\x77\xaf"
		.ascii  "\x77\x21\x0a\x00"
data_76efd:
		.ascii  "\xc1\x41\x9d\x62\x20\xac\x77\xaf"
		.ascii  "\x77\x21\x0a\x00"
data_76f09:
		.ascii  "\xa0\x61\xa4\xf3\x9d\x62\x20\xac"
		.ascii  "\x77\xaf\x77\x21\x0a\x00\x00"
data_76f18:
		.string "item.dat"
data_76f21:
		.string "item.spr"
data_76f2a:
		.string "fld_misc.syb"
data_76f37:
		.ascii  "\xb5\x61\x8b\xa1\xb5\x41\x20\xb8"
		.ascii  "\x77\xc0\x62\xd0\x69\x20\xae\x81"
		.ascii  "\x20\xb4\xf4\xaf\x73\x93\xa1\x94"
		.ascii  "\x61\x2e\x00"
data_76f52:
		.ascii  "\xa2\x81\x8b\xa1\x9f\x69\x20\xb8"
		.ascii  "\x77\xc0\x62\xd0\x69\x20\xae\x81"
		.ascii  "\x20\xb4\xf4\x93\x65\x20\xbb\xa2"
		.ascii  "\xb4\xf3\xb7\xb3\x93\xa1\x94\x61"
		.ascii  "\x2e\x0a\x00"
data_76f75:
		.ascii  "\xbb\xa2\xb4\xf3\xb5\x41\x20\xa0"
		.ascii  "\x78\xbb\xa1\xb4\x67\x93\x65\x20"
		.ascii  "\xa2\x81\x8b\xa1\xb7\xb3\x93\xa1"
		.ascii  "\x94\x61\x2e\x0a\x00"
data_76f92:
		.ascii  "\xb4\xb7\xad\xa5\xa2\x81\x8b\xa1"
		.ascii  "\x9f\x69\x20\xba\xe9\xae\x81\x20"
		.ascii  "\xb4\xf4\x93\x65\x20\xac\x77\xc8"
		.ascii  "\x81\xb7\xb3\x93\xa1\x94\x61\x2e"
		.ascii  "\x0a\x00"
data_76fb4:
		.ascii  "\xb4\xb7\xad\xa5\x20\xa2\x81\x8b"
		.ascii  "\xa1\x9f\x69\x20\xba\xe1\x89\xa1"
		.ascii  "\x20\xb7\xb6\x93\x65\x20\xac\x77"
		.ascii  "\xc8\x81\xb7\xb3\x93\xa1\x94\x61"
		.ascii  "\x2e\x0a\x00"
data_76fd7:
		.ascii  "\xa4\x77\xcc\x81\x20\xac\x61\xb6"
		.ascii  "\x77\xa6\x89\x88\x61\xb7\xa5\x20"
		.ascii  "\xbb\xa2\xb4\xf3\xb7\xb3\x93\xa1"
		.ascii  "\x94\x61\x2e\x0a\x00"
data_76ff4:
		.ascii  "\xd2\x41\xcf\xa1\xb6\x77\x20\xa0"
		.ascii  "\x77\xc9\xa1\x20\xac\x61\xb6\x77"
		.ascii  "\xa6\x89\x88\x61\xb7\xa5\x20\xbb"
		.ascii  "\xa2\xb4\xf3\xb7\xb3\x93\xa1\x94"
		.ascii  "\x61\x2e\x0a\x00"
data_77018:
		.ascii  "\xa5\xa1\xb9\xa1\x8a\x81\x88\x61"
		.ascii  "\x20\xb4\x61\x93\xb3\x93\xa1\x94"
		.ascii  "\x61\x2e\x0a\x00"
data_7702c:
		.ascii  "\x25\x73\x00"
data_7702f:
		.ascii  "\xa4\x81\x90\x77\xb7\xa1\x20\x8d"
		.ascii  "\xc2\xc0\x65\x20\xac\x77\xc8\x81"
		.ascii  "\xb7\xb3\x93\xa1\x94\x61\x2e\x00"
data_77047:
		.ascii   "ITEM"
		.ascii  "\xb7\x69\x20\xc0\x77\x89\xa1\x9d"
		.ascii  "\xa1\x20\xa5\xa1\x90\x93\x93\xa1"
		.ascii  "\x94\x61\x2e\x00"
data_7705f:
		.ascii  "\xa4\x81\x90\x77\x88\xf5\xb7\x65"
		.ascii  "\x20\xc0\x77\x89\xa1\x9d\xa1\x2c"
		.ascii  "\x8b\x61\x20\xb8\x61\x9f\xa1\xb5"
		.ascii  "\x41\x20\x90\xfd\xb7\x71\x2e\x00"
data_7707f:
		.ascii  "\x0a\x5b\x00"
data_77082:
		.ascii  "\x5d\x20\xd2\x42\x97\x62\x21\x0a"
		.ascii  "\x00"
data_7708b:
		.ascii  "\x89\x77\xd0\xf1\xc3\xa1\x20\x00"
data_77093:
		.ascii  "\x20\xb8\xf1\x20\xd2\x42\x97\x62"
		.ascii  "\x21\x0a\x00"
data_7709e:
		.ascii   "ELD "
		.ascii  "\xd2\x42\x97\x62\x21\x0a\x00"
data_770a9:
		.string "Search Failed"
data_770b7:
		.string "assist-d.ssp"
data_770c4:
		.string "thunder1.ssp"
data_770d1:
		.string "death1.ssp"
data_770dc:
		.string "death2.ssp"
data_770e7:
		.string "atomic.ssp"
data_770f2:
		.string "darkzone.ssp"
data_770ff:
		.string "fire.ssp"
data_77108:
		.string "m-wind.ssp"
data_77113:
		.string "hell.ssp"
data_7711c:
		.string "f-blast.ssp"
data_77128:
		.string "f-wave.ssp"
		.ascii  "\x00"
data_77134:
		.string "MAGICSPR\\"
data_7713e:
		.string "f_arrow.nsp"
data_7714a:
		.string "f_blast.nsp"
data_77156:
		.string "magic"
data_7715c:
		.string ".nsp"
data_77161:
		.string "f_field.nsp"
data_7716d:
		.string "energy_f.nsp"
data_7717a:
		.string "boom.nsp"
data_77183:
		.string "icestick.nsp"
data_77190:
		.string "b_dragon.nsp"
data_7719d:
		.string "meteo.nsp"
data_771a7:
		.string "icemiss.nsp"
data_771b3:
		.string "diamondd.nsp"
data_771c0:
		.string "crystal.nsp"
data_771cc:
		.ascii  "\x00\x00\xc8\x42"
data_771d0:
		.fill   0x6
		.ascii  "\x64\x40"
data_771d8:
		.string "diamondb.nsp"
data_771e5:
		.string "icewind.nsp"
data_771f1:
		.string "icestor.nsp"
data_771fd:
		.string "icetypho.nsp"
data_7720a:
		.string "icedrago.nsp"
data_77217:
		.string "startear.nsp"
data_77224:
		.string "lbolt.nsp"
data_7722e:
		.string "thundwav.nsp"
data_7723b:
		.string "p_light.nsp"
data_77247:
		.string "heal1.nsp"
data_77251:
		.fill   0x6
		.ascii  "\x04\x40"
data_77259:
		.fill   0x6
		.ascii  "\x08\x40"
data_77261:
		.ascii  "\x00\x00\xf0\x41"
data_77265:
		.ascii  "\x00\x00\x80\x40"
data_77269:
		.ascii  "\x00\x00\xc8\x42"
data_7726d:
		.string "wideheal.nsp"
data_7727a:
		.ascii  "\x00\x00\xc8\x42"
data_7727e:
		.ascii  "\x00\x00\xc8\x42"
data_77282:
		.string "cure.nsp"
data_7728b:
		.string "healwind.nsp"
data_77298:
		.string "powerup.nsp"
data_772a4:
		.string "speedup.nsp"
data_772b0:
		.string "marmor.nsp"
data_772bb:
		.string "bless.nsp"
data_772c5:
		.string "silence.nsp"
data_772d1:
		.string "barrier.rpl"
data_772dd:
		.string "barrier.nsp"
data_772e9:
		.string "confuse.nsp"
data_772f5:
		.string "death.rpl"
data_772ff:
		.string "death.nsp"
data_77309:
		.string "b_hole.nsp"
data_77314:
		.string "soulreca.nsp"
data_77321:
		.fill   0x4
data_77325:
		.ascii  "\x00\x00\xc8\x42"
data_77329:
		.fill   0x6
		.ascii  "\x64\x40"
data_77331:
		.string "dna.nsp"
data_77339:
		.string "amagedon.nsp"
data_77346:
		.string "atomicbl.nsp"
		.ascii  "\x00"
data_77354:
		.string "Fire Arrow"
data_7735f:
		.string "Fire Ball"
data_77369:
		.string "Fire Blast"
data_77374:
		.string "Fire Blade"
data_7737f:
		.string "Flame Blade"
data_7738b:
		.string "Plasma Blade"
data_77398:
		.string "Fire Field"
data_773a3:
		.string "Fire Wall"
data_773ad:
		.string "Plasma Zone"
data_773b9:
		.string "Fire Gazer"
data_773c4:
		.string "Fire Wave"
data_773ce:
		.string "Plasma Wave"
data_773da:
		.string "Salamanda"
data_773e4:
		.string "Explosion"
data_773ee:
		.string "Fire Storm"
data_773f9:
		.string "Hell Fire"
data_77403:
		.string "Meteor"
data_7740a:
		.string "Prominance"
data_77415:
		.string "Ice Missile"
data_77421:
		.string "C.Missile"
data_7742b:
		.string "Diamond Dust"
data_77438:
		.string "Ice Blade"
data_77442:
		.string "C.Blade"
data_7744a:
		.string "Diamond Blade"
data_77458:
		.string "Ice Fog"
data_77460:
		.string "Crystal Mist"
data_7746d:
		.string "D.Circle"
data_77476:
		.string "Diamond Fist"
data_77483:
		.string "Frozen Air"
data_7748e:
		.string "Frozen Wall"
data_7749a:
		.string "Marid"
data_774a0:
		.string "Leopard"
data_774a8:
		.string "Ice Storm"
data_774b2:
		.string "Blizard"
data_774ba:
		.string "Star Tearer"
data_774c6:
		.string "Moon Light"
data_774d1:
		.string "L.Bolt"
data_774d8:
		.string "D.L.Bolt"
data_774e1:
		.string "T.L.Bolt"
data_774ea:
		.string "T.Blade"
data_774f2:
		.string "E.Field"
data_774fa:
		.string "E.Wall"
data_77501:
		.string "E.Circle"
data_7750a:
		.string "E.Wave"
data_77511:
		.string "Thundera"
data_7751a:
		.string "Elec.Wave"
data_77524:
		.string "Djinni"
data_7752b:
		.string "P.Lighting"
data_77536:
		.string "T.Storm"
data_7753e:
		.string "G.Thunder"
data_77548:
		.string "Mega Thunder"
data_77555:
		.string "Giga Thunder"
data_77562:
		.string "Pow.Thunder"
data_7756e:
		.string "Heal"
data_77573:
		.string "Wide Heal"
data_7757d:
		.string "Cure"
data_77582:
		.string "Turn Undead"
data_7758e:
		.string "Heal Wind"
data_77598:
		.string "Revible"
data_775a0:
		.string "Sun Light"
data_775aa:
		.string "Sun Lignt"
data_775b4:
		.string "Power UP"
data_775bd:
		.string "Speed UP"
data_775c6:
		.string "Magic Armor"
data_775d2:
		.string "Bless"
data_775d8:
		.string "Silence"
data_775e0:
		.string "Steal MP"
data_775e9:
		.string "Barrier"
data_775f1:
		.string "Curse"
data_775f7:
		.ascii  "\x42\x61\x74\x00"
data_775fb:
		.string "Slime"
data_77601:
		.string "Goblin"
data_77608:
		.ascii  "\x4f\x72\x63\x00"
data_7760c:
		.string "Ogre"
data_77611:
		.string "Golem"
data_77617:
		.string "Gargoyle"
data_77620:
		.string "Confuse"
data_77628:
		.string "Melt Item"
data_77632:
		.string "Death"
data_77638:
		.string "Soul Recall"
data_77644:
		.string "DNA Change"
data_7764f:
		.string "Black Hole"
data_7765a:
		.string "Dark Zone"
data_77664:
		.string "Atomic Blast"
data_77671:
		.string "Amageddon"
data_7767b:
		.string "f-arrow.ssp"
data_77687:
		.string "f-wave.ssp"
data_77692:
		.string "f-blast.ssp"
data_7769e:
		.string "i-shoot.ssp"
data_776aa:
		.string "i-piece.ssp"
data_776b6:
		.string "pierce.ssp"
data_776c1:
		.string "bolt1.ssp"
data_776cb:
		.string "AI Check! %x"
data_776d8:
		.string "enchant.ssp"
data_776e4:
		.ascii  "\xad\xa1\x20\xd1\xc5\x20\xae\x81"
		.ascii  "\x00"
data_776ed:
		.string "recall.nsp"
data_776f8:
		.string "regen.ssp"
data_77702:
		.string "summon.ssp"
data_7770d:
		.string "atomic.ssp"
data_77718:
		.string "darkzone.ssp"
data_77725:
		.string "f-meteo2.ssp"
data_77732:
		.string "f-meteo1.ssp"
data_7773f:
		.string "promi-1.ssp"
data_7774b:
		.string "promi-2.ssp"
data_77757:
		.string "cure.ssp"
data_77760:
		.string "i-star.ssp"
data_7776b:
		.string "i-fist.ssp"
data_77776:
		.string "thunder3.ssp"
data_77783:
		.string "elect.ssp"
data_7778d:
		.string "thunder1.ssp"
data_7779a:
		.string "f-field.ssp"
data_777a6:
		.string "ddoing.ssp"
data_777b1:
		.string "effect2.ssp"
data_777bd:
		.string "fire.ssp"
data_777c6:
		.string "m-wind.ssp"
data_777d1:
		.string "hell.ssp"
data_777da:
		.string "boom.ssp"
data_777e3:
		.string "bolt3.ssp"
data_777ed:
		.string "bolt2.ssp"
data_777f7:
		.string "heal.ssp"
data_77800:
		.string "assist-d.ssp"
data_7780d:
		.string "sun2.ssp"
data_77816:
		.string "sun1.ssp"
data_7781f:
		.string "sun.ssp"
data_77827:
		.string "assist-u.ssp"
data_77834:
		.string "poison.ssp"
data_7783f:
		.ascii   "[%s] "
		.ascii  "\xad\xa1\xa1\x69\x00"
data_77849:
		.string "death1.ssp"
data_77854:
		.string "death2.ssp"
data_7785f:
		.string "b-hole.ssp"
data_7786a:
		.string "dragon.ssp"
		.ascii  "\x00\x00\x00"
data_77878:
		.string "counter.nsp"
data_77884:
		.string "i-shoot.ssp"
data_77890:
		.string "critical.nsp"
data_7789d:
		.string "i-star2.ssp"
data_778a9:
		.string "swstr.nsp"
data_778b3:
		.string "f-blast.ssp"
data_778bf:
		.string "f-fall.ssp"
data_778ca:
		.string "slight.nsp"
data_778d5:
		.string "spearfly.nsp"
data_778e2:
		.string "fistlv3.nsp"
data_778ee:
		.string "axefly.nsp"
data_778f9:
		.string "madaxe.nsp"
data_77904:
		.string "i-fist.ssp"
data_7790f:
		.string "hon.nsp"
data_77917:
		.string "death.ssp"
data_77921:
		.string "bomb.ssp"
data_7792a:
		.string "restrain.nsp"
data_77937:
		.string "bolt1.ssp"
data_77941:
		.string "fistlv5.nsp"
data_7794d:
		.string "fistlv6.nsp"
data_77959:
		.string "t_arrow.nsp"
data_77965:
		.string "bolt2.ssp"
data_7796f:
		.string "fistlv4.nsp"
data_7797b:
		.string "fire.ssp"
data_77984:
		.string "kang.ssp"
data_7798d:
		.string "slash.ssp"
data_77997:
		.string "chang.ssp"
data_779a1:
		.string "ice.ssp"
data_779a9:
		.string "thunder1.ssp"
data_779b6:
		.string "thunder3.ssp"
data_779c3:
		.string "boom.ssp"
data_779cc:
		.string "ju.ssp"
data_779d3:
		.string "f-arrow.ssp"
data_779df:
		.string "growl.ssp"
data_779e9:
		.string "m-wind.ssp"
data_779f4:
		.string "shoot.ssp"
data_779fe:
		.string "bomb1.ssp"
data_77a08:
		.string "pazizik.ssp"
data_77a14:
		.string "elect.ssp"
data_77a1e:
		.string "effect2.ssp"
data_77a2a:
		.string "f-wave.ssp"
		.ascii  "\x00\x00\x00"
data_77a38:
		.string "bird.nsp"
data_77a41:
		.string "asura2.nsp"
data_77a4c:
		.string "arcion.nsp"
data_77a57:
		.string "icer.nsp"
data_77a60:
		.ascii  "\x00\x00\x60\x41"
data_77a64:
		.ascii  "\x00\x00\xe0\x40"
data_77a68:
		.ascii  "\x00\x00\x48\xc2"
data_77a6c:
		.ascii  "\x00\x00\xb9\x43"
data_77a70:
		.ascii  "\x00\x00\x7a\x43"
data_77a74:
		.ascii  "\x00\x00\x20\xc2"
data_77a78:
		.ascii  "\x00\x00\x20\x42"
data_77a7c:
		.ascii  "\x00\x00\xa0\xc1"
data_77a80:
		.ascii  "\x00\x00\xa0\x41"
data_77a84:
		.string "f_quake.nsp"
data_77a90:
		.string "shak2.nsp"
data_77a9a:
		.string "sarah.nsp"
data_77aa4:
		.string "stormaxe.nsp"
data_77ab1:
		.ascii  "\x00\x00\x20\x42"
data_77ab5:
		.ascii  "\x00\x00\x70\x41"
data_77ab9:
		.ascii  "\x00\x00\xf0\x41"
data_77abd:
		.ascii  "\x00\x00\xc8\x41"
data_77ac1:
		.ascii  "\x00\x00\x34\x42"
data_77ac5:
		.ascii  "\x00\x00\xc8\xc1"
data_77ac9:
		.ascii  "\x00\x00\xf0\xc1"
data_77acd:
		.ascii  "\x00\x00\x20\xc2"
data_77ad1:
		.string "nang.nsp"
data_77ada:
		.ascii  "\x00\x00\x80\x3e"
data_77ade:
		.fill   0x6
		.ascii  "\xfc\x3f"
data_77ae6:
		.ascii  "\x00\x00\xe0\x40"
data_77aea:
		.ascii   "333333"
		.ascii  "\xf3\x3f"
data_77af2:
		.string "shu.nsp"
data_77afa:
		.string "irus.nsp"
data_77b03:
		.string "rain.nsp"
data_77b0c:
		.string "io.nsp"
		.ascii  "\x00"
data_77b14:
		.string "swirl.nsp"
data_77b1e:
		.string "Poison"
data_77b25:
		.string "Berserk!"
data_77b2e:
		.string "sun1.ssp"
data_77b37:
		.string "sun2.ssp"
data_77b40:
		.string "sun.ssp"
data_77b48:
		.string "Sun Light!"
data_77b53:
		.string "heal.ssp"
data_77b5c:
		.string "cure.ssp"
data_77b65:
		.string "Heal Wind!"
data_77b70:
		.string "MP +20!"
data_77b78:
		.string "Warp!"
data_77b7e:
		.string "Morale Down!"
data_77b8b:
		.string "Wish to Win!!!"
data_77b9a:
		.string "Curse"
data_77ba0:
		.string "Ice Dragon!"
data_77bac:
		.string "Defense!"
data_77bb5:
		.string "recall.nsp"
data_77bc0:
		.string "regen.ssp"
data_77bca:
		.string "summon.ssp"
		.ascii  "\x00\x00\x00"
data_77bd8:
		.string "Magma Fire!"
data_77be4:
		.string "Sea Blizzard"
data_77bf1:
		.string "Sea Mist"
data_77bfa:
		.ascii  "\xad\xa1\x20\xd1\xc5\x20\xae\x81"
		.ascii  "\x00"
data_77c03:
		.string "recall.nsp"
data_77c0e:
		.string "regen.ssp"
data_77c18:
		.string "summon.ssp"
data_77c23:
		.string "f-meteo2.ssp"
data_77c30:
		.string "b-hole.ssp"
data_77c3b:
		.string "bolt3.ssp"
data_77c45:
		.string "heal.ssp"
data_77c4e:
		.string "cure.ssp"
data_77c57:
		.string "promi-1.ssp"
data_77c63:
		.string "promi-2.ssp"
data_77c6f:
		.string "thunder3.ssp"
data_77c7c:
		.string "bolt1.ssp"
data_77c86:
		.string "thunder1.ssp"
data_77c93:
		.string "sun1.ssp"
data_77c9c:
		.string "sun2.ssp"
data_77ca5:
		.string "sun.ssp"
data_77cad:
		.string "atomic.ssp"
data_77cb8:
		.string "darkzone.ssp"
data_77cc5:
		.string "f-blast.ssp"
data_77cd1:
		.string "m-wind.ssp"
data_77cdc:
		.string "boom.ssp"
		.ascii  "\x00\x00\x00"
data_77ce8:
		.string "etc.ico"
data_77cf0:
		.string "time_gra.syb"
data_77cfd:
		.string "battle.syb"
data_77d08:
		.string "frame.syb"
data_77d12:
		.string "weather.syb"
data_77d1e:
		.string "g2msg.syb"
data_77d28:
		.string "%04d %02d"
data_77d32:
		.string "%02d:%02d"
data_77d3c:
		.ascii  "\x25\x63\x00"
data_77d3f:
		.string "miss"
data_77d44:
		.string "portrait.syf"
data_77d51:
		.ascii  "\x25\x73\x00"
data_77d54:
		.ascii  "\x25\x33\x64\x00"
data_77d58:
		.string "%4d/%4d"
data_77d60:
		.ascii  "\x25\x64\x00"
data_77d63:
		.ascii  "\x5b\x20\xaf\xa1\x90\x61\x9f\xa1"
		.ascii  "\xb5\xa1\x20\xb9\xa1\x88\xe5"
		.string " ] \n"
		.ascii  "\x00"
data_77d78:
		.ascii  "\x20\x25\x73\x00"
data_77d7c:
		.string "<<%s>>\n"
data_77d84:
		.string "[%d %d]\n"
data_77d8d:
		.string "ERROR: \"%s\" %s\n"
data_77d9d:
		.ascii  "\x5c\x00" /* "\\" */
data_77d9f:
		.string "A:\\GENESIS2\\"
data_77dac:
		.string "Missed!"
data_77db4:
		.string "File Create Failed."
data_77dc8:
		.ascii  "\xb7\xb1\xa2\x81\x20\xac\xe9\xa1"
		.ascii  "\x77\x00"
data_77dd2:
		.string "QUICK SAVE"
data_77ddd:
		.string "QUICK LOAD"
data_77de8:
		.ascii  "\xb7\x71\xb4\x62\x20\xb9\xa1\xb8"
		.ascii  "\xf7\x00"
data_77df2:
		.ascii  "\xd2\x61\x89\xc1\xb7\x71\x20\xb9"
		.ascii  "\xa1\xb8\xf7\x00"
data_77dfe:
		.ascii   "TURN "
		.ascii  "\x88\x65\x89\x62\x20\xb9\xa1\xb8"
		.ascii  "\xf7\x00"
data_77e0d:
		.ascii   "SCROLL "
		.ascii  "\xad\xa2\x95\xa1\x20\xb9\xa1\xb8"
		.ascii  "\xf7\x00"
data_77e1e:
		.ascii  "\xb8\xe5\xca\x81\x20\xc0\xe1\xb7"
		.ascii  "\x71\xa6\x81\xc8\xe1\x00"
data_77e2c:
		.ascii   "TITLE"
		.ascii  "\x9d\xa1\x00"
data_77e34:
		.ascii   "OPTION "
		.ascii  "\xb9\xa1\xb8\xf7\x00"
data_77e40:
		.ascii  "\x1c\x2d\x44\x54\xfb\x21\x19\x40"
data_77e48:
		.ascii  "\x8f\xc2\xf5\x28\x5c\x8f\xea\x3f"
data_77e50:
		.ascii  "\x1c\x2d\x44\x54\xfb\x21\x19\x40"
data_77e58:
		.ascii  "\x1c\x2d\x44\x54\xfb\x21\x19\xc0"
data_77e60:
		.string "mainring.ico"
data_77e6d:
		.string "magic.ico"
data_77e77:
		.string "special.ico"
data_77e83:
		.string "skill.ico"
data_77e8d:
		.string "ai_ctrl.ico"
data_77e99:
		.ascii  "\x25\x73\x00"
data_77e9c:
		.ascii  "\xa1\xa2\xb8\xe2\xbb\xa1"
		.string " [%d %d]"
data_77eab:
		.string "No Target."
data_77eb6:
		.string "[AI Magic]"
data_77ec1:
		.string "[Normal Sequence]"
data_77ed3:
		.string "Wrong Spell!"
data_77ee0:
		.string "No TP!"
data_77ee7:
		.string "No MP!"
data_77eee:
		.string "MP %d"
data_77ef4:
		.string "Morale Up!"
data_77eff:
		.string "menustat.syb"
data_77f0c:
		.ascii  "\xb8\xe1\xb8\x77\xba\x97\x2e\x2e"
		.ascii  "\x2e\x00"
data_77f16:
		.ascii  "\xb7\xaa\x93\x65\xba\x97\x2e\x2e"
		.ascii  "\x2e\x00"
data_77f20:
		.string "EXIT"
		.ascii  "\x00\x00\x00"
data_77f28:
		.string "rain-out.bsp"
data_77f35:
		.string "stream.bsp"
data_77f40:
		.string "wat-fall.bsp"
data_77f4d:
		.string "wind.bsp"
data_77f56:
		.string "sea.bsp"
data_77f5e:
		.string "BLACKBOX.DAT"
data_77f6b:
		.string "SCENARIO\\"
data_77f75:
		.string "genesis.qsv"
data_77f81:
		.string "contmap.dat"
data_77f8d:
		.ascii  "\x00"
data_77f8e:
		.ascii  "\x24\x00"
data_77f90:
		.string ".\\cstldata\\MENU"
data_77fa0:
		.string "game.cfg"
		.ascii  "\x00\x00\x00"
data_77fac:
		.string "event.syb"
data_77fb6:
		.string "contmap.dat"
data_77fc2:
		.ascii  "\x20\x00"
data_77fc4:
		.ascii  "\x20\xd2\x42\x97\x62\x21\x0a\x00"
data_77fcc:
		.ascii  "\xc0\x77\x89\xa1\xb5\x41\x20\xa5"
		.ascii  "\xa1\x89\xc5\x2e\x00"
data_77fd9:
		.ascii  "\xb5\xa1\x9f\x65\xad\xa5\x20\xb8"
		.ascii  "\x77\xc0\x62\x21\x00"
data_77fe6:
		.ascii  "\xb6\x45\xad\xa5\x20\xb8\x77\xc0"
		.ascii  "\x62\x21\x00"
data_77ff1:
		.ascii  "\xa5\xa1\xb9\xa1\x8a\x81\x9d\xa1"
		.ascii  "\x20\xb8\x77\xc0\x62\x21\x00"
data_78000:
		.ascii  "\xa4\x81\x90\x77\xb5\x41\x20\xa5"
		.ascii  "\xa1\x89\xc5\x0a\xb7\xb6\x94\xe5"
		.ascii   " ITEM"
		.ascii  "\xb7\x65\x20\xc0\x77\x89\xa1\xb5"
		.ascii  "\x41\x20\xa5\xa1\x89\xc5\x00"
data_78024:
		.ascii  "\xa4\x81\x90\x77\xb5\x41\x20\xa5"
		.ascii  "\xa1\x89\xc5\x00"
data_78030:
		.string "Oh! My Lord!"
data_7803d:
		.string "blackbox.dat"
		.ascii  "\x00\x00"
data_7804c:
		.string "CHARACTE\\"
data_78056:
		.ascii  "\x25\x73\x00"
data_78059:
		.string "hp %lu"
data_78060:
		.string "mp %d"
data_78066:
		.string "str %d"
data_7806d:
		.string "int %d"
data_78074:
		.string "dex %d"
data_7807b:
		.string "cha %d"
data_78082:
		.string "%-6ld"
data_78088:
		.ascii   "%3d ELD"
		.ascii  "\x88\x61\x20\xa6\x81\xb9\xa2\xd0"
		.ascii  "\x73\x93\xa1\x94\x61\x2e\x00"
data_7809e:
		.ascii  "\xc8\x73\xaf\x77\xac\x77\xc8\x81"
		.ascii  "\x88\x61\x20\xb4\x61\x93\xb3\x93"
		.ascii  "\xa1\x94\x61\x2e\x00\x00"
data_780b4:
		.string "\nLargest available block (in bytes): %lu\n"
data_780de:
		.string "Maximum unlocked page allocation: %lu\n"
data_78105:
		.string "Pages that can be allocated and locked: %lu\n"
data_78132:
		.string "Total linear address space pages: %lu\n"
data_78159:
		.string "free pages available: %lu\n"
data_78174:
		.string "Number of physical pages not in use: %lu\n"
data_7819e:
		.string "Total physical pages managed by host: %lu\n"
data_781c9:
		.string "Free linear address space (pages): %lu\n"
data_781f1:
		.string "Size of paging/file partition (pages): %lu\n\n"
data_7821e:
		.string "genesis.pal"
data_7822a:
		.string "main.cur"
data_78233:
		.string "move.cur"
data_7823c:
		.string "newascii.fnt"
data_78249:
		.string "newhan.fnt"
data_78254:
		.string "sword.vsp   "
data_78261:
		.string "fist.vsp    "
data_7826e:
		.string "bow.vsp     "
data_7827b:
		.string "whip.vsp    "
data_78288:
		.string "cannon.vsp  "
data_78295:
		.string "bow2.vsp    "
data_782a2:
		.string "battler.vsp "
data_782af:
		.string "gun.vsp     "
data_782bc:
		.string "shout.vsp   "
data_782c9:
		.string "shield.vsp  "
data_782d6:
		.string "dry-step.vsp"
data_782e3:
		.string "sno-step.vsp"
data_782f0:
		.string "gra-step.vsp"
data_782fd:
		.string "wat-step.vsp"
data_7830a:
		.string "walkmany.vsp"
data_78317:
		.string "horse-w.vsp "
data_78324:
		.string "fly-mech.vsp"
data_78331:
		.string "fly-dra.vsp "
data_7833e:
		.string "wong.vsp    "
data_7834b:
		.string "ha-m.vsp    "
data_78358:
		.string "ha-f.vsp    "
data_78365:
		.string "damage-m.vsp"
data_78372:
		.string "damage-f.vsp"
data_7837f:
		.string "dmg-mech.vsp"
data_7838c:
		.string "dead-m.vsp  "
data_78399:
		.string "dead-f.vsp  "
data_783a6:
		.string "bury.vsp    "
data_783b3:
		.string "dead-c.vsp  "
data_783c0:
		.string "turn.vsp    "
data_783cd:
		.string "item.vsp    "
data_783da:
		.string "command.vsp "
data_783e7:
		.string "skeleton.vsp"
data_783f4:
		.string "l_mon-a.vsp "
data_78401:
		.string "dragon.vsp  "
data_7840e:
		.string "ast.map"
data_78416:
		.string "SCENARIO\\"
data_78420:
		.string "contmap.dat"
data_7842c:
		.ascii  "\x20\x00\x00\x00"
data_78430:
		.string "fireblad.nsp"
data_7843d:
		.string "explosio.nsp"
data_7844a:
		.string "firestor.nsp"
data_78457:
		.string "hellfire.nsp"
data_78464:
		.string "pro.nsp"
data_7846c:
		.string "leopard.nsp"
data_78478:
		.string "icestorm.nsp"
data_78485:
		.string "blizzard.nsp"
data_78492:
		.string "moon.nsp"
data_7849b:
		.string "thun7.nsp"
data_784a5:
		.string "thun72.nsp"
data_784b0:
		.string "thun73.nsp"
data_784bb:
		.string "bstar.nsp"
data_784c5:
		.string "revible.nsp"
data_784d1:
		.string "sunl.nsp"
data_784da:
		.string "sunl2.nsp"
data_784e4:
		.string "\n drives : %d"
data_784f2:
		.string "\n first_drive : %d"
data_78505:
		.string "\n current_track : %d"
data_7851a:
		.string "\n track_position : %d"
data_78530:
		.string "\n track_type : %d"
data_78542:
		.string "\n low_audio : %d"
data_78553:
		.string "\n high_audio : %d"
data_78565:
		.string "\n disk_length_min : %d"
data_7857c:
		.string "\n disk_length_sec : %d"
data_78593:
		.string "\n disk_length_frames : %d"
data_785ad:
		.string "\n endofdisk : %d"
data_785be:
		.string "\n upc[7] : %s"
data_785cc:
		.string "\n diskid[6] : %s"
data_785dd:
		.string "\n status : %d"
data_785eb:
		.string "\n error : %d"
data_785f8:
		.string "MSCDEX Version %d.%d\n"
data_7860e:
		.string "Number of CD drive = %d\n"
data_78627:
		.string "First CD drive = %c:\n"
data_7863d:
		.string "%d     %i:%i:%i     "
data_78652:
		.string "DATA\n"
data_78658:
		.string "AUDIO\n"
data_7865f:
		.string "Error Occured\n"
data_7866e:
		.string "Write Protect violation (#0)\n"
data_7868c:
		.string "Unknown unit (#1)\n"
data_7869f:
		.string "Drive not Ready (#2)\n"
data_786b5:
		.string "Unknown Command (#3)\n"
data_786cb:
		.string "CRC error (#4)\n"
data_786db:
		.string "Bad drive request structure length (#5)\n"
data_78704:
		.string "Seek error (#6)\n"
data_78715:
		.string "Unknown media (#7)\n"
data_78729:
		.string "Sector not found (#8)\n"
data_78740:
		.string "Printer out of paper (#9)\n"
data_7875b:
		.string "Write fault (#a)\n"
data_7876d:
		.string "Read fault (#b)\n"
data_7877e:
		.string "General failure (#c)\n"
data_78794:
		.string "Reserved (#d)\n"
data_787a3:
		.string "Reserved (#e)\n"
data_787b2:
		.string "Invalid disk change (#f)\n"
data_787cc:
		.string "No error occured\n"
data_787de:
		.string "Done\n"
data_787e4:
		.string "Busy\n"
data_787ea:
		.string "Done & Busy\n"
		.ascii  "\x00"
data_787f8:
		.string "    "
data_787fd:
		.ascii  "\x20\x20\x20"
		.fill   0x4
data_78804:
		.string "text.chr"
data_7880d:
		.string "File Open Error!!!\n"
data_78821:
		.ascii  "\x77\x62\x00"
data_78824:
		.string "File Open Error!!\n"
		.ascii  "\x00"
data_78838:
		.string "Floating-point support not loaded\r\n"
data_7885c:
		.string "RATIONAL DOS/4G"
data_7886c:
		.ascii  "\x54\x5a\x00\x00"
data_78870:
		.string "Not enough memory to allocate file structures\r\n"
data_788a0:
		.ascii  "\x69\x6e\x66\x00"
data_788a4:
		.ascii  "\x6e\x61\x6e\x00"
data_788a8:
		.fill   0x6
data_788ae:
		.ascii  "\xf0\xbf"
data_788b0:
		.ascii  "\x00\x00"
data_788b2:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"
data_788c8:
		.ascii  "\x6d\x01"
data_788ca:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"
data_788e4:
		.fill   0x6
		.ascii  "\xf0\x7f"
data_788ec:
		.fill   0x6
		.ascii  "\xf0\xff"
data_788f4:
		.ascii  "\xff\xff\xff\xff"
data_788f8:
		.ascii  "\xff\xff\xef\x7f"
data_788fc:
		.ascii  "\xff\xff\xff\xff"
data_78900:
		.ascii  "\xff\xff\xef\xff"
data_78904:
		.fill   0x4
data_78908:
		.ascii  "\x00\x00\xf0\x7f"
data_7890c:
		.ascii  "\xd8\x00"
data_7890e:
		.ascii  "\xc6\xf9\xc6\x40\xe9\x34\xc7\x6c"
		.ascii  "\x6c\x00\x12\x4e\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"
data_7895c:
		.ascii  "\x00\x20"
		.long   func___setEFGfmt_
		.ascii  "\x00\x01"
		.long   func_j___sys_init_387_emulator
		.ascii  "\x00\x02"
		.long   func___chk8087_
		.ascii  "\x00\x20"
		.long   func___Init_Argv_
		.ascii  "\x00\x20"
		.long   func_62532
		.ascii  "\x00\x20"
		.long   func___delay_init_
		.ascii  "\x00\x20"
		.long   func___InitFiles_
		.ascii  "\x00\x20"
		.long   func___setenvp_
data_7898c:
		.ascii  "\x00\x01"
		.long   func_j___sys_fini_387_emulator
		.ascii  "\x00\x20"
		.long   func___full_io_exit_
data_78998:
		.fill   0x4
data_7899c:
		.ascii  "\x00\x00"
data_7899e:
		.fill   0x4
data_789a2:
		.ascii  "\x00\x00"
data_789a4:
		.ascii  "\x00\x00"
data_789a6:
		.ascii  "\x00"
data_789a7:
		.ascii  "\x00"
data_789a8:
		.fill   0x4
data_789ac:
		.fill   0x4
data_789b0:
		.fill   0x54
data_78a04:
		.fill   0x4e20
data_7d824:
		.fill   0x1388
data_7ebac:
		.fill   0x4e1d
data_839c9:
		.ascii  "\x00\x00\x00"
data_839cc:
		.fill   0x3e8
data_83db4:
		.fill   0x4e20
data_88bd4:
		.fill   0x270e
data_8b2e2:
		.ascii  "\x00\x00"
data_8b2e4:
		.ascii  "\x00\x00"
data_8b2e6:
		.ascii  "\x00\x00"
data_8b2e8:
		.fill   0xec
data_8b3d4:
		.fill   0x4
data_8b3d8:
		.fill   0xc
data_8b3e4:
		.fill   0x4
data_8b3e8:
		.fill   0x2ee0c
data_ba1f4:
		.fill   0x4
data_ba1f8:
		.ascii  "\x00"
data_ba1f9:
		.fill   0x4de
data_ba6d7:
		.ascii  "\x00\x00\x00"
data_ba6da:
		.fill   0xfa
data_ba7d4:
		.fill   0x4
data_ba7d8:
		.ascii  "\x00\x00"
cdrom_number: /* ba7da */
		.ascii  "\x00\x00"
cdrom_starting_letter: /* ba7dc */
		.ascii  "\x00"
data_ba7dd:
		.ascii  "\x00\x00"
cdrom_track_number_related: /* ba7df */
		.fill   0x4
cdrom_track_control_info: /* ba7e3 */
		.ascii  "\x00"
data_ba7e4:
		.ascii  "\x00"
cdrom_highest_track_number: /* ba7e5 */
		.ascii  "\x13"
data_ba7e6:
		.ascii  "\x00"
data_ba7e7:
		.ascii  "\x00"
data_ba7e8:
		.ascii  "\x00"
cdrom_audio_disc_info_starting_point_of_the_lead_out_track_realted: /* ba7e9 */
		.fill   0x4
data_ba7ed:
		.fill   0x7
data_ba7f4:
		.fill   0x6
data_ba7fa:
		.fill   0x4
cdrom_device_driver_request_return_status:
		.ascii  "\x00"
data_ba7ff:
		.fill   0x33
data_ba832:
		.ascii  "\x00\x00"
data_ba834:
		.ascii  "\x00\x00"
data_ba836:
		.ascii  "\x00\x00"
data_ba838:
		.ascii  "\x00\x00"
data_ba83a:
		.ascii  "\x00\x00"
data_ba83c:
		.ascii  "\x00\x00"
data_ba83e:
		.ascii  "\x00\x00"
data_ba840:
		.ascii  "\x00\x00"
data_ba842:
		.ascii  "\x00\x00"
data_ba844:
		.ascii  "\x00\x00"
data_ba846:
		.fill   0x4
data_ba84a:
		.ascii  "\x00"
data_ba84b:
		.ascii  "\x00"
data_ba84c:
		.ascii  "\x00"
data_ba84d:
		.ascii  "\x00"
data_ba84e:
		.ascii  "\x00\x00"
data_ba850:
		.fill   0x8
data_ba858:
		.fill   0x55
data_ba8ad:
		.ascii  "\x00\x00\x00"
data_ba8b0:
		.ascii  "\x00"
data_ba8b1:
		.ascii  "\x00"
data_ba8b2:
		.ascii  "\x00"
data_ba8b3:
		.ascii  "\x00"
data_ba8b4:
		.fill   0xfc4
data_bb878:
		.fill   0x4
data_bb87c:
		.ascii  "\x00\x00"
data_bb87e:
		.ascii  "\x00\x00"
data_bb880:
		.fill   0x1a6
data_bba26:
		.ascii  "\x00\x00"
data_bba28:
		.fill   0x8
data_bba30:
		.fill   0x598
data_bbfc8:
		.fill   0xe
data_bbfd6:
		.fill   0x1098a
data_cc960:
		.fill   0x8
data_cc968:
		.fill   0x4
data_cc96c:
		.fill   0xc
data_cc978:
		.fill   0x10
data_cc988:
		.fill   0x8
data_cc990:
		.fill   0x8
data_cc998:
		.fill   0x9a4c
data_d63e4:
		.fill   0x1f4
data_d65d8:
		.fill   0x48
data_d6620:
		.fill   0x4
data_d6624:
		.fill   0x4
data_d6628:
		.fill   0x8
data_d6630:
		.fill   0xc
data_d663c:
		.fill   0xc
data_d6648:
		.fill   0x4
data_d664c:
		.fill   0x4
data_d6650:
		.fill   0x8
data_d6658:
		.fill   0x4c
data_d66a4:
		.fill   0x4
data_d66a8:
		.ascii  "\x00"
data_d66a9:
		.ascii  "\x00\x00\x00"
data_d66ac:
		.ascii  "\x00"
data_d66ad:
		.ascii  "\x00"
data_d66ae:
		.ascii  "\x00\x00\x00"
data_d66b1:
		.fill   0xe1a1
data_e4852:
		.ascii  "\x00\x00"
data_e4854:
		.ascii  "\x00\x00"
data_e4856:
		.ascii  "\x00\x00"
data_e4858:
		.ascii  "\x00"
data_e4859:
		.fill   0x107
data_e4960:
		.ascii  "\x00\x00"
data_e4962:
		.fill   0x5
data_e4967:
		.fill   0x323
data_e4c8a:
		.ascii  "\x00\x00"
data_e4c8c:
		.fill   0x4
data_e4c90:
		.ascii  "\x00"
data_e4c91:
		.fill   0x325
data_e4fb6:
		.ascii  "\x00\x00"
data_e4fb8:
		.ascii  "\x00\x00"
data_e4fba:
		.ascii  "\x00\x00"
data_e4fbc:
		.ascii  "\x00\x00"
data_e4fbe:
		.ascii  "\x00\x00"
data_e4fc0:
		.ascii  "\x00\x00"
data_e4fc2:
		.ascii  "\x00\x00"
data_e4fc4:
		.ascii  "\x00\x00"
data_e4fc6:
		.ascii  "\x00\x00"
data_e4fc8:
		.fill   0x1a
data_e4fe2:
		.fill   0x4b
data_e502d:
		.fill   0xe1
data_e510e:
		.fill   0x7f
data_e518d:
		.ascii  "\x00"
data_e518e:
		.ascii  "\x00\x00"
data_e5190:
		.fill   0x7b
data_e520b:
		.ascii  "\x00"
data_e520c:
		.ascii  "\x00"
data_e520d:
		.ascii  "\x00"
data_e520e:
		.ascii  "\x00\x00"
data_e5210:
		.ascii  "\x00"
data_e5211:
		.fill   0x7ff
data_e5a10:
		.ascii  "\x00\x00"
data_e5a12:
		.fill   0x1c
data_e5a2e:
		.ascii  "\x00\x00"
data_e5a30:
		.fill   0x1d
data_e5a4d:
		.ascii  "\x00\x00\x00"
data_e5a50:
		.fill   0x1d
data_e5a6d:
		.ascii  "\x00\x00\x00"
data_e5a70:
		.fill   0x20
data_e5a90:
		.fill   0x4
data_e5a94:
		.fill   0x1c
data_e5ab0:
		.fill   0x1d
data_e5acd:
		.ascii  "\x00\x00\x00"
data_e5ad0:
		.fill   0x20
data_e5af0:
		.fill   0xbc
data_e5bac:
		.fill   0x4
data_e5bb0:
		.fill   0x280
data_e5e30:
		.fill   0x780
data_e65b0:
		.fill   0x270c
data_e8cbc:
		.ascii  "\x00"
data_e8cbd:
		.ascii  "\x00\x00\x00"
data_e8cc0:
		.fill   0x27e
data_e8f3e:
		.ascii  "\x00\x00"
data_e8f40:
		.ascii  "\x00\x00"
data_e8f42:
		.ascii  "\x00\x00"
data_e8f44:
		.ascii  "\x00\x00"
data_e8f46:
		.ascii  "\x00\x00"
data_e8f48:
		.fill   0x4e20
data_edd68:
		.fill   0x4
data_edd6c:
		.fill   0x4
data_edd70:
		.ascii  "\x00\x00"
data_edd72:
		.ascii  "\x00\x00"
data_edd74:
		.ascii  "\x00\x00"
data_edd76:
		.ascii  "\x00\x00"
data_edd78:
		.ascii  "\x00\x00"
data_edd7a:
		.ascii  "\x00\x00"
data_edd7c:
		.ascii  "\x00\x00"
data_edd7e:
		.ascii  "\x00"
data_edd7f:
		.ascii  "\x00"
data_edd80:
		.ascii  "\x00\x00"
data_edd82:
		.ascii  "\x00"
data_edd83:
		.ascii  "\x00\x00"
data_edd85:
		.ascii  "\x00\x00\x00"
data_edd88:
		.fill   0x25
data_eddad:
		.ascii  "\x00\x00\x00"
data_eddb0:
		.ascii  "\x00"
data_eddb1:
		.ascii  "\x00"
data_eddb2:
		.ascii  "\x00"
data_eddb3:
		.ascii  "\x00"
data_eddb4:
		.ascii  "\x00"
data_eddb5:
		.ascii  "\x00\x00"
data_eddb7:
		.fill   0x1fc9
data_efd80:
		.fill   0x6
data_efd86:
		.ascii  "\x00\x00"
data_efd88:
		.fill   0x26
data_efdae:
		.ascii  "\x00\x00"
data_efdb0:
		.ascii  "\x00\x00"
data_efdb2:
		.ascii  "\x00\x00"
data_efdb4:
		.ascii  "\x00\x00"
data_efdb6:
		.ascii  "\x00\x00"
data_efdb8:
		.fill   0x5c5
data_f037d:
		.ascii  "\x00"
data_f037e:
		.ascii  "\x00\x00"
data_f0380:
		.ascii  "\x00"
data_f0381:
		.ascii  "\x00"
data_f0382:
		.ascii  "\x00"
data_f0383:
		.ascii  "\x00\x00"
data_f0385:
		.ascii  "\x00\x00\x00"
data_f0388:
		.ascii  "\x00"
data_f0389:
		.fill   0x6d
data_f03f6:
		.ascii  "\x00\x00"
data_f03f8:
		.ascii  "\x00"
data_f03f9:
		.fill   0x13
data_f040c:
		.ascii  "\x00"
data_f040d:
		.ascii  "\x00"
data_f040e:
		.ascii  "\x00\x00"
data_f0410:
		.fill   0x4
data_f0414:
		.fill   0x4
data_f0418:
		.fill   0x4
data_f041c:
		.fill   0x4
data_f0420:
		.ascii  "\x00\x00"
data_f0422:
		.ascii  "\x00\x00"
data_f0424:
		.ascii  "\x00\x00"
data_f0426:
		.ascii  "\x00\x00"
data_f0428:
		.ascii  "\x00\x00"
data_f042a:
		.ascii  "\x00\x00"
data_f042c:
		.ascii  "\x00\x00"
data_f042e:
		.ascii  "\x00"
data_f042f:
		.ascii  "\x00"
data_f0430:
		.fill   0x200
data_f0630:
		.ascii  "\x00\x00"
data_f0632:
		.ascii  "\x00\x00"
data_f0634:
		.ascii  "\x00\x00"
data_f0636:
		.ascii  "\x00\x00"
data_f0638:
		.ascii  "\x00\x00"
data_f063a:
		.ascii  "\x00\x00"
data_f063c:
		.ascii  "\x00\x00"
data_f063e:
		.ascii  "\x00\x00"
data_f0640:
		.ascii  "\x00\x00"
data_f0642:
		.ascii  "\x00\x00"
data_f0644:
		.ascii  "\x00\x00"
data_f0646:
		.ascii  "\x00\x00"
data_f0648:
		.fill   0x3fe
data_f0a46:
		.ascii  "\x00\x00"
data_f0a48:
		.fill   0x12c
data_f0b74:
		.fill   0x4
data_f0b78:
		.ascii  "\x00\x00"
data_f0b7a:
		.ascii  "\x00\x00"
data_f0b7c:
		.ascii  "\x00\x00"
data_f0b7e:
		.ascii  "\x00\x00"
data_f0b80:
		.ascii  "\x00\x00"
data_f0b82:
		.ascii  "\x00\x00"
data_f0b84:
		.ascii  "\x00"
data_f0b85:
		.ascii  "\x00"
data_f0b86:
		.ascii  "\x00\x00"
data_f0b88:
		.ascii  "\x00\x00"
data_f0b8a:
		.ascii  "\x00\x00"
data_f0b8c:
		.ascii  "\x00\x00"
data_f0b8e:
		.ascii  "\x00\x00"
data_f0b90:
		.ascii  "\x00\x00"
data_f0b92:
		.ascii  "\x00\x00"
data_f0b94:
		.ascii  "\x00\x00"
data_f0b96:
		.ascii  "\x00\x00"
data_f0b98:
		.ascii  "\x00\x00"
data_f0b9a:
		.ascii  "\x00\x00"
data_f0b9c:
		.ascii  "\x00\x00"
data_f0b9e:
		.ascii  "\x00\x00"
data_f0ba0:
		.ascii  "\x00\x00"
data_f0ba2:
		.ascii  "\x00\x00"
data_f0ba4:
		.fill   0x4
data_f0ba8:
		.fill   0x200
data_f0da8:
		.ascii  "\x00\x00"
data_f0daa:
		.ascii  "\x00\x00"
data_f0dac:
		.ascii  "\x00\x00"
data_f0dae:
		.fill   0x4
data_f0db2:
		.fill   0x4
data_f0db6:
		.fill   0x8
data_f0dbe:
		.fill   0x4
data_f0dc2:
		.fill   0xc
data_f0dce:
		.fill   0xc
data_f0dda:
		.fill   0xc
data_f0de6:
		.fill   0x18
data_f0dfe:
		.fill   0xc
data_f0e0a:
		.fill   0x4
data_f0e0e:
		.ascii  "\x00\x00"
data_f0e10:
		.ascii  "\x00\x00"
data_f0e12:
		.fill   0x4
data_f0e16:
		.fill   0xc
data_f0e22:
		.ascii  "\x00\x00"
data_f0e24:
		.ascii  "\x00\x00"
data_f0e26:
		.fill   0x4
data_f0e2a:
		.fill   0x6
data_f0e30:
		.ascii  "\x00\x00"
data_f0e32:
		.fill   0x4
data_f0e36:
		.fill   0x8
data_f0e3e:
		.ascii  "\x00\x00"
data_f0e40:
		.ascii  "\x00\x00"
data_f0e42:
		.fill   0x28
data_f0e6a:
		.ascii  "\x00\x00"
data_f0e6c:
		.ascii  "\x00\x00"
data_f0e6e:
		.ascii  "\x00\x00"
data_f0e70:
		.ascii  "\x00\x00"
data_f0e72:
		.fill   0x8
data_f0e7a:
		.ascii  "\x00\x00"
data_f0e7c:
		.ascii  "\x00\x00"
data_f0e7e:
		.fill   0x8
data_f0e86:
		.ascii  "\x00\x00"
data_f0e88:
		.ascii  "\x00\x00"
data_f0e8a:
		.fill   0x10
data_f0e9a:
		.fill   0x4
data_f0e9e:
		.ascii  "\x00\x00"
data_f0ea0:
		.ascii  "\x00\x00"
data_f0ea2:
		.fill   0x3c
data_f0ede:
		.fill   0xc
data_f0eea:
		.fill   0xc
data_f0ef6:
		.fill   0x10
data_f0f06:
		.ascii  "\x00\x00"
data_f0f08:
		.ascii  "\x00\x00"
data_f0f0a:
		.fill   0x4
data_f0f0e:
		.fill   0x10
data_f0f1e:
		.fill   0xc
data_f0f2a:
		.fill   0xc
data_f0f36:
		.fill   0xfc
data_f1032:
		.fill   0xc
data_f103e:
		.fill   0xc
data_f104a:
		.fill   0xc
data_f1056:
		.fill   0xe
data_f1064:
		.ascii  "\x00\x00"
data_f1066:
		.fill   0x4
data_f106a:
		.fill   0x33e
data_f13a8:
		.ascii  "\x00\x00"
data_f13aa:
		.ascii  "\x00\x00"
data_f13ac:
		.fill   0x4
data_f13b0:
		.fill   0x4
data_f13b4:
		.fill   0x4
data_f13b8:
		.fill   0x4
data_f13bc:
		.fill   0x4
data_f13c0:
		.fill   0x4
data_f13c4:
		.fill   0x4
data_f13c8:
		.fill   0x4
data_f13cc:
		.fill   0x4
data_f13d0:
		.fill   0x4
data_f13d4:
		.fill   0x4
data_f13d8:
		.fill   0x4
data_f13dc:
		.fill   0x4
data_f13e0:
		.fill   0x4
data_f13e4:
		.fill   0x4
data_f13e8:
		.fill   0x4
data_f13ec:
		.fill   0x4
data_f13f0:
		.fill   0x4
data_f13f4:
		.fill   0x4
data_f13f8:
		.fill   0x4
data_f13fc:
		.fill   0x4
data_f1400:
		.fill   0x4
data_f1404:
		.fill   0x4
data_f1408:
		.fill   0x4
data_f140c:
		.fill   0x4
data_f1410:
		.fill   0x4
data_f1414:
		.fill   0x4
data_f1418:
		.fill   0x4
data_f141c:
		.fill   0x4
data_f1420:
		.fill   0x4
data_f1424:
		.fill   0x4
data_f1428:
		.fill   0x4
data_f142c:
		.fill   0x4
data_f1430:
		.fill   0x4
data_f1434:
		.fill   0x4
data_f1438:
		.fill   0x4
data_f143c:
		.fill   0x4
data_f1440:
		.fill   0x4
data_f1444:
		.fill   0x4
data_f1448:
		.fill   0x4
data_f144c:
		.fill   0x4
data_f1450:
		.fill   0x4
data_f1454:
		.fill   0x4
data_f1458:
		.fill   0x4
data_f145c:
		.fill   0x4
data_f1460:
		.fill   0x4
data_f1464:
		.fill   0x4
data_f1468:
		.fill   0x4
data_f146c:
		.fill   0x4
data_f1470:
		.fill   0x4
data_f1474:
		.fill   0x4
data_f1478:
		.fill   0x4
data_f147c:
		.fill   0x4
data_f1480:
		.fill   0x4
data_f1484:
		.fill   0x4
data_f1488:
		.fill   0x4
data_f148c:
		.fill   0x4
data_f1490:
		.fill   0x4
data_f1494:
		.fill   0x4
data_f1498:
		.fill   0x4
data_f149c:
		.fill   0x4
data_f14a0:
		.fill   0x4
data_f14a4:
		.fill   0x4
data_f14a8:
		.fill   0x4
data_f14ac:
		.fill   0x4
data_f14b0:
		.fill   0x4
data_f14b4:
		.fill   0x4
data_f14b8:
		.fill   0x4
data_f14bc:
		.fill   0x4
data_f14c0:
		.fill   0x4
data_f14c4:
		.fill   0x4
data_f14c8:
		.fill   0x4
data_f14cc:
		.fill   0x4
data_f14d0:
		.fill   0x4
data_f14d4:
		.fill   0x4
data_f14d8:
		.fill   0x4
data_f14dc:
		.fill   0x5e
data_f153a:
		.ascii  "\x00\x00"
data_f153c:
		.fill   0x2e
data_f156a:
		.ascii  "\x00\x00"
data_f156c:
		.fill   0x30
data_f159c:
		.fill   0x300
data_f189c:
		.fill   0x300
data_f1b9c:
		.ascii  "\x00\x00"
data_f1b9e:
		.ascii  "\x00\x00"
data_f1ba0:
		.ascii  "\x00\x00"
data_f1ba2:
		.ascii  "\x00\x00"
data_f1ba4:
		.ascii  "\x00\x00"
data_f1ba6:
		.ascii  "\x00\x00"
data_f1ba8:
		.fill   0x4
data_f1bac:
		.fill   0x270c
data_f42b8:
		.fill   0x3e80
data_f8138:
		.fill   0x8
data_f8140:
		.fill   0xc
data_f814c:
		.fill   0xc
data_f8158:
		.fill   0xc
data_f8164:
		.fill   0xc
data_f8170:
		.fill   0xc
data_f817c:
		.fill   0x64
data_f81e0:
		.fill   0x100
data_f82e0:
		.fill   0x8
data_f82e8:
		.fill   0xc
data_f82f4:
		.fill   0xc
data_f8300:
		.fill   0xc
data_f830c:
		.fill   0x1a
data_f8326:
		.ascii  "\x00\x00"
data_f8328:
		.fill   0x1fe
data_f8526:
		.ascii  "\x00\x00"
data_f8528:
		.fill   0x200
data_f8728:
		.fill   0x8
data_f8730:
		.fill   0x358
data_f8a88:
		.fill   0x100
data_f8b88:
		.fill   0x200
data_f8d88:
		.fill   0x200
data_f8f88:
		.fill   0x200
data_f9188:
		.fill   0x2fd
data_f9485:
		.ascii  "\x00\x00\x00"
data_f9488:
		.ascii  "\x00\x00\x00"
data_f948b:
		.fill   0x27b
data_f9706:
		.ascii  "\x00\x00"
data_f9708:
		.ascii  "\x00\x00"
data_f970a:
		.fill   0x4
data_f970e:
		.fill   0x4fa
data_f9c08:
		.ascii  "\x00\x00"
data_f9c0a:
		.fill   0x2fe
data_f9f08:
		.fill   0x168
data_fa070:
		.fill   0x4
data_fa074:
		.ascii  "\x00\x00"
data_fa076:
		.ascii  "\x00\x00"
data_fa078:
		.fill   0xe8
data_fa160:
		.fill   0x30
data_fa190:
		.fill   0x30
data_fa1c0:
		.fill   0x23e
data_fa3fe:
		.ascii  "\x00\x00"
data_fa400:
		.fill   0x4
data_fa404:
		.ascii  "\x00\x00"
data_fa406:
		.ascii  "\x00\x00"
data_fa408:
		.fill   0x2a4
data_fa6ac:
		.fill   0x4
data_fa6b0:
		.ascii  "\x00\x00"
data_fa6b2:
		.ascii  "\x00\x00"
data_fa6b4:
		.fill   0x8
data_fa6bc:
		.ascii  "\x00\x00"
data_fa6be:
		.ascii  "\x00\x00"
data_fa6c0:
		.fill   0x8
data_fa6c8:
		.ascii  "\x00\x00"
data_fa6ca:
		.ascii  "\x00\x00"
data_fa6cc:
		.fill   0x1c
data_fa6e8:
		.ascii  "\x00\x00"
data_fa6ea:
		.ascii  "\x00\x00"
data_fa6ec:
		.fill   0x4
data_fa6f0:
		.fill   0x2a
data_fa71a:
		.ascii  "\x00\x00"
data_fa71c:
		.fill   0x4
data_fa720:
		.fill   0x64
data_fa784:
		.fill   0x8
data_fa78c:
		.ascii  "\x00"
data_fa78d:
		.fill   0x121
data_fa8ae:
		.ascii  "\x00\x00"
data_fa8b0:
		.ascii  "\x00\x00"
data_fa8b2:
		.ascii  "\x00\x00"
data_fa8b4:
		.ascii  "\x00\x00"
data_fa8b6:
		.ascii  "\x00\x00"
data_fa8b8:
		.ascii  "\x00\x00"
data_fa8ba:
		.ascii  "\x00\x00"
data_fa8bc:
		.fill   0x4
data_fa8c0:
		.fill   0xc8
data_fa988:
		.fill   0xc8
data_faa50:
		.fill   0xc8
data_fab18:
		.fill   0xc8
data_fabe0:
		.fill   0x300
data_faee0:
		.fill   0x64
data_faf44:
		.fill   0x64
data_fafa8:
		.fill   0x64
data_fb00c:
		.fill   0x64
data_fb070:
		.fill   0x4
data_fb074:
		.fill   0x4
data_fb078:
		.fill   0x4
data_fb07c:
		.fill   0x4
data_fb080:
		.fill   0x10
data_fb090:
		.fill   0x12c
data_fb1bc:
		.fill   0x4
data_fb1c0:
		.ascii  "\x00\x00"
data_fb1c2:
		.ascii  "\x00\x00"
data_fb1c4:
		.ascii  "\x00\x00"
data_fb1c6:
		.ascii  "\x00\x00"
data_fb1c8:
		.ascii  "\x00\x00"
data_fb1ca:
		.ascii  "\x00\x00"
data_fb1cc:
		.ascii  "\x00\x00"
data_fb1ce:
		.ascii  "\x00\x00"
data_fb1d0:
		.ascii  "\x00\x00"
data_fb1d2:
		.fill   0xff
data_fb2d1:
		.fill   0xff
data_fb3d0:
		.fill   0x100
data_fb4d0:
		.fill   0x20ce
data_fd59e:
		.ascii  "\x00\x00"
data_fd5a0:
		.fill   0x18
data_fd5b8:
		.fill   0x18
data_fd5d0:
		.ascii  "\x00\x00"
data_fd5d2:
		.ascii  "\x00\x00"
data_fd5d4:
		.fill   0x4
data_fd5d8:
		.fill   0x8
data_fd5e0:
		.fill   0x4
data_fd5e4:
		.fill   0x4
data_fd5e8:
		.fill   0x4
data_fd5ec:
		.fill   0x4
data_fd5f0:
		.fill   0x4
data_fd5f4:
		.fill   0x4
data_fd5f8:
		.fill   0x4
data_fd5fc:
		.ascii  "\x00\x00"
data_fd5fe:
		.ascii  "\x00\x00"
data_fd600:
		.fill   0x8
data_fd608:
		.ascii  "\x00\x00"
data_fd60a:
		.ascii  "\x00\x00"
data_fd60c:
		.fill   0x11c
data_fd728:
		.ascii  "\x00\x00"
data_fd72a:
		.ascii  "\x00\x00"
data_fd72c:
		.fill   0x14
data_fd740:
		.ascii  "\x00\x00"
data_fd742:
		.ascii  "\x00\x00"
data_fd744:
		.fill   0x14
data_fd758:
		.ascii  "\x00\x00"
data_fd75a:
		.ascii  "\x00\x00"
data_fd75c:
		.fill   0xa
data_fd766:
		.ascii  "\x00\x00"
data_fd768:
		.fill   0x8
data_fd770:
		.ascii  "\x00\x00"
data_fd772:
		.ascii  "\x00\x00"
data_fd774:
		.fill   0x38
data_fd7ac:
		.ascii  "\x00\x00"
data_fd7ae:
		.ascii  "\x00\x00"
data_fd7b0:
		.fill   0x8
data_fd7b8:
		.ascii  "\x00\x00"
data_fd7ba:
		.ascii  "\x00\x00"
data_fd7bc:
		.fill   0x8
data_fd7c4:
		.ascii  "\x00\x00"
data_fd7c6:
		.ascii  "\x00\x00"
data_fd7c8:
		.fill   0x8
data_fd7d0:
		.ascii  "\x00\x00"
data_fd7d2:
		.ascii  "\x00\x00"
data_fd7d4:
		.fill   0x8
data_fd7dc:
		.ascii  "\x00\x00"
data_fd7de:
		.ascii  "\x00\x00"
data_fd7e0:
		.fill   0xaa
data_fd88a:
		.ascii  "\x00\x00"
data_fd88c:
		.ascii  "\x00\x00"
data_fd88e:
		.fill   0x20
data_fd8ae:
		.ascii  "\x00\x00"
data_fd8b0:
		.ascii  "\x00\x00"
data_fd8b2:
		.ascii  "\x00\x00"
data_fd8b4:
		.ascii  "\x00\x00"
data_fd8b6:
		.ascii  "\x00\x00"
data_fd8b8:
		.fill   0x4
data_fd8bc:
		.ascii  "\x00\x00"
data_fd8be:
		.ascii  "\x00\x00"
data_fd8c0:
		.ascii  "\x00\x00"
data_fd8c2:
		.fill   0x6
data_fd8c8:
		.ascii  "\x00\x00"
data_fd8ca:
		.ascii  "\x00\x00"
data_fd8cc:
		.ascii  "\x00\x00"
data_fd8ce:
		.ascii  "\x00\x00"
data_fd8d0:
		.ascii  "\x00\x00"
data_fd8d2:
		.ascii  "\x00\x00"
data_fd8d4:
		.fill   0x6a
data_fd93e:
		.fill   0x6a
data_fd9a8:
		.fill   0x6a
data_fda12:
		.fill   0x6a
data_fda7c:
		.fill   0x6a
game_cfg_sound: /* fdae6 */
		.ascii  "\x01\x00"
game_cfg_music: /* fdae8 */
		.ascii  "\x01\x00"
GLOBAL (game_cfg_speed) /* fdaea */
		.ascii  "\x00\x00"
data_fdaec:
		.ascii  "\x00\x00"
data_fdaee:
		.ascii  "\x00\x00"
data_fdaf0:
		.ascii  "\x00\x00"
data_fdaf2:
		.ascii  "\x00\x00"
data_fdaf4:
		.ascii  "\x00\x00"
data_fdaf6:
		.ascii  "\x00\x00"
data_fdaf8:
		.fill   0xc8
data_fdbc0:
		.fill   0xa8
data_fdc68:
		.fill   0x300
data_fdf68:
		.fill   0x10
data_fdf78:
		.ascii  "\x00\x00"
data_fdf7a:
		.ascii  "\x00\x00"
data_fdf7c:
		.ascii  "\x00\x00"
data_fdf7e:
		.ascii  "\x00\x00"
data_fdf80:
		.ascii  "\x00\x00"
data_fdf82:
		.ascii  "\x00\x00"
data_fdf84:
		.ascii  "\x00"
data_fdf85:
		.ascii  "\x00"
data_fdf86:
		.ascii  "\x00"
data_fdf87:
		.fill   0xc8
data_fe04f:
		.fill   0x320
data_fe36f:
		.fill   0x190
data_fe4ff:
		.fill   0xbb5
data_ff0b4:
		.ascii  "\x00"
data_ff0b5:
		.ascii  "\x00\x00"
data_ff0b7:
		.ascii  "\x00"
data_ff0b8:
		.fill   0x4
data_ff0bc:
		.fill   0x10ae
data_10016a:
		.fill   0x22
data_10018c:
		.fill   0x10
data_10019c:
		.fill   0x400
data_10059c:
		.fill   0x8
data_1005a4:
		.fill   0x55
data_1005f9:
		.ascii  "\x00"
data_1005fa:
		.fill   0x1f
data_100619:
		.ascii  "\x00"
data_10061a:
		.fill   0x1f
data_100639:
		.ascii  "\x00"
data_10063a:
		.fill   0x1f
data_100659:
		.ascii  "\x00\x00\x00"
data_10065c:
		.fill   0x60
data_1006bc:
		.ascii  "\x00"
data_1006bd:
		.ascii  "\x00"
data_1006be:
		.ascii  "\x00"
data_1006bf:
		.ascii  "\x00"
data_1006c0:
		.ascii  "\x00"
data_1006c1:
		.ascii  "\x00"
data_1006c2:
		.ascii  "\x00"
data_1006c3:
		.fill   0x155
data_100818:
		.fill   0x4
data_10081c:
		.fill   0x30
data_10084c:
		.fill   0xfa00
data_11024c:
		.fill   0x4
data_110250:
		.fill   0x4
data_110254:
		.fill   0x64
data_1102b8:
		.fill   0x4
data_1102bc:
		.fill   0x64
data_110320:
		.fill   0x64
data_110384:
		.fill   0x64
data_1103e8:
		.fill   0x64
data_11044c:
		.fill   0x64
data_1104b0:
		.fill   0x64
data_110514:
		.fill   0x64
data_110578:
		.fill   0x4
data_11057c:
		.ascii  "\x00\x00"
data_11057e:
		.ascii  "\x00\x00"
data_110580:
		.ascii  "\x00\x00"
data_110582:
		.ascii  "\x00\x00"
data_110584:
		.ascii  "\x00\x00"
data_110586:
		.fill   0x108
data_11068e:
		.ascii  "\x00"
data_11068f:
		.ascii  "\x00"
data_110690:
		.ascii  "\x00"
data_110691:
		.ascii  "\x00"
data_110692:
		.ascii  "\x00"
data_110693:
		.ascii  "\x00"
data_110694:
		.ascii  "\x00"
data_110695:
		.ascii  "\x00\x00\x00"
data_110698:
		.fill   0x3e8
data_110a80:
		.ascii  "\x00"
data_110a81:
		.fill   0x5
data_110a86:
		.ascii  "\x00\x00\x00"
data_110a89:
		.fill   0x147b
data_111f04:
		.fill   0x194
data_112098:
		.fill   0x6
data_11209e:
		.ascii  "\x00\x00"
data_1120a0:
		.ascii  "\x00\x00"
data_1120a2:
		.ascii  "\x00\x00"
data_1120a4:
		.fill   0x4
data_1120a8:
		.fill   0x4
data_1120ac:
		.fill   0x4
data_1120b0:
		.fill   0x4
data_1120b4:
		.fill   0x4
data_1120b8:
		.fill   0x4
data_1120bc:
		.fill   0x4
data_1120c0:
		.fill   0x4
data_1120c4:
		.fill   0x4
data_1120c8:
		.fill   0x20
data_1120e8:
		.fill   0x4
data_1120ec:
		.fill   0x74
data_112160:
		.fill   0x168
data_1122c8:
		.fill   0x72
data_11233a:
		.ascii  "\x00\x00"
data_11233c:
		.fill   0x8
cdrom_track_related_array_1: /* 112344 */
		.fill   0x78
cdrom_track_related_array_2: /* 1123bc */
		.fill   0x88
data_112444:
		.fill   0x4
dpmi_real_mode_call_structure: /* 112448 */
		.fill   0x10
dpmi_real_mode_call_structure_ebx: /* 112458 */
		.fill   0x8
dpmi_real_mode_call_structure_ecx: /* 112460 */
		.fill   0x4
dpmi_real_mode_call_structure_eax: /* 112464 */
		.fill   0x6
dpmi_real_mode_call_structure_es: /* 11246a */
		.fill   0x3a
data_1124a4:
		.ascii  "\x00\x00"
data_1124a6:
		.ascii  "\x00\x00"
data_1124a8:
		.fill   0x4
data_1124ac:
		.fill   0x4
data_1124b0:
		.fill   0x27c
data_11272c:
		.fill   0x4
data_112730:
		.fill   0x4
data_112734:
		.fill   0x4
data_112738:
		.fill   0x4
data_11273c:
		.fill   0x4
data_112740:
		.fill   0x4
data_112744:
		.fill   0x4
data_112748:
		.fill   0x4
data_11274c:
		.fill   0x4
data_112750:
		.fill   0x4
data_112754:
		.fill   0x4
data_112758:
		.fill   0x4
data_11275c:
		.fill   0x4
data_112760:
		.fill   0x8
data_112768:
		.fill   0x4
data_11276c:
		.fill   0x4
data_112770:
		.fill   0x4
data_112774:
		.fill   0x4
data_112778:
		.fill   0x4
data_11277c:
		.fill   0x8
data_112784:
		.fill   0x4
data_112788:
		.fill   0x4
data_11278c:
		.fill   0x4
data_112790:
		.fill   0x4
data_112794:
		.fill   0x4
data_112798:
		.fill   0x8
data_1127a0:
		.fill   0x4
data_1127a4:
		.fill   0x4
data_1127a8:
		.fill   0x4
data_1127ac:
		.fill   0x4
data_1127b0:
		.fill   0x4
data_1127b4:
		.fill   0x8
data_1127bc:
		.fill   0x4
data_1127c0:
		.fill   0x4
data_1127c4:
		.fill   0x4
data_1127c8:
		.fill   0x4
data_1127cc:
		.fill   0x4
data_1127d0:
		.fill   0x8
data_1127d8:
		.fill   0x4
data_1127dc:
		.fill   0x4
data_1127e0:
		.fill   0x4
data_1127e4:
		.fill   0x4
data_1127e8:
		.fill   0x4
data_1127ec:
		.fill   0x8
data_1127f4:
		.fill   0x4
data_1127f8:
		.fill   0x4
data_1127fc:
		.fill   0x4
data_112800:
		.fill   0x4
data_112804:
		.fill   0x4
data_112808:
		.fill   0x4
data_11280c:
		.fill   0xb00
data_11330c:
		.fill   0x200
data_11350c:
		.fill   0x200
data_11370c:
		.fill   0x10000
soundblaster_irq: /* 12370c */
		.fill   0x4
data_123710:
		.fill   0x4
soundblaster_adr: /* 123714 */
		.fill   0x4
data_123718:
		.fill   0x4
data_12371c:
		.fill   0x4
soundblaster_interrupt_number: /* 123720 */
		.fill   0x4
data_123724:
		.fill   0x4
soundblaster_dma: /* 123728 */
		.fill   0x4
pic_masks: /* 12372c */
		.fill   0x8
data_123734:
		.fill   0x4
soundblaster_adr_is_not_zero: /* 123738 */
		.fill   0xc
data_123744:
		.fill   0x4
data_123748:
		.ascii  "\x00\x00"
data_12374a:
		.fill   0x4
data_12374e:
		.ascii  "\x00\x00"
data_123750:
		.fill   0x4
data_123754:
		.ascii  "\x00\x00"
data_123756:
		.ascii  "\x00\x00"
data_123758:
		.fill   0x96
data_1237ee:
		.fill   0x1a
data_123808:
		.fill   0x4
data_12380c:
		.fill   0x4
data_123810:
		.fill   0x4
data_123814:
		.fill   0x4
data_123818:
		.fill   0x4
data_12381c:
		.fill   0x14
data_123830:
		.fill   0x4
data_123834:
		.fill   0x4
data_123838:
		.fill   0x4
data_12383c:
		.fill   0x10
data_12384c:
		.ascii  "\x00\x00"
data_12384e:
		.ascii  "\x00\x00"
data_123850:
		.ascii  "\x00\x00"
data_123852:
		.ascii  "\x00\x00"
data_123854:
		.ascii  "\x00\x00"
data_123856:
		.ascii  "\x00\x00"
data_123858:
		.ascii  "\x00"
data_123859:
		.ascii  "\x00"
data_12385a:
		.ascii  "\x00\x00"
data_12385c:
		.ascii  "\x00"
data_12385d:
		.ascii  "\x00"
data_12385e:
		.ascii  "\x00"
data_12385f:
		.ascii  "\x00"
data_123860:
		.ascii  "\x00"
data_123861:
		.ascii  "\x00"
data_123862:
		.ascii  "\x00"
data_123863:
		.fill   0x5
data_123868:
		.fill   0x4
data_12386c:
		.ascii  "\x00\x00"
data_12386e:
		.fill   0x7f
data_1238ed:
		.fill   0xb
data_1238f8:
		.fill   0x1400
data_124cf8:
		.fill   0xb00
data_1257f8:
		.fill   0xe00
data_1265f8:
		.fill   0x1000
data_1275f8:
		.fill   0x4
data_1275fc:
		.fill   0x4
data_127600:
		.fill   0x4
data_127604:
		.fill   0x4
data_127608:
		.ascii  "\x00\x00"
data_12760a:
		.ascii  "\x00\x00"
data_12760c:
		.fill   0x10
data_12761c:
		.ascii  "\x00\x00"
data_12761e:
		.ascii  "\x00\x00"
data_127620:
		.fill   0x1e
data_12763e:
		.ascii  "\x00\x00"
data_127640:
		.ascii  "\x00\x00"
data_127642:
		.ascii  "\x00\x00"
data_127644:
		.ascii  "\x00\x00"
data_127646:
		.ascii  "\x00\x00"
data_127648:
		.fill   0x4
data_12764c:
		.fill   0x400
data_127a4c:
		.fill   0x300
data_127d4c:
		.fill   0x190
data_127edc:
		.fill   0x2fd
data_1281d9:
		.ascii  "\x00"
data_1281da:
		.ascii  "\x00\x00"
data_1281dc:
		.ascii  "\x00"
data_1281dd:
		.ascii  "\x00"
data_1281de:
		.fill   0x2b
data_128209:
		.ascii  "\x00"
data_12820a:
		.ascii  "\x00\x00"
data_12820c:
		.ascii  "\x00"
data_12820d:
		.ascii  "\x00"
data_12820e:
		.ascii  "\x00"
data_12820f:
		.fill   0x3c
data_12824b:
		.ascii  "\x00"
data_12824c:
		.ascii  "\x00"
data_12824d:
		.ascii  "\x00"
data_12824e:
		.ascii  "\x00"
data_12824f:
		.fill   0x2d
data_12827c:
		.fill   0x63
data_1282df:
		.fill   0xa5
data_128384:
		.fill   0x1c8
data_12854c:
		.fill   0x4
data_128550:
		.fill   0x4
data_128554:
		.ascii  "\x00\x00"
data_128556:
		.ascii  "\x00\x00"
data_128558:
		.ascii  "\x00\x00"
data_12855a:
		.ascii  "\x00\x00"
data_12855c:
		.ascii  "\x00\x00"
data_12855e:
		.ascii  "\x00\x00"
data_128560:
		.ascii  "\x00\x00"
data_128562:
		.ascii  "\x00"
data_128563:
		.ascii  "\x00"
data_128564:
		.ascii  "\x00"
data_128565:
		.ascii  "\x00"
data_128566:
		.ascii  "\x00"
data_128567:
		.ascii  "\x00"
data_128568:
		.ascii  "\x00"
data_128569:
		.ascii  "\x00\x00"
data_12856b:
		.ascii  "\x00\x00"
data_12856d:
		.ascii  "\x00\x00"
data_12856f:
		.ascii  "\x00\x00"
data_128571:
		.fill   0x4
data_128575:
		.ascii  "\x00"
data_128576:
		.ascii  "\x00"
data_128577:
		.ascii  "\x00\x00"
data_128579:
		.ascii  "\x00\x00\x00"
data_12857c:
		.fill   0x4
data_128580:
		.fill   0x4
data_128584:
		.fill   0x4
data_128588:
		.fill   0x4
data_12858c:
		.fill   0x4
data_128590:
		.fill   0x4
data_128594:
		.fill   0x4
data_128598:
		.ascii  "\x00\x00"
data_12859a:
		.ascii  "\x00\x00"
data_12859c:
		.fill   0x80
data_12861c:
		.fill   0x24
data_128640:
		.fill   0x1000
