/* vim: set sw=2 ts=2 expandtab: */

#include "asm.h"

.text


/*----------------------------------------------------------------*/
func____begtext:	/* 0x10003 */
/*----------------------------------------------------------------*/
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop
		nop


/*----------------------------------------------------------------*/
func_10010:
/*----------------------------------------------------------------*/
		dec    %eax
		dec    %ebp
		push   %eax
		dec    %ebx
		dec    %eax
		dec    %ebx
		push   %eax
		dec    %ebp
		push   %eax
		dec    %ebp
		dec    %eax
		dec    %ebx
		push   %eax
		dec    %ebx
		dec    %eax
		dec    %ebp
		dec    %eax
		dec    %ebx
		dec    %ebp
		push   %eax
		push   %eax
		dec    %ebx
		dec    %ebp
		dec    %eax
		dec    %ebx
		dec    %eax
		push   %eax
		dec    %ebp
		dec    %ebp
		dec    %eax
		push   %eax
		dec    %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %al,%cl
		mov    %edx,%edi
		mov    %ebx,%eax
		cmp    $0x4b,%cl
		jb     jump_10061
		jbe    jump_1014e
		cmp    $0x4d,%cl
		jb     jump_10221
		jbe    jump_101be
		cmp    $0x50,%cl
		je     jump_100d9
		jmp    jump_10221
	jump_10061:
		cmp    $0x48,%cl
		jne    jump_10221
		movswl %bx,%esi
		mov    data_15ba1e,%ebx
		mov    %esi,%edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_15b9c4,%eax
		lea    (%eax,%edx,1),%ecx
		movswl %di,%eax
		cmpb   $0x1,(%ecx,%eax,1)
		je     jump_10221
		mov    data_15b9b4,%ecx
		add    %edx,%ecx
		cmpb   $0x0,(%ecx,%eax,1)
		jne    jump_10221
		dec    %esi
		imul   %esi,%ebx
		mov    data_7cf1c,%ecx
		add    %ebx,%ebx
		add    %ebx,%ecx
		mov    %eax,%ebx
		cmpw   $0x7d00,(%ecx,%ebx,2)
		jb     jump_10221
		mov    data_15b9c0,%ebx
		add    %ebx,%edx
		cmpb   $0x0,(%edx,%eax,1)
		jne    jump_10221
		mov    $0x48,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_100d9:
		mov    data_15ba1e,%edx
		movswl %bx,%ebx
		sar    $0x10,%edx
		lea    0x2(%ebx),%ecx
		imul   %edx,%ecx
		mov    data_15b9c4,%esi
		movswl %di,%eax
		add    %ecx,%esi
		cmpb   $0x1,(%esi,%eax,1)
		je     jump_10221
		mov    data_15b9b4,%esi
		add    %esi,%ecx
		cmpb   $0x0,(%ecx,%eax,1)
		jne    jump_10221
		lea    0x1(%ebx),%esi
		imul   %edx,%esi
		mov    data_7cf1c,%ecx
		add    %esi,%esi
		add    %ecx,%esi
		mov    %eax,%ecx
		cmpw   $0x7d00,(%esi,%ecx,2)
		jb     jump_10221
		imul   %edx,%ebx
		mov    data_15b9c0,%edx
		add    %ebx,%edx
		cmpb   $0x0,(%edx,%eax,1)
		jne    jump_10221
		mov    $0x50,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_1014e:
		mov    data_15ba1e,%esi
		movswl %bx,%edx
		sar    $0x10,%esi
		lea    0x1(%edx),%ecx
		imul   %esi,%ecx
		mov    data_15b9c4,%eax
		lea    (%eax,%ecx,1),%ebx
		movswl %di,%eax
		cmpb   $0x1,-0x1(%ebx,%eax,1)
		je     jump_10221
		mov    data_15b9b4,%ebx
		add    %ecx,%ebx
		cmpb   $0x0,-0x1(%ebx,%eax,1)
		jne    jump_10221
		imul   %esi,%edx
		mov    data_7cf1c,%ecx
		mov    %edx,%ebx
		add    %edx,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		cmpw   $0x7d00,-0x2(%ecx,%edx,2)
		jb     jump_10221
		mov    data_15b9c0,%edx
		add    %ebx,%edx
		cmpb   $0x0,(%edx,%eax,1)
		jne    jump_10221
		mov    $0x4b,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_101be:
		movswl %bx,%ecx
		mov    data_15ba1e,%ebx
		lea    0x1(%ecx),%esi
		sar    $0x10,%ebx
		imul   %ebx,%esi
		mov    data_15b9c4,%eax
		lea    (%eax,%esi,1),%edx
		movswl %di,%eax
		cmpb   $0x1,0x1(%edx,%eax,1)
		je     jump_10221
		mov    data_15b9b4,%edx
		add    %esi,%edx
		cmpb   $0x0,0x1(%edx,%eax,1)
		jne    jump_10221
		imul   %ecx,%ebx
		mov    data_7cf1c,%ecx
		lea    (%ebx,%ebx,1),%edx
		add    %edx,%ecx
		mov    %eax,%edx
		cmpw   $0x7d00,0x2(%ecx,%edx,2)
		jb     jump_10221
		mov    data_15b9c0,%edx
		add    %ebx,%edx
		cmpb   $0x0,(%edx,%eax,1)
		jne    jump_10221
		mov    $0x4d,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_10221:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1189f:
/*----------------------------------------------------------------*/
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206


/*----------------------------------------------------------------*/
func_1199e:
/*----------------------------------------------------------------*/
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		call   func_2b206
		jmp    func_2b206
.data
data_11a43:
		.fill   0x1e
data_11a61:
		.fill   0x14
data_11a75:
		.fill   0x6
data_11a7b:
		.fill   0x14
data_11a8f:
		.fill   0xd
data_11a9c:
		.fill   0x14
data_11ab0:
		.string ".\\CSTLDATA\\"
		.fill   0x12
.text


/*----------------------------------------------------------------*/
func_11ace:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %esp,%edi
		mov    $data_50004,%esi
		lea    0x20(%esp),%edx
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cwtl
		lea    0x20(%esp),%edi
		mov    $data_50010,%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_11b02:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_11b1e
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_11b02
	jump_11b1e:
		pop    %edi
		mov    %esp,%edi
		lea    0x20(%esp),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_11b2e:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_11b4a
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_11b2e
	jump_11b4a:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x24(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_11b7f
		mov    %esp,%eax
		push   %eax
		push   $data_50015
		call   w_printf
		add    $0x8,%esp
		xor    %eax,%eax
		call   w_dos_exit
	jump_11b7f:
		mov    0x22(%esp),%eax
		mov    $data_7d7b8,%edx
		mov    $0x2,%ebx
		sar    $0x10,%eax
		xor    %esi,%esi
		call   w_dos_read
	jump_11b97:
		movswl %si,%ebp
		mov    %ebp,%ecx
		shl    $0x2,%ecx
		add    %ebp,%ecx
		mov    $data_7d020,%edx
		shl    $0x2,%ecx
		mov    0x22(%esp),%edi
		sub    %ebp,%ecx
		mov    $0x2,%ebx
		add    %ecx,%ecx
		sar    $0x10,%edi
		add    %ecx,%edx
		mov    %edi,%eax
		add    $0x6,%edx
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x0(%ebp,%ebp,1),%edx
		mov    %edi,%eax
		add    $data_7cfba,%edx
		call   w_dos_read
		cmpw   $0x0,data_7d026(%ecx)
		jle    jump_11c45
		cmpl   $0x0,data_7d028(%ecx)
		jne    jump_11bfe
		mov    $0x1388,%eax
		call   w_dos_malloc
		mov    %eax,data_7d028(%ecx)
	jump_11bfe:
		xor    %ebx,%ebx
	jump_11c00:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    data_7d028(%eax),%ecx
		movswl %bx,%edx
		inc    %ebx
		movw   $0x0,(%ecx,%edx,2)
		cmp    $0x9c4,%bx
		jl     jump_11c00
		mov    data_7d024(%eax),%ebx
		mov    data_7d028(%eax),%edx
		mov    0x22(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		add    %ebx,%ebx
		call   w_dos_read
	jump_11c45:
		inc    %esi
		cmp    $0x33,%si
		jl     jump_11b97
		mov    0x22(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x28,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_11c64:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		mov    %esp,%edi
		mov    $data_50004,%esi
		lea    0x2c(%esp),%edx
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cwtl
		lea    0x2c(%esp),%edi
		mov    $data_50010,%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_11c98:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_11cb4
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_11c98
	jump_11cb4:
		pop    %edi
		mov    %esp,%edi
		lea    0x2c(%esp),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_11cc4:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_11ce0
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_11cc4
	jump_11ce0:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x34(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_11e31
		call   func_19ba9
		mov    $0x6e,%eax
		mov    data_15b9cc,%edx
		mov    $0xd2,%ebx
		push   %edx
		mov    $0x90,%ecx
		mov    $0x50,%edx
		call   func_1843d
		push   $data_50025
		push   $0x52
		push   $0x72
		mov    $0x64,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x77,%ecx
		push   %ebx
		mov    $0x78,%eax
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_50030
		push   $0x66
		push   $0x96
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ecx
		mov    $0x78,%eax
		push   %ecx
		mov    %eax,%edx
		mov    $0x8b,%ecx
		call   func_1843d
		push   $data_50034
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_11dac:
		lea    0x20(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x20(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0x78,%esi
		jl     jump_11ded
		cmp    $0xc8,%esi
		jg     jump_11ded
		mov    data_7cf28,%ebp
		cmp    $0x64,%ebp
		jl     jump_11ded
		cmp    $0x78,%ebp
		jg     jump_11ded
		cmpl   $0x1,data_7cf20
		je     jump_11e25
	jump_11ded:
		mov    data_7cf24,%ebx
		cmp    $0x78,%ebx
		jl     jump_11dac
		cmp    $0xc8,%ebx
		jg     jump_11dac
		mov    data_7cf28,%esi
		cmp    $0x78,%esi
		jl     jump_11dac
		cmp    $0x8c,%esi
		jg     jump_11dac
		cmpl   $0x1,data_7cf20
		jne    jump_11dac
		mov    0x32(%esp),%eax
		jmp    jump_11f1d
	jump_11e25:
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
	jump_11e31:
		call   func_19ba9
		mov    %esp,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x38(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_11e7c
		mov    %esp,%eax
		push   %eax
		push   $data_5003a
		call   w_printf
		add    $0x8,%esp
		xor    %eax,%eax
		call   w_dos_exit
	jump_11e7c:
		mov    0x36(%esp),%eax
		mov    $data_7d7b8,%edx
		mov    $0x2,%ebx
		sar    $0x10,%eax
		call   w_dos_write
		xor    %edx,%edx
		mov    %dx,0x30(%esp)
	jump_11e99:
		mov    0x2e(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%eax
		shl    $0x2,%eax
		add    %edi,%eax
		mov    $data_7d020,%edx
		shl    $0x2,%eax
		mov    0x36(%esp),%esi
		sub    %edi,%eax
		mov    $0x2,%ebx
		lea    (%eax,%eax,1),%ecx
		sar    $0x10,%esi
		add    %ecx,%edx
		mov    %esi,%eax
		add    $0x6,%edx
		call   w_dos_write
		mov    $0x2,%ebx
		lea    (%edi,%edi,1),%edx
		mov    %esi,%eax
		add    $data_7cfba,%edx
		call   w_dos_write
		mov    data_7d028(%ecx),%eax
		test   %eax,%eax
		je     jump_11f09
		cmpw   $0x0,data_7d026(%ecx)
		jle    jump_11f09
		mov    data_7d024(%ecx),%ebx
		mov    %eax,%edx
		sar    $0x10,%ebx
		mov    %esi,%eax
		add    %ebx,%ebx
		call   w_dos_write
	jump_11f09:
		mov    0x30(%esp),%ecx
		inc    %ecx
		mov    %cx,0x30(%esp)
		cmp    $0x33,%cx
		jl     jump_11e99
		mov    0x36(%esp),%eax
	jump_11f1d:
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x3c,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_11f2d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
	jump_11f34:
		xor    %ecx,%ecx
		jmp    jump_11f48
	jump_11f38:
		mov    data_7d028(%eax),%eax
		movswl %cx,%edx
		inc    %ecx
		movw   $0x0,(%eax,%edx,2)
	jump_11f48:
		movswl %si,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		cmp    data_7d026(%eax),%cx
		jl     jump_11f38
		cmpw   $0x1,data_7d020(%eax)
		jne    jump_11f8c
		lea    0x140(%ebx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_82935(%edx,%eax,4),%al
		xor    %ah,%ah
		movswl %ax,%edx
		mov    %edx,%eax
		call   func_1a5ca
	jump_11f8c:
		movswl %si,%edx
		mov    %edx,%eax
		xor    %dh,%ah
		mov    %ah,data_7d7ef(%edx)
		mov    %edx,%eax
		xor    %edi,%edi
		shl    $0x2,%eax
		xor    %bl,%bl
		add    %edx,%eax
		lea    0x140(%edx),%ecx
		shl    $0x2,%eax
		inc    %esi
		sub    %edx,%eax
		mov    %bl,data_7d7bc(%edx)
		lea    (%eax,%eax,1),%ebx
		mov    %ecx,%eax
		mov    %di,data_7cf54(,%edx,2)
		shl    $0x2,%eax
		mov    %di,data_7d026(%ebx)
		sub    %ecx,%eax
		mov    %di,data_7d020(%ebx)
		xor    %bh,%bh
		movb   $0x0,data_82935(%ecx,%eax,4)
		mov    %bh,data_7d855(%edx)
		movb   $0x0,data_82934(%ecx,%eax,4)
		cmp    $0x33,%si
		jl     jump_11f34
		jmp    jump_15f62


/*----------------------------------------------------------------*/
func_11ffd:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %eax,%ebp
		mov    %edx,0xc(%esp)
		mov    %bl,0x20(%esp)
		mov    data_56bfc,%ax
		mov    $0x140,%ecx
		mov    %eax,0x14(%esp)
		mov    data_56bfa,%ax
		xor    %ebx,%ebx
		mov    %eax,0x10(%esp)
		call   func_19ba9
		call   func_21e29
	jump_12033:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_7d020(,%eax,2),%dx
		cmp    $0x1,%dx
		jne    jump_12070
		mov    data_543cc,%si
		mov    data_543ca,%eax
		add    %edx,%esi
		sar    $0x10,%eax
		mov    %si,data_543cc
		mov    %cx,data_83d84(,%eax,2)
	jump_12070:
		inc    %ebx
		inc    %ecx
		cmp    $0x33,%bx
		jl     jump_12033
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_1209c:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%ebx
		add    $0x6,%ebx
		mov    $0x18,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_7cf28,%eax
		sub    %edx,%ebx
		mov    %eax,%edx
		mov    $0x10,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_7cf28,%eax
		sub    %edx,%eax
		mov    %eax,%ecx
		movswl %bx,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%edx
		mov    %ax,0x0(%ebp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x4,%edx
		sbb    %edx,%eax
		sar    $0x4,%eax
		mov    0xc(%esp),%edx
		mov    %ax,(%edx)
		mov    0x18(%esp),%eax
		cmp    0x0(%ebp),%ax
		jne    jump_1211d
		mov    0x1c(%esp),%eax
		cmp    (%edx),%ax
		je     jump_12180
	jump_1211d:
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%edx
		mov    0x0(%ebp),%ax
		push   %edx
		mov    %ax,0x1c(%esp)
		mov    0x10(%esp),%eax
		push   $0x0
		mov    (%eax),%ax
		mov    0x1e(%esp),%edx
		mov    %ax,0x24(%esp)
		sar    $0x10,%edx
		mov    0x22(%esp),%ebx
		mov    %edx,%eax
		sar    $0x10,%ebx
		shl    $0x2,%eax
		shl    $0x4,%ebx
		sub    %edx,%eax
		lea    0x10(%ebx),%esi
		shl    $0x3,%eax
		lea    0x1(%ebx),%edx
		lea    0x10(%eax),%ecx
		sub    $0x7,%eax
		mov    %ecx,%ebx
		mov    %esi,%ecx
		call   func_183aa
	jump_12180:
		cmpl   $0x1,data_7cf20
		jne    jump_121db
		cmpb   $0x0,data_15ba22
		jne    jump_121db
		mov    0x18(%esp),%edx
		mov    data_56bfc,%ax
		add    %eax,%edx
		mov    %dx,0x0(%ebp)
		mov    0x1c(%esp),%edx
		mov    data_56bfa,%ax
		add    %eax,%edx
		mov    0xc(%esp),%eax
		mov    %dx,(%eax)
		mov    0x14(%esp),%eax
		mov    $0x1,%ch
		mov    %ax,data_56bfc
		mov    0x10(%esp),%eax
		mov    %ch,data_15ba22
		mov    %ax,data_56bfa
		mov    $0x1,%eax
		jmp    jump_1239d
	jump_121db:
		cmpl   $0x0,data_1a0214
		je     jump_1221a
		mov    data_56bfa,%cx
		cmp    $0x1,%cx
		jle    jump_1221a
		mov    %ecx,%esi
		dec    %esi
		mov    %si,data_56bfa
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_1221a:
		cmpl   $0x0,data_1a0234
		je     jump_12262
		mov    data_56bf8,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		dec    %eax
		cmp    %eax,%edx
		jge    jump_12262
		incw   data_56bfa
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_12262:
		cmpl   $0x0,data_1a0220
		je     jump_1229f
		mov    data_56bfc,%ax
		test   %ax,%ax
		jle    jump_1229f
		mov    %eax,%edx
		dec    %edx
		mov    %dx,data_56bfc
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_1229f:
		cmpl   $0x0,data_1a0228
		je     jump_122e6
		mov    data_56bfa,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		cmp    %eax,%edx
		jge    jump_122e6
		incw   data_56bfc
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x20(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_122e6:
		cmpl   $0x2,data_7cf20
		jne    jump_12313
		cmpb   $0x0,data_15ba22
		jne    jump_12313
		mov    0x14(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x10(%esp),%eax
		mov    %ax,data_56bfa
		xor    %eax,%eax
		jmp    jump_1239d
	jump_12313:
		cmpl   $0x0,data_1a01ac
		je     jump_12393
		mov    0x20(%esp),%dh
		cmp    $0x3,%dh
		jb     jump_12332
		jbe    jump_12337
		cmp    $0x4,%dh
		je     jump_12352
		jmp    jump_12378
	jump_12332:
		cmp    $0x2,%dh
		jne    jump_12378
	jump_12337:
		mov    0x14(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x10(%esp),%eax
		mov    %ax,data_56bfa
		mov    $0x7530,%eax
		jmp    jump_1239d
	jump_12352:
		xor    %ebx,%ebx
	jump_12354:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %dl,%dl
		mov    %dl,data_19e144(,%eax,8)
		inc    %ebx
		mov    %dl,data_19e149(,%eax,8)
		cmp    $0xaa,%bx
		jge    jump_12393
		jmp    jump_12354
	jump_12378:
		mov    0x14(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x10(%esp),%eax
		mov    %ax,data_56bfa
		mov    $0xff,%eax
		jmp    jump_1239d
	jump_12393:
		call   func_27bf2
		jmp    jump_1209c
	jump_1239d:
		add    $0x24,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_123a5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		push   %eax
		mov    %edx,%ebp
		mov    data_56bfc,%ax
		mov    $0x140,%ecx
		mov    %eax,0x18(%esp)
		mov    data_56bfa,%ax
		xor    %ebx,%ebx
		mov    %eax,0x14(%esp)
		call   func_19ba9
		call   func_21e29
	jump_123d5:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_7d020(,%eax,2),%dx
		cmp    $0x1,%dx
		jne    jump_12412
		mov    data_543cc,%si
		mov    data_543ca,%eax
		add    %edx,%esi
		sar    $0x10,%eax
		mov    %si,data_543cc
		mov    %cx,data_83d84(,%eax,2)
	jump_12412:
		inc    %ebx
		inc    %ecx
		cmp    $0x33,%bx
		jl     jump_123d5
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_1243d:
		lea    0x4(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x4(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%eax
		mov    %eax,%edx
		mov    $0x18,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_7cf24,%eax
		sub    %edx,%eax
		mov    %eax,%ebx
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x10,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_7cf28,%eax
		sub    %edx,%eax
		mov    %eax,%ecx
		movswl %bx,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    (%esp),%edx
		mov    %ax,(%edx)
		movswl %cx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x4,%edx
		sbb    %edx,%eax
		sar    $0x4,%eax
		mov    (%esp),%edx
		mov    %ax,0x0(%ebp)
		mov    0x10(%esp),%eax
		cmp    (%edx),%ax
		jne    jump_124c5
		mov    0x1c(%esp),%eax
		cmp    0x0(%ebp),%ax
		je     jump_12520
	jump_124c5:
		call   func_21e29
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    (%esp),%eax
		mov    data_15b9cc,%edx
		mov    (%eax),%ax
		push   %edx
		mov    %ax,0x14(%esp)
		push   $0x0
		mov    0x16(%esp),%ebx
		mov    0x0(%ebp),%ax
		sar    $0x10,%ebx
		mov    %ax,0x24(%esp)
		mov    %ebx,%eax
		mov    0x22(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%edx
		sub    %ebx,%eax
		shl    $0x4,%edx
		shl    $0x3,%eax
		lea    0x10(%edx),%ecx
		lea    0x10(%eax),%ebx
		inc    %edx
		sub    $0x7,%eax
		call   func_183aa
	jump_12520:
		cmpl   $0x1,data_7cf20
		jne    jump_12576
		cmpb   $0x0,data_15ba22
		jne    jump_12576
		mov    0x10(%esp),%ebx
		mov    data_56bfc,%ax
		mov    (%esp),%edx
		add    %ebx,%eax
		mov    %ax,(%edx)
		mov    0x1c(%esp),%ecx
		mov    data_56bfa,%ax
		add    %ecx,%eax
		inc    %eax
		mov    %ax,0x0(%ebp)
		mov    0x18(%esp),%eax
		mov    $0x1,%dh
		mov    %ax,data_56bfc
		mov    0x14(%esp),%eax
		mov    %dh,data_15ba22
	jump_1256b:
		mov    %ax,data_56bfa
		jmp    jump_17c39
	jump_12576:
		cmpl   $0x0,data_1a0214
		je     jump_125b4
		mov    data_56bfa,%bx
		cmp    $0x1,%bx
		jle    jump_125b4
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,data_56bfa
		call   func_21e29
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_125b4:
		cmpl   $0x0,data_1a0234
		je     jump_125fb
		mov    data_56bf8,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xd,%eax
		dec    %edx
		cmp    %edx,%eax
		jge    jump_125fb
		incw   data_56bfa
		call   func_21e29
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_125fb:
		cmpl   $0x0,data_1a0220
		je     jump_12637
		mov    data_56bfc,%di
		test   %di,%di
		jle    jump_12637
		mov    %edi,%eax
		dec    %eax
		mov    %ax,data_56bfc
		call   func_21e29
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_12637:
		cmpl   $0x0,data_1a0228
		je     jump_1267d
		mov    data_56bfa,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xd,%eax
		cmp    %edx,%eax
		jge    jump_1267d
		incw   data_56bfc
		call   func_21e29
		call   func_2294d
		mov    $0x5,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_1267d:
		cmpl   $0x2,data_7cf20
		jne    jump_126a2
		cmpb   $0x0,data_15ba22
		jne    jump_126a2
		mov    0x18(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x14(%esp),%eax
		jmp    jump_1256b
	jump_126a2:
		call   func_27bf2
		jmp    jump_1243d


/*----------------------------------------------------------------*/
func_126ac:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    $0x1040,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
	jump_126be:
		mov    data_7d020(%ecx),%esi
		mov    data_56bfa,%ebx
		sar    $0x10,%esi
		sar    $0x10,%ebx
		sub    %ebx,%esi
		mov    %esi,%ebx
		shl    $0x2,%ebx
		sub    %esi,%ebx
		mov    data_7d022(%ecx),%esi
		sar    $0x10,%esi
		mov    %esi,(%esp)
		mov    data_56bf8,%esi
		mov    (%esp),%ebp
		sar    $0x10,%esi
		mov    data_56bf6,%edi
		sub    %esi,%ebp
		sar    $0x10,%edi
		mov    %ebp,%esi
		mov    data_56bf4,%ebp
		shl    $0x3,%ebx
		sar    $0x10,%ebp
		shl    $0x4,%esi
		add    %ebp,%esi
		mov    data_15ba18,%ebp
		add    %ebx,%edi
		sar    $0x10,%ebp
		mov    data_15ba1a,%ebx
		mov    %ebp,(%esp)
		sub    %ebp,%esi
		mov    data_82936(%eax),%ebp
		sar    $0x10,%ebx
		sar    $0x10,%ebp
		add    %ebx,%edi
		sub    %edi,%ebp
		add    %ebx,%ebp
		mov    data_82938(%eax),%ebx
		mov    %ebp,0x4(%esp)
		sar    $0x10,%ebx
		mov    (%esp),%ebp
		sub    %esi,%ebx
		sub    %ebp,%ebx
		mov    %ebx,0x8(%esp)
		mov    data_7d7bc(%edx),%bl
		cmp    $0x1,%bl
		jb     jump_1277d
		cmp    $0x8,%bl
		ja     jump_1277d
		cmpb   $0x0,data_7d7ef(%edx)
		je     jump_1277d
		mov    0x4(%esp),%ebx
		add    %ebx,%edi
		mov    %di,data_82938(%eax)
		mov    0x8(%esp),%edi
		add    %edi,%esi
		jmp    jump_12784
	jump_1277d:
		mov    %di,data_82938(%eax)
	jump_12784:
		mov    %si,data_8293a(%eax)
		add    $0x26,%ecx
		inc    %edx
		add    $0xd,%eax
		cmp    $0x32,%edx
		jl     jump_126be
		add    $0xc,%esp
		jmp    jump_15f61

vtable_127a3:
		.long   func_12956
		.long   func_12956
		.long   func_1299f
		.long   func_129d8
		.long   func_12a40
		.long   func_12956
		.long   func_12a79
		.long   func_12a79
		.long   func_12aa0
		.long   func_12b07
		.long   func_12b26
		.long   func_12b90
		.long   func_12be2
		.long   func_12d6b
		.long   func_12d97
		.long   func_12dc7
		.long   func_12ddf
		.long   func_12e06
		.long   func_12ea7
		.long   func_12e47
		.long   func_1301a
		.long   func_1304d
		.long   func_13063
		.long   func_13097
		.long   func_130a7
		.long   func_1326a
		.long   func_132dd
		.long   func_132eb
		.long   func_1330d

vtable_12817:
		.long   func_13471
		.long   func_13491
		.long   func_134b1
		.long   func_134c0

vtable_12827:
		.long   func_135e5
		.long   func_13605
		.long   func_135e5
		.long   func_13625

vtable_12837:
		.long   func_13719
		.long   func_13739
		.long   func_13759
		.long   func_13768

vtable_12847:
		.long   func_13858
		.long   func_13863
		.long   func_13858
		.long   func_1386e


/*----------------------------------------------------------------*/
func_12857:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x6c,%esp
		mov    $0x7,%ecx
		mov    %esp,%edi
		mov    $0xa,%ebx
		xor    %edx,%edx
		mov    $data_11a43,%esi
		mov    %dx,0x50(%esp)
		mov    %bx,0x5c(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    0x50(%esp),%al
		mov    $0x140,%ecx
		add    $0xa,%al
		mov    %cx,0x60(%esp)
		mov    %al,0x68(%esp)
	jump_12895:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		cmpw   $0x0,data_7d026(,%eax,2)
		jg     jump_128c2
		cmpw   $0x0,data_7cfba(,%ebx,2)
		jle    jump_13b53
	jump_128c2:
		mov    0x4e(%esp),%edi
		sar    $0x10,%edi
		mov    %edi,%edx
		shl    $0x2,%edx
		add    %edi,%edx
		shl    $0x2,%edx
		sub    %edi,%edx
		add    %edx,%edx
		mov    data_7d7ef(%edi),%ah
		mov    data_7d028(%edx),%ebp
		test   %ah,%ah
		jne    jump_1336c
		lea    (%edi,%edi,1),%ecx
		mov    data_7cf52(%ecx),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		add    %ebp,%eax
		mov    data_7d7ba,%si
		mov    (%eax),%bx
		cmp    %si,%bx
		jne    jump_1336c
		mov    0x2(%eax),%bl
		mov    %bl,data_7d7bc(%edi)
		dec    %bl
		cmp    $0x1c,%bl
		ja     jump_1336c
		and    $0xff,%ebx
		shl    $0x2,%ebx
		mov    %ebx,0x40(%esp)
		lea    0x140(%edi),%ebx
		mov    %ebx,0x44(%esp)
		mov    %ebx,0x48(%esp)
		mov    0x44(%esp),%esi
		shl    $0x2,%ebx
		sub    %esi,%ebx
		shl    $0x2,%ebx
		add    %esi,%ebx
		mov    0x40(%esp),%esi
		jmp    *vtable_127a3(%esi)


/*----------------------------------------------------------------*/
func_12956:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    data_7cf52(,%eax,2),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%ebx
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x10,%eax
	jump_1298d:
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		sar    $0x10,%ebx
		imul   %ebx,%eax
		jmp    jump_12a1c


/*----------------------------------------------------------------*/
func_1299f:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    data_7cf52(,%eax,2),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%ebx
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x18,%eax
		jmp    jump_1298d


/*----------------------------------------------------------------*/
func_129d8:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    0x4e(%esp),%edx
		mov    data_7cf52(,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x140,%edx
		mov    0x2(%ebp,%eax,2),%ecx
	jump_129fa:
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    data_8293c(%edx,%eax,4),%bl
		mov    $0x18,%eax
	jump_12a0f:
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		sar    $0x10,%ecx
		imul   %ecx,%eax
	jump_12a1c:
		mov    %al,%dl
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    %dl,data_7d7ef(%eax)
	jump_12a2b:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		addw   $0x3,data_7cf54(,%eax,2)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12a40:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    0x4e(%esp),%edx
		mov    data_7cf52(,%eax,2),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x140,%edx
		mov    0x2(%ebp,%eax,2),%ecx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    data_8293c(%edx,%eax,4),%bl
		mov    $0x10,%eax
		jmp    jump_12a0f


/*----------------------------------------------------------------*/
func_12a79:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    data_7cf52(,%eax,2),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%ecx
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		jmp    jump_129fa


/*----------------------------------------------------------------*/
func_12aa0:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%si
		mov    %si,data_7d022(%edx)
		mov    0x6(%eax),%ax
		mov    %ax,data_7d024(%edx)
		mov    data_56bfc,%di
		mov    data_7d022(%edx),%ax
		sub    %edi,%eax
		imul   $0x18,%eax,%eax
		add    data_56bf8,%ax
		mov    data_56bfa,%di
		mov    %ax,data_82938(%ebx)
		mov    data_7d024(%edx),%ax
		sub    %edi,%eax
		mov    data_56bf6,%dx
		shl    $0x4,%eax
		add    %edx,%eax
		mov    %ax,data_8293a(%ebx)
	jump_12afa:
		addw   $0x4,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12b07:
/*----------------------------------------------------------------*/
		mov    data_7cf54(%ecx),%si
		mov    0x4(%eax),%al
		add    $0x3,%esi
		mov    %al,data_82935(%ebx)
		mov    %si,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12b26:
/*----------------------------------------------------------------*/
		mov    $data_7d020,%esi
		add    %edx,%esi
		lea    0x20(%esp),%edi
		add    $0xc,%esi
		push   %edi
	jump_12b35:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_12b51
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_12b35
	jump_12b51:
		pop    %edi
		cmpl   $0x0,data_52688
		jne    jump_12a2b
		mov    data_7cf52(%ecx),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%ebx
		mov    0x48(%esp),%ecx
		sar    $0x10,%ebx
		mov    data_7d03e(%edx),%eax
		lea    0x20(%esp),%edx
		sar    $0x10,%eax
		call   func_2708b
		mov    %ax,data_1a00ca
		jmp    jump_12a2b


/*----------------------------------------------------------------*/
func_12b90:
/*----------------------------------------------------------------*/
		mov    0x2(%eax),%edx
		sar    $0x10,%edx
		mov    0x6(%eax),%bl
		mov    %bl,data_7d88c(%edx)
		cmpb   $0x1,data_54040
		jne    jump_12bcd
		mov    0x4(%eax),%edx
		sar    $0x10,%edx
		mov    0x2(%eax),%eax
		push   %edx
		sar    $0x10,%eax
		push   %eax
		push   $data_5004b
		call   w_printf
		add    $0xc,%esp
		call   w_dos_getch
		call   w_dos_getch
	jump_12bcd:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		addw   $0x4,data_7cf54(,%eax,2)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12be2:
/*----------------------------------------------------------------*/
		movw   $0x1,data_7d020(%edx)
		mov    0x6(%eax),%cx
		mov    %cx,data_7d022(%edx)
		mov    0x8(%eax),%cx
		dec    %ecx
		mov    %cx,data_7d024(%edx)
		mov    data_56bfc,%si
		mov    data_7d022(%edx),%cx
		sub    %esi,%ecx
		imul   $0x18,%ecx,%ecx
		add    data_56bf8,%cx
		mov    data_7d024(%edx),%dx
		mov    %cx,data_82938(%ebx)
		sub    data_56bfa,%dx
		mov    data_56bf6,%si
		shl    $0x4,%edx
		add    %esi,%edx
		mov    %dx,data_8293a(%ebx)
		mov    0xa(%eax),%ax
		xor    %edi,%edi
		mov    %ax,data_82936(%ebx)
		mov    $0x1,%ah
		mov    %di,0x54(%esp)
		mov    %ah,data_8293c(%ebx)
	jump_12c5e:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		lea    (%ebx,%ebx,1),%eax
		mov    0x52(%esp),%edi
		mov    data_7cf52(%eax),%edx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    %eax,0x4c(%esp)
		lea    (%edx,%edi,1),%eax
		add    %eax,%eax
		lea    (%eax,%ebp,1),%esi
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    0xc(%esi),%cl
		mov    %cl,data_7d02c(%edi,%eax,1)
		mov    0x54(%esp),%ecx
		inc    %ecx
		mov    %cx,0x54(%esp)
		cmp    $0x14,%cx
		jl     jump_12c5e
		mov    0x52(%esp),%ecx
		sar    $0x10,%ecx
		add    %edx,%ecx
		mov    %esp,%edi
		mov    0xc(%ebp,%ecx,2),%cx
		mov    $data_50052,%esi
		mov    %cx,data_7d040(%eax)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x2(%ebp,%edx,2),%esi
		sar    $0x10,%esi
		mov    %esp,%edi
		mov    data_53460(,%esi,4),%esi
		lea    0xa(%ebx),%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_12ce7:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_12d03
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_12ce7
	jump_12d03:
		pop    %edi
		mov    %esp,%eax
		call   func_1a2d6
		lea    0x140(%ebx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    0x68(%esp),%dl
		mov    %dl,data_82935(%eax)
		mov    data_82934(%eax),%edx
		sar    $0x10,%edx
		push   %edx
		xor    %edx,%edx
		mov    0x62(%esp),%ebx
		mov    data_82935(%eax),%dl
		sar    $0x10,%ebx
		movswl %dx,%ecx
		mov    data_82938(%eax),%edx
		mov    data_82936(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a51d
		mov    0x4c(%esp),%eax
		addw   $0x1b,data_7cf54(%eax)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12d6b:
/*----------------------------------------------------------------*/
		xor    %esi,%esi
		mov    %si,data_7d020(%edx)
		mov    0x5a(%esp),%edx
		xor    %al,%al
		sar    $0x10,%edx
		mov    %al,data_82934(%ebx)
		mov    %edx,%eax
		call   func_1a5ca
		addw   $0x2,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12d97:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%dx
		mov    %dx,data_56bfc
		mov    data_7cf54(%ecx),%dx
		mov    0x6(%eax),%ax
		add    $0x4,%edx
		mov    %ax,data_56bfa
		mov    %dx,data_7cf54(%ecx)
		call   func_126ac
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12dc7:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%ax
		mov    %ax,data_82936(%ebx)
	jump_12dd2:
		addw   $0x3,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12ddf:
/*----------------------------------------------------------------*/
		cmpb   $0x1,data_5268c
		je     jump_12df7
		mov    $data_5005e,%eax
		call   func_18fd0
		jmp    jump_1336c
	jump_12df7:
		mov    $data_5005f,%eax
		call   func_34fbe
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12e06:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%ax
		cwtl
		call   func_20eb0
		mov    data_7cf52(%ecx),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		add    %eax,%ebp
		mov    0x6(%ebp),%ax
		mov    %ax,data_56bfc
		mov    data_7cf54(%ecx),%di
		mov    0x8(%ebp),%ax
		add    $0x5,%edi
		mov    %ax,data_56bfa
		mov    %di,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_12e47:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%cx
		movswl %cx,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		mov    %ebx,%edx
		sub    %ebx,%eax
		xor    %cl,%cl
		mov    %cl,data_82934(%edx,%eax,4)
		lea    -0x2(%ebx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %cl,data_19e144(,%eax,8)
		xor    %ch,%ch
		mov    %cl,data_19e149(,%eax,8)
		jmp    jump_12e87
	jump_12e7c:
		mov    data_15b9b4,%edx
		inc    %ecx
		movb   $0x0,(%edx,%eax,1)
	jump_12e87:
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		movswl %cx,%eax
		cmp    %edx,%eax
		jl     jump_12e7c
		jmp    jump_12a2b


/*----------------------------------------------------------------*/
func_12ea7:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%ax
		mov    %ax,0x64(%esp)
		mov    0x62(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movb   $0x1,data_19e144(,%eax,8)
		mov    $0x3,%edx
	jump_12ecb:
		mov    0x4e(%esp),%ecx
		sar    $0x10,%ecx
		add    %ecx,%ecx
		mov    data_7cf52(%ecx),%esi
		movswl %dx,%eax
		sar    $0x10,%esi
		mov    %eax,0x40(%esp)
		add    %esi,%eax
		add    %eax,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x62(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,0x44(%esp)
		mov    0x44(%esp),%ebx
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    0x40(%esp),%ebx
		shl    $0x3,%eax
		add    %eax,%ebx
		mov    %ebx,0x44(%esp)
		mov    (%edi),%bl
		mov    0x44(%esp),%edi
		inc    %edx
		mov    %bl,data_19e146(%edi)
		cmp    $0x17,%dx
		jl     jump_12ecb
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e145(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e147(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e15d(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e15f(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e161(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		mov    %bx,data_19e163(%eax)
		inc    %edx
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e165(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bx
		inc    %edx
		mov    %bx,data_19e167(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bl
		inc    %edx
		mov    %bl,data_19e169(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bl
		inc    %edx
		mov    %bl,data_19e16a(%eax)
		movswl %dx,%ebx
		add    %esi,%ebx
		mov    0x0(%ebp,%ebx,2),%bl
		mov    %bl,data_19e16b(%eax)
		inc    %edx
		mov    data_19e161(%eax),%ax
		mov    data_7cf54(%ecx),%bx
		shl    $0x4,%eax
		add    %edx,%ebx
		cwtl
		xor    %edx,%edx
		push   %eax
		mov    0x68(%esp),%eax
		mov    %bx,data_7cf54(%ecx)
		add    $0x2,%eax
		mov    $0x4,%ecx
		movswl %ax,%ebx
		xor    %eax,%eax
		call   func_1a51d
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_1301a:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%dx
		movswl %dx,%edx
		sub    $0x2,%edx
		mov    0x6(%eax),%bx
		mov    %edx,%eax
		mov    data_7cf54(%ecx),%si
		shl    $0x2,%eax
		add    $0x4,%esi
		add    %edx,%eax
		mov    %si,data_7cf54(%ecx)
		mov    %bx,data_19e15d(,%eax,8)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_1304d:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_237f0
		jmp    jump_12afa


/*----------------------------------------------------------------*/
func_13063:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%dl
		mov    %dl,data_7d7ef(%edi)
		mov    0x6(%eax),%dx
		mov    %dx,data_7d88a
		mov    data_7cf54(%ecx),%dx
		mov    0x8(%eax),%ax
		add    $0x5,%edx
		mov    %ax,data_7d888
		mov    %dx,data_7cf54(%ecx)
		jmp    jump_1336c


/*----------------------------------------------------------------*/
func_13097:
/*----------------------------------------------------------------*/
		mov    0x2(%eax),%eax
		sar    $0x10,%eax
		call   func_17eff
		jmp    jump_12dd2


/*----------------------------------------------------------------*/
func_130a7:
/*----------------------------------------------------------------*/
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		cmpw   $0x258,data_19763c(,%eax,2)
		jb     jump_130e9
		mov    data_15b9cc,%edi
		push   %edi
		mov    $data_172224,%ebx
		mov    $0x140,%ecx
		push   $0xc8
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
		mov    $data_5006a,%eax
		call   func_34fbe
		call   func_34261
	jump_130e9:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    %eax,0x44(%esp)
		mov    data_7cf52(%eax),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%eax
		sar    $0x10,%eax
		dec    %eax
		call   func_376d8
		mov    0x44(%esp),%eax
		mov    data_7cf52(%eax),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%eax
		sar    $0x10,%eax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $data_f10a4,%eax
		mov    %esp,%edi
		lea    0x1(%eax),%esi
		push   %edi
	jump_13137:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_13153
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_13137
	jump_13153:
		pop    %edi
		mov    %esp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%esi
		imul   $0x6,%esi,%esi
		mov    $0x13f,%ebx
		mov    $0x55,%edx
		xor    %eax,%eax
		mov    $0x73,%ecx
		call   func_18899
		mov    0x44(%esp),%eax
		mov    data_7cf52(%eax),%eax
		sar    $0x10,%eax
		mov    0x2(%ebp,%eax,2),%eax
		sar    $0x10,%eax
		mov    data_9922e(,%eax,4),%eax
		mov    $0x7d,%edx
		mov    0x6(%eax),%di
		mov    data_15b9cc,%ecx
		add    %edi,%edx
		mov    $0x96,%edi
		mov    %esi,0x58(%esp)
		add    0x4(%eax),%di
		mov    0xa(%eax),%ebx
		mov    %edi,%eax
		movswl %dx,%edx
		sub    %esi,%eax
		mov    %esp,%edi
		cwtl
		mov    $data_50089,%esi
		call   func_2b240
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_131d4:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_131f0
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_131d4
	jump_131f0:
		pop    %edi
		mov    %esp,%eax
		mov    0x58(%esp),%edi
		push   %eax
		mov    $0x96,%eax
		sub    %edi,%eax
		add    $0x1e,%eax
		push   $0x5f
		cwtl
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_1321a:
		lea    0x34(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x34(%esp),%esi
		mov    data_1a0168,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		test   %edx,%edx
		jne    jump_1324a
		cmpl   $0x1,data_7cf20
		je     jump_1324a
		xor    %bl,%bl
		mov    %bl,data_15ba22
	jump_1324a:
		cmpl   $0x0,data_1a0168
		jne    jump_1325c
		cmpl   $0x1,data_7cf20
		jne    jump_1321a
	jump_1325c:
		cmpb   $0x1,data_15ba22
		je     jump_1321a
		jmp    jump_12a2b


/*----------------------------------------------------------------*/
func_1326a:
/*----------------------------------------------------------------*/
		xor    %edi,%edi
		jmp    jump_132b9
	jump_1326e:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		mov    data_7cf52(,%eax,2),%esi
		mov    %ecx,%eax
		shl    $0x2,%eax
		add    %ecx,%eax
		shl    $0x3,%eax
		mov    %eax,%ecx
		shl    $0x4,%eax
		sub    %ecx,%eax
		sar    $0x10,%esi
		add    %ebx,%eax
		xor    %edx,%edx
		mov    0x4(%ebp,%esi,2),%cx
		mov    data_15fd2c(%eax),%dl
		cmp    %cx,%dx
		jne    jump_132b8
		xor    %ch,%dh
		mov    %dh,data_15fd2c(%eax)
		mov    %ebx,%eax
		call   func_3767b
		jmp    jump_12a2b
	jump_132b8:
		inc    %edi
	jump_132b9:
		mov    data_1a00ca,%ecx
		sar    $0x10,%ecx
		lea    (%ecx,%ecx,1),%eax
		mov    data_19763c(%eax),%ax
		movswl %di,%ebx
		and    $0xffff,%eax
		cmp    %eax,%ebx
		jl     jump_1326e
		jmp    jump_12a2b


/*----------------------------------------------------------------*/
func_132dd:
/*----------------------------------------------------------------*/
		mov    0x4(%eax),%al
		mov    %al,data_8293c(%ebx)
		jmp    jump_12dd2


/*----------------------------------------------------------------*/
func_132eb:
/*----------------------------------------------------------------*/
		cmpb   $0x1,game_cfg_music
		jne    jump_12a2b
		mov    0x2(%eax),%eax
		mov    $0x1,%edx
		sar    $0x10,%eax
		call   func_39e5e
		jmp    jump_12a2b


/*----------------------------------------------------------------*/
func_1330d:
/*----------------------------------------------------------------*/
		xor    %edi,%edi
	jump_1330f:
		mov    0x4e(%esp),%ecx
		sar    $0x10,%ecx
		add    %ecx,%ecx
		mov    data_7cf52(%ecx),%edx
		movswl %di,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    0x4(%ebp,%edx,2),%dl
		inc    %edi
		mov    %dl,(%esp,%eax,1)
		cmp    $0xd,%di
		jl     jump_1330f
		mov    %esp,%eax
		mov    $0xa,%edx
		call   func_39431
		mov    data_7cf52(%ecx),%eax
		sar    $0x10,%eax
		mov    0x1c(%ebp,%eax,2),%ebx
		xor    %eax,%eax
		mov    game_cfg_sound,%al
		imul   $0xa,%eax,%eax
		mov    $0xa,%edx
		sar    $0x10,%ebx
		call   func_394d1
		addw   $0x10,data_7cf54(%ecx)
	jump_1336c:
		mov    0x4e(%esp),%ecx
		sar    $0x10,%ecx
		cmpb   $0x0,data_7d7ef(%ecx)
		jbe    jump_13b0e
		lea    0x140(%ecx),%eax
		mov    %eax,%ebp
		shl    $0x2,%ebp
		sub    %eax,%ebp
		shl    $0x2,%ebp
		mov    data_7d7bc(%ecx),%dl
		add    %eax,%ebp
		cmp    $0x5,%dl
		jb     jump_133da
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		add    %ecx,%ebx
		shl    $0x2,%ebx
		sub    %ecx,%ebx
		add    %ebx,%ebx
		cmp    $0x5,%dl
		jbe    jump_1390d
		cmp    $0x7,%dl
		jb     jump_13970
		jbe    jump_139db
		cmp    $0x8,%dl
		jbe    jump_13a54
		cmp    $0x17,%dl
		je     jump_13ac9
		jmp    jump_13b0e
	jump_133da:
		cmp    $0x2,%dl
		jb     jump_133f3
		jbe    jump_13574
		cmp    $0x3,%dl
		jbe    jump_136d9
		jmp    jump_1381c
	jump_133f3:
		cmp    $0x1,%dl
		jne    jump_13b0e
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    data_8293a(%edx),%di
		mov    data_8293c(%ebx,%eax,4),%al
		xor    %ah,%ah
		sub    %eax,%edi
		mov    0x4e(%esp),%eax
		mov    %di,data_8293a(%edx)
		sar    $0x10,%eax
		xor    %edx,%edx
		mov    data_7d7ef(%eax),%dl
		sar    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		ja     jump_134de
		jmp    *vtable_12817(,%edx,4)


/*----------------------------------------------------------------*/
func_13471:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
	jump_1347e:
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x19,data_82936(%edx,%eax,4)
		jmp    jump_134de


/*----------------------------------------------------------------*/
func_13491:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x18,data_82936(%edx,%eax,4)
		jmp    jump_134de


/*----------------------------------------------------------------*/
func_134b1:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		add    $0x140,%edx
		jmp    jump_1347e


/*----------------------------------------------------------------*/
func_134c0:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x1a,data_82936(%edx,%eax,4)
	jump_134de:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		mov    data_7d7ef(%ebx),%ah
		dec    %ah
		lea    0x140(%ebx),%edx
		mov    %ah,data_7d7ef(%ebx)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x10,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    data_7d7ef(%ebx),%dl
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_13547
		cmpb   $0x0,data_7d7ef(%ebx)
		je     jump_13547
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		decw   data_7d024(,%eax,2)
	jump_13547:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,data_7d7ef(%edx)
		jne    jump_13b0e
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		decw   data_7d024(,%eax,2)
		jmp    jump_13b0e
	jump_13574:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    data_8293c(%ebx,%eax,4),%al
		mov    data_8293a(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    0x4e(%esp),%eax
		mov    %bx,data_8293a(%edx)
		sar    $0x10,%eax
		xor    %edx,%edx
		mov    data_7d7ef(%eax),%dl
		sar    $0x2,%edx
		mov    $0x4,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		ja     jump_13643
		jmp    *vtable_12827(,%edx,4)


/*----------------------------------------------------------------*/
func_135e5:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x3,data_82936(%edx,%eax,4)
		jmp    jump_13643


/*----------------------------------------------------------------*/
func_13605:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		add    $0x140,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x2,data_82936(%edx,%eax,4)
		jmp    jump_13643


/*----------------------------------------------------------------*/
func_13625:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0x4,data_82936(%edx,%eax,4)
	jump_13643:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		lea    0x140(%ebx),%edx
		mov    %edx,%eax
		mov    data_7d7ef(%ebx),%cl
		shl    $0x2,%eax
		dec    %cl
		sub    %edx,%eax
		mov    %cl,data_7d7ef(%ebx)
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x10,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    data_7d7ef(%ebx),%dl
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_136ac
		cmpb   $0x0,data_7d7ef(%ebx)
		je     jump_136ac
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		incw   data_7d024(,%eax,2)
	jump_136ac:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,data_7d7ef(%edx)
		jne    jump_13b0e
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		incw   data_7d024(,%eax,2)
		jmp    jump_13b0e
	jump_136d9:
		mov    $0x4,%ebx
		mov    data_82938(%ebp),%si
		xor    %edx,%edx
		xor    %eax,%eax
		mov    data_7d7ef(%ecx),%dl
		mov    data_8293c(%ebp),%al
		sar    $0x2,%edx
		sub    %eax,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %si,data_82938(%ebp)
		cmp    $0x3,%edx
		ja     jump_13786
		jmp    *vtable_12837(,%edx,4)


/*----------------------------------------------------------------*/
func_13719:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		add    $0x140,%edx
	jump_13726:
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0xe,data_82936(%edx,%eax,4)
		jmp    jump_13786


/*----------------------------------------------------------------*/
func_13739:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0xd,data_82936(%edx,%eax,4)
		jmp    jump_13786


/*----------------------------------------------------------------*/
func_13759:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		jmp    jump_13726


/*----------------------------------------------------------------*/
func_13768:
/*----------------------------------------------------------------*/
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		movw   $0xf,data_82936(%edx,%eax,4)
	jump_13786:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		mov    data_7d7ef(%ebx),%ah
		dec    %ah
		lea    0x140(%ebx),%edx
		mov    %ah,data_7d7ef(%ebx)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x18,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    data_7d7ef(%ebx),%dl
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_137ef
		cmpb   $0x0,data_7d7ef(%ebx)
		je     jump_137ef
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		decw   data_7d022(,%eax,2)
	jump_137ef:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x0,data_7d7ef(%eax)
		jne    jump_13b0e
		mov    %eax,%edx
	jump_13805:
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		decw   data_7d022(,%eax,2)
		jmp    jump_13b0e
	jump_1381c:
		mov    data_82938(%ebp),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    data_7d7ef(%ecx),%dl
		mov    data_8293c(%ebp),%al
		sar    $0x2,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		mov    %bx,data_82938(%ebp)
		mov    $0x4,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x3,%edx
		ja     jump_13877
		jmp    *vtable_12847(,%edx,4)


/*----------------------------------------------------------------*/
func_13858:
/*----------------------------------------------------------------*/
		movw   $0x24,data_82936(%ebp)
		jmp    jump_13877


/*----------------------------------------------------------------*/
func_13863:
/*----------------------------------------------------------------*/
		movw   $0x23,data_82936(%ebp)
		jmp    jump_13877


/*----------------------------------------------------------------*/
func_1386e:
/*----------------------------------------------------------------*/
		movw   $0x25,data_82936(%ebp)
	jump_13877:
		mov    0x4e(%esp),%ebx
		sar    $0x10,%ebx
		lea    0x140(%ebx),%edx
		mov    %edx,%eax
		mov    data_7d7ef(%ebx),%cl
		shl    $0x2,%eax
		dec    %cl
		sub    %edx,%eax
		mov    %cl,data_7d7ef(%ebx)
		xor    %ecx,%ecx
		mov    data_8293c(%edx,%eax,4),%cl
		mov    $0x18,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    data_7d7ef(%ebx),%dl
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    jump_138e0
		cmpb   $0x0,data_7d7ef(%ebx)
		je     jump_138e0
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		incw   data_7d022(,%eax,2)
	jump_138e0:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,data_7d7ef(%edx)
		jne    jump_13b0e
		mov    %edx,%eax
	jump_138f6:
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		incw   data_7d022(,%eax,2)
		jmp    jump_13b0e
	jump_1390d:
		xor    %eax,%eax
		mov    data_8293a(%ebp),%si
		mov    data_8293c(%ebp),%al
		sub    %eax,%esi
		decb   data_7d7ef(%ecx)
		mov    $0x10,%eax
		mov    %si,data_8293a(%ebp)
		mov    %eax,%edx
		movzbl data_8293c(%ebp),%esi
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_7d7ef(%ecx),%dl
		mov    %eax,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_13547
		cmpb   $0x0,data_7d7ef(%ecx)
		je     jump_13547
		decw   data_7d024(%ebx)
		jmp    jump_13547
	jump_13970:
		mov    data_8293a(%ebp),%si
		xor    %eax,%eax
		mov    data_7d7ef(%ecx),%dl
		mov    data_8293c(%ebp),%al
		dec    %dl
		add    %eax,%esi
		mov    %dl,data_7d7ef(%ecx)
		mov    $0x10,%eax
		mov    %si,data_8293a(%ebp)
		mov    %eax,%edx
		movzbl data_8293c(%ebp),%esi
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_7d7ef(%ecx),%dl
		mov    %eax,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_136ac
		cmpb   $0x0,data_7d7ef(%ecx)
		je     jump_136ac
		incw   data_7d024(%ebx)
		jmp    jump_136ac
	jump_139db:
		mov    data_82938(%ebp),%si
		xor    %eax,%eax
		mov    data_7d7ef(%ecx),%dh
		mov    data_8293c(%ebp),%al
		dec    %dh
		sub    %eax,%esi
		mov    %dh,data_7d7ef(%ecx)
		mov    $0x18,%eax
		mov    %si,data_82938(%ebp)
		mov    %eax,%edx
		movzbl data_8293c(%ebp),%esi
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_7d7ef(%ecx),%dl
		mov    %eax,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_13a39
		cmpb   $0x0,data_7d7ef(%ecx)
		je     jump_13a39
		decw   data_7d022(%ebx)
	jump_13a39:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		cmpb   $0x0,data_7d7ef(%edx)
		jne    jump_13b0e
		mov    %edx,%eax
		jmp    jump_13805
	jump_13a54:
		mov    data_82938(%ebp),%si
		xor    %eax,%eax
		mov    data_7d7ef(%ecx),%dh
		mov    data_8293c(%ebp),%al
		dec    %dh
		add    %eax,%esi
		mov    %dh,data_7d7ef(%ecx)
		mov    $0x18,%eax
		mov    %si,data_82938(%ebp)
		mov    %eax,%edx
		movzbl data_8293c(%ebp),%esi
		sar    $0x1f,%edx
		idiv   %esi
		xor    %edx,%edx
		mov    data_7d7ef(%ecx),%dl
		mov    %eax,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_13ab2
		cmpb   $0x0,data_7d7ef(%ecx)
		je     jump_13ab2
		incw   data_7d022(%ebx)
	jump_13ab2:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x0,data_7d7ef(%eax)
		jne    jump_13b0e
		mov    %eax,%edx
		jmp    jump_138f6
	jump_13ac9:
		mov    data_7d88a,%ax
		mov    %ax,data_15ba1c
		neg    %eax
		mov    %ax,data_15ba1c
		mov    data_7d888,%ax
		mov    %ax,data_15ba1a
		call   func_126ac
		mov    data_7d7ef(%ecx),%ah
		dec    %ah
		mov    %ah,data_7d7ef(%ecx)
		jne    jump_13b0e
		xor    %edx,%edx
		mov    %dx,data_15ba1c
		mov    %dx,data_15ba1a
	jump_13b0e:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_7d020(,%eax,2),%cx
		cmp    $0x1,%cx
		jne    jump_13b53
		mov    0x60(%esp),%edx
		mov    data_543cc,%si
		mov    data_543ca,%eax
		add    %ecx,%esi
		sar    $0x10,%eax
		mov    %si,data_543cc
		mov    %dx,data_83d84(,%eax,2)
	jump_13b53:
		mov    0x5c(%esp),%edi
		mov    0x68(%esp),%bh
		mov    0x60(%esp),%eax
		mov    0x50(%esp),%edx
		inc    %edi
		inc    %bh
		inc    %eax
		inc    %edx
		mov    %di,0x5c(%esp)
		mov    %bh,0x68(%esp)
		mov    %ax,0x60(%esp)
		mov    %dx,0x50(%esp)
		cmp    $0x33,%dx
		jl     jump_12895
		add    $0x6c,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_13b8d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    $0x1,%ebx
		mov    data_56bfc,%dx
		mov    data_15ba1c,%di
		mov    data_15ba1a,%si
		cwtl
		mov    %edx,(%esp)
		mov    data_56bfa,%dx
		xor    %ecx,%ecx
		mov    %edx,0xc(%esp)
		mov    data_56bf8,%dx
		mov    data_15ba23,%cl
		mov    %edx,0x4(%esp)
		mov    data_56bf6,%dx
		call   func_11ace
		mov    %edx,0x8(%esp)
		xor    %edx,%edx
		mov    %bx,data_7d78c
		mov    %dx,data_15ba1c
		mov    %dx,data_15ba1a
		mov    %dx,data_7d7ba
		mov    %dx,data_543cc
	jump_13c06:
		mov    data_7d7ba,%ax
		cmp    data_7d7b8,%ax
		jge    jump_13cae
		call   func_12857
		call   func_21d70
		call   func_21e29
		call   func_13d04
		call   func_2294d
		xor    %ebx,%ebx
	jump_13c34:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpw   $0x1,data_7d020(,%eax,2)
		je     jump_13c55
		inc    %ebx
		cmp    $0x32,%bx
		jl     jump_13c34
	jump_13c55:
		cmp    $0x32,%bx
		je     jump_13c65
		mov    data_15b9cc,%eax
		call   func_2b470
	jump_13c65:
		cmpw   $0x0,data_7d7ba
		jne    jump_13c80
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_20118
	jump_13c80:
		incw   data_7d7ba
		mov    data_7d7b8,%edx
		sar    $0x10,%edx
		mov    $0x3c,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_13c06
		call   func_399ac
		jmp    jump_13c06
	jump_13cae:
		call   func_11f2d
		mov    (%esp),%eax
		mov    %ax,data_56bfc
		mov    0xc(%esp),%eax
		mov    %ax,data_56bfa
		mov    0x4(%esp),%eax
		mov    %ax,data_56bf8
		mov    0x8(%esp),%eax
		mov    %ax,data_56bf6
		xor    %eax,%eax
		mov    %di,data_15ba1c
		mov    data_15ba23,%al
		mov    %si,data_15ba1a
		cmp    %ax,%cx
		je     jump_13cfc
		movswl %cx,%eax
		call   func_20eb0
	jump_13cfc:
		add    $0x10,%esp
		jmp    jump_15f62


/*----------------------------------------------------------------*/
func_13d04:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x140,%esi
	jump_13d0e:
		movswl %si,%ebx
		lea    -0x140(%ebx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpw   $0x1,data_7d020(,%eax,2)
		jne    jump_13d88
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    data_82938(%eax),%bx
		cmp    $0xa,%bx
		jle    jump_13d88
		cmp    $0x131,%bx
		jge    jump_13d88
		mov    data_82938(%eax),%edx
		sar    $0x10,%edx
		cmp    $0xfffffffb,%edx
		jle    jump_13d88
		mov    data_8293a(%eax),%di
		cmp    $0xc8,%di
		jge    jump_13d88
		mov    data_15b9cc,%ecx
		mov    %edi,%edx
		mov    %ebx,%eax
		mov    $data_56c00,%ebx
		add    $0x9,%edx
		sub    $0x8,%eax
		movswl %dx,%edx
		cwtl
		call   w_game_copy_ff
	jump_13d88:
		inc    %esi
		cmp    $0x173,%si
		jl     jump_13d0e
		jmp    jump_15f62


/*----------------------------------------------------------------*/
func_13d99:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,data_15ba1c
		mov    %dx,data_15ba1a
		mov    %dx,data_7d7ba
		mov    %dx,data_543cc
		mov    $0x1,%edx
		mov    %dx,data_7d78c
		mov    %edx,%esi
	jump_13dc8:
		mov    data_7d7ba,%ax
		cmp    data_7d7b8,%ax
		jge    jump_13e20
		call   func_12857
		call   func_21d70
		call   func_21e29
		call   func_13d04
		call   func_2294d
		xor    %edx,%edx
		xor    %eax,%eax
	jump_13df4:
		cmp    data_7d020(%eax),%si
		je     jump_13e08
		add    $0x26,%eax
		inc    %edx
		cmp    $0x76c,%eax
		jl     jump_13df4
	jump_13e08:
		cmp    $0x32,%edx
		je     jump_13e17
		mov    data_15b9cc,%eax
		call   func_2b470
	jump_13e17:
		incw   data_7d7ba
		jmp    jump_13dc8
	jump_13e20:
		xor    %edx,%edx
		xor    %eax,%eax
	jump_13e24:
		mov    data_7cf54(%eax),%bx
		inc    %edx
		mov    %bx,data_7cfba(%eax)
		xor    %bl,%bl
		add    $0x2,%eax
		mov    %bl,data_7d854(%edx)
		cmp    $0x33,%edx
		jl     jump_13e24
		pop    %esi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13e47:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %edi
		mov    $0x1,%edx
		mov    $0x1,%edi
		mov    %edx,data_52688
		xor    %edx,%edx
		mov    %di,data_7d78c
		mov    %dx,data_15ba1c
		mov    %dx,data_15ba1a
		mov    %dx,data_7d7ba
		mov    %dx,data_543cc
	jump_13e7f:
		mov    data_7d7ba,%ax
		cmp    data_7d7b8,%ax
		jge    jump_13ea6
		call   func_12857
		call   func_21e29
		call   func_2294d
		incw   data_7d7ba
		jmp    jump_13e7f
	jump_13ea6:
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %bx,data_543cc
	jump_13eb3:
		mov    data_7cf54(%eax),%bx
		inc    %edx
		mov    %bx,data_7cfba(%eax)
		xor    %bl,%bl
		add    $0x2,%eax
		mov    %bl,data_7d854(%edx)
		cmp    $0x33,%edx
		jl     jump_13eb3
		xor    %ebx,%ebx
		mov    %ebx,data_52688
		pop    %edi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_13ede:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %eax,%edi
		mov    %dx,0x20(%esp)
		mov    %bx,0x1c(%esp)
		mov    %cx,0x24(%esp)
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		xor    %esi,%esi
	jump_13f06:
		mov    data_15b9cc,%edx
		push   %edx
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $0x50,%ebx
		add    %edx,%edx
		xor    %eax,%eax
		lea    0x11(%edx),%ecx
		inc    %esi
		call   func_1843d
		cmp    $0x7,%si
		jl     jump_13f06
		push   $data_5008f
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50096
		push   $0x14
		push   $0x1
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500a1
		push   $0x4a
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500a9
		push   $0x5c
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500b1
		push   $0x6e
		push   $0x4
		call   func_2c6ab
		movswl %di,%eax
		shl    $0x6,%eax
		mov    data_921ae(%eax),%eax
		mov    0xa(%eax),%ebx
		add    $0xc,%esp
		test   %ebx,%ebx
		je     jump_13fac
		mov    $0xe6,%eax
		mov    $0x5a,%edx
		mov    data_15b9cc,%ecx
		call   func_2b240
	jump_13fac:
		mov    %esp,%edi
		mov    0x1e(%esp),%eax
		lea    0x14(%esp),%edx
		mov    $0xa,%ebx
		mov    $data_500b8,%esi
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		mov    %esp,%edi
		lea    0x14(%esp),%esi
		mov    $0x78,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_13fdf:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_13ffb
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_13fdf
	jump_13ffb:
		pop    %edi
		mov    data_15b9cc,%ecx
		mov    $0x12c,%ebx
		push   %ecx
		mov    $0xc8,%eax
		mov    $0x8b,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0x7a
		lea    0x8(%esp),%edi
		push   $0xcc
		mov    $data_500c1,%esi
		lea    0x20(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x1a(%esp),%eax
		mov    %esp,%edi
		sar    $0x10,%eax
		lea    0x14(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_14059:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_14075
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_14059
	jump_14075:
		pop    %edi
		mov    $0xc8,%eax
		mov    data_15b9cc,%esi
		mov    $0x8c,%edx
		push   %esi
		mov    $0x12c,%ebx
		mov    $0x9f,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0x8e
		lea    0x8(%esp),%edi
		push   $0xcc
		lea    0x20(%esp),%edx
		mov    $data_500ca,%esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x22(%esp),%eax
		mov    %esp,%edi
		sar    $0x10,%eax
		lea    0x14(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_140dd:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_140f9
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_140dd
	jump_140f9:
		pop    %edi
		mov    $0xc8,%eax
		mov    data_15b9cc,%edi
		mov    $0xa0,%edx
		push   %edi
		mov    $0x12c,%ebx
		mov    $0xb3,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0xa2
		push   $0xcc
		mov    $data_500d5,%esi
		lea    0xc(%esp),%edi
		call   func_2c6ab
		add    $0xc,%esp
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %esp,%edi
		mov    0x38(%esp),%esi
		mov    $0xb4,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_14150:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1416c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_14150
	jump_1416c:
		pop    %edi
		mov    data_15b9cc,%ebp
		mov    $0x12c,%ebx
		push   %ebp
		mov    $0xa0,%eax
		mov    $0xc7,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0xb6
		push   $0xa4
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x3a(%esp),%eax
		sar    $0x10,%eax
		mov    data_5eb39(,%eax,4),%edx
		push   %edx
		push   $0x1e
		push   $0x64
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_141d0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		mov    %esp,%edi
		mov    $data_11a61,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x14(%esp),%edi
		mov    $data_11a75,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		call   func_21e29
		xor    %esi,%esi
	jump_141fc:
		mov    data_15b9cc,%edx
		push   %edx
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $0x50,%ebx
		add    %edx,%edx
		xor    %eax,%eax
		lea    0x11(%edx),%ecx
		inc    %esi
		call   func_1843d
		cmp    $0x7,%si
		jl     jump_141fc
		push   $data_500dc
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500e6
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500ef
		push   $0x26
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_500f9
		push   $0x38
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50103
		push   $0x4a
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5010d
		push   $0x5c
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50117
		push   $0x6d
		push   $0x10
		mov    $data_16e78c,%edx
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x20(%esp),%ebx
		mov    0x59(%esp),%eax
		lea    0x1c(%esp),%ecx
		sar    $0x10,%eax
		call   func_24ba4
		mov    $0x64,%eax
		mov    $data_16e78c,%ebx
		mov    data_15b9cc,%ecx
		xor    %edx,%edx
		call   func_2b240
		mov    0x57(%esp),%eax
		sar    $0x10,%eax
		shl    $0x6,%eax
		mov    data_921ae(%eax),%eax
		mov    $0x12,%edx
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    $0xe6,%eax
		call   func_2b240
		mov    $0xc8,%eax
		mov    data_15b9cc,%ebx
		mov    $0x32,%edx
		push   %ebx
		mov    $0x46,%ecx
		mov    $0x12c,%ebx
		call   func_1851e
		lea    0x41(%esp),%eax
		push   %eax
		push   $0x34
		lea    0x8(%esp),%edi
		push   $0xcc
		mov    $data_5011c,%esi
		lea    0x20(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    0x63(%esp),%al
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		mov    %esp,%edi
		lea    0x14(%esp),%esi
		mov    $0x64,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1435d:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_14379
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1435d
	jump_14379:
		pop    %edi
		mov    data_15b9cc,%ecx
		mov    $0x12c,%ebx
		push   %ecx
		mov    $0xc8,%eax
		mov    $0x77,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0x66
		lea    0x8(%esp),%edi
		push   $0xcc
		mov    $data_50123,%esi
		lea    0x20(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    0x62(%esp),%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		mov    %esp,%edi
		lea    0x14(%esp),%esi
		mov    $0x78,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_143dd:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_143f9
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_143dd
	jump_143f9:
		pop    %edi
		mov    data_15b9cc,%esi
		mov    $0x12c,%ebx
		push   %esi
		mov    $0xc8,%eax
		mov    $0x8b,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0x7a
		lea    0x8(%esp),%edi
		push   $0xcc
		lea    0x20(%esp),%edx
		mov    $data_5012e,%esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x53(%esp),%eax
		mov    %esp,%edi
		sar    $0x10,%eax
		lea    0x14(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_14459:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_14475
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_14459
	jump_14475:
		pop    %edi
		mov    $0xc8,%eax
		mov    data_15b9cc,%edi
		mov    $0x8c,%edx
		push   %edi
		mov    $0x12c,%ebx
		mov    $0x9f,%ecx
		call   func_1851e
		mov    %esp,%eax
		push   %eax
		push   $0x8e
		push   $0xcc
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x24,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    $0x28

vtable_144c7:
		.long   func_145fd
		.long   func_14607
		.long   func_1461a
		.long   func_14744
		.long   func_1485b
		.long   func_1486c
		.long   func_1487c


/*----------------------------------------------------------------*/
func_144e3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		call   func_3197d
		lea    0x48(%esp),%eax
		lea    0x44(%esp),%edx
		mov    $0x5,%ebx
		call   func_11ffd
		test   %ax,%ax
		je     jump_14b22
		mov    $0x2,%edx
		call   func_19b67
		mov    %dx,0x40(%esp)
	jump_1451b:
		xor    %eax,%eax
		mov    0x40(%esp),%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x1,data_19e144(%eax)
		je     jump_14541
		cmpb   $0x0,data_19e149(%eax)
		je     jump_14552
	jump_14541:
		mov    0x40(%esp),%ebx
		inc    %ebx
		mov    %bx,0x40(%esp)
		cmp    $0xb5,%bx
		jbe    jump_1451b
	jump_14552:
		mov    0x40(%esp),%eax
		sub    $0x2,%eax
		mov    0x40(%esp),%esi
		mov    %eax,0x4c(%esp)
		cmp    $0xb5,%si
		jne    jump_14581
		push   $data_50139
		call   w_printf
		add    $0x4,%esp
		call   w_dos_getch
	jump_1457a:
		xor    %eax,%eax
		jmp    jump_14b22
	jump_14581:
		mov    0x48(%esp),%eax
		mov    $0x8,%bl
		mov    $0x4,%bh
		mov    $0x4,%edi
		mov    %ax,0x1(%esp)
		mov    0x44(%esp),%eax
		mov    %bl,0x27(%esp)
		dec    %eax
		mov    %bh,0x26(%esp)
		mov    %ax,0x3(%esp)
		xor    %eax,%eax
		mov    %di,0x1d(%esp)
		mov    %ax,0x1f(%esp)
		mov    $0x14,%ebp
	jump_145b6:
		mov    $0xa,%ecx
		sub    $0x28,%esp
		lea    0x28(%esp),%esi
		mov    %esp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		call   func_141d0
		push   $0x0
		push   $0x11
		mov    $0x56,%edx
		xor    %ebx,%ebx
		push   $0x56
		mov    $0x7e,%ecx
		xor    %eax,%eax
		call   func_31a49
		mov    %eax,%ebx
		cmp    $0x6,%ax
		ja     jump_14894
		and    $0xffff,%eax
		jmp    *vtable_144c7(,%eax,4)


/*----------------------------------------------------------------*/
func_145fd:
/*----------------------------------------------------------------*/
		call   func_319db
		jmp    jump_1457a


/*----------------------------------------------------------------*/
func_14607:
/*----------------------------------------------------------------*/
		mov    $data_5014f,%eax
		lea    0x5(%esp),%edx
		call   func_2817a
		jmp    jump_1488a


/*----------------------------------------------------------------*/
func_1461a:
/*----------------------------------------------------------------*/
		mov    data_5268d,%eax
		mov    %ebp,%edx
		mov    $0x1,%ch
		call   func_2d777
		mov    %ch,data_15ba22
	jump_1462e:
		lea    0x34(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x34(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_1473a
		cmpb   $0x0,data_15ba22
		jne    jump_1473a
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_146a8
		cmp    $0x13f,%esi
		jg     jump_146a8
		mov    data_7cf28,%eax
		test   %eax,%eax
		jl     jump_146a8
		cmp    $0x63,%eax
		jg     jump_146a8
		mov    data_5268d,%ecx
		test   %ecx,%ecx
		jle    jump_14694
		lea    -0x5(%ecx),%esi
		mov    %esi,data_5268d
	jump_14694:
		mov    data_5268d,%eax
		mov    %ebp,%edx
		mov    $0x1,%ch
		call   func_2d777
		mov    %ch,data_15ba22
	jump_146a8:
		mov    data_7cf24,%edi
		cmp    $0x118,%edi
		jl     jump_146fb
		cmp    $0x13f,%edi
		jge    jump_146fb
		mov    data_7cf28,%edx
		cmp    $0x64,%edx
		jl     jump_146fb
		cmp    $0xc7,%edx
		jg     jump_146fb
		mov    data_5268d,%esi
		cmp    $0xd9,%esi
		jge    jump_146e8
		lea    0x5(%esi),%edi
		mov    %edi,data_5268d
	jump_146e8:
		mov    data_5268d,%eax
		mov    %ebp,%edx
		call   func_2d777
		movb   $0x1,data_15ba22
	jump_146fb:
		cmpl   $0x118,data_7cf24
		jge    jump_1473a
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		add    data_5268d,%eax
		mov    %ax,0x1d(%esp)
		mov    $0x1,%ah
		mov    0x1d(%esp),%ecx
		mov    %ah,data_15ba22
		cmp    $0xde,%cx
		jl     jump_1488a
	jump_1473a:
		call   func_27bf2
		jmp    jump_1462e


/*----------------------------------------------------------------*/
func_14744:
/*----------------------------------------------------------------*/
		mov    data_5268d,%eax
		mov    $0x1,%cl
		call   func_2e078
		mov    %cl,data_15ba22
	jump_14756:
		lea    0x28(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x28(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_14851
		cmpb   $0x0,data_15ba22
		jne    jump_14851
		mov    data_7cf24,%ecx
		cmp    $0x118,%ecx
		jl     jump_147ce
		cmp    $0x13f,%ecx
		jg     jump_147ce
		mov    data_7cf28,%edi
		test   %edi,%edi
		jl     jump_147ce
		cmp    $0x63,%edi
		jg     jump_147ce
		mov    data_5268d,%edx
		test   %edx,%edx
		jle    jump_147bd
		lea    -0x5(%edx),%ecx
		mov    %ecx,data_5268d
	jump_147bd:
		mov    data_5268d,%eax
		call   func_2e078
		movb   $0x1,data_15ba22
	jump_147ce:
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_1481b
		cmp    $0x13f,%esi
		jge    jump_1481b
		mov    data_7cf28,%eax
		cmp    $0x64,%eax
		jl     jump_1481b
		cmp    $0xc7,%eax
		jg     jump_1481b
		mov    data_5268d,%ecx
		cmp    $0x50,%ecx
		jge    jump_14809
		lea    0x5(%ecx),%esi
		mov    %esi,data_5268d
	jump_14809:
		mov    data_5268d,%eax
		mov    $0x1,%dl
		call   func_2e078
		mov    %dl,data_15ba22
	jump_1481b:
		cmpl   $0x118,data_7cf24
		jge    jump_14851
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		add    data_5268d,%eax
		mov    $0x1,%dh
		mov    %ax,0x1f(%esp)
		mov    %dh,data_15ba22
		cmp    $0x55,%ax
		jl     jump_1488a
	jump_14851:
		call   func_27bf2
		jmp    jump_14756


/*----------------------------------------------------------------*/
func_1485b:
/*----------------------------------------------------------------*/
		mov    $data_500f9,%eax
		call   func_28091
		mov    %ax,0x19(%esp)
		jmp    jump_1488a


/*----------------------------------------------------------------*/
func_1486c:
/*----------------------------------------------------------------*/
		mov    $data_50103,%eax
		call   func_28091
		mov    %al,0x26(%esp)
		jmp    jump_1488a


/*----------------------------------------------------------------*/
func_1487c:
/*----------------------------------------------------------------*/
		mov    $data_5010d,%eax
		call   func_28091
		mov    %al,0x27(%esp)
	jump_1488a:
		cmp    $0x7,%bx
		jne    jump_145b6
	jump_14894:
		call   func_3197d
		mov    $0x1,%dl
		mov    0x1d(%esp),%eax
		mov    0x3e(%esp),%ebx
		mov    $0x4,%ecx
		shl    $0x4,%eax
		mov    %dl,(%esp)
		cwtl
		sar    $0x10,%ebx
		push   %eax
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_1a51d
		cmpb   $0x0,0x26(%esp)
		jne    jump_148e7
		mov    0x1(%esp),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		mov    data_15b9c4,%eax
		add    %eax,%edx
		mov    -0x1(%esp),%eax
		sar    $0x10,%eax
		movb   $0xff,(%edx,%eax,1)
	jump_148e7:
		mov    0x1(%esp),%eax
		mov    %ax,0x21(%esp)
		mov    0x3(%esp),%eax
		mov    0x5(%esp),%bl
		mov    %ax,0x23(%esp)
		test   %bl,%bl
		jne    jump_1490e
		lea    0x5(%esp),%edi
		mov    $data_50155,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
	jump_1490e:
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0x13,(%edx,%eax,2)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    0x4c(%esp),%edx
		mov    %dx,(%eax)
		xor    %edx,%edx
	jump_14976:
		xor    %eax,%eax
		mov    %dx,%ax
		xor    %ebx,%ebx
		mov    data_7d01e,%di
		mov    0x5(%esp,%eax,1),%bl
		movswl %di,%eax
		inc    %edi
		mov    data_7d794,%esi
		mov    %di,data_7d01e
		inc    %edx
		mov    %bx,(%esi,%eax,2)
		cmp    $0x14,%dx
		jb     jump_14976
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x1(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x3(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x19(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x1b(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x1d(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x1f(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x21(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x23(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		mov    data_7d794,%edx
		movswl %bx,%eax
		inc    %ebx
		movzbw 0x25(%esp),%si
		mov    %bx,data_7d01e
		mov    %si,(%edx,%eax,2)
		mov    data_7d01e,%bx
		mov    data_7d794,%edx
		movswl %bx,%eax
		inc    %ebx
		movzbw 0x26(%esp),%si
		mov    %bx,data_7d01e
		mov    %si,(%edx,%eax,2)
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		movzbw 0x27(%esp),%si
		mov    %bx,data_7d01e
		mov    %si,(%eax,%edx,2)
		mov    $0x1,%eax
	jump_14b22:
		add    $0x50,%esp
		jmp    jump_15f61

vtable_14b2b:
		.long   func_14c48
		.long   func_14d7b
		.long   func_14d88
		.long   func_14d88
		.long   func_14da0
		.long   func_14dae


/*----------------------------------------------------------------*/
func_14b43:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		mov    %esp,%edi
		mov    $data_11a7b,%esi
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x34(%esp)
		mov    %dx,0x40(%esp)
		mov    %dx,0x3c(%esp)
		mov    %dx,0x38(%esp)
		mov    %dx,0x4c(%esp)
		mov    %dx,0x48(%esp)
		mov    %dx,0x44(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
	jump_14b7f:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		cmpw   $0x0,data_7d020(%edx)
		jne    jump_14bd7
		cmpl   $0x0,data_7d028(%edx)
		jne    jump_14bb4
		mov    $0x1388,%eax
		call   w_dos_malloc
		mov    %eax,data_7d028(%edx)
	jump_14bb4:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $0x1,%esi
		mov    %bx,0x34(%esp)
		mov    %si,data_7d020(,%eax,2)
		jmp    jump_14bde
	jump_14bd7:
		inc    %ebx
		cmp    $0x32,%bx
		jl     jump_14b7f
	jump_14bde:
		mov    $0x14,%ebp
	jump_14be3:
		mov    0x42(%esp),%eax
		mov    0x4a(%esp),%ecx
		mov    0x36(%esp),%ebx
		mov    0x3a(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		push   %eax
		lea    0x4(%esp),%eax
		sar    $0x10,%ebx
		push   %eax
		mov    0x46(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_13ede
		push   $0x0
		push   $0x12
		mov    $0x56,%edx
		mov    $0xa4,%ecx
		push   $0x80
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   func_31a49
		mov    %eax,%ebx
		dec    %ax
		cmp    $0x5,%ax
		ja     func_14d88
		and    $0xffff,%eax
		jmp    *vtable_14b2b(,%eax,4)


/*----------------------------------------------------------------*/
func_14c48:
/*----------------------------------------------------------------*/
		mov    0x46(%esp),%eax
		mov    %ebp,%edx
		sar    $0x10,%eax
		call   func_2db3d
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_14c60:
		call   func_3197d
	jump_14c65:
		lea    0x20(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x20(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_14c65
		mov    data_7cf24,%edi
		cmp    $0x118,%edi
		jl     jump_14cd8
		cmp    $0x13f,%edi
		jg     jump_14cd8
		mov    data_7cf28,%edx
		test   %edx,%edx
		jl     jump_14cd8
		cmp    $0x63,%edx
		jg     jump_14cd8
		mov    0x48(%esp),%eax
		test   %ax,%ax
		jle    jump_14cbb
		mov    %eax,%edx
		sub    $0x5,%edx
		mov    %dx,0x48(%esp)
	jump_14cbb:
		mov    0x46(%esp),%eax
		mov    %ebp,%edx
		sar    $0x10,%eax
		call   func_2db3d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_3197d
	jump_14cd8:
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_14d31
		cmp    $0x13f,%esi
		jge    jump_14d31
		mov    data_7cf28,%eax
		cmp    $0x64,%eax
		jl     jump_14d31
		cmp    $0xc7,%eax
		jg     jump_14d31
		mov    0x48(%esp),%ecx
		cmp    $0xd9,%cx
		jge    jump_14d14
		mov    %ecx,%esi
		add    $0x5,%esi
		mov    %si,0x48(%esp)
	jump_14d14:
		mov    0x46(%esp),%eax
		mov    %ebp,%edx
		sar    $0x10,%eax
		call   func_2db3d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_3197d
	jump_14d31:
		cmpl   $0x118,data_7cf24
		jge    jump_14c65
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x46(%esp),%esi
		sar    $0x10,%esi
		add    %esi,%eax
		mov    %ax,0x40(%esp)
		mov    $0x1,%al
		mov    0x40(%esp),%edi
		mov    %al,data_15ba22
		cmp    $0xde,%di
		jl     func_14d88
		jmp    jump_14c60


/*----------------------------------------------------------------*/
func_14d7b:
/*----------------------------------------------------------------*/
		lea    0x3c(%esp),%eax
		lea    0x38(%esp),%edx
		call   func_123a5


/*----------------------------------------------------------------*/
func_14d88:
/*----------------------------------------------------------------*/
		cmp    $0x7,%bx
		je     jump_14ed5
		test   %bx,%bx
		je     jump_14b22
		jmp    jump_14be3


/*----------------------------------------------------------------*/
func_14da0:
/*----------------------------------------------------------------*/
		mov    $data_5015c,%eax
		mov    %esp,%edx
		call   func_2817a
		jmp    func_14d88


/*----------------------------------------------------------------*/
func_14dae:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		call   func_2e078
		xor    %edi,%edi
		mov    $0x1,%ah
		mov    %di,0x48(%esp)
		mov    %ah,data_15ba22
	jump_14dc4:
		lea    0x14(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x14(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_14ecb
		cmpb   $0x0,data_15ba22
		jne    jump_14ecb
		mov    data_7cf24,%edi
		cmp    $0x118,%edi
		jl     jump_14e3f
		cmp    $0x13f,%edi
		jg     jump_14e3f
		mov    data_7cf28,%edx
		test   %edx,%edx
		jl     jump_14e3f
		cmp    $0x63,%edx
		jg     jump_14e3f
		mov    0x48(%esp),%eax
		test   %ax,%ax
		jle    jump_14e2b
		mov    %eax,%edx
		sub    $0x5,%edx
		mov    %dx,0x48(%esp)
	jump_14e2b:
		mov    0x46(%esp),%eax
		sar    $0x10,%eax
		mov    $0x1,%dh
		call   func_2e078
		mov    %dh,data_15ba22
	jump_14e3f:
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_14e8e
		cmp    $0x13f,%esi
		jge    jump_14e8e
		mov    data_7cf28,%eax
		cmp    $0x64,%eax
		jl     jump_14e8e
		cmp    $0xc7,%eax
		jg     jump_14e8e
		mov    0x48(%esp),%ecx
		cmp    $0x50,%cx
		jge    jump_14e7a
		mov    %ecx,%esi
		add    $0x5,%esi
		mov    %si,0x48(%esp)
	jump_14e7a:
		mov    0x46(%esp),%eax
		sar    $0x10,%eax
		mov    $0x1,%cl
		call   func_2e078
		mov    %cl,data_15ba22
	jump_14e8e:
		cmpl   $0x118,data_7cf24
		jge    jump_14ecb
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x46(%esp),%esi
		sar    $0x10,%esi
		add    %esi,%eax
		mov    $0x1,%ch
		mov    %ax,0x44(%esp)
		mov    %ch,data_15ba22
		cmp    $0x55,%ax
		jl     func_14d88
	jump_14ecb:
		call   func_27bf2
		jmp    jump_14dc4
	jump_14ed5:
		mov    0x32(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		add    %ecx,%ebx
		mov    data_7cfba(,%ecx,2),%si
		shl    $0x2,%ebx
		movswl %si,%eax
		sub    %ecx,%ebx
		mov    %ecx,%edx
		add    %eax,%eax
		mov    data_7d028(,%ebx,2),%ecx
		inc    %esi
		add    %ecx,%eax
		mov    %si,data_7cfba(,%edx,2)
		mov    data_7d7ba,%cx
		mov    %cx,(%eax)
		mov    data_7cfba(,%edx,2),%si
		movswl %si,%ecx
		inc    %esi
		mov    data_7d028(,%ebx,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0xd,(%eax,%ecx,2)
		mov    data_7cfba(,%edx,2),%si
		movswl %si,%eax
		mov    data_7d028(,%ebx,2),%ecx
		add    %eax,%eax
		inc    %esi
		add    %ecx,%eax
		mov    %si,data_7cfba(,%edx,2)
		mov    0x40(%esp),%ecx
		mov    %cx,(%eax)
		mov    data_7cfba(,%edx,2),%si
		movswl %si,%ecx
		mov    data_7d028(,%ebx,2),%eax
		add    %ecx,%ecx
		inc    %esi
		add    %eax,%ecx
		mov    %si,data_7cfba(,%edx,2)
		mov    0x3c(%esp),%eax
		mov    %ax,(%ecx)
		mov    data_7cfba(,%edx,2),%si
		movswl %si,%ecx
		mov    data_7d028(,%ebx,2),%eax
		add    %ecx,%ecx
		inc    %esi
		add    %eax,%ecx
		mov    %si,data_7cfba(,%edx,2)
		mov    0x38(%esp),%eax
		mov    %ax,(%ecx)
		mov    data_7cfba(,%edx,2),%si
		mov    data_7d028(,%ebx,2),%eax
		movswl %si,%ecx
		inc    %esi
		add    %ecx,%ecx
		mov    %si,data_7cfba(,%edx,2)
		mov    0x4c(%esp),%edx
		mov    %dx,(%ecx,%eax,1)
		xor    %ecx,%ecx
	jump_14fcd:
		mov    0x32(%esp),%ebx
		movswl %cx,%eax
		sar    $0x10,%ebx
		mov    (%esp,%eax,1),%al
		xor    %ah,%ah
		lea    (%ebx,%ebx,1),%esi
		mov    %eax,0x2c(%esp)
		mov    data_7cfba(%esi),%ax
		mov    %ax,0x30(%esp)
		mov    %ebx,%eax
		shl    $0x2,%eax
		mov    0x2e(%esp),%ebp
		add    %ebx,%eax
		mov    0x30(%esp),%edi
		shl    $0x2,%eax
		sar    $0x10,%ebp
		sub    %ebx,%eax
		inc    %edi
		add    %eax,%eax
		add    %ebp,%ebp
		mov    %di,data_7cfba(%esi)
		mov    data_7d028(%eax),%edx
		mov    0x2c(%esp),%edi
		inc    %ecx
		mov    %di,(%edx,%ebp,1)
		cmp    $0x14,%cx
		jl     jump_14fcd
		mov    data_7cfba(%esi),%cx
		movswl %cx,%edx
		mov    data_7d028(%eax),%eax
		add    %edx,%edx
		inc    %ecx
		add    %edx,%eax
		mov    %cx,data_7cfba(%esi)
		mov    0x44(%esp),%edx
		mov    %dx,(%eax)
		movb   $0x1,data_7d855(%ebx)
		jmp    jump_14b22

vtable_15057:
		.long   func_152bd
		.long   func_1536e
		.long   func_153b5
		.long   func_15464
		.long   func_15651
		.long   func_15706
		.long   func_15726
		.long   func_157bf
		.long   func_157d6
		.long   func_1585b


/*----------------------------------------------------------------*/
func_1507f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		xor    %edx,%edx
		mov    data_7d821,%ah
		mov    %dx,0x14(%esp)
		test   %ah,%ah
		jbe    jump_150a6
		cmpb   $0x17,data_7d7ee
		je     jump_159a0
	jump_150a6:
		call   func_19ba9
		mov    $0x7d,%ebx
		mov    data_15b9cc,%edx
		mov    $0x13,%ecx
		push   %edx
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_1843d
		mov    $0x14,%edx
		mov    data_15b9cc,%ebx
		mov    $0x27,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x7d,%ebx
		call   func_1843d
		mov    $0x28,%edx
		mov    data_15b9cc,%ecx
		mov    $0x7d,%ebx
		push   %ecx
		xor    %eax,%eax
		mov    $0x3b,%ecx
		call   func_1843d
		mov    $0x3c,%edx
		mov    data_15b9cc,%esi
		mov    $0x7d,%ebx
		push   %esi
		mov    $0x4f,%ecx
		xor    %eax,%eax
		call   func_1843d
		mov    $0x50,%edx
		mov    data_15b9cc,%edi
		mov    $0x7d,%ebx
		push   %edi
		mov    $0x63,%ecx
		xor    %eax,%eax
		call   func_1843d
		mov    $0x64,%edx
		mov    data_15b9cc,%ebp
		mov    $0x7d,%ebx
		push   %ebp
		mov    $0x77,%ecx
		xor    %eax,%eax
		call   func_1843d
		mov    $0x78,%edx
		mov    data_15b9cc,%eax
		mov    $0x7d,%ebx
		push   %eax
		mov    $0x8b,%ecx
		xor    %eax,%eax
		call   func_1843d
		mov    $0x7d,%ebx
		mov    data_15b9cc,%edx
		mov    $0x9f,%ecx
		push   %edx
		xor    %eax,%eax
		mov    $0x8c,%edx
		call   func_1843d
		mov    $0xa0,%edx
		mov    data_15b9cc,%ebx
		mov    $0xb3,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x7d,%ebx
		call   func_1843d
		mov    $0xb4,%edx
		mov    data_15b9cc,%ecx
		mov    $0x7d,%ebx
		push   %ecx
		xor    %eax,%eax
		mov    $0xc7,%ecx
		call   func_1843d
		push   $data_50161
		push   $0x2
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5016d
		push   $0x16
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50177
		push   $0x2a
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50181
		push   $0x3e
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5018d
		push   $0x52
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50195
		push   $0x66
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_501a5
		push   $0x7a
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_501b4
		push   $0x8e
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_501c0
		push   $0xa2
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_501c9
		push   $0xb6
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		push   $0x14
		mov    $0x7d,%edx
		mov    $0xc8,%ecx
		push   $0x7d
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_31a49
		dec    %ax
		cmp    $0x9,%ax
		ja     jump_159a0
		and    $0xffff,%eax
		jmp    *vtable_15057(,%eax,4)


/*----------------------------------------------------------------*/
func_152bd:
/*----------------------------------------------------------------*/
		mov    $data_501d8,%eax
		call   func_28091
		mov    %eax,0x10(%esp)
		mov    $data_501e4,%eax
		call   func_28091
		mov    data_7d01e,%bx
		mov    %eax,0xc(%esp)
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0xc,(%edx,%eax,2)
		mov    data_7d01e,%si
		movswl %si,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %esi
		add    %eax,%edx
		mov    %si,data_7d01e
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0xc(%esp),%eax
		mov    %ax,(%edx)
	jump_15362:
		movb   $0x1,data_7d887
		jmp    jump_159a0


/*----------------------------------------------------------------*/
func_1536e:
/*----------------------------------------------------------------*/
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		movw   $0x11,(%edx,%eax,1)
		jmp    jump_15362


/*----------------------------------------------------------------*/
func_153b5:
/*----------------------------------------------------------------*/
		mov    $data_501f1,%eax
		call   func_28091
		mov    data_7d01e,%bx
		mov    %eax,0x10(%esp)
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		movw   $0x12,(%edx,%eax,1)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01c,%esi
		sar    $0x10,%esi
		add    %esi,%esi
		mov    data_7d794,%eax
		lea    0x2(%esi),%edx
		add    %eax,%edx
		add    %esi,%eax
		call   func_123a5
		mov    data_7d01e,%bx
		mov    $0x1,%al
		add    $0x2,%ebx
		mov    %al,data_7d887
		mov    %bx,data_7d01e
		jmp    jump_159a0


/*----------------------------------------------------------------*/
func_15464:
/*----------------------------------------------------------------*/
		mov    0x12(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%ch
		call   func_2b44f
		mov    %ch,data_15ba22
	jump_15487:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_155a6
		cmpb   $0x0,data_15ba22
		jne    jump_155a6
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_1550b
		cmp    $0x13f,%eax
		jg     jump_1550b
		mov    data_7cf28,%ebx
		test   %ebx,%ebx
		jl     jump_1550b
		cmp    $0x63,%ebx
		jg     jump_1550b
		mov    0x14(%esp),%ecx
		cmp    $0x2,%cx
		jle    jump_154e8
		mov    %ecx,%esi
		sub    $0x5,%esi
		mov    %si,0x14(%esp)
	jump_154e8:
		mov    0x12(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%bl
		call   func_2b44f
		mov    %bl,data_15ba22
	jump_1550b:
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_1556e
		cmp    $0x13f,%esi
		jge    jump_1556e
		mov    data_7cf28,%ebp
		cmp    $0x64,%ebp
		jl     jump_1556e
		cmp    $0xc7,%ebp
		jg     jump_1556e
		mov    0x14(%esp),%edi
		cmp    $0xb0,%di
		jge    jump_1554b
		mov    %edi,%eax
		add    $0x5,%eax
		mov    %ax,0x14(%esp)
	jump_1554b:
		mov    0x12(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%bh
		call   func_2b44f
		mov    %bh,data_15ba22
	jump_1556e:
		cmpl   $0x118,data_7cf24
		jge    jump_155a6
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    0x12(%esp),%esi
		sar    $0x10,%esi
		mov    $0x1,%cl
		add    %esi,%eax
		mov    %cl,data_15ba22
		mov    %eax,0x10(%esp)
		cmp    $0xb5,%ax
		jl     jump_155b0
	jump_155a6:
		call   func_27bf2
		jmp    jump_15487
	jump_155b0:
		mov    $data_500f9,%eax
		call   func_28091
		mov    data_7d01e,%bx
		mov    %eax,0xc(%esp)
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%si
		movswl %si,%eax
		inc    %esi
		mov    data_7d794,%edx
		mov    %si,data_7d01e
		movw   $0x15,(%edx,%eax,2)
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %eax,%edx
		mov    %bx,data_7d01e
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%si
		movswl %si,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %esi
		add    %eax,%edx
		mov    %si,data_7d01e
		mov    0xc(%esp),%eax
	jump_15643:
		mov    %ax,(%edx)
		mov    %cl,data_7d887
		jmp    jump_159a0


/*----------------------------------------------------------------*/
func_15651:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_159a0
		lea    0x10(%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x5,%ebx
		call   func_11ffd
		test   %ax,%ax
		je     jump_159a0
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%si
		movswl %si,%eax
		inc    %esi
		mov    data_7d794,%edx
		mov    %si,data_7d01e
		movw   $0xf,(%edx,%eax,2)
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %eax,%edx
		mov    %si,data_7d01e
		mov    0x10(%esp),%eax
		mov    %ax,(%edx)
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		add    %eax,%edx
		mov    0xc(%esp),%eax
		mov    $0x1,%cl
		jmp    jump_15643


/*----------------------------------------------------------------*/
func_15706:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_159a0
		call   func_15cbb
		test   %ax,%ax
		je     jump_159a0
		jmp    jump_15362


/*----------------------------------------------------------------*/
func_15726:
/*----------------------------------------------------------------*/
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0x16,(%edx,%eax,2)
		mov    $data_501f9,%eax
		call   func_28091
		mov    data_7d01e,%bx
		mov    %eax,%edx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%esi
		mov    %bx,data_7d01e
		mov    %dx,(%esi,%eax,2)
		mov    $data_50205,%eax
		call   func_28091
		mov    data_7d01e,%bx
		mov    %eax,%edx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%esi
		mov    %bx,data_7d01e
		mov    %dx,(%esi,%eax,2)
		jmp    jump_15362


/*----------------------------------------------------------------*/
func_157bf:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_159a0
		call   func_15f68
		jmp    jump_15362


/*----------------------------------------------------------------*/
func_157d6:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_159a0
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %edx,%eax
		mov    %si,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		movw   $0x18,(%edx,%eax,1)
		mov    $data_5020f,%eax
		call   func_28091
		mov    data_7d01e,%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d794,%esi
		mov    %bx,data_7d01e
		mov    $0x1,%ch
		mov    %ax,(%esi,%edx,2)
		mov    %ch,data_7d887
		jmp    jump_159a0


/*----------------------------------------------------------------*/
func_1585b:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_159a0
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		add    %edx,%eax
		mov    data_7d7ba,%dx
		mov    $0x23,%ecx
		mov    %dx,(%eax)
		call   func_21e29
		call   func_2294d
		mov    data_15b9cc,%esi
		mov    $0x56,%ebx
		push   %esi
		mov    $0x12,%edx
		xor    %eax,%eax
		call   func_1843d
		mov    $0x24,%edx
		mov    data_15b9cc,%edi
		mov    $0x56,%ebx
		push   %edi
		mov    $0x35,%ecx
		xor    %eax,%eax
		call   func_1843d
		push   $data_50229
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50233
		push   $0x26
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		mov    $0x1,%bl
		mov    $0x56,%edx
		push   $0x11
		mov    $0x35,%ecx
		mov    %bl,data_15ba22
		push   $0x56
		xor    %eax,%eax
		mov    $0x12,%ebx
		call   func_31a49
		cmp    $0x1,%eax
		jb     jump_15972
		jbe    jump_15934
		cmp    $0x2,%eax
		je     jump_15953
		jmp    jump_15972
	jump_15934:
		mov    data_7d01e,%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d794,%eax
		mov    %bx,data_7d01e
		movw   $0x19,(%eax,%edx,2)
		jmp    jump_15972
	jump_15953:
		mov    data_7d01e,%bx
		mov    data_7d794,%eax
		movswl %bx,%edx
		inc    %ebx
		add    %edx,%edx
		mov    %bx,data_7d01e
		movw   $0x1a,(%edx,%eax,1)
	jump_15972:
		mov    $data_5023d,%eax
		call   func_28091
		mov    data_7d01e,%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d794,%esi
		mov    %bx,data_7d01e
		mov    $0x1,%bh
		mov    %ax,(%esi,%edx,2)
		mov    %bh,data_7d887
	jump_159a0:
		add    $0x18,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_159a8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		call   func_16604
		mov    %ax,0x10(%esp)
		cwtl
		xor    %ecx,%ecx
		cmp    $0xffffffff,%eax
		je     jump_159a0
		lea    0x140(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_82935(%edx,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,0xc(%esp)
		xor    %eax,%eax
		mov    $0x14,%ebx
		call   func_20f7a
		mov    0xa(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		call   func_2dd3f
		movb   $0x1,data_15ba22
	jump_159ff:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_15b25
		cmpb   $0x0,data_15ba22
		jne    jump_15b25
		mov    data_7cf24,%ebx
		cmp    $0x118,%ebx
		jl     jump_15a72
		cmp    $0x13f,%ebx
		jg     jump_15a72
		mov    data_7cf28,%edi
		test   %edi,%edi
		jl     jump_15a72
		cmp    $0x63,%edi
		jg     jump_15a72
		test   %cx,%cx
		jle    jump_15a57
		sub    $0x5,%ecx
	jump_15a57:
		mov    0xa(%esp),%eax
		mov    $0x14,%ebx
		movswl %cx,%edx
		sar    $0x10,%eax
		call   func_2dd3f
		movb   $0x1,data_15ba22
	jump_15a72:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_15ad9
		cmp    $0x13f,%eax
		jge    jump_15ad9
		mov    data_7cf28,%ebx
		cmp    $0x64,%ebx
		jl     jump_15ad9
		cmp    $0xc7,%ebx
		jg     jump_15ad9
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		imul   $0x3842,%eax,%eax
		mov    data_840a4(%eax),%ax
		and    $0xffff,%eax
		movswl %cx,%edx
		sub    $0x5,%eax
		cmp    %eax,%edx
		jge    jump_15abe
		add    $0x5,%ecx
	jump_15abe:
		mov    0xa(%esp),%eax
		mov    $0x14,%ebx
		movswl %cx,%edx
		sar    $0x10,%eax
		call   func_2dd3f
		movb   $0x1,data_15ba22
	jump_15ad9:
		cmpl   $0x118,data_7cf24
		jge    jump_15b25
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%edx
		add    %edx,%eax
		mov    %eax,%esi
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		imul   $0x3842,%eax,%eax
		mov    $0x1,%bh
		mov    data_840a4(%eax),%ax
		movswl %si,%edx
		and    $0xffff,%eax
		mov    %bh,data_15ba22
		cmp    %eax,%edx
		jl     jump_15b2f
	jump_15b25:
		call   func_27bf2
		jmp    jump_159ff
	jump_15b2f:
		mov    0xe(%esp),%ebx
		mov    $0x1,%eax
		sar    $0x10,%ebx
		call   func_20f7a
		mov    data_7cfba(,%ebx,2),%dx
		mov    %dx,0x14(%esp)
		mov    %ebx,%edx
		shl    $0x2,%edx
		mov    0x12(%esp),%ebp
		add    %ebx,%edx
		mov    0x14(%esp),%edi
		shl    $0x2,%edx
		sar    $0x10,%ebp
		sub    %ebx,%edx
		inc    %edi
		add    %ebp,%ebp
		mov    data_7d028(,%edx,2),%ecx
		mov    %di,data_7cfba(,%ebx,2)
		mov    data_7d7ba,%di
		mov    %di,(%ecx,%ebp,1)
		mov    data_7cfba(,%ebx,2),%cx
		mov    %cx,0x14(%esp)
		mov    0x12(%esp),%ebp
		mov    0x14(%esp),%edi
		mov    data_7d028(,%edx,2),%ecx
		sar    $0x10,%ebp
		inc    %edi
		add    %ebp,%ebp
		mov    %di,data_7cfba(,%ebx,2)
		movw   $0x10,(%ecx,%ebp,1)
		mov    data_7cfba(,%ebx,2),%cx
		mov    %cx,0x14(%esp)
		mov    data_7d028(,%edx,2),%edx
		mov    0x14(%esp),%edi
		mov    0x12(%esp),%ecx
		inc    %edi
		sar    $0x10,%ecx
		mov    %di,data_7cfba(,%ebx,2)
		mov    %si,(%edx,%ecx,2)
		movb   $0x1,data_7d855(%ebx)
		jmp    jump_159a0


/*----------------------------------------------------------------*/
func_15be9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		call   func_16604
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     jump_15cb3
		mov    $data_50250,%eax
		call   func_28091
		mov    %eax,%esi
		test   %ax,%ax
		je     jump_15cb3
		mov    data_7cfba(,%ebx,2),%dx
		mov    %dx,(%esp)
		mov    %ebx,%edx
		shl    $0x2,%edx
		add    %ebx,%edx
		mov    -0x2(%esp),%ebp
		shl    $0x2,%edx
		mov    (%esp),%edi
		sub    %ebx,%edx
		sar    $0x10,%ebp
		inc    %edi
		mov    data_7d028(,%edx,2),%ecx
		mov    %di,data_7cfba(,%ebx,2)
		mov    data_7d7ba,%di
		mov    %di,(%ecx,%ebp,2)
		mov    data_7cfba(,%ebx,2),%cx
		mov    %cx,(%esp)
		mov    data_7d028(,%edx,2),%ebp
		mov    (%esp),%edi
		mov    -0x2(%esp),%ecx
		inc    %edi
		sar    $0x10,%ecx
		mov    %di,data_7cfba(,%ebx,2)
		movw   $0xb,0x0(%ebp,%ecx,2)
		mov    data_7cfba(,%ebx,2),%cx
		mov    %cx,(%esp)
		mov    data_7d028(,%edx,2),%edx
		mov    (%esp),%edi
		mov    -0x2(%esp),%ecx
		inc    %edi
		sar    $0x10,%ecx
		mov    %di,data_7cfba(,%ebx,2)
		mov    %ax,(%edx,%ecx,2)
		movb   $0x1,data_7d855(%ebx)
	jump_15cb3:
		add    $0x4,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_15cbb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    $0x2,%edx
		mov    $0x7e,%eax
		mov    %dx,0xc(%esp)
		mov    data_15b9cc,%edx
		mov    $0xf6,%ebx
		push   %edx
		mov    $0x77,%ecx
		mov    $0x64,%edx
		call   func_1843d
		mov    $0x7e,%eax
		mov    data_15b9cc,%ebx
		mov    $0x78,%edx
		push   %ebx
		mov    $0x8b,%ecx
		mov    $0xf6,%ebx
		call   func_1843d
		push   $data_50259
		push   $0x67
		push   $0x80
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50267
		push   $0x7b
		push   $0x80
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		push   $0x0
		push   $0x14
		mov    $0xf6,%edx
		mov    $0x64,%ebx
		push   $0x82
		mov    $0x8c,%ecx
		mov    $0x7e,%eax
		call   func_31a49
		cmp    $0x1,%eax
		jb     jump_15d6e
		jbe    jump_15d75
		cmp    $0x2,%eax
		je     jump_15d8d
	jump_15d6e:
		xor    %eax,%eax
		jmp    jump_15f5e
	jump_15d75:
		call   func_144e3
		test   %ax,%ax
		je     jump_15f5e
		mov    $0x1,%eax
		jmp    jump_15f5e
	jump_15d8d:
		call   func_19ba9
		mov    $0x2,%eax
		mov    $0x14,%edx
		call   func_17c49
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		movb   $0x1,data_15ba22
	jump_15db7:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_15ee7
		cmpb   $0x0,data_15ba22
		jne    jump_15ee7
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_15e48
		cmp    $0x13f,%esi
		jg     jump_15e48
		mov    data_7cf28,%ebp
		test   %ebp,%ebp
		jl     jump_15e48
		cmp    $0x63,%ebp
		jg     jump_15e48
		mov    0xc(%esp),%ebx
		cmp    $0x2,%bx
		jle    jump_15e1b
		mov    %ebx,%ecx
		sub    $0x5,%ecx
		mov    %cx,0xc(%esp)
	jump_15e1b:
		call   func_19ba9
		mov    0xa(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		call   func_19b67
		mov    %dh,data_15ba22
	jump_15e48:
		mov    data_7cf24,%edx
		cmp    $0x118,%edx
		jl     jump_15eb3
		cmp    $0x13f,%edx
		jge    jump_15eb3
		mov    data_7cf28,%ecx
		cmp    $0x64,%ecx
		jl     jump_15eb3
		cmp    $0xc7,%ecx
		jg     jump_15eb3
		mov    0xc(%esp),%esi
		cmp    $0xb0,%si
		jge    jump_15e86
		mov    %esi,%edi
		add    $0x5,%edi
		mov    %di,0xc(%esp)
	jump_15e86:
		call   func_19ba9
		mov    0xa(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%bl
		call   func_2b44f
		call   func_19b67
		mov    %bl,data_15ba22
	jump_15eb3:
		cmpl   $0x118,data_7cf24
		jge    jump_15ee7
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		mov    0xa(%esp),%esi
		sar    $0x10,%esi
		mov    $0x1,%bh
		add    %esi,%eax
		mov    %bh,data_15ba22
		cmp    $0xb5,%ax
		jl     jump_15ef1
	jump_15ee7:
		call   func_27bf2
		jmp    jump_15db7
	jump_15ef1:
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%esi
		add    %edx,%edx
		inc    %ebx
		add    %edx,%esi
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%esi)
		mov    data_7d01e,%bx
		movswl %bx,%esi
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0x14,(%edx,%esi,2)
		mov    data_7d01e,%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d794,%esi
		mov    %bx,data_7d01e
		mov    $0x1,%cl
		mov    %ax,(%esi,%edx,2)
		mov    $0x1,%eax
		mov    %cl,data_7d887
	jump_15f5e:
		add    $0x10,%esp
	jump_15f61:
		pop    %ebp
	jump_15f62:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_15f68:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
		mov    %edx,0x10(%esp)
		mov    %edx,0x8(%esp)
		mov    $0xfa,%ebp
	jump_15f84:
		call   func_19ba9
		mov    $0x32,%esi
		mov    $0x43,%edi
	jump_15f93:
		mov    data_15b9cc,%eax
		mov    %esi,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		push   %eax
		add    $0x12,%esi
		mov    $0x64,%eax
		add    $0x12,%edi
		call   func_1843d
		cmp    $0x7a,%esi
		jne    jump_15f93
		push   $data_50275
		push   $0x34
		push   $0x68
		lea    0xc(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		mov    0xc(%esp),%eax
		call   func_itoa_
		mov    %esp,%eax
		push   %eax
		push   $0x34
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50282
		push   $0x46
		push   $0x68
		lea    0xc(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		mov    0x10(%esp),%eax
		call   func_itoa_
		mov    %esp,%eax
		push   %eax
		push   $0x46
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50289
		push   $0x58
		push   $0x68
		lea    0xc(%esp),%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xa,%ebx
		mov    0x8(%esp),%eax
		call   func_itoa_
		mov    %esp,%eax
		push   %eax
		push   $0x58
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_50290
		push   $0x6a
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		push   $0x12
		mov    $0x7c,%ecx
		mov    $0x32,%ebx
		push   $0x96
		mov    %ebp,%edx
		mov    $0x64,%eax
		call   func_31a49
		mov    %eax,%esi
		mov    %eax,%edx
		cmp    $0x2,%eax
		jb     jump_160a4
		jbe    jump_160b9
		cmp    $0x3,%eax
		je     jump_160c9
		jmp    jump_160d7
	jump_160a4:
		cmp    $0x1,%eax
		jne    jump_160d7
		mov    $data_50294,%eax
		call   func_28091
		mov    %eax,0xc(%esp)
		jmp    jump_160d7
	jump_160b9:
		mov    $data_502a0,%eax
		call   func_28091
		mov    %eax,0x10(%esp)
		jmp    jump_160d7
	jump_160c9:
		mov    $data_502a6,%eax
		call   func_28091
		mov    %eax,0x8(%esp)
	jump_160d7:
		cmp    $0x4,%edx
		jne    jump_15f84
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %edx,%eax
		mov    %si,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%si
		movswl %si,%eax
		inc    %esi
		mov    data_7d794,%edx
		mov    %si,data_7d01e
		movw   $0x17,(%edx,%eax,2)
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %edx,%eax
		mov    %si,data_7d01e
		mov    0xc(%esp),%edx
		mov    %dx,(%eax)
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %edx,%eax
		mov    %si,data_7d01e
		mov    0x10(%esp),%edx
		mov    %dx,(%eax)
		mov    data_7d01e,%si
		movswl %si,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %esi
		add    %edx,%eax
		mov    %si,data_7d01e
		mov    0x8(%esp),%edx
		mov    %dx,(%eax)
		movb   $0x1,data_7d887
		add    $0x14,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_1619c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		call   func_16604
		mov    %ax,0xc(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_15f5e
		mov    $0x6e,%eax
		mov    data_15b9cc,%edx
		mov    $0xd2,%ebx
		push   %edx
		mov    $0x90,%ecx
		mov    $0x50,%edx
		call   func_1843d
		push   $data_502ac
		push   $0x52
		push   $0x70
		mov    $0x64,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x77,%ecx
		push   %ebx
		mov    $0x78,%eax
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_502b9
		push   $0x66
		push   $0x80
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ecx
		mov    $0x78,%eax
		push   %ecx
		mov    %eax,%edx
		mov    $0x8b,%ecx
		call   func_1843d
		push   $data_502c2
		push   $0x7a
		push   $0x80
		call   func_2c6ab
		add    $0xc,%esp
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_16263:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0x78,%esi
		jl     jump_1633e
		cmp    $0xc8,%esi
		jg     jump_1633e
		mov    data_7cf28,%ebp
		cmp    $0x64,%ebp
		jl     jump_1633e
		cmp    $0x78,%ebp
		jg     jump_1633e
		cmpl   $0x1,data_7cf20
		jne    jump_1633e
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%esi
		shl    $0x2,%esi
		add    %edx,%esi
		mov    data_7cfba(,%edx,2),%cx
		shl    $0x2,%esi
		movswl %cx,%ebx
		sub    %edx,%esi
		mov    %edx,%eax
		add    %ebx,%ebx
		mov    data_7d028(,%esi,2),%edx
		inc    %ecx
		add    %ebx,%edx
		mov    %cx,data_7cfba(,%eax,2)
		mov    data_7d7ba,%bx
		mov    %bx,(%edx)
		mov    data_7cfba(,%eax,2),%cx
		movswl %cx,%ebx
		inc    %ecx
		mov    data_7d028(,%esi,2),%edx
		mov    %cx,data_7cfba(,%eax,2)
		movw   $0x1b,(%edx,%ebx,2)
		mov    data_7cfba(,%eax,2),%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d028(,%esi,2),%esi
		mov    %bx,data_7cfba(,%eax,2)
		movw   $0x1,(%esi,%edx,2)
	jump_16334:
		call   func_3197d
		jmp    jump_15f5e
	jump_1633e:
		mov    data_7cf24,%ebx
		cmp    $0x78,%ebx
		jl     jump_16406
		cmp    $0xc8,%ebx
		jg     jump_16406
		mov    data_7cf28,%esi
		cmp    $0x78,%esi
		jl     jump_16406
		cmp    $0x8c,%esi
		jg     jump_16406
		cmpl   $0x1,data_7cf20
		jne    jump_16406
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%esi
		shl    $0x2,%esi
		add    %edx,%esi
		mov    data_7cfba(,%edx,2),%cx
		shl    $0x2,%esi
		movswl %cx,%ebx
		sub    %edx,%esi
		mov    %edx,%eax
		add    %ebx,%ebx
		mov    data_7d028(,%esi,2),%edx
		inc    %ecx
		add    %ebx,%edx
		mov    %cx,data_7cfba(,%eax,2)
		mov    data_7d7ba,%bx
		mov    %bx,(%edx)
		mov    data_7cfba(,%eax,2),%cx
		movswl %cx,%edx
		inc    %ecx
		mov    data_7d028(,%esi,2),%ebx
		mov    %cx,data_7cfba(,%eax,2)
		movw   $0x1b,(%ebx,%edx,2)
		mov    data_7cfba(,%eax,2),%bx
		movswl %bx,%edx
		inc    %ebx
		mov    data_7d028(,%esi,2),%esi
		mov    %bx,data_7cfba(,%eax,2)
		movw   $0x2,(%esi,%edx,2)
		jmp    jump_16334
	jump_16406:
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		movb   $0x1,data_7d855(%eax)
		jmp    jump_16263


/*----------------------------------------------------------------*/
func_16419:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %esp,%edi
		mov    $data_11a8f,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmpb   $0x0,data_7d887
		jne    jump_13cfc
		call   func_21e29
		call   func_2294d
		mov    $0x5a,%ebx
		mov    data_15b9cc,%edx
		mov    $0x23,%ecx
		push   %edx
		xor    %eax,%eax
		mov    $0x12,%edx
		call   func_1843d
		mov    $0x24,%edx
		mov    data_15b9cc,%ebx
		mov    $0x35,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x5a,%ebx
		call   func_1843d
		push   $data_502cb
		push   $0x14
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_502d7
		push   $0x26
		push   $0x3
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		mov    $0x1,%dl
		mov    $0x12,%ebx
		push   $0x11
		mov    $0x35,%ecx
		mov    %dl,data_15ba22
		push   $0x5a
		xor    %eax,%eax
		mov    $0x5a,%edx
		call   func_31a49
		cmp    $0x1,%eax
		jb     jump_13cfc
		jbe    jump_164e7
		cmp    $0x2,%eax
		je     jump_16557
		jmp    jump_13cfc
	jump_164e7:
		mov    data_7d01e,%bx
		movswl %bx,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0x1c,(%edx,%eax,2)
		mov    $data_502e3,%eax
		call   func_28091
		mov    data_7d01e,%cx
		mov    data_7d794,%edx
		movswl %cx,%ebx
		inc    %ecx
		add    %ebx,%ebx
		mov    %cx,data_7d01e
		mov    %ax,(%edx,%ebx,1)
		jmp    jump_165f8
	jump_16557:
		mov    data_7d01e,%bx
		movswl %bx,%eax
		mov    data_7d794,%edx
		add    %eax,%eax
		inc    %ebx
		add    %edx,%eax
		mov    %bx,data_7d01e
		mov    data_7d7ba,%dx
		mov    %dx,(%eax)
		mov    data_7d01e,%bx
		movswl %bx,%eax
		inc    %ebx
		mov    data_7d794,%edx
		mov    %bx,data_7d01e
		movw   $0x1d,(%edx,%eax,2)
		mov    $data_502ee,%eax
		mov    %esp,%edx
		call   func_2817a
		xor    %eax,%eax
	jump_165a9:
		mov    data_7d01e,%cx
		mov    data_7d794,%edx
		movzbw (%esp,%eax,1),%si
		movswl %cx,%ebx
		inc    %ecx
		add    %ebx,%ebx
		mov    %cx,data_7d01e
		inc    %eax
		mov    %si,(%edx,%ebx,1)
		cmp    $0xd,%eax
		jl     jump_165a9
		mov    $data_502fe,%eax
		call   func_28091
		mov    data_7d01e,%cx
		movswl %cx,%edx
		inc    %ecx
		mov    data_7d794,%ebx
		mov    %cx,data_7d01e
		mov    %ax,(%ebx,%edx,2)
	jump_165f8:
		movb   $0x1,data_7d887
		jmp    jump_13cfc


/*----------------------------------------------------------------*/
func_16604:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		call   func_19ba9
		mov    $0x14,%edx
		xor    %eax,%eax
		call   func_17a02
		cwtl
		xor    %ebx,%ebx
		cmp    $0xffffffff,%eax
		jne    jump_1662f
	jump_16625:
		mov    $0xffffffff,%eax
		jmp    jump_167f4
	jump_1662f:
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		movb   $0x1,data_15ba22
	jump_16645:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_1677c
		cmpb   $0x0,data_15ba22
		jne    jump_1677c
		mov    data_7cf24,%ecx
		cmp    $0x118,%ecx
		jl     jump_166c6
		cmp    $0x13f,%ecx
		jg     jump_166c6
		mov    data_7cf28,%edi
		test   %edi,%edi
		jl     jump_166c6
		cmp    $0x63,%edi
		jg     jump_166c6
		test   %bx,%bx
		jle    jump_1669d
		sub    $0x5,%ebx
	jump_1669d:
		call   func_19ba9
		mov    $0x14,%edx
		movswl %bx,%eax
		call   func_17a02
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		call   func_19b67
		mov    %dh,data_15ba22
	jump_166c6:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_1671e
		cmp    $0x13f,%eax
		jge    jump_1671e
		mov    data_7cf28,%ecx
		cmp    $0x64,%ecx
		jl     jump_1671e
		cmp    $0xc7,%ecx
		jg     jump_1671e
		cmp    $0x2e,%bx
		jge    jump_166f5
		add    $0x5,%ebx
	jump_166f5:
		call   func_19ba9
		mov    $0x14,%edx
		movswl %bx,%eax
		call   func_17a02
		mov    data_15b9cc,%eax
		mov    $0x1,%cl
		call   func_2b44f
		call   func_19b67
		mov    %cl,data_15ba22
	jump_1671e:
		cmpl   $0x118,data_7cf24
		jge    jump_1677c
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		movswl %bx,%edx
		add    %edx,%eax
		movswl %ax,%edx
		mov    %eax,%esi
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		mov    $0x1,%ch
		sub    %edx,%eax
		mov    %ch,data_15ba22
		cmpw   $0x1,data_7d020(,%eax,2)
		jne    jump_1677c
		cmpb   $0x0,data_7d7ef(%edx)
		jne    jump_1677c
		cmpb   $0x0,data_7d855(%edx)
		jne    jump_1677c
		cmp    $0x33,%si
		jl     jump_167a2
	jump_1677c:
		cmpl   $0x2,data_7cf20
		jne    jump_16798
		cmpb   $0x0,data_15ba22
		jne    jump_16798
		call   func_319db
		jmp    jump_16625
	jump_16798:
		call   func_27bf2
		jmp    jump_16645
	jump_167a2:
		cmpw   $0x1388,data_7cf54(,%edx,2)
		jl     jump_167f2
		mov    $0x64,%edx
		mov    data_15b9cc,%eax
		mov    $0x13e,%ebx
		push   %eax
		mov    $0x78,%ecx
		mov    $0x1,%eax
		call   func_1843d
		push   $data_50307
		push   $0x66
		push   $0x5
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   w_dos_getch
		jmp    jump_16625
	jump_167f2:
		mov    %esi,%eax
	jump_167f4:
		add    $0xc,%esp
		jmp    jump_15f62


/*----------------------------------------------------------------*/
func_16986:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   func_19ba9
		xor    %esi,%esi
	jump_16991:
		mov    data_15b9cc,%edx
		push   %edx
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		mov    $0x4b,%ebx
		add    %edx,%edx
		xor    %eax,%eax
		lea    0x9(%edx),%ecx
		inc    %esi
		call   func_1843d
		cmp    $0x14,%si
		jl     jump_16991
		mov    $0x2,%eax
		mov    $0x4,%edx
		mov    $data_5032f,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xe,%edx
		mov    $data_50337,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x18,%edx
		mov    $data_50341,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x22,%edx
		mov    $data_5034b,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x2c,%edx
		mov    $data_50356,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x36,%edx
		mov    $data_5035e,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x40,%edx
		mov    $data_50368,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x4a,%edx
		mov    $data_50372,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x54,%edx
		mov    $data_5037d,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x5e,%edx
		mov    $data_50384,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x68,%edx
		mov    $data_5038e,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x72,%edx
		mov    $data_5039b,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x7c,%edx
		mov    $data_503a2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x86,%edx
		mov    $data_503aa,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x90,%edx
		mov    $data_503b4,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x9a,%edx
		mov    $data_503c0,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xa4,%edx
		mov    $data_503cb,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xae,%edx
		mov    $data_503d0,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xb8,%edx
		mov    $data_503da,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xc2,%edx
		mov    $data_503df,%ebx
		mov    $0xc7,%ecx
		call   func_18274
		mov    data_15b9cc,%ebx
		mov    $0xce,%eax
		push   %ebx
		mov    $0xbe,%edx
		mov    $0x10d,%ebx
		call   func_1851e
		mov    $0xd2,%eax
		mov    $0xc1,%edx
		mov    $data_503e4,%ebx
		mov    $0xa,%ecx
		call   func_18274
		mov    $0xfa,%eax
		mov    data_7d7b8,%ebx
		mov    $0xc1,%edx
		sar    $0x10,%ebx
		call   func_1822d
		mov    $0x127,%eax
		mov    data_15b9cc,%ecx
		mov    $0xb4,%edx
		push   %ecx
		mov    $0x13f,%ebx
		mov    $0xc7,%ecx
		call   func_1843d
		mov    $0x129,%eax
		mov    $0xb8,%edx
		mov    $data_503eb,%ebx
		call   func_18274
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_16be3:
		.long   func_16dfd
		.long   func_16e93
		.long   func_16f24
		.long   func_16fba
		.long   func_1704b
		.long   func_17122
		.long   func_171b4
		.long   func_17295
		.long   func_17326
		.long   func_17456
		.long   func_17460
		.long   func_1746a
		.long   func_17481
		.long   func_1748b
		.long   func_1750b
		.long   func_17515
		.long   func_1751f
		.long   func_175aa
		.long   func_17635
		.long   func_1774b


/*----------------------------------------------------------------*/
func_16c33:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x74,%esp
		xor    %ah,%ah
		mov    %ah,0x70(%esp)
		mov    data_56bfc,%ax
		mov    %eax,0x5c(%esp)
		mov    data_56bfa,%ax
		mov    %eax,0x58(%esp)
		xor    %eax,%eax
		mov    data_15ba23,%al
		mov    %ax,0x60(%esp)
		mov    data_15ba1c,%ax
		mov    %eax,0x54(%esp)
		mov    data_15ba1a,%ax
		lea    0x20(%esp),%edi
		mov    %eax,0x68(%esp)
		mov    data_56bf8,%ax
		mov    $data_11a9c,%esi
		mov    %eax,0x40(%esp)
		mov    data_56bf6,%ax
		mov    $0x7,%ecx
		mov    %eax,0x48(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x5c(%esp),%eax
		mov    %esp,%edi
		mov    $data_11ab0,%esi
		mov    $0x1,%dl
		mov    %eax,0x44(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    0x58(%esp),%eax
		mov    %dl,data_5268c
		xor    %edx,%edx
		mov    %eax,0x64(%esp)
		mov    %dx,data_7d7ba
		mov    %dx,0x50(%esp)
	jump_16cce:
		mov    0x4e(%esp),%eax
		mov    0x50(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		sar    $0x10,%eax
		mov    %si,0x50(%esp)
		mov    %cx,data_7cfba(,%eax,2)
		cmp    $0x33,%si
		jl     jump_16cce
		call   func_19ba9
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		mov    data_7d794,%eax
		add    %edx,%edx
		cmpw   $0x0,(%edx,%eax,1)
		je     jump_16d18
		mov    $0x1388,%eax
		call   w_dos_malloc
		mov    %eax,data_7d794
	jump_16d18:
		mov    $0x1,%esi
		xor    %ecx,%ecx
		mov    $0x4,%eax
		mov    %cx,data_7d01e
		mov    %si,data_7d78c
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b470
	jump_16d41:
		xor    %edi,%edi
		mov    %di,data_15ba1c
		mov    %di,data_15ba1a
	jump_16d51:
		cmpl   $0x0,data_1a0168
		jne    jump_16da4
		lea    0x34(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x34(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x2,data_7cf20
		jne    jump_16d81
		cmpb   $0x0,data_15ba22
		je     jump_16da4
	jump_16d81:
		cmpl   $0x0,data_1a0168
		jne    jump_16d51
		mov    data_7cf20,%esi
		cmp    $0x1,%esi
		je     jump_16d51
		cmp    $0x2,%esi
		je     jump_16d51
		xor    %bl,%bl
		mov    %bl,data_15ba22
		jmp    jump_16d51
	jump_16da4:
		mov    data_1a0168,%ebp
		test   %ebp,%ebp
		jne    jump_17788
		call   func_16986
		mov    $0x1,%bh
		mov    0x44(%esp),%eax
		push   %ebp
		mov    $0x5a,%edx
		mov    $0xc7,%ecx
		push   $0xa
		mov    %bh,data_15ba22
		mov    %ax,data_56bfc
		mov    0x6c(%esp),%eax
		push   $0x5a
		xor    %ebx,%ebx
		mov    %ax,data_56bfa
		xor    %eax,%eax
		call   func_31a49
		dec    %eax
		cmp    $0x13,%eax
		ja     jump_17788
		jmp    *vtable_16be3(,%eax,4)


/*----------------------------------------------------------------*/
func_16dfd:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x1,(%eax,%ecx,2)
	jump_16e89:
		mov    $data_503f0,%eax
		jmp    jump_17245


/*----------------------------------------------------------------*/
func_16e93:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x2,(%eax,%ecx,2)
		jmp    jump_16e89


/*----------------------------------------------------------------*/
func_16f24:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x3,(%eax,%ecx,2)
		mov    $data_503f0,%eax
		jmp    jump_170dd


/*----------------------------------------------------------------*/
func_16fba:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x4,(%eax,%ecx,2)
		jmp    jump_16e89


/*----------------------------------------------------------------*/
func_1704b:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %bx,%esi
		lea    (%eax,%eax,1),%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x5,(%ecx,%eax,1)
	jump_170d8:
		mov    $data_503fa,%eax
	jump_170dd:
		movswl %bx,%edx
		call   func_28091
		mov    %eax,%ecx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%edi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		mov    %cx,(%eax,%edi,2)
		jmp    jump_17286


/*----------------------------------------------------------------*/
func_17122:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %bx,%esi
		lea    (%eax,%eax,1),%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x6,(%ecx,%eax,1)
		jmp    jump_170d8


/*----------------------------------------------------------------*/
func_171b4:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		movw   $0x7,(%eax,%ecx,2)
	jump_17240:
		mov    $data_503fa,%eax
	jump_17245:
		movswl %bx,%edx
		call   func_28091
		mov    %eax,%ecx
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %bx,%esi
		lea    (%eax,%eax,1),%edi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		mov    %cx,(%edi,%eax,1)
	jump_17286:
		movswl %bx,%eax
	jump_17289:
		movb   $0x1,data_7d855(%eax)
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_17295:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%ebx
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    data_7cfba(,%edx,2),%si
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %bx,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %bx,%esi
		movswl %ax,%ecx
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %esi,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		movw   $0x8,(%eax,%ecx,2)
		jmp    jump_17240


/*----------------------------------------------------------------*/
func_17326:
/*----------------------------------------------------------------*/
		call   func_16604
		mov    %eax,%esi
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_17788
		mov    $0x5,%ebx
		lea    0x4c(%esp),%edx
		lea    0x50(%esp),%eax
		call   func_11ffd
		test   %ax,%ax
		je     jump_17788
		movswl %si,%edx
		mov    data_7cfba(,%edx,2),%ax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %ebx,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		mov    data_7d7ba,%dx
		mov    %dx,(%eax,%ecx,2)
		movswl %si,%edx
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %si,%ebx
		lea    (%eax,%eax,1),%ecx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    data_7cfba(,%edx,2),%bx
		inc    %ebx
		mov    data_7d028(,%eax,2),%eax
		mov    %bx,data_7cfba(,%edx,2)
		movswl %si,%edx
		movw   $0x9,(%ecx,%eax,1)
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %si,%ebx
		lea    (%eax,%eax,1),%ecx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		mov    data_7cfba(,%edx,2),%di
		sub    %ebx,%eax
		inc    %edi
		mov    data_7d028(,%eax,2),%eax
		mov    %di,data_7cfba(,%edx,2)
		lea    (%eax,%ecx,1),%edx
		mov    0x50(%esp),%eax
		mov    %ax,(%edx)
		movswl %si,%edx
		mov    data_7cfba(,%edx,2),%ax
		cwtl
		movswl %si,%ebx
		lea    (%eax,%eax,1),%ecx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		mov    data_7cfba(,%edx,2),%bx
		inc    %ebx
		mov    data_7d028(,%eax,2),%eax
		mov    %bx,data_7cfba(,%edx,2)
		lea    (%eax,%ecx,1),%edx
		mov    0x4c(%esp),%eax
		mov    %ax,(%edx)
		movswl %si,%eax
		jmp    jump_17289


/*----------------------------------------------------------------*/
func_17456:
/*----------------------------------------------------------------*/
		call   func_16419
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_17460:
/*----------------------------------------------------------------*/
		call   func_15be9
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_1746a:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7d887
		jne    jump_17788
		call   func_1507f
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_17481:
/*----------------------------------------------------------------*/
		call   func_14b43
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_1748b:
/*----------------------------------------------------------------*/
		call   func_16604
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     jump_17788
		mov    data_7cfba(,%ebx,2),%ax
		mov    %ax,0x6c(%esp)
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    0x6a(%esp),%ecx
		shl    $0x2,%eax
		sar    $0x10,%ecx
		sub    %ebx,%eax
		mov    0x6c(%esp),%edi
		add    %ecx,%ecx
		mov    data_7d028(,%eax,2),%esi
		inc    %edi
		add    %esi,%ecx
		mov    %di,data_7cfba(,%ebx,2)
		mov    data_7d7ba,%si
		mov    %si,(%ecx)
		mov    data_7cfba(,%ebx,2),%si
		movswl %si,%ecx
		inc    %esi
		mov    data_7d028(,%eax,2),%eax
		mov    %si,data_7cfba(,%ebx,2)
		movw   $0xe,(%eax,%ecx,2)
		movb   $0x1,data_7d855(%ebx)
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_1750b:
/*----------------------------------------------------------------*/
		call   func_1619c
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_17515:
/*----------------------------------------------------------------*/
		call   func_159a8
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_1751f:
/*----------------------------------------------------------------*/
		mov    $data_5040a,%eax
		mov    $data_50404,%edx
		mov    %esp,%ebx
		call   func_30bad
		test   %eax,%eax
		je     jump_17788
		mov    0xb(%esp),%al
		mov    %al,0x20(%esp)
		mov    0xc(%esp),%al
		mov    %al,0x21(%esp)
		mov    0xd(%esp),%al
		mov    %al,0x22(%esp)
		mov    0xe(%esp),%al
		mov    0xc(%esp),%dh
		mov    %al,0x23(%esp)
		cmp    $0x2e,%dh
		jne    jump_17569
		xor    %al,%al
		mov    %al,0x21(%esp)
		jmp    jump_17582
	jump_17569:
		cmpb   $0x2e,0xd(%esp)
		jne    jump_17578
		xor    %ch,%ch
		mov    %ch,0x22(%esp)
		jmp    jump_17582
	jump_17578:
		cmp    $0x2e,%al
		jne    jump_17582
		xor    %cl,%cl
		mov    %cl,0x23(%esp)
	jump_17582:
		call   func_11f2d
		lea    0x20(%esp),%eax
		call   func_3b155
		cwtl
		call   func_11ace
		lea    0x20(%esp),%eax
		call   func_3b155
		cwtl
		call   func_13d99
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_175aa:
/*----------------------------------------------------------------*/
		mov    $data_5040a,%eax
		mov    $data_50404,%edx
		mov    %esp,%ebx
		call   func_30bad
		test   %eax,%eax
		je     jump_17788
		mov    0xb(%esp),%al
		mov    %al,0x20(%esp)
		mov    0xc(%esp),%al
		mov    %al,0x21(%esp)
		mov    0xd(%esp),%al
		mov    %al,0x22(%esp)
		mov    0xe(%esp),%al
		mov    0xc(%esp),%bh
		mov    %al,0x23(%esp)
		cmp    $0x2e,%bh
		jne    jump_175f4
		xor    %dl,%dl
		mov    %dl,0x21(%esp)
		jmp    jump_1760d
	jump_175f4:
		cmpb   $0x2e,0xd(%esp)
		jne    jump_17603
		xor    %ah,%ah
		mov    %ah,0x22(%esp)
		jmp    jump_1760d
	jump_17603:
		cmp    $0x2e,%al
		jne    jump_1760d
		xor    %al,%al
		mov    %al,0x23(%esp)
	jump_1760d:
		call   func_11f2d
		lea    0x20(%esp),%eax
		call   func_3b155
		cwtl
		call   func_11ace
		lea    0x20(%esp),%eax
		call   func_3b155
		cwtl
		call   func_13e47
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_17635:
/*----------------------------------------------------------------*/
		mov    $data_5040a,%eax
		mov    $data_50404,%edx
		mov    %esp,%ebx
		call   func_30bad
		mov    %esp,%eax
		mov    $data_50417,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_17788
		mov    %esp,%eax
		mov    $0x76,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_1767a
		mov    %esp,%eax
		mov    $0x56,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		jne    jump_176a7
	jump_1767a:
		mov    %esp,%edi
		mov    $data_50010,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1768a:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_176a6
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1768a
	jump_176a6:
		pop    %edi
	jump_176a7:
		mov    0xb(%esp),%al
		mov    %al,0x20(%esp)
		mov    0xc(%esp),%al
		mov    %al,0x21(%esp)
		mov    0xd(%esp),%al
		mov    %al,0x22(%esp)
		mov    0xe(%esp),%al
		mov    0xc(%esp),%ch
		mov    %al,0x23(%esp)
		cmp    $0x2e,%ch
		jne    jump_176d8
		xor    %bl,%bl
		mov    %bl,0x21(%esp)
		jmp    jump_176f4
	jump_176d8:
		cmpb   $0x2e,0xd(%esp)
		jne    jump_176e7
		xor    %dh,%dh
		mov    %dh,0x22(%esp)
		jmp    jump_176f4
	jump_176e7:
		cmpb   $0x2e,0xe(%esp)
		jne    jump_176f4
		xor    %dl,%dl
		mov    %dl,0x23(%esp)
	jump_176f4:
		mov    data_7d7ba,%ax
		xor    %ebx,%ebx
		mov    %ax,data_7d7b8
		mov    %bx,0x50(%esp)
	jump_17707:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    0x50(%esp),%ebx
		shl    $0x2,%eax
		inc    %ebx
		sub    %edx,%eax
		mov    data_7cfba(,%edx,2),%dx
		mov    %bx,0x50(%esp)
		mov    %dx,data_7d026(,%eax,2)
		cmp    $0x33,%bx
		jl     jump_17707
		lea    0x20(%esp),%eax
		call   func_3b155
		cwtl
		call   func_11c64
		jmp    jump_17788


/*----------------------------------------------------------------*/
func_1774b:
/*----------------------------------------------------------------*/
		mov    $data_50423,%eax
		call   func_2d4a3
		cmp    $0xffffffff,%eax
		je     jump_17788
		mov    $0x1,%cl
		xor    %edx,%edx
		mov    %cl,0x70(%esp)
		mov    %dx,0x50(%esp)
	jump_17767:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		xor    %edi,%edi
		mov    %di,data_7cfba(,%eax,2)
		mov    0x50(%esp),%eax
		inc    %eax
		mov    %ax,0x50(%esp)
		cmp    $0x33,%ax
		jl     jump_17767
	jump_17788:
		mov    data_7cf24,%eax
		cmp    $0x127,%eax
		jl     jump_177b1
		cmp    $0x13f,%eax
		jg     jump_177b1
		mov    data_7cf28,%ebx
		cmp    $0xb4,%ebx
		jl     jump_177b1
		cmp    $0xc7,%ebx
		jle    jump_177be
	jump_177b1:
		cmpl   $0x0,data_1a0168
		je     jump_17848
	jump_177be:
		xor    %esi,%esi
		mov    %si,0x50(%esp)
	jump_177c5:
		mov    0x4e(%esp),%eax
		sar    $0x10,%eax
		cmpb   $0x0,data_7d7ef(%eax)
		ja     jump_177ee
		cmpb   $0x1,data_7d855(%eax)
		je     jump_177ee
		mov    0x50(%esp),%edi
		inc    %edi
		mov    %di,0x50(%esp)
		cmp    $0x33,%di
		jl     jump_177c5
	jump_177ee:
		cmpw   $0x33,0x50(%esp)
		jge    jump_17830
		call   func_12857
		mov    data_7d7ba,%cx
		xor    %ebx,%ebx
		inc    %ecx
		mov    %bx,0x50(%esp)
		mov    %cx,data_7d7ba
	jump_17811:
		mov    0x4e(%esp),%eax
		mov    0x50(%esp),%esi
		xor    %dl,%dl
		inc    %esi
		sar    $0x10,%eax
		mov    %si,0x50(%esp)
		mov    %dl,data_7d855(%eax)
		cmp    $0x33,%si
		jl     jump_17811
	jump_17830:
		cmpl   $0x0,data_1a0168
		je     jump_17848
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_17848:
		movb   $0x1,data_15ba22
		call   func_19ba9
		mov    data_56bfc,%ax
		mov    %eax,0x44(%esp)
		mov    data_56bfa,%ax
		mov    %eax,0x64(%esp)
		xor    %eax,%eax
		mov    $0x140,%ebx
		mov    %ax,0x50(%esp)
	jump_17874:
		mov    0x4e(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpl   $0x0,data_7d028(,%eax,2)
		je     jump_178b0
		mov    data_543cc,%dx
		mov    data_543ca,%eax
		inc    %edx
		sar    $0x10,%eax
		mov    %dx,data_543cc
		mov    %bx,data_83d84(,%eax,2)
	jump_178b0:
		mov    0x50(%esp),%ecx
		inc    %ecx
		inc    %ebx
		mov    %cx,0x50(%esp)
		cmp    $0x32,%cx
		jl     jump_17874
		cmpl   $0x0,data_1a0214
		je     jump_178e5
		mov    data_56bfa,%di
		cmp    $0x1,%di
		jle    jump_178e5
		mov    %edi,%eax
		dec    %eax
		mov    %ax,data_56bfa
		call   func_126ac
	jump_178e5:
		cmpl   $0x0,data_1a0234
		je     jump_17913
		mov    data_56bf8,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		dec    %eax
		cmp    %eax,%edx
		jge    jump_17913
		incw   data_56bfa
		call   func_126ac
	jump_17913:
		cmpl   $0x0,data_1a0220
		je     jump_17937
		mov    data_56bfc,%bx
		test   %bx,%bx
		jle    jump_17937
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,data_56bfc
		call   func_126ac
	jump_17937:
		cmpl   $0x0,data_1a0228
		je     jump_17964
		mov    data_56bfa,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		cmp    %eax,%edx
		jge    jump_17964
		incw   data_56bfc
		call   func_126ac
	jump_17964:
		call   func_21e29
		call   func_2294d
		mov    $0x4,%eax
		call   func_2216f
		mov    data_15b9cc,%eax
		mov    0x70(%esp),%bl
		call   func_2b470
		cmp    $0x1,%bl
		je     jump_17995
		call   func_27bf2
		jmp    jump_16d41
	jump_17995:
		call   func_11f2d
		mov    0x5c(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x58(%esp),%eax
		mov    %ax,data_56bfa
		mov    0x54(%esp),%eax
		mov    %ax,data_15ba1c
		mov    0x68(%esp),%eax
		mov    %ax,data_15ba1a
		mov    0x40(%esp),%eax
		mov    %ax,data_56bf8
		mov    0x48(%esp),%eax
		mov    %ax,data_56bf6
		xor    %eax,%eax
		mov    0x60(%esp),%edi
		mov    data_15ba23,%al
		cmp    %di,%ax
		je     jump_179f2
		mov    0x5e(%esp),%eax
		sar    $0x10,%eax
		call   func_20eb0
	jump_179f2:
		xor    %bh,%bh
		mov    %bh,data_5268c
		add    $0x74,%esp
		jmp    jump_15f61


/*----------------------------------------------------------------*/
func_17a02:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		call   func_19ba9
		xor    %edx,%edx
		mov    $0x118,%eax
		mov    %edx,0xc(%esp)
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_17a50
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_5042d,%ebx
		call   func_18274
	jump_17a50:
		imul   $0x28,0x4(%esp),%edx
		mov    0x4(%esp),%eax
		mov    %ax,0x1c(%esp)
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,0x18(%esp)
		mov    %edx,%eax
		add    $0x4,%eax
		neg    %edx
		add    %edx,%eax
		mov    %ax,0x14(%esp)
		jmp    jump_17bcf
	jump_17a7d:
		mov    %esi,%edx
		sub    %eax,%edx
		mov    %edx,%edi
		mov    $0x117,%ebx
		shl    $0x2,%edi
		mov    data_15b9cc,%ecx
		add    %edx,%edi
		push   %ecx
		shl    $0x3,%edi
		xor    %eax,%eax
		lea    0x27(%edi),%ecx
		mov    %edi,%edx
		call   func_1843d
		cmpw   $0x32,0x1c(%esp)
		jge    jump_17bb9
		lea    0x140(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    data_82935(%eax),%bl
		imul   $0x3842,%ebx,%ebx
		xor    %edx,%edx
		mov    data_82936(%eax),%dx
		mov    data_840a6(%ebx,%edx,4),%ebx
		cmpb   $0x1,data_82934(%eax)
		jne    jump_17bb9
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		add    %ecx,%edi
		sub    %eax,%edi
		mov    %di,0x10(%esp)
		mov    0xe(%esp),%eax
		xor    %edx,%edx
		sar    $0x10,%eax
		mov    0x2(%ebx),%dx
		mov    %eax,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0xa(%ebx),%edi
		mov    data_15b9cc,%ebp
		mov    %edi,%ebx
		sub    %eax,%ecx
		mov    0x8(%esp),%edx
		movswl %cx,%eax
		mov    %ebp,%ecx
		call   func_2b240
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		add    %eax,%eax
		add    $data_7d020,%eax
		add    $0xc,%eax
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0xc(%esp)
		cmpb   $0x0,data_7d7ef(%esi)
		ja     jump_17b84
		cmpb   $0x1,data_7d855(%esi)
		jne    jump_17bb9
	jump_17b84:
		mov    data_15b9cc,%esi
		push   %esi
		mov    0x12(%esp),%esi
		mov    $0x1f,%eax
		sar    $0x10,%esi
		mov    $0x26,%ebx
		lea    0x6(%esi),%ecx
		lea    -0x2(%esi),%edx
		call   func_1851e
		mov    $0x20,%eax
		mov    $data_50430,%ebx
		lea    0x1(%esi),%edx
		call   func_18274
	jump_17bb9:
		mov    0x14(%esp),%ebx
		mov    0x1c(%esp),%ecx
		add    $0x28,%ebx
		inc    %ecx
		mov    %bx,0x14(%esp)
		mov    %cx,0x1c(%esp)
	jump_17bcf:
		mov    0x2(%esp),%eax
		mov    0x1a(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		lea    0x5(%eax),%edx
		cmp    %edx,%esi
		jl     jump_17a7d
		mov    $0x118,%eax
		mov    $0x64,%edx
		mov    data_15b9cc,%ebx
		mov    $0xc7,%ecx
		push   %ebx
		mov    $0x13f,%ebx
		mov    0x20(%esp),%esi
		call   func_1843d
		cmp    $0x32,%si
		jge    jump_17c26
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_50432,%ebx
		call   func_18274
	jump_17c26:
		mov    0xc(%esp),%edi
		call   func_19b67
		test   %di,%di
		jle    jump_17c42
		mov    $0x1,%eax
	jump_17c39:
		add    $0x20,%esp
	jump_17c3c:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_17c42:
		mov    $0xffffffff,%eax
		jmp    jump_17c39


/*----------------------------------------------------------------*/
func_17c49:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		push   %eax
		push   %edx
		call   func_19ba9
		xor    %edx,%edx
		mov    $0x118,%eax
		mov    %edx,0x20(%esp)
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_17c97
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_5042d,%ebx
		call   func_18274
	jump_17c97:
		imul   $0x28,0x4(%esp),%edx
		mov    0x4(%esp),%eax
		mov    %ax,0x1c(%esp)
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,0x10(%esp)
		mov    %edx,%eax
		add    $0x4,%eax
		neg    %edx
		add    %edx,%eax
		mov    %ax,0x18(%esp)
		jmp    jump_17e22
	jump_17cc4:
		mov    %esi,%edx
		sub    %eax,%edx
		mov    %edx,%edi
		mov    $0x117,%ebx
		shl    $0x2,%edi
		mov    data_15b9cc,%ecx
		add    %edx,%edi
		push   %ecx
		shl    $0x3,%edi
		xor    %eax,%eax
		lea    0x27(%edi),%ecx
		mov    %edi,%edx
		call   func_1843d
		cmpw   $0xb5,0x1c(%esp)
		jge    jump_17e0c
		mov    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		shl    $0x2,%eax
		mov    %esi,%edx
		add    %esi,%eax
		xor    %esi,%edx
		mov    data_82935(%eax),%dl
		imul   $0x3842,%edx,%edx
		xor    %ebx,%ebx
		mov    data_82936(%eax),%bx
		mov    data_840a6(%edx,%ebx,4),%ebx
		cmpl   $0x0,0xa(%ebx)
		je     jump_17e0c
		lea    -0x2(%esi),%edx
		mov    %edx,%ebp
		shl    $0x2,%ebp
		add    %edx,%ebp
		shl    $0x3,%ebp
		cmpb   $0x1,data_19e144(%ebp)
		jne    jump_17e0c
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		add    %ecx,%edi
		sub    %eax,%edi
		mov    data_15b9cc,%eax
		xor    %edx,%edx
		mov    %eax,0xc(%esp)
		mov    0xa(%ebx),%eax
		mov    0x2(%ebx),%dx
		mov    %eax,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %di,0x14(%esp)
		mov    0x12(%esp),%edi
		sar    $0x10,%edi
		mov    0x8(%esp),%ebx
		sub    %eax,%ecx
		mov    %edi,%edx
		movswl %cx,%eax
		mov    0xc(%esp),%ecx
		call   func_2b240
		mov    $data_19e144,%eax
		add    %ebp,%eax
		add    $0x5,%eax
		push   %eax
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x20(%esp)
		cmpb   $0x0,data_7d7ef(%esi)
		ja     jump_17dd8
		cmpb   $0x1,data_7d855(%esi)
		jne    jump_17e0c
	jump_17dd8:
		mov    0x12(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $0x26,%ebx
		push   %eax
		sar    $0x10,%esi
		mov    $0x1f,%eax
		lea    0x6(%esi),%ecx
		lea    -0x2(%esi),%edx
		call   func_1851e
		mov    $0x20,%eax
		mov    $data_50430,%ebx
		lea    0x1(%esi),%edx
		call   func_18274
	jump_17e0c:
		mov    0x18(%esp),%ebx
		mov    0x1c(%esp),%ecx
		add    $0x28,%ebx
		inc    %ecx
		mov    %bx,0x18(%esp)
		mov    %cx,0x1c(%esp)
	jump_17e22:
		mov    0x2(%esp),%eax
		mov    0x1a(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		lea    0x5(%eax),%edx
		cmp    %edx,%esi
		jl     jump_17cc4
		mov    $0x118,%eax
		mov    $0x64,%edx
		mov    data_15b9cc,%ebx
		mov    $0xc7,%ecx
		push   %ebx
		mov    $0x13f,%ebx
		mov    0x20(%esp),%esi
		call   func_1843d
		cmp    $0xb5,%si
		jge    jump_17e7a
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_50432,%ebx
		call   func_18274
	jump_17e7a:
		mov    0x20(%esp),%edi
		call   func_19b67
		test   %di,%di
		jle    jump_17e8f
		mov    $0x1,%eax
		jmp    jump_17e94
	jump_17e8f:
		mov    $0xffffffff,%eax
	jump_17e94:
		add    $0x24,%esp
		jmp    jump_17c3c

vtable_17e9c:
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0


/*----------------------------------------------------------------*/
func_17eb7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_7d955,%al
		xor    %edx,%edx
		mov    %al,data_f30b7
		xor    %eax,%eax
		jmp    jump_17eef
	jump_17ec9:
		mov    data_f30b7,%bl
		cmp    data_19ac33(%eax),%bl
		jne    jump_17ee9
		mov    data_19ac83(%eax),%ebx
		sar    $0x10,%ebx
		shl    $0x4,%ebx
		mov    %ebx,data_f30a0
	jump_17ee9:
		add    $0x88,%eax
		inc    %edx
	jump_17eef:
		xor    %ebx,%ebx
		mov    data_1a00c8,%bx
		cmp    %ebx,%edx
		jl     jump_17ec9
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_17eff:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		mov    %eax,%ebx
		mov    $0x6,%ecx
		mov    %esp,%edi
		mov    $vtable_17e9c,%esi
		mov    $data_196c14,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    $0x82,%ecx
		mov    %edx,0x1c(%esp)
		call   func___STOSB
		mov    $data_196c96,%edx
		mov    %ebx,%eax
		lea    0x20(%esp),%ebx
		call   func_25dd3
		mov    $data_172224,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		xor    %ebx,%ebx
	jump_17f50:
		mov    0x1e(%esp),%eax
		sar    $0x10,%eax
		add    $0x8c,%eax
		cmp    %eax,%ebx
		jge    jump_1812d
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    %ebx,%edx
		xor    %eax,%eax
	jump_17f78:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_17f78
		mov    %esp,%eax
		mov    0x1c(%esp),%edx
		push   %eax
		mov    $0xa,%eax
		add    %edx,%eax
		cwtl
		push   %eax
		add    $0x1a,%ebx
		push   $0x32
		mov    %ebx,%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
	jump_17faa:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_17faa
		mov    %esp,%eax
		mov    0x1c(%esp),%ecx
		push   %eax
		mov    $0x1e,%eax
		add    %ecx,%eax
		cwtl
		push   %eax
		add    $0x1a,%ebx
		push   $0x32
		mov    %ebx,%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
	jump_17fdc:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_17fdc
		mov    %esp,%eax
		mov    0x1c(%esp),%esi
		push   %eax
		mov    $0x32,%eax
		add    %esi,%eax
		cwtl
		push   %eax
		add    $0x1a,%ebx
		push   $0x32
		mov    %ebx,%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
	jump_1800e:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_1800e
		mov    %esp,%eax
		mov    0x1c(%esp),%edi
		push   %eax
		mov    $0x46,%eax
		add    %edi,%eax
		cwtl
		push   %eax
		add    $0x1a,%ebx
		push   $0x32
		mov    %ebx,%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
	jump_18040:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_18040
		mov    %esp,%eax
		mov    0x1c(%esp),%edx
		push   %eax
		mov    $0x5a,%eax
		add    %edx,%eax
		cwtl
		push   %eax
		add    $0x1a,%ebx
		push   $0x32
		mov    %ebx,%edx
		call   func_2c6ab
		add    $0xc,%esp
		xor    %eax,%eax
	jump_18072:
		inc    %eax
		mov    data_196c14(%edx),%cl
		inc    %edx
		mov    %cl,-0x1(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_18072
		mov    %esp,%eax
		mov    0x1c(%esp),%ecx
		push   %eax
		mov    $0x6e,%eax
		add    %ecx,%eax
		cwtl
		push   %eax
		push   $0x32
		mov    $data_172224,%esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x1900,%ecx
		mov    data_15b9cc,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $data_17c4a4,%esi
		mov    data_15b9cc,%edi
		mov    $0x1900,%ecx
		add    $0xa280,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   func_2b206
		call   func_2b206
		call   func_2b206
		mov    data_15b9cc,%eax
		call   func_2b470
		mov    0x1c(%esp),%eax
		lea    -0x1(%eax),%ecx
		add    $0x1a,%ebx
		mov    %ecx,0x1c(%esp)
		test   %eax,%eax
		jne    jump_18122
		mov    $0x14,%esi
		sub    $0x82,%ebx
		mov    %esi,0x1c(%esp)
		jmp    jump_17f50
	jump_18122:
		sub    $0x9c,%ebx
		jmp    jump_17f50
	jump_1812d:
		add    $0x24,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18136:
/*----------------------------------------------------------------*/
		mov    %al,data_529fd
		ret


/*----------------------------------------------------------------*/
func_1813c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %al,(%esp)
		mov    %al,%dl
		xor    %ah,%ah
		sub    $0x20,%dl
		mov    %ah,0x4(%esp)
		mov    %dl,(%esp)
	jump_18156:
		xor    %dh,%dh
		mov    $0x80,%bl
		mov    %dh,0xc(%esp)
		mov    %bl,0x8(%esp)
		jmp    jump_181e4
	jump_18167:
		xor    %edx,%edx
		mov    0x4(%esp),%dl
		xor    %ebx,%ebx
		mov    data_526fc(%edx,%eax,8),%bl
		xor    %eax,%eax
		mov    data_826c8,%ecx
		mov    0x8(%esp),%al
		add    %ecx,%edx
		test   %eax,%ebx
		je     jump_181a6
		mov    data_15b9cc,%ecx
		mov    data_826c4,%edi
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0xc(%esp),%al
		mov    data_529fd,%bl
		add    %edi,%eax
		jmp    jump_181cb
	jump_181a6:
		cmpb   $0x1,data_826d6
		jne    jump_181d0
		mov    data_15b9cc,%ecx
		mov    data_826c4,%esi
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0xc(%esp),%al
		mov    data_529fc,%bl
		add    %esi,%eax
	jump_181cb:
		call   func_2b21d
	jump_181d0:
		mov    0x8(%esp),%ah
		mov    0xc(%esp),%dl
		shr    %ah
		inc    %dl
		mov    %ah,0x8(%esp)
		mov    %dl,0xc(%esp)
	jump_181e4:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    0xc(%esp),%dl
		mov    data_5269c(%eax),%bh
		cmp    %bh,%dl
		jb     jump_18167
		mov    0x4(%esp),%cl
		inc    %cl
		mov    %cl,0x4(%esp)
		cmp    $0x7,%cl
		jb     jump_18156
		mov    %bh,%al
		mov    data_826c4,%ebp
		and    $0xff,%eax
		add    %eax,%ebp
		mov    %ebp,data_826c4
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1822d:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %ebx,%eax
		mov    $data_826cc,%ecx
		dec    %edx
		mov    $0xa,%ebx
		mov    %edx,data_826c8
		mov    %ecx,%edx
		mov    %esi,data_826c4
		call   func_itoa_
	jump_18251:
		cmpb   $0x0,(%ecx)
		je     jump_18271
		cmpl   $0x1,data_826c0
		jne    jump_18265
		incb   data_529fd
	jump_18265:
		xor    %eax,%eax
		mov    (%ecx),%al
		call   func_1813c
		inc    %ecx
		jmp    jump_18251
	jump_18271:
		pop    %esi
		pop    %ecx
	jump_18273:
		ret


/*----------------------------------------------------------------*/
func_18274:
/*----------------------------------------------------------------*/
		dec    %edx
		mov    %eax,data_826c4
		mov    %edx,data_826c8
	jump_18280:
		cmpb   $0x0,(%ebx)
		je     jump_18273
		cmpl   $0x1,data_826c0
		jne    jump_18294
		incb   data_529fd
	jump_18294:
		xor    %eax,%eax
		mov    (%ebx),%al
		call   func_1813c
		inc    %ebx
		jmp    jump_18280


/*----------------------------------------------------------------*/
func_18303:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    0x28(%esp),%edx
		movzbl 0x24(%esp),%esi
		mov    %ebx,%eax
		push   %edx
		mov    0x10(%esp),%edx
		mov    0xa(%esp),%edi
		sub    %edx,%eax
		mov    0xe(%esp),%ebp
		mov    %ax,0x14(%esp)
		dec    %eax
		sar    $0x10,%edi
		movswl %ax,%ecx
		mov    %edx,%eax
		mov    %esi,%ebx
		inc    %eax
		mov    %edi,%edx
		cwtl
		sar    $0x10,%ebp
		call   func_2b4d6
		mov    0x28(%esp),%ebx
		mov    0xe(%esp),%ecx
		mov    -0x2(%esp),%edx
		mov    %ebp,%eax
		push   %ebx
		sar    $0x10,%ecx
		sar    $0x10,%edx
		mov    %esi,%ebx
		call   func_2b4d6
		mov    0x28(%esp),%ecx
		mov    (%esp),%eax
		mov    0x8(%esp),%ebx
		mov    %edi,%edx
		sub    %ebx,%eax
		push   %ecx
		mov    %ax,0x14(%esp)
		mov    %esi,%ebx
		mov    0x12(%esp),%ecx
		mov    %ebp,%eax
		sar    $0x10,%ecx
		mov    0x2c(%esp),%ebp
		call   func_2b4a8
		mov    0x10(%esp),%eax
		push   %ebp
		inc    %eax
		mov    %edi,%edx
		movswl %ax,%ecx
		mov    0x6(%esp),%eax
		mov    %esi,%ebx
		sar    $0x10,%eax
		call   func_2b4a8
		add    $0x14,%esp
	jump_183a4:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_183aa:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %ecx
		mov    0x20(%esp),%ecx
		movzbl 0x1c(%esp),%esi
		movswl %ax,%ebp
		movswl %dx,%edi
		push   %ecx
		movswl %bx,%ecx
		mov    %edi,%edx
		mov    %ecx,%eax
		mov    %ecx,0x8(%esp)
		sub    %ebp,%eax
		mov    %esi,%ebx
		mov    %eax,0xc(%esp)
		lea    -0x1(%eax),%ecx
		lea    0x1(%ebp),%eax
		call   func_2b545
		mov    0x20(%esp),%eax
		push   %eax
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		mov    0xc(%esp),%ecx
		mov    %eax,0xc(%esp)
		mov    %esi,%ebx
		mov    0xc(%esp),%edx
		mov    %ebp,%eax
		call   func_2b545
		mov    0x20(%esp),%edx
		mov    0x8(%esp),%eax
		mov    %esi,%ebx
		sub    %edi,%eax
		push   %edx
		mov    %eax,0xc(%esp)
		mov    %edi,%edx
		mov    0xc(%esp),%ecx
		mov    %ebp,%eax
		call   func_2b519
		mov    0x20(%esp),%ebx
		mov    0x8(%esp),%ecx
		mov    0x4(%esp),%eax
		mov    %edi,%edx
		push   %ebx
		inc    %ecx
		mov    %esi,%ebx
		call   func_2b519
		add    $0xc,%esp
		jmp    jump_183a4


/*----------------------------------------------------------------*/
func_1843d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    0x28(%esp),%edx
		mov    0x6(%esp),%edi
		mov    0xa(%esp),%esi
		mov    %ebx,%eax
		push   %edx
		sar    $0x10,%edi
		mov    0x10(%esp),%edx
		sar    $0x10,%esi
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    %ax,0x14(%esp)
		mov    data_53d09,%bl
		mov    0x12(%esp),%ebp
		mov    %edi,%edx
		sar    $0x10,%ebp
		mov    %esi,%eax
		mov    %ebp,%ecx
		call   func_2b4d6
		mov    0x28(%esp),%ebx
		mov    (%esp),%eax
		push   %ebx
		sub    0xc(%esp),%eax
		mov    %edi,%edx
		mov    %ax,0x18(%esp)
		xor    %ebx,%ebx
		mov    0x16(%esp),%ecx
		mov    data_53d09,%bl
		mov    %esi,%eax
		sar    $0x10,%ecx
		call   func_2b4a8
		mov    0x28(%esp),%ecx
		mov    -0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    data_53d0a,%bl
		push   %ecx
		sar    $0x10,%edx
		mov    %ebp,%ecx
		mov    0x2c(%esp),%esi
		call   func_2b4d6
		mov    0x14(%esp),%eax
		push   %esi
		mov    %edi,%edx
		inc    %eax
		xor    %ebx,%ebx
		movswl %ax,%ecx
		mov    0x6(%esp),%eax
		mov    data_53d0a,%bl
	jump_184e2:
		sar    $0x10,%eax
		call   func_2b4a8
		mov    0x14(%esp),%eax
		dec    %eax
		push   %esi
		cwtl
		push   %eax
		mov    0x18(%esp),%eax
		dec    %eax
		movswl %ax,%ecx
		mov    0x10(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x14(%esp),%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    data_53d0b,%bl
		cwtl
		call   func_2b56c
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_1851e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    0x28(%esp),%edx
		mov    0x6(%esp),%edi
		mov    0xa(%esp),%esi
		mov    %ebx,%eax
		push   %edx
		sar    $0x10,%edi
		mov    0x10(%esp),%edx
		sar    $0x10,%esi
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    %ax,0x14(%esp)
		mov    data_53d0a,%bl
		mov    0x12(%esp),%ebp
		mov    %edi,%edx
		sar    $0x10,%ebp
		mov    %esi,%eax
		mov    %ebp,%ecx
		call   func_2b4d6
		mov    0x28(%esp),%ebx
		mov    (%esp),%eax
		push   %ebx
		sub    0xc(%esp),%eax
		mov    %edi,%edx
		mov    %ax,0x18(%esp)
		xor    %ebx,%ebx
		mov    0x16(%esp),%ecx
		mov    data_53d0a,%bl
		mov    %esi,%eax
		sar    $0x10,%ecx
		call   func_2b4a8
		mov    0x28(%esp),%ecx
		mov    -0x2(%esp),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    data_53d09,%bl
		push   %ecx
		sar    $0x10,%edx
		mov    %ebp,%ecx
		mov    0x2c(%esp),%esi
		call   func_2b4d6
		mov    0x14(%esp),%eax
		push   %esi
		mov    %edi,%edx
		inc    %eax
		xor    %ebx,%ebx
		movswl %ax,%ecx
		mov    0x6(%esp),%eax
		mov    data_53d09,%bl
		jmp    jump_184e2


/*----------------------------------------------------------------*/
func_186dc:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x6,%eax
		mov    data_15b9cc,%ebx
		add    %esi,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x1(%ecx),%al
		mov    %eax,0x10(%esp)
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x8,%edx
		mov    (%ecx),%al
		lea    (%edx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x3(%ecx),%al
		mov    %edx,0x10(%esp)
		mov    %eax,0x4(%esp)
		mov    %eax,%edi
		xor    %eax,%eax
		shl    $0x8,%edi
		mov    0x2(%ecx),%al
		add    $0x4,%ecx
		lea    (%edi,%eax,1),%ebp
		xor    %eax,%eax
		mov    %esi,0x10(%esp)
		mov    %eax,0xc(%esp)
		mov    $0x140,%eax
		mov    %edi,0x4(%esp)
		sub    %esi,%eax
		mov    %ebp,0x4(%esp)
		mov    %eax,0x8(%esp)
		mov    $0x25,%ebp
		jmp    jump_187b1
	jump_18751:
		xor    %esi,%esi
		jmp    jump_1879c
	jump_18755:
		cmpb   $0xff,(%ecx)
		je     jump_18799
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    %eax,(%esp)
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		movzbl data_15b2b9(%eax),%edi
		mov    data_15b2b8(%eax),%dl
		add    %edx,%edi
		xor    %edx,%edx
		mov    data_15b2ba(%eax),%dl
		add    %edi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    $0x7,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%al
		mov    %al,(%ebx)
	jump_18799:
		inc    %ecx
		inc    %ebx
		inc    %esi
	jump_1879c:
		cmp    0x10(%esp),%esi
		jl     jump_18755
		mov    0xc(%esp),%edx
		mov    0x8(%esp),%eax
		inc    %edx
		add    %eax,%ebx
		mov    %edx,0xc(%esp)
	jump_187b1:
		mov    0xc(%esp),%eax
		cmp    0x4(%esp),%eax
		jl     jump_18751
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_187c3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x6,%eax
		mov    data_15b9cc,%ebx
		add    %ecx,%eax
		add    %eax,%ebx
		xor    %ecx,%ecx
		jmp    jump_18824
	jump_187e2:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		movzbl data_15b2b8(%eax),%esi
		mov    data_15b2b9(%eax),%dl
		mov    data_15b2ba(%eax),%al
		add    %esi,%edx
		and    $0xff,%eax
		add    %eax,%edx
		mov    $0x25,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    $0x7,%edx
		sub    %eax,%edx
		inc    %ecx
		mov    %dl,(%ebx)
		inc    %ebx
	jump_18824:
		cmp    %edi,%ecx
		jl     jump_187e2
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1882c:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x6,%eax
		lea    (%eax,%ecx,1),%ebx
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		add    %eax,%ebx
		jmp    jump_18891
	jump_1884b:
		mov    (%ebx),%al
		cmp    $0x60,%al
		ja     jump_1888f
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		movzbl data_15b2b8(%eax),%esi
		mov    data_15b2b9(%eax),%dl
		mov    data_15b2ba(%eax),%al
		add    %esi,%edx
		and    $0xff,%eax
		add    %eax,%edx
		mov    $0x25,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    $0x7,%edx
		sub    %eax,%edx
		mov    %dl,(%ebx)
	jump_1888f:
		inc    %ebx
		inc    %ecx
	jump_18891:
		cmp    %edi,%ecx
		jl     jump_1884b
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_18899:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %ecx,%ebp
		mov    %ebx,%edi
		mov    %edx,%ecx
		sub    %eax,%edi
		jmp    jump_188b4
	jump_188a8:
		mov    %esi,%eax
		mov    %ecx,%edx
		mov    %edi,%ebx
		call   func_187c3
		inc    %ecx
	jump_188b4:
		cmp    %ebp,%ecx
		jl     jump_188a8
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_188bc:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %ecx,%ebp
		mov    %ebx,%edi
		mov    %edx,%ecx
		sub    %eax,%edi
		jmp    jump_188d7
	jump_188cb:
		mov    %esi,%eax
		mov    %ecx,%edx
		mov    %edi,%ebx
		call   func_1882c
		inc    %ecx
	jump_188d7:
		cmp    %ebp,%ecx
		jl     jump_188cb
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_188df:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    0x34(%esp),%ebp
		mov    %ax,0x18(%esp)
		mov    %dx,0xc(%esp)
		xor    %edi,%edi
		sub    %eax,%ebx
		sub    %edx,%ecx
		mov    %edi,0x14(%esp)
		mov    %bx,0x1c(%esp)
		mov    %cx,(%esp)
		test   %bx,%bx
		jle    jump_18915
		movl   $0x1,0x10(%esp)
		jmp    jump_18925
	jump_18915:
		jne    jump_1891d
		mov    %edi,0x10(%esp)
		jmp    jump_18925
	jump_1891d:
		movl   $0xffffffff,0x10(%esp)
	jump_18925:
		mov    (%esp),%edx
		test   %dx,%dx
		jle    jump_18937
		movl   $0x1,0x4(%esp)
		jmp    jump_18947
	jump_18937:
		jne    jump_1893f
		mov    %edx,0x4(%esp)
		jmp    jump_18947
	jump_1893f:
		movl   $0xffffffff,0x4(%esp)
	jump_18947:
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		call   w_abs
		mov    %eax,%esi
		mov    %ax,0x1c(%esp)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   w_abs
		mov    %ax,(%esp)
		cmp    %ax,%si
		jg     jump_18971
		mov    %eax,%esi
	jump_18971:
		xor    %edx,%edx
		mov    %dx,0x8(%esp)
		jmp    jump_189e3
	jump_1897a:
		mov    0xa(%esp),%edx
		mov    0x16(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    0x30(%esp),%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2b21d
		mov    (%esp),%eax
		mov    0x14(%esp),%ecx
		mov    0x1c(%esp),%ebx
		add    %eax,%ecx
		add    %ebx,%edi
		mov    %ecx,0x14(%esp)
		cmp    %si,%di
		jle    jump_189be
		mov    0x10(%esp),%eax
		mov    0x18(%esp),%edx
		add    %eax,%edx
		sub    %esi,%edi
		mov    %dx,0x18(%esp)
	jump_189be:
		mov    0x14(%esp),%ebx
		cmp    %bx,%si
		jge    jump_189de
		mov    0x4(%esp),%eax
		mov    %ebx,%ecx
		mov    0xc(%esp),%edx
		sub    %esi,%ecx
		add    %eax,%edx
		mov    %ecx,0x14(%esp)
		mov    %dx,0xc(%esp)
	jump_189de:
		incw   0x8(%esp)
	jump_189e3:
		mov    0x6(%esp),%eax
		movswl %si,%edx
		sar    $0x10,%eax
		inc    %edx
		cmp    %edx,%eax
		jle    jump_1897a
		add    $0x20,%esp
		jmp    jump_183a4


/*----------------------------------------------------------------*/
func_189fa:
/*----------------------------------------------------------------*/
		mov    %al,data_53d0b
		ret
.data
data_18a00:
		.ascii  "\xfc\xff\xfc\xff\xfc\xff\xfc\xff"
		.fill   0x4
		.ascii  "\xf9\xff\xf9\xff"
data_18a10:
		.fill   0x4
		.ascii  "\xf9\xff\xf9\xff\xfc\xff\xfc\xff"
		.ascii  "\xfc\xff\xfc\xff"
.text


/*----------------------------------------------------------------*/
func_18a20:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    $0x500,%edx
		lea    0x1c(%esp),%eax
		mov    $0xc,%ebx
		mov    %edx,(%esp)
		xor    %edx,%edx
		lea    0x1c(%esp),%ecx
		call   w_dos_memset
		mov    $data_826d8,%eax
		mov    %ds,%edx
		mov    $data_826d8,%ebx
		mov    $0x31,%eax
		mov    %dx,0x1c(%esp)
		mov    %ebx,0x14(%esp)
		mov    %esp,%edx
		mov    %esp,%ebx
		call   w_dos_int386x
		mov    data_826d8,%ecx
		push   %ecx
		push   $data_50e58
		call   w_printf
		add    $0x8,%esp
		mov    data_826dc,%esi
		push   %esi
		push   $data_50e81
		call   w_printf
		add    $0x8,%esp
		mov    data_826e0,%edi
		push   %edi
		push   $data_50ea8
		call   w_printf
		add    $0x8,%esp
		mov    data_826e4,%ebp
		push   %ebp
		push   $data_50ed5
		call   w_printf
		add    $0x8,%esp
		mov    data_826e8,%eax
		push   %eax
		push   $data_50f10
		call   w_printf
		add    $0x8,%esp
		mov    data_826ec,%edx
		push   %edx
		push   $data_50f35
		call   w_printf
		add    $0x8,%esp
		mov    data_826f0,%ebx
		push   %ebx
		push   $data_50f5f
		call   w_printf
		add    $0x8,%esp
		mov    data_826f4,%ecx
		push   %ecx
		push   $data_50f8a
		call   w_printf
		add    $0x8,%esp
		mov    data_826f8,%esi
		push   %esi
		push   $data_50fb2
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		add    $0x28,%esp
	jump_18b23:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18b2a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $data_50fde,%eax
		mov    $0x6,%edx
		call   func_19f11
		xor    %ebx,%ebx
		jmp    jump_18b73
	jump_18b41:
		mov    data_99232(,%eax,4),%eax
		addw   $0x10,0x2(%eax)
		mov    0x4(%eax),%cx
		mov    0x2(%eax),%dx
		add    $0xc,%ecx
		mov    %edx,%esi
		mov    %dx,0x6(%eax)
		neg    %esi
		mov    0x2(%eax),%dx
		mov    %cx,0x4(%eax)
		add    %esi,%edx
		mov    %si,0x6(%eax)
		inc    %ebx
		mov    %dx,0x8(%eax)
	jump_18b73:
		xor    %edx,%edx
		movswl %bx,%eax
		mov    data_99230,%dx
		cmp    %edx,%eax
		jl     jump_18b41
		xor    %edx,%edx
		mov    data_15ba23,%dl
		mov    $0x2,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    jump_18ba2
		mov    $data_50fe7,%eax
		jmp    jump_18ba7
	jump_18ba2:
		mov    $data_50fff,%eax
	jump_18ba7:
		mov    $0x4,%edx
		call   func_1a094
		mov    $data_51017,%eax
		mov    $0x3,%edx
		call   func_19f11
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18bc5:
/*----------------------------------------------------------------*/
		push   %edx
		mov    $data_5102e,%eax
		mov    $0x1,%edx
		call   func_39431
		mov    $data_51037,%eax
		mov    $0x2,%edx
		call   func_39431
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_18be6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x5,%eax
		mov    data_7d954,%bl
		add    $data_19e144,%eax
		cmp    $0xa,%bl
		jb     jump_18c2c
		jbe    jump_18d75
		cmp    $0x12,%bl
		jb     jump_18c1e
		jbe    jump_18f14
		cmp    $0x14,%bl
		je     jump_18e3d
		jmp    jump_18ed9
	jump_18c1e:
		cmp    $0xc,%bl
		je     jump_18f14
		jmp    jump_18ed9
	jump_18c2c:
		cmp    $0x7,%bl
		jb     jump_18ed9
		jbe    jump_18f14
		cmp    $0x9,%bl
		jne    jump_18ed9
		mov    %eax,%ebx
		xor    %ecx,%ecx
	jump_18c48:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51040,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18c6b
		xor    %dh,%dh
		mov    %dh,data_19e144(%esi)
	jump_18c6b:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51047,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18c8e
		xor    %al,%al
		mov    %al,data_19e144(%esi)
	jump_18c8e:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5104e,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18cb1
		xor    %ah,%ah
		mov    %ah,data_19e144(%esi)
	jump_18cb1:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51055,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18cd4
		xor    %dl,%dl
		mov    %dl,data_19e144(%esi)
	jump_18cd4:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5105d,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18cf7
		xor    %dh,%dh
		mov    %dh,data_19e144(%esi)
	jump_18cf7:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51064,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18d1a
		xor    %al,%al
		mov    %al,data_19e144(%esi)
	jump_18d1a:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5106b,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18d3d
		xor    %ah,%ah
		mov    %ah,data_19e144(%esi)
	jump_18d3d:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51073,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18d60
		xor    %dl,%dl
		mov    %dl,data_19e144(%esi)
	jump_18d60:
		inc    %ecx
		add    $0x28,%ebx
		cmp    $0xb3,%ecx
		jge    jump_18f14
		jmp    jump_18c48
	jump_18d75:
		mov    %eax,%ebx
		xor    %ecx,%ecx
	jump_18d79:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5107b,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18d9c
		xor    %dl,%dl
		mov    %dl,data_19e144(%esi)
	jump_18d9c:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51083,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18dbf
		xor    %dh,%dh
		mov    %dh,data_19e144(%esi)
	jump_18dbf:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5108a,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18de2
		xor    %al,%al
		mov    %al,data_19e144(%esi)
	jump_18de2:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_51092,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18e05
		xor    %ah,%ah
		mov    %ah,data_19e144(%esi)
	jump_18e05:
		mov    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_5109a,%edx
		lea    (%ecx,%eax,1),%esi
		mov    %ebx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18e28
		xor    %dl,%dl
		mov    %dl,data_19e144(%esi)
	jump_18e28:
		inc    %ecx
		add    $0x28,%ebx
		cmp    $0xb3,%ecx
		jge    jump_18f14
		jmp    jump_18d79
	jump_18e3d:
		cmpb   $0x7,data_15ba23
		jne    jump_18e79
		mov    %eax,%ecx
		xor    %ebx,%ebx
	jump_18e4a:
		mov    %ebx,%eax
		shl    $0x2,%eax
		mov    $data_5109a,%edx
		lea    (%ebx,%eax,1),%esi
		mov    %ecx,%eax
		shl    $0x3,%esi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18e6d
		xor    %dh,%dh
		mov    %dh,data_19e144(%esi)
	jump_18e6d:
		inc    %ebx
		add    $0x28,%ecx
		cmp    $0xb3,%ebx
		jl     jump_18e4a
	jump_18e79:
		mov    $0x5,%ecx
		xor    %esi,%esi
		add    $data_19e144,%ecx
	jump_18e86:
		mov    %esi,%eax
		shl    $0x2,%eax
		mov    $data_5108a,%edx
		lea    (%esi,%eax,1),%ebx
		mov    %ecx,%eax
		shl    $0x3,%ebx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_18ea9
		xor    %al,%al
		mov    %al,data_19e144(%ebx)
	jump_18ea9:
		mov    %esi,%ebx
		mov    $data_5109f,%edx
		shl    $0x2,%ebx
		mov    %ecx,%eax
		add    %esi,%ebx
		call   w_dos_strcmp
		shl    $0x3,%ebx
		test   %eax,%eax
		jne    jump_18ecb
		xor    %ah,%ah
		mov    %ah,data_19e144(%ebx)
	jump_18ecb:
		inc    %esi
		add    $0x28,%ecx
		cmp    $0xb3,%esi
		jge    jump_18f14
		jmp    jump_18e86
	jump_18ed9:
		mov    $0x5,%ecx
		xor    %esi,%esi
		add    $data_19e144,%ecx
	jump_18ee6:
		mov    %esi,%ebx
		mov    $data_5109a,%edx
		shl    $0x2,%ebx
		mov    %ecx,%eax
		add    %esi,%ebx
		call   w_dos_strcmp
		shl    $0x3,%ebx
		test   %eax,%eax
		jne    jump_18f08
		xor    %dh,%dh
		mov    %dh,data_19e144(%ebx)
	jump_18f08:
		inc    %esi
		add    $0x28,%ecx
		cmp    $0xb3,%esi
		jl     jump_18ee6
	jump_18f14:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_18f19:
/*----------------------------------------------------------------*/
		xor    %ah,%ah
		mov    %ah,data_8017c
		mov    %ah,data_8017d
		mov    %ah,data_8017e
		mov    %ah,data_8017f
		mov    %ah,data_80180
		mov    %ah,data_80181
		mov    %ah,data_80182
		mov    %ah,data_80183
		mov    %ah,data_80184
		mov    %ah,data_80185
		mov    %ah,data_80104
		mov    %ah,data_80105
		mov    %ah,data_80106
		mov    %ah,data_80107
		mov    %ah,data_80108
		mov    %ah,data_80109
		mov    %ah,data_8010a
		mov    %ah,data_8010b
		mov    %ah,data_8010c
		mov    %ah,data_8010d
		mov    %ah,data_800b4
		mov    %ah,data_800b5
		mov    %ah,data_800b6
		mov    %ah,data_800b7
		mov    %ah,data_800b8
		mov    %ah,data_800b9
		mov    %ah,data_800ba
		mov    %ah,data_800bb
		mov    %ah,data_800bc
		mov    %ah,data_800bd
		ret


/*----------------------------------------------------------------*/
func_18fd0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		call   func_19ba9
		xor    %eax,%eax
		mov    $data_510a7,%edx
		call   func_20f7a
		mov    %ebx,%eax
		call   w_dos_strcmp
		call   func_18f19
		call   func_23147
#if 0
    /* write game.cfg */
		call   func_235ec
#endif
		call   func_392b4
		cmpb   $0x1,game_cfg_music
		jne    jump_1900e
		call   func_39ed7
	jump_1900e:
		call   func_3995d
		call   func_19b45
		cmpb   $0x1,data_54040
		jne    jump_19026
		call   func_2b1ff
	jump_19026:
		call   func_2b70e
		call   func_2b6a3
		mov    $data_510af,%eax
		mov    $data_510ac,%edx
		call   w_dos_fopen
		push   %ebx
		push   $data_510b1
		push   %eax
		mov    %eax,%edx
		call   w_fprintf
		add    $0xc,%esp
		mov    %edx,%eax
		call   w_dos_fclose
		cmpb   $0x0,data_54040
		jne    jump_1906c
		mov    $0xff,%edx
		xor    %eax,%eax
		call   func_20019
	jump_1906c:
		mov    $0x1,%eax
		call   w_dos_exit
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19079:
/*----------------------------------------------------------------*/
		call   func_392b4
		call   func_39ed7
		call   func_3995d
		call   func_19b45
		call   func_2b1ff
		call   func_2b70e
		call   func_2b6a3
		xor    %eax,%eax
		jmp    w_dos_exit


/*----------------------------------------------------------------*/
func_190a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		lea    0x10(%esp),%edi
		mov    $data_18a00,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %esp,%edi
		mov    $data_18a10,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x20(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x20(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		cmpw   $0x0,data_56bf8
		jne    jump_190f7
		cmpw   $0x0,data_56bf6
		jne    jump_190f7
		call   func_2d038
	jump_190f7:
		call   func_1f6e4
		mov    %eax,%edi
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_19117
		mov    $data_54042,%eax
		mov    $0x1,%edx
		call   func_1d12f
		mov    %eax,%edi
		jmp    jump_19123
	jump_19117:
		mov    $data_54042,%eax
		xor    %edx,%edx
		call   func_1d12f
	jump_19123:
		call   func_21d70
		call   func_21e29
		call   func_22897
		call   func_2294d
		cmpl   $0x0,data_1a0168
		je     jump_19167
		cmpb   $0x0,data_15ba22
		jne    jump_19167
		mov    data_82945,%edx
		xor    %ebx,%ebx
		mov    data_82943,%eax
		mov    data_82949,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a7b5
	jump_19167:
		cmpl   $0x0,data_1a0168
		je     jump_19197
		cmpb   $0x0,data_15ba22
		jne    jump_19197
		mov    data_82945,%edx
		xor    %ebx,%ebx
		mov    data_82943,%eax
		mov    data_82949,%bl
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1a8f3
	jump_19197:
		cmpl   $0x0,data_1a00f8
		je     jump_191a5
		call   func_34b92
	jump_191a5:
		cmpl   $0x2,data_7cf20
		je     jump_191b7
		cmpl   $0x0,data_1a01d4
		je     jump_191bc
	jump_191b7:
		call   func_32315
	jump_191bc:
		cmpl   $0x0,data_1a0204
		je     jump_191d3
		cmpb   $0x1,data_54040
		jne    jump_191d3
		call   func_2ade6
	jump_191d3:
		mov    data_7cf24,%edx
		add    $0x9,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_56bfa,%edx
		mov    data_56bf6,%si
		sar    $0x10,%edx
		mov    data_7cf28,%ebx
		add    %edx,%eax
		sar    $0x4,%ebx
		mov    %eax,%ecx
		test   %si,%si
		jle    jump_19219
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		add    %ebx,%eax
		dec    %eax
		mov    %eax,%ebx
		jmp    jump_19223
	jump_19219:
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		add    %eax,%ebx
	jump_19223:
		mov    data_15ba1e,%edx
		movswl %bx,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		mov    data_15b9bc,%eax
		add    %edx,%edx
		add    %edx,%eax
		movswl %cx,%edx
		add    %edx,%edx
		lea    (%eax,%edx,1),%esi
		xor    %edx,%edx
		mov    (%esi),%dx
		mov    $0x3e8,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    data_7d954,%dl
		cmp    %edx,%eax
		jg     jump_192fe
		cmpw   $0x0,(%esi)
		je     jump_192fe
		mov    data_8279c,%eax
		sar    $0x10,%eax
		lea    0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		sub    data_56bfc,%cx
		imul   $0x18,%ecx,%ecx
		mov    $data_53d0c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
		movw   $0x1,data_54042
		mov    data_56bf8,%ax
		sub    $0x8,%ecx
		add    %ecx,%eax
		mov    data_56bfa,%cx
		mov    %ax,0x38(%esp)
		mov    %ebx,%eax
		sub    %ecx,%eax
		mov    data_56bf6,%dx
		shl    $0x4,%eax
		add    %edx,%eax
		test   %ax,%ax
		jl     jump_193bf
		mov    data_15b9cc,%ebx
		push   %ebx
		movswl %ax,%edx
		mov    0x3a(%esp),%eax
	jump_192e9:
		push   $0x1
		sar    $0x10,%eax
		lea    0x10(%edx),%ecx
		lea    0x18(%eax),%ebx
		call   func_18303
		jmp    jump_193bf
	jump_192fe:
		mov    data_15ba1e,%eax
		movswl %bx,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b8,%edx
		add    %eax,%eax
		add    %eax,%edx
		movswl %cx,%eax
		cmpw   $0x0,(%edx,%eax,2)
		je     jump_193a0
		mov    data_8279c,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    $data_53d0c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
		mov    $0x1,%eax
		mov    data_56bfc,%dx
		mov    %ax,data_54042
		mov    %ecx,%eax
		sub    %edx,%eax
		imul   $0x18,%eax,%eax
		mov    data_56bf8,%dx
		sub    $0x8,%eax
		mov    data_56bfa,%cx
		add    %eax,%edx
		mov    %ebx,%eax
		sub    %ecx,%eax
		mov    %dx,0x30(%esp)
		shl    $0x4,%eax
		mov    data_56bf6,%dx
		sub    $0x4,%eax
		add    %edx,%eax
		test   %ax,%ax
		jl     jump_193bf
		mov    data_15b9cc,%edx
		push   %edx
		movswl %ax,%edx
		mov    0x32(%esp),%eax
		jmp    jump_192e9
	jump_193a0:
		mov    data_8279c,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    $data_53d0c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
	jump_193bf:
		cmpl   $0xffffffff,data_544ca
		je     jump_1948c
		mov    data_8279c,%edx
		sar    $0x10,%edx
		inc    %edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    $data_53d0c,%esi
		shl    $0x2,%eax
		add    %eax,%esi
		mov    data_544ca,%ax
		add    $0x2,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    $0x1,%ebx
		mov    data_82935(%eax),%dl
		mov    %bx,data_54042
		imul   $0x3842,%edx,%ebx
		xor    %edx,%edx
		mov    data_82936(%eax),%dx
		mov    data_840a6(%ebx,%edx,4),%edx
		mov    (%edx),%bx
		mov    0x2(%edx),%dx
		movswl %bx,%ebx
		mov    %dx,0x2c(%esp)
		mov    %ebx,%ecx
		mov    data_82936(%eax),%edx
		sar    %ecx
		sar    $0x10,%edx
		sub    %ecx,%edx
		mov    0x2a(%esp),%ecx
		mov    %dx,0x34(%esp)
		sar    $0x10,%ecx
		mov    data_82938(%eax),%edx
		mov    %ecx,%eax
		sar    $0x10,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jl     jump_1948c
		mov    0x32(%esp),%eax
		mov    data_15b9cc,%ebp
		movswl %dx,%edx
		push   %ebp
		sar    $0x10,%eax
		push   $0x1
		add    %edx,%ecx
		add    %eax,%ebx
		call   func_18303
	jump_1948c:
		movl   $0xffffffff,data_544ca
		mov    data_8279c,%eax
		sar    $0x10,%eax
		mov    data_7cf24,%bx
		mov    0x10(%esp,%eax,2),%cx
		mov    data_7cf28,%dx
		add    %ecx,%ebx
		mov    (%esp,%eax,2),%cx
		movswl %di,%eax
		add    %ecx,%edx
		cmp    $0xffffffff,%eax
		jne    jump_194d4
		mov    data_15b9cc,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %esi,%ebx
		call   w_game_copy_ff
	jump_194d4:
		cmpb   $0x1,data_54041
		jne    jump_194fd
		call   func_nullsub_2
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_20118
		xor    %bh,%bh
		mov    %bh,data_54041
		jmp    jump_19507
	jump_194fd:
		mov    data_15b9cc,%eax
		call   func_2b470
	jump_19507:
		cmpl   $0x0,data_1a01e8
		je     jump_1951e
		cmpb   $0x1,data_54040
		jne    jump_1951e
		call   func_18a20
	jump_1951e:
		mov    %edi,%eax
		add    $0x3c,%esp
		jmp    jump_18b23


/*----------------------------------------------------------------*/
func_19528:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
	jump_1952a:
		xor    %edx,%edx
	jump_1952c:
		call   func_18be6
		call   func_190a3
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_19561
		lea    0x1(%eax),%ebx
		mov    %ebx,data_8271c
		call   func_25f21
		mov    %ax,data_1a00ca
		mov    data_f309c,%ax
		mov    %ax,data_82943
		call   func_3197d
	jump_19561:
		mov    %edx,%eax
		inc    %edx
		cmp    $0x3c,%ax
		jne    jump_1952c
		call   func_399ac
		jmp    jump_1952a


/*----------------------------------------------------------------*/
func_19571:
/*----------------------------------------------------------------*/
		mov    data_15ba23,%ah
		cmp    $0x1,%ah
		je     jump_19595
		cmp    $0x7,%ah
		je     jump_19595
		cmp    $0x9,%ah
		je     jump_19595
		cmp    $0xc,%ah
		je     jump_19595
		cmp    $0x12,%ah
		je     jump_19595
		cmp    $0x13,%ah
		jne    jump_195a0
	jump_19595:
		movl   $0xe,data_82718
		ret
	jump_195a0:
		cmp    $0xa,%ah
		je     jump_195b9
		cmp    $0xb,%ah
		je     jump_195b9
		cmp    $0x1d,%ah
		je     jump_195b9
		cmp    $0x1e,%ah
		je     jump_195b9
		cmp    $0x20,%ah
		jne    jump_195c4
	jump_195b9:
		movl   $0xf,data_82718
		ret
	jump_195c4:
		movl   $0x10,data_82718
		ret


/*----------------------------------------------------------------*/
GLOBAL (pack)	/* 0x195cf */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    0x4(%edx),%eax
		mov    $data_510b4,%edx
		call   w_dos_strcmp
		test   %ax,%ax
		jg     jump_195e7
		jge    jump_19605
	jump_195e7:
		mov    $data_510b7,%edx
		mov    0x4(%ebx),%eax
		call   w_dos_strcmp
		test   %ax,%ax
		jg     jump_195fb
		jge    jump_19605
	jump_195fb:
		mov    $0xff,%eax
		call   w_dos_exit
	jump_19605:
		mov    0x8(%ebx),%eax
		call   func_3b155
		mov    %al,data_15ba23
		cmp    $0xff,%al
		jne    jump_19620
		mov    $0xffffffff,%eax
		call   w_dos_exit
	jump_19620:
		mov    $data_510c9,%eax
		mov    $data_510bc,%edx
		mov    $0xff,%ebx
		call   func_2c0c7
		mov    $0x4,%eax
		mov    $0x1000,%edx
		call   func_2c1c9
		call   func_2b1f8
		call   func_2b672
		call   func_2b6c2
		call   func_197d7
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		mov    $0xc2,%edx
		xor    %eax,%eax
		call   func_19c46
		call   func_1a4f9
		call   func_18b2a
		call   func_235a7
		mov    game_cfg_speed,%al
		test   %al,%al
		jbe    jump_19690
		cmp    $0x1,%al
		je     jump_1969c
		jmp    jump_196a4
	jump_19690:
		movl   $0x895440,data_82720
		jmp    jump_196a4
	jump_1969c:
		xor    %edx,%edx
		mov    %edx,data_82720
	jump_196a4:
		mov    $0x1,%eax
		call   func_20f7a
		mov    data_15b9cc,%ecx
		push   %ecx
		xor    %edx,%edx
		xor    %ebx,%ebx
		push   $0xc8
		xor    %eax,%eax
		mov    $0x140,%ecx
		call   func_2b56c
		movb   $0x50,data_82949
		call   func_1a712
		mov    game_cfg_soundblaster_adr,%dx
		mov    game_cfg_soundblaster_adr,%ecx
		test   %dx,%dx
		setne  %al
		xor    %edx,%edx
		mov    game_cfg_sound,%ebx
		mov    %al,%dl
		mov    game_cfg_soundblaster_irq,%eax
		sar    $0x10,%ecx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		push   %eax
		movswl %dx,%edx
		mov    $0x55f0,%eax
		call   func_38f9e
		call   func_18bc5
		call   func_19571
		xor    %eax,%eax
		xor    %edx,%edx
		mov    data_15ba23,%al
		call   func_213a6
		cmpb   $0x1,game_cfg_music
		jne    jump_19735
		call   func_397dd
	jump_19735:
		call   func_2d038
		cmpb   $0x1,game_cfg_music
		jne    jump_19755
		mov    data_82716,%eax
		mov    $0x1,%edx
		sar    $0x10,%eax
		call   func_39e5e
	jump_19755:
		call   func_19528
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1975d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $data_541cf,%ebx
		mov    $0x10,%ecx
		mov    data_15b9cc,%edx
		mov    data_54053,%eax
		push   %edx
		sar    $0x10,%eax
		mov    data_54055,%edx
		push   $0x10
		sar    $0x10,%edx
		call   func_2b3dc
		mov    video_buffer,%ecx
	jump_1978f:
		mov    data_8291c,%ebx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_197af:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $data_541cf,%ebx
		mov    video_buffer,%ecx
		mov    data_54051,%edx
		mov    data_5404f,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_197d7:
/*----------------------------------------------------------------*/
		push   $0x5c
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x44,%esp
		lea    0x38(%esp),%eax
		mov    %esp,%ebx
		call   func_segread_
		xor    %edx,%edx
		mov    $0x33,%eax
		mov    %dx,0x1c(%esp)
		lea    0x1c(%esp),%edx
#if 1
    movw   $0xffff,(%esp)
#else
		call   w_dos_int386 /* reset mouse driver and read status */
#endif
		xor    %eax,%eax
		mov    (%esp),%ax
		test   %eax,%eax
		jne    jump_19826
		push   $data_510d4
		call   w_printf
		add    $0x4,%esp
		xor    %eax,%eax
		call   w_dos_exit
	jump_19826:
		mov    $0xc,%ebx
		mov    $0x7f,%ecx
		mov    $mouse_isr,%edx
		mov    $mouse_isr,%eax
		mov    %bx,0x1c(%esp)
		mov    %cx,0x24(%esp)
		mov    %edx,0x28(%esp)
		mov    %esp,%ebx
		mov    %cs,%edx
		lea    0x38(%esp),%ecx
		mov    $0x33,%eax
		mov    %dx,0x38(%esp)
		lea    0x1c(%esp),%edx
#if 1
    call   w_game_install_mouse_isr
#else
		call   w_dos_int386x
#endif
		xor    %edx,%edx
		mov    data_82933,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    $data_5405b,%esi
		sub    %edx,%eax
		mov    $0x96,%ebx
		mov    $0x64,%ecx
		mov    %ebx,data_827a8(,%eax,4)
		mov    %esi,data_8291c
		mov    %ecx,data_827ac(,%eax,4)
		add    $0x44,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1989d:
/*----------------------------------------------------------------*/
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    data_82932,%dl
		inc    %edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_82933,%ah
		mov    %dl,data_82932
		cmp    %ah,%dl
		je     jump_19907
		xor    %edx,%edx
		mov    data_82932,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		mov    0xc(%esp),%eax
		mov    %eax,data_827a4(%edx)
		mov    0x10(%esp),%eax
		mov    %eax,data_827a8(%edx)
		mov    0x14(%esp),%eax
		mov    %eax,data_827ac(%edx)
		mov    $0x1,%al
		pop    %edx
		pop    %ebx
		ret    $0xc
	jump_19907:
		xor    %edx,%edx
		mov    data_82932,%dl
		dec    %edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dl,data_82932
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    $0xc


/*----------------------------------------------------------------*/
func_19924:
/*----------------------------------------------------------------*/
		push   $0x20
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0xc,%esp
		mov    %esi,%ebx
		mov    data_82932,%al
		mov    data_82933,%ah
		cmp    %ah,%al
		je     jump_19978
		xor    %edx,%edx
		mov    %ah,%dl
		inc    %edx
		mov    $0x1e,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %dl,data_82933
		xor    %edx,%edx
		mov    data_82933,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_827a4(,%eax,4),%eax
		mov    %eax,(%esp)
		jmp    jump_1997d
	jump_19978:
		xor    %edx,%edx
		mov    %edx,(%esp)
	jump_1997d:
		xor    %edx,%edx
		mov    data_82933,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		mov    data_827a8(%edx),%eax
		mov    %esp,%esi
		mov    %eax,0x4(%esp)
		mov    data_827ac(%edx),%eax
		mov    %ebx,%edi
		mov    %eax,0x8(%esp)
		call   func_19bd6
		mov    %eax,(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %ebx,%eax
		add    $0xc,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
GLOBAL (mouse_isr) /* 199ce */
/*----------------------------------------------------------------*/
		push   %ds
#if 0
		call   func___GETDS
#endif
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		cmpb   $0x0,data_543cb
		je     jump_199eb
		mov    data_82933,%al
		mov    %al,data_82932
	jump_199eb:
		movswl %cx,%eax
		sar    %eax
		mov    %eax,data_82910
		movswl %dx,%eax
		mov    %eax,data_82914
		testb  $0x1,(%esp)
		je     jump_19a38
		test   %bx,%bx
		jle    jump_19a15
		movswl %bx,%eax
		add    $0x5,%eax
		mov    %eax,data_8290c
		jmp    jump_19a1f
	jump_19a15:
		movl   $0x1,data_8290c
	jump_19a1f:
		mov    data_82914,%edi
		push   %edi
		mov    data_82910,%ebp
		push   %ebp
		mov    data_8290c,%eax
		push   %eax
		call   func_1989d
	jump_19a38:
		mov    (%esp),%ah
		test   $0x2,%ah
		jne    jump_19a45
		test   $0x8,%ah
		je     jump_19a6d
	jump_19a45:
		cmp    $0x2,%bx
		jle    jump_19a50
		mov    $0xa,%ebx
	jump_19a50:
		mov    data_82914,%esi
		mov    data_82910,%edi
		push   %esi
		movswl %bx,%eax
		push   %edi
		inc    %eax
		push   %eax
		mov    %eax,data_8290c
		call   func_1989d
	jump_19a6d:
		mov    (%esp),%eax
		and    $0xa,%al
		xor    %ah,%ah
		cmp    $0xa,%ax
		jne    jump_19a98
		mov    data_82914,%esi
		push   %esi
		mov    data_82910,%edi
		push   %edi
		mov    $0xa,%eax
		push   %eax
		mov    %eax,data_8290c
		call   func_1989d
	jump_19a98:
		mov    (%esp),%ah
		test   $0x4,%ah
		jne    jump_19aa5
		test   $0x10,%ah
		je     jump_19ad2
	jump_19aa5:
		testb  $0x4,(%esp)
		sete   %al
		and    $0xff,%eax
		add    $0x8,%eax
		mov    %eax,data_8290c
		mov    data_82914,%eax
		push   %eax
		mov    data_82910,%esi
		push   %esi
		mov    data_8290c,%edi
		push   %edi
		call   func_1989d
	jump_19ad2:
		mov    data_54055,%ax
		mov    %ax,data_54051
		mov    data_54057,%ax
		mov    %ax,data_54053
		mov    (%esp),%eax
		mov    %bx,data_5404f
		mov    %ax,data_5404d
		movswl %cx,%eax
		mov    %dx,data_54057
		sar    %eax
		mov    data_54059,%dx
		mov    %ax,data_54055
		test   %dx,%dx
		je     jump_19b3d
		test   %bx,%bx
		jne    jump_19b29
		movl   $data_5405b,data_8291c
		jmp    jump_19b33
	jump_19b29:
		movl   $data_54123,data_8291c
	jump_19b33:
		call   func_197af
		call   func_1975d
	jump_19b3d:
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ds
#if 1
    ret
#else
		lret
#endif


/*----------------------------------------------------------------*/
func_19b45:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x38,%esp
		mov    $0x33,%eax
		xor    %edx,%edx
		mov    %esp,%ebx
		mov    %dx,0x1c(%esp)
		lea    0x1c(%esp),%edx
#if 0
		call   w_dos_int386
#endif
	jump_19b61:
		add    $0x38,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19b67:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x1,%edx
		mov    $data_541cf,%ebx
		mov    $0x10,%ecx
		mov    %dx,data_54059
		mov    data_15b9cc,%edx
		mov    data_54053,%eax
		push   %edx
		sar    $0x10,%eax
		mov    data_54055,%edx
		push   $0x10
		sar    $0x10,%edx
		call   func_2b3dc
#if 1
    movl   video_buffer,%ecx
#else
		mov    $0xa0000,%ecx
#endif
		jmp    jump_1978f


/*----------------------------------------------------------------*/
func_19ba9:
/*----------------------------------------------------------------*/
		push   %ebx
		cmpw   $0x0,data_54059
		je     jump_19bc2
		xor    %ebx,%ebx
		mov    %bx,data_54059
		call   func_197af
	jump_19bc2:
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19bd6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x38,%esp
		mov    $0x3,%edx
		mov    $0x33,%eax
		lea    0x1c(%esp),%ebx
		mov    %dx,(%esp)
		mov    %esp,%edx
#if 1
    /* This update statement prevents high CPU usage */
    call   w_game_update

    call   w_mouse_get_state
    movw   mouse_state_button,%bx
    mov    %ebx,0x20(%esp)
    movw   mouse_state_x,%bx
    mov    %ebx,0x24(%esp)
    movw   mouse_state_y,%bx
    mov    %ebx,0x28(%esp)
#else
		call   w_dos_int386
#endif
		mov    0x20(%esp),%ebx
		test   %bx,%bx
		je     jump_19c07
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    jump_19b61
	jump_19c07:
		xor    %eax,%eax
		jmp    jump_19b61


/*----------------------------------------------------------------*/
func_19c0e:
/*----------------------------------------------------------------*/
		push   %ebx
		sub    $0x38,%esp
		mov    $0x4,%ebx
	jump_19c17:
		mov    %ax,0x24(%esp)
		mov    %dx,0x28(%esp)
		mov    $0x33,%eax
		lea    0x1c(%esp),%edx
		mov    %bx,0x1c(%esp)
		mov    %esp,%ebx
		call   w_dos_int386
		add    $0x38,%esp
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19c3b: /* define mouse horizontal range */
/*----------------------------------------------------------------*/
#if 1
    ret
#endif
		push   %ebx
		sub    $0x38,%esp
		mov    $0x7,%ebx
		jmp    jump_19c17


/*----------------------------------------------------------------*/
func_19c46: /* define mouse vertical range */
/*----------------------------------------------------------------*/
#if 1
    ret
#endif
		push   %ebx
		sub    $0x38,%esp
		mov    $0x8,%ebx
		jmp    jump_19c17
.data
data_19c6c:
		.ascii  "\x03\x00\x00\x00\x01\x00\x00\x0a"
		.ascii  "\x0a\x00\x3c\x01\x01\x00"
		.ascii   "\r  \r<"
		.ascii  "\x01\x01\x00\x00\x0a\x0a\x00"
		.ascii   "SQVWU"
		.ascii  "\x83\xec\x24\x89\xc6\x66\x89\x54"
		.ascii  "\x24\x18\x68\x00\x02\x00\x00\x31"
		.ascii  "\xd2\x50\x89\x54\x24\x10\xe8\xfd"
		.ascii  "\x0e\x02\x00\x83\xc4\x08\x66\x89"
		.ascii  "\x44\x24\x14\x98\x31\xc9\x83\xf8"
		.ascii  "\xff\x75\x15\x56\x68"
		.long   data_510ec
.text
	jump_19f0b:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_19f11:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    %dx,0x10(%esp)
		push   $0x200
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x8(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_19f4d
		push   %ecx
		push   $data_510ec
		call   w_printf
		add    $0x8,%esp
		xor    %eax,%eax
		call   w_dos_exit
	jump_19f4d:
		mov    0x6(%esp),%ecx
		mov    $0x42,%edx
		sar    $0x10,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		lea    0x4(%esp),%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0xe(%esp),%edx
		sar    $0x10,%edx
		imul   $0x3842,%edx,%edx
		mov    0x4(%esp),%eax
		mov    $0x1,%ebx
		mov    %ax,data_840a4(%edx)
		mov    $0x3c,%edx
		mov    %ecx,%eax
		xor    %edi,%edi
		call   w_dos_lseek
		jmp    jump_1a060
	jump_19fa5:
		mov    0xe(%esp),%ecx
		sar    $0x10,%ecx
		imul   $0x3842,%ecx,%ecx
		mov    $0xe,%eax
		mov    0x6(%esp),%esi
		mov    $0x4,%ebx
		call   w_dos_malloc
		sar    $0x10,%esi
		mov    %eax,data_840a6(%ecx,%edx,4)
		mov    %esp,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   w_dos_read
		mov    (%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x2,%ebx
		call   w_dos_malloc
		mov    %eax,0xa(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0xc(%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0xc(%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,0x2(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0xc(%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,0x4(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0xc(%esp),%eax
		mov    %ax,0x6(%ecx)
		mov    0x2(%ecx),%ax
		mov    0x6(%ecx),%dx
		add    %edx,%eax
		mov    %ax,0x8(%ecx)
		mov    0xa(%ecx),%edx
		mov    (%esp),%ebx
		mov    %esi,%eax
		inc    %edi
		call   w_dos_read
	jump_1a060:
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x4(%esp),%ax
		cmp    %eax,%edx
		jl     jump_19fa5
		mov    data_f10a2,%dl
		mov    0x6(%esp),%eax
		inc    %dl
		sar    $0x10,%eax
		mov    %dl,data_f10a2
		call   w_dos_close
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1a094:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x34,%esp
		mov    %eax,%ebx
		mov    %dx,0x2c(%esp)
		mov    $0x6c,%edx
		mov    $0x6,%ecx
		mov    %esp,%edi
		mov    $data_510fc,%eax
		mov    $data_19c6c,%esi
		mov    %dx,0x20(%esp)
#if 1
    mov    video_buffer,%edx
#else
		mov    $0xa0000,%edx
#endif
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_2e46b
		push   $0x200
		push   %ebx
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x30(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_1a0f9
		push   %ebx
		push   $data_510ec
		call   w_printf
		add    $0x8,%esp
		xor    %eax,%eax
		call   w_dos_exit
	jump_1a0f9:
		mov    0x2e(%esp),%ecx
		mov    $0x42,%edx
		sar    $0x10,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		lea    0x24(%esp),%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x2a(%esp),%edx
		sar    $0x10,%edx
		imul   $0x3842,%edx,%edx
		mov    0x24(%esp),%eax
		mov    $0x1,%ebx
		mov    %ax,data_840a4(%edx)
		mov    $0x3c,%edx
		mov    %ecx,%eax
		xor    %edi,%edi
		call   w_dos_lseek
		jmp    jump_1a2a2
	jump_1a151:
		mov    $0x4,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %ecx,%esi
		shl    $0x2,%esi
		cmp    $0x2,%edx
		je     jump_1a228
		mov    0x2a(%esp),%ecx
		sar    $0x10,%ecx
		imul   $0x3842,%ecx,%ecx
		mov    $0xe,%eax
		call   w_dos_malloc
		mov    %eax,data_840a6(%ecx,%esi,1)
		mov    0x2e(%esp),%esi
		lea    0x1c(%esp),%edx
		sar    $0x10,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		call   w_dos_read
		mov    0x1c(%esp),%eax
		lea    0x28(%esp),%edx
		mov    $0x2,%ebx
		call   w_dos_malloc
		mov    %eax,0xa(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0x28(%esp),%eax
		lea    0x28(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0x28(%esp),%eax
		lea    0x28(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,0x2(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0x28(%esp),%eax
		lea    0x28(%esp),%edx
		mov    $0x2,%ebx
		mov    %ax,0x4(%ecx)
		mov    %esi,%eax
		call   w_dos_read
		mov    0x28(%esp),%eax
		mov    %ax,0x6(%ecx)
		mov    0x2(%ecx),%ax
		mov    0x6(%ecx),%bx
		add    %ebx,%eax
		mov    %ax,0x8(%ecx)
		mov    0xa(%ecx),%edx
		mov    0x1c(%esp),%ebx
		mov    %esi,%eax
		call   w_dos_read
		jmp    jump_1a269
	jump_1a228:
		mov    0x2e(%esp),%ecx
		sar    $0x10,%ecx
		lea    0x1c(%esp),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x1c(%esp),%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		add    $0x8,%edx
		call   w_dos_lseek
		mov    0x2a(%esp),%eax
		sar    $0x10,%eax
		imul   $0x3842,%eax,%eax
		lea    (%eax,%esi,1),%edx
		mov    data_8409e(%edx),%eax
		mov    %eax,data_840a6(%edx)
	jump_1a269:
		movswl %di,%edx
		mov    $0x64,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x63,%edx
		jne    jump_1a2a1
		mov    0x20(%esp),%ecx
		add    $0x5,%ecx
		mov    $0xbd,%edx
		mov    %cx,0x20(%esp)
		mov    %esp,%ebx
		mov    0x1e(%esp),%eax
#if 1
    mov    video_buffer,%ecx
#else
		mov    $0xa0000,%ecx
#endif
		sar    $0x10,%eax
		call   func_2b240
	jump_1a2a1:
		inc    %edi
	jump_1a2a2:
		xor    %eax,%eax
		movswl %di,%ecx
		mov    0x24(%esp),%ax
		cmp    %eax,%ecx
		jl     jump_1a151
		mov    data_f10a2,%dl
		mov    0x2e(%esp),%eax
		inc    %dl
		sar    $0x10,%eax
		mov    %dl,data_f10a2
		call   w_dos_close
		add    $0x34,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1a2d6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%esi
		mov    %dx,0x8(%esp)
		push   $0x200
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0xc(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		jne    jump_1a31b
		push   %esi
		push   $data_51108
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		mov    $0xffffffff,%eax
		call   w_dos_exit
	jump_1a31b:
		mov    0xa(%esp),%ecx
		mov    $0x42,%edx
		sar    $0x10,%ecx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		lea    0x4(%esp),%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x3c,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		cmpw   $0x2c,0x4(%esp)
		je     jump_1a390
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   $data_51119
		call   w_printf
		add    $0x8,%esp
		push   %esi
		push   $data_51130
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		cmpw   $0x2c,0x4(%esp)
		jle    jump_1a390
		movw   $0x2c,0x4(%esp)
	jump_1a390:
		mov    0xa(%esp),%ecx
		lea    0x10(%esp),%edx
		sar    $0x10,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		cmpb   $0x0,0x10(%esp)
		je     jump_1a3bf
		mov    $0x28,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
	jump_1a3bf:
		xor    %edi,%edi
		jmp    jump_1a3e5
	jump_1a3c3:
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		imul   $0x3842,%edx,%edx
		mov    $0xe,%eax
		call   w_dos_malloc
		movswl %di,%ecx
		inc    %edi
		mov    %eax,data_840a6(%edx,%ecx,4)
	jump_1a3e5:
		cmp    0x4(%esp),%di
		jl     jump_1a3c3
		xor    %edi,%edi
		mov    $0x2,%ebp
		jmp    jump_1a488
	jump_1a3f8:
		mov    0x6(%esp),%ecx
		sar    $0x10,%ecx
		imul   $0x3842,%ecx,%ecx
		mov    0xa(%esp),%esi
		mov    %esp,%edx
		mov    $0x4,%ebx
		movswl %di,%eax
		sar    $0x10,%esi
		mov    data_840a6(%ecx,%eax,4),%ecx
		mov    %esi,%eax
		call   w_dos_read
		mov    %esi,%eax
		mov    %ecx,%edx
		mov    %ebp,%ebx
		call   w_dos_read
		lea    0x2(%ecx),%edx
		mov    %esi,%eax
		mov    %ebp,%ebx
		call   w_dos_read
		lea    0x4(%ecx),%edx
		mov    %esi,%eax
		mov    %ebp,%ebx
		call   w_dos_read
		lea    0x6(%ecx),%edx
		mov    %esi,%eax
		mov    %ebp,%ebx
		call   w_dos_read
		mov    $0x1,%ebx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   w_dos_lseek
		mov    (%esp),%eax
		call   w_dos_malloc
		mov    %eax,0xa(%ecx)
		mov    0x6(%ecx),%dx
		mov    0x2(%ecx),%ax
		add    %edx,%eax
		mov    %ax,0x8(%ecx)
		mov    0xa(%ecx),%edx
		mov    (%esp),%ebx
		mov    %esi,%eax
		inc    %edi
		call   w_dos_read
	jump_1a488:
		mov    0x4(%esp),%eax
		cmp    %ax,%di
		jl     jump_1a3f8
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		imul   $0x3842,%edx,%edx
		mov    %ax,data_840a4(%edx)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		add    $0x14,%esp
		jmp    jump_19f0b


/*----------------------------------------------------------------*/
func_1a4f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
	jump_1a4fe:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %cl,%cl
		inc    %ebx
		mov    %cl,data_82934(%edx,%eax,4)
		cmp    $0x190,%bx
		jl     jump_1a4fe
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1a51d:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %cl,data_82935(%eax)
		mov    %di,data_82938(%eax)
		mov    $0x1,%dl
		mov    %si,data_8293a(%eax)
		mov    %dl,data_82934(%eax)
		mov    0xc(%esp),%edx
		mov    %dx,data_82936(%eax)
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_1a5ca:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    $0x3842,%ebp
		mov    %eax,%esi
		jmp    jump_1a62a
	jump_1a5da:
		xor    %ebx,%ebx
		jmp    jump_1a613
	jump_1a5de:
		mov    data_840a6(%eax,%edx,4),%eax
		mov    0xa(%eax),%edx
		test   %edx,%edx
		je     jump_1a5f3
		mov    %edx,%eax
		call   w_dos_free
	jump_1a5f3:
		movswl %si,%edx
		imul   %ebp,%edx
		movswl %bx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_840a6(%eax),%ecx
		test   %ecx,%ecx
		je     jump_1a612
		mov    %ecx,%eax
		call   w_dos_free
	jump_1a612:
		inc    %ebx
	jump_1a613:
		movswl %si,%eax
		imul   %ebp,%eax
		xor    %ecx,%ecx
		movswl %bx,%edx
		mov    data_840a4(%eax),%cx
		cmp    %ecx,%edx
		jl     jump_1a5de
		inc    %esi
	jump_1a62a:
		cmp    %di,%si
		jle    jump_1a5da
		jmp    jump_19f0b


/*----------------------------------------------------------------*/
func_1a634:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		jmp    jump_1a668
	jump_1a63b:
		shl    $0x2,%eax
		mov    data_8b12a(%eax),%ebx
		test   %ebx,%ebx
		je     jump_1a64f
		mov    %ebx,%eax
		call   w_dos_free
	jump_1a64f:
		movswl %dx,%eax
		mov    data_8b12a(,%eax,4),%eax
		mov    0xa(%eax),%ecx
		test   %ecx,%ecx
		je     jump_1a667
		mov    %ecx,%eax
		call   w_dos_free
	jump_1a667:
		inc    %edx
	jump_1a668:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    data_8b128,%bx
		cmp    %ebx,%eax
		jl     jump_1a63b
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
data_1a67c:
		.ascii  "\x49\x00\x00\x00\x71\x00\x00\x00"
data_1a684:
		.ascii  "\x04\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x0a\x00\x00\x00\x0b\x00\x00\x00"
		.ascii  "\x0c\x00\x00\x00\x0d\x00\x00\x00"
		.ascii  "\x14\x00\x00\x00\x48\x00\x00\x00"
data_1a6a4:
		.ascii  "\x1e\x1f"
		.ascii   " !\"#$%&'()*+,-./"
data_1a6b6:
		.ascii  "\x1e\x1f"
		.ascii   " !\"#$%&'()*+,-./"
data_1a6c8:
		.ascii  "\xfc\xff\xfc\xff\xfc\xff\xfc\xff"
		.fill   0x4
		.ascii  "\xf9\xff\xf9\xff"
data_1a6d8:
		.fill   0x4
		.ascii  "\xf9\xff\xf9\xff\xfc\xff\xfc\xff"
		.ascii  "\xfc\xff\xfc\xff"
.text


/*----------------------------------------------------------------*/
func_1a6e8:
/*----------------------------------------------------------------*/
		movb   $0x1,data_15ba22
		mov    $0x1,%eax
		jmp    func_20f7a


/*----------------------------------------------------------------*/
func_1a712:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x200
		push   $data_51134
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_1a74e
		mov    $data_5113d,%eax
		call   w_puts
		mov    %edx,%eax
		call   w_dos_close
		mov    $data_51153,%eax
		call   func_18fd0
	jump_1a74e:
		xor    %esi,%esi
	jump_1a750:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		mov    $0x42,%ebx
		add    %edx,%eax
		mov    $data_f10a4,%edx
		add    %eax,%eax
		movswl %di,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %esi
		call   w_dos_read
		cmp    $0x7c,%si
		jl     jump_1a750
		mov    %ecx,%eax
		call   w_dos_close
		jmp    jump_1b07c


/*----------------------------------------------------------------*/
func_1a785:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_15ba16,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %eax
		imul   %eax,%edx
		mov    data_15b9c0,%eax
		add    %eax,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%eax
		add    %edx,%eax
		mov    (%eax),%al
		xor    %ah,%ah
		test   %ax,%ax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_1a7b5:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %bl,%cl
		movswl %ax,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_56bfa,%edx
		sar    $0x10,%edx
		movswl %si,%ebx
		add    %edx,%eax
		mov    data_56bf8,%edx
		sar    $0x4,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		cmp    $0x4b,%cl
		jb     jump_1a80a
		jbe    jump_1a873
		cmp    $0x4d,%cl
		jb     jump_1a8c6
		jbe    jump_1a89d
		cmp    $0x50,%cl
		je     jump_1a846
		jmp    jump_1a8c6
	jump_1a80a:
		cmp    $0x48,%cl
		jne    jump_1a8c6
		mov    data_15ba1e,%ecx
		movswl %dx,%ebx
		sar    $0x10,%ecx
		dec    %ebx
		imul   %ebx,%ecx
		mov    data_15b9bc,%ebx
		add    %ecx,%ecx
		cwtl
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    (%ecx,%ebx,2),%bx
		test   %bx,%bx
		jbe    jump_1a8f0
		dec    %edx
	jump_1a83e:
		movswl %dx,%edx
		jmp    jump_1a8eb
	jump_1a846:
		mov    data_15ba1e,%ecx
		movswl %dx,%ebx
		sar    $0x10,%ecx
		inc    %ebx
		imul   %ecx,%ebx
		mov    data_15b9bc,%ecx
		add    %ebx,%ebx
		cwtl
		add    %ecx,%ebx
		mov    %eax,%ecx
		mov    (%ebx,%ecx,2),%bx
		test   %bx,%bx
		jbe    jump_1a8f0
		inc    %edx
		jmp    jump_1a83e
	jump_1a873:
		mov    data_15ba1e,%ebx
		movswl %dx,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_15b9bc,%ecx
		add    %ebx,%ebx
		add    %ebx,%ecx
		movswl %ax,%ebx
		mov    -0x2(%ecx,%ebx,2),%bx
		test   %bx,%bx
		jbe    jump_1a8f0
		dec    %eax
	jump_1a89a:
		cwtl
		jmp    jump_1a8eb
	jump_1a89d:
		mov    data_15ba1e,%ebx
		movswl %dx,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_15b9bc,%ecx
		add    %ebx,%ebx
		add    %ebx,%ecx
		movswl %ax,%ebx
		mov    0x2(%ecx,%ebx,2),%bx
		test   %bx,%bx
		jbe    jump_1a8f0
		inc    %eax
		jmp    jump_1a89a
	jump_1a8c6:
		mov    data_15ba1e,%ebx
		movswl %dx,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_15b9bc,%ecx
		add    %ebx,%ebx
		cwtl
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    (%ecx,%ebx,2),%bx
		test   %bx,%bx
		jbe    jump_1a8f0
	jump_1a8eb:
		call   func_1b082
	jump_1a8f0:
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1a8f3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %bl,%cl
		movswl %ax,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_56bfa,%edx
		sar    $0x10,%edx
		mov    data_56bf8,%ebx
		add    %eax,%edx
		movswl %si,%eax
		sar    $0x10,%ebx
		sar    $0x4,%eax
		add    %ebx,%eax
		cmp    $0x4b,%cl
		jb     jump_1a949
		jbe    jump_1a9b7
		cmp    $0x4d,%cl
		jb     jump_1aa10
		jbe    jump_1a9e3
		cmp    $0x50,%cl
		je     jump_1a984
		jmp    jump_1aa10
	jump_1a949:
		cmp    $0x48,%cl
		jne    jump_1aa10
		mov    data_15ba1e,%ebx
		cwtl
		sar    $0x10,%ebx
		dec    %eax
		imul   %eax,%ebx
		movswl %dx,%edx
		mov    data_15b9b8,%eax
		add    %ebx,%ebx
		add    %edx,%edx
		add    %ebx,%eax
		add    %edx,%eax
		mov    (%eax),%di
		test   %di,%di
		jbe    jump_1aa42
		mov    %di,%ax
		jmp    jump_1aa38
	jump_1a984:
		mov    data_15ba1e,%ebx
		cwtl
		sar    $0x10,%ebx
		inc    %eax
		imul   %ebx,%eax
		movswl %dx,%edx
		mov    data_15b9b8,%ebx
		add    %eax,%eax
		add    %edx,%edx
		add    %ebx,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		test   %dx,%dx
		jbe    jump_1aa42
		mov    %dx,%ax
		jmp    jump_1aa38
	jump_1a9b7:
		movswl %ax,%ebx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    data_15b9b8,%eax
		add    %ebx,%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%eax
		add    %ebx,%eax
		mov    -0x2(%eax),%cx
		test   %cx,%cx
		jbe    jump_1aa42
		mov    %cx,%ax
		jmp    jump_1aa38
	jump_1a9e3:
		movswl %ax,%ebx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %ebx,%eax
		mov    data_15b9b8,%ebx
		add    %eax,%eax
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%eax
		add    %ebx,%eax
		mov    0x2(%eax),%bx
		test   %bx,%bx
		jbe    jump_1aa42
		mov    %bx,%ax
		jmp    jump_1aa38
	jump_1aa10:
		mov    data_15ba1e,%ebx
		cwtl
		sar    $0x10,%ebx
		imul   %eax,%ebx
		mov    data_15b9b8,%eax
		add    %ebx,%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%eax
		add    %ebx,%eax
		mov    (%eax),%si
		test   %si,%si
		jbe    jump_1aa42
		mov    %si,%ax
	jump_1aa38:
		and    $0xffff,%eax
		call   func_1b344
	jump_1aa42:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1aa46:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%eax
		cmp    $0x4b,%bx
		jb     jump_1aa73
		jbe    jump_1aabe
		cmp    $0x4d,%bx
		jb     jump_1ab65
		jbe    jump_1aaf9
		cmp    $0x50,%bx
		je     jump_1ab2e
		jmp    jump_1ab65
	jump_1aa73:
		cmp    $0x48,%bx
		jne    jump_1ab65
		mov    data_15ba1e,%esi
		movswl %dx,%ebx
		sar    $0x10,%esi
		lea    -0x2(%ebx),%eax
		imul   %esi,%eax
		mov    data_15b9c4,%edx
		add    %eax,%edx
		movswl %cx,%eax
		cmpb   $0x1,(%edx,%eax,1)
		je     jump_1aab6
		dec    %ebx
		imul   %ebx,%esi
		mov    data_15b9b4,%edx
		add    %esi,%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_1aba1
	jump_1aab6:
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		ret
	jump_1aabe:
		mov    data_15ba1e,%esi
		movswl %dx,%edx
		sar    $0x10,%esi
		lea    -0x1(%edx),%eax
		imul   %esi,%eax
		mov    data_15b9c4,%ebx
		add    %eax,%ebx
		movswl %cx,%eax
		cmpb   $0x1,-0x1(%ebx,%eax,1)
		je     jump_1aab6
		imul   %esi,%edx
		mov    data_15b9b4,%ebx
		add    %ebx,%edx
		cmpb   $0x0,-0x1(%edx,%eax,1)
	jump_1aaf2:
		jne    jump_1aab6
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret
	jump_1aaf9:
		mov    data_15ba1e,%eax
		movswl %dx,%esi
		sar    $0x10,%eax
		lea    -0x1(%esi),%ebx
		imul   %eax,%ebx
		mov    data_15b9c4,%edx
		add    %edx,%ebx
		movswl %cx,%edx
		cmpb   $0x1,0x1(%edx,%ebx,1)
		je     jump_1aab6
		imul   %esi,%eax
		mov    data_15b9b4,%ebx
		add    %ebx,%eax
		cmpb   $0x0,0x1(%edx,%eax,1)
		jmp    jump_1aaf2
	jump_1ab2e:
		mov    data_15ba1e,%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		mov    %edx,%esi
		imul   %eax,%esi
		mov    data_15b9c4,%ebx
		add    %ebx,%esi
		movswl %cx,%ebx
		cmpb   $0x1,(%esi,%ebx,1)
		je     jump_1aab6
		inc    %edx
		imul   %edx,%eax
		mov    data_15b9b4,%edx
		add    %edx,%eax
		cmpb   $0x0,(%ebx,%eax,1)
		jmp    jump_1aaf2
	jump_1ab65:
		mov    data_15ba1e,%ebx
		movswl %dx,%esi
		sar    $0x10,%ebx
		lea    -0x1(%esi),%eax
		imul   %ebx,%eax
		mov    data_15b9c4,%edx
		add    %eax,%edx
		movswl %cx,%eax
		cmpb   $0x1,(%edx,%eax,1)
		je     jump_1aab6
		imul   %esi,%ebx
		mov    data_15b9b4,%edx
		add    %ebx,%edx
		cmpb   $0x0,(%edx,%eax,1)
		jne    jump_1aab6
	jump_1aba1:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1aba6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %eax
		mov    data_15b9cc,%edx
		push   %edx
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
		mov    $0x22,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		call   func_18899
		mov    $0xa1,%eax
		mov    data_15b9cc,%ebx
		mov    $0x86,%edx
		push   %ebx
		mov    $0x97,%ecx
		mov    $0xd2,%ebx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%ecx
		mov    $0x86,%edx
		push   %ecx
		mov    $0x10b,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		push   $data_51158
		push   $0x50
		push   $0x50
		mov    $0x100,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_5115f
		push   $0x50
		push   $0x84
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_51163
		push   $0x50
		push   $0xa0
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5116f
		push   $0x64
		push   $0x50
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51186
		push   $0x88
		push   $0x32
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_1acd0:
		lea    0x4(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x4(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0xa1,%esi
		jle    jump_1adae
		cmp    $0xd2,%esi
		jge    jump_1adae
		mov    data_7cf28,%ebp
		cmp    $0x86,%ebp
		jle    jump_1adae
		cmp    $0x97,%ebp
		jge    jump_1adae
		test   %cx,%cx
		je     jump_1ad2d
		cmp    $0x3e7,%cx
		jne    jump_1ad9c
	jump_1ad2d:
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1ad92:
		call   func_2b470
		call   func_19b67
	jump_1ad9c:
		cmpl   $0x1,data_7cf20
		je     jump_1aeb5
		jmp    jump_1acd0
	jump_1adae:
		mov    data_7cf24,%edx
		cmp    $0xd8,%edx
		jle    jump_1ae5a
		cmp    $0x10b,%edx
		jge    jump_1ae5a
		mov    data_7cf28,%esi
		cmp    $0x86,%esi
		jle    jump_1ae5a
		cmp    $0x97,%esi
		jge    jump_1ae5a
		cmp    $0x1,%cx
		je     jump_1adf3
		cmp    $0x3e7,%cx
		jne    jump_1ad9c
	jump_1adf3:
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1ad92
	jump_1ae5a:
		cmp    $0x1,%cx
		je     jump_1ae69
		test   %cx,%cx
		jne    jump_1acd0
	jump_1ae69:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1acd0
	jump_1aeb5:
		test   %cx,%cx
		jne    jump_1aec4
		call   func_3197d
		jmp    jump_1b078
	jump_1aec4:
		mov    data_19ff44,%eax
		sub    $0xc8,%eax
		test   %eax,%eax
		jge    jump_1aee1
		mov    $data_511ac,%eax
		call   func_34fbe
		jmp    jump_1b078
	jump_1aee1:
		mov    $0xffffff38,%eax
		call   func_35109
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_201cf
	jump_1aefc:
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_1af1d
		call   func_2b206
		jmp    jump_1aefc
	jump_1af1d:
		xor    %ecx,%ecx
		jmp    jump_1af9d
	jump_1af24:
		xor    %edx,%edx
		mov    %dx,0x10(%esp)
		jmp    jump_1af55
	jump_1af2d:
		movswl %cx,%ebx
		imul   %ebx,%eax
		mov    data_15b9c0,%ebx
		add    %ebx,%eax
		add    %edx,%eax
		mov    -0x2(%esp),%edx
		mov    (%eax),%al
		sar    $0x10,%edx
		and    $0xff,%eax
		inc    %edx
		cmp    %edx,%eax
		je     jump_1af6b
		incw   0x10(%esp)
	jump_1af55:
		mov    data_15ba1e,%eax
		mov    0xe(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		lea    -0x1(%eax),%ebx
		cmp    %ebx,%edx
		jl     jump_1af2d
	jump_1af6b:
		mov    data_15ba1e,%eax
		movswl %cx,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		mov    data_15b9c0,%eax
		add    %eax,%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		add    %edx,%eax
		mov    -0x2(%esp),%edx
		mov    (%eax),%al
		sar    $0x10,%edx
		and    $0xff,%eax
		inc    %edx
		cmp    %edx,%eax
		je     jump_1afb1
		inc    %ecx
	jump_1af9d:
		mov    data_15ba1c,%eax
		sar    $0x10,%eax
		movswl %cx,%edx
		dec    %eax
		cmp    %eax,%edx
		jl     jump_1af24
	jump_1afb1:
		mov    data_15ba1c,%edx
		sar    $0x10,%edx
		movswl %cx,%eax
		dec    %edx
		cmp    %edx,%eax
		je     jump_1b00c
		mov    data_15ba1e,%eax
		mov    0xe(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %eax
		cmp    %eax,%edx
		je     jump_1b00c
		mov    0x10(%esp),%eax
		mov    %cx,data_56bfa
		mov    %ax,data_56bfc
		xor    %ecx,%ecx
		mov    -0x2(%esp),%eax
		mov    %cx,data_82945
		sar    $0x10,%eax
		mov    %cx,data_82947
		call   func_20eb0
		mov    %cx,data_15ba1a
		jmp    jump_1b018
	jump_1b00c:
		mov    data_f30a0,%ax
		mov    %ax,data_82943
	jump_1b018:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		call   func_2b44f
		mov    $0x1,%ah
		xor    %ebx,%ebx
		mov    %ah,data_54041
		jmp    jump_1b068
	jump_1b042:
		mov    %eax,%edx
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac70(,%eax,8),%edx
		mov    %edx,data_19ac6c(,%eax,8)
		mov    data_19ac76(,%eax,8),%dx
		inc    %ebx
		mov    %dx,data_19ac74(,%eax,8)
	jump_1b068:
		xor    %edx,%edx
		movswl %bx,%eax
		mov    data_1a00c8,%dx
		cmp    %edx,%eax
		jl     jump_1b042
	jump_1b078:
		add    $0x14,%esp
	jump_1b07b:
		pop    %ebp
	jump_1b07c:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1b082:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		push   %eax
		push   %edx
		mov    -0x2(%esp),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9bc,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		lea    (%edx,%eax,1),%ecx
		xor    %esi,%esi
		mov    (%ecx),%si
		mov    $0x3e8,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x1f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    data_7d954,%dl
		cmp    %edx,%eax
		jg     jump_1b33b
		cmpb   $0x0,data_7dae4(%ebx)
		jne    jump_1b33b
		test   %si,%si
		je     jump_1b33b
		mov    $0x3e8,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %dx,0x38(%esp)
		cmp    $0x1f4,%dx
		jg     jump_1b11a
		xor    %dh,%dh
		mov    %dh,0x3c(%esp)
		jmp    jump_1b12f
	jump_1b11a:
		mov    0x38(%esp),%ecx
		mov    $0x1,%dl
		sub    $0x1f4,%ecx
		mov    %dl,0x3c(%esp)
		mov    %cx,0x38(%esp)
	jump_1b12f:
		mov    -0x2(%esp),%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_15b9bc,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    $0x1,%bl
		add    %eax,%edx
		mov    %bl,data_15ba22
		mov    (%edx),%dx
		and    $0xffff,%edx
		mov    $0x3e8,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		decw   0x38(%esp)
		mov    0x36(%esp),%ebp
		sar    $0x10,%ebp
		mov    %ebp,%esi
		shl    $0x5,%esi
		add    %ebp,%esi
		add    %esi,%esi
		add    $data_f10a4,%esi
		lea    0x8(%esp),%edi
		inc    %esi
		mov    $0x1,%bh
		mov    $0x55,%edx
		mov    %bh,data_7dae4(%eax)
		push   %edi
	jump_1b1a2:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b1be
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b1a2
	jump_1b1be:
		pop    %edi
		lea    0x8(%esp),%edi
		mov    $0x13f,%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,0x34(%esp)
		xor    %eax,%eax
		mov    $0x73,%ecx
		call   func_18899
		mov    0x32(%esp),%eax
		mov    data_15b9cc,%esi
		mov    data_99232(,%ebp,4),%ebx
		sar    $0x10,%eax
		mov    0xa(%ebx),%ecx
		mov    0x4(%ebx),%edx
		mov    0x2(%ebx),%edi
		sar    $0x10,%edx
		mov    %eax,%ebx
		sar    $0x10,%edi
		shl    $0x2,%ebx
		add    $0x7d,%edx
		sub    %eax,%ebx
		lea    0x96(%edi),%eax
		add    %ebx,%ebx
		lea    0x8(%esp),%edi
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %esi,%ecx
		mov    $data_511c1,%esi
		call   func_2b240
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1b234:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b250
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b234
	jump_1b250:
		pop    %edi
		lea    0x8(%esp),%eax
		mov    0x34(%esp),%edi
		push   %eax
		imul   $0x6,%edi,%eax
		mov    $0x96,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x1e,%eax
		push   $0x5f
		cwtl
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_1b281:
		lea    0x28(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x28(%esp),%esi
		mov    data_1a0168,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		test   %edx,%edx
		jne    jump_1b2b1
		cmpl   $0x1,data_7cf20
		je     jump_1b2b1
		xor    %cl,%cl
		mov    %cl,data_15ba22
	jump_1b2b1:
		cmpl   $0x0,data_1a0168
		jne    jump_1b2c3
		cmpl   $0x1,data_7cf20
		jne    jump_1b281
	jump_1b2c3:
		cmpb   $0x1,data_15ba22
		je     jump_1b281
		movb   $0x1,data_15ba22
		mov    $0x1,%eax
		call   func_20f7a
		mov    data_15b9cc,%eax
		call   func_2b470
		call   func_19ba9
		mov    0x36(%esp),%eax
		sar    $0x10,%eax
		call   func_376d8
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_1b336
		cmpb   $0x1,0x3c(%esp)
		jne    jump_1b336
		mov    -0x2(%esp),%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %eax
		imul   %edx,%eax
		mov    data_15b9c8,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x2(%esp),%eax
		mov    data_8b128,%bx
		sar    $0x10,%eax
		dec    %ebx
		mov    %bx,(%edx,%eax,2)
	jump_1b336:
		call   func_3197d
	jump_1b33b:
		add    $0x40,%esp
	jump_1b33e:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_1b344:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x40,%esp
		push   %eax
		mov    (%esp),%edx
		dec    %edx
		movzwl %dx,%ebp
		call   func_19ba9
		mov    %ebp,%eax
		shl    $0x5,%eax
		add    %ebp,%eax
		mov    $0x10,%ecx
		mov    $data_15b9d0,%edi
		lea    data_f10a4(,%eax,2),%esi
		mov    $0xa,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %edx,(%esp)
		lea    0x4(%esp),%edi
		mov    $data_15b9d1,%esi
		lea    0x24(%esp),%edx
		push   %edi
	jump_1b38c:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b3a8
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b38c
	jump_1b3a8:
		pop    %edi
		xor    %eax,%eax
		lea    0x24(%esp),%edi
		mov    data_15b9f6,%ax
		mov    $data_511c7,%esi
		call   func_ltoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1b3c8:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b3e4
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b3c8
	jump_1b3e4:
		pop    %edi
		mov    $0x22,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		lea    0x4(%esp),%edi
		call   func_18899
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x4(%esp),%eax
		shl    $0x3,%ecx
		push   %eax
		mov    $0x8c,%eax
		sub    %ecx,%eax
		push   $0x28
		cwtl
		push   %eax
		lea    0x10(%esp),%edi
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x100,%edx
		mov    $0xff,%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x4,%eax
		mov    %ecx,0x40(%esp)
		call   func_2c1c9
		lea    0x24(%esp),%eax
		shl    $0x2,%ecx
		push   %eax
		mov    $0xdc,%eax
		sub    %ecx,%eax
		push   $0x28
		cwtl
		push   %eax
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		lea    0x1(%ebp),%eax
		mov    $0xd2,%ebx
		call   func_37a56
		mov    data_15b9cc,%edx
		mov    $0x97,%ecx
		push   %edx
		mov    $0xa1,%eax
		mov    $0x86,%edx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%ebx
		mov    $0x86,%edx
		push   %ebx
		mov    $0x97,%ecx
		mov    $0x10b,%ebx
		call   func_1843d
		push   $data_511cc
		push   $0x88
		push   $0x32
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x4,%ebp
	jump_1b4ff:
		lea    0x34(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x34(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0xa1,%esi
		jle    jump_1b5d4
		cmp    $0xd2,%esi
		jge    jump_1b5d4
		mov    data_7cf28,%eax
		cmp    $0x86,%eax
		jle    jump_1b5d4
		cmp    $0x97,%eax
		jge    jump_1b5d4
		test   %cx,%cx
		je     jump_1b559
		cmp    $0x3e7,%cx
		jne    jump_1b5c2
	jump_1b559:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1b5b8:
		call   func_2b470
		call   func_19b67
	jump_1b5c2:
		cmpl   $0x1,data_7cf20
		je     jump_1b6d5
		jmp    jump_1b4ff
	jump_1b5d4:
		mov    data_7cf24,%ebx
		cmp    $0xd8,%ebx
		jle    jump_1b67a
		cmp    $0x10b,%ebx
		jge    jump_1b67a
		mov    data_7cf28,%edi
		cmp    $0x86,%edi
		jle    jump_1b67a
		cmp    $0x97,%edi
		jge    jump_1b67a
		cmp    $0x1,%cx
		je     jump_1b619
		cmp    $0x3e7,%cx
		jne    jump_1b5c2
	jump_1b619:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1b5b8
	jump_1b67a:
		cmp    $0x1,%cx
		je     jump_1b689
		test   %cx,%cx
		jne    jump_1b4ff
	jump_1b689:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1b4ff
	jump_1b6d5:
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b470
		cmp    $0x1,%cx
		jne    jump_1b749
		mov    data_15b9f4,%eax
		mov    data_19ff44,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		test   %edx,%edx
		jl     jump_1b73f
		xor    %eax,%eax
		xor    %edx,%edx
		mov    (%esp),%ax
		call   func_22e57
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		mov    data_19763c(,%eax,2),%bx
		add    %ecx,%ebx
		mov    0x40(%esp),%ecx
		mov    %bx,data_19763c(,%eax,2)
		test   %cx,%cx
		je     jump_1b749
		xor    %eax,%eax
		mov    data_15b9f6,%ax
		neg    %eax
		call   func_35109
		jmp    jump_1b749
	jump_1b73f:
		mov    $data_511ac,%eax
		call   func_34fbe
	jump_1b749:
		call   func_3197d
		call   func_319db
		add    $0x44,%esp
		jmp    jump_1b07b


/*----------------------------------------------------------------*/
func_1b75b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x3c,%esp
		push   %eax
		test   %ax,%ax
		jne    jump_1b774
		mov    $0xffffffff,%eax
		jmp    jump_1bbe2
	jump_1b774:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   func_334f9
		cmp    $0x1,%eax
		jne    jump_1b79a
		mov    $data_511e8,%eax
		call   func_34fbe
		call   func_1a6e8
		xor    %eax,%eax
		jmp    jump_1bbe2
	jump_1b79a:
		mov    data_15b9cc,%eax
		mov    (%esp),%ebx
		call   func_2b470
		dec    %ebx
		mov    $0x1,%ah
		movzwl %bx,%ebp
		mov    %ah,data_15ba22
		mov    %ebp,%eax
		shl    $0x5,%eax
		add    %ebp,%eax
		mov    $0x10,%ecx
		mov    $data_15b9d0,%edi
		lea    data_f10a4(,%eax,2),%esi
		lea    0x24(%esp),%edx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %ebx,(%esp)
		lea    0x4(%esp),%edi
		mov    $data_15b9d1,%esi
		mov    $0xa,%ebx
		push   %edi
	jump_1b7e5:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b801
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b7e5
	jump_1b801:
		pop    %edi
		lea    0x24(%esp),%edi
		mov    data_15b9f6,%cx
		xor    %eax,%eax
		shr    %cx
		mov    $data_511c7,%esi
		mov    %cx,%ax
		mov    %cx,data_15b9f6
		call   func_ltoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1b82f:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1b84b
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1b82f
	jump_1b84b:
		pop    %edi
		mov    $0x22,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		lea    0x4(%esp),%edi
		call   func_18899
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x4(%esp),%eax
		push   %eax
		mov    %ecx,%eax
		mov    $0x8c,%edx
		shl    $0x3,%eax
		sub    %eax,%edx
		push   $0x28
		movswl %dx,%eax
		push   %eax
		lea    0x10(%esp),%edi
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x100,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x4,%eax
		call   func_2c1c9
		lea    0x24(%esp),%eax
		shl    $0x2,%ecx
		push   %eax
		mov    $0xdc,%eax
		sub    %ecx,%eax
		push   $0x28
		cwtl
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x4,%eax
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		lea    0x1(%ebp),%eax
		mov    $0x97,%ecx
		call   func_37a56
		mov    data_15b9cc,%edx
		mov    $0xd2,%ebx
		push   %edx
		mov    $0xa1,%eax
		mov    $0x86,%edx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%ebx
		mov    $0x86,%edx
		push   %ebx
		mov    $0x97,%ecx
		mov    $0x10b,%ebx
		call   func_1843d
		push   $data_51204
		push   $0x88
		push   $0x32
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x4,%ebp
	jump_1b966:
		lea    0x34(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x34(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0xa1,%esi
		jle    jump_1ba3b
		cmp    $0xd2,%esi
		jge    jump_1ba3b
		mov    data_7cf28,%eax
		cmp    $0x86,%eax
		jle    jump_1ba3b
		cmp    $0x97,%eax
		jge    jump_1ba3b
		test   %cx,%cx
		je     jump_1b9c0
		cmp    $0x3e7,%cx
		jne    jump_1ba29
	jump_1b9c0:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1ba1f:
		call   func_2b470
		call   func_19b67
	jump_1ba29:
		cmpl   $0x1,data_7cf20
		je     jump_1bb3c
		jmp    jump_1b966
	jump_1ba3b:
		mov    data_7cf24,%ebx
		cmp    $0xd8,%ebx
		jle    jump_1bae1
		cmp    $0x10b,%ebx
		jge    jump_1bae1
		mov    data_7cf28,%edi
		cmp    $0x86,%edi
		jle    jump_1bae1
		cmp    $0x97,%edi
		jge    jump_1bae1
		cmp    $0x1,%cx
		je     jump_1ba80
		cmp    $0x3e7,%cx
		jne    jump_1ba29
	jump_1ba80:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1ba1f
	jump_1bae1:
		cmp    $0x1,%cx
		je     jump_1baf0
		test   %cx,%cx
		jne    jump_1b966
	jump_1baf0:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1b966
	jump_1bb3c:
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b470
		cmp    $0x1,%cx
		jne    jump_1bbd8
		xor    %ecx,%ecx
		jmp    jump_1bb7f
	jump_1bb59:
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    data_15fd2c(%esi,%eax,1),%dl
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %eax
		cmp    %eax,%edx
		je     jump_1bb9e
		inc    %ecx
	jump_1bb7f:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		lea    (%edx,%edx,1),%eax
		mov    data_19763c(%eax),%ax
		movswl %cx,%esi
		and    $0xffff,%eax
		cmp    %eax,%esi
		jl     jump_1bb59
	jump_1bb9e:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %cx,%eax
		xor    %bl,%bl
		mov    %bl,data_15fd2c(%edx,%eax,1)
		call   func_3767b
		xor    %eax,%eax
		mov    data_15b9f6,%ax
		call   func_35109
	jump_1bbd8:
		call   func_3197d
		mov    $0x1,%eax
	jump_1bbe2:
		add    $0x40,%esp
		jmp    jump_1b07b


/*----------------------------------------------------------------*/
func_1bbea:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x28,%esp
		mov    %eax,%edx
		lea    0x20(%esp),%edi
		mov    $data_1a67c,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
		mov    %esp,%edi
		mov    $data_1a684,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
	jump_1bc0e:
		cmp    0x20(%esp,%eax,1),%edx
		jne    jump_1bc1b
		mov    $0x1,%eax
		jmp    jump_1bc3b
	jump_1bc1b:
		add    $0x4,%eax
		cmp    $0x8,%eax
		jl     jump_1bc0e
		xor    %eax,%eax
	jump_1bc25:
		cmp    (%esp,%eax,1),%edx
		jne    jump_1bc31
		mov    $0x12,%eax
		jmp    jump_1bc3b
	jump_1bc31:
		add    $0x4,%eax
		cmp    $0x20,%eax
		jl     jump_1bc25
		xor    %eax,%eax
	jump_1bc3b:
		add    $0x28,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1bc43:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		mov    %eax,%ebp
		mov    %edx,%ebx
		mov    %esp,%edi
		xor    %edx,%edx
		mov    $data_1a6a4,%esi
		mov    %dx,0x48(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    jump_1bc80
	jump_1bc65:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac33(,%eax,8),%al
		cmp    data_7d955,%al
		je     jump_1bc93
		incw   0x48(%esp)
	jump_1bc80:
		xor    %eax,%eax
		mov    0x46(%esp),%edx
		mov    data_1a00c8,%ax
		sar    $0x10,%edx
		cmp    %eax,%edx
		jl     jump_1bc65
	jump_1bc93:
		xor    %edx,%edx
		mov    %bx,%dx
		mov    0x48(%esp),%eax
		dec    %edx
		mov    %ax,0x4c(%esp)
		mov    %edx,%eax
		mov    $0x22,%ecx
		shl    $0x4,%eax
		mov    $data_f7870,%edi
		add    %edx,%eax
		mov    $data_172224,%ebx
		mov    data_15b9cc,%edx
		lea    data_15ba24(,%eax,8),%esi
		push   %edx
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		push   $0xc7
		mov    $0x13f,%ecx
		xor    %edx,%edx
		call   func_2b3dc
		mov    $0x4a,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		call   func_18899
		mov    $0xa1,%eax
		mov    data_15b9cc,%ebx
		mov    $0x86,%edx
		push   %ebx
		mov    $0x97,%ecx
		mov    $0xd2,%ebx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%ecx
		mov    $0x86,%edx
		push   %ecx
		mov    $0x10b,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		mov    0x48(%esp),%eax
		mov    $0x32,%edx
		shl    $0x3,%eax
		push   $data_f7872
		sub    %eax,%edx
		push   $0x50
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		xor    %eax,%eax
		mov    data_f7881,%al
		shl    $0x4,%eax
		add    $0xc,%esp
		add    $data_52a00,%eax
		push   %eax
		push   $0x50
		push   $0xc8
		mov    $0xff,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x1000,%edx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_51220
		push   $0x6e
		push   $0x50
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51186
		push   $0x88
		push   $0x32
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_1bde3:
		lea    0x24(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x24(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0xa1,%esi
		jle    jump_1bebe
		cmp    $0xd2,%esi
		jge    jump_1bebe
		mov    data_7cf28,%eax
		cmp    $0x86,%eax
		jle    jump_1bebe
		cmp    $0x97,%eax
		jge    jump_1bebe
		test   %cx,%cx
		je     jump_1be3d
		cmp    $0x3e7,%cx
		jne    jump_1beac
	jump_1be3d:
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1bea2:
		call   func_2b470
		call   func_19b67
	jump_1beac:
		cmpl   $0x1,data_7cf20
		je     jump_1bfc5
		jmp    jump_1bde3
	jump_1bebe:
		mov    data_7cf24,%ebx
		cmp    $0xd8,%ebx
		jle    jump_1bf6a
		cmp    $0x10b,%ebx
		jge    jump_1bf6a
		mov    data_7cf28,%edi
		cmp    $0x86,%edi
		jle    jump_1bf6a
		cmp    $0x97,%edi
		jge    jump_1bf6a
		cmp    $0x1,%cx
		je     jump_1bf03
		cmp    $0x3e7,%cx
		jne    jump_1beac
	jump_1bf03:
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1bea2
	jump_1bf6a:
		cmp    $0x1,%cx
		je     jump_1bf79
		test   %cx,%cx
		jne    jump_1bde3
	jump_1bf79:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1bde3
	jump_1bfc5:
		test   %cx,%cx
		jne    jump_1bfd4
	jump_1bfca:
		call   func_3197d
		jmp    jump_1c6a1
	jump_1bfd4:
		cmpw   $0x5a,data_1a00c8
		jb     jump_1bfea
		mov    $data_51239,%eax
		call   func_34fbe
		jmp    jump_1bfca
	jump_1bfea:
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    0x4a(%esp),%edx
		push   $data_51256
		sar    $0x10,%edx
		mov    $0x1,%eax
		mov    %edx,%esi
		mov    $data_51256,%ecx
		shl    $0x4,%esi
		xor    %ebx,%ebx
		add    %edx,%esi
		mov    $data_19ac24,%edx
		shl    $0x3,%esi
		push   $data_51257
		add    %esi,%edx
		mov    data_19ac34(%esi),%bl
		add    $0x2,%edx
		call   func_26e32
		call   func_31933
		call   func_19b67
		mov    data_f78b3,%dl
		cmp    data_19ac67(%esi),%dl
		jbe    jump_1c09d
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_51256
		mov    $data_f7872,%edx
		mov    $data_51280,%ecx
		xor    %ebx,%ebx
		push   $data_5126d
		mov    %ebp,%eax
		mov    data_f7880,%bl
		call   func_26e32
		call   func_31933
		jmp    jump_1c6a1
	jump_1c09d:
		mov    data_f787f,%dl
		xor    %ecx,%ecx
	jump_1c0a5:
		movswl %cx,%eax
		cmp    (%esp,%eax,1),%dl
		je     jump_1c0b4
		inc    %ecx
		cmp    $0x12,%cx
		jl     jump_1c0a5
	jump_1c0b4:
		cmp    $0x12,%cx
		jne    jump_1c183
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_51290
		mov    $data_f7872,%edx
		mov    $data_512b9,%ecx
		xor    %ebx,%ebx
		push   $data_512a2
		mov    %ebp,%eax
		mov    data_f7880,%bl
		call   func_26e32
		call   func_31933
		mov    $0x1,%bh
		mov    $data_f3370,%eax
		xor    %edx,%edx
		mov    %bh,data_15ba22
		mov    $0xff,%ebx
		call   func_201cf
	jump_1c118:
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_1c139
		call   func_2b206
		jmp    jump_1c118
	jump_1c139:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    data_15b9cc,%eax
		call   func_2b44f
		xor    %eax,%eax
		mov    data_1a00ca,%edx
		mov    data_f787f,%al
		sar    $0x10,%edx
		mov    $0x1,%ch
		call   func_237f0
		call   func_1199e
		mov    $0x1,%eax
		mov    %ch,data_54041
		jmp    jump_1c6a3
	jump_1c183:
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_51256
		mov    $data_f7872,%edx
		mov    $data_51256,%ecx
		xor    %ebx,%ebx
		push   $data_512ce
		mov    %ebp,%eax
		mov    data_f7880,%bl
		call   func_26e32
		call   func_31933
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    data_15b9cc,%eax
		mov    $data_f7872,%edi
		call   func_2b470
		call   func_19b67
		xor    %edx,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    data_f789b,%dl
		mov    $data_511c7,%esi
		mov    %edx,%eax
		mov    $0xa,%ebx
		shl    $0x2,%eax
		lea    0x14(%esp),%edi
		add    %edx,%eax
		lea    0x14(%esp),%edx
		add    %eax,%eax
		mov    %ecx,0x44(%esp)
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1c22b:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1c247
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1c22b
	jump_1c247:
		pop    %edi
		mov    $0x28,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		mov    $0x2d,%esi
		call   func_18899
		push   $data_512e5
		push   $0x2d
		push   $0x64
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_512eb
		push   $0x2d
		push   $0xdc
		lea    0x48(%esp),%edx
		call   func_2c6ab
		xor    %eax,%eax
		add    $0xc,%esp
		mov    data_f789b,%al
		mov    $0xa,%ebx
		cwtl
		call   func_itoa_
		push   $data_512f1
		push   $0x3f
		push   $0x64
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_512f7
		push   $0x3f
		push   $0xaa
		mov    $0x100,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    0x44(%esp),%eax
		mov    $0x50,%edx
		shl    $0x3,%eax
		push   $data_f7872
		sub    %eax,%edx
		push   $0x2d
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		xor    %eax,%eax
		mov    data_f7881,%al
		shl    $0x4,%eax
		add    $0xc,%esp
		add    $data_52a00,%eax
		push   %eax
		push   $0x2d
		push   $0x8c
		call   func_2c6ab
		mov    data_f787d,%bl
		add    $0xc,%esp
		cmp    $0x1,%bl
		jne    jump_1c329
		push   $data_512ff
		jmp    jump_1c32e
	jump_1c329:
		push   $data_51306
	jump_1c32e:
		push   $0x2d
		push   $0x104
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x3c(%esp),%eax
		push   %eax
		mov    %esi,%eax
		add    $0x12,%eax
		movswl %ax,%edx
		push   %edx
		push   $0x8c
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x14(%esp),%eax
		push   %eax
		push   %edx
		push   $0xe6
		mov    $0xff,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x1000,%edx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    $0xa1,%eax
		mov    data_15b9cc,%ecx
		mov    $0x86,%edx
		push   %ecx
		mov    $0xd2,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%esi
		mov    $0x86,%edx
		push   %esi
		mov    $0x10b,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		push   $data_51220
		push   $0x64
		push   $0x50
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5130b
		push   $0x88
		push   $0x22
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x4,%ebp
	jump_1c410:
		lea    0x30(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x30(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%edi
		cmp    $0xa1,%edi
		jle    jump_1c4e8
		cmp    $0xd2,%edi
		jge    jump_1c4e8
		mov    data_7cf28,%edx
		cmp    $0x86,%edx
		jle    jump_1c4e8
		cmp    $0x97,%edx
		jge    jump_1c4e8
		test   %cx,%cx
		je     jump_1c46d
		cmp    $0x3e7,%cx
		jne    jump_1c4d6
	jump_1c46d:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1c4cc:
		call   func_2b470
		call   func_19b67
	jump_1c4d6:
		cmpl   $0x1,data_7cf20
		je     jump_1c5e6
		jmp    jump_1c410
	jump_1c4e8:
		mov    data_7cf24,%esi
		cmp    $0xd8,%esi
		jle    jump_1c58b
		cmp    $0x10b,%esi
		jge    jump_1c58b
		mov    data_7cf28,%eax
		cmp    $0x86,%eax
		jle    jump_1c58b
		cmp    $0x97,%eax
		jge    jump_1c58b
		cmp    $0x1,%cx
		je     jump_1c52a
		cmp    $0x3e7,%cx
		jne    jump_1c4d6
	jump_1c52a:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1c4cc
	jump_1c58b:
		cmp    $0x1,%cx
		je     jump_1c59a
		test   %cx,%cx
		jne    jump_1c410
	jump_1c59a:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1c410
	jump_1c5e6:
		call   func_19ba9
		cmp    $0x1,%cx
		jne    jump_1c6a1
		lea    0x14(%esp),%eax
		call   func_3b155
		mov    data_19ff44,%edx
		sub    %eax,%edx
		test   %edx,%edx
		jl     jump_1c697
		lea    0x14(%esp),%eax
		mov    $0xff,%ebx
		call   func_3b155
		neg    %eax
		xor    %edx,%edx
		call   func_35109
		mov    $data_f3370,%eax
		call   func_201cf
	jump_1c62f:
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_1c650
		call   func_2b206
		jmp    jump_1c62f
	jump_1c650:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    data_15b9cc,%eax
		call   func_2b44f
		xor    %eax,%eax
		mov    data_1a00ca,%edx
		mov    data_f787f,%al
		sar    $0x10,%edx
		mov    $0x1,%cl
		call   func_237f0
		call   func_1199e
		mov    $0x1,%eax
		mov    %cl,data_54041
		jmp    jump_1c6a3
	jump_1c697:
		mov    $data_511ac,%eax
		call   func_34fbe
	jump_1c6a1:
		xor    %eax,%eax
	jump_1c6a3:
		add    $0x50,%esp
		jmp    jump_1b33e


/*----------------------------------------------------------------*/
func_1c6ab:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		push   %eax
		push   %edx
		lea    0x8(%esp),%edi
		mov    $data_1a6b6,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    data_15b9cc,%edx
		push   %edx
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
		xor    %ecx,%ecx
		jmp    jump_1c6fe
	jump_1c6e7:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac33(,%eax,8),%al
		cmp    data_7d955,%al
		je     jump_1c70d
		inc    %ecx
	jump_1c6fe:
		xor    %eax,%eax
		movswl %cx,%edx
		mov    data_1a00c8,%ax
		cmp    %eax,%edx
		jl     jump_1c6e7
	jump_1c70d:
		mov    data_1a00c8,%dx
		mov    %cx,0x54(%esp)
		cmp    $0x5a,%dx
		jb     jump_1c733
		mov    $data_51239,%eax
		call   func_34fbe
	jump_1c729:
		call   func_3197d
		jmp    jump_1d125
	jump_1c733:
		mov    $0x4a,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		call   func_18899
		mov    $0xa1,%eax
		mov    data_15b9cc,%ebx
		mov    $0x86,%edx
		push   %ebx
		mov    $0x97,%ecx
		mov    $0xd2,%ebx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%ecx
		mov    $0x86,%edx
		push   %ecx
		mov    $0x10b,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		push   $data_51329
		push   $0x64
		push   $0x50
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51186
		push   $0x88
		push   $0x32
		mov    $0x100,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		xor    %edx,%edx
		mov    (%esp),%dx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		add    $data_197704,%eax
		add    $0x2,%eax
		push   %eax
		push   $0x50
		push   $0x50
		mov    $0xff,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x1000,%edx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    $0x4,%eax
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x4,%ebp
	jump_1c825:
		lea    0x38(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x38(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0xa1,%esi
		jle    jump_1c8fa
		cmp    $0xd2,%esi
		jge    jump_1c8fa
		mov    data_7cf28,%eax
		cmp    $0x86,%eax
		jle    jump_1c8fa
		cmp    $0x97,%eax
		jge    jump_1c8fa
		test   %cx,%cx
		je     jump_1c87f
		cmp    $0x3e7,%cx
		jne    jump_1c8e8
	jump_1c87f:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1c8de:
		call   func_2b470
		call   func_19b67
	jump_1c8e8:
		cmpl   $0x1,data_7cf20
		je     jump_1c9fb
		jmp    jump_1c825
	jump_1c8fa:
		mov    data_7cf24,%ebx
		cmp    $0xd8,%ebx
		jle    jump_1c9a0
		cmp    $0x10b,%ebx
		jge    jump_1c9a0
		mov    data_7cf28,%edi
		cmp    $0x86,%edi
		jle    jump_1c9a0
		cmp    $0x97,%edi
		jge    jump_1c9a0
		cmp    $0x1,%cx
		je     jump_1c93f
		cmp    $0x3e7,%cx
		jne    jump_1c8e8
	jump_1c93f:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1c8de
	jump_1c9a0:
		cmp    $0x1,%cx
		je     jump_1c9af
		test   %cx,%cx
		jne    jump_1c825
	jump_1c9af:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1c825
	jump_1c9fb:
		test   %cx,%cx
		je     jump_1c729
		mov    0x52(%esp),%edx
		mov    $data_197704,%ebp
		xor    %eax,%eax
		sar    $0x10,%edx
		mov    (%esp),%ax
		mov    %edx,%ebx
		mov    %eax,%esi
		shl    $0x4,%ebx
		shl    $0x4,%esi
		add    %edx,%ebx
		add    %eax,%esi
		shl    $0x3,%ebx
		shl    $0x3,%esi
		mov    data_19ac67(%ebx),%al
		add    %esi,%ebp
		mov    data_197747(%esi),%dl
		add    $0x2,%ebp
		cmp    %dl,%al
		jae    jump_1ca8e
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_5133c
		mov    0x8(%esp),%eax
		mov    $data_5135e,%ecx
		xor    %ebx,%ebx
		push   $data_51343
		mov    %ebp,%edx
		mov    data_197714(%esi),%bl
		call   func_26e32
		call   func_31933
		mov    $0x1,%ch
		xor    %eax,%eax
		mov    %ch,data_15ba22
		jmp    jump_1d127
	jump_1ca8e:
		xor    %eax,%eax
		mov    data_197713(%esi),%al
		call   func_1bbea
		cmp    $0x1,%eax
		jb     jump_1cb3b
		jbe    jump_1cab0
		cmp    $0x12,%eax
		je     jump_1cb02
		jmp    jump_1cb3b
	jump_1cab0:
		cmpb   $0x1,data_19ac33(%ebx)
		jne    jump_1cb3b
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_5136c
		mov    0x8(%esp),%eax
		mov    $data_5138d,%ecx
		xor    %ebx,%ebx
		push   $data_5137d
	jump_1caeb:
		mov    %ebp,%edx
		mov    data_197714(%esi),%bl
		call   func_26e32
		call   func_31933
		jmp    jump_1d125
	jump_1cb02:
		cmpb   $0x12,data_19ac33(%ebx)
		jne    jump_1cb3b
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		push   $data_51256
		mov    0x8(%esp),%eax
		mov    $data_513a8,%ecx
		xor    %ebx,%ebx
		push   $data_51399
		jmp    jump_1caeb
	jump_1cb3b:
		xor    %ecx,%ecx
	jump_1cb3d:
		xor    %edx,%edx
		mov    (%esp),%dx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movswl %cx,%edx
		mov    data_197713(,%eax,8),%al
		cmp    0x8(%esp,%edx,1),%al
		je     jump_1cb61
		inc    %ecx
		cmp    $0x12,%cx
		jl     jump_1cb3d
	jump_1cb61:
		cmp    $0x12,%cx
		jne    jump_1cbf2
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_201cf
	jump_1cb7c:
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_1cb9d
		call   func_2b206
		jmp    jump_1cb7c
	jump_1cb9d:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		xor    %edx,%edx
		mov    data_15b9cc,%eax
		mov    (%esp),%dx
		call   func_2b44f
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_197713(%eax),%al
		and    $0xff,%eax
		mov    $0x1,%bl
		call   func_22a53
		call   func_1199e
		mov    $0x1,%eax
		mov    %bl,data_54041
		jmp    jump_1d127
	jump_1cbf2:
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		xor    %eax,%eax
		mov    (%esp),%ax
		mov    $data_511c7,%esi
		mov    %eax,%ebp
		push   $data_51256
		shl    $0x4,%ebp
		mov    $data_513d3,%ecx
		add    %eax,%ebp
		mov    $data_197704,%eax
		shl    $0x3,%ebp
		xor    %ebx,%ebx
		add    %ebp,%eax
		push   $data_513be
		add    $0x2,%eax
		mov    data_197714(%ebp),%bl
		mov    %eax,0x58(%esp)
		mov    0xc(%esp),%eax
		mov    0x58(%esp),%edx
		mov    0x58(%esp),%edi
		call   func_26e32
		call   func_31933
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		lea    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19772f(%ebp),%al
		lea    0x1c(%esp),%edi
		add    %eax,%eax
		mov    %ecx,0x4c(%esp)
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_1cc8e:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_1ccaa
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_1cc8e
	jump_1ccaa:
		pop    %edi
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    $0x28,%edx
		mov    $0x13f,%ebx
		mov    $0xa0,%ecx
		xor    %eax,%eax
		mov    $0x2d,%esi
		call   func_18899
		push   $data_512e5
		push   $0x2d
		push   $0x64
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_512eb
		push   $0x2d
		push   $0xdc
		lea    0x50(%esp),%edx
		call   func_2c6ab
		xor    %eax,%eax
		add    $0xc,%esp
		mov    data_19772f(%ebp),%al
		mov    $0xa,%ebx
		cwtl
		call   func_itoa_
		push   $data_512f1
		push   $0x3f
		push   $0x64
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_513e6
		push   $0x3f
		push   $0xb4
		mov    $0x100,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    0x50(%esp),%ecx
		mov    0x4c(%esp),%eax
		mov    $0x50,%edx
		shl    $0x3,%eax
		push   %ecx
		sub    %eax,%edx
		push   $0x2d
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		xor    %eax,%eax
		mov    data_197715(%ebp),%al
		shl    $0x4,%eax
		add    $0xc,%esp
		add    $data_52a00,%eax
		push   %eax
		push   $0x2d
		push   $0x8c
		call   func_2c6ab
		mov    data_197711(%ebp),%dl
		add    $0xc,%esp
		cmp    $0x1,%dl
		jne    jump_1cda2
		push   $data_512ff
		jmp    jump_1cda7
	jump_1cda2:
		push   $data_51306
	jump_1cda7:
		push   $0x2d
		push   $0x104
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x44(%esp),%eax
		push   %eax
		mov    %esi,%eax
		add    $0x12,%eax
		movswl %ax,%edx
		push   %edx
		push   $0x8c
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x1c(%esp),%eax
		push   %eax
		push   %edx
		push   $0xdc
		mov    $0xff,%ebx
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x4,%eax
		mov    $0x97,%ecx
		call   func_2c1c9
		mov    data_15b9cc,%esi
		mov    $0xa1,%eax
		push   %esi
		mov    $0x86,%edx
		mov    $0xd2,%ebx
		call   func_1843d
		mov    $0xd8,%eax
		mov    data_15b9cc,%edi
		mov    $0x86,%edx
		push   %edi
		mov    $0x10b,%ebx
		mov    $0x97,%ecx
		call   func_1843d
		push   $data_51220
		push   $0x64
		push   $0x50
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_5130b
		push   $0x88
		push   $0x22
		call   func_2c6ab
		mov    $0x4,%eax
		add    $0xc,%esp
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x4,%ebp
	jump_1ce89:
		lea    0x2c(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x2c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%eax
		cmp    $0xa1,%eax
		jle    jump_1cf5e
		cmp    $0xd2,%eax
		jge    jump_1cf5e
		mov    data_7cf28,%ebx
		cmp    $0x86,%ebx
		jle    jump_1cf5e
		cmp    $0x97,%ebx
		jge    jump_1cf5e
		test   %cx,%cx
		je     jump_1cee3
		cmp    $0x3e7,%cx
		jne    jump_1cf4c
	jump_1cee3:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x1,%ecx
	jump_1cf42:
		call   func_2b470
		call   func_19b67
	jump_1cf4c:
		cmpl   $0x1,data_7cf20
		je     jump_1d05f
		jmp    jump_1ce89
	jump_1cf5e:
		mov    data_7cf24,%edi
		cmp    $0xd8,%edi
		jle    jump_1d004
		cmp    $0x10b,%edi
		jge    jump_1d004
		mov    data_7cf28,%edx
		cmp    $0x86,%edx
		jle    jump_1d004
		cmp    $0x97,%edx
		jge    jump_1d004
		cmp    $0x1,%cx
		je     jump_1cfa3
		cmp    $0x3e7,%cx
		jne    jump_1cf4c
	jump_1cfa3:
		call   func_19ba9
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a5
		push   $0x88
		push   $0xda
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    %ebp,%eax
		call   func_2c1c9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		xor    %ecx,%ecx
		jmp    jump_1cf42
	jump_1d004:
		cmp    $0x1,%cx
		je     jump_1d013
		test   %cx,%cx
		jne    jump_1ce89
	jump_1d013:
		call   func_19ba9
		push   $data_511a2
		push   $0x88
		push   $0xb2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_511a5
		push   $0x88
		push   $0xda
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x3e7,%ecx
		call   func_2b470
		call   func_19b67
		jmp    jump_1ce89
	jump_1d05f:
		call   func_19ba9
		cmp    $0x1,%cx
		jne    jump_1d125
		lea    0x1c(%esp),%eax
		call   func_3b155
		mov    data_19ff44,%edx
		sub    %eax,%edx
		test   %edx,%edx
		jl     jump_1d11b
		lea    0x1c(%esp),%eax
		mov    $0xff,%ebx
		call   func_3b155
		neg    %eax
		xor    %edx,%edx
		call   func_35109
		mov    $data_f3370,%eax
		call   func_201cf
	jump_1d0a8:
		mov    $data_f3370,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_1d0c9
		call   func_2b206
		jmp    jump_1d0a8
	jump_1d0c9:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		xor    %edx,%edx
		mov    data_15b9cc,%eax
		mov    (%esp),%dx
		call   func_2b44f
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_197713(%eax),%al
		and    $0xff,%eax
		mov    $0x1,%dh
		call   func_22a53
		call   func_1199e
		mov    $0x1,%eax
		mov    %dh,data_54041
		jmp    jump_1d127
	jump_1d11b:
		mov    $data_511ac,%eax
		call   func_34fbe
	jump_1d125:
		xor    %eax,%eax
	jump_1d127:
		add    $0x58,%esp
		jmp    jump_1b33e


/*----------------------------------------------------------------*/
func_1d12f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x6c,%esp
		mov    %eax,%edi
		mov    %dl,0x64(%esp)
		mov    $0xffffffff,%edx
		mov    $0x18,%ebx
		mov    %dx,0x3c(%esp)
		mov    data_7cf24,%edx
		xor    %ah,%ah
		add    $0x9,%edx
		mov    %ah,0x68(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_56bfa,%edx
		xor    %ecx,%ecx
		sar    $0x10,%edx
		xor    %esi,%esi
		add    %edx,%eax
		xor    %ebp,%ebp
		mov    %ax,0x1c(%esp)
		mov    data_7cf28,%eax
		mov    data_56bf6,%bx
		sar    $0x4,%eax
		test   %bx,%bx
		jle    jump_1d19a
		mov    data_56bf8,%edx
		sar    $0x10,%edx
		add    %edx,%eax
		dec    %eax
		jmp    jump_1d1a5
	jump_1d19a:
		mov    data_56bf8,%edx
		sar    $0x10,%edx
		add    %edx,%eax
	jump_1d1a5:
		mov    %eax,%edx
		cmpl   $0x1,data_7cf20
		jne    jump_1d23c
		cmpb   $0x0,data_15ba22
		jne    jump_1d23c
		movswl %dx,%eax
		mov    %eax,0x8(%esp)
		mov    data_15ba1e,%eax
		mov    0x8(%esp),%ebx
		sar    $0x10,%eax
		imul   %ebx,%eax
		mov    data_15b9b8,%ebx
		add    %eax,%eax
		add    %eax,%ebx
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		add    %eax,%eax
		add    %ebx,%eax
		mov    (%eax),%bx
		test   %bx,%bx
		jbe    jump_1d201
		mov    %bx,%ax
		and    $0xffff,%eax
		call   func_1b344
	jump_1d201:
		mov    data_15ba1e,%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9bc,%ebx
		add    %eax,%eax
		add    %eax,%ebx
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		mov    %ebx,(%esp)
		lea    (%eax,%eax,1),%ebx
		mov    %ebx,0x4(%esp)
		mov    (%esp),%ebx
		add    0x4(%esp),%ebx
		cmpw   $0x0,(%ebx)
		jbe    jump_1d23c
		call   func_1b082
	jump_1d23c:
		mov    0x3a(%esp),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jne    jump_1e463
		mov    data_15ba16,%ax
		sub    data_56bfc,%ax
		imul   $0x18,%eax,%eax
		mov    data_56bf8,%bx
		mov    data_15ba18,%dx
		add    %ebx,%eax
		sub    data_56bfa,%dx
		mov    data_56bf6,%bx
		shl    $0x4,%edx
		add    $0x5,%eax
		add    %ebx,%edx
		mov    data_544ce,%bh
		sub    $0x10,%edx
		test   %bh,%bh
		jbe    jump_1da1c
		mov    data_82949,%bl
		cmp    $0x4b,%bl
		jb     jump_1d2c3
		jbe    jump_1d642
		cmp    $0x4d,%bl
		jb     jump_1e054
		jbe    jump_1d82e
		cmp    $0x50,%bl
		je     jump_1d487
		jmp    jump_1e054
	jump_1d2c3:
		cmp    $0x48,%bl
		jne    jump_1e054
		mov    data_f30b8,%ax
		cmp    $0x2,%ax
		jb     jump_1d442
		jbe    jump_1d39b
		cmp    $0x4,%ax
		jne    jump_1d442
		mov    data_15ba1a,%ax
		test   %ax,%ax
		jne    jump_1d305
		mov    %bh,%al
		shl    $0x2,%eax
		sub    %eax,%edx
		mov    %dx,data_82947
	jump_1d305:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x4,%al
		jne    jump_1d377
		mov    $0x1,%dl
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %dl,0x68(%esp)
		mov    data_15ba18,%dx
		mov    %ah,data_544ce
		dec    %edx
		xor    %eax,%eax
		mov    %dx,data_15ba18
		xor    %edx,%edx
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d377
		cmp    $0xff,%al
		je     jump_1d377
		and    $0xff,%eax
		xor    %ebx,%ebx
		dec    %eax
		xor    %dh,%dh
		call   func_20eb0
		mov    %bx,data_f30be
		mov    %bx,data_f30bc
		mov    %dh,data_544ce
		mov    %bx,data_15ba1a
	jump_1d377:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x2,%al
		jne    jump_1d442
		xor    %bl,%bl
		mov    %bl,data_f30c0
		jmp    jump_1d44f
	jump_1d39b:
		cmpw   $0x0,data_15ba1a
		jne    jump_1d3b4
		xor    %eax,%eax
		mov    %bh,%al
		add    %eax,%eax
		sub    %eax,%edx
		mov    %dx,data_82947
	jump_1d3b4:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x8,%al
		jne    jump_1d426
		mov    $0x1,%cl
		mov    data_15ba18,%ax
		xor    %bh,%bh
		xor    %edx,%edx
		dec    %eax
		mov    %bh,data_544ce
		mov    %ax,data_15ba18
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %cl,0x68(%esp)
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d426
		cmp    $0xff,%al
		je     jump_1d426
		and    $0xff,%eax
		xor    %edx,%edx
		xor    %ch,%ch
		dec    %eax
		xor    %cl,%cl
		call   func_20eb0
		mov    %dx,data_f30be
		mov    %dx,data_f30bc
		mov    %ch,data_544ce
		mov    %cx,data_15ba1a
	jump_1d426:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x4,%al
		jne    jump_1d442
		xor    %al,%al
		mov    %al,data_f30c0
		jmp    jump_1d44f
	jump_1d442:
		cmpb   $0x0,data_f30c0
		jne    jump_1e054
	jump_1d44f:
		mov    data_82943,%ax
		xor    %edx,%edx
		mov    %ax,%dx
		inc    %eax
		mov    %ax,data_82943
		mov    data_f30a0,%eax
		add    $0xf,%eax
		cmp    %eax,%edx
		jl     jump_1e054
		mov    data_f30a0,%ax
		add    $0xc,%eax
	jump_1d47c:
		mov    %ax,data_82943
		jmp    jump_1e054
	jump_1d487:
		mov    data_f30b8,%ax
		cmp    $0x2,%ax
		jb     jump_1d605
		jbe    jump_1d55a
		cmp    $0x4,%ax
		jne    jump_1d605
		cmpw   $0x0,data_15ba1a
		jne    jump_1d4c4
		xor    %eax,%eax
		mov    data_544ce,%al
		shl    $0x2,%eax
		add    %eax,%edx
		mov    %dx,data_82947
	jump_1d4c4:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x4,%al
		jne    jump_1d536
		mov    $0x1,%ch
		xor    %cl,%cl
		xor    %eax,%eax
		mov    %cl,data_544ce
		mov    %ch,0x68(%esp)
		mov    data_15ba18,%cx
		xor    %edx,%edx
		inc    %ecx
		xor    %ebx,%ebx
		mov    %cx,data_15ba18
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d536
		cmp    $0xff,%al
		je     jump_1d536
		and    $0xff,%eax
		dec    %eax
		xor    %esi,%esi
		call   func_20eb0
		mov    %si,data_f30be
		mov    %si,data_f30bc
		xor    %al,%al
		xor    %ah,%ah
		mov    %al,data_544ce
		mov    %ax,data_15ba1a
	jump_1d536:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x2,%al
		jne    jump_1d605
		xor    %ah,%ah
		mov    %ah,data_f30c0
		jmp    jump_1d612
	jump_1d55a:
		cmpw   $0x0,data_15ba1a
		jne    jump_1d576
		xor    %eax,%eax
		mov    data_544ce,%al
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,data_82947
	jump_1d576:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x8,%al
		jne    jump_1d5e8
		mov    $0x1,%dh
		mov    data_15ba18,%cx
		xor    %dl,%dl
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    %dl,data_544ce
		mov    %dh,0x68(%esp)
		inc    %ecx
		xor    %edx,%edx
		mov    %cx,data_15ba18
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d5e8
		cmp    $0xff,%al
		je     jump_1d5e8
		and    $0xff,%eax
		xor    %esi,%esi
		dec    %eax
		xor    %bl,%bl
		call   func_20eb0
		mov    %si,data_f30be
		mov    %si,data_f30bc
		mov    %bl,data_544ce
		mov    %si,data_15ba1a
	jump_1d5e8:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x4,%al
		jne    jump_1d605
		xor    %bh,%bh
		mov    %bh,data_f30c0
		jmp    jump_1d612
	jump_1d605:
		cmpb   $0x0,data_f30c0
		jne    jump_1e054
	jump_1d612:
		mov    data_82943,%dx
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		add    $0x3,%edx
		cmp    %edx,%eax
		jl     jump_1e054
		mov    data_f30a0,%ax
		jmp    jump_1d47c
	jump_1d642:
		mov    data_f30ba,%dx
		cmp    $0x3,%dx
		jb     jump_1d7ef
		jbe    jump_1d72c
		cmp    $0x6,%dx
		jne    jump_1d7ef
		mov    data_15ba1c,%dx
		test   %dx,%dx
		jne    jump_1d67c
		mov    %bh,%dl
		imul   $0x6,%edx,%edx
		sub    %edx,%eax
		mov    %ax,data_82945
	jump_1d67c:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x4,%al
		jne    jump_1d708
		mov    $0x1,%ah
		mov    data_15ba16,%bx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,data_544ce
		dec    %ebx
		mov    %ah,0x68(%esp)
		mov    %bx,data_15ba16
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d6f3
		cmp    $0xff,%al
		je     jump_1d6f3
		and    $0xff,%eax
		xor    %ecx,%ecx
		xor    %dl,%dl
		dec    %eax
		xor    %edi,%edi
		call   func_20eb0
		mov    %cx,data_f30be
		mov    %cx,data_f30bc
		mov    %dl,data_544ce
		mov    %di,data_15ba1a
	jump_1d6f3:
		call   func_1a785
		cmp    $0xfe,%ax
		jne    jump_1d708
		mov    $data_51256,%eax
		call   func_18fd0
	jump_1d708:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x2,%al
		jne    jump_1d7ef
		xor    %dh,%dh
		mov    %dh,data_f30c0
		jmp    jump_1d7fc
	jump_1d72c:
		mov    data_15ba1c,%dx
		test   %dx,%dx
		jne    jump_1d745
		mov    %bh,%dl
		imul   $0x3,%edx,%edx
		sub    %edx,%eax
		mov    %ax,data_82945
	jump_1d745:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x8,%al
		jne    jump_1d7d2
		xor    %bl,%bl
		mov    $0x1,%bh
		mov    %bl,data_544ce
		mov    %bh,0x68(%esp)
		mov    data_15ba16,%bx
		xor    %eax,%eax
		dec    %ebx
		xor    %edx,%edx
		mov    %bx,data_15ba16
		xor    %ebx,%ebx
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d7bd
		cmp    $0xff,%al
		je     jump_1d7bd
		and    $0xff,%eax
		xor    %ecx,%ecx
		dec    %eax
		xor    %edi,%edi
		call   func_20eb0
		mov    %cx,data_f30be
		mov    %cx,data_f30bc
		xor    %cl,%cl
		mov    %di,data_15ba1a
		mov    %cl,data_544ce
	jump_1d7bd:
		call   func_1a785
		cmp    $0xfe,%ax
		jne    jump_1d7d2
		mov    $data_51256,%eax
		call   func_18fd0
	jump_1d7d2:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x4,%al
		jne    jump_1d7ef
		xor    %ch,%ch
		mov    %ch,data_f30c0
		jmp    jump_1d7fc
	jump_1d7ef:
		cmpb   $0x0,data_f30c0
		jne    jump_1e054
	jump_1d7fc:
		mov    data_82943,%ax
		xor    %edx,%edx
		mov    %ax,%dx
		inc    %eax
		mov    %ax,data_82943
		mov    data_f30a0,%eax
		add    $0x7,%eax
		cmp    %eax,%edx
		jl     jump_1e054
		mov    data_f30a0,%ax
		add    $0x4,%eax
		jmp    jump_1d47c
	jump_1d82e:
		mov    data_f30ba,%dx
		cmp    $0x3,%dx
		jb     jump_1d9da
		jbe    jump_1d919
		cmp    $0x6,%dx
		jne    jump_1d9da
		mov    data_15ba1c,%dx
		test   %dx,%dx
		jne    jump_1d868
		mov    %bh,%dl
		imul   $0x6,%edx,%edx
		add    %edx,%eax
		mov    %ax,data_82945
	jump_1d868:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x4,%al
		jne    jump_1d8f5
		mov    $0x1,%al
		mov    data_15ba16,%bx
		xor    %ch,%ch
		xor    %edx,%edx
		inc    %ebx
		mov    %al,0x68(%esp)
		mov    %bx,data_15ba16
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    %ch,data_544ce
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d8e0
		cmp    $0xff,%al
		je     jump_1d8e0
		and    $0xff,%eax
		xor    %cl,%cl
		dec    %eax
		xor    %esi,%esi
		call   func_20eb0
		mov    %cx,data_f30be
		mov    %si,data_f30bc
		xor    %ah,%ah
		mov    %si,data_15ba1a
		mov    %ah,data_544ce
	jump_1d8e0:
		call   func_1a785
		cmp    $0xfe,%ax
		jne    jump_1d8f5
		mov    $data_51256,%eax
		call   func_18fd0
	jump_1d8f5:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x2,%al
		jne    jump_1d9da
		xor    %dl,%dl
		mov    %dl,data_f30c0
		jmp    jump_1d9e7
	jump_1d919:
		mov    data_15ba1c,%dx
		test   %dx,%dx
		jne    jump_1d932
		mov    %bh,%dl
		imul   $0x3,%edx,%edx
		add    %edx,%eax
		mov    %ax,data_82945
	jump_1d932:
		mov    data_544ce,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544ce
		cmp    $0x8,%al
		jne    jump_1d9bd
		mov    $0x1,%bl
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %bl,0x68(%esp)
		mov    data_15ba16,%bx
		mov    %dh,data_544ce
		inc    %ebx
		xor    %edx,%edx
		mov    %bx,data_15ba16
		xor    %ebx,%ebx
		call   func_1ebc2
		call   func_1a785
		test   %al,%al
		je     jump_1d9a8
		cmp    $0xff,%al
		je     jump_1d9a8
		and    $0xff,%eax
		xor    %ecx,%ecx
		dec    %eax
		xor    %bh,%bh
		call   func_20eb0
		mov    %cx,data_f30be
		mov    %cx,data_f30bc
		mov    %bh,data_544ce
		mov    %cx,data_15ba1a
	jump_1d9a8:
		call   func_1a785
		cmp    $0xfe,%ax
		jne    jump_1d9bd
		mov    $data_51256,%eax
		call   func_18fd0
	jump_1d9bd:
		mov    data_f30c0,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_f30c0
		cmp    $0x4,%al
		jne    jump_1d9da
		xor    %cl,%cl
		mov    %cl,data_f30c0
		jmp    jump_1d9e7
	jump_1d9da:
		cmpb   $0x0,data_f30c0
		jne    jump_1e054
	jump_1d9e7:
		mov    data_82943,%dx
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		add    $0xb,%edx
		cmp    %edx,%eax
		jl     jump_1e054
		mov    data_f30a0,%ax
		add    $0x8,%eax
		jmp    jump_1d47c
	jump_1da1c:
		mov    0x64(%esp),%bl
		cmp    $0x1,%bl
		jne    jump_1e054
		mov    %ax,data_82945
		xor    %eax,%eax
		mov    %dx,data_82947
		mov    %ax,data_15ba1a
		mov    %ax,data_15ba1c
		mov    %bl,(%edi)
		cmp    game_cfg_speed,%bl
		jne    jump_1da67
		mov    $0x6,%eax
		mov    $0x4,%edx
		mov    %ax,data_f30ba
		mov    %dx,data_f30b8
		jmp    jump_1da7f
	jump_1da67:
		mov    $0x3,%ebx
		mov    $0x2,%edi
		mov    %bx,data_f30ba
		mov    %di,data_f30b8
	jump_1da7f:
		call   func_2e1a4
		cmpl   $0x0,data_1a0220
		jne    jump_1da96
		cmp    $0x4b,%eax
		jne    jump_1dbe1
	jump_1da96:
		mov    $0x4b,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dac0
		cmpl   $0x0,data_1a0220
		je     jump_1daca
	jump_1dac0:
		mov    $0x4b,%ebp
		jmp    jump_1dfe1
	jump_1daca:
		mov    data_15ba16,%ax
		mov    %ax,0x38(%esp)
		mov    data_15ba18,%ax
		mov    %ax,0x28(%esp)
		mov    0x38(%esp),%eax
		inc    %eax
		mov    %ax,0x58(%esp)
	jump_1daea:
		mov    0x26(%esp),%edi
		mov    0x36(%esp),%eax
		mov    $0x4b,%ebx
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1db46
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		test   %edi,%edi
		jl     jump_1db46
		mov    0x28(%esp),%ebx
		dec    %ebx
		mov    0x56(%esp),%eax
		mov    %bx,0x28(%esp)
		sar    $0x10,%eax
		mov    0x26(%esp),%edx
		mov    $0x4b,%ebx
		sar    $0x10,%edx
		inc    %ecx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1daea
		mov    $0x3e7,%ecx
	jump_1db46:
		mov    data_15ba18,%ax
		mov    %ax,0xc(%esp)
		mov    0x38(%esp),%eax
		inc    %eax
		mov    %ax,0x50(%esp)
	jump_1db5b:
		mov    0xa(%esp),%edi
		mov    0x36(%esp),%eax
		mov    $0x4b,%ebx
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dbb8
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		cmp    $0xd,%edi
		jge    jump_1dbb8
		mov    0xc(%esp),%edi
		inc    %edi
		mov    0x4e(%esp),%eax
		mov    %di,0xc(%esp)
		mov    $0x4b,%ebx
		mov    0xa(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %esi
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1db5b
		mov    $0x3e7,%esi
	jump_1dbb8:
		cmp    $0x3e7,%cx
		jne    jump_1dbc8
		cmp    %cx,%si
		je     jump_1dfe1
	jump_1dbc8:
		cmp    %cx,%si
		jl     jump_1dbd7
	jump_1dbcd:
		mov    $0x48,%ebp
		jmp    jump_1dfe1
	jump_1dbd7:
		mov    $0x50,%ebp
		jmp    jump_1dfe1
	jump_1dbe1:
		cmpl   $0x0,data_1a0228
		jne    jump_1dbf3
		cmp    $0x4d,%eax
		jne    jump_1dd2e
	jump_1dbf3:
		mov    $0x4d,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dc1d
		cmpl   $0x0,data_1a0228
		je     jump_1dc27
	jump_1dc1d:
		mov    $0x4d,%ebp
		jmp    jump_1dfe1
	jump_1dc27:
		mov    data_15ba16,%ax
		mov    %ax,0x5c(%esp)
		mov    data_15ba18,%ax
		mov    %ax,0x10(%esp)
		mov    0x5c(%esp),%eax
		dec    %eax
		mov    %ax,0x34(%esp)
	jump_1dc47:
		mov    0xe(%esp),%edi
		mov    0x5a(%esp),%eax
		mov    $0x4d,%ebx
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dc9e
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		test   %edi,%edi
		jl     jump_1dc9e
		decw   0x10(%esp)
		mov    $0x4d,%ebx
		mov    0xe(%esp),%edx
		mov    0x32(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dc47
		mov    $0x3e7,%ecx
	jump_1dc9e:
		mov    data_15ba18,%ax
		mov    %ax,0x60(%esp)
		mov    0x5c(%esp),%eax
		dec    %eax
		mov    %ax,0x18(%esp)
	jump_1dcb3:
		mov    0x5e(%esp),%edi
		mov    0x5a(%esp),%eax
		mov    $0x4d,%ebx
		sar    $0x10,%edi
		sar    $0x10,%eax
		mov    %edi,%edx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dd10
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		cmp    $0xd,%edi
		jge    jump_1dd10
		mov    0x60(%esp),%edx
		inc    %edx
		mov    0x16(%esp),%eax
		mov    %dx,0x60(%esp)
		mov    $0x4d,%ebx
		mov    0x5e(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		inc    %esi
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dcb3
		mov    $0x3e7,%esi
	jump_1dd10:
		cmp    $0x3e7,%cx
		jne    jump_1dd20
		cmp    %cx,%si
		je     jump_1dfe1
	jump_1dd20:
		cmp    %cx,%si
		jge    jump_1dbcd
		jmp    jump_1dbd7
	jump_1dd2e:
		cmpl   $0x0,data_1a0214
		jne    jump_1dd40
		cmp    $0x48,%eax
		jne    jump_1de7a
	jump_1dd40:
		mov    $0x48,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dbcd
		cmpl   $0x0,data_1a0214
		jne    jump_1dbcd
		mov    data_15ba16,%ax
		mov    %ax,0x24(%esp)
		mov    data_15ba18,%ax
		mov    %ax,0x44(%esp)
		inc    %eax
		mov    %ax,0x14(%esp)
	jump_1dd8e:
		mov    0x42(%esp),%edx
		mov    0x22(%esp),%edi
		mov    $0x48,%ebx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1ddea
		mov    data_56bfa,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		test   %edi,%edi
		jl     jump_1ddea
		mov    0x24(%esp),%ebx
		dec    %ebx
		mov    0x12(%esp),%edx
		mov    %bx,0x24(%esp)
		sar    $0x10,%edx
		mov    0x22(%esp),%eax
		mov    $0x48,%ebx
		sar    $0x10,%eax
		inc    %ecx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dd8e
		mov    $0x3e7,%ecx
	jump_1ddea:
		mov    data_15ba16,%ax
		mov    %ax,0x4c(%esp)
		mov    0x44(%esp),%eax
		inc    %eax
		mov    %ax,0x48(%esp)
	jump_1ddff:
		mov    0x42(%esp),%edx
		mov    0x4a(%esp),%edi
		mov    $0x48,%ebx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1de5c
		mov    data_56bfa,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		cmp    $0xe,%edi
		jge    jump_1de5c
		mov    0x4c(%esp),%edi
		inc    %edi
		mov    0x46(%esp),%edx
		mov    %di,0x4c(%esp)
		mov    $0x48,%ebx
		mov    0x4a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1ddff
		mov    $0x3e7,%esi
	jump_1de5c:
		cmp    $0x3e7,%cx
		jne    jump_1de6c
		cmp    %cx,%si
		je     jump_1dfe1
	jump_1de6c:
		cmp    %cx,%si
		jge    jump_1dac0
		jmp    jump_1dc1d
	jump_1de7a:
		mov    data_1a0234,%edi
		test   %edi,%edi
		jne    jump_1de8d
		cmp    $0x50,%eax
		jne    jump_1dfc3
	jump_1de8d:
		mov    $0x50,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dbd7
		cmpl   $0x0,data_1a0234
		jne    jump_1dbd7
		mov    data_15ba16,%ax
		mov    %ax,0x2c(%esp)
		mov    data_15ba18,%ax
		mov    %ax,0x40(%esp)
		inc    %eax
		mov    %ax,0x54(%esp)
	jump_1dedb:
		mov    0x3e(%esp),%edx
		mov    0x2a(%esp),%edi
		mov    $0x50,%ebx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1df37
		mov    data_56bfa,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		test   %edi,%edi
		jl     jump_1df37
		mov    0x2c(%esp),%eax
		dec    %eax
		mov    0x52(%esp),%edx
		mov    %ax,0x2c(%esp)
		mov    $0x50,%ebx
		mov    0x2a(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %ecx
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dedb
		mov    $0x3e7,%ecx
	jump_1df37:
		mov    data_15ba16,%ax
		mov    %ax,0x20(%esp)
		mov    0x40(%esp),%eax
		inc    %eax
		mov    %ax,0x30(%esp)
	jump_1df4c:
		mov    0x3e(%esp),%edx
		mov    0x1e(%esp),%edi
		mov    $0x50,%ebx
		sar    $0x10,%edi
		sar    $0x10,%edx
		mov    %edi,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1dfa9
		mov    data_56bfa,%eax
		sar    $0x10,%eax
		sub    %eax,%edi
		cmp    $0xe,%edi
		jge    jump_1dfa9
		mov    0x20(%esp),%edx
		inc    %edx
		mov    $0x50,%ebx
		mov    %dx,0x20(%esp)
		mov    0x2e(%esp),%edx
		mov    0x1e(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		inc    %esi
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1df4c
		mov    $0x3e7,%esi
	jump_1dfa9:
		cmp    $0x3e7,%cx
		jne    jump_1dfb5
		cmp    %cx,%si
		je     jump_1dfe1
	jump_1dfb5:
		cmp    %si,%cx
		jge    jump_1dc1d
		jmp    jump_1dac0
	jump_1dfc3:
		mov    data_82943,%di
		mov    $0x4,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		sub    %edx,%edi
		mov    %di,data_82943
	jump_1dfe1:
		cmpb   $0x1,data_54041
		je     jump_1e054
		mov    data_f30ba,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b4,%edx
		add    %edx,%eax
		mov    data_f30bc,%edx
		sar    $0x10,%edx
		movb   $0x0,(%edx,%eax,1)
		mov    data_15ba16,%ax
		mov    %ax,data_f30be
		mov    data_15ba18,%ax
		mov    %ax,data_f30bc
		mov    data_f30ba,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b4,%edx
		add    %edx,%eax
		mov    data_f30bc,%edx
		sar    $0x10,%edx
		movb   $0xff,(%edx,%eax,1)
	jump_1e054:
		cmp    $0x4b,%ebp
		jb     jump_1e078
		jbe    jump_1e086
		cmp    $0x4d,%ebp
		jb     jump_1e463
		jbe    jump_1e184
		cmp    $0x50,%ebp
		je     jump_1e38e
		jmp    jump_1e463
	jump_1e078:
		cmp    $0x48,%ebp
		je     jump_1e291
		jmp    jump_1e463
	jump_1e086:
		mov    $0x4b,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		je     jump_1e166
		mov    data_15ba14,%edx
		mov    data_56bfa,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		cmp    $0x6,%edx
		jg     jump_1e0d9
		cmpw   $0x0,data_56bfc
		jl     jump_1e0d9
		mov    data_f30ba,%ax
		mov    %ax,data_15ba1c
	jump_1e0d9:
		cmpb   $0x4b,data_82949
		je     jump_1e0f3
		mov    data_f30a0,%ax
		add    $0x4,%eax
		mov    %ax,data_82943
	jump_1e0f3:
		mov    $0x4b,%ah
		mov    $0x1,%dl
		mov    data_f30a0,%bx
		xor    %dh,%dh
		mov    %ah,data_82949
		mov    %dl,data_544ce
		mov    %dh,data_f30c0
		xor    %edx,%edx
		mov    data_f30a0,%eax
		mov    data_82943,%dx
		add    $0x4,%eax
		add    $0x4,%ebx
		cmp    %eax,%edx
		jl     jump_1e144
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		add    $0x7,%edx
		cmp    %edx,%eax
		jne    jump_1e14b
	jump_1e144:
		mov    %bx,data_82943
	jump_1e14b:
		mov    $0xff,%ebx
		mov    data_15ba16,%ax
		mov    data_15ba16,%edx
		dec    %eax
	jump_1e15d:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1e36c
	jump_1e166:
		mov    data_f30a0,%ax
		mov    $0x4b,%ch
		add    $0x4,%eax
		mov    %ch,data_82949
	jump_1e179:
		mov    %ax,data_82943
		jmp    jump_1e463
	jump_1e184:
		mov    $0x4d,%ebx
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		je     jump_1e274
		mov    data_15ba14,%edx
		mov    data_56bfa,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		cmp    $0x6,%edx
		jl     jump_1e1e5
		mov    data_15ba1e,%edx
		add    $0xd,%eax
		sar    $0x10,%edx
		cmp    %edx,%eax
		jge    jump_1e1e5
		mov    data_f30ba,%ax
		mov    %ax,data_15ba1c
		neg    %eax
		mov    %ax,data_15ba1c
	jump_1e1e5:
		cmpb   $0x4d,data_82949
		je     jump_1e1ff
		mov    data_f30a0,%ax
		add    $0x8,%eax
		mov    %ax,data_82943
	jump_1e1ff:
		cmpb   $0x0,0x68(%esp)
		jne    jump_1e20d
		movb   $0x4d,data_82949
	jump_1e20d:
		mov    $0x1,%bh
		mov    data_f30a0,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		mov    data_82943,%dx
		mov    %bh,data_544ce
		mov    %cl,data_f30c0
		mov    data_f30a0,%bx
		add    $0x8,%eax
		add    $0x8,%ebx
		cmp    %eax,%edx
		jl     jump_1e256
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		add    $0xb,%edx
		cmp    %edx,%eax
		jne    jump_1e25d
	jump_1e256:
		mov    %bx,data_82943
	jump_1e25d:
		mov    $0xff,%ebx
		mov    data_15ba16,%ax
		mov    data_15ba16,%edx
		inc    %eax
		jmp    jump_1e15d
	jump_1e274:
		mov    data_f30a0,%ax
		add    $0x8,%eax
		mov    %ax,data_82943
		movb   $0x4d,data_82949
		jmp    jump_1e463
	jump_1e291:
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		je     jump_1e376
		mov    data_15ba16,%eax
		mov    data_56bf8,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		cmp    $0x7,%eax
		jg     jump_1e2ec
		cmpw   $0x0,data_56bfa
		jle    jump_1e2ec
		mov    data_f30b8,%ax
		mov    %eax,%ecx
		mov    %ax,data_15ba1a
		neg    %ecx
		mov    %cx,data_15ba1a
	jump_1e2ec:
		cmpb   $0x48,data_82949
		je     jump_1e306
		mov    data_f30a0,%ax
		add    $0xc,%eax
		mov    %ax,data_82943
	jump_1e306:
		cmpb   $0x0,0x68(%esp)
		jne    jump_1e314
		movb   $0x48,data_82949
	jump_1e314:
		mov    $0x1,%al
		mov    data_82943,%dx
		xor    %ah,%ah
		mov    %al,data_544ce
		mov    %ah,data_f30c0
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		add    $0xf,%edx
		cmp    %edx,%eax
		jl     jump_1e355
		mov    data_f30a0,%ax
		add    $0xc,%eax
		mov    %ax,data_82943
	jump_1e355:
		mov    data_15ba18,%ax
		dec    %eax
	jump_1e35c:
		movswl %ax,%edx
		mov    data_15ba14,%eax
		mov    $0xff,%ebx
		sar    $0x10,%eax
	jump_1e36c:
		call   func_1ebc2
		jmp    jump_1e463
	jump_1e376:
		mov    data_f30a0,%ax
		mov    $0x48,%bl
		add    $0xc,%eax
		mov    %bl,data_82949
		jmp    jump_1e179
	jump_1e38e:
		mov    data_15ba16,%edx
		mov    data_15ba14,%eax
		mov    %ebp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		je     jump_1e44f
		mov    data_15ba16,%edx
		mov    data_56bf8,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		cmp    $0x7,%edx
		jl     jump_1e3e4
		mov    data_15ba1c,%edx
		add    $0xe,%eax
		sar    $0x10,%edx
		cmp    %edx,%eax
		jge    jump_1e3e4
		mov    data_f30b8,%ax
		mov    %ax,data_15ba1a
	jump_1e3e4:
		cmpb   $0x50,data_82949
		je     jump_1e3f9
		mov    data_f30a0,%ax
		mov    %ax,data_82943
	jump_1e3f9:
		cmpb   $0x0,0x68(%esp)
		jne    jump_1e407
		movb   $0x50,data_82949
	jump_1e407:
		xor    %al,%al
		mov    data_82943,%dx
		mov    %al,data_f30c0
		xor    %eax,%eax
		mov    %dx,%ax
		inc    %edx
		mov    %dx,data_82943
		mov    data_f30a0,%edx
		mov    $0x1,%ch
		add    $0x3,%edx
		mov    %ch,data_544ce
		cmp    %edx,%eax
		jl     jump_1e443
		mov    data_f30a0,%ax
		mov    %ax,data_82943
	jump_1e443:
		mov    data_15ba18,%ax
		inc    %eax
		jmp    jump_1e35c
	jump_1e44f:
		mov    data_f30a0,%ax
		mov    $0x50,%dh
		mov    %ax,data_82943
		mov    %dh,data_82949
	jump_1e463:
		mov    $0x1,%esi
		mov    data_543cc,%di
		mov    data_543ca,%eax
		add    %esi,%edi
		sar    $0x10,%eax
		mov    %di,data_543cc
		mov    %si,data_83d84(,%eax,2)
		mov    0x3c(%esp),%eax
		add    $0x6c,%esp
		jmp    jump_1b33e

vtable_1e494:
		.long   func_1e70e
		.long   func_1e71f
		.long   func_1e730
		.long   func_1e741

vtable_1e4a4:
		.long   func_1e861
		.long   func_1e872
		.long   func_1e883
		.long   func_1e894


/*----------------------------------------------------------------*/
func_1e4b4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x30,%esp
		push   %eax
		push   %edx
		push   %ebx
		lea    0x1c(%esp),%edi
		mov    0x6(%esp),%eax
		mov    $data_1a6c8,%esi
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %eax,%ebx
		lea    0xc(%esp),%edi
		shl    $0x2,%ebx
		mov    $data_1a6d8,%esi
		sub    %eax,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		shl    $0x2,%ebx
		mov    data_82943,%si
		add    %eax,%ebx
		xor    %eax,%eax
		mov    data_f30a0,%dx
		mov    data_82943,%ax
		xor    %ecx,%ecx
		sub    %edx,%esi
		mov    data_921ae(,%eax,4),%eax
		mov    data_82936(%ebx),%cx
		mov    data_82945,%dx
		mov    0x4(%eax),%di
		mov    data_921ae(,%ecx,4),%ecx
		add    %edi,%edx
		mov    data_82947,%di
		mov    %dx,0x30(%esp)
		mov    0x6(%eax),%dx
		mov    data_82938(%ebx),%ax
		add    %edx,%edi
		mov    0x4(%ecx),%dx
		add    %edx,%eax
		mov    %ax,0x38(%esp)
		mov    0x6(%ecx),%dx
		mov    data_8293a(%ebx),%ax
		add    %edx,%eax
		mov    %ax,0x34(%esp)
		xor    %eax,%eax
		mov    (%ecx),%ax
		sar    %eax
		mov    %eax,0x2c(%esp)
		mov    data_8279c,%eax
		sar    $0x10,%eax
		mov    0x1a(%esp,%eax,2),%eax
		mov    data_7cf24,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    data_82936(%ebx),%eax
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    0x2c(%esp),%eax
		jge    jump_1e76d
		mov    data_8279c,%eax
		mov    data_7cf28,%ebp
		sar    $0x10,%eax
		mov    0x2(%ecx),%cx
		mov    0xa(%esp,%eax,2),%eax
		mov    data_82938(%ebx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %ebp,%eax
		and    $0xffff,%ecx
		sub    %edx,%eax
		sar    %ecx
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %ecx,%eax
		jge    jump_1e76d
		cmpl   $0x1,data_7cf20
		jne    jump_1e75e
		cmpb   $0x0,data_15ba22
		jne    jump_1e75e
		xor    %eax,%eax
		mov    data_82943,%ax
		mov    %eax,data_f309c
		mov    data_82943,%eax
		mov    data_7cf24,%edi
		sar    $0x10,%eax
		cmp    %edi,%eax
		jle    jump_1e620
		mov    data_f30a0,%ax
		add    $0x4,%eax
		mov    %ax,data_82943
	jump_1e620:
		mov    data_82943,%eax
		mov    data_7cf24,%ebp
		sar    $0x10,%eax
		cmp    %ebp,%eax
		jge    jump_1e643
		mov    data_f30a0,%ax
		add    $0x8,%eax
		mov    %ax,data_82943
	jump_1e643:
		mov    data_82945,%eax
		mov    data_7cf28,%edx
		sar    $0x10,%eax
		cmp    %edx,%eax
		jge    jump_1e67d
		mov    data_82943,%eax
		mov    data_7cf24,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x18,%eax
		jg     jump_1e67d
		mov    data_f30a0,%ax
		mov    %ax,data_82943
	jump_1e67d:
		mov    data_82945,%eax
		mov    data_7cf28,%ebx
		sar    $0x10,%eax
		cmp    %ebx,%eax
		jle    jump_1e6bc
		mov    data_82943,%eax
		mov    data_7cf24,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    $0x18,%eax
		jg     jump_1e6bc
		mov    data_f30a0,%ax
		add    $0xc,%eax
		mov    %ax,data_82943
	jump_1e6bc:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%ebx
		mov    data_f30a0,%edi
		shl    $0x2,%ebx
		mov    %eax,%ecx
		sub    %eax,%ebx
		xor    %eax,%ecx
		shl    $0x2,%ebx
		mov    data_82943,%cx
		add    %eax,%ebx
		sub    %edi,%ecx
		mov    data_82936(%ebx),%dx
		sar    $0x2,%ecx
		mov    %dx,data_19ff50(,%eax,2)
		cmp    $0x3,%ecx
		ja     jump_1e752
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		jmp    *vtable_1e494(,%ecx,4)


/*----------------------------------------------------------------*/
func_1e70e:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0xc,%eax
		jmp    jump_1e74b


/*----------------------------------------------------------------*/
func_1e71f:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0x8,%eax
		jmp    jump_1e74b


/*----------------------------------------------------------------*/
func_1e730:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0x4,%eax
		jmp    jump_1e74b


/*----------------------------------------------------------------*/
func_1e741:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
	jump_1e74b:
		mov    %ax,data_82936(%ebx)
	jump_1e752:
		movswl %si,%eax
		sar    $0x2,%eax
		inc    %eax
		jmp    jump_1e8b2
	jump_1e75e:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		sub    $0x2,%eax
		mov    %eax,data_544ca
	jump_1e76d:
		test   %si,%si
		jl     jump_1e77d
		cmp    $0x3,%si
		jg     jump_1e77d
		add    $0x10,%edi
		jmp    jump_1e7b4
	jump_1e77d:
		cmp    $0x4,%si
		jl     jump_1e791
		cmp    $0x7,%si
		jg     jump_1e791
		subw   $0x18,0x30(%esp)
		jmp    jump_1e7b4
	jump_1e791:
		cmp    $0x8,%si
		jl     jump_1e7a5
		cmp    $0xb,%si
		jg     jump_1e7a5
		addw   $0x18,0x30(%esp)
		jmp    jump_1e7b4
	jump_1e7a5:
		cmp    $0xc,%si
		jl     jump_1e7b4
		cmp    $0xf,%si
		jg     jump_1e7b4
		sub    $0x10,%edi
	jump_1e7b4:
		cmpl   $0x0,data_1a0168
		je     jump_1e8b0
		mov    0x2e(%esp),%edx
		mov    0x36(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    0x2(%esp),%ebx
		sub    %eax,%edx
		sar    $0x10,%ebx
		mov    %edx,%eax
		add    %ebx,%ebx
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %ebx,%eax
		jge    jump_1e8b0
		mov    0x32(%esp),%eax
		movswl %di,%edx
		sar    $0x10,%eax
		mov    -0x2(%esp),%ebx
		sub    %eax,%edx
		sar    $0x10,%ebx
		mov    %edx,%eax
		add    %ebx,%ebx
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %ebx,%eax
		jge    jump_1e8b0
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		shl    $0x2,%ebx
		add    %eax,%ebx
		mov    data_82936(%ebx),%dx
		mov    %dx,data_19ff50(,%eax,2)
		xor    %edx,%edx
		mov    data_f30a0,%ecx
		mov    data_82943,%dx
		sub    %ecx,%edx
		sar    $0x2,%edx
		cmp    $0x3,%edx
		ja     jump_1e8a5
		mov    %edx,%ecx
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%ecx
		shl    $0x3,%eax
		jmp    *vtable_1e4a4(%ecx)


/*----------------------------------------------------------------*/
func_1e861:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0xc,%eax
		jmp    jump_1e89e


/*----------------------------------------------------------------*/
func_1e872:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0x8,%eax
		jmp    jump_1e89e


/*----------------------------------------------------------------*/
func_1e883:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
		add    $0x4,%eax
		jmp    jump_1e89e


/*----------------------------------------------------------------*/
func_1e894:
/*----------------------------------------------------------------*/
		mov    data_19e161(%eax),%ax
		shl    $0x4,%eax
	jump_1e89e:
		mov    %ax,data_82936(%ebx)
	jump_1e8a5:
		movswl %si,%eax
		sar    $0x2,%eax
		add    $0x5,%eax
		jmp    jump_1e8b2
	jump_1e8b0:
		xor    %eax,%eax
	jump_1e8b2:
		add    $0x3c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1ead0:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x1,data_54041
		jne    jump_1eb02
		xor    %edx,%edx
	jump_1eadf:
		movswl %dx,%eax
		xor    %ebx,%ebx
		inc    %edx
		mov    %bx,data_f3215(,%eax,2)
		mov    %bx,data_f30c1(,%eax,2)
		cmp    $0xaa,%dx
		jge    jump_1ebbf
		jmp    jump_1eadf
	jump_1eb02:
		test   %cl,%cl
		je     jump_1eb6f
		xor    %eax,%eax
		mov    %bl,%al
		add    %eax,%eax
		mov    %si,data_f3215(%eax)
		mov    data_15ba1e,%si
		mov    %dx,data_f30c1(%eax)
		cmp    %si,%dx
		jge    jump_1ebbf
		mov    data_15ba20,%di
		cmp    data_f3215(%eax),%di
		jle    jump_1ebbf
		mov    %bl,%cl
		mov    data_f30bf(%eax),%edx
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_15b9b4,%ebx
		mov    data_f3213(%eax),%eax
		add    %ebx,%edx
		sar    $0x10,%eax
		add    $0x2,%cl
		mov    %cl,(%edx,%eax,1)
		pop    %edi
		pop    %esi
		ret
	jump_1eb6f:
		xor    %eax,%eax
		mov    %bl,%al
		add    %eax,%eax
		mov    data_15ba1e,%bx
		cmp    data_f30c1(%eax),%bx
		jle    jump_1ebbf
		mov    data_15ba20,%cx
		cmp    data_f3215(%eax),%cx
		jle    jump_1ebbf
		mov    data_f30bf(%eax),%edx
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_f3213(%eax),%eax
		mov    data_15b9b4,%ebx
		sar    $0x10,%eax
		add    %ebx,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_1ebbf:
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_1ebc2:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %bl,%cl
		cmpb   $0x1,data_54041
		jne    jump_1ebe0
		xor    %eax,%eax
		mov    %ax,data_f336b
		mov    %ax,data_f3369
		pop    %esi
		pop    %ecx
		ret
	jump_1ebe0:
		cmp    $0x1,%cl
		jne    jump_1ec25
		mov    data_15ba1e,%si
		mov    %ax,data_f336b
		mov    %dx,data_f3369
		cmp    %si,%dx
		jge    jump_1ec6b
		cmp    data_15ba20,%ax
		jge    jump_1ec6b
		movswl %dx,%ebx
		mov    data_15ba1e,%edx
		sar    $0x10,%edx
		imul   %ebx,%edx
		mov    data_15b9b4,%ebx
		cwtl
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		pop    %esi
		pop    %ecx
		ret
	jump_1ec25:
		mov    data_f3369,%ax
		cmp    data_15ba1e,%ax
		jge    jump_1ec6b
		mov    data_f336b,%ax
		cmp    data_15ba20,%ax
		jge    jump_1ec6b
		mov    data_f3367,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_15b9b4,%edx
		add    %eax,%edx
		mov    data_f3369,%eax
		sar    $0x10,%eax
		movb   $0x0,(%edx,%eax,1)
	jump_1ec6b:
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_1ec6e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		push   %eax
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		add    %eax,%esi
		shl    $0x3,%esi
		cmpb   $0x0,data_19e16a(%esi)
		je     jump_1f6dc
		mov    data_19e169(%esi),%al
		cmp    $0x4b,%al
		jb     jump_1ecc1
		jbe    jump_1f134
		cmp    $0x4d,%al
		jb     jump_1f56a
		jbe    jump_1f34f
		cmp    $0x50,%al
		je     jump_1ef03
		jmp    jump_1f56a
	jump_1ecc1:
		cmp    $0x48,%al
		jne    jump_1f56a
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%bl
		call   func_1ead0
		xor    %edx,%edx
		mov    data_19e16a(%esi),%dl
		xor    %eax,%eax
		add    %edx,%edx
		call   func_2b81d
		mov    -0x2(%esp),%edx
		mov    %al,0x14(%esp)
		xor    %ah,%ah
		test   %al,%al
		sete   %al
		sar    $0x10,%edx
		mov    %ax,0x4(%esp)
		mov    %edx,%eax
		mov    %edx,%ebx
		shl    $0x2,%eax
		xor    %edx,%ebx
		add    %edx,%eax
		mov    data_54420(%edx),%bl
		mov    data_19e145(,%eax,8),%edx
		sar    $0x4,%ebx
		sar    $0x10,%edx
		sub    %ebx,%edx
		mov    %dx,data_19e147(,%eax,8)
	jump_1ed29:
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		mov    0x2(%esp),%esi
		mov    %edi,%ecx
		sar    $0x10,%esi
		shl    $0x2,%ecx
		shl    $0x2,%esi
		add    %edi,%ecx
		mov    data_543ce(%esi),%ebx
		shl    $0x3,%ecx
		sar    $0x10,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1ed71
		incw   0x4(%esp)
		jmp    jump_1ed29
	jump_1ed71:
		lea    0x2(%edi),%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    data_54420(%edi),%al
		mov    data_8293a(%ebx),%di
		mov    data_19e145(%ecx),%edx
		sub    %eax,%edi
		mov    data_19e165(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %di,data_8293a(%ebx)
		mov    %edx,%eax
		movzbl data_19e16a(%ecx),%edi
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %eax,%edi
		jle    jump_1edf3
		cmpb   $0x1,0x14(%esp)
		je     jump_1edd3
		mov    data_543d0(%esi),%al
		mov    %al,data_19e169(%ecx)
		jmp    jump_1ee26
	jump_1edd3:
		xor    %ah,%ah
		mov    %ah,data_19e169(%ecx)
		mov    data_19e161(%ecx),%ax
		shl    $0x4,%eax
		add    $0xc,%eax
		mov    %ax,data_82936(%ebx)
		jmp    jump_1ee26
	jump_1edf3:
		mov    $0x50,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1ee1f
		xor    %bl,%bl
		mov    %bl,data_19e169(%ecx)
		jmp    jump_1ee26
	jump_1ee1f:
		movb   $0x50,data_19e169(%ecx)
	jump_1ee26:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e169(%eax),%dl
		cmp    $0x4b,%dl
		jb     jump_1ee59
		jbe    jump_1ee60
		cmp    $0x4d,%dl
		jb     jump_1eed2
		jbe    jump_1ee81
		cmp    $0x50,%dl
		je     jump_1eebe
		jmp    jump_1eed2
	jump_1ee59:
		cmp    $0x48,%dl
		je     jump_1ee9b
		jmp    jump_1eed2
	jump_1ee60:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		dec    %eax
	jump_1ee78:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1f0eb
	jump_1ee81:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		inc    %eax
		jmp    jump_1ee78
	jump_1ee9b:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		dec    %edx
	jump_1eead:
		mov    data_19e143(%eax),%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		jmp    jump_1f0eb
	jump_1eebe:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		inc    %edx
		jmp    jump_1eead
	jump_1eed2:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    $0xff,%ecx
		mov    (%esp),%bl
		mov    data_19e145(,%eax,8),%edx
		mov    data_19e143(,%eax,8),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		jmp    jump_1f0eb
	jump_1ef03:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%bl
		call   func_1ead0
		xor    %edx,%edx
		mov    data_19e16a(%esi),%dl
		xor    %eax,%eax
		add    %edx,%edx
		call   func_2b81d
		mov    -0x2(%esp),%edx
		mov    %al,0x18(%esp)
		xor    %ah,%ah
		test   %al,%al
		sete   %al
		sar    $0x10,%edx
		mov    %ax,0x10(%esp)
		mov    %edx,%eax
		mov    %edx,%ebx
		shl    $0x2,%eax
		xor    %edx,%ebx
		add    %edx,%eax
		mov    data_54420(%edx),%bl
		mov    data_19e145(,%eax,8),%edx
		sar    $0x4,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		mov    %dx,data_19e147(,%eax,8)
	jump_1ef63:
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		mov    0xe(%esp),%esi
		mov    %edi,%ecx
		sar    $0x10,%esi
		shl    $0x2,%ecx
		shl    $0x2,%esi
		add    %edi,%ecx
		mov    data_5440a(%esi),%ebx
		shl    $0x3,%ecx
		sar    $0x10,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1efab
		add    %ax,0x10(%esp)
		jmp    jump_1ef63
	jump_1efab:
		lea    0x2(%edi),%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    data_54420(%edi),%al
		mov    data_8293a(%ebx),%dx
		add    %eax,%edx
		mov    data_19e165(%ecx),%eax
		mov    %dx,data_8293a(%ebx)
		mov    data_19e145(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		movzbl data_19e16a(%ecx),%edi
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %eax,%edi
		jle    jump_1f028
		cmpb   $0x1,0x18(%esp)
		je     jump_1f00d
		mov    data_5440c(%esi),%al
		mov    %al,data_19e169(%ecx)
		jmp    jump_1f05b
	jump_1f00d:
		xor    %ah,%ah
		mov    %ah,data_19e169(%ecx)
		mov    data_19e161(%ecx),%ax
		shl    $0x4,%eax
		mov    %ax,data_82936(%ebx)
		jmp    jump_1f05b
	jump_1f028:
		mov    $0x48,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1f054
		xor    %bl,%bl
		mov    %bl,data_19e169(%ecx)
		jmp    jump_1f05b
	jump_1f054:
		movb   $0x48,data_19e169(%ecx)
	jump_1f05b:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e169(%eax),%dl
		cmp    $0x4b,%dl
		jb     jump_1f08e
		jbe    jump_1f095
		cmp    $0x4d,%dl
		jb     jump_1f109
		jbe    jump_1f0b3
		cmp    $0x50,%dl
		je     jump_1f0f5
		jmp    jump_1f109
	jump_1f08e:
		cmp    $0x48,%dl
		je     jump_1f0cd
		jmp    jump_1f109
	jump_1f095:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		dec    %eax
	jump_1f0ad:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1f0eb
	jump_1f0b3:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		inc    %eax
		jmp    jump_1f0ad
	jump_1f0cd:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		dec    %edx
	jump_1f0df:
		mov    data_19e143(%eax),%eax
		movswl %dx,%edx
	jump_1f0e8:
		sar    $0x10,%eax
	jump_1f0eb:
		call   func_1ead0
		jmp    jump_1f6cd
	jump_1f0f5:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		inc    %edx
		jmp    jump_1f0df
	jump_1f109:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    $0xff,%ecx
		mov    (%esp),%bl
		mov    data_19e145(,%eax,8),%edx
		mov    data_19e143(,%eax,8),%eax
		sar    $0x10,%edx
		jmp    jump_1f0e8
	jump_1f134:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%bl
		call   func_1ead0
		xor    %edx,%edx
		mov    data_19e16a(%esi),%dl
		xor    %eax,%eax
		add    %edx,%edx
		call   func_2b81d
		mov    -0x2(%esp),%edx
		mov    %al,0x1c(%esp)
		xor    %ah,%ah
		test   %al,%al
		sete   %al
		sar    $0x10,%edx
		mov    %ax,0x8(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		lea    (%edx,%eax,1),%ebx
		mov    data_54420(%edx),%dl
		and    $0xff,%edx
		mov    $0x18,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		shl    $0x3,%ebx
		mov    %eax,%edx
		mov    data_19e143(%ebx),%eax
		sar    $0x10,%eax
		sub    %edx,%eax
		mov    %ax,data_19e145(%ebx)
	jump_1f1a3:
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		mov    0x6(%esp),%esi
		mov    %edi,%ecx
		sar    $0x10,%esi
		shl    $0x2,%ecx
		shl    $0x2,%esi
		add    %edi,%ecx
		mov    data_543e2(%esi),%ebx
		shl    $0x3,%ecx
		sar    $0x10,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1f1eb
		add    %ax,0x8(%esp)
		jmp    jump_1f1a3
	jump_1f1eb:
		lea    0x2(%edi),%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    data_54420(%edi),%al
		mov    data_82938(%ebx),%dx
		sub    %eax,%edx
		mov    data_19e163(%ecx),%eax
		mov    %dx,data_82938(%ebx)
		mov    data_19e143(%ecx),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		movzbl data_19e16a(%ecx),%edi
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %eax,%edi
		jle    jump_1f26d
		cmpb   $0x1,0x1c(%esp)
		je     jump_1f24d
		mov    data_543e4(%esi),%al
		mov    %al,data_19e169(%ecx)
		jmp    jump_1f2a0
	jump_1f24d:
		xor    %ah,%ah
		mov    %ah,data_19e169(%ecx)
		mov    data_19e161(%ecx),%ax
		shl    $0x4,%eax
		add    $0x4,%eax
		mov    %ax,data_82936(%ebx)
		jmp    jump_1f2a0
	jump_1f26d:
		mov    $0x4d,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1f299
		xor    %bl,%bl
		mov    %bl,data_19e169(%ecx)
		jmp    jump_1f2a0
	jump_1f299:
		movb   $0x4d,data_19e169(%ecx)
	jump_1f2a0:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e169(%eax),%dl
		cmp    $0x4b,%dl
		jb     jump_1f2d3
		jbe    jump_1f2dd
		cmp    $0x4d,%dl
		jb     jump_1eed2
		jbe    jump_1f2fe
		cmp    $0x50,%dl
		je     jump_1f33b
		jmp    jump_1eed2
	jump_1f2d3:
		cmp    $0x48,%dl
		je     jump_1f318
		jmp    jump_1eed2
	jump_1f2dd:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		dec    %eax
	jump_1f2f5:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1f0eb
	jump_1f2fe:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		inc    %eax
		jmp    jump_1f2f5
	jump_1f318:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		dec    %edx
	jump_1f32a:
		mov    data_19e143(%eax),%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		jmp    jump_1f0eb
	jump_1f33b:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		inc    %edx
		jmp    jump_1f32a
	jump_1f34f:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%bl
		call   func_1ead0
		xor    %edx,%edx
		mov    data_19e16a(%esi),%dl
		xor    %eax,%eax
		add    %edx,%edx
		call   func_2b81d
		mov    -0x2(%esp),%edx
		mov    %al,0x20(%esp)
		xor    %ah,%ah
		test   %al,%al
		sete   %al
		sar    $0x10,%edx
		mov    %ax,0xc(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		lea    (%edx,%eax,1),%ebx
		mov    data_54420(%edx),%dl
		and    $0xff,%edx
		mov    $0x18,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		shl    $0x3,%ebx
		mov    %eax,%edx
		mov    data_19e143(%ebx),%eax
		sar    $0x10,%eax
		add    %edx,%eax
		mov    %ax,data_19e145(%ebx)
	jump_1f3be:
		mov    -0x2(%esp),%edi
		sar    $0x10,%edi
		mov    0xa(%esp),%esi
		mov    %edi,%ecx
		sar    $0x10,%esi
		shl    $0x2,%ecx
		shl    $0x2,%esi
		add    %edi,%ecx
		mov    data_543f6(%esi),%ebx
		shl    $0x3,%ecx
		sar    $0x10,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1f406
		incw   0xc(%esp)
		jmp    jump_1f3be
	jump_1f406:
		lea    0x2(%edi),%edx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		shl    $0x2,%ebx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    data_54420(%edi),%al
		mov    data_82938(%ebx),%di
		mov    data_19e143(%ecx),%edx
		add    %eax,%edi
		mov    data_19e163(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sub    %eax,%edx
		mov    %di,data_82938(%ebx)
		mov    %edx,%eax
		movzbl data_19e16a(%ecx),%edi
		cltd
		xor    %edx,%eax
		sub    %edx,%eax
		cmp    %eax,%edi
		jle    jump_1f488
		cmpb   $0x1,0x20(%esp)
		je     jump_1f468
		mov    data_543f8(%esi),%al
		mov    %al,data_19e169(%ecx)
		jmp    jump_1f4bb
	jump_1f468:
		xor    %ah,%ah
		mov    %ah,data_19e169(%ecx)
		mov    data_19e161(%ecx),%ax
		shl    $0x4,%eax
		add    $0x8,%eax
		mov    %ax,data_82936(%ebx)
		jmp    jump_1f4bb
	jump_1f488:
		mov    $0x4b,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		cmp    $0x1,%ax
		jne    jump_1f4b4
		xor    %bl,%bl
		mov    %bl,data_19e169(%ecx)
		jmp    jump_1f4bb
	jump_1f4b4:
		movb   $0x4b,data_19e169(%ecx)
	jump_1f4bb:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e169(%eax),%dl
		cmp    $0x4b,%dl
		jb     jump_1f4ee
		jbe    jump_1f4f8
		cmp    $0x4d,%dl
		jb     jump_1eed2
		jbe    jump_1f519
		cmp    $0x50,%dl
		je     jump_1f556
		jmp    jump_1eed2
	jump_1f4ee:
		cmp    $0x48,%dl
		je     jump_1f533
		jmp    jump_1eed2
	jump_1f4f8:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		dec    %eax
	jump_1f510:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1f0eb
	jump_1f519:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		inc    %eax
		jmp    jump_1f510
	jump_1f533:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		dec    %edx
	jump_1f545:
		mov    data_19e143(%eax),%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		jmp    jump_1f0eb
	jump_1f556:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		inc    %edx
		jmp    jump_1f545
	jump_1f56a:
		mov    -0x2(%esp),%ebp
		sar    $0x10,%ebp
		lea    0x2(%ebp),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    (%esp),%bl
		mov    data_82938(%eax),%edx
		mov    data_82936(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1ead0
		mov    $0xa,%edx
		xor    %eax,%eax
		call   func_2b81d
		mov    %ebp,%ecx
		mov    %eax,%edi
		movswl %ax,%esi
		shl    $0x2,%ecx
		shl    $0x2,%esi
		add    %ebp,%ecx
		mov    data_543e2(%esi),%ebx
		shl    $0x3,%ecx
		sar    $0x10,%ebx
		mov    data_19e145(%ecx),%edx
		mov    data_19e143(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_1aa46
		test   %ax,%ax
		jne    jump_1f5f3
		cmp    $0x4,%di
		jle    jump_1f5f3
		mov    data_543e4(%esi),%al
		mov    %al,data_19e169(%ecx)
	jump_1f5f3:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e169(%eax),%dl
		cmp    $0x4b,%dl
		jb     jump_1f626
		jbe    jump_1f62d
		cmp    $0x4d,%dl
		jb     jump_1f69c
		jbe    jump_1f64e
		cmp    $0x50,%dl
		je     jump_1f688
		jmp    jump_1f69c
	jump_1f626:
		cmp    $0x48,%dl
		je     jump_1f668
		jmp    jump_1f69c
	jump_1f62d:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		dec    %eax
	jump_1f645:
		sar    $0x10,%edx
		cwtl
		jmp    jump_1f6c8
	jump_1f64e:
		mov    $0xff,%ecx
		mov    data_19e145(%eax),%edx
		xor    %ebx,%ebx
		mov    data_19e145(%eax),%ax
		mov    (%esp),%bl
		inc    %eax
		jmp    jump_1f645
	jump_1f668:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		dec    %edx
	jump_1f67a:
		mov    data_19e143(%eax),%eax
		movswl %dx,%edx
		sar    $0x10,%eax
		jmp    jump_1f6c8
	jump_1f688:
		mov    $0xff,%ecx
		xor    %ebx,%ebx
		mov    data_19e147(%eax),%dx
		mov    (%esp),%bl
		inc    %edx
		jmp    jump_1f67a
	jump_1f69c:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    $0xff,%ecx
		mov    (%esp),%bl
		mov    data_19e145(,%eax,8),%edx
		mov    data_19e143(,%eax,8),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
	jump_1f6c8:
		call   func_1ead0
	jump_1f6cd:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		xor    %dl,%dl
		mov    %dl,data_54420(%eax)
	jump_1f6dc:
		add    $0x24,%esp
		jmp    jump_1b07b


/*----------------------------------------------------------------*/
func_1f6e4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    $0xffffffff,%edx
		mov    $0x2,%ecx
		xor    %ebx,%ebx
		mov    %edx,0x4(%esp)
		mov    %bx,(%esp)
		mov    $0x4,%ebp
	jump_1f706:
		movswl %cx,%esi
		lea    -0x2(%esi),%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		shl    $0x3,%edx
		cmpb   $0x1,data_19e144(%edx)
		jne    jump_1fbba
		mov    data_56bfc,%di
		mov    data_19e145(%edx),%ax
		sub    %edi,%eax
		imul   $0x18,%eax,%eax
		mov    data_56bf8,%bx
		add    %eax,%ebx
		mov    %esi,%eax
		shl    $0x2,%eax
		mov    %esi,%edi
		sub    %esi,%eax
		add    $0x5,%ebx
		mov    %bx,data_82938(%edi,%eax,4)
		mov    data_19e147(%edx),%bx
		sub    data_56bfa,%bx
		shl    $0x4,%ebx
		add    data_56bf6,%bx
		sub    $0x10,%ebx
		mov    %bx,data_8293a(%edi,%eax,4)
		xor    %ebx,%ebx
		mov    data_19e169(%edx),%al
		mov    data_5441e(%esi),%bl
		cmp    $0x4b,%al
		jb     jump_1f7a9
		jbe    jump_1fc0f
		cmp    $0x4d,%al
		jb     jump_1ff7a
		jbe    jump_1fdcf
		cmp    $0x50,%al
		je     jump_1f98f
		jmp    jump_1ff7a
	jump_1f7a9:
		cmp    $0x48,%al
		jne    jump_1ff7a
		xor    %eax,%eax
		mov    data_19e16a(%edx),%al
		xor    %edx,%edx
		shl    $0x4,%eax
		mov    %bl,%dl
		cmp    %eax,%edx
		jge    jump_1f90f
		movswl %bx,%edx
		mov    $0x10,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_1f7e4
		test   %bx,%bx
		jg     jump_1f90f
	jump_1f7e4:
		movswl %cx,%edi
		mov    %edi,%edx
		shl    $0x2,%edx
		mov    %edi,%eax
		sub    %edi,%edx
		sub    %bx,data_8293a(%eax,%edx,4)
		lea    -0x2(%edi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    (%edi,%edi,1),%esi
		mov    data_19e16b(,%eax,8),%al
		mov    data_544cc(%esi),%dx
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,data_544cc(%esi)
		mov    data_544ca(%esi),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		add    %bl,data_5441e(%edi)
		test   %bx,%bx
		jle    jump_1f849
		xor    %ebx,%ebx
		mov    %bx,data_544cc(%esi)
	jump_1f849:
		movswl %cx,%edx
		lea    -0x2(%edx),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		mov    data_5441e(%edx),%bl
		shl    $0x3,%eax
		cmp    $0x8,%bl
		jae    jump_1f88f
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %edx,%esi
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_1f8b9
	jump_1f88f:
		mov    data_19e145(%eax),%edx
		mov    data_15ba1e,%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		imul   %edx,%esi
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_1f8b9:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1fb2f
		xor    %edx,%edx
		mov    data_5441e(%esi),%dl
		sar    $0x2,%edx
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		add    $0xc,%edi
	jump_1f8f7:
		add    %edi,%edx
	jump_1f8f9:
		mov    %edx,%eax
	jump_1f8fb:
		mov    %esi,%edx
		shl    $0x2,%edx
		sub    %esi,%edx
		mov    %ax,data_82936(%esi,%edx,4)
		jmp    jump_1fb2f
	jump_1f90f:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1f961
		xor    %edx,%edx
		mov    data_5441e(%esi),%dl
		sar    $0x2,%edx
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		lea    0xc(%edi),%eax
	jump_1f949:
		add    %edx,%eax
		mov    %eax,%edx
		mov    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    %dx,data_82936(%esi,%eax,4)
		jmp    jump_1fb23
	jump_1f961:
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
	jump_1f973:
		imul   %esi,%edx
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%esi
		sar    $0x10,%eax
		add    %esi,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_1fb2f
	jump_1f98f:
		xor    %eax,%eax
		mov    data_19e16a(%edx),%al
		xor    %edx,%edx
		shl    $0x4,%eax
		mov    %bl,%dl
		cmp    %eax,%edx
		jge    jump_1fad5
		movswl %bx,%edx
		mov    $0x10,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_1f9c2
		test   %bx,%bx
		jg     jump_1fad5
	jump_1f9c2:
		movswl %cx,%edi
		mov    %edi,%edx
		shl    $0x2,%edx
		mov    %edi,%eax
		sub    %edi,%edx
		add    %bx,data_8293a(%eax,%edx,4)
		lea    -0x2(%edi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    (%edi,%edi,1),%esi
		mov    data_19e16b(,%eax,8),%al
		mov    data_544cc(%esi),%dx
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,data_544cc(%esi)
		mov    data_544ca(%esi),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %al,data_5441e(%edi)
		test   %ax,%ax
		jle    jump_1fa25
		xor    %ebx,%ebx
		mov    %bx,data_544cc(%esi)
	jump_1fa25:
		movswl %cx,%edx
		lea    -0x2(%edx),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		mov    data_5441e(%edx),%bl
		shl    $0x3,%eax
		cmp    $0x8,%bl
		jae    jump_1fa6b
		mov    data_19e145(%eax),%edx
		mov    data_15ba1e,%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		imul   %esi,%edx
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%esi
		sar    $0x10,%eax
		add    %esi,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_1fa95
	jump_1fa6b:
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %esi,%edx
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%esi
		sar    $0x10,%eax
		add    %esi,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_1fa95:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1fb2f
		xor    %edx,%edx
		mov    data_5441e(%esi),%dl
		sar    $0x2,%edx
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		jmp    jump_1f8f7
	jump_1fad5:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1f961
		xor    %edx,%edx
		mov    data_5441e(%esi),%dl
		sar    $0x2,%edx
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		add    %edi,%edx
		mov    %edx,%eax
	jump_1fb14:
		mov    %esi,%edx
		shl    $0x2,%edx
		sub    %esi,%edx
		mov    %ax,data_82936(%esi,%edx,4)
	jump_1fb23:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_1ec6e
	jump_1fb2f:
		movswl %cx,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		sub    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    data_82938(%edx),%si
		cmp    $0xa,%si
		jle    jump_1fbba
		cmp    $0x131,%si
		jge    jump_1fbba
		mov    data_82938(%edx),%esi
		sar    $0x10,%esi
		cmp    $0xfffffffb,%esi
		jle    jump_1fbba
		cmpw   $0xc8,data_8293a(%edx)
		jge    jump_1fbba
		mov    $0x8,%edx
		mov    $0x7,%ebx
		call   func_1e4b4
		test   %ax,%ax
		je     jump_1fb9b
		cmpb   $0x0,data_15ba22
		jne    jump_1fb9b
		mov    $0x1,%bl
		mov    (%esp),%eax
		mov    %bl,data_15ba22
		mov    %eax,0x4(%esp)
	jump_1fb9b:
		mov    data_543cc,%si
		mov    data_543ca,%eax
		inc    %esi
		sar    $0x10,%eax
		mov    %si,data_543cc
		mov    %cx,data_83d84(,%eax,2)
	jump_1fbba:
		mov    (%esp),%edi
		inc    %edi
		inc    %ecx
		mov    %di,(%esp)
		cmp    $0xb5,%cx
		jle    jump_1f706
		cmpl   $0x0,data_1a0168
		jne    jump_1fbe8
		cmpl   $0x1,data_7cf20
		je     jump_1fbe8
		xor    %bh,%bh
		mov    %bh,data_15ba22
	jump_1fbe8:
		mov    data_544cf,%al
		mov    %al,%ah
		inc    %ah
		mov    %ah,data_544cf
		cmp    $0x13,%al
		jne    jump_1fc03
		xor    %cl,%cl
		mov    %cl,data_544cf
	jump_1fc03:
		mov    0x4(%esp),%eax
		add    $0x8,%esp
		jmp    jump_1b07b
	jump_1fc0f:
		mov    data_19e16a(%edx),%dl
		and    $0xff,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    %bl,%dl
		cmp    %eax,%edx
		jge    jump_1fd6e
		movswl %bx,%edx
		mov    $0x18,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_1fc4d
		test   %bx,%bx
		jg     jump_1fd6e
	jump_1fc4d:
		movswl %cx,%edi
		mov    %edi,%edx
		shl    $0x2,%edx
		mov    %edi,%eax
		sub    %edi,%edx
		sub    %bx,data_82938(%eax,%edx,4)
		lea    -0x2(%edi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    (%edi,%edi,1),%esi
		mov    data_19e16b(,%eax,8),%al
		mov    data_544cc(%esi),%dx
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,data_544cc(%esi)
		mov    data_544ca(%esi),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %al,data_5441e(%edi)
		test   %ax,%ax
		jle    jump_1fcb0
		xor    %ebx,%ebx
		mov    %bx,data_544cc(%esi)
	jump_1fcb0:
		movswl %cx,%edx
		lea    -0x2(%edx),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		mov    data_5441e(%edx),%bl
		shl    $0x3,%eax
		cmp    $0xc,%bl
		jae    jump_1fcf6
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %edx,%esi
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_1fd20
	jump_1fcf6:
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %esi,%edx
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%esi
		sar    $0x10,%eax
		add    %esi,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_1fd20:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1fb2f
		xor    %edx,%edx
		mov    $0x6,%ebx
		mov    data_5441e(%esi),%dl
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		lea    0x4(%edi),%eax
		add    %edx,%eax
		jmp    jump_1f8fb
	jump_1fd6e:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1fdb8
		xor    %edx,%edx
		mov    $0x6,%ebx
		mov    data_5441e(%esi),%dl
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		lea    0x4(%edi),%eax
		add    %edx,%eax
		jmp    jump_1fb14
	jump_1fdb8:
		mov    data_19e145(%eax),%edx
		mov    data_15ba1e,%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		jmp    jump_1f973
	jump_1fdcf:
		mov    data_19e16a(%edx),%dl
		and    $0xff,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    %bl,%dl
		cmp    %eax,%edx
		jge    jump_1ff2e
		movswl %bx,%edx
		mov    $0x18,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_1fe0d
		test   %bx,%bx
		jg     jump_1ff2e
	jump_1fe0d:
		movswl %cx,%edi
		mov    %edi,%edx
		shl    $0x2,%edx
		mov    %edi,%eax
		sub    %edi,%edx
		add    %bx,data_82938(%eax,%edx,4)
		lea    -0x2(%edi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    (%edi,%edi,1),%esi
		mov    data_19e16b(,%eax,8),%al
		mov    data_544cc(%esi),%dx
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,data_544cc(%esi)
		mov    data_544ca(%esi),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %al,data_5441e(%edi)
		test   %ax,%ax
		jle    jump_1fe70
		xor    %ebx,%ebx
		mov    %bx,data_544cc(%esi)
	jump_1fe70:
		movswl %cx,%edx
		lea    -0x2(%edx),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		mov    data_5441e(%edx),%bl
		shl    $0x3,%eax
		cmp    $0xc,%bl
		jae    jump_1feb6
		mov    data_19e145(%eax),%edx
		mov    data_15ba1e,%esi
		sar    $0x10,%edx
		sar    $0x10,%esi
		imul   %esi,%edx
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%esi
		sar    $0x10,%eax
		add    %esi,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_1fee0
	jump_1feb6:
		mov    data_19e145(%eax),%esi
		mov    data_15ba1e,%edx
		sar    $0x10,%esi
		sar    $0x10,%edx
		imul   %edx,%esi
		mov    data_19e143(%eax),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_1fee0:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1fb2f
		xor    %edx,%edx
		mov    $0x6,%ebx
		mov    data_5441e(%esi),%dl
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		lea    0x8(%edi),%eax
		add    %eax,%edx
		jmp    jump_1f8f9
	jump_1ff2e:
		movswl %cx,%esi
		lea    -0x2(%esi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e16a(%eax)
		je     jump_1f961
		xor    %edx,%edx
		mov    $0x6,%ebx
		mov    data_5441e(%esi),%dl
		mov    data_19e15f(%eax),%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebp
		sar    $0x10,%edi
		shl    $0x4,%edi
		lea    0x8(%edi),%eax
		jmp    jump_1f949
	jump_1ff7a:
		movswl %cx,%edx
		lea    -0x2(%edx),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		movzbl data_19e16a(,%eax,8),%esi
		xor    %eax,%eax
		shl    $0x4,%esi
		mov    data_5441e(%edx),%al
		cmp    %esi,%eax
		jge    jump_1fb23
		movswl %bx,%edx
		mov    $0x10,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    jump_1ffbe
		test   %bx,%bx
		jg     jump_1fb23
	jump_1ffbe:
		movswl %cx,%edi
		lea    -0x2(%edi),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    (%edi,%edi,1),%esi
		mov    data_19e16b(,%eax,8),%al
		mov    data_544cc(%esi),%dx
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,data_544cc(%esi)
		mov    data_544ca(%esi),%edx
		sar    $0x10,%edx
		mov    $0xa,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %al,data_5441e(%edi)
		test   %ax,%ax
		jle    jump_1fb2f
		xor    %ebx,%ebx
		mov    %bx,data_544cc(%esi)
		jmp    jump_1fb2f


/*----------------------------------------------------------------*/
func_20019:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%cl
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    jump_20037
	jump_20023:
		mov    $0x3c8,%edx
		movswl %bx,%eax
#if 1
    movb   %al,palette_index
#else
		out    %al,(%dx)
#endif
		mov    $0x3c9,%edx
		xor    %al,%al
#if 1
    movb   %al,palette_r
    movb   %al,palette_g
    movb   %al,palette_b

    call   w_video_set_palette

    movb   palette_index,%al
    inc    %al
    movb   %al,palette_index
#else
		out    %al,(%dx)
		out    %al,(%dx)
		out    %al,(%dx)
#endif
		inc    %ebx
	jump_20037:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    %ax,%bx
		jle    jump_20023
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_20118:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dl,(%esp)
		mov    %bl,0x4(%esp)
		mov    %dl,%al
		mov    $0x3c8,%edx
		xor    %ecx,%ecx
#if 1
    movb   %al,palette_index
#else
		out    %al,(%dx)
#endif
		mov    $0x3c9,%edx
		jmp    jump_20159
	jump_20137:
		movswl %cx,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%esp),%bl
		add    %eax,%ebx
		mov    (%esi,%ebx,1),%al
#if 1
    movb   %al,palette_r
#else
		out    %al,(%dx)
#endif
		mov    0x1(%esi,%ebx,1),%al
#if 1
    movb   %al,palette_g
#else
		out    %al,(%dx)
#endif
		mov    0x2(%esi,%ebx,1),%al
		inc    %ecx
#if 1
    movb   %al,palette_b

    call   w_video_set_palette
    movb   palette_index,%al
    inc    %al
    movb   %al,palette_index
#else
		out    %al,(%dx)
#endif
	jump_20159:
		xor    %eax,%eax
		mov    0x4(%esp),%al
		cmp    %ax,%cx
		jle    jump_20137
	jump_20164:
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_201cf:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%esi
		mov    %dl,(%esp)
		mov    %bl,0x4(%esp)
		mov    %dl,%al
		mov    $0x3c7,%edx
		xor    %ecx,%ecx
#if 1
    movb   %al,palette_index
#else
		out    %al,(%dx)
#endif
		jmp    jump_2021d
	jump_201e9:
		mov    $0x3c9,%edx
		sub    %eax,%eax
#if 1
    call   w_video_get_palette
    movb   palette_index,%al
    inc    %al
    movb   %al,palette_index

    movb   palette_r,%al
#else
		in     (%dx),%al
#endif
		mov    %eax,%edx
		movswl %cx,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%esp),%bl
		add    %eax,%ebx
		mov    %dl,(%esi,%ebx,1)
		mov    $0x3c9,%edx
		inc    %ecx
		sub    %eax,%eax
#if 1
    movb   palette_g,%al
#else
		in     (%dx),%al
#endif
		mov    %al,0x1(%esi,%ebx,1)
		sub    %eax,%eax
#if 1
    movb   palette_b,%al
#else
		in     (%dx),%al
#endif
		mov    %al,0x2(%esi,%ebx,1)
	jump_2021d:
		xor    %eax,%eax
		mov    0x4(%esp),%al
		cmp    %ax,%cx
		jle    jump_201e9
		jmp    jump_20164


/*----------------------------------------------------------------*/
func_208fa:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %edx
		push   %ebx
		push   %ecx
		cmpw   $0x0,data_54628
		jne    jump_20a11
		mov    %eax,%ebx
		xor    %edi,%edi
		xor    %esi,%esi
	jump_20913:
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%edi
		jl     jump_209dd
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%edi
		jg     jump_209dd
		xor    %edx,%edx
		mov    (%ebx),%dl
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		mov    -0x2(%esp),%ecx
		shl    $0x2,%eax
		sar    $0x10,%ecx
		add    %eax,%edx
		mov    $0x8,%eax
		shl    %cl,%eax
		shl    $0x3,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    %ax,data_f6070(%esi)
		mov    0x1(%ebx),%dl
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		shl    $0x3,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    %ax,data_f6072(%esi)
		mov    0x2(%ebx),%dl
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		shl    $0x3,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %ax,data_f6074(%esi)
		mov    (%ebx),%al
		xor    %ah,%ah
		imul   $0x3e8,%eax,%eax
		mov    %ax,data_f5a70(%esi)
		mov    0x1(%ebx),%al
		xor    %ah,%ah
		imul   $0x3e8,%eax,%eax
		mov    %ax,data_f5a72(%esi)
		mov    0x2(%ebx),%al
		xor    %ah,%ah
		imul   $0x3e8,%eax,%eax
		mov    %ax,data_f5a74(%esi)
		jmp    jump_209fe
	jump_209dd:
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		mov    (%ebx),%dl
		mov    %dl,data_f6670(%eax)
		mov    0x1(%ebx),%dl
		mov    %dl,data_f6671(%eax)
		mov    0x2(%ebx),%dl
		mov    %dl,data_f6672(%eax)
	jump_209fe:
		add    $0x6,%esi
		inc    %edi
		add    $0x3,%ebx
		cmp    $0x100,%edi
		jl     jump_20913
	jump_20a11:
		mov    0x6(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		sub    %ecx,%ebx
		add    %ebx,%ebx
		jmp    jump_20a6c
	jump_20a23:
		add    $0x6,%ebx
		mov    data_f606a(%ebx),%ax
		mov    data_f5a6a(%ebx),%si
		mov    data_f5a6c(%ebx),%di
		mov    data_f5a6e(%ebx),%dx
		sub    %eax,%esi
		mov    data_f606c(%ebx),%ax
		mov    %si,data_f5a6a(%ebx)
		sub    %eax,%edi
		mov    data_f606e(%ebx),%ax
		mov    %di,data_f5a6c(%ebx)
		sub    %eax,%edx
		inc    %ecx
		mov    %dx,data_f5a6e(%ebx)
	jump_20a6c:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%ecx
		jle    jump_20a23
		mov    0x6(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		sub    %ecx,%ebx
		mov    $0x3e8,%edi
		add    %ebx,%ebx
		jmp    jump_20ae0
	jump_20a8e:
		xor    %edx,%edx
		mov    data_f5a70(%ebx),%dx
		mov    $0x3e8,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    %ecx,%esi
		shl    $0x2,%esi
		xor    %edx,%edx
		sub    %ecx,%esi
		mov    data_f5a72(%ebx),%dx
		mov    %al,data_f6670(%esi)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		xor    %edx,%edx
		mov    data_f5a74(%ebx),%dx
		mov    %al,data_f6671(%esi)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %edi
		add    $0x6,%ebx
		inc    %ecx
		mov    %al,data_f6672(%esi)
	jump_20ae0:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		cmp    %eax,%ecx
		jle    jump_20a8e
		mov    $data_f6670,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x4(%esp),%bl
		mov    0x8(%esp),%dl
		mov    -0x2(%esp),%ecx
		call   func_20118
		sar    $0x10,%ecx
		mov    data_54628,%bx
		xor    %edx,%edx
		mov    $0x7,%eax
		mov    %bx,%dx
		inc    %ebx
		shl    %cl,%eax
		mov    %bx,data_54628
		cmp    %eax,%edx
		jle    jump_20b34
		xor    %ebx,%ebx
		xor    %al,%al
		mov    %bx,data_54628
		jmp    jump_20b36
	jump_20b34:
		mov    $0x1,%al
	jump_20b36:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		ret

vtable_20e92:
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0
		.long   0


/*----------------------------------------------------------------*/
func_20eb0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    data_15b9b4,%eax
		call   w_dos_free
		mov    data_15b9b0,%eax
		call   w_dos_free
		mov    data_15b9c8,%eax
		call   w_dos_free
		mov    data_15b9c4,%eax
		call   w_dos_free
		mov    data_15b9c0,%eax
		call   w_dos_free
		mov    data_15b9bc,%eax
		call   w_dos_free
		mov    data_15b9b8,%eax
		call   w_dos_free
		xor    %eax,%eax
		mov    data_15ba23,%al
		add    %eax,%eax
		mov    data_15ba16,%dx
		mov    %dx,data_56c8d(%eax)
		mov    data_15ba18,%dx
		mov    %dx,data_56e89(%eax)
		cmpb   $0x50,data_82949
		jne    jump_20f2f
		decw   data_56e89(%eax)
	jump_20f2f:
		cmp    $0xfd,%bl
		jne    jump_20f3e
		mov    $data_51400,%eax
		call   func_18fd0
	jump_20f3e:
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b122(,%eax,4),%eax
		call   w_dos_free
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b126(,%eax,4),%eax
		call   w_dos_free
		xor    %eax,%eax
		mov    %bl,%al
		subw   $0x2,data_8b128
		call   func_213a6
		pop    %edx
		pop    %ebx


/*----------------------------------------------------------------*/
func_nullsub_1:	/* 0x20f79 */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func_20f7a:
/*----------------------------------------------------------------*/
		test   %al,%al
		jbe    jump_20f83
		cmp    $0x1,%al
		je     jump_20f8e


/*----------------------------------------------------------------*/
func_nullsub_2:	/* 0x20f82 */
/*----------------------------------------------------------------*/
		ret
	jump_20f83:
#if 1
    push   %eax
    movl   video_buffer,%eax
    mov    %eax,data_15b9cc
    pop    %eax
#else
		movl   $0xa0000,data_15b9cc
#endif
		ret
	jump_20f8e:
		mov    data_1a032c,%eax
		add    $0x7d00,%eax
		mov    %eax,data_15b9cc
		ret


/*----------------------------------------------------------------*/
func_2117f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x60,%esi
		xor    %ebx,%ebx
		jmp    jump_211a6
	jump_2118f:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac33(,%eax,8),%al
		cmp    data_f30b7,%al
		je     jump_211b5
		inc    %ebx
	jump_211a6:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    data_1a00c8,%ax
		cmp    %eax,%edx
		jl     jump_2118f
	jump_211b5:
		cmp    $0x4b,%cx
		jb     jump_211dc
		jbe    jump_21241
		cmp    $0x4d,%cx
		jb     jump_212a4
		jbe    jump_2126a
		cmp    $0x50,%cx
		je     jump_21218
		jmp    jump_212a4
	jump_211dc:
		cmp    $0x48,%cx
		jne    jump_212a4
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac85(,%eax,8),%ax
		mov    $0x48,%ch
		shl    $0x4,%eax
		mov    $0x1,%ebx
		add    $0xc,%eax
		mov    %ch,data_82949
	jump_2120d:
		cwtl
		mov    $0x4,%ecx
		jmp    jump_21296
	jump_21218:
		movb   $0x50,data_82949
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac85(,%eax,8),%ax
		shl    $0x4,%eax
		mov    $0x4,%ecx
		cwtl
		mov    $0x1,%ebx
		jmp    jump_21296
	jump_21241:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac85(,%eax,8),%ax
		mov    $0x4b,%cl
		shl    $0x4,%eax
		mov    $0x1,%ebx
		add    $0x4,%eax
		mov    %cl,data_82949
		jmp    jump_2120d
	jump_2126a:
		movb   $0x4d,data_82949
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac85(,%eax,8),%ax
		shl    $0x4,%eax
		add    $0x8,%eax
		mov    $0x4,%ecx
		cwtl
		mov    $0x1,%ebx
	jump_21296:
		push   %eax
		movswl %si,%edx
		mov    $0x95,%eax
		call   func_1a51d
	jump_212a4:
		mov    data_56bfa,%dx
		cmp    $0x1,%dx
		jge    jump_212cc
		mov    %edx,%ebx
		mov    data_15ba18,%cx
		inc    %ebx
		inc    %ecx
		mov    %bx,data_56bfa
		mov    %cx,data_15ba18
		jmp    jump_212a4
	jump_212cc:
		mov    data_56bfc,%si
		test   %si,%si
		jge    jump_212f1
		mov    %esi,%edi
		mov    data_15ba16,%ax
		inc    %edi
		dec    %eax
		mov    %di,data_56bfc
		mov    %ax,data_15ba16
		jmp    jump_212cc
	jump_212f1:
		mov    data_56bf8,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xd,%eax
		cmp    %edx,%eax
		jl     jump_21348
	jump_21309:
		mov    data_56bf8,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xd,%eax
		cmp    %edx,%eax
		jl     jump_21341
		mov    data_56bfa,%bx
		mov    data_15ba18,%cx
		dec    %ebx
		inc    %ecx
		mov    %bx,data_56bfa
		mov    %cx,data_15ba18
		jmp    jump_21309
	jump_21341:
		decw   data_15ba18
	jump_21348:
		mov    data_56bfa,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xc,%eax
		cmp    %edx,%eax
		jl     jump_21e23
	jump_21364:
		mov    data_56bfa,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xc,%edx
		cmp    %eax,%edx
		jl     jump_2139a
		mov    data_56bfc,%di
		mov    data_15ba16,%ax
		dec    %edi
		inc    %eax
		mov    %di,data_56bfc
		mov    %ax,data_15ba16
		jmp    jump_21364
	jump_2139a:
		decw   data_15ba16
		jmp    jump_21e23


/*----------------------------------------------------------------*/
func_213a6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x40,%esp
		mov    %al,0x3c(%esp)
		mov    $0x7,%ecx
		mov    %esp,%edi
		mov    $vtable_20e92,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		cmpb   $0x0,data_54040
		jne    jump_213f2
	jump_213cb:
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		mov    $0x2,%ecx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%eax
		jne    jump_213f2
		call   func_2b206
		call   func_2b206
		jmp    jump_213cb
	jump_213f2:
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		mov    $0x140,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		push   $0xc8
		xor    %ebx,%ebx
		lea    0x8(%esp),%edi
		call   func_2b56c
		mov    $0x1,%dl
		mov    0x3c(%esp),%al
		mov    $0xa,%ebx
		mov    %dl,data_54041
		mov    %al,data_15ba23
		call   func_295b4
		xor    %eax,%eax
		lea    0x24(%esp),%edx
		mov    data_15ba23,%al
		mov    $data_51401,%esi
		call   func_itoa_
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %esp,%edi
		lea    0x24(%esp),%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_21452:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2146e
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_21452
	jump_2146e:
		pop    %edi
		mov    %esp,%edi
		mov    $data_5140d,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_2147f:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2149b
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_2147f
	jump_2149b:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_21549
		mov    %esp,%eax
		push   %eax
		push   $data_51412
		call   w_printf
		add    $0x8,%esp
		mov    %edx,%eax
		call   w_dos_close
		push   $0x200
		push   $data_51422
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_2150a
		mov    $data_5142e,%eax
		call   w_puts
		mov    %edx,%eax
		call   w_dos_close
		call   w_dos_getch
		call   func_19079
	jump_2150a:
		mov    $data_15b2b8,%edx
		movswl %di,%ecx
		mov    $0x11d,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		mov    $0xff,%ebx
		call   w_dos_close
		xor    %edx,%edx
		mov    $data_15b2b8,%eax
		call   func_20118
		xor    %eax,%eax
		xor    %edx,%edx
		mov    data_15ba23,%al
		call   func_23997
		call   func_19079
	jump_21549:
		mov    $data_1a00ce,%edx
		movswl %di,%ecx
		mov    $0xd,%ebx
		mov    %ecx,%eax
		mov    $data_51401,%esi
		call   w_dos_read
		mov    %ecx,%eax
		lea    0x24(%esp),%edx
		call   w_dos_close
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_15ba23,%al
		mov    %esp,%edi
		call   func_itoa_
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %esp,%edi
		mov    $data_1a00ce,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_21593:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_215af
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_21593
	jump_215af:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		mov    %eax,%edi
		cwtl
		add    $0x8,%esp
		cmp    $0xffffffff,%eax
		jne    jump_215e4
		mov    %esp,%eax
		push   %eax
		push   $data_51412
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		call   func_19079
	jump_215e4:
		lea    0x28(%esp),%edx
		movswl %di,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x4,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		xor    %ecx,%ecx
		jmp    jump_2164e
	jump_2160c:
		cmp    $0x3e8,%cx
		jne    jump_2162c
		mov    $data_51447,%eax
		call   w_puts
		call   w_dos_getch
		mov    $0xffffffff,%eax
		call   w_dos_exit
	jump_2162c:
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_fa7d8,%edx
		shl    $0x7,%eax
		mov    $0x180,%ebx
		add    %eax,%edx
		movswl %di,%eax
		inc    %ecx
		call   w_dos_read
	jump_2164e:
		cmp    0x28(%esp),%cx
		jl     jump_2160c
		call   func_1a634
		lea    0x2c(%esp),%edx
		mov    $0x2,%ebx
		movswl %di,%eax
		call   w_dos_read
		mov    0x2c(%esp),%eax
		xor    %ebx,%ebx
		mov    %ax,data_8b128
		mov    %bx,0x38(%esp)
		jmp    jump_216e4
	jump_2167e:
		mov    $0xe,%eax
		lea    0x20(%esp),%edx
		mov    $0x4,%ebx
		call   w_dos_malloc
		movswl %di,%ecx
		mov    %eax,data_8b12a(,%esi,4)
		mov    %eax,%esi
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    %esi,%edx
		call   w_dos_read
		mov    $0x2,%ebx
		lea    0x2(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_read
		mov    0x20(%esp),%eax
		call   w_dos_malloc
		mov    %eax,%edx
		mov    %eax,0xa(%esi)
		mov    %ecx,%eax
		mov    0x38(%esp),%ecx
		mov    0x20(%esp),%ebx
		inc    %ecx
		call   w_dos_read
		mov    %cx,0x38(%esp)
	jump_216e4:
		xor    %eax,%eax
		mov    0x36(%esp),%esi
		mov    0x2c(%esp),%ax
		sar    $0x10,%esi
		cmp    %eax,%esi
		jl     jump_2167e
		mov    $0xe,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    %edx,data_8b12a(,%eax,4)
		mov    $0x1f4,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		xor    %ebx,%ebx
		mov    %edx,0xa(%eax)
	jump_21731:
		xor    %ecx,%ecx
		mov    data_8e96c,%edx
		mov    data_8b128,%cx
		mov    0xa(%edx),%edx
		mov    data_8b12a(,%ecx,4),%ecx
		movswl %bx,%eax
		mov    0xa(%ecx),%ecx
		mov    (%edx,%eax,1),%dl
		inc    %ebx
		mov    %dl,(%ecx,%eax,1)
		cmp    $0x1f4,%bx
		jl     jump_21731
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		movw   $0x18,(%eax)
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		movw   $0x10,0x2(%eax)
		mov    data_8b128,%si
		xor    %edx,%edx
		inc    %esi
		mov    $0xe,%eax
		mov    %si,data_8b128
		call   w_dos_malloc
		mov    data_8b128,%dx
		mov    %eax,data_8b12a(,%edx,4)
		mov    $0x2bc,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		xor    %ecx,%ecx
		mov    %edx,0xa(%eax)
	jump_217d0:
		xor    %ebx,%ebx
		mov    data_8e970,%eax
		mov    data_8b128,%bx
		mov    0xa(%eax),%eax
		mov    data_8b12a(,%ebx,4),%ebx
		movswl %cx,%edx
		mov    0xa(%ebx),%ebx
		mov    (%edx,%eax,1),%al
		inc    %ecx
		mov    %al,(%edx,%ebx,1)
		cmp    $0x2bc,%cx
		jl     jump_217d0
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		movw   $0x18,(%eax)
		xor    %eax,%eax
		mov    data_8b128,%ax
		mov    data_8b12a(,%eax,4),%eax
		movw   $0x10,0x2(%eax)
		xor    %ebx,%ebx
		mov    data_8b128,%ax
		mov    data_f10a2,%dh
		inc    %eax
		inc    %dh
		mov    %ax,data_8b128
		mov    %dh,data_f10a2
		xor    %esi,%esi
		jmp    jump_218c8
	jump_21849:
		mov    data_8b12a(,%eax,4),%eax
		mov    0x2(%eax),%cx
		cmp    $0x30,%cx
		jb     jump_21874
		jbe    jump_21896
		cmp    $0x50,%cx
		jb     jump_2186c
		jbe    jump_218a6
		cmp    $0x60,%cx
		je     jump_218ae
		jmp    jump_218b8
	jump_2186c:
		cmp    $0x40,%cx
		je     jump_2189e
		jmp    jump_218b8
	jump_21874:
		cmp    $0x10,%cx
		jb     jump_218b8
		jbe    jump_21884
		cmp    $0x20,%cx
		je     jump_2188e
		jmp    jump_218b8
	jump_21884:
		mov    %si,0x4(%eax)
		mov    %si,0x6(%eax)
		jmp    jump_218b8
	jump_2188e:
		movw   $0xfff0,0x6(%eax)
		jmp    jump_218b4
	jump_21896:
		movw   $0xffe0,0x6(%eax)
		jmp    jump_218b4
	jump_2189e:
		movw   $0xffd0,0x6(%eax)
		jmp    jump_218b4
	jump_218a6:
		movw   $0xffc0,0x6(%eax)
		jmp    jump_218b4
	jump_218ae:
		movw   $0xffb0,0x6(%eax)
	jump_218b4:
		mov    %si,0x4(%eax)
	jump_218b8:
		mov    0x2(%eax),%dx
		add    0x6(%eax),%dx
		sub    $0xa,%edx
		inc    %ebx
		mov    %dx,0x8(%eax)
	jump_218c8:
		xor    %edx,%edx
		movswl %bx,%eax
		mov    data_8b128,%dx
		cmp    %edx,%eax
		jl     jump_21849
		mov    $0xb6,%edx
		mov    $0x2,%bl
	jump_218e3:
		movswl %dx,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		inc    %edx
		mov    %bl,data_82935(%ecx,%eax,4)
		cmp    $0x13f,%dx
		jle    jump_218e3
		mov    $0xb6,%esi
	jump_21901:
		push   $0x0
		mov    $0x2,%ecx
		movswl %si,%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %esi
		call   func_1a51d
		cmp    $0x13f,%si
		jle    jump_21901
		mov    $data_15ba20,%edx
		movswl %di,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    %eax,data_15b9b0
		mov    data_15ba1c,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x6,%eax
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    data_15ba1c,%edx
		mov    %eax,data_15b9c8
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		call   w_dos_malloc
		mov    data_15ba1e,%ebx
		mov    data_15ba1c,%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		imul   %edx,%ebx
		mov    %eax,data_15b9b4
		mov    %ecx,%eax
		mov    data_15b9b0,%edx
		add    %ebx,%ebx
		call   w_dos_read
		mov    data_15ba1e,%ebx
		mov    data_15ba1c,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    data_15b9c8,%edx
		mov    %ecx,%eax
		add    %ebx,%ebx
		call   w_dos_read
		mov    data_15ba20,%si
		mov    data_15ba1e,%ax
		xor    %ebx,%ebx
		imul   %eax,%esi
		jmp    jump_21a19
	jump_219fd:
		mov    data_15b9c8,%eax
		movswl %bx,%edx
		andb   $0x7f,0x1(%eax,%edx,2)
		mov    data_15b9c8,%eax
		mov    (%eax,%edx,2),%cx
		dec    %ecx
		inc    %ebx
		mov    %cx,(%eax,%edx,2)
	jump_21a19:
		cmp    %si,%bx
		jl     jump_219fd
		mov    %esi,%ebx
		jmp    jump_21a2f
	jump_21a22:
		mov    data_15b9c8,%edx
		inc    %ebx
		movw   $0xffff,(%edx,%eax,2)
	jump_21a2f:
		mov    data_15ba1c,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x6,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_21a22
		xor    %ebx,%ebx
		jmp    jump_21a69
	jump_21a51:
		movswl %bx,%edx
		mov    data_15b9b0,%eax
		mov    %edx,%ecx
		decw   (%eax,%ecx,2)
		mov    data_15b9b4,%eax
		inc    %ebx
		movb   $0x0,(%edx,%eax,1)
	jump_21a69:
		cmp    %si,%bx
		jl     jump_21a51
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %di,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		xor    %esi,%esi
		call   w_dos_lseek
		mov    $data_15b2b8,%edx
		mov    $0x300,%ebx
		mov    %ecx,%eax
		mov    %esi,0x30(%esp)
		call   w_dos_read
		mov    %si,data_15ba14
		jmp    jump_21af0
	jump_21ab1:
		movswl %si,%edx
		mov    %edx,%ecx
		shl    $0x2,%ecx
		mov    $0x14,%ebx
		add    %edx,%ecx
		mov    $data_f78f8,%edx
		shl    $0x2,%ecx
		movswl %di,%eax
		add    %ecx,%edx
		call   w_dos_read
		cmpw   $0x0,data_f78f8(%ecx)
		jle    jump_21aec
		mov    data_15ba14,%bx
		inc    %ebx
		inc    %esi
		mov    %bx,data_15ba14
	jump_21aec:
		incl   0x30(%esp)
	jump_21af0:
		mov    0x30(%esp),%eax
		cmp    0x28(%esp),%ax
		jl     jump_21ab1
		xor    %esi,%esi
		mov    %si,data_15ba12
		mov    %si,0x34(%esp)
		jmp    jump_21b4b
	jump_21b0b:
		movswl %si,%edx
		mov    %edx,%ecx
		shl    $0x2,%ecx
		mov    $0x14,%ebx
		add    %edx,%ecx
		mov    $data_1583d8,%edx
		shl    $0x2,%ecx
		movswl %di,%eax
		add    %ecx,%edx
		call   w_dos_read
		cmpw   $0x0,data_1583da(%ecx)
		jle    jump_21b46
		mov    data_15ba12,%dx
		inc    %edx
		inc    %esi
		mov    %dx,data_15ba12
	jump_21b46:
		incw   0x34(%esp)
	jump_21b4b:
		xor    %edx,%edx
		mov    0x32(%esp),%eax
		mov    data_8b128,%dx
		sar    $0x10,%eax
		cmp    %edx,%eax
		jl     jump_21b0b
		movswl %di,%eax
		call   w_dos_close
		push   $0x200
		push   $data_51422
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_21b9e
		mov    $data_5142e,%eax
		call   w_puts
		mov    %edx,%eax
		call   w_dos_close
		call   w_dos_getch
		call   func_19079
	jump_21b9e:
		mov    $data_15b2b8,%edx
		movswl %di,%ecx
		mov    $0x138,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		xor    %eax,%eax
		mov    data_15ba23,%al
		call   func_24017
		xor    %eax,%eax
		mov    data_15ba23,%al
		add    %eax,%eax
		cmpw   $0x0,data_56c8d(%eax)
		jne    jump_21be2
		cmpw   $0x0,data_56e89(%eax)
		je     jump_21bfb
	jump_21be2:
		xor    %eax,%eax
		mov    data_15ba23,%al
		mov    data_56c8d(,%eax,2),%dx
		mov    data_56e89(,%eax,2),%ax
		jmp    jump_21c09
	jump_21bfb:
		mov    data_15b5b8(%eax),%dx
		mov    data_15b7b4(%eax),%ax
	jump_21c09:
		sub    $0x6,%edx
		sub    $0x5,%eax
		mov    %dx,data_56bfc
		mov    %ax,data_56bfa
		xor    %eax,%eax
		mov    data_82949,%al
		cwtl
		call   func_2117f
		xor    %eax,%eax
		mov    data_15ba23,%al
		add    %eax,%eax
		cmpw   $0x0,data_56c8d(%eax)
		jne    jump_21c4a
		cmpw   $0x0,data_56e89(%eax)
		je     jump_21cbf
	jump_21c4a:
		xor    %eax,%eax
		mov    data_15ba23,%al
		add    %eax,%eax
		mov    data_15ba16,%dx
		mov    data_56c8d(%eax),%bx
		mov    data_15ba16,%cx
		sub    %ebx,%edx
		sub    %edx,%ecx
		mov    %cx,data_15ba16
		cmpb   $0x48,data_82949
		jne    jump_21c9e
		mov    data_15ba18,%dx
		mov    data_56e89(%eax),%bx
		mov    data_15ba18,%cx
		sub    %ebx,%edx
		sub    %edx,%ecx
		mov    %cx,data_15ba18
		jmp    jump_21d00
	jump_21c9e:
		mov    data_15ba18,%dx
		sub    data_56e89(%eax),%dx
		mov    data_15ba18,%di
		dec    %edx
		sub    %edx,%edi
		mov    %di,data_15ba18
		jmp    jump_21d00
	jump_21cbf:
		mov    data_15ba16,%dx
		mov    data_15b5b8(%eax),%cx
		mov    data_15ba16,%si
		sub    %ecx,%edx
		mov    data_15b7b4(%eax),%di
		sub    %edx,%esi
		mov    data_15ba18,%dx
		sub    %edi,%edx
		mov    data_15ba18,%ax
		sub    $0x2,%edx
		sub    %edx,%eax
		mov    %si,data_15ba16
		mov    %ax,data_15ba18
	jump_21d00:
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		push   $0xc8
		mov    %cx,data_56bf8
		mov    %cx,data_56bf6
		mov    %cx,data_543cc
		mov    $0x140,%ecx
		call   func_2b56c
		mov    $0x1,%eax
		call   func_20f7a
		mov    data_15b9cc,%edx
		push   %edx
		mov    $0x140,%ecx
		xor    %ebx,%ebx
		push   $0xc8
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b56c
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_20118
		add    $0x40,%esp
		jmp    jump_21e23


/*----------------------------------------------------------------*/
func_21d70:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x0,data_58cef
		jne    jump_21e03
		xor    %esi,%esi
		jmp    jump_21dfa
	jump_21d88:
		movswl %si,%edx
		mov    %edx,%ecx
		lea    (%edx,%edx,1),%eax
		shl    $0x2,%ecx
		mov    data_570cd(%eax),%edi
		add    %edx,%ecx
		sar    $0x10,%edi
		shl    $0x2,%ecx
		add    %edi,%edi
		mov    data_1583d8(%ecx,%edi,1),%ebx
		mov    data_1583d6(%ecx,%edi,1),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		mov    data_8b12a(,%ebx,4),%ebx
		mov    data_8b12a(,%edx,4),%edx
		mov    0xa(%ebx),%edi
		mov    0xa(%edx),%ebp
		mov    %edi,0xa(%edx)
		mov    %ebp,0xa(%ebx)
		incw   data_570cf(%eax)
		mov    data_570cd(%eax),%edx
		sar    $0x10,%edx
		mov    data_1583d8(%ecx,%edx,2),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jne    jump_21df9
		xor    %edx,%edx
		mov    %dx,data_570cf(%eax)
	jump_21df9:
		inc    %esi
	jump_21dfa:
		cmp    data_15ba12,%si
		jl     jump_21d88
	jump_21e03:
		mov    data_58cef,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,data_58cef
		cmp    $0x10,%ax
		jne    jump_21e22
		xor    %ebx,%ebx
		mov    %bx,data_58cef
	jump_21e22:
		pop    %ebp
	jump_21e23:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_21e29:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    $0x1,%edx
		mov    $0xb6,%ebx
		mov    $0x270f,%ecx
		mov    $0x120,%esi
		mov    $0xc8,%eax
		mov    %dx,0x10(%esp)
		mov    %bx,0x8(%esp)
		mov    %ecx,0xc(%esp)
		mov    %esi,0x1c(%esp)
		mov    %ecx,0x18(%esp)
		mov    data_15ba1c,%dx
		mov    %eax,(%esp)
		test   %dx,%dx
		jge    jump_21e84
		mov    $0xfffffff9,%esi
		mov    $0x138,%edi
		mov    %esi,0xc(%esp)
		mov    %edi,0x1c(%esp)
		jmp    jump_21e8a
	jump_21e84:
		jle    jump_21e8a
		mov    %esi,0xc(%esp)
	jump_21e8a:
		mov    data_15ba1a,%ax
		test   %ax,%ax
		jle    jump_21ea8
		mov    $0xfffffff1,%ecx
		mov    $0xd8,%esi
		mov    %ecx,0x18(%esp)
		mov    %esi,(%esp)
		jmp    jump_21eb2
	jump_21ea8:
		jge    jump_21eb2
		movl   $0xc8,0x18(%esp)
	jump_21eb2:
		mov    data_56bf4,%eax
		mov    data_56bf6,%ebp
		sar    $0x10,%eax
		sar    $0x10,%ebp
		sub    $0x10,%eax
		sub    $0x7,%ebp
		shl    $0x8,%eax
		mov    $0xfffffff0,%edi
		add    %eax,%ebp
		sar    $0x2,%eax
		mov    %edi,0x4(%esp)
		add    %eax,%ebp
	jump_21edc:
		mov    data_56bf8,%eax
		mov    0xe(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		dec    %eax
		add    %edx,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_56bfa,%edi
		mov    data_15b9b0,%ecx
		sar    $0x10,%edi
		add    %eax,%eax
		add    %edi,%edi
		add    %eax,%ecx
		mov    data_15b9c8,%edx
		add    %edi,%ecx
		add    %edx,%eax
		mov    0x18(%esp),%edx
		add    %eax,%edi
		mov    0x4(%esp),%eax
		mov    %ebp,%esi
		cmp    %dx,%ax
		je     jump_22045
		movl   $0xfffffff9,0x14(%esp)
		jmp    jump_22036
	jump_21f3b:
		mov    0x4(%esp),%eax
		cmp    (%esp),%ax
		jge    jump_21f9a
		mov    0x14(%esp),%eax
		cmp    0xc(%esp),%ax
		je     jump_21f9a
		mov    -0x2(%ecx),%edx
		sar    $0x10,%edx
		cmp    $0xffffffff,%edx
		jle    jump_21f82
		cmpw   $0x3e8,(%ecx)
		jge    jump_21f82
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_fa7d8,%edx
		shl    $0x7,%eax
		mov    data_15b9cc,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   func_2b5c0
		jmp    jump_21f9a
	jump_21f82:
		mov    -0x2(%ecx),%eax
		sar    $0x10,%eax
		cmp    $0xffffffff,%eax
		jne    jump_21f9a
		mov    data_15b9cc,%edx
		mov    %esi,%eax
		call   func_2b5e2
	jump_21f9a:
		add    $0x2,%ecx
		mov    (%edi),%bx
		add    $0x2,%edi
		test   %bx,%bx
		jl     jump_22028
		mov    0x14(%esp),%eax
		cmp    0xc(%esp),%ax
		je     jump_22028
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x2,%dl
		mov    %bx,data_82936(%eax)
		mov    data_56bf8,%bx
		mov    %dl,data_82935(%eax)
		mov    0x14(%esp),%edx
		add    %ebx,%edx
		mov    data_56bf6,%bx
		mov    %dx,data_82938(%eax)
		mov    0x4(%esp),%edx
		add    %ebx,%edx
		mov    %dx,data_8293a(%eax)
		mov    data_543ca,%eax
		sar    $0x10,%eax
		mov    0x8(%esp),%edx
		mov    %dx,data_83d84(,%eax,2)
		mov    data_543cc,%ax
		inc    %edx
		inc    %eax
		mov    %dx,0x8(%esp)
		mov    %ax,data_543cc
	jump_22028:
		mov    0x14(%esp),%ebx
		add    $0x18,%ebx
		add    $0x18,%esi
		mov    %ebx,0x14(%esp)
	jump_22036:
		mov    0x14(%esp),%eax
		cmp    0x1c(%esp),%ax
		jle    jump_21f3b
	jump_22045:
		mov    0x10(%esp),%ecx
		mov    0x4(%esp),%esi
		add    $0x1400,%ebp
		inc    %ecx
		add    $0x10,%esi
		mov    %cx,0x10(%esp)
		mov    %esi,0x4(%esp)
		cmp    $0x115,%si
		jl     jump_21edc
		mov    data_56bf6,%ax
		mov    data_15ba1a,%dx
		sub    %edx,%eax
		test   %dx,%dx
		jg     jump_220ab
		mov    data_56bfa,%di
		test   %di,%di
		jl     jump_220e9
		mov    %ax,data_56bf6
		cmp    $0x10,%ax
		jle    jump_220e9
		mov    %edi,%edx
		xor    %eax,%eax
		dec    %edx
		mov    %ax,data_56bf6
		mov    %dx,data_56bfa
		jmp    jump_220e9
	jump_220ab:
		mov    data_56bf8,%ebx
		mov    data_15ba1c,%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    $0xd,%ebx
		dec    %edx
		cmp    %edx,%ebx
		jge    jump_220e9
		mov    %ax,data_56bf6
		cwtl
		cmp    $0xfffffff0,%eax
		jge    jump_220e9
		mov    data_56bfa,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,data_56bf6
		mov    %si,data_56bfa
	jump_220e9:
		mov    data_56bf8,%ax
		mov    data_15ba1c,%bx
		add    %ebx,%eax
		test   %bx,%bx
		jle    jump_2212a
		mov    data_56bfc,%dx
		test   %dx,%dx
		jl     jump_22167
		mov    %ax,data_56bf8
		cmp    $0x18,%ax
		jle    jump_22167
		mov    %edx,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		mov    %bx,data_56bf8
		mov    %cx,data_56bfc
		jmp    jump_22167
	jump_2212a:
		mov    data_56bfa,%edx
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		add    $0xc,%edx
		cmp    %ebx,%edx
		jge    jump_22167
		mov    %ax,data_56bf8
		cwtl
		cmp    $0xffffffe8,%eax
		jge    jump_22167
		mov    data_56bfc,%di
		xor    %esi,%esi
		inc    %edi
		mov    %si,data_56bf8
		mov    %di,data_56bfc
	jump_22167:
		add    $0x20,%esp
		jmp    jump_21e22


/*----------------------------------------------------------------*/
func_2216f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		mov    %al,0x20(%esp)
		mov    $0x1,%ebx
		xor    %edx,%edx
		mov    $0x10,%ecx
		mov    %dx,0x14(%esp)
		mov    %bx,0x10(%esp)
		mov    %cx,0xc(%esp)
	jump_22197:
		movw   $0xfff9,0x1c(%esp)
	jump_2219e:
		cmpb   $0x5,0x20(%esp)
		jne    jump_2223b
		mov    0xa(%esp),%edi
		mov    0x1a(%esp),%esi
		mov    data_15b9cc,%edx
		mov    data_56bf6,%eax
		push   %edx
		sar    $0x10,%edi
		sar    $0x10,%esi
		sar    $0x10,%eax
		mov    data_56bf4,%edx
		push   $0x4
		sar    $0x10,%edx
		add    %esi,%eax
		add    %edi,%edx
		lea    0x17(%eax),%ebx
		lea    0xf(%edx),%ecx
		call   func_18303
		mov    data_56bfa,%eax
		mov    0x12(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		mov    data_56bf4,%edx
		add    %eax,%ebx
		mov    data_56bf6,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edi,%edx
		add    %esi,%eax
		call   func_1822d
		mov    data_56bf8,%eax
		mov    0xe(%esp),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		add    %eax,%ebx
		mov    data_56bf4,%eax
		sar    $0x10,%eax
		add    %edi,%eax
		lea    0x8(%eax),%edx
		mov    data_56bf6,%eax
		sar    $0x10,%eax
		add    %esi,%eax
		add    $0xc,%eax
		call   func_1822d
	jump_2223b:
		mov    data_56bf8,%edx
		mov    0xe(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9c4,%edx
		mov    data_56bfa,%ebx
		add    %eax,%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		add    %ebx,%eax
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_222b6
		cmpb   $0x4,0x20(%esp)
		jne    jump_222b6
		mov    0xa(%esp),%eax
		mov    data_15b9cc,%ebx
		mov    data_56bf4,%edx
		push   %ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		mov    0x1e(%esp),%ebx
		add    %eax,%edx
		mov    data_56bf6,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		push   $0x2
		add    %ebx,%eax
		lea    0xf(%edx),%ecx
		lea    0x17(%eax),%ebx
		call   func_18303
	jump_222b6:
		mov    0xe(%esp),%edx
		mov    data_56bf8,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %edx,0x4(%esp)
		add    %eax,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9c0,%edx
		mov    0x12(%esp),%ebp
		add    %edx,%eax
		mov    data_56bfa,%edx
		sar    $0x10,%ebp
		sar    $0x10,%edx
		add    %ebp,%edx
		cmpb   $0x0,(%edx,%eax,1)
		je     jump_223bd
		cmpb   $0x1,0x20(%esp)
		jne    jump_223bd
		mov    0xa(%esp),%esi
		mov    0x1a(%esp),%edi
		mov    data_15b9cc,%ecx
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		push   %ecx
		sar    $0x10,%esi
		sar    $0x10,%edx
		sar    $0x10,%edi
		sar    $0x10,%eax
		push   $0x3
		add    %esi,%edx
		add    %edi,%eax
		lea    0xf(%edx),%ecx
		lea    0x17(%eax),%ebx
		call   func_18303
		mov    data_56bf8,%eax
		mov    0x4(%esp),%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_15b9c0,%edx
		add    %eax,%edx
		mov    data_56bfa,%eax
		sar    $0x10,%eax
		add    %ebp,%eax
		add    %edx,%eax
		mov    (%eax),%dl
		cmp    $0xff,%dl
		jne    jump_22392
		mov    $data_5145e,%ebx
	jump_22376:
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		add    %edi,%eax
		call   func_18274
		jmp    jump_223bd
	jump_22392:
		cmp    $0xfe,%dl
		jne    jump_2239e
		mov    $data_51464,%ebx
		jmp    jump_22376
	jump_2239e:
		xor    %ebx,%ebx
		mov    data_56bf6,%eax
		mov    %dl,%bl
		sar    $0x10,%eax
		mov    data_56bf4,%edx
		dec    %ebx
		sar    $0x10,%edx
		add    %edi,%eax
		add    %esi,%edx
		call   func_1822d
	jump_223bd:
		mov    data_56bf8,%eax
		mov    0xe(%esp),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		lea    (%eax,%edi,1),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9bc,%edx
		add    %eax,%eax
		mov    0x12(%esp),%ebx
		add    %eax,%edx
		mov    data_56bfa,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		add    %ebx,%eax
		mov    %ebx,0x8(%esp)
		cmpw   $0x0,(%edx,%eax,2)
		je     jump_22494
		cmpb   $0x2,0x20(%esp)
		jne    jump_22494
		mov    0xa(%esp),%esi
		mov    0x1a(%esp),%ebp
		mov    data_15b9cc,%ecx
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		push   %ecx
		sar    $0x10,%esi
		sar    $0x10,%edx
		sar    $0x10,%ebp
		sar    $0x10,%eax
		push   $0x12
		add    %esi,%edx
		add    %ebp,%eax
		lea    0xf(%edx),%ecx
		lea    0x17(%eax),%ebx
		call   func_18303
		mov    data_56bf8,%eax
		sar    $0x10,%eax
		add    %eax,%edi
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edi,%eax
		mov    data_15b9bc,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    data_56bfa,%edx
		mov    0x8(%esp),%edi
		sar    $0x10,%edx
		add    %edi,%edx
		xor    %ebx,%ebx
		mov    (%eax,%edx,2),%bx
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %esi,%edx
		add    %ebp,%eax
		call   func_1822d
	jump_22494:
		mov    data_56bf8,%eax
		mov    0xe(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		lea    (%eax,%esi,1),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b8,%edx
		add    %eax,%eax
		mov    0x12(%esp),%ebx
		add    %edx,%eax
		mov    data_56bfa,%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		add    %ebx,%edx
		mov    (%eax,%edx,2),%cx
		mov    %ebx,(%esp)
		test   %cx,%cx
		je     jump_2256a
		cmpb   $0x3,0x20(%esp)
		jne    jump_2256a
		mov    0xa(%esp),%ebp
		mov    0x1a(%esp),%edi
		mov    data_15b9cc,%eax
		mov    data_56bf4,%edx
		push   %eax
		sar    $0x10,%ebp
		sar    $0x10,%edx
		sar    $0x10,%edi
		mov    data_56bf6,%eax
		push   $0x1c
		sar    $0x10,%eax
		add    %ebp,%edx
		add    %edi,%eax
		lea    0xf(%edx),%ecx
		lea    0x17(%eax),%ebx
		call   func_18303
		mov    data_56bf8,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %eax,%esi
		imul   %esi,%edx
		mov    data_15b9b8,%eax
		add    %edx,%edx
		add    %eax,%edx
		mov    data_56bfa,%eax
		mov    (%esp),%ebx
		sar    $0x10,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%edx,%eax,2),%bx
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ebp,%edx
		add    %edi,%eax
		call   func_1822d
	jump_2256a:
		xor    %esi,%esi
		mov    %si,0x18(%esp)
	jump_22571:
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		mov    data_56bfa,%edx
		add    %eax,%esi
		sar    $0x10,%edx
		shl    $0x3,%esi
		mov    0x12(%esp),%eax
		mov    data_19e163(%esi),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		add    %edx,%eax
		cmp    %eax,%ebx
		jne    jump_22728
		mov    0xe(%esp),%eax
		mov    data_56bf8,%ebx
		mov    data_19e165(%esi),%edx
		sar    $0x10,%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jne    jump_22728
		mov    data_19e149(%esi),%cl
		test   %cl,%cl
		je     jump_22728
		cmp    $0x68,%cl
		jne    jump_22688
		cmpb   $0x69,data_19e14a(%esi)
		jne    jump_22688
		cmpb   $0x72,data_19e14b(%esi)
		jne    jump_22688
		cmpb   $0x65,data_19e14c(%esi)
		jne    jump_22688
		cmpb   $0x64,data_19e14d(%esi)
		jne    jump_22688
		mov    0x1a(%esp),%ebp
		mov    data_15b9cc,%edi
		mov    data_56bf4,%edx
		mov    data_56bf6,%eax
		push   %edi
		sar    $0x10,%edx
		sar    $0x10,%ebp
		sar    $0x10,%eax
		mov    0xe(%esp),%edi
		push   $0x11
		sar    $0x10,%edi
		add    %ebp,%eax
		add    %edi,%edx
		lea    0x17(%eax),%ebx
		lea    0xf(%edx),%ecx
		call   func_18303
		mov    $0x10,%eax
		call   func_18136
		mov    data_56bf4,%eax
		sar    $0x10,%eax
		add    %edi,%eax
		lea    0x3(%eax),%edx
		mov    data_56bf6,%eax
		mov    $data_19e144,%ebx
		sar    $0x10,%eax
		add    %esi,%ebx
		add    %ebp,%eax
		add    $0xa,%ebx
		add    $0x5,%eax
		call   func_18274
		mov    $0x1,%eax
		call   func_18136
		jmp    jump_22728
	jump_22688:
		mov    0xa(%esp),%eax
		mov    data_15b9cc,%ecx
		mov    data_56bf4,%edx
		mov    data_56bf6,%ebx
		sar    $0x10,%eax
		sar    $0x10,%edx
		push   %ecx
		add    %eax,%edx
		mov    0x1e(%esp),%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		push   $0x29
		add    %ebx,%eax
		lea    0xf(%edx),%ecx
		lea    0x17(%eax),%ebx
		call   func_18303
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		add    %eax,%esi
		mov    data_19e15f(,%esi,8),%edx
		sar    $0x10,%edx
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    data_921ac,%bx
		shl    $0x4,%eax
		cmp    %ebx,%eax
		jge    jump_22728
		test   %eax,%eax
		jl     jump_22728
		mov    %edx,%eax
		shl    $0x6,%eax
		mov    data_921ae(%eax),%eax
		mov    data_56bf6,%di
		mov    0xa(%eax),%ebx
		mov    0xc(%esp),%eax
		add    %edi,%eax
		sub    $0x8,%eax
		mov    data_56bf8,%si
		movswl %ax,%edx
		mov    0x1c(%esp),%eax
		add    %esi,%eax
		mov    data_15b9cc,%ecx
		cwtl
		call   func_2b240
	jump_22728:
		mov    0x18(%esp),%edi
		inc    %edi
		mov    %di,0x18(%esp)
		cmp    $0xb5,%di
		jl     jump_22571
		mov    0x14(%esp),%edx
		mov    0x1c(%esp),%ebx
		inc    %edx
		add    $0x18,%ebx
		mov    %dx,0x14(%esp)
		mov    %bx,0x1c(%esp)
		cmp    $0x128,%bx
		jl     jump_2219e
		mov    0x10(%esp),%edi
		xor    %esi,%esi
		mov    0xc(%esp),%eax
		mov    %si,0x14(%esp)
		inc    %edi
		add    $0x10,%eax
		mov    %di,0x10(%esp)
		mov    %ax,0xc(%esp)
		cmp    $0xbf,%ax
		jl     jump_22197
		add    $0x24,%esp
		jmp    jump_21e22


/*----------------------------------------------------------------*/
func_2278f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		xor    %edx,%edx
		mov    $0x3842,%ebp
		mov    %dx,0x4(%esp)
		jmp    jump_2287e
	jump_227a9:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		mov    data_83d84(,%eax,2),%ax
		mov    0x4(%esp),%ecx
		mov    %ax,(%esp)
	jump_227c0:
		dec    %ecx
		test   %cx,%cx
		jl     jump_22866
		movswl %cx,%edx
		add    %edx,%edx
		mov    data_83d82(%edx),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    data_82935(%eax),%bl
		imul   %ebp,%ebx
		xor    %esi,%esi
		mov    data_82936(%eax),%si
		mov    data_840a6(%ebx,%esi,4),%ebx
		mov    data_82938(%eax),%eax
#if 1
    /* Workaround for invalid %ebx */
    xor    %ebx,%ebx
#else
		mov    0x6(%ebx),%ebx
#endif
		sar    $0x10,%eax
		sar    $0x10,%ebx
		lea    (%eax,%ebx,1),%edi
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		movzbl data_82935(%eax),%esi
		imul   %ebp,%esi
		xor    %ebx,%ebx
		mov    data_82936(%eax),%bx
		mov    data_840a6(%esi,%ebx,4),%ebx
		mov    data_82938(%eax),%eax
#if 1
    /* Workaround for invalid %ebx */
    xor    %ebx,%ebx
#else
		mov    0x6(%ebx),%ebx
#endif
		sar    $0x10,%eax
		sar    $0x10,%ebx
		add    %ebx,%eax
		cmp    %edi,%eax
		jge    jump_22866
		mov    data_83d84(%edx),%ax
		mov    %ax,data_83d86(%edx)
		jmp    jump_227c0
	jump_22866:
		movswl %cx,%eax
		mov    0x4(%esp),%ecx
		mov    (%esp),%edx
		inc    %ecx
		mov    %dx,data_83d86(,%eax,2)
		mov    %cx,0x4(%esp)
	jump_2287e:
		mov    0x4(%esp),%eax
		cmp    data_543cc,%ax
		jl     jump_227a9
		add    $0x8,%esp
		jmp    jump_21e22


/*----------------------------------------------------------------*/
func_22897:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    data_82947,%ax
		add    $0x9,%eax
		movswl %ax,%edx
		mov    data_82945,%ax
		mov    $data_56c00,%ebx
		sub    $0x8,%eax
		mov    data_15b9cc,%ecx
		cwtl
		mov    $0x2,%esi
		call   w_game_copy_ff
	jump_228c8:
		movswl %si,%ecx
		lea    -0x2(%ecx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		cmpb   $0x1,data_19e144(,%eax,8)
		jne    jump_22940
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		add    %ecx,%eax
		mov    data_82938(%eax),%dx
		cmp    $0xa,%dx
		jle    jump_22940
		cmp    $0x131,%dx
		jge    jump_22940
		mov    data_82938(%eax),%edx
		sar    $0x10,%edx
		cmp    $0xfffffffb,%edx
		jle    jump_22940
		cmpw   $0xc8,data_8293a(%eax)
		jge    jump_22940
		mov    $data_56c00,%ebx
		mov    data_15b9cc,%ecx
		mov    data_8293a(%eax),%dx
		mov    data_82938(%eax),%ax
		add    $0x9,%edx
		sub    $0x8,%eax
		movswl %dx,%edx
		cwtl
		call   w_game_copy_ff
	jump_22940:
		inc    %esi
		cmp    $0xb5,%si
		jle    jump_228c8
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2294d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		call   func_2278f
		xor    %edi,%edi
		jmp    jump_22a01
	jump_22961:
		add    %eax,%eax
		mov    data_83d84(%eax),%ax
		and    $0xffff,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		sub    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    data_82935(%edx),%al
		imul   $0x3842,%eax,%ebx
		xor    %eax,%eax
		mov    data_82936(%edx),%ax
		mov    data_840a6(%ebx,%eax,4),%eax
		cmpb   $0x1,data_82934(%edx)
		jne    jump_22a00
		mov    data_82938(%edx),%si
		mov    0x4(%eax),%cx
		mov    (%eax),%bx
		add    %ecx,%esi
		add    %esi,%ebx
		mov    data_8293a(%edx),%dx
		mov    %ebx,(%esp)
		add    0x6(%eax),%dx
		mov    0x2(%eax),%bx
		mov    (%esp),%ecx
		add    %edx,%ebx
		cmp    $0x1,%cx
		jle    jump_22a00
		cmp    $0x13e,%si
		jge    jump_22a00
		cmp    $0x1,%bx
		jle    jump_22a00
		cmp    $0xc5,%dx
		jge    jump_22a00
		cmpw   $0x64,0x2(%eax)
		jae    jump_22a00
		mov    data_15b9cc,%ecx
		movswl %dx,%edx
		mov    0xa(%eax),%ebx
		movswl %si,%eax
		call   func_2b240
	jump_22a00:
		inc    %edi
	jump_22a01:
		xor    %eax,%eax
		mov    data_543ca,%edx
		mov    %di,%ax
		sar    $0x10,%edx
		cmp    %edx,%eax
		jl     jump_22961
		mov    $data_54630,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %cx,data_543cc
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0x127,%eax
		mov    $data_55a99,%ebx
		mov    data_15b9cc,%ecx
		xor    %edx,%edx
		call   func_2b240
		add    $0x4,%esp
		jmp    jump_21e23


/*----------------------------------------------------------------*/
func_22a53:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		xor    %ebx,%ebx
		jmp    jump_22a78
	jump_22a5d:
		mov    %eax,%edx
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    (%esp),%edx
		mov    data_19ac33(%eax),%al
		xor    %ah,%ah
		cmp    %dx,%ax
		je     jump_22a88
		inc    %ebx
	jump_22a78:
		xor    %edx,%edx
		movswl %bx,%eax
		mov    data_1a00c8,%dx
		cmp    %edx,%eax
		jl     jump_22a5d
	jump_22a88:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    data_1a00c8,%ax
		cmp    %eax,%edx
		jge    jump_22aa0
		test   %ax,%ax
		jne    jump_22b33
	jump_22aa0:
		mov    (%esp),%ecx
		xor    %ebx,%ebx
		jmp    jump_22abf
	jump_22aa7:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_197713(%eax),%al
		xor    %ah,%ah
		cmp    %cx,%ax
		je     jump_22ace
		inc    %ebx
	jump_22abf:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    data_1a00c6,%ax
		cmp    %eax,%edx
		jl     jump_22aa7
	jump_22ace:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    data_1a00c6,%ax
		cmp    %eax,%edx
		jne    jump_22ae2
		test   %ax,%ax
		jne    jump_22b33
	jump_22ae2:
		movswl %bx,%edx
		mov    %edx,%esi
		shl    $0x4,%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    data_1a00c8,%dx
		mov    %edx,%eax
		shl    $0x4,%eax
		shl    $0x3,%esi
		add    %edx,%eax
		mov    $0x22,%ecx
		lea    data_197704(%esi),%esi
		lea    data_19ac24(,%eax,8),%edi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    data_1a00c8,%di
		mov    -0x2(%esp),%eax
		inc    %edi
		sar    $0x10,%eax
		mov    %di,data_1a00c8
		call   func_22d1b
		call   func_2363d
	jump_22b33:
		add    $0x4,%esp
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_22d1b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x0,data_1a00c6
		je     jump_23714
		xor    %esi,%esi
		jmp    jump_22d4c
	jump_22d34:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_197713(%eax),%al
		xor    %ah,%ah
		cmp    %bx,%ax
		je     jump_22d5b
		inc    %esi
	jump_22d4c:
		xor    %eax,%eax
		movswl %si,%edx
		mov    data_1a00c6,%ax
		cmp    %eax,%edx
		jl     jump_22d34
	jump_22d5b:
		xor    %eax,%eax
		movswl %si,%edx
		mov    data_1a00c6,%ax
		cmp    %eax,%edx
		je     jump_23714
		mov    %esi,%ebx
		jmp    jump_22d9b
	jump_22d72:
		lea    0x1(%edx),%esi
		mov    %esi,%eax
		shl    $0x4,%eax
		add    %eax,%esi
		mov    %edx,%eax
		shl    $0x4,%eax
		shl    $0x3,%esi
		add    %edx,%eax
		mov    $0x22,%ecx
		lea    data_197704(%esi),%esi
		lea    data_197704(,%eax,8),%edi
		inc    %ebx
		rep movsl %ds:(%esi),%es:(%edi)
	jump_22d9b:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    data_1a00c6,%ax
		cmp    %eax,%edx
		jl     jump_22d72
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,data_1a00c6
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_22e57:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %eax
		mov    %edx,%ecx
		mov    %edx,%ebx
		jmp    jump_22e85
	jump_22e60:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x0,data_15fd2c(%ebx,%eax,1)
		je     jump_22e8a
		inc    %ebx
	jump_22e85:
		cmp    $0x64,%ebx
		jl     jump_22e60
	jump_22e8a:
		cmp    $0x64,%ebx
		jne    jump_22f16
		xor    %ebx,%ebx
		jmp    jump_22ebc
	jump_22e97:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x0,data_15fd2c(%ebx,%eax,1)
		je     jump_22ec0
		inc    %ebx
	jump_22ebc:
		cmp    %ecx,%ebx
		jl     jump_22e97
	jump_22ec0:
		cmp    %ecx,%ebx
		jne    jump_22f10
		mov    $data_51493,%eax
		call   func_34fbe
		call   func_1189f
		call   func_1189f
		call   func_1189f
		mov    $0xffffffff,%eax
		jmp    jump_22f75
	jump_22ee7:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		inc    %ebx
		sub    %edx,%eax
		mov    data_15fd2c(%ebx,%eax,1),%dl
		mov    %dl,data_15fd2b(%ebx,%eax,1)
	jump_22f10:
		cmp    %ecx,%ebx
		jl     jump_22ee7
		jmp    jump_22f4a
	jump_22f16:
		mov    $0x63,%ebx
		jmp    jump_22f46
	jump_22f1d:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		dec    %ebx
		sub    %edx,%eax
		mov    data_15fd2c(%ebx,%eax,1),%dl
		mov    %dl,data_15fd2d(%ebx,%eax,1)
	jump_22f46:
		cmp    %ecx,%ebx
		jg     jump_22f1d
	jump_22f4a:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%cl
		sub    %edx,%eax
		inc    %cl
		mov    %cl,data_15fd2c(%ebx,%eax,1)
		mov    $0x1,%eax
	jump_22f75:
		add    $0x4,%esp
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_22fed:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,data_1a00c8
		xor    %edx,%edx
	jump_22ffd:
		xor    %eax,%eax
		mov    data_1a00cc,%bx
		mov    data_15baab(%edx),%al
		cmp    %bx,%ax
		jne    jump_23040
		mov    data_1a00c8,%ax
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		mov    $0x22,%ecx
		lea    data_15ba24(%edx),%esi
		lea    data_19ac24(,%eax,8),%edi
		mov    %ebx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		inc    %eax
		mov    %ax,data_1a00c8
	jump_23040:
		add    $0x88,%edx
		cmp    $0x4158,%edx
		jne    jump_22ffd
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_23053:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,data_1a00c6
		xor    %edx,%edx
	jump_23063:
		cmpb   $0x63,data_15baab(%edx)
		jne    jump_2309b
		mov    data_1a00c6,%ax
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		mov    $0x22,%ecx
		lea    data_15ba24(%edx),%esi
		lea    data_197704(,%eax,8),%edi
		mov    %ebx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		inc    %eax
		mov    %ax,data_1a00c6
	jump_2309b:
		add    $0x88,%edx
		cmp    $0x4158,%edx
		jne    jump_23063
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_230ae:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ebx,%ebx
		xor    %eax,%eax
		jmp    jump_230ef
	jump_230b9:
		xor    %ecx,%ecx
		mov    data_19ac33(%eax),%cl
		mov    data_1a00cc,%dl
		dec    %ecx
		mov    %dl,data_19acab(%eax)
		mov    %ecx,%edx
		shl    $0x4,%edx
		add    %ecx,%edx
		lea    data_19ac24(%eax),%esi
		mov    $0x22,%ecx
		lea    data_15ba24(,%edx,8),%edi
		add    $0x88,%eax
		inc    %ebx
		rep movsl %ds:(%esi),%es:(%edi)
	jump_230ef:
		xor    %edx,%edx
		mov    data_1a00c8,%dx
		cmp    %edx,%ebx
		jl     jump_230b9
		xor    %ebx,%ebx
		xor    %eax,%eax
		jmp    jump_23135
	jump_23102:
		movb   $0x63,data_19778b(%eax)
		xor    %edx,%edx
		mov    data_197713(%eax),%dl
		lea    -0x1(%edx),%ecx
		mov    %ecx,%edx
		shl    $0x4,%edx
		add    %ecx,%edx
		lea    data_197704(%eax),%esi
		mov    $0x22,%ecx
		lea    data_15ba24(,%edx,8),%edi
		add    $0x88,%eax
		inc    %ebx
		rep movsl %ds:(%esi),%es:(%edi)
	jump_23135:
		xor    %edx,%edx
		mov    data_1a00c6,%dx
		cmp    %edx,%ebx
		jl     jump_23102
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_23147:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		call   func_230ae
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		mov    data_19ff44,%edx
		mov    %edx,data_15fb7c(,%eax,4)
		mov    $data_514b4,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		call   w_dos_close
		push   $0x201
		push   $data_514b4
		call   w_dos_open
		mov    %eax,%ecx
		add    $0x8,%esp
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		jne    jump_231aa
		mov    $data_514c1,%eax
		call   w_puts
		mov    %ecx,%eax
		jmp    jump_232fe
	jump_231aa:
		mov    $data_52698,%edx
		mov    $0x1,%ebx
		call   w_dos_write
		mov    $data_1a00c4,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_1a00db,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_7d88c,%edx
		mov    $0x4e20,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_1a00cc,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    $data_15ba24,%ecx
		call   w_dos_write
		lea    0x4158(%ecx),%edi
	jump_23208:
		mov    $0x88,%ebx
		mov    %esi,%eax
		mov    %ecx,%edx
		add    $0x88,%ecx
		call   w_dos_write
		cmp    %edi,%ecx
		jne    jump_23208
		xor    %edi,%edi
		xor    %ebp,%ebp
	jump_23224:
		mov    %edi,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_2323c
	jump_2322c:
		mov    data_15fd2c(%eax),%cl
		inc    %eax
		dec    %cl
		inc    %edx
		mov    %cl,data_15fd2b(%eax)
	jump_2323c:
		xor    %ecx,%ecx
		mov    data_19763c(%ebx),%cx
		cmp    %ecx,%edx
		jl     jump_2322c
		add    $0x2,%edi
		add    $0x258,%ebp
		cmp    $0xc8,%edi
		jne    jump_23224
		mov    $data_15fd2c,%eax
		mov    $data_19763c,%ebp
		mov    $data_15fb7c,%ecx
		xor    %edi,%edi
		mov    %eax,0x4(%esp)
	jump_2326f:
		mov    $0x4,%ebx
		mov    %esi,%eax
		mov    %ecx,%edx
		call   w_dos_write
		mov    $0x2,%ebx
		lea    (%edi,%edi,1),%eax
		mov    %ebp,%edx
		mov    %eax,(%esp)
		mov    %esi,%eax
		call   w_dos_write
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x4(%esp),%edx
		mov    data_19763c(%eax),%bx
		mov    %esi,%eax
		add    $0x4,%ecx
		call   w_dos_write
		mov    0x4(%esp),%edx
		add    $0x2,%ebp
		add    $0x258,%edx
		inc    %edi
		mov    %edx,0x4(%esp)
		cmp    $0x64,%edi
		jl     jump_2326f
		xor    %edi,%edi
		xor    %ebp,%ebp
	jump_232c6:
		mov    %edi,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_232de
	jump_232ce:
		mov    data_15fd2c(%eax),%ch
		inc    %eax
		inc    %ch
		inc    %edx
		mov    %ch,data_15fd2b(%eax)
	jump_232de:
		xor    %ecx,%ecx
		mov    data_19763c(%ebx),%cx
		cmp    %ecx,%edx
		jl     jump_232ce
		add    $0x2,%edi
		add    $0x258,%ebp
		cmp    $0xc8,%edi
		jne    jump_232c6
		mov    %esi,%eax
	jump_232fe:
		call   w_dos_close
		add    $0x8,%esp
		pop    %ebp
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_23369:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		push   $0x200
		push   $data_514b4
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %ax,0x4(%esp)
		cmp    $0xffffffff,%edx
		jne    jump_233b0
		mov    $data_514f4,%eax
		call   w_puts
		call   w_dos_getch
		mov    %edx,%eax
		call   w_dos_close
		mov    $data_5148e,%eax
		call   func_18fd0
	jump_233b0:
		mov    0x2(%esp),%ecx
		mov    $0x1,%edx
		sar    $0x10,%ecx
		mov    %edx,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $data_1a00c4,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_1a00db,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_7d88c,%edx
		mov    $0x4e20,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_1a00cc,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    %dx,data_1a00c8
		mov    %dx,data_1a00c6
	jump_2341b:
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    $data_15ba24,%edx
		shl    $0x3,%eax
		add    %eax,%edx
		mov    0x2(%esp),%eax
		mov    $0x88,%ebx
		sar    $0x10,%eax
		inc    %ecx
		call   w_dos_read
		cmp    $0x7b,%cx
		jl     jump_2341b
		xor    %ecx,%ecx
		mov    %cx,(%esp)
	jump_2344d:
		mov    -0x2(%esp),%esi
		mov    0x2(%esp),%ecx
		sar    $0x10,%esi
		mov    $0x4,%ebx
		mov    %esi,%edx
		sar    $0x10,%ecx
		shl    $0x2,%edx
		mov    %ecx,%eax
		add    $data_15fb7c,%edx
		lea    (%esi,%esi,1),%edi
		call   w_dos_read
		mov    $data_19763c,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		add    %edi,%edx
		call   w_dos_read
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		xor    %ebx,%ebx
		shl    $0x3,%eax
		mov    data_19763c(%edi),%bx
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%esi
		sub    %edx,%eax
		mov    $data_15fd2c,%edx
		inc    %esi
		add    %eax,%edx
		mov    %ecx,%eax
		mov    %si,(%esp)
		call   w_dos_read
		cmp    $0x64,%si
		jl     jump_2344d
		xor    %esi,%esi
	jump_234c0:
		xor    %cl,%cl
		jmp    jump_234e7
	jump_234c4:
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    data_15fd2c(%ebx,%eax,1),%dl
		inc    %dl
		inc    %cl
		mov    %dl,data_15fd2c(%ebx,%eax,1)
	jump_234e7:
		movswl %si,%edx
		lea    (%edx,%edx,1),%eax
		xor    %ebx,%ebx
		mov    data_19763c(%eax),%ax
		mov    %cl,%bl
		and    $0xffff,%eax
		cmp    %eax,%ebx
		jl     jump_234c4
		inc    %esi
		cmp    $0x64,%si
		jl     jump_234c0
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		call   func_22fed
		call   func_23053
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		mov    data_15fb7c(,%eax,4),%eax
		mov    %eax,data_19ff44
		add    $0x8,%esp
		jmp    jump_23714


/*----------------------------------------------------------------*/
func_235a7:
/*----------------------------------------------------------------*/
#if 1
    call   w_game_cfg_setup
    ret
#endif
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x200
		push   $data_51534
		call   w_dos_open
		movswl %ax,%ecx
		add    $0x8,%esp
		cmp    $0xffffffff,%ecx
		jne    jump_235d0
		mov    $data_5153d,%eax
		call   w_puts
		jmp    jump_235e1
	jump_235d0:
		mov    $game_cfg_speed,%edx
		mov    $0xa,%ebx
		mov    %ecx,%eax
		call   w_dos_read
	jump_235e1:
		mov    %ecx,%eax
		call   w_dos_close
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_235ec:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    $data_51534,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		push   $data_51534
		call   w_dos_open
		movswl %ax,%ecx
		add    $0x8,%esp
		cmp    $0xffffffff,%ecx
		jne    jump_2362a
		mov    $data_51552,%eax
		call   w_puts
		jmp    jump_235e1
	jump_2362a:
		mov    $game_cfg_speed,%edx
		mov    $0xa,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		jmp    jump_235e1


/*----------------------------------------------------------------*/
func_2363d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8c,%esp
		xor    %edx,%edx
		mov    %dx,0x88(%esp)
		jmp    jump_236f4
	jump_23657:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    $0x22,%ecx
		mov    %esp,%edi
		lea    data_19ac24(,%eax,8),%esi
		mov    0x88(%esp),%ebx
	jump_23673:
		rep movsl %ds:(%esi),%es:(%edi)
		dec    %ebx
		test   %bx,%bx
		jl     jump_236c9
		mov    0x86(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		movswl %bx,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		shl    $0x4,%eax
		lea    (%ecx,%eax,1),%esi
		shl    $0x3,%edx
		shl    $0x3,%esi
		mov    data_19ac33(%edx),%al
		cmp    data_19ac33(%esi),%al
		jae    jump_236c9
		lea    0x1(%ecx),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		lea    data_19ac24(%esi),%esi
		mov    $0x22,%ecx
		lea    data_19ac24(,%eax,8),%edi
		jmp    jump_23673
	jump_236c9:
		movswl %bx,%edx
		inc    %edx
		mov    %edx,%eax
		mov    $0x22,%ecx
		shl    $0x4,%eax
		mov    0x88(%esp),%ebx
		add    %edx,%eax
		mov    %esp,%esi
		inc    %ebx
		lea    data_19ac24(,%eax,8),%edi
		mov    %bx,0x88(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
	jump_236f4:
		xor    %eax,%eax
		mov    0x86(%esp),%edx
		mov    data_1a00c8,%ax
		sar    $0x10,%edx
		cmp    %eax,%edx
		jl     jump_23657
		add    $0x8c,%esp
	jump_23714:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_237f0:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		and    $0xffff,%eax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    %bl,data_15baab(,%eax,8)
		call   func_22fed
		call   func_23053
		pop    %ebx
		ret
.data
data_23815:
		.string ".\\cstldata\\"
		.fill   0x12
data_23833:
		.fill   0x1b
data_2384e:
		.fill   0x1b
data_23869:
		.fill   0x1b
data_23884:
		.fill   0x1b
data_2389f:
		.fill   0x1b
data_238ba:
		.fill   0x1b
data_238d5:
		.fill   0x1b
data_238f0:
		.fill   0x1b
data_2390b:
		.fill   0x10
data_2391b:
		.fill   0x10
data_2392b:
		.fill   0x1b
data_23946:
		.fill   0x1b
data_23961:
		.fill   0x1b
data_2397c:
		.fill   0x1b
.text


/*----------------------------------------------------------------*/
func_23997:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    %al,0x30(%esp)
		mov    %dl,0x34(%esp)
		mov    $0x7,%ecx
		mov    %esp,%edi
		mov    $0x4,%eax
		mov    $data_23815,%esi
		mov    $0x100,%edx
		mov    $0x5,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_2c1c9
		push   $data_51867
		push   $0xa0
		push   $0x4
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    $data_5189f,%edx
		mov    data_15b9cc,%eax
		mov    %esp,%ebx
		call   func_2b44f
		mov    $data_518a5,%eax
		call   func_30bad
		mov    %esp,%eax
		mov    $data_518b5,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_23a23
		call   func_19079
	jump_23a23:
		mov    $0xb,%edx
	jump_23a28:
		movswl %dx,%eax
		mov    (%esp,%eax,1),%bl
		inc    %edx
		mov    %bl,data_1a00c3(%eax)
		cmp    $0x18,%dx
		jl     jump_23a28
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		mov    %eax,%esi
		cwtl
		add    $0x8,%esp
		cmp    $0xffffffff,%eax
		jne    jump_23a6f
		mov    %esp,%eax
		push   %eax
		push   $data_518c1
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		call   func_19079
	jump_23a6f:
		lea    0x28(%esp),%edx
		movswl %si,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x4,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		xor    %ecx,%ecx
		jmp    jump_23aaa
	jump_23a97:
		mov    $0x180,%edx
		mov    $0x1,%ebx
		movswl %si,%eax
		call   w_dos_lseek
		inc    %ecx
	jump_23aaa:
		cmp    0x28(%esp),%cx
		jl     jump_23a97
		lea    0x28(%esp),%edx
		mov    $0x2,%ebx
		movswl %si,%eax
		call   w_dos_read
		xor    %edi,%edi
		mov    $0x1,%ebp
		jmp    jump_23b08
	jump_23acb:
		lea    0x20(%esp),%edx
		movswl %si,%ecx
		mov    $0x4,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $0x2,%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_lseek
		mov    $0x2,%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_lseek
		mov    0x20(%esp),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		inc    %edi
		call   w_dos_lseek
	jump_23b08:
		cmp    0x28(%esp),%di
		jl     jump_23acb
		mov    $data_15ba20,%edx
		movswl %si,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    %esp,%edi
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    $data_518d1,%esi
		call   w_dos_read
		lea    0x24(%esp),%edx
		mov    %ecx,%eax
		mov    $0xa,%ebx
		call   w_dos_close
		xor    %eax,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x30(%esp),%al
		mov    %esp,%edi
		lea    0x24(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_23b68:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_23b84
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_23b68
	jump_23b84:
		pop    %edi
		cmpb   $0x0,0x34(%esp)
		jne    jump_23b95
		mov    %esp,%edi
		mov    $data_518dd,%esi
		jmp    jump_23b9c
	jump_23b95:
		mov    %esp,%edi
		mov    $data_518e2,%esi
	jump_23b9c:
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_23ba5:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_23bc1
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_23ba5
	jump_23bc1:
		pop    %edi
		mov    %esp,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %ax,0x2c(%esp)
		cmp    $0xffffffff,%edx
		jne    jump_23c0f
		mov    %esp,%eax
		push   %eax
		push   $data_518e7
		call   w_printf
		add    $0x8,%esp
		mov    %edx,%eax
		call   w_dos_close
		call   func_19079
	jump_23c0f:
		mov    0x2a(%esp),%ecx
		mov    $data_1a00ce,%edx
		sar    $0x10,%ecx
		mov    $0xd,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		cmpb   $0x0,0x34(%esp)
		jne    jump_23c6e
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		call   w_dos_malloc
		mov    %eax,data_15b9c4
	jump_23c6e:
		xor    %edi,%edi
		jmp    jump_23cad
	jump_23c72:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     jump_23c95
		cmp    data_15ba1e,%di
		jl     jump_23c95
		lea    -0x1(%ecx),%eax
		cmp    %eax,%edx
		je     jump_23c95
		sub    %ecx,%esi
		cmp    %esi,%ebx
		jl     jump_23ca3
	jump_23c95:
		mov    data_15b9c4,%eax
		movswl %di,%edx
		movb   $0x1,(%edx,%eax,1)
		jmp    jump_23cac
	jump_23ca3:
		mov    data_15b9c4,%eax
		movb   $0x0,(%ebx,%eax,1)
	jump_23cac:
		inc    %edi
	jump_23cad:
		mov    data_15ba1e,%ecx
		mov    data_15ba1c,%esi
		sar    $0x10,%ecx
		sar    $0x10,%esi
		imul   %ecx,%esi
		movswl %di,%ebx
		cmp    %esi,%ebx
		jl     jump_23c72
		mov    0x2a(%esp),%ecx
		mov    data_15b9c4,%edx
		sar    $0x10,%ecx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    data_15ba20,%ax
		imul   data_15ba1e,%ax
		mov    0x34(%esp),%dh
		mov    %ax,0x28(%esp)
		test   %dh,%dh
		jne    jump_23d2d
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_malloc
		mov    %eax,data_15b9c0
	jump_23d2d:
		xor    %edi,%edi
		jmp    jump_23d53
	jump_23d31:
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		cmp    %eax,%ebx
		jne    jump_23d49
		mov    data_15b9c0,%eax
		movb   $0xff,(%ebx,%eax,1)
		jmp    jump_23d52
	jump_23d49:
		mov    data_15b9c0,%eax
		movb   $0x0,(%ebx,%eax,1)
	jump_23d52:
		inc    %edi
	jump_23d53:
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %di,%ebx
		cmp    %edx,%ebx
		jl     jump_23d31
		mov    0x26(%esp),%ebx
		mov    0x2a(%esp),%ecx
		mov    data_15b9c0,%edx
		sar    $0x10,%ecx
		sar    $0x10,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		cmpb   $0x0,0x34(%esp)
		jne    jump_23dd2
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    %eax,data_15b9bc
	jump_23dd2:
		xor    %ebx,%ebx
		jmp    jump_23de3
	jump_23dd6:
		mov    data_15b9bc,%edx
		inc    %ebx
		movw   $0x0,(%edx,%eax,2)
	jump_23de3:
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_23dd6
		mov    0x2a(%esp),%ecx
		lea    (%edx,%edx,1),%ebx
		sar    $0x10,%ecx
		mov    data_15b9bc,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		cmpb   $0x0,0x34(%esp)
		jne    jump_23e5e
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    %eax,data_15b9b8
	jump_23e5e:
		xor    %ebx,%ebx
		jmp    jump_23e6f
	jump_23e62:
		mov    data_15b9b8,%edx
		inc    %ebx
		movw   $0x0,(%edx,%eax,2)
	jump_23e6f:
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_23e62
		mov    0x2a(%esp),%eax
		lea    (%edx,%edx,1),%ebx
		mov    data_15b9b8,%edx
		sar    $0x10,%eax
		xor    %edi,%edi
		call   w_dos_write
		mov    $0x2,%ebp
	jump_23ea6:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %cl,%cl
		shl    $0x3,%eax
		xor    %edx,%edx
		mov    %cl,data_19e144(%eax)
		mov    %dx,data_19e145(%eax)
		xor    %ch,%ch
		mov    %dx,data_19e147(%eax)
		mov    %ch,data_19e149(%eax)
		mov    %cx,data_19e15d(%eax)
		mov    %dx,data_19e15f(%eax)
		mov    %dx,data_19e161(%eax)
		mov    %dx,data_19e163(%eax)
		mov    %cx,data_19e165(%eax)
		mov    $data_19e144,%esi
		mov    %cl,data_19e169(%eax)
		mov    $0x1,%ebx
		mov    %cl,data_19e16a(%eax)
		add    %eax,%esi
		mov    %cl,data_19e16b(%eax)
		mov    0x2a(%esp),%ecx
		mov    %dx,data_19e167(%eax)
		sar    $0x10,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   w_dos_write
		lea    0x1(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x3(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		mov    $0x14,%ebx
		lea    0x5(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_write
		lea    0x19(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x1b(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x1d(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x1f(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x21(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		lea    0x23(%esi),%edx
		mov    %ecx,%eax
		mov    %ebp,%ebx
		call   w_dos_write
		mov    $0x1,%ebx
		lea    0x25(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		lea    0x26(%esi),%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $0x1,%ebx
		lea    0x27(%esi),%edx
		mov    %ecx,%eax
		inc    %edi
		call   w_dos_write
		cmp    $0xaa,%di
		jl     jump_23ea6
		xor    %esi,%esi
	jump_23fd5:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    0x2a(%esp),%ecx
		shl    $0x2,%eax
		mov    $0x16,%ebx
		sub    %edx,%eax
		mov    $data_19fbd4,%edx
		add    %eax,%eax
		sar    $0x10,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %esi
		call   w_dos_write
		cmp    $0x28,%si
		jl     jump_23fd5
		mov    %ecx,%eax
		call   w_dos_close
		add    $0x38,%esp
	jump_24011:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_24017:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    %al,0x30(%esp)
		mov    %esp,%edi
		lea    0x20(%esp),%edx
		mov    $0xa,%ebx
		mov    $data_518d1,%esi
		movzbl %al,%ebp
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %ebp,%eax
		mov    %esp,%edi
		lea    0x20(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_24050:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2406c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_24050
	jump_2406c:
		pop    %edi
		mov    %esp,%edi
		mov    $data_518dd,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_2407d:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_24099
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_2407d
	jump_24099:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_240f2
		mov    %esp,%eax
		push   %eax
		push   $data_518c1
		call   w_printf
		add    $0x8,%esp
		mov    %edx,%eax
		call   w_dos_close
		call   w_dos_getch
		cmpb   $0x1,data_54040
		jne    jump_240eb
		mov    %ebp,%eax
		xor    %edx,%edx
		call   func_23997
		call   func_19079
		jmp    jump_240f2
	jump_240eb:
		xor    %eax,%eax
		call   w_dos_exit
	jump_240f2:
		mov    $0xd,%edx
		movswl %di,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		call   w_dos_malloc
		mov    data_15ba1e,%ebx
		mov    %eax,%edx
		mov    %eax,data_15b9c4
		mov    data_15ba1c,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		xor    %ebx,%ebx
		jmp    jump_24178
	jump_24167:
		mov    data_15b9c4,%edx
		add    %edx,%eax
		cmpb   $0x1,(%eax)
		je     jump_24177
		movb   $0x0,(%eax)
	jump_24177:
		inc    %ebx
	jump_24178:
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_24167
		mov    $data_15ba20,%edx
		movswl %di,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_15ba20,%ax
		imul   data_15ba1e,%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		mov    %eax,data_15b9c0
		mov    %ecx,%eax
		mov    $0xffffffff,%esi
		call   w_dos_read
		xor    %ecx,%ecx
		jmp    jump_2422f
	jump_241e7:
		xor    %eax,%eax
		jmp    jump_24224
	jump_241eb:
		mov    data_15ba1e,%ebx
		movswl %cx,%edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_15b9c0,%ebx
		add    %edx,%ebx
		movswl %ax,%edx
		cmpb   $0xff,(%edx,%ebx,1)
		jne    jump_24223
		xor    %edx,%edx
		mov    0x30(%esp),%dl
		mov    %ax,data_15b5b8(,%edx,2)
		mov    %si,data_15b7b4(,%edx,2)
		jmp    jump_2422d
	jump_24223:
		inc    %eax
	jump_24224:
		cmp    data_15ba20,%ax
		jl     jump_241eb
	jump_2422d:
		inc    %esi
		inc    %ecx
	jump_2422f:
		cmp    data_15ba1e,%cx
		jl     jump_241e7
		mov    $data_15ba20,%edx
		movswl %di,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    data_15ba1e,%ebx
		mov    %eax,%edx
		mov    %eax,data_15b9bc
		mov    data_15ba1c,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    %ecx,%eax
		add    %ebx,%ebx
		call   w_dos_read
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		add    %eax,%eax
		call   w_dos_malloc
		mov    data_15ba1e,%ebx
		mov    %eax,%edx
		mov    %eax,data_15b9b8
		mov    data_15ba1c,%eax
		sar    $0x10,%ebx
		sar    $0x10,%eax
		imul   %eax,%ebx
		mov    %ecx,%eax
		add    %ebx,%ebx
		xor    %esi,%esi
		call   w_dos_read
	jump_242ff:
		movswl %si,%edx
		mov    %edx,%ecx
		shl    $0x2,%ecx
		mov    $0x28,%ebx
		add    %edx,%ecx
		mov    $data_19e144,%edx
		shl    $0x3,%ecx
		movswl %di,%eax
		add    %ecx,%edx
		call   w_dos_read
		cmpb   $0x1,data_19e16a(%ecx)
		jae    jump_24330
		movb   $0x1,data_19e16a(%ecx)
	jump_24330:
		inc    %esi
		cmp    $0xaa,%si
		jl     jump_242ff
		xor    %esi,%esi
	jump_2433a:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $0x16,%ebx
		sub    %edx,%eax
		mov    $data_19fbd4,%edx
		add    %eax,%eax
		movswl %di,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %esi
		call   w_dos_read
		cmp    $0x28,%si
		jl     jump_2433a
		mov    %ecx,%eax
		call   w_dos_close
		xor    %eax,%eax
		mov    0x30(%esp),%al
		call   func_244df
		cmpb   $0x0,data_5ec8d
		jne    jump_243ab
		call   func_nullsub_1
		xor    %eax,%eax
		call   func_20f7a
		call   func_23369
		mov    $data_518f8,%eax
		mov    $0x1,%cl
		call   w_dos_unlink
		call   func_17eb7
		mov    %cl,data_5ec8d
	jump_243ab:
		xor    %ecx,%ecx
		mov    %cx,0x28(%esp)
		mov    $0x3e8,%ebp
		jmp    jump_244bf
	jump_243bc:
		xor    %ecx,%ecx
		mov    %cx,0x24(%esp)
		jmp    jump_244a2
	jump_243c8:
		mov    data_15ba1e,%edi
		mov    %ecx,%eax
		sar    $0x10,%edi
		imul   %edi,%eax
		mov    0x26(%esp),%esi
		mov    data_15b9bc,%edx
		sar    $0x10,%esi
		add    %eax,%eax
		add    %esi,%esi
		add    %edx,%eax
		lea    (%eax,%esi,1),%ebx
		mov    (%ebx),%bx
		and    $0xffff,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		add    $0x258,%eax
		mov    %ebx,%edx
		mov    %ax,0x2c(%esp)
		sar    $0x1f,%edx
		mov    %ebx,%eax
		idiv   %ebp
		cmp    $0x1f4,%edx
		jl     jump_2449d
		mov    0x2a(%esp),%ebx
		sar    $0x10,%ebx
		lea    -0x258(%ebx),%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    data_7d954,%dl
		cmp    %edx,%eax
		jg     jump_2449d
		lea    0x1(%ecx),%eax
		imul   %edi,%eax
		mov    data_7d88c(%ebx),%ch
		add    %eax,%eax
		test   %ch,%ch
		je     jump_24463
		mov    data_15b9c8,%edx
		mov    data_8b128,%bx
		add    %edx,%eax
		dec    %ebx
		jmp    jump_24475
	jump_24463:
		mov    data_15b9c8,%edx
		mov    data_8b128,%bx
		add    %edx,%eax
		sub    $0x2,%ebx
	jump_24475:
		mov    %bx,(%esi,%eax,1)
		mov    0x22(%esp),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		mov    data_15b9c4,%eax
		add    %edx,%eax
		mov    0x26(%esp),%edx
		sar    $0x10,%edx
		movb   $0x1,(%edx,%eax,1)
	jump_2449d:
		incw   0x24(%esp)
	jump_244a2:
		mov    data_15ba1c,%eax
		mov    0x22(%esp),%ecx
		sar    $0x10,%eax
		sar    $0x10,%ecx
		dec    %eax
		cmp    %eax,%ecx
		jl     jump_243c8
		incw   0x28(%esp)
	jump_244bf:
		mov    0x28(%esp),%eax
		cmp    data_15ba20,%ax
		jl     jump_243bc
		call   func_24646
		add    $0x34,%esp
	jump_244d8:
		pop    %ebp
	jump_244d9:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_244df:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x24,%esp
		mov    %esp,%edi
		mov    $data_518d1,%esi
		lea    0x20(%esp),%edx
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		and    $0xff,%eax
		mov    %esp,%edi
		lea    0x20(%esp),%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_24513:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2452f
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_24513
	jump_2452f:
		pop    %edi
		mov    %esp,%edi
		mov    $data_51905,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_24540:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2455c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_24540
	jump_2455c:
		pop    %edi
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		mov    %eax,%edi
		cwtl
		add    $0x8,%esp
		cmp    $0xffffffff,%eax
		jne    jump_24607
		call   w_dos_close
		cmpb   $0x1,data_54040
		jne    jump_2463e
		push   $0x200
		push   $data_5190a
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%ecx
		cmp    $0xffffffff,%edx
		jne    jump_245c4
		mov    $data_51916,%eax
		call   w_puts
		mov    %edx,%eax
		call   w_dos_close
		call   w_dos_getch
		call   func_19079
	jump_245c4:
		mov    $data_15b2b8,%edx
		movswl %cx,%ecx
		mov    $0x11d,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		mov    $0xff,%ebx
		call   w_dos_close
		xor    %edx,%edx
		mov    $data_15b2b8,%eax
		call   func_20118
		mov    %esp,%eax
		push   %eax
		push   $data_518c1
		call   w_printf
		add    $0x8,%esp
		call   w_dos_getch
		jmp    jump_2463e
	jump_24607:
		xor    %esi,%esi
	jump_24609:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $0x16,%ebx
		sub    %edx,%eax
		mov    $data_19fbd4,%edx
		add    %eax,%eax
		movswl %di,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %esi
		call   w_dos_read
		cmp    $0x28,%si
		jl     jump_24609
		mov    %ecx,%eax
		call   w_dos_close
	jump_2463e:
		add    $0x24,%esp
		jmp    jump_244d9


/*----------------------------------------------------------------*/
func_24646:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x8,%esp
		xor    %edx,%edx
		mov    %dx,0x4(%esp)
		jmp    jump_24672
	jump_24657:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac33(,%eax,8),%al
		cmp    data_f30b7,%al
		je     jump_24685
		incw   0x4(%esp)
	jump_24672:
		xor    %eax,%eax
		mov    0x2(%esp),%edx
		mov    data_1a00c8,%ax
		sar    $0x10,%edx
		cmp    %eax,%edx
		jl     jump_24657
	jump_24685:
		movw   $0x2,0x4(%esp)
	jump_2468c:
		mov    0x2(%esp),%ebx
		sar    $0x10,%ebx
		lea    -0x2(%ebx),%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		add    %eax,%esi
		shl    $0x3,%esi
		cmpb   $0x1,data_19e144(%esi)
		jne    jump_24719
		mov    data_19e161(%esi),%ax
		shl    $0x4,%eax
		cwtl
		mov    $0x4,%ecx
		push   %eax
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_1a51d
		cmpb   $0x0,data_19e16b(%esi)
		ja     jump_24719
		mov    data_15ba1e,%di
		cmp    data_19e167(%esi),%di
		jle    jump_24719
		mov    data_15ba20,%dx
		cmp    data_19e165(%esi),%dx
		jle    jump_24719
		mov    data_19e165(%esi),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b4,%edx
		add    %eax,%edx
		mov    data_19e163(%esi),%eax
		sar    $0x10,%eax
		add    %edx,%eax
		mov    0x4(%esp),%dl
		mov    %dl,(%eax)
	jump_24719:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		sub    $0x2,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		shl    $0x3,%edx
		cmpb   $0x68,data_19e149(%edx)
		jne    jump_248c9
		cmpb   $0x69,data_19e14a(%edx)
		jne    jump_248c9
		cmpb   $0x72,data_19e14b(%edx)
		jne    jump_248c9
		cmpb   $0x65,data_19e14c(%edx)
		jne    jump_248c9
		mov    data_19e14d(%edx),%al
		cmp    $0x64,%al
		je     jump_248c9
		mov    %al,(%esp)
		mov    data_19e14e(%edx),%al
		xor    %ah,%ah
		mov    %al,0x1(%esp)
		mov    data_19e14f(%edx),%al
		mov    %ah,0x3(%esp)
		mov    %al,0x2(%esp)
		mov    %esp,%eax
		call   func_3b155
		movswl %ax,%ebx
		mov    %eax,%esi
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		cmpb   $0xa,data_15baab(,%eax,8)
		je     jump_247df
		xor    %bh,%bh
		mov    %bh,data_19e144(%edx)
		mov    data_15ba1e,%eax
		mov    data_19e145(%edx),%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		imul   %ebx,%eax
		mov    data_15b9b4,%ebx
		add    %eax,%ebx
		mov    data_19e143(%edx),%eax
		sar    $0x10,%eax
		movb   $0x0,(%ebx,%eax,1)
		jmp    jump_24b4e
	jump_247df:
		xor    %ecx,%ecx
		jmp    jump_24841
	jump_247e3:
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		mov    data_19ac33(,%eax,8),%al
		xor    %ah,%ah
		cmp    %ax,%si
		jne    jump_24840
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %bh,%bh
		mov    %bh,data_19e144(,%eax,8)
		mov    data_15ba1e,%edx
		mov    data_19e145(,%eax,8),%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %ebx,%edx
		movb   $0x0,(%edx,%eax,1)
		jmp    jump_24850
	jump_24840:
		inc    %ecx
	jump_24841:
		xor    %eax,%eax
		movswl %cx,%ebx
		mov    data_1a00c8,%ax
		cmp    %eax,%ebx
		jl     jump_247e3
	jump_24850:
		xor    %ecx,%ecx
		jmp    jump_248b4
	jump_24854:
		mov    %eax,%ebx
		shl    $0x4,%eax
		add    %ebx,%eax
		mov    data_197713(,%eax,8),%al
		xor    %ah,%ah
		cmp    %ax,%si
		jne    jump_248b3
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		sub    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_19e145(,%eax,8),%ebx
		mov    data_15ba1e,%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		imul   %edx,%ebx
		xor    %cl,%cl
		mov    %cl,data_19e144(,%eax,8)
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9b4,%edx
	jump_248a6:
		sar    $0x10,%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		jmp    jump_24b4e
	jump_248b3:
		inc    %ecx
	jump_248b4:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    data_1a00c6,%dx
		cmp    %edx,%eax
		jl     jump_24854
		jmp    jump_24b4e
	jump_248c9:
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		sub    $0x2,%eax
		mov    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		shl    $0x3,%edx
		cmpb   $0x68,data_19e149(%edx)
		jne    jump_24b4e
		cmpb   $0x69,data_19e14a(%edx)
		jne    jump_24b4e
		cmpb   $0x72,data_19e14b(%edx)
		jne    jump_24b4e
		cmpb   $0x65,data_19e14c(%edx)
		jne    jump_24b4e
		cmpb   $0x64,data_19e14d(%edx)
		jne    jump_24b4e
		mov    data_19e14e(%edx),%al
		mov    %al,(%esp)
		mov    data_19e14f(%edx),%al
		mov    %al,0x1(%esp)
		mov    data_19e150(%edx),%al
		mov    %al,0x2(%esp)
		xor    %al,%al
		mov    %al,0x3(%esp)
		mov    %esp,%eax
		xor    %edx,%edx
		call   func_3b155
		mov    %eax,%ecx
		jmp    jump_24964
	jump_2494e:
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		mov    data_197713(,%eax,8),%al
		xor    %ah,%ah
		cmp    %cx,%ax
		je     jump_24973
		inc    %edx
	jump_24964:
		xor    %eax,%eax
		movswl %dx,%ebx
		mov    data_1a00c6,%ax
		cmp    %eax,%ebx
		jl     jump_2494e
	jump_24973:
		xor    %eax,%eax
		movswl %dx,%ebx
		mov    data_1a00c6,%ax
		cmp    %eax,%ebx
		jne    jump_249c4
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_15ba1e,%ebx
		mov    data_19e145(,%eax,8),%edx
		sar    $0x10,%ebx
		sar    $0x10,%edx
		imul   %ebx,%edx
		xor    %cl,%cl
		mov    %cl,data_19e144(,%eax,8)
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9b4,%ebx
		jmp    jump_248a6
	jump_249c4:
		mov    %edx,%esi
		xor    %edx,%edx
		jmp    jump_249ee
	jump_249ca:
		movswl %si,%ecx
		mov    %ecx,%eax
		shl    $0x4,%eax
		add    %eax,%ecx
		mov    %ebx,%eax
		shl    $0x4,%eax
		shl    $0x3,%ecx
		add    %ebx,%eax
		mov    data_197713(%ecx),%bl
		cmp    data_19ac33(,%eax,8),%bl
		je     jump_249fd
		inc    %edx
	jump_249ee:
		xor    %eax,%eax
		movswl %dx,%ebx
		mov    data_1a00c8,%ax
		cmp    %eax,%ebx
		jl     jump_249ca
	jump_249fd:
		xor    %eax,%eax
		movswl %dx,%edx
		mov    data_1a00c8,%ax
		cmp    %eax,%edx
		je     jump_24a57
		mov    0x2(%esp),%edx
		sar    $0x10,%edx
		sub    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %bl,%bl
		mov    data_19e145(,%eax,8),%edx
		mov    %bl,data_19e144(,%eax,8)
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9b4,%ebx
		sar    $0x10,%eax
		add    %ebx,%edx
		movb   $0x0,(%edx,%eax,1)
		jmp    jump_24b4e
	jump_24a57:
		movswl %si,%edx
		mov    %edx,%ebx
		mov    0x2(%esp),%eax
		shl    $0x4,%ebx
		sar    $0x10,%eax
		add    %edx,%ebx
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%ebx
		shl    $0x3,%eax
		mov    data_197765(%ebx),%dx
		mov    %dx,data_19e161(%eax)
		xor    %dl,%dl
		mov    $0x1,%dh
		mov    %dl,data_19e16b(%eax)
		mov    %dh,data_19e144(%eax)
		mov    data_19e145(%eax),%edx
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		dec    %edx
		imul   %ebx,%edx
		mov    data_15b9c4,%ecx
		add    %edx,%ecx
		mov    data_19e143(%eax),%edx
		sar    $0x10,%edx
		cmpb   $0x1,(%ecx,%edx,1)
		jne    jump_24b22
		mov    data_19e165(%eax),%edx
		sar    $0x10,%edx
		imul   %edx,%ebx
		mov    data_15b9b4,%edx
		add    %ebx,%edx
		mov    data_19e163(%eax),%ebx
		sar    $0x10,%ebx
		movb   $0x0,(%edx,%ebx,1)
		mov    data_19e147(%eax),%bx
		mov    data_19e165(%eax),%edx
		inc    %ebx
		sar    $0x10,%edx
		mov    %bx,data_19e147(%eax)
		mov    data_15ba1e,%ebx
		inc    %edx
		sar    $0x10,%ebx
		imul   %ebx,%edx
		mov    data_19e163(%eax),%eax
		mov    data_15b9b4,%ebx
		sar    $0x10,%eax
		add    %ebx,%edx
		add    %edx,%eax
		mov    0x4(%esp),%dl
		mov    %dl,(%eax)
	jump_24b22:
		mov    0x2(%esp),%ebx
		sar    $0x10,%ebx
		lea    -0x2(%ebx),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_19e161(,%eax,8),%ax
		shl    $0x4,%eax
		cwtl
		mov    $0x4,%ecx
		push   %eax
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_1a51d
	jump_24b4e:
		mov    0x4(%esp),%ecx
		inc    %ecx
		mov    %cx,0x4(%esp)
		cmp    $0xb5,%cx
		jle    jump_2468c
		add    $0x8,%esp
		jmp    jump_244d9


/*----------------------------------------------------------------*/
func_24ba4:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %al,0x4(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		push   $0x200
		push   $data_51933
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    %eax,%edx
		cmp    $0xffffffff,%ecx
		jne    jump_24beb
		mov    $data_51940,%eax
		call   w_puts
		call   w_dos_getch
		mov    %ecx,%eax
		call   w_dos_close
		call   func_19079
	jump_24beb:
		movswl %dx,%ecx
		xor    %ebx,%ebx
		mov    $0x80,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		xor    %eax,%eax
		mov    0x4(%esp),%al
		movswl %ax,%edx
		mov    $0x1,%ebx
		shl    $0x2,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    %esp,%edx
		mov    $0x4,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		add    $0x4,%edx
		call   w_dos_lseek
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    %edi,%edx
		call   w_dos_read
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    %ebp,%edx
		call   w_dos_read
		mov    $0x4,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x36b0,%ebx
		mov    %ecx,%eax
		mov    %esi,%edx
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		call   func_2b206
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_24c7f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %al,0x4(%esp)
		mov    %edx,%esi
		push   $0x200
		push   $data_5195a
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    %eax,%edx
		cmp    $0xffffffff,%ecx
		jne    jump_24cc2
		mov    $data_51967,%eax
		call   w_puts
		call   w_dos_getch
		mov    %ecx,%eax
		call   w_dos_close
		call   func_19079
	jump_24cc2:
		movswl %dx,%ecx
		xor    %ebx,%ebx
		mov    $0x80,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		xor    %eax,%eax
		mov    0x4(%esp),%al
		movswl %ax,%edx
		mov    $0x1,%ebx
		shl    $0x2,%edx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    %esp,%edx
		mov    $0x4,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    (%esp),%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		add    $0x4,%edx
		call   w_dos_lseek
		mov    $0x2,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x4,%edx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		mov    $0x2710,%ebx
		mov    %ecx,%eax
		mov    %esi,%edx
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		call   func_2b206
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_24d5c:
/*----------------------------------------------------------------*/
		and    $0xff,%eax
		sar    $0x7,%eax
		cmp    $0x1,%eax
		sete   %al
		and    $0xff,%eax
		ret


/*----------------------------------------------------------------*/
func_24d70:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
	jump_24d78:
		cmp    %ebx,%edx
		jge    jump_24d97
		lea    (%ecx,%edx,1),%eax
		mov    (%eax),%al
		and    $0xff,%eax
		call   func_24d5c
		test   %eax,%eax
		je     jump_24d94
		add    $0x2,%edx
		jmp    jump_24d78
	jump_24d94:
		inc    %edx
		jmp    jump_24d78
	jump_24d97:
		inc    %ebx
		cmp    %ebx,%edx
		sete   %al
		and    $0xff,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_24da5:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %eax,%ecx
		shl    $0x2,%ecx
		sub    %eax,%ecx
		shl    $0x2,%ecx
		add    %eax,%ecx
		xor    %ebx,%ebx
		mov    data_82935(%ecx),%bl
		imul   $0x3842,%ebx,%ebx
		xor    %eax,%eax
		mov    data_82936(%ecx),%ax
		mov    data_840a6(%ebx,%eax,4),%ebx
		mov    data_82936(%ecx),%edx
		mov    0x2(%ebx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    (%edx,%eax,1),%esi
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    data_82938(%ecx),%edx
		add    %eax,%esi
		mov    0x4(%ebx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    (%edx,%eax,1),%ecx
		xor    %edx,%edx
		mov    0x2(%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		add    %eax,%ecx
		cmp    $0xa0,%esi
		jge    jump_24e8c
		cmp    $0x1,%edi
		jne    jump_24e8c
		mov    $0x2,%edx
		xor    %eax,%eax
		mov    data_15b9cc,%ebp
		call   func_2b81d
		lea    0x4(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		mov    $data_5e4f9,%edi
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    0x2(%ebx),%dx
		add    %eax,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    (%ebx),%dx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    $0x5,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
	jump_24e7d:
		call   func_2b240
		mov    $0x50,%eax
		jmp    jump_24011
	jump_24e8c:
		cmp    $0xa0,%esi
		jl     jump_24ee7
		cmp    $0x1,%edi
		jne    jump_24ee7
		mov    $0x2,%edx
		xor    %eax,%eax
		mov    data_15b9cc,%ebp
		call   func_2b81d
		lea    0x6(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		mov    $data_5e4f9,%edi
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    0x2(%ebx),%dx
		add    %eax,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		add    %ecx,%eax
		lea    -0x5(%eax),%edx
		xor    %eax,%eax
		mov    (%ebx),%ax
		mov    %ebp,%ecx
		sub    %eax,%esi
		mov    %edi,%ebx
		mov    %esi,%eax
		jmp    jump_24e7d
	jump_24ee7:
		cmp    $0xa0,%esi
		jge    jump_24f51
		test   %edi,%edi
		jne    jump_24f51
		mov    $0x2,%edx
		xor    %eax,%eax
		mov    data_15b9cc,%edi
		call   func_2b81d
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		mov    $data_5e4f9,%ebp
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    0x2(%ebx),%dx
		add    %eax,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    (%ebx),%dx
		sub    %eax,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ebp,%ebx
		mov    %ecx,%edx
		add    %esi,%eax
		mov    %edi,%ecx
	jump_24f42:
		call   func_2b240
		mov    $0x69,%eax
		jmp    jump_24011
	jump_24f51:
		cmp    $0xa0,%esi
		jl     jump_24faa
		test   %edi,%edi
		jne    jump_24faa
		mov    $0x2,%edx
		xor    %eax,%eax
		mov    data_15b9cc,%ebp
		call   func_2b81d
		lea    0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x3,%eax
		mov    $data_5e4f9,%edi
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x3,%eax
		mov    0x2(%ebx),%dx
		add    %eax,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ecx,%edx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    (%ebx),%ax
		mov    %ebp,%ecx
		sub    %eax,%esi
		mov    %edi,%ebx
		mov    %esi,%eax
		jmp    jump_24f42
	jump_24faa:
		mov    $0xffffffff,%eax
		jmp    jump_24011

vtable_24fb5:
		.long   func_255e0
		.long   func_255ec
		.long   func_255fa
		.long   func_25608

vtable_24fc5:
		.long   func_25674
		.long   func_2567d
		.long   func_25689
		.long   func_25695


/*----------------------------------------------------------------*/
func_24fd5:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xbc,%esp
		mov    %eax,%ebp
		mov    %edx,0x90(%esp)
		mov    %ebx,0x88(%esp)
		mov    $0x6,%ecx
		mov    %esp,%edi
		mov    $data_23833,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x1c(%esp),%edi
		mov    $data_2384e,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    $0x6,%ecx
		lea    0x38(%esp),%edi
		mov    $data_23869,%esi
		mov    %edx,0x8c(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    0x90(%esp),%edx
		mov    $0x6,%ecx
		lea    0x54(%esp),%edi
		mov    $data_23884,%esi
		add    $0x2,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %edx,%edi
		mov    (%ebx),%esi
		mov    0x90(%esp),%ebx
		shl    $0x2,%edi
		mov    %ebx,%eax
		sub    %edx,%edi
		shl    $0x2,%eax
		shl    $0x2,%edi
		add    %ebx,%eax
		add    %edx,%edi
		shl    $0x3,%eax
		mov    data_8293a(%edi),%bx
		mov    %eax,0x94(%esp)
		cmp    $0x64,%bx
		jge    jump_2512c
		mov    %edx,%eax
		xor    %edx,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,0x7c(%esp)
		lea    0x9(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    0x7c(%esp),%edx
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    0x7c(%esp),%eax
		mov    0x94(%esp),%edx
		add    $0x3f,%eax
		lea    0xb8(%esp),%ebx
		mov    %eax,0x80(%esp)
		xor    %eax,%eax
		lea    0xb4(%esp),%ecx
		mov    data_19e163(%edx),%al
		mov    $data_16e78c,%edx
		call   func_24ba4
		cmpw   $0xa0,data_82938(%edi)
		jle    jump_25108
		movl   $0x8,0xa4(%esp)
		jmp    jump_25120
	jump_25108:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xb8(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0xa4(%esp)
	jump_25120:
		xor    %edx,%edx
		mov    $0x73,%eax
		jmp    jump_251d6
	jump_2512c:
		mov    %edx,%eax
		mov    $0x1,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,0x7c(%esp)
		lea    -0x46(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    0x7c(%esp),%edx
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		sub    $0x4f,%edx
		call   func_2b240
		mov    0x7c(%esp),%eax
		mov    0x94(%esp),%edx
		sub    $0x10,%eax
		lea    0xb8(%esp),%ebx
		mov    %eax,0x80(%esp)
		xor    %eax,%eax
		lea    0xb4(%esp),%ecx
		mov    data_19e163(%edx),%al
		mov    $data_16e78c,%edx
		call   func_24ba4
		cmpw   $0xa0,data_82938(%edi)
		jle    jump_251b7
		movl   $0x8,0xa4(%esp)
		jmp    jump_251cf
	jump_251b7:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xb8(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0xa4(%esp)
	jump_251cf:
		xor    %edx,%edx
		mov    $0xc7,%eax
	jump_251d6:
		mov    0xb4(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    0xa4(%esp),%eax
		call   func_2b240
		movl   $0x37,0xa4(%esp)
	jump_25204:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%dl
		inc    %esi
		cmp    $0x5b,%dl
		jne    jump_25204
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_25214:
		cmpb   $0x5d,(%edx)
		je     jump_25227
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,-0x1(%esp,%eax,1)
		jmp    jump_25214
	jump_25227:
		xor    %bh,%bh
		mov    %bh,(%esp,%eax,1)
		mov    %esp,%eax
		push   %eax
		mov    0x84(%esp),%eax
		sub    $0x30,%eax
		cwtl
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x8c(%esp)
	jump_25255:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%cl
		inc    %esi
		cmp    $0x5b,%cl
		jne    jump_25255
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_25265:
		cmpb   $0x5d,(%edx)
		je     jump_25278
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,0x1b(%esp,%eax,1)
		jmp    jump_25265
	jump_25278:
		xor    %dl,%dl
		mov    %dl,0x1c(%esp,%eax,1)
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0x84(%esp),%eax
		sub    $0x20,%eax
		cwtl
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x8c(%esp)
	jump_252a9:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%dh
		inc    %esi
		cmp    $0x5b,%dh
		jne    jump_252a9
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_252b9:
		cmpb   $0x5d,(%edx)
		je     jump_252cc
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,0x37(%esp,%eax,1)
		jmp    jump_252b9
	jump_252cc:
		xor    %bh,%bh
		mov    %bh,0x38(%esp,%eax,1)
		lea    0x38(%esp),%eax
		push   %eax
		mov    0x84(%esp),%eax
		sub    $0x10,%eax
		cwtl
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x8c(%esp)
	jump_252fd:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%cl
		inc    %esi
		cmp    $0x5b,%cl
		jne    jump_252fd
		xor    %edx,%edx
		lea    (%esi,%ebp,1),%eax
	jump_2530d:
		mov    (%eax),%ch
		lea    0x1(%esi),%ebx
		cmp    $0x5d,%ch
		je     jump_25326
		mov    %esi,%ecx
		inc    %edx
		mov    %ebx,%esi
		mov    (%ecx,%ebp,1),%bl
		inc    %eax
		mov    %bl,0x53(%esp,%edx,1)
		jmp    jump_2530d
	jump_25326:
		xor    %al,%al
		mov    %al,0x54(%esp,%edx,1)
		lea    0x54(%esp),%eax
		push   %eax
		mov    0x82(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b470
		call   func_3197d
		call   func_19b67
		mov    0x88(%esp),%eax
		mov    %ebx,(%eax)
		mov    0x80(%esp),%eax
		sub    $0x30,%eax
		mov    %ax,0xac(%esp)
		mov    0x80(%esp),%eax
		sub    $0x20,%eax
		mov    %ax,0xb0(%esp)
		mov    0x80(%esp),%eax
		sub    $0x10,%eax
		mov    %ax,0xa8(%esp)
		mov    0x80(%esp),%eax
		sub    $0x20,%eax
		mov    %eax,0x84(%esp)
		mov    0x80(%esp),%eax
		sub    $0x30,%eax
		mov    0x8c(%esp),%esi
		mov    %eax,0x9c(%esp)
		mov    0x80(%esp),%eax
		mov    0xa4(%esp),%ebp
		sub    $0x10,%eax
		inc    %esi
		mov    %eax,0xa0(%esp)
		mov    0x80(%esp),%eax
		add    $0xd0,%ebp
		add    $0x10,%eax
		mov    %esi,0x8c(%esp)
		mov    %eax,0x98(%esp)
		mov    $0x4,%ecx
	jump_25407:
		lea    0x70(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x70(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0xa4(%esp),%edi
		mov    data_7cf24,%eax
		cmp    %edi,%eax
		jl     jump_2545a
		cmp    %eax,%ebp
		jl     jump_2545a
		mov    0x80(%esp),%ebx
		mov    data_7cf28,%eax
		cmp    %ebx,%eax
		jl     jump_2545a
		cmp    0x98(%esp),%eax
		jg     jump_2545a
		cmpl   $0x3,0x8c(%esp)
		jle    jump_2545a
		mov    %ecx,%esi
		jmp    jump_25519
	jump_2545a:
		mov    0xa4(%esp),%ebx
		mov    data_7cf24,%eax
		cmp    %ebx,%eax
		jl     jump_2549b
		cmp    %eax,%ebp
		jl     jump_2549b
		mov    0xa0(%esp),%edi
		mov    data_7cf28,%eax
		cmp    %edi,%eax
		jl     jump_2549b
		cmp    0x80(%esp),%eax
		jg     jump_2549b
		cmpl   $0x2,0x8c(%esp)
		jle    jump_2549b
		mov    $0x3,%esi
		jmp    jump_25519
	jump_2549b:
		mov    0xa4(%esp),%edi
		mov    data_7cf24,%eax
		cmp    %edi,%eax
		jl     jump_254d9
		cmp    %eax,%ebp
		jl     jump_254d9
		mov    0x84(%esp),%ebx
		mov    data_7cf28,%eax
		cmp    %ebx,%eax
		jl     jump_254d9
		cmp    0xa0(%esp),%eax
		jg     jump_254d9
		cmpl   $0x1,0x8c(%esp)
		jle    jump_254d9
		mov    $0x2,%esi
		jmp    jump_25519
	jump_254d9:
		mov    0xa4(%esp),%ebx
		mov    data_7cf24,%eax
		cmp    %ebx,%eax
		jl     jump_25517
		cmp    %eax,%ebp
		jl     jump_25517
		mov    0x9c(%esp),%edi
		mov    data_7cf28,%eax
		cmp    %edi,%eax
		jl     jump_25517
		cmp    0x84(%esp),%eax
		jg     jump_25517
		cmpl   $0x0,0x8c(%esp)
		jle    jump_25517
		mov    $0x1,%esi
		jmp    jump_25519
	jump_25517:
		xor    %esi,%esi
	jump_25519:
		cmp    %esi,%edx
		je     jump_25650
		cmp    $0x1,%esi
		je     jump_25547
		mov    %esp,%eax
		push   %eax
		mov    0xae(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25547:
		cmp    $0x2,%esi
		je     jump_2556f
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0xb2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_2556f:
		cmp    $0x3,%esi
		je     jump_25597
		lea    0x38(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25597:
		cmp    $0x4,%esi
		je     jump_255bf
		lea    0x54(%esp),%eax
		push   %eax
		mov    0x82(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_255bf:
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ecx,%eax
		call   func_2c1c9
		lea    -0x1(%esi),%eax
		cmp    $0x3,%eax
		ja     jump_2562b
		jmp    *vtable_24fb5(,%eax,4)


/*----------------------------------------------------------------*/
func_255e0:
/*----------------------------------------------------------------*/
		mov    %esp,%eax
		push   %eax
		mov    0xae(%esp),%eax
		jmp    jump_25614


/*----------------------------------------------------------------*/
func_255ec:
/*----------------------------------------------------------------*/
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0xb2(%esp),%eax
		jmp    jump_25614


/*----------------------------------------------------------------*/
func_255fa:
/*----------------------------------------------------------------*/
		lea    0x38(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		jmp    jump_25614


/*----------------------------------------------------------------*/
func_25608:
/*----------------------------------------------------------------*/
		lea    0x54(%esp),%eax
		push   %eax
		mov    0x82(%esp),%eax
	jump_25614:
		sar    $0x10,%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_2562b:
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		mov    %ecx,%eax
		call   func_2c1c9
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b470
		call   func_19b67
	jump_25650:
		mov    data_7cf20,%edi
		mov    %esi,%edx
		cmp    $0x1,%edi
		jne    jump_25407
		sub    %edi,%esi
		cmp    $0x3,%esi
		ja     jump_25407
		jmp    *vtable_24fc5(,%esi,4)


/*----------------------------------------------------------------*/
func_25674:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    %edi,%eax
		jmp    jump_2569f


/*----------------------------------------------------------------*/
func_2567d:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x2,%eax
		jmp    jump_2569f


/*----------------------------------------------------------------*/
func_25689:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x3,%eax
		jmp    jump_2569f


/*----------------------------------------------------------------*/
func_25695:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x4,%eax
	jump_2569f:
		add    $0xbc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

vtable_256ad:
		.long   func_25d08
		.long   func_25d16
		.long   func_25d22
		.long   func_25d30

vtable_256bd:
		.long   func_25d9c
		.long   func_25da5
		.long   func_25db1
		.long   func_25dbd


/*----------------------------------------------------------------*/
func_256cd:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc0,%esp
		mov    %eax,%ebp
		mov    %edx,0x9c(%esp)
		mov    %ecx,0xa0(%esp)
		mov    $0x6,%ecx
		lea    0x1c(%esp),%edi
		mov    $data_2389f,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		mov    %esp,%edi
		mov    $data_238ba,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x6,%ecx
		lea    0x54(%esp),%edi
		mov    $data_238d5,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    $0x6,%ecx
		lea    0x38(%esp),%edi
		mov    $data_238f0,%esi
		mov    %edx,0x98(%esp)
		mov    0xa0(%esp),%edx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %edx,%edi
		shl    $0x2,%edi
		sub    %edx,%edi
		shl    $0x2,%edi
		add    %edx,%edi
		mov    0xd0(%esp),%esi
		mov    data_8293a(%edi),%dx
		mov    (%esi),%esi
		cmp    $0x64,%dx
		jge    jump_25849
		mov    0xa0(%esp),%eax
		xor    %edx,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%ecx
		mov    %eax,0x90(%esp)
		lea    0x9(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%eax
		mov    %ecx,%edx
		mov    %eax,0x7c(%esp)
		mov    $0x1e,%eax
		mov    0x7c(%esp),%ecx
		call   func_2b240
		mov    $data_16e78c,%edx
		lea    0xb8(%esp),%ebx
		xor    %eax,%eax
		lea    0xbc(%esp),%ecx
		mov    0x9c(%esp),%al
		call   func_24ba4
		cmpw   $0xa0,data_82938(%edi)
		jle    jump_257e6
		movl   $0x8,0x84(%esp)
		jmp    jump_257fe
	jump_257e6:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xb8(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x84(%esp)
	jump_257fe:
		xor    %edx,%edx
		mov    $0x73,%eax
		mov    0xbc(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    0x84(%esp),%eax
		call   func_2b240
		mov    0x90(%esp),%eax
		add    $0x3f,%eax
		mov    %eax,0xa8(%esp)
		movl   $0x37,0x84(%esp)
		jmp    jump_2592c
	jump_25849:
		mov    $data_16e78c,%edx
		lea    0xb8(%esp),%ebx
		xor    %eax,%eax
		lea    0xbc(%esp),%ecx
		mov    0x9c(%esp),%al
		call   func_24ba4
		mov    0xa0(%esp),%eax
		mov    $0x1,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%ecx
		mov    %eax,0x94(%esp)
		lea    -0x46(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%eax
		lea    -0x4f(%ecx),%edx
		mov    %eax,0x7c(%esp)
		mov    $0x1e,%eax
		mov    0x7c(%esp),%ecx
		call   func_2b240
		cmpw   $0xa0,data_82938(%edi)
		jle    jump_258cd
		movl   $0x8,0x84(%esp)
		jmp    jump_258e5
	jump_258cd:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xb8(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x84(%esp)
	jump_258e5:
		xor    %edx,%edx
		mov    $0xc7,%eax
		mov    0xbc(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    0x84(%esp),%eax
		call   func_2b240
		mov    0x94(%esp),%eax
		mov    $0x37,%ecx
		sub    $0x10,%eax
		mov    %ecx,0x84(%esp)
		mov    %eax,0xa8(%esp)
	jump_2592c:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%dl
		inc    %esi
		cmp    $0x5b,%dl
		jne    jump_2592c
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_2593c:
		cmpb   $0x5d,(%edx)
		je     jump_2594f
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,0x1b(%esp,%eax,1)
		jmp    jump_2593c
	jump_2594f:
		xor    %bh,%bh
		mov    %bh,0x1c(%esp,%eax,1)
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0xac(%esp),%eax
		sub    $0x30,%eax
		cwtl
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x98(%esp)
	jump_25980:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%cl
		inc    %esi
		cmp    $0x5b,%cl
		jne    jump_25980
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_25990:
		cmpb   $0x5d,(%edx)
		je     jump_259a3
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,-0x1(%esp,%eax,1)
		jmp    jump_25990
	jump_259a3:
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		mov    %esp,%eax
		push   %eax
		mov    0xac(%esp),%eax
		sub    $0x20,%eax
		cwtl
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x98(%esp)
	jump_259d1:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%dh
		inc    %esi
		cmp    $0x5b,%dh
		jne    jump_259d1
		xor    %eax,%eax
		lea    (%esi,%ebp,1),%edx
	jump_259e1:
		cmpb   $0x5d,(%edx)
		je     jump_259f4
		mov    %esi,%ebx
		inc    %edx
		inc    %eax
		mov    (%ebx,%ebp,1),%bl
		inc    %esi
		mov    %bl,0x53(%esp,%eax,1)
		jmp    jump_259e1
	jump_259f4:
		xor    %bh,%bh
		mov    %bh,0x54(%esp,%eax,1)
		lea    0x54(%esp),%eax
		push   %eax
		mov    0xac(%esp),%eax
		sub    $0x10,%eax
		cwtl
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		incl   0x98(%esp)
	jump_25a25:
		mov    %esi,%eax
		mov    (%eax,%ebp,1),%cl
		inc    %esi
		cmp    $0x5b,%cl
		jne    jump_25a25
		xor    %edx,%edx
		lea    (%esi,%ebp,1),%eax
	jump_25a35:
		mov    (%eax),%ch
		lea    0x1(%esi),%ebx
		cmp    $0x5d,%ch
		je     jump_25a4e
		mov    %esi,%ecx
		inc    %edx
		mov    %ebx,%esi
		mov    (%ecx,%ebp,1),%bl
		inc    %eax
		mov    %bl,0x37(%esp,%edx,1)
		jmp    jump_25a35
	jump_25a4e:
		xor    %al,%al
		mov    %al,0x38(%esp,%edx,1)
		lea    0x38(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b470
		call   func_3197d
		call   func_19b67
		mov    0xd0(%esp),%eax
		mov    %ebx,(%eax)
		mov    0xa8(%esp),%eax
		sub    $0x30,%eax
		mov    %ax,0xb0(%esp)
		mov    0xa8(%esp),%eax
		sub    $0x20,%eax
		mov    %ax,0xb4(%esp)
		mov    0xa8(%esp),%eax
		sub    $0x10,%eax
		mov    %ax,0xac(%esp)
		mov    0xa8(%esp),%eax
		sub    $0x20,%eax
		mov    %eax,0x88(%esp)
		mov    0xa8(%esp),%eax
		sub    $0x30,%eax
		mov    0x98(%esp),%esi
		mov    %eax,0x80(%esp)
		mov    0xa8(%esp),%eax
		mov    0x84(%esp),%ebp
		sub    $0x10,%eax
		inc    %esi
		mov    %eax,0x8c(%esp)
		mov    0xa8(%esp),%eax
		add    $0xd0,%ebp
		add    $0x10,%eax
		mov    %esi,0x98(%esp)
		mov    %eax,0xa4(%esp)
		mov    $0x4,%ecx
	jump_25b2f:
		lea    0x70(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x70(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x84(%esp),%edi
		mov    data_7cf24,%eax
		cmp    %edi,%eax
		jl     jump_25b82
		cmp    %eax,%ebp
		jl     jump_25b82
		mov    0xa8(%esp),%ebx
		mov    data_7cf28,%eax
		cmp    %ebx,%eax
		jl     jump_25b82
		cmp    0xa4(%esp),%eax
		jg     jump_25b82
		cmpl   $0x3,0x98(%esp)
		jle    jump_25b82
		mov    %ecx,%esi
		jmp    jump_25c41
	jump_25b82:
		mov    0x84(%esp),%ebx
		mov    data_7cf24,%eax
		cmp    %ebx,%eax
		jl     jump_25bc3
		cmp    %eax,%ebp
		jl     jump_25bc3
		mov    0x8c(%esp),%edi
		mov    data_7cf28,%eax
		cmp    %edi,%eax
		jl     jump_25bc3
		cmp    0xa8(%esp),%eax
		jg     jump_25bc3
		cmpl   $0x2,0x98(%esp)
		jle    jump_25bc3
		mov    $0x3,%esi
		jmp    jump_25c41
	jump_25bc3:
		mov    0x84(%esp),%edi
		mov    data_7cf24,%eax
		cmp    %edi,%eax
		jl     jump_25c01
		cmp    %eax,%ebp
		jl     jump_25c01
		mov    0x88(%esp),%ebx
		mov    data_7cf28,%eax
		cmp    %ebx,%eax
		jl     jump_25c01
		cmp    0x8c(%esp),%eax
		jg     jump_25c01
		cmpl   $0x1,0x98(%esp)
		jle    jump_25c01
		mov    $0x2,%esi
		jmp    jump_25c41
	jump_25c01:
		mov    0x84(%esp),%ebx
		mov    data_7cf24,%eax
		cmp    %ebx,%eax
		jl     jump_25c3f
		cmp    %eax,%ebp
		jl     jump_25c3f
		mov    0x80(%esp),%edi
		mov    data_7cf28,%eax
		cmp    %edi,%eax
		jl     jump_25c3f
		cmp    0x88(%esp),%eax
		jg     jump_25c3f
		cmpl   $0x0,0x98(%esp)
		jle    jump_25c3f
		mov    $0x1,%esi
		jmp    jump_25c41
	jump_25c3f:
		xor    %esi,%esi
	jump_25c41:
		cmp    %esi,%edx
		je     jump_25d78
		cmp    $0x1,%esi
		je     jump_25c71
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0xb2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25c71:
		cmp    $0x2,%esi
		je     jump_25c97
		mov    %esp,%eax
		push   %eax
		mov    0xb6(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25c97:
		cmp    $0x3,%esi
		je     jump_25cbf
		lea    0x54(%esp),%eax
		push   %eax
		mov    0xae(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25cbf:
		cmp    $0x4,%esi
		je     jump_25ce7
		lea    0x38(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25ce7:
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ecx,%eax
		call   func_2c1c9
		lea    -0x1(%esi),%eax
		cmp    $0x3,%eax
		ja     jump_25d53
		jmp    *vtable_256ad(,%eax,4)


/*----------------------------------------------------------------*/
func_25d08:
/*----------------------------------------------------------------*/
		lea    0x1c(%esp),%eax
		push   %eax
		mov    0xb2(%esp),%eax
		jmp    jump_25d3c


/*----------------------------------------------------------------*/
func_25d16:
/*----------------------------------------------------------------*/
		mov    %esp,%eax
		push   %eax
		mov    0xb6(%esp),%eax
		jmp    jump_25d3c


/*----------------------------------------------------------------*/
func_25d22:
/*----------------------------------------------------------------*/
		lea    0x54(%esp),%eax
		push   %eax
		mov    0xae(%esp),%eax
		jmp    jump_25d3c


/*----------------------------------------------------------------*/
func_25d30:
/*----------------------------------------------------------------*/
		lea    0x38(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
	jump_25d3c:
		sar    $0x10,%eax
		push   %eax
		mov    0x8a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_25d53:
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		mov    %ecx,%eax
		call   func_2c1c9
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b470
		call   func_19b67
	jump_25d78:
		mov    data_7cf20,%edi
		mov    %esi,%edx
		cmp    $0x1,%edi
		jne    jump_25b2f
		sub    %edi,%esi
		cmp    $0x3,%esi
		ja     jump_25b2f
		jmp    *vtable_256bd(,%esi,4)


/*----------------------------------------------------------------*/
func_25d9c:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    %edi,%eax
		jmp    jump_25dc7


/*----------------------------------------------------------------*/
func_25da5:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x2,%eax
		jmp    jump_25dc7


/*----------------------------------------------------------------*/
func_25db1:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x3,%eax
		jmp    jump_25dc7


/*----------------------------------------------------------------*/
func_25dbd:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x4,%eax
	jump_25dc7:
		add    $0xc0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_25dd3:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,0x4(%esp)
		mov    $data_51984,%eax
		mov    $data_51981,%edx
		xor    %ebx,%ebx
		call   w_dos_fopen
		mov    %ebx,0x8(%esp)
		mov    %eax,%edx
		mov    %eax,%esi
		test   %eax,%eax
		jne    jump_25e1e
		mov    $data_5198d,%eax
		call   w_puts
		call   w_dos_getch
		mov    %edx,%eax
		call   w_dos_fclose
		mov    $0xffffffff,%eax
		call   w_dos_exit
	jump_25e1e:
		xor    %edx,%edx
		jmp    jump_25e4d
	jump_25e22:
		mov    %esi,%eax
		call   w_dos_fgetc
		cmp    $0x7b,%eax
		jne    jump_25e22
	jump_25e2e:
		mov    %esi,%eax
		call   w_dos_fgetc
		mov    %eax,%edi
		mov    %eax,%ecx
		mov    0x8(%esp),%eax
		cmp    $0x7d,%eax
		jne    jump_25e46
		cmp    %eax,%edi
		je     jump_25e4c
	jump_25e46:
		mov    %ecx,0x8(%esp)
		jmp    jump_25e2e
	jump_25e4c:
		inc    %edx
	jump_25e4d:
		cmp    (%esp),%edx
		jl     jump_25e22
	jump_25e52:
		mov    %esi,%eax
		call   w_dos_fgetc
		cmp    $0x7b,%eax
		jne    jump_25e52
	jump_25e5e:
		mov    %esi,%eax
		call   w_dos_fgetc
		mov    %eax,%edi
		mov    %eax,%ecx
		lea    (%ebx,%ebp,1),%eax
		cmpb   $0x7d,-0x1(%eax)
		jne    jump_25e7b
		cmp    $0x7d,%edi
		je     jump_25f07
	jump_25e7b:
		cmp    $0xa,%ecx
		jne    jump_25e9c
	jump_25e80:
		mov    %esi,%eax
		call   w_dos_fgetc
		mov    %eax,%edi
		mov    %eax,%ecx
		cmp    $0x20,%eax
		je     jump_25e80
		cmp    $0x9,%eax
		je     jump_25e80
		mov    %ebx,%eax
		inc    %ebx
		movb   $0x20,(%eax,%ebp,1)
	jump_25e9c:
		cmp    $0x23,%ecx
		jne    jump_25eb8
	jump_25ea1:
		cmp    $0x19,%ebx
		je     jump_25eb8
		cmp    $0x33,%ebx
		je     jump_25eb8
		cmp    $0x4d,%ebx
		je     jump_25eb8
		cmp    $0x67,%ebx
		je     jump_25eb8
		inc    %ebx
		jmp    jump_25ea1
	jump_25eb8:
		mov    $0x19,%edi
		jmp    jump_25eef
	jump_25ebf:
		cmp    %edi,%ebx
		jne    jump_25eec
		test   %edi,%edi
		je     jump_25eec
		xor    %eax,%eax
		mov    %cl,%al
		call   func_24d5c
		test   %eax,%eax
		je     jump_25eec
		mov    %edi,%eax
		mov    %ebp,%edx
		call   func_24d70
		test   %eax,%eax
		jne    jump_25eec
		mov    %edi,%eax
		lea    0x1(%edi),%ebx
		movb   $0x20,(%eax,%ebp,1)
		jmp    jump_25ef3
	jump_25eec:
		add    $0x1a,%edi
	jump_25eef:
		cmp    %ebx,%edi
		jle    jump_25ebf
	jump_25ef3:
		cmp    $0x9,%ecx
		je     jump_25e5e
		mov    %ebx,%eax
		inc    %ebx
		mov    %cl,(%eax,%ebp,1)
		jmp    jump_25e5e
	jump_25f07:
		movb   $0x0,-0x1(%eax)
		mov    0x4(%esp),%eax
		mov    %bx,(%eax)
		mov    %esi,%eax
		call   w_dos_fclose
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_25f21:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc4,%esp
		push   %eax
		lea    0x3c(%esp),%edi
		mov    $data_2390b,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		lea    0x4c(%esp),%edi
		mov    $data_2391b,%esi
		mov    $0x6,%ecx
		mov    %edx,0xa4(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		xor    %dl,%dl
		lea    0x4(%esp),%edi
		mov    $data_2392b,%esi
		mov    $0x1,%ah
		mov    %dl,0xc4(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edx,%edx
		mov    $0x6,%ecx
		lea    0x20(%esp),%edi
		mov    $data_23946,%esi
		mov    %ah,0xc0(%esp)
		mov    %edx,0x9c(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
	jump_25f92:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    0x9c(%esp),%ebx
		shl    $0x3,%eax
		add    %ebx,%eax
		lea    0x1(%ebx),%ecx
		mov    data_19e149(%eax),%al
		mov    %ecx,0x9c(%esp)
		mov    %al,0x3c(%esp,%ebx,1)
		cmp    $0x5,%ecx
		jl     jump_25f92
		xor    %dh,%dh
		mov    $0x5,%edi
		mov    %dh,0x41(%esp)
		mov    %edi,0x9c(%esp)
	jump_25fd7:
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		mov    0x9c(%esp),%eax
		add    %ecx,%ebx
		mov    0x9c(%esp),%edx
		shl    $0x3,%ebx
		lea    0x1(%edx),%ebp
		mov    data_19e149(%ebx,%eax,1),%al
		mov    %ebp,0x9c(%esp)
		mov    %al,0x47(%esp,%edx,1)
		cmp    $0x9,%ebp
		jl     jump_25fd7
		lea    0x3c(%esp),%eax
		mov    $data_519a2,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_260df
		lea    0x4c(%esp),%eax
		call   func_3b155
		xor    %esi,%esi
		mov    %eax,%ecx
		mov    %esi,0x98(%esp)
		xor    %eax,%eax
		jmp    jump_26059
	jump_2603e:
		xor    %edx,%edx
		mov    data_197713(%eax),%dl
		cmp    %ecx,%edx
		je     jump_2606d
		lea    0x1(%ebx),%esi
		add    $0x88,%eax
		mov    %esi,0x98(%esp)
	jump_26059:
		xor    %edx,%edx
		mov    0x98(%esp),%ebx
		mov    data_1a00c6,%dx
		cmp    %ebx,%edx
		jg     jump_2603e
	jump_2606d:
		mov    -0x2(%esp),%ebx
		xor    %edx,%edx
		sar    $0x10,%ebx
		mov    0x98(%esp),%dx
		lea    0x2(%ebx),%eax
		call   func_1c6ab
		cmp    $0x1,%eax
		jne    jump_260c7
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		xor    %bl,%bl
		mov    data_19e145(,%eax,8),%edx
		mov    %bl,data_19e144(,%eax,8)
		mov    data_15ba1e,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9b4,%edx
		sar    $0x10,%eax
		add    %ebx,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_260c7:
		mov    $0x1,%bh
		mov    $0xffffffff,%eax
		mov    %bh,data_15ba22
	jump_260d4:
		add    $0xc8,%esp
		jmp    jump_244d8
	jump_260df:
		mov    $data_19e144,%esi
		add    %ebx,%esi
		add    $0x5,%esi
		mov    $data_519a8,%edx
		mov    %esi,%eax
		lea    0x2(%ecx),%edi
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_261c4
		mov    data_15b9cc,%ebx
		push   %ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %edx,%edx
		mov    $data_172224,%ebx
		call   func_2b3dc
		push   $data_519b1
		mov    $data_519a8,%edx
		mov    $0x54,%ebx
		push   $data_519b2
		mov    $data_519b1,%ecx
		mov    %edi,%eax
		call   func_26e32
		call   func_1189f
		xor    %esi,%esi
	jump_26144:
		call   func_337a2
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		mov    %eax,0x98(%esp)
		mov    %esi,%edx
		mov    %esi,%eax
		call   w_game_copy
		mov    0x98(%esp),%eax
		call   func_1b75b
		cmp    $0xffffffff,%eax
		je     jump_2618b
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		mov    %esi,%eax
		mov    %esi,%edx
		call   w_game_copy
		jmp    jump_26144
	jump_2618b:
		mov    -0x2(%esp),%eax
		mov    $0x1,%dh
		sar    $0x10,%eax
		mov    %dh,data_15ba22
		lea    0x2(%eax),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_19ff54(,%ebx,2),%dx
	jump_261b3:
		mov    %dx,data_82936(%eax)
		mov    $0xffffffff,%eax
		jmp    jump_260d4
	jump_261c4:
		mov    $data_519c8,%edx
		mov    %esi,%eax
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_26200
		mov    data_19e15b(%ebx),%eax
		sar    $0x10,%eax
		call   func_1aba6
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		shl    $0x2,%eax
		mov    $0x1,%bl
		add    %edi,%eax
		mov    data_19ff54(,%ecx,2),%dx
		mov    %bl,data_15ba22
		jmp    jump_261b3
	jump_26200:
		xor    %edx,%edx
		mov    %edx,0x9c(%esp)
	jump_26209:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    0x9c(%esp),%edi
		shl    $0x3,%eax
		add    %edi,%eax
		lea    0x1(%edi),%ebp
		mov    data_19e149(%eax),%al
		mov    %ebp,0x9c(%esp)
		mov    %al,0x3c(%esp,%edi,1)
		cmp    $0x4,%ebp
		jl     jump_26209
		xor    %bh,%bh
		mov    $0x4,%edx
		mov    %bh,0x40(%esp)
		mov    %edx,0x9c(%esp)
	jump_2624e:
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ecx,%ebx
		shl    $0x2,%ebx
		mov    0x9c(%esp),%eax
		add    %ecx,%ebx
		mov    0x9c(%esp),%edx
		shl    $0x3,%ebx
		lea    0x1(%edx),%esi
		mov    data_19e149(%ebx,%eax,1),%al
		mov    %esi,0x9c(%esp)
		mov    %al,0x48(%esp,%edx,1)
		cmp    $0x9,%esi
		jl     jump_2624e
		lea    0x3c(%esp),%eax
		mov    $data_519d1,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_26335
		cmpb   $0x64,data_19e14d(%ebx)
		je     jump_26335
		lea    0x4c(%esp),%eax
		call   func_3b155
		mov    %eax,%edx
		lea    0x2(%ecx),%eax
		call   func_1bc43
		cmp    $0x1,%eax
		jne    jump_26323
		xor    %ah,%ah
		mov    %ah,data_19e144(%ebx)
		xor    %eax,%eax
		jmp    jump_262d9
	jump_262ce:
		mov    data_15b9b4,%edx
		movb   $0x0,(%edx,%eax,1)
		inc    %eax
	jump_262d9:
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		cmp    %ebx,%eax
		jl     jump_262ce
		mov    -0x2(%esp),%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    data_19e145(,%eax,8),%ebx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    data_19e143(,%eax,8),%eax
		mov    data_15b9c4,%edx
		sar    $0x10,%eax
		add    %ebx,%edx
		movb   $0x0,(%edx,%eax,1)
	jump_26323:
		mov    $0x1,%dl
		mov    $0xffffffff,%eax
		mov    %dl,data_15ba22
		jmp    jump_260d4
	jump_26335:
		mov    $data_196c14,%eax
		mov    $0xa28,%ecx
		xor    %edx,%edx
		call   func___STOSB
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0xa28,%ebp
		lea    0xb0(%esp),%ebx
		mov    data_19e15b(,%eax,8),%eax
		mov    $data_196c14,%edx
		sar    $0x10,%eax
		mov    %ebp,0x98(%esp)
		call   func_25dd3
		xor    %eax,%eax
		mov    %eax,0x98(%esp)
	jump_26384:
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		lea    0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpw   $0x64,data_8293a(%edx,%eax,4)
		jge    jump_26486
		cmpb   $0x1,0xc0(%esp)
		jne    jump_263cd
		mov    data_15b9cc,%edx
		push   %edx
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
	jump_263cd:
		mov    -0x2(%esp),%ebp
		sar    $0x10,%ebp
		lea    0x2(%ebp),%edi
		xor    %edx,%edx
		mov    %edi,%eax
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%esi
		lea    0x9(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		mov    %esi,%edx
		call   func_2b240
		mov    %ebp,%eax
		shl    $0x2,%eax
		add    %ebp,%eax
		mov    $data_16e78c,%edx
		shl    $0x3,%eax
		lea    0xac(%esp),%ebx
		mov    data_19e163(%eax),%al
		lea    0xb8(%esp),%ecx
		and    $0xff,%eax
		call   func_24ba4
		mov    %edi,%eax
		shl    $0x2,%eax
		add    $0x3f,%esi
		sub    %edi,%eax
		mov    %esi,0xa0(%esp)
		cmpw   $0xa0,data_82938(%edi,%eax,4)
		jle    jump_26462
		movl   $0x8,0x9c(%esp)
		jmp    jump_2647a
	jump_26462:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xac(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x9c(%esp)
	jump_2647a:
		xor    %edx,%edx
		mov    $0x73,%eax
		jmp    jump_2656a
	jump_26486:
		cmpb   $0x1,0xc0(%esp)
		jne    jump_264af
		mov    data_15b9cc,%edi
		push   %edi
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
	jump_264af:
		mov    -0x2(%esp),%ebp
		sar    $0x10,%ebp
		lea    0x2(%ebp),%edi
		mov    $0x1,%edx
		mov    %edi,%eax
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%esi
		lea    -0x46(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		lea    -0x4f(%esi),%edx
		call   func_2b240
		mov    %ebp,%eax
		shl    $0x2,%eax
		add    %ebp,%eax
		mov    $data_16e78c,%edx
		shl    $0x3,%eax
		lea    0xac(%esp),%ebx
		mov    data_19e163(%eax),%al
		lea    0xb8(%esp),%ecx
		and    $0xff,%eax
		call   func_24ba4
		mov    %edi,%eax
		shl    $0x2,%eax
		sub    %edi,%eax
		sub    $0x10,%esi
		mov    data_82938(%edi,%eax,4),%cx
		mov    %esi,0xa0(%esp)
		cmp    $0xa0,%cx
		jle    jump_2654b
		movl   $0x8,0x9c(%esp)
		jmp    jump_26563
	jump_2654b:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0xac(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x9c(%esp)
	jump_26563:
		xor    %edx,%edx
		mov    $0xc7,%eax
	jump_2656a:
		mov    0xb8(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    0x9c(%esp),%eax
		call   func_2b240
		movl   $0x37,0x9c(%esp)
		movb   $0x1,data_15ba22
		xor    %eax,%eax
		mov    0x98(%esp),%esi
		mov    0xb0(%esp),%ax
		mov    0x9c(%esp),%ebp
		cmp    %esi,%eax
		jle    jump_267fc
		cmpb   $0x1,0xc0(%esp)
		jne    jump_2665d
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $data_19e144,%edx
		shl    $0x3,%eax
		mov    $0x1a,%ebx
		add    %eax,%edx
		lea    0x20(%esp),%eax
		add    $0x5,%edx
		call   func_305b8
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xa4(%esp),%eax
		sub    $0x30,%eax
		cwtl
		push   %eax
		mov    0xa4(%esp),%eax
		add    $0x8,%eax
		cwtl
		push   %eax
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    data_15b9cc,%eax
		xor    %dl,%dl
		call   func_2b470
		mov    %dl,0xc0(%esp)
		jmp    jump_267fc
	jump_2665d:
		mov    %esi,%edx
		xor    %eax,%eax
	jump_26661:
		inc    %eax
		mov    data_196c14(%edx),%bl
		inc    %edx
		mov    %bl,0x3(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_26661
		lea    0x4(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_26691
		movb   $0x1,0xc4(%esp)
		jmp    jump_267fc
	jump_26691:
		mov    0xa0(%esp),%eax
		sub    $0x30,%eax
		xor    %ebx,%ebx
		mov    %ax,0xb4(%esp)
	jump_266a5:
		xor    %eax,%eax
		mov    0x4(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_266ef
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xb6(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %ch,%ch
		push   %eax
		mov    %ch,0x2d(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x9c(%esp)
		jmp    jump_2673a
	jump_266ef:
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		mov    0x5(%esp,%ebx,1),%al
		mov    %al,0x21(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xb6(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %cl,%cl
		push   %eax
		mov    %cl,0x2e(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x9c(%esp),%edi
		add    $0x10,%edi
		inc    %ebx
		mov    %edi,0x9c(%esp)
	jump_2673a:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    %edx,%ecx
		sub    %edx,%eax
		cmpw   $0x64,data_8293a(%ecx,%eax,4)
		jge    jump_2675e
		mov    %edx,%eax
		xor    %edx,%edx
		jmp    jump_26765
	jump_2675e:
		mov    %edx,%eax
		mov    $0x1,%edx
	jump_26765:
		call   func_24da5
		lea    0x8c(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x8c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_267a1
		cmpl   $0x0,data_1a0168
		je     jump_267aa
	jump_267a1:
		cmpb   $0x1,data_15ba22
		jne    jump_267b9
	jump_267aa:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_267b9:
		cmpl   $0x1,data_7cf20
		je     jump_267d3
		cmpl   $0x0,data_1a0168
		jne    jump_267d3
		xor    %ah,%ah
		mov    %ah,data_15ba22
	jump_267d3:
		cmpb   $0x0,0x20(%esp)
		je     jump_267e4
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_266a5
	jump_267e4:
		mov    0x98(%esp),%eax
		add    $0x1a,%eax
		mov    %ebp,0x9c(%esp)
		mov    %eax,0x98(%esp)
	jump_267fc:
		xor    %eax,%eax
		mov    0x98(%esp),%edx
		mov    0xb0(%esp),%ax
		cmp    %edx,%eax
		jle    jump_269c1
		cmpb   $0x0,0xc4(%esp)
		jne    jump_269c1
		mov    0x98(%esp),%edx
		xor    %eax,%eax
	jump_2682c:
		inc    %eax
		mov    data_196c14(%edx),%bl
		inc    %edx
		mov    %bl,0x3(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_2682c
		lea    0x4(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_2685c
		movb   $0x1,0xc4(%esp)
		jmp    jump_269c1
	jump_2685c:
		mov    0xa0(%esp),%eax
		sub    $0x20,%eax
		xor    %ebx,%ebx
		mov    %ax,0xa8(%esp)
	jump_26870:
		xor    %eax,%eax
		mov    0x4(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_268ba
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %ch,%ch
		push   %eax
		mov    %ch,0x2d(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x9c(%esp)
		jmp    jump_26905
	jump_268ba:
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		mov    0x5(%esp,%ebx,1),%al
		mov    %al,0x21(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xaa(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %cl,%cl
		push   %eax
		mov    %cl,0x2e(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x9c(%esp),%ecx
		add    $0x10,%ecx
		inc    %ebx
		mov    %ecx,0x9c(%esp)
	jump_26905:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    %edx,%ecx
		sub    %edx,%eax
		cmpw   $0x64,data_8293a(%ecx,%eax,4)
		jge    jump_26929
		mov    %edx,%eax
		xor    %edx,%edx
		jmp    jump_26930
	jump_26929:
		mov    %edx,%eax
		mov    $0x1,%edx
	jump_26930:
		call   func_24da5
		lea    0x74(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x74(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_26966
		cmpl   $0x0,data_1a0168
		je     jump_2696f
	jump_26966:
		cmpb   $0x1,data_15ba22
		jne    jump_2697e
	jump_2696f:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_2697e:
		cmpl   $0x1,data_7cf20
		je     jump_26998
		cmpl   $0x0,data_1a0168
		jne    jump_26998
		xor    %ah,%ah
		mov    %ah,data_15ba22
	jump_26998:
		cmpb   $0x0,0x20(%esp)
		je     jump_269a9
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_26870
	jump_269a9:
		mov    0x98(%esp),%esi
		add    $0x1a,%esi
		mov    %ebp,0x9c(%esp)
		mov    %esi,0x98(%esp)
	jump_269c1:
		xor    %eax,%eax
		mov    0x98(%esp),%edi
		mov    0xb0(%esp),%ax
		cmp    %edi,%eax
		jle    jump_26b87
		cmpb   $0x0,0xc4(%esp)
		jne    jump_26b87
		mov    %edi,%edx
		xor    %eax,%eax
	jump_269ec:
		inc    %eax
		mov    data_196c14(%edx),%bl
		inc    %edx
		mov    %bl,0x3(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_269ec
		lea    0x4(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_26a1c
		movb   $0x1,0xc4(%esp)
		jmp    jump_26b87
	jump_26a1c:
		mov    0xa0(%esp),%eax
		sub    $0x10,%eax
		xor    %ebx,%ebx
		mov    %ax,0xbc(%esp)
	jump_26a30:
		xor    %eax,%eax
		mov    0x4(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_26a7a
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xbe(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %ch,%ch
		push   %eax
		mov    %ch,0x2d(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x9c(%esp)
		jmp    jump_26ac5
	jump_26a7a:
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		mov    0x5(%esp,%ebx,1),%al
		mov    %al,0x21(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xbe(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %cl,%cl
		push   %eax
		mov    %cl,0x2e(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x9c(%esp),%eax
		add    $0x10,%eax
		inc    %ebx
		mov    %eax,0x9c(%esp)
	jump_26ac5:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    %edx,%ecx
		sub    %edx,%eax
		cmpw   $0x64,data_8293a(%ecx,%eax,4)
		jge    jump_26ae9
		mov    %edx,%eax
		xor    %edx,%edx
		jmp    jump_26af0
	jump_26ae9:
		mov    %edx,%eax
		mov    $0x1,%edx
	jump_26af0:
		call   func_24da5
		lea    0x80(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x80(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_26b2c
		cmpl   $0x0,data_1a0168
		je     jump_26b35
	jump_26b2c:
		cmpb   $0x1,data_15ba22
		jne    jump_26b44
	jump_26b35:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_26b44:
		cmpl   $0x1,data_7cf20
		je     jump_26b5e
		cmpl   $0x0,data_1a0168
		jne    jump_26b5e
		xor    %ah,%ah
		mov    %ah,data_15ba22
	jump_26b5e:
		cmpb   $0x0,0x20(%esp)
		je     jump_26b6f
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_26a30
	jump_26b6f:
		mov    0x98(%esp),%edx
		add    $0x1a,%edx
		mov    %ebp,0x9c(%esp)
		mov    %edx,0x98(%esp)
	jump_26b87:
		xor    %eax,%eax
		mov    0x98(%esp),%ebx
		mov    0xb0(%esp),%ax
		cmp    %ebx,%eax
		jle    jump_26d25
		cmpb   $0x0,0xc4(%esp)
		jne    jump_26d25
		mov    %ebx,%edx
		xor    %eax,%eax
	jump_26bb2:
		inc    %eax
		mov    data_196c14(%edx),%bl
		inc    %edx
		mov    %bl,0x3(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_26bb2
		lea    0x4(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_26be2
		movb   $0x1,0xc4(%esp)
		jmp    jump_26d25
	jump_26be2:
		xor    %ebx,%ebx
	jump_26be4:
		xor    %eax,%eax
		mov    0x4(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_26c2e
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %ch,%ch
		push   %eax
		mov    %ch,0x2d(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x9c(%esp)
		jmp    jump_26c79
	jump_26c2e:
		mov    0x4(%esp,%ebx,1),%al
		mov    %al,0x20(%esp)
		mov    0x5(%esp,%ebx,1),%al
		mov    %al,0x21(%esp)
		lea    0x20(%esp),%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		xor    %cl,%cl
		push   %eax
		mov    %cl,0x2e(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x9c(%esp),%ecx
		add    $0x10,%ecx
		inc    %ebx
		mov    %ecx,0x9c(%esp)
	jump_26c79:
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		add    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    %edx,%ecx
		sub    %edx,%eax
		cmpw   $0x64,data_8293a(%ecx,%eax,4)
		jge    jump_26c9d
		mov    %edx,%eax
		xor    %edx,%edx
		jmp    jump_26ca4
	jump_26c9d:
		mov    %edx,%eax
		mov    $0x1,%edx
	jump_26ca4:
		call   func_24da5
		lea    0x5c(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x5c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_26cda
		cmpl   $0x0,data_1a0168
		je     jump_26ce3
	jump_26cda:
		cmpb   $0x1,data_15ba22
		jne    jump_26cf2
	jump_26ce3:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_26cf2:
		cmpl   $0x1,data_7cf20
		je     jump_26d0c
		cmpl   $0x0,data_1a0168
		jne    jump_26d0c
		xor    %ah,%ah
		mov    %ah,data_15ba22
	jump_26d0c:
		cmpb   $0x0,0x20(%esp)
		je     jump_26d1d
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_26be4
	jump_26d1d:
		addl   $0x1a,0x98(%esp)
	jump_26d25:
		movb   $0x1,data_15ba22
	jump_26d2c:
		lea    0x68(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x68(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_399ac
		cmpl   $0x0,data_1a0168
		jne    jump_26d60
		cmpl   $0x1,data_7cf20
		je     jump_26d60
		xor    %bl,%bl
		mov    %bl,data_15ba22
	jump_26d60:
		cmpl   $0x0,data_1a0168
		jne    jump_26d72
		cmpl   $0x1,data_7cf20
		jne    jump_26d2c
	jump_26d72:
		cmpb   $0x1,data_15ba22
		je     jump_26d2c
		cmpb   $0x1,0xc4(%esp)
		jne    jump_26dc9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy_ff
		mov    -0x2(%esp),%edx
		mov    0x98(%esp),%ebx
		mov    $data_196c14,%eax
		sub    $0x1a,%ebx
		sar    $0x10,%edx
		mov    %ebx,0x98(%esp)
		add    %ebx,%eax
		lea    0x98(%esp),%ebx
		call   func_24fd5
		jmp    jump_260d4
	jump_26dc9:
		xor    %eax,%eax
		mov    0x98(%esp),%edx
		mov    0xb0(%esp),%ax
		cmp    %edx,%eax
		jg     jump_26e19
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		lea    0x2(%eax),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $0x1,%ch
		add    %edx,%eax
		mov    data_19ff54(,%ebx,2),%dx
		mov    %ch,data_15ba22
		mov    %dx,data_82936(%eax)
		mov    0xa4(%esp),%eax
		jmp    jump_260d4
	jump_26e19:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		jmp    jump_26384


/*----------------------------------------------------------------*/
func_26e32:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    %bl,0x18(%esp)
		mov    %ecx,0x4(%esp)
		mov    %eax,%esi
		shl    $0x2,%esi
		sub    %eax,%esi
		shl    $0x2,%esi
		add    %eax,%esi
		cmpw   $0x64,data_8293a(%esi)
		jge    jump_26f1d
		mov    data_15b9cc,%ebx
		push   %ebx
		mov    $0x13f,%ecx
		xor    %eax,%eax
		push   $0xc7
		xor    %edx,%edx
		mov    $data_172224,%ebx
		call   func_2b3dc
		mov    %edi,%eax
		xor    %edx,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%edi
		mov    %eax,0x8(%esp)
		lea    0x9(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		mov    %edi,%edx
		call   func_2b240
		mov    $data_16e78c,%edx
		lea    0x10(%esp),%ebx
		xor    %eax,%eax
		lea    0x14(%esp),%ecx
		mov    0x18(%esp),%al
		call   func_24ba4
		cmpw   $0xa0,data_82938(%esi)
		jle    jump_26edf
		mov    $0x8,%esi
		jmp    jump_26eef
	jump_26edf:
		xor    %esi,%esi
		mov    $0x138,%eax
		mov    0x10(%esp),%si
		sub    %esi,%eax
		mov    %eax,%esi
	jump_26eef:
		xor    %edx,%edx
		mov    $0x73,%eax
		mov    0x14(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_2b240
		mov    0x8(%esp),%eax
		add    $0x3f,%eax
		jmp    jump_26fd9
	jump_26f1d:
		mov    data_15b9cc,%edx
		push   %edx
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_2b3dc
		mov    $0x1,%edx
		mov    %edi,%eax
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%edi
		mov    %eax,(%esp)
		lea    -0x46(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		lea    -0x4f(%edi),%edx
		call   func_2b240
		mov    $data_16e78c,%edx
		lea    0x10(%esp),%ebx
		xor    %eax,%eax
		lea    0x14(%esp),%ecx
		mov    0x18(%esp),%al
		call   func_24ba4
		cmpw   $0xa0,data_82938(%esi)
		jle    jump_26fa1
		mov    $0x8,%esi
		jmp    jump_26fb1
	jump_26fa1:
		xor    %esi,%esi
		mov    $0x138,%eax
		mov    0x10(%esp),%si
		sub    %esi,%eax
		mov    %eax,%esi
	jump_26fb1:
		xor    %edx,%edx
		mov    $0xc7,%eax
		mov    0x14(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   func_2b240
		mov    (%esp),%eax
		sub    $0x10,%eax
	jump_26fd9:
		mov    $0x37,%esi
		mov    %eax,0xc(%esp)
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		mov    %ebp,%edi
		call   func_2c1c9
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0xc(%esp),%eax
		sub    $0x30,%eax
		push   %ebp
		cwtl
		push   %eax
		mov    %esi,%eax
		add    $0x8,%eax
		cwtl
		push   %eax
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    0xc(%esp),%eax
		mov    0x4(%esp),%ecx
		sub    $0x20,%eax
		push   %ecx
		cwtl
		push   %eax
		movswl %si,%esi
		push   %esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    0xc(%esp),%eax
		mov    0x2c(%esp),%edi
		sub    $0x10,%eax
		push   %edi
		cwtl
		push   %eax
		push   %esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x30(%esp),%ebp
		mov    0xa(%esp),%eax
		push   %ebp
		sar    $0x10,%eax
		push   %eax
		push   %esi
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x8


/*----------------------------------------------------------------*/
func_2708b:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xa0,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		mov    $0x6,%ecx
		lea    0x8(%esp),%edi
		mov    $data_23961,%esi
		mov    $0x1,%ah
		xor    %edx,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %edx,0x90(%esp)
		mov    $0x6,%ecx
		lea    0x24(%esp),%edi
		mov    $data_2397c,%esi
		xor    %dl,%dl
		mov    %ah,0xa4(%esp)
		mov    %dl,0xa0(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_1199e
		mov    $data_196c14,%eax
		mov    $0xa28,%ecx
		xor    %edx,%edx
		call   func___STOSB
		mov    $0xa28,%edx
		movswl %bx,%eax
		lea    0x9c(%esp),%ebx
		mov    %edx,0x84(%esp)
		mov    $data_196c14,%edx
		call   func_25dd3
		mov    %ebp,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    %ebx,0x84(%esp)
		mov    %eax,0x80(%esp)
	jump_2712d:
		mov    0x80(%esp),%eax
		cmpw   $0x64,data_8293a(%eax)
		jge    jump_2723a
		cmpb   $0x1,0xa4(%esp)
		jne    jump_2716a
		mov    data_15b9cc,%eax
		push   %eax
		mov    $data_172224,%ebx
		mov    $0x13f,%ecx
		push   $0xc7
		xor    %edx,%edx
		xor    %eax,%eax
		call   func_2b3dc
	jump_2716a:
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%esi
		mov    %eax,%edi
		lea    0x9(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		mov    %esi,%edx
		call   func_2b240
		mov    $data_16e78c,%edx
		lea    0x98(%esp),%ebx
		xor    %eax,%eax
		lea    0x94(%esp),%ecx
		mov    0x4(%esp),%al
		call   func_24ba4
		mov    0x80(%esp),%eax
		cmpw   $0xa0,data_82938(%eax)
		jle    jump_271dd
		movl   $0x8,0x88(%esp)
		jmp    jump_271f5
	jump_271dd:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0x98(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x88(%esp)
	jump_271f5:
		xor    %edx,%edx
		mov    $0x73,%eax
		mov    0x94(%esp),%dx
		mov    $data_16e78c,%ebx
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		mov    %eax,%edx
		mov    0x88(%esp),%eax
		add    $0x3f,%edi
		call   func_2b240
		mov    $0x37,%ebx
		mov    %edi,0x8c(%esp)
		mov    %ebx,0x88(%esp)
		jmp    jump_27332
	jump_2723a:
		cmpb   $0x1,0xa4(%esp)
		jne    jump_27263
		mov    data_15b9cc,%ecx
		push   %ecx
		mov    $data_172224,%ebx
		xor    %eax,%eax
		push   $0xc7
		xor    %edx,%edx
		mov    $0x13f,%ecx
		call   func_2b3dc
	jump_27263:
		mov    $data_16e78c,%edx
		lea    0x98(%esp),%ebx
		xor    %eax,%eax
		lea    0x94(%esp),%ecx
		mov    0x4(%esp),%al
		call   func_24ba4
		mov    $0x1,%edx
		mov    %ebp,%eax
		mov    $data_59abd,%ebx
		call   func_24da5
		mov    %eax,%esi
		mov    %eax,%edi
		lea    -0x46(%eax),%edx
		mov    $0x24,%eax
		call   func_186dc
		mov    $0x1e,%eax
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		lea    -0x4f(%esi),%edx
		call   func_2b240
		mov    0x80(%esp),%eax
		cmpw   $0xa0,data_82938(%eax)
		jle    jump_272da
		movl   $0x8,0x88(%esp)
		jmp    jump_272f2
	jump_272da:
		xor    %eax,%eax
		mov    $0x138,%edx
		mov    0x98(%esp),%ax
		sub    %eax,%edx
		mov    %edx,0x88(%esp)
	jump_272f2:
		mov    $0xc7,%eax
		mov    $data_16e78c,%ebx
		xor    %edx,%edx
		mov    data_15b9cc,%ecx
		mov    0x94(%esp),%dx
		sub    $0x10,%edi
		sub    %edx,%eax
		mov    %edi,0x8c(%esp)
		mov    %eax,%edx
		mov    0x88(%esp),%eax
		mov    $0x37,%edi
		call   func_2b240
		mov    %edi,0x88(%esp)
	jump_27332:
		mov    0x88(%esp),%eax
		mov    $0x1,%bh
		mov    %eax,0x7c(%esp)
		xor    %eax,%eax
		mov    0x84(%esp),%ecx
		mov    0x9c(%esp),%ax
		mov    %bh,data_15ba22
		cmp    %ecx,%eax
		jle    jump_27554
		cmp    0xa4(%esp),%bh
		jne    jump_273df
		lea    0x24(%esp),%eax
		mov    (%esp),%edx
		mov    $0x1a,%ebx
		call   func_305b8
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		lea    0x24(%esp),%eax
		push   %eax
		mov    0x90(%esp),%eax
		sub    $0x30,%eax
		cwtl
		push   %eax
		mov    0x90(%esp),%eax
		add    $0x8,%eax
		cwtl
		push   %eax
		mov    $0x1000,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0xff,%ebx
		mov    $0x4,%eax
		call   func_2c1c9
		mov    data_15b9cc,%eax
		xor    %ch,%ch
		call   func_2b470
		mov    %ch,0xa4(%esp)
		jmp    jump_27554
	jump_273df:
		mov    0x84(%esp),%ebx
		xor    %eax,%eax
	jump_273e8:
		inc    %eax
		mov    data_196c14(%ebx),%cl
		inc    %ebx
		mov    %cl,0x7(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_273e8
		lea    0x8(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_27418
		movb   $0x1,0xa0(%esp)
		jmp    jump_27554
	jump_27418:
		mov    0x8c(%esp),%ecx
		xor    %ebx,%ebx
		sub    $0x30,%ecx
	jump_27424:
		xor    %eax,%eax
		mov    0x8(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_27467
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		xor    %dl,%dl
		push   %eax
		mov    %dl,0x31(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x88(%esp)
		jmp    jump_274ab
	jump_27467:
		mov    0x8(%esp,%ebx,1),%al
		xor    %ah,%ah
		mov    %al,0x24(%esp)
		mov    0x9(%esp,%ebx,1),%al
		mov    %ah,0x26(%esp)
		mov    %al,0x25(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x88(%esp),%esi
		add    $0x10,%esi
		inc    %ebx
		mov    %esi,0x88(%esp)
	jump_274ab:
		mov    0x80(%esp),%eax
		cmpw   $0x64,data_8293a(%eax)
		jge    jump_274c2
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_274c9
	jump_274c2:
		mov    $0x1,%edx
		mov    %ebp,%eax
	jump_274c9:
		call   func_24da5
		lea    0x40(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x40(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_274ff
		cmpl   $0x0,data_1a0168
		je     jump_27508
	jump_274ff:
		cmpb   $0x1,data_15ba22
		jne    jump_27517
	jump_27508:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_27517:
		cmpl   $0x1,data_7cf20
		je     jump_27530
		cmpl   $0x0,data_1a0168
		jne    jump_27530
		xor    %al,%al
		mov    %al,data_15ba22
	jump_27530:
		cmpb   $0x0,0x24(%esp)
		je     jump_27541
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_27424
	jump_27541:
		mov    0x7c(%esp),%eax
		mov    %eax,0x88(%esp)
		addl   $0x1a,0x84(%esp)
	jump_27554:
		xor    %eax,%eax
		mov    0x84(%esp),%edx
		mov    0x9c(%esp),%ax
		cmp    %edx,%eax
		jle    jump_276f1
		cmpb   $0x0,0xa0(%esp)
		jne    jump_276f1
		mov    0x84(%esp),%ebx
		xor    %eax,%eax
	jump_27584:
		inc    %eax
		mov    data_196c14(%ebx),%cl
		inc    %ebx
		mov    %cl,0x7(%esp,%eax,1)
		cmp    $0x1a,%eax
		jl     jump_27584
		lea    0x8(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_275b4
		movb   $0x1,0xa0(%esp)
		jmp    jump_276f1
	jump_275b4:
		mov    0x8c(%esp),%ecx
		xor    %ebx,%ebx
		sub    $0x20,%ecx
	jump_275c0:
		xor    %eax,%eax
		mov    0x8(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_27603
		mov    0x8(%esp,%ebx,1),%al
		xor    %ah,%ah
		mov    %al,0x24(%esp)
		mov    %ah,0x25(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x88(%esp)
		jmp    jump_27647
	jump_27603:
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		mov    0x9(%esp,%ebx,1),%al
		mov    %al,0x25(%esp)
		xor    %al,%al
		mov    %al,0x26(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x88(%esp),%esi
		add    $0x10,%esi
		inc    %ebx
		mov    %esi,0x88(%esp)
	jump_27647:
		mov    0x80(%esp),%eax
		cmpw   $0x64,data_8293a(%eax)
		jge    jump_2765e
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_27665
	jump_2765e:
		mov    $0x1,%edx
		mov    %ebp,%eax
	jump_27665:
		call   func_24da5
		lea    0x4c(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x4c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_2769b
		cmpl   $0x0,data_1a0168
		je     jump_276a4
	jump_2769b:
		cmpb   $0x1,data_15ba22
		jne    jump_276b3
	jump_276a4:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_276b3:
		cmpl   $0x1,data_7cf20
		je     jump_276cd
		cmpl   $0x0,data_1a0168
		jne    jump_276cd
		xor    %dh,%dh
		mov    %dh,data_15ba22
	jump_276cd:
		cmpb   $0x0,0x24(%esp)
		je     jump_276de
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_275c0
	jump_276de:
		mov    0x7c(%esp),%eax
		mov    %eax,0x88(%esp)
		addl   $0x1a,0x84(%esp)
	jump_276f1:
		xor    %eax,%eax
		mov    0x84(%esp),%edx
		mov    0x9c(%esp),%ax
		cmp    %edx,%eax
		jle    jump_27889
		cmpb   $0x0,0xa0(%esp)
		jne    jump_27889
		mov    %edx,%eax
		xor    %ebx,%ebx
	jump_2771c:
		inc    %ebx
		mov    data_196c14(%eax),%cl
		inc    %eax
		mov    %cl,0x7(%esp,%ebx,1)
		cmp    $0x1a,%ebx
		jl     jump_2771c
		lea    0x8(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_2774c
		movb   $0x1,0xa0(%esp)
		jmp    jump_27889
	jump_2774c:
		mov    0x8c(%esp),%ecx
		xor    %ebx,%ebx
		sub    $0x10,%ecx
	jump_27758:
		xor    %eax,%eax
		mov    0x8(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_2779b
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		xor    %al,%al
		mov    %al,0x25(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x88(%esp)
		jmp    jump_277df
	jump_2779b:
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		mov    0x9(%esp,%ebx,1),%al
		mov    %al,0x25(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		movswl %cx,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		xor    %dh,%dh
		push   %eax
		mov    %dh,0x32(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x88(%esp),%esi
		add    $0x10,%esi
		inc    %ebx
		mov    %esi,0x88(%esp)
	jump_277df:
		mov    0x80(%esp),%eax
		cmpw   $0x64,data_8293a(%eax)
		jge    jump_277f6
		mov    %ebp,%eax
		xor    %edx,%edx
		jmp    jump_277fd
	jump_277f6:
		mov    $0x1,%edx
		mov    %ebp,%eax
	jump_277fd:
		call   func_24da5
		lea    0x70(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x70(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_27833
		cmpl   $0x0,data_1a0168
		je     jump_2783c
	jump_27833:
		cmpb   $0x1,data_15ba22
		jne    jump_2784b
	jump_2783c:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_2784b:
		cmpl   $0x1,data_7cf20
		je     jump_27865
		cmpl   $0x0,data_1a0168
		jne    jump_27865
		xor    %dl,%dl
		mov    %dl,data_15ba22
	jump_27865:
		cmpb   $0x0,0x24(%esp)
		je     jump_27876
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_27758
	jump_27876:
		mov    0x7c(%esp),%eax
		mov    %eax,0x88(%esp)
		addl   $0x1a,0x84(%esp)
	jump_27889:
		xor    %eax,%eax
		mov    0x84(%esp),%edx
		mov    0x9c(%esp),%ax
		cmp    %edx,%eax
		jle    jump_27a13
		cmpb   $0x0,0xa0(%esp)
		jne    jump_27a13
		mov    %edx,%eax
		xor    %ebx,%ebx
	jump_278b4:
		inc    %ebx
		mov    data_196c14(%eax),%cl
		inc    %eax
		mov    %cl,0x7(%esp,%ebx,1)
		cmp    $0x1a,%ebx
		jl     jump_278b4
		lea    0x8(%esp),%eax
		mov    $0x40,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		je     jump_278e4
		movb   $0x1,0xa0(%esp)
		jmp    jump_27a13
	jump_278e4:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
	jump_278e8:
		xor    %eax,%eax
		mov    0x8(%esp,%ebx,1),%al
		call   func_24d5c
		test   %eax,%eax
		jne    jump_27930
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    %cl,0x31(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		addl   $0x8,0x88(%esp)
		jmp    jump_27979
	jump_27930:
		mov    0x8(%esp,%ebx,1),%al
		mov    %al,0x24(%esp)
		mov    0x9(%esp,%ebx,1),%al
		mov    %al,0x25(%esp)
		lea    0x24(%esp),%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x8e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    %cl,0x32(%esp)
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x88(%esp),%esi
		add    $0x10,%esi
		inc    %ebx
		mov    %esi,0x88(%esp)
	jump_27979:
		mov    0x80(%esp),%eax
		cmpw   $0x64,data_8293a(%eax)
		jge    jump_27990
		mov    %ebp,%eax
		mov    %ecx,%edx
		jmp    jump_27997
	jump_27990:
		mov    $0x1,%edx
		mov    %ebp,%eax
	jump_27997:
		call   func_24da5
		lea    0x64(%esp),%esi
		mov    data_15b9cc,%eax
		mov    $data_7cf20,%edi
		call   func_2b470
		call   func_19924
		lea    0x64(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_279cc
		cmp    data_1a0168,%ecx
		je     jump_279d5
	jump_279cc:
		cmpb   $0x1,data_15ba22
		jne    jump_279e4
	jump_279d5:
		call   func_2b206
		call   func_2b206
		call   func_2b206
	jump_279e4:
		cmpl   $0x1,data_7cf20
		je     jump_279fb
		cmp    data_1a0168,%ecx
		jne    jump_279fb
		mov    %cl,data_15ba22
	jump_279fb:
		cmp    0x24(%esp),%cl
		je     jump_27a0b
		inc    %ebx
		cmp    $0x1a,%ebx
		jl     jump_278e8
	jump_27a0b:
		addl   $0x1a,0x84(%esp)
	jump_27a13:
		mov    data_15b9cc,%eax
		mov    $0x1,%dl
		call   func_2b470
		mov    %dl,data_15ba22
	jump_27a25:
		lea    0x58(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x58(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   func_399ac
		cmpl   $0x0,data_1a0168
		jne    jump_27a59
		cmpl   $0x1,data_7cf20
		je     jump_27a59
		xor    %dh,%dh
		mov    %dh,data_15ba22
	jump_27a59:
		cmpl   $0x0,data_1a0168
		jne    jump_27a6b
		cmpl   $0x1,data_7cf20
		jne    jump_27a25
	jump_27a6b:
		cmpb   $0x1,data_15ba22
		je     jump_27a25
		cmpb   $0x1,0xa0(%esp)
		jne    jump_27acd
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy_ff
		lea    0x84(%esp),%eax
		push   %eax
		mov    0x88(%esp),%eax
		mov    0x6(%esp),%edx
		sub    $0x1a,%eax
		mov    %ebp,%ecx
		mov    %eax,0x88(%esp)
		mov    $data_196c14,%eax
		mov    0x88(%esp),%ebx
		sar    $0x10,%edx
		add    %ebx,%eax
		mov    0x4(%esp),%ebx
		call   func_256cd
		jmp    jump_27b34
	jump_27acd:
		xor    %eax,%eax
		mov    0x84(%esp),%edi
		mov    0x9c(%esp),%ax
		cmp    %edi,%eax
		jg     jump_27b1b
		mov    $0x1,%cl
		mov    $0x1,%eax
		mov    $data_172224,%ebx
		xor    %edx,%edx
		mov    %cl,data_15ba22
		call   func_20f7a
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		call   func_2b470
		mov    0x90(%esp),%eax
		jmp    jump_27b34
	jump_27b1b:
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy_ff
		jmp    jump_2712d
	jump_27b34:
		add    $0xa8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret
.data
data_27b3e:
		.fill   0x4
data_27b42:
		.fill   0x14
data_27b56:
		.fill   0x6
data_27b5c:
		.string ".\\cstldata\\"
		.fill   0x12
data_27b7a:
		.fill   0xf
data_27b89:
		.fill   0x1e
data_27ba7:
		.string ".\\cstldata\\"
		.fill   0x12
data_27bc5:
		.fill   0x2d
.text


/*----------------------------------------------------------------*/
func_27bf2:
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_7cf20,%edx
		cmp    $0x1,%edx
		je     jump_27c14
		cmp    $0x2,%edx
		je     jump_27c14
		cmpl   $0x0,data_1a0168
		jne    jump_27c14
		xor    %ah,%ah
		mov    %ah,data_15ba22
	jump_27c14:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_27c28:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%ebp
		mov    %edx,0xc(%esp)
		mov    %bl,0x18(%esp)
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    %bl,%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		cmpl   $0x0,data_1a0168
		jne    jump_27c6e
		call   func_3197d
	jump_27c6e:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%ebx
		add    $0x6,%ebx
		mov    $0x18,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_7cf28,%eax
		sub    %edx,%ebx
		mov    %eax,%edx
		mov    $0x10,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    data_7cf28,%eax
		sub    %edx,%eax
		mov    %eax,%ecx
		movswl %bx,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		movswl %cx,%edx
		mov    %ax,0x0(%ebp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x4,%edx
		sbb    %edx,%eax
		sar    $0x4,%eax
		mov    0xc(%esp),%edx
		mov    %ax,(%edx)
		mov    0x14(%esp),%eax
		cmp    0x0(%ebp),%ax
		jne    jump_27cf3
		mov    0xc(%esp),%edx
		mov    0x10(%esp),%eax
		cmp    (%edx),%ax
		je     jump_27d50
	jump_27cf3:
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x18(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%ebx
		mov    0x0(%ebp),%ax
		push   %ebx
		mov    %ax,0x18(%esp)
		mov    0x10(%esp),%eax
		push   $0x0
		mov    0x1a(%esp),%ebx
		mov    (%eax),%ax
		sar    $0x10,%ebx
		mov    %ax,0x18(%esp)
		mov    %ebx,%eax
		mov    0x16(%esp),%edx
		shl    $0x2,%eax
		sar    $0x10,%edx
		sub    %ebx,%eax
		shl    $0x4,%edx
		shl    $0x3,%eax
		lea    0x10(%edx),%ecx
		lea    0x10(%eax),%ebx
		inc    %edx
		sub    $0x7,%eax
		call   func_183aa
	jump_27d50:
		cmpl   $0x1,data_7cf20
		jne    jump_27d62
		cmpb   $0x0,data_15ba22
		je     jump_27d6b
	jump_27d62:
		cmpl   $0x0,data_1a0168
		je     jump_27d90
	jump_27d6b:
		mov    0x14(%esp),%eax
		mov    0xc(%esp),%edx
		mov    %ax,0x0(%ebp)
		mov    0x10(%esp),%eax
		mov    $0x1,%ch
		mov    %ax,(%edx)
		mov    $0x1,%eax
		mov    %ch,data_15ba22
		jmp    jump_27f12
	jump_27d90:
		cmpl   $0x0,data_1a0214
		je     jump_27dcf
		mov    data_56bfa,%cx
		cmp    $0x1,%cx
		jle    jump_27dcf
		mov    %ecx,%esi
		dec    %esi
		mov    %si,data_56bfa
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x18(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_27dcf:
		cmpl   $0x0,data_1a0234
		je     jump_27e17
		mov    data_56bf8,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0xd,%edx
		dec    %eax
		cmp    %eax,%edx
		jge    jump_27e17
		incw   data_56bfa
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x18(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_27e17:
		cmpl   $0x0,data_1a0220
		je     jump_27e54
		mov    data_56bfc,%ax
		test   %ax,%ax
		jle    jump_27e54
		mov    %eax,%edx
		dec    %edx
		mov    %dx,data_56bfc
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x18(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_27e54:
		cmpl   $0x0,data_1a0228
		je     jump_27e9b
		mov    data_56bfa,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0xd,%eax
		cmp    %edx,%eax
		jge    jump_27e9b
		incw   data_56bfc
		call   func_21e29
		call   func_2294d
		xor    %eax,%eax
		mov    0x18(%esp),%al
		call   func_2216f
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_27e9b:
		cmpl   $0x2,data_7cf20
		jne    jump_27eb4
		cmpb   $0x0,data_15ba22
		jne    jump_27eb4
		xor    %eax,%eax
		jmp    jump_27f12
	jump_27eb4:
		cmpl   $0x0,data_1a01ac
		je     jump_27f08
		mov    0x18(%esp),%dh
		cmp    $0x3,%dh
		jb     jump_27ecf
		jbe    jump_27ed4
		cmp    $0x4,%dh
		je     jump_27edb
		jmp    jump_27f01
	jump_27ecf:
		cmp    $0x2,%dh
		jne    jump_27f01
	jump_27ed4:
		mov    $0x7530,%eax
		jmp    jump_27f12
	jump_27edb:
		xor    %ebx,%ebx
	jump_27edd:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %dl,%dl
		mov    %dl,data_19e144(,%eax,8)
		inc    %ebx
		mov    %dl,data_19e149(,%eax,8)
		cmp    $0xaa,%bx
		jge    jump_27f08
		jmp    jump_27edd
	jump_27f01:
		mov    $0xff,%eax
		jmp    jump_27f12
	jump_27f08:
		call   func_27bf2
		jmp    jump_27c6e
	jump_27f12:
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_27f1a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		call   func_19ba9
		mov    $0x14,%edx
		xor    %eax,%eax
		call   func_2d919
		xor    %ebx,%ebx
		cmp    $0xffffffff,%eax
		jne    jump_27f44
	jump_27f3a:
		mov    $0xffffffff,%eax
		jmp    jump_28089
	jump_27f44:
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		movb   $0x1,data_15ba22
	jump_27f5a:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_28063
		cmpb   $0x0,data_15ba22
		jne    jump_28063
		mov    data_7cf24,%ecx
		cmp    $0x118,%ecx
		jl     jump_27fdb
		cmp    $0x13f,%ecx
		jg     jump_27fdb
		mov    data_7cf28,%edi
		test   %edi,%edi
		jl     jump_27fdb
		cmp    $0x63,%edi
		jg     jump_27fdb
		test   %bx,%bx
		jle    jump_27fb2
		sub    $0x5,%ebx
	jump_27fb2:
		call   func_19ba9
		mov    $0x14,%edx
		movswl %bx,%eax
		call   func_2d919
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		call   func_19b67
		mov    %dh,data_15ba22
	jump_27fdb:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_28033
		cmp    $0x13f,%eax
		jge    jump_28033
		mov    data_7cf28,%ecx
		cmp    $0x64,%ecx
		jl     jump_28033
		cmp    $0xc7,%ecx
		jg     jump_28033
		cmp    $0x76,%bx
		jge    jump_2800a
		add    $0x5,%ebx
	jump_2800a:
		call   func_19ba9
		mov    $0x14,%edx
		movswl %bx,%eax
		call   func_2d919
		mov    data_15b9cc,%eax
		mov    $0x1,%cl
		call   func_2b44f
		call   func_19b67
		mov    %cl,data_15ba22
	jump_28033:
		cmpl   $0x118,data_7cf24
		jge    jump_28063
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		movswl %bx,%esi
		mov    $0x1,%ch
		add    %esi,%eax
		mov    %ch,data_15ba22
		cmp    $0x7b,%ax
		jl     jump_28089
	jump_28063:
		cmpl   $0x2,data_7cf20
		jne    jump_2807f
		cmpb   $0x0,data_15ba22
		jne    jump_2807f
		call   func_319db
		jmp    jump_27f3a
	jump_2807f:
		call   func_27bf2
		jmp    jump_27f5a
	jump_28089:
		add    $0xc,%esp
		jmp    jump_285c3


/*----------------------------------------------------------------*/
func_28091:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    data_27b3e,%eax
		mov    %eax,(%esp)
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		mov    data_15b9cc,%edx
		push   %edx
		mov    %esi,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x1,%edx
		mov    %ecx,%ebx
		xor    %eax,%eax
		shl    $0x3,%ebx
		mov    $0x11,%ecx
		add    $0x10,%ebx
		call   func_1851e
		mov    $0x12,%edx
		mov    data_15b9cc,%ebx
		mov    $0x23,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x38,%ebx
		call   func_1843d
		push   %esi
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		xor    %eax,%eax
		mov    data_53d0b,%al
		mov    $0x100,%edx
		movswl %ax,%ebx
		mov    $0x4,%eax
		mov    $0x5,%ecx
		call   func_2c1c9
		mov    $0x13,%edx
		xor    %eax,%eax
		mov    %esp,%ebx
		call   func_20f7a
		mov    $0x4,%eax
		call   func_2c775
		mov    $0x1,%eax
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		call   func_20f7a
		mov    $0x4,%eax
		call   func_2c1c9
		call   func_19b67
		mov    %esp,%eax
		call   func_3b155
		add    $0x4,%esp
		jmp    jump_285c3


/*----------------------------------------------------------------*/
func_2817a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%ebp
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		mov    data_15b9cc,%edx
		push   %edx
		mov    %esi,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x1,%edx
		mov    %ecx,%ebx
		xor    %eax,%eax
		shl    $0x3,%ebx
		mov    $0x11,%ecx
		add    $0x10,%ebx
		call   func_1851e
		mov    $0x12,%edx
		mov    data_15b9cc,%ebx
		mov    $0x23,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x68,%ebx
		call   func_1843d
		push   %esi
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		xor    %eax,%eax
		mov    data_53d0b,%al
		mov    $0x100,%edx
		movswl %ax,%ebx
		mov    $0x4,%eax
		mov    $0xa,%ecx
		call   func_2c1c9
		xor    %eax,%eax
		mov    $0x13,%edx
		call   func_20f7a
		mov    %ebp,%ebx
		mov    $0x4,%eax
		call   func_2c775
		mov    $0x1,%eax
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		call   func_20f7a
		mov    $0x4,%eax
		call   func_2c1c9
		call   func_19b67
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_28251:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		xor    %edx,%edx
		mov    %dx,0xc(%esp)
	jump_28261:
		lea    0x10(%esp),%eax
		lea    0x14(%esp),%edx
		mov    $0x2,%ebx
		call   func_27c28
		test   %ax,%ax
		je     jump_285bf
		cmp    $0x7530,%ax
		jne    jump_282b5
		xor    %ebx,%ebx
		jmp    jump_28295
	jump_28286:
		lea    (%eax,%eax,1),%edx
		mov    data_15b9bc,%eax
		inc    %ebx
		movw   $0x0,(%edx,%eax,1)
	jump_28295:
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_28286
		jmp    jump_285bf
	jump_282b5:
		mov    data_56bf8,%eax
		mov    0x12(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9bc,%ebp
		add    %eax,%eax
		mov    0xe(%esp),%edx
		add    %eax,%ebp
		mov    data_56bfa,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    %eax,%ebp
		cmpw   $0x0,0x0(%ebp)
		je     jump_2830a
		mov    $0x1,%ah
		movw   $0x0,0x0(%ebp)
		mov    %ah,data_15ba22
		jmp    jump_28261
	jump_2830a:
		call   func_19ba9
		mov    0xa(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_2d5bc
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_2832f:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_285a8
		cmpb   $0x0,data_15ba22
		jne    jump_285a8
		mov    data_7cf24,%ebx
		cmp    $0x118,%ebx
		jl     jump_283b5
		cmp    $0x13f,%ebx
		jg     jump_283b5
		mov    data_7cf28,%esi
		test   %esi,%esi
		jl     jump_283b5
		cmp    $0x63,%esi
		jg     jump_283b5
		mov    0xc(%esp),%ecx
		test   %cx,%cx
		jle    jump_28392
		mov    %ecx,%esi
		sub    $0x5,%esi
		mov    %si,0xc(%esp)
	jump_28392:
		mov    0xa(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_2d5bc
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		mov    %dh,data_15ba22
	jump_283b5:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_2841a
		cmp    $0x13f,%eax
		jge    jump_2841a
		mov    data_7cf28,%ebx
		cmp    $0x64,%ebx
		jl     jump_2841a
		cmp    $0xc7,%ebx
		jg     jump_2841a
		xor    %eax,%eax
		mov    0xa(%esp),%edx
		mov    data_99230,%ax
		sar    $0x10,%edx
		sub    $0x5,%eax
		cmp    %eax,%edx
		jge    jump_283f7
		addw   $0x5,0xc(%esp)
	jump_283f7:
		mov    0xa(%esp),%eax
		mov    $0x14,%edx
		sar    $0x10,%eax
		call   func_2d5bc
		mov    data_15b9cc,%eax
		mov    $0x1,%bl
		call   func_2b44f
		mov    %bl,data_15ba22
	jump_2841a:
		cmpl   $0x118,data_7cf24
		jge    jump_285a8
		call   func_19ba9
		call   func_21e29
		mov    $0x2,%eax
		call   func_2216f
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0xa(%esp),%edx
		sar    $0x10,%edx
		add    %edx,%eax
		mov    $0x28,%ecx
		mov    %eax,%esi
		mov    data_15b9cc,%eax
		mov    $0x13f,%ebx
		push   %eax
		xor    %edx,%edx
		mov    $0x118,%eax
		call   func_1843d
		movswl %si,%eax
		mov    data_99232(,%eax,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x14,%edx
		add    $0x12c,%eax
		call   func_2b240
		mov    $0x56,%ebx
		mov    data_15b9cc,%edx
		mov    $0x11,%ecx
		push   %edx
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_1851e
		mov    $0x12,%edx
		mov    data_15b9cc,%ebx
		mov    $0x23,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x56,%ebx
		call   func_1843d
		mov    $0x24,%edx
		mov    data_15b9cc,%ecx
		mov    $0x56,%ebx
		push   %ecx
		xor    %eax,%eax
		mov    $0x35,%ecx
		call   func_1843d
		push   $data_519d8
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_519e3
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_519ec
		push   $0x26
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		mov    $0x1,%bh
		mov    $0x56,%edx
		push   $0x11
		mov    $0x35,%ecx
		mov    %bh,data_15ba22
		push   $0x56
		xor    %eax,%eax
		mov    $0x12,%ebx
		call   func_31a49
		cmp    $0x1,%eax
		jb     jump_28579
		jbe    jump_2856a
		cmp    $0x2,%eax
		je     jump_28576
		jmp    jump_28579
	jump_2856a:
		add    $0x1f5,%esi
	jump_28570:
		mov    %si,0x0(%ebp)
		jmp    jump_28581
	jump_28576:
		inc    %esi
		jmp    jump_28570
	jump_28579:
		xor    %esi,%esi
		mov    %esi,data_7cf20
	jump_28581:
		mov    $data_519f5,%eax
		call   func_28091
		imul   $0x3e8,%eax,%eax
		mov    0x0(%ebp),%dx
		add    %eax,%edx
		mov    $0x1,%cl
		mov    %dx,0x0(%ebp)
		mov    %cl,data_15ba22
		jmp    jump_28261
	jump_285a8:
		cmpl   $0x2,data_7cf20
		je     jump_28261
		call   func_27bf2
		jmp    jump_2832f
	jump_285bf:
		add    $0x18,%esp
	jump_285c2:
		pop    %ebp
	jump_285c3:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_285c9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		xor    %ecx,%ecx
		mov    $0x14,%ebp
	jump_285d9:
		lea    0x10(%esp),%eax
		lea    0xc(%esp),%edx
		mov    $0x3,%ebx
		call   func_27c28
		test   %ax,%ax
		je     jump_287d3
		cmp    $0x7530,%ax
		jne    jump_2862b
		xor    %ecx,%ecx
		jmp    jump_2860b
	jump_285fe:
		mov    data_15b9b8,%edx
		inc    %ecx
		movw   $0x0,(%edx,%eax,2)
	jump_2860b:
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		imul   %eax,%edx
		movswl %cx,%eax
		cmp    %edx,%eax
		jl     jump_285fe
		jmp    jump_287d3
	jump_2862b:
		mov    data_56bf8,%eax
		mov    0xa(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9b8,%ebx
		add    %eax,%eax
		mov    0xe(%esp),%edx
		add    %eax,%ebx
		mov    data_56bfa,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    %ebp,%edx
		add    %eax,%ebx
		movswl %cx,%eax
		call   func_2d5bc
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		cmpw   $0x0,(%ebx)
		je     jump_2869c
		mov    $0x1,%ah
		movw   $0x0,(%ebx)
		mov    %ah,data_15ba22
		jmp    jump_285d9
	jump_2869c:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_287bc
		cmpb   $0x0,data_15ba22
		jne    jump_287bc
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_28719
		cmp    $0x13f,%esi
		jg     jump_28719
		mov    data_7cf28,%eax
		test   %eax,%eax
		jl     jump_28719
		cmp    $0x63,%eax
		jg     jump_28719
		test   %cx,%cx
		jle    jump_286f3
		sub    $0x5,%ecx
	jump_286f3:
		movswl %cx,%eax
		mov    %ebp,%edx
		call   func_2d5bc
		call   func_19ba9
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		call   func_19b67
		mov    %dh,data_15ba22
	jump_28719:
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_2877a
		cmp    $0x13f,%esi
		jge    jump_2877a
		mov    data_7cf28,%eax
		cmp    $0x64,%eax
		jl     jump_2877a
		cmp    $0xc7,%eax
		jg     jump_2877a
		xor    %eax,%eax
		mov    data_99230,%ax
		movswl %cx,%edx
		sub    $0x5,%eax
		cmp    %eax,%edx
		jge    jump_28755
		add    $0x5,%ecx
	jump_28755:
		movswl %cx,%eax
		mov    %ebp,%edx
		call   func_2d5bc
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		movb   $0x1,data_15ba22
	jump_2877a:
		cmpl   $0x118,data_7cf24
		jge    jump_287bc
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%esi
		sar    $0x1f,%edx
		idiv   %esi
		movswl %cx,%edx
		add    %edx,%eax
		mov    %eax,%edx
		inc    %eax
		mov    %ax,(%ebx)
		movb   $0x1,data_15ba22
		xor    %eax,%eax
		movswl %dx,%edx
		mov    data_99230,%ax
		cmp    %eax,%edx
		jl     jump_285d9
	jump_287bc:
		cmpl   $0x2,data_7cf20
		je     jump_285d9
		call   func_27bf2
		jmp    jump_2869c
	jump_287d3:
		add    $0x14,%esp
		jmp    jump_285c2


/*----------------------------------------------------------------*/
func_287db:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		push   %eax
		lea    0x4(%esp),%edi
		mov    $data_27b42,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x18(%esp),%edi
		mov    $data_27b56,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		call   func_21e29
		xor    %esi,%esi
	jump_2880b:
		mov    data_15b9cc,%edx
		push   %edx
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $0x50,%ebx
		add    %edx,%edx
		xor    %eax,%eax
		lea    0x11(%edx),%ecx
		inc    %esi
		call   func_1843d
		cmp    $0x7,%si
		jl     jump_2880b
		push   $data_51a15
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a1f
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a28
		push   $0x26
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a32
		push   $0x38
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a3c
		push   $0x4a
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a46
		push   $0x5c
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a50
		push   $0x6d
		push   $0x10
		call   func_2c6ab
		add    $0xc,%esp
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		mov    %eax,%ebp
		shl    $0x2,%ebp
		add    %eax,%ebp
		mov    $data_16e78c,%edx
		shl    $0x3,%ebp
		lea    0x24(%esp),%ebx
		mov    data_19e161(%ebp),%eax
		lea    0x20(%esp),%ecx
		sar    $0x10,%eax
		call   func_24ba4
		mov    $0x64,%eax
		mov    $0x1e,%edx
		mov    $data_16e78c,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    data_19e15f(%ebp),%eax
		sar    $0x10,%eax
		shl    $0x6,%eax
		mov    $0x12,%edx
		mov    data_921ae(%eax),%ebx
		mov    data_15b9cc,%ecx
		mov    $0xe6,%eax
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $0xc8,%eax
		mov    data_15b9cc,%ebx
		mov    $0x32,%edx
		push   %ebx
		mov    $0x46,%ecx
		mov    $0x12c,%ebx
		call   func_1851e
		mov    $data_19e144,%eax
		add    %ebp,%eax
		add    $0x5,%eax
		push   %eax
		push   $0x34
		lea    0xc(%esp),%edi
		mov    $data_51a55,%esi
		push   $0xcc
		lea    0x24(%esp),%edx
		mov    $0xa,%ebx
		call   func_2c6ab
		xor    %eax,%eax
		add    $0xc,%esp
		mov    data_19e16b(%ebp),%al
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		lea    0x4(%esp),%edi
		lea    0x18(%esp),%esi
		mov    $0x64,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_2898e:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_289aa
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_2898e
	jump_289aa:
		pop    %edi
		mov    data_15b9cc,%ecx
		mov    $0x12c,%ebx
		push   %ecx
		mov    $0xc8,%eax
		mov    $0x77,%ecx
		call   func_1851e
		lea    0x4(%esp),%eax
		push   %eax
		push   $0x66
		lea    0xc(%esp),%edi
		mov    $data_51a5c,%esi
		push   $0xcc
		lea    0x24(%esp),%edx
		mov    $0xa,%ebx
		call   func_2c6ab
		xor    %eax,%eax
		add    $0xc,%esp
		mov    data_19e16a(%ebp),%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		lea    0x4(%esp),%edi
		lea    0x18(%esp),%esi
		mov    $0x78,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_28a14:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_28a30
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_28a14
	jump_28a30:
		pop    %edi
		mov    data_15b9cc,%esi
		mov    $0x12c,%ebx
		push   %esi
		mov    $0xc8,%eax
		mov    $0x8b,%ecx
		call   func_1851e
		lea    0x4(%esp),%eax
		push   %eax
		push   $0x7a
		lea    0xc(%esp),%edi
		lea    0x20(%esp),%edx
		push   $0xcc
		mov    $0xa,%ebx
		mov    $data_51a67,%esi
		call   func_2c6ab
		mov    data_19e15b(%ebp),%eax
		add    $0xc,%esp
		sar    $0x10,%eax
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_itoa_
		lea    0x4(%esp),%edi
		lea    0x18(%esp),%esi
		mov    $0x8c,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_28a9b:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_28ab7
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_28a9b
	jump_28ab7:
		pop    %edi
		mov    data_15b9cc,%edi
		mov    $0x12c,%ebx
		push   %edi
		mov    $0xc8,%eax
		mov    $0x9f,%ecx
		call   func_1851e
		lea    0x4(%esp),%eax
		push   %eax
		push   $0x8e
		push   $0xcc
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x28,%esp
		jmp    jump_285c2

vtable_28b02:
		.long   func_28eb8
		.long   func_28ee5
		.long   func_29020
		.long   func_29153
		.long   func_2917a
		.long   func_291a0


/*----------------------------------------------------------------*/
func_28b1a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x2c,%esp
	jump_28b23:
		lea    0x20(%esp),%eax
		lea    0x1c(%esp),%edx
		mov    $0x5,%ebx
		call   func_27c28
		test   %ax,%ax
		je     jump_292a6
		xor    %ebx,%ebx
	jump_28b40:
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %edx,%eax
		mov    0x1e(%esp),%edi
		shl    $0x2,%eax
		mov    data_56bfa,%ecx
		add    %edx,%eax
		sar    $0x10,%ecx
		shl    $0x3,%eax
		sar    $0x10,%edi
		mov    data_19e163(%eax),%esi
		add    %edi,%ecx
		sar    $0x10,%esi
		cmp    %ecx,%esi
		jne    jump_28bc0
		mov    0x1a(%esp),%edi
		mov    data_56bf8,%esi
		mov    data_19e165(%eax),%ecx
		sar    $0x10,%esi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		add    %edi,%esi
		cmp    %esi,%ecx
		jne    jump_28bc0
		cmpb   $0x0,data_19e149(%eax)
		je     jump_28bc0
		lea    0x2(%edx),%ecx
		mov    %ecx,%edx
		shl    $0x2,%edx
		sub    %ecx,%edx
		movb   $0x0,data_82934(%ecx,%edx,4)
		xor    %ch,%ch
		mov    $0x1,%dh
		mov    %ch,data_19e144(%eax)
		mov    %dh,data_15ba22
		mov    %ch,data_19e149(%eax)
		jmp    jump_28bcc
	jump_28bc0:
		inc    %ebx
		cmp    $0xb3,%bx
		jbe    jump_28b40
	jump_28bcc:
		cmp    $0xb3,%bx
		jbe    jump_28b23
		call   func_19ba9
		call   func_21e29
		mov    $0x5,%eax
		mov    $0x56,%ebx
		call   func_2216f
		mov    data_15b9cc,%edx
		mov    $0x11,%ecx
		push   %edx
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_1843d
		mov    $0x12,%edx
		mov    data_15b9cc,%ebx
		mov    $0x23,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x56,%ebx
		call   func_1843d
		push   $data_51a72
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51a7b
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		push   $0x11
		mov    $0x56,%edx
		mov    $0x23,%ecx
		push   $0x56
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_31a49
		cmp    $0x2,%ax
		jne    jump_28d9b
		mov    %eax,%ebx
	jump_28c78:
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x68,data_19e149(%eax)
		jne    jump_28cbf
		cmpb   $0x69,data_19e14a(%eax)
		jne    jump_28cbf
		cmpb   $0x72,data_19e14b(%eax)
		jne    jump_28cbf
		cmpb   $0x65,data_19e14c(%eax)
		jne    jump_28cbf
		cmpb   $0x64,data_19e14d(%eax)
		jne    jump_28cbf
		inc    %ebx
		cmp    $0xb5,%bx
		jbe    jump_28c78
	jump_28cbf:
		cmp    $0xb5,%bx
		jne    jump_28cda
		mov    $data_51a84,%eax
		call   w_puts
		call   w_dos_getch
		call   func_19079
	jump_28cda:
		xor    %eax,%eax
		mov    %bx,%ax
		sub    $0x2,%eax
		mov    %eax,%ecx
		shl    $0x2,%ecx
		add    %eax,%ecx
		mov    $data_51a99,%esi
		lea    data_19e149(,%ecx,8),%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    0x20(%esp),%edi
		mov    data_56bfc,%ax
		add    %edi,%eax
		mov    0x1c(%esp),%edx
		mov    %ax,data_19e145(,%ecx,8)
		mov    data_56bfa,%ax
		add    %edx,%eax
		inc    %eax
		xor    %dh,%dh
		mov    %ax,data_19e147(,%ecx,8)
		mov    %dh,data_19e16b(,%ecx,8)
		mov    data_19e145(,%ecx,8),%ax
		mov    %ax,data_19e165(,%ecx,8)
		mov    data_19e147(,%ecx,8),%ax
		mov    $0xa,%ebx
		mov    %ax,data_19e167(,%ecx,8)
		call   func_27f1a
		inc    %ax
		lea    0x18(%esp),%edx
		and    $0xffff,%eax
		call   func_itoa_
		mov    0x18(%esp),%al
		xor    %bl,%bl
		mov    %al,data_19e14e(,%ecx,8)
		mov    %bl,data_19e151(,%ecx,8)
		mov    0x19(%esp),%al
		mov    $0x1,%bh
		mov    %al,data_19e14f(,%ecx,8)
		mov    0x1a(%esp),%al
		mov    %bh,data_15ba22
		mov    %al,data_19e150(,%ecx,8)
		jmp    jump_292a6
	jump_28d9b:
		test   %ax,%ax
		je     jump_292a6
		movl   $0x2,0x24(%esp)
	jump_28dac:
		xor    %edx,%edx
		mov    0x24(%esp),%dx
		sub    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x1,data_19e144(%eax)
		je     jump_28dd2
		cmpb   $0x0,data_19e149(%eax)
		je     jump_28de2
	jump_28dd2:
		mov    0x24(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x24(%esp)
		cmp    $0xb5,%bx
		jbe    jump_28dac
	jump_28de2:
		mov    0x24(%esp),%esi
		cmp    $0xb5,%si
		jne    jump_28e04
		push   $data_51a9f
		call   w_printf
		add    $0x4,%esp
		call   w_dos_getch
		jmp    jump_292a6
	jump_28e04:
		xor    %eax,%eax
		mov    %si,%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		mov    0x20(%esp),%edi
		shl    $0x2,%eax
		mov    data_56bfc,%bx
		add    %edx,%eax
		add    %edi,%ebx
		mov    $0x8,%cl
		mov    %bx,data_19e145(,%eax,8)
		mov    $0x4,%ch
		mov    %cl,data_19e16b(,%eax,8)
		mov    $0x54,%esi
		mov    %ch,data_19e16a(,%eax,8)
		mov    data_56bfa,%dx
		mov    %si,data_19e163(,%eax,8)
		mov    0x1c(%esp),%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    %cx,data_19e161(,%eax,8)
		inc    %edx
		mov    %dx,data_19e147(,%eax,8)
		mov    0x24(%esp),%eax
		sub    $0x2,%eax
		mov    %ax,0x28(%esp)
		mov    $0x14,%ebp
	jump_28e78:
		mov    0x26(%esp),%eax
		sar    $0x10,%eax
		call   func_287db
		push   $0x0
		push   $0x12
		mov    $0x56,%edx
		mov    $0x7e,%ecx
		push   $0x56
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_31a49
		mov    %eax,%ecx
		dec    %ax
		cmp    $0x5,%ax
		ja     jump_291c4
		and    $0xffff,%eax
		jmp    *vtable_28b02(,%eax,4)


/*----------------------------------------------------------------*/
func_28eb8:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    0x24(%esp),%dx
		sub    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $data_19e144,%edx
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $data_51ab5,%eax
		add    $0x5,%edx
		call   func_2817a
		jmp    jump_291c4


/*----------------------------------------------------------------*/
func_28ee5:
/*----------------------------------------------------------------*/
		mov    data_5ec94,%eax
		mov    %ebp,%edx
		call   func_2d777
		movb   $0x1,data_15ba22
	jump_28ef8:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_29016
		cmpb   $0x0,data_15ba22
		jne    jump_29016
		mov    data_7cf24,%edi
		cmp    $0x118,%edi
		jl     jump_28f6e
		cmp    $0x13f,%edi
		jg     jump_28f6e
		mov    data_7cf28,%edx
		test   %edx,%edx
		jl     jump_28f6e
		cmp    $0x63,%edx
		jg     jump_28f6e
		mov    data_5ec94,%esi
		test   %esi,%esi
		jle    jump_28f5b
		lea    -0x5(%esi),%edi
		mov    %edi,data_5ec94
	jump_28f5b:
		mov    data_5ec94,%eax
		mov    %ebp,%edx
		call   func_2d777
		movb   $0x1,data_15ba22
	jump_28f6e:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_28fbd
		cmp    $0x13f,%eax
		jge    jump_28fbd
		mov    data_7cf28,%ebx
		cmp    $0x64,%ebx
		jl     jump_28fbd
		cmp    $0xc7,%ebx
		jg     jump_28fbd
		mov    data_5ec94,%edi
		cmp    $0xd9,%edi
		jge    jump_28faa
		lea    0x5(%edi),%eax
		mov    %eax,data_5ec94
	jump_28faa:
		mov    data_5ec94,%eax
		mov    %ebp,%edx
		call   func_2d777
		movb   $0x1,data_15ba22
	jump_28fbd:
		cmpl   $0x118,data_7cf24
		jge    jump_29016
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		add    data_5ec94,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x24(%esp),%ax
		lea    -0x2(%eax),%esi
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		mov    %dx,data_19e161(,%eax,8)
		mov    $0x1,%dh
		mov    data_19e161(,%eax,8),%si
		mov    %dh,data_15ba22
		cmp    $0xde,%si
		jl     jump_291c4
	jump_29016:
		call   func_27bf2
		jmp    jump_28ef8


/*----------------------------------------------------------------*/
func_29020:
/*----------------------------------------------------------------*/
		mov    data_5ec94,%eax
		call   func_2e078
		movb   $0x1,data_15ba22
	jump_29031:
		lea    0xc(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_29149
		cmpb   $0x0,data_15ba22
		jne    jump_29149
		mov    data_7cf24,%edi
		cmp    $0x118,%edi
		jl     jump_290aa
		cmp    $0x13f,%edi
		jg     jump_290aa
		mov    data_7cf28,%edx
		test   %edx,%edx
		jl     jump_290aa
		cmp    $0x63,%edx
		jg     jump_290aa
		mov    data_5ec94,%esi
		test   %esi,%esi
		jle    jump_29098
		lea    -0x5(%esi),%edi
		mov    %edi,data_5ec94
	jump_29098:
		mov    data_5ec94,%eax
		mov    $0x1,%dh
		call   func_2e078
		mov    %dh,data_15ba22
	jump_290aa:
		mov    data_7cf24,%eax
		cmp    $0x118,%eax
		jl     jump_290f5
		cmp    $0x13f,%eax
		jge    jump_290f5
		mov    data_7cf28,%ebx
		cmp    $0x64,%ebx
		jl     jump_290f5
		cmp    $0xc7,%ebx
		jg     jump_290f5
		mov    data_5ec94,%edi
		cmp    $0x50,%edi
		jge    jump_290e3
		lea    0x5(%edi),%eax
		mov    %eax,data_5ec94
	jump_290e3:
		mov    data_5ec94,%eax
		mov    $0x1,%bl
		call   func_2e078
		mov    %bl,data_15ba22
	jump_290f5:
		cmpl   $0x118,data_7cf24
		jge    jump_29149
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		xor    %esi,%esi
		mov    data_5ec94,%ebx
		mov    0x24(%esp),%si
		add    %ebx,%eax
		sub    $0x2,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		shl    $0x2,%eax
		mov    $0x1,%bh
		add    %esi,%eax
		mov    %bh,data_15ba22
		mov    %edx,%ebx
		mov    %dx,data_19e163(,%eax,8)
		cmp    $0x55,%bx
		jl     jump_291c4
	jump_29149:
		call   func_27bf2
		jmp    jump_29031


/*----------------------------------------------------------------*/
func_29153:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    $data_51a32,%eax
		mov    0x24(%esp),%dx
		call   func_28091
		sub    $0x2,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %bx,data_19e15d(,%eax,8)
		jmp    jump_291c4


/*----------------------------------------------------------------*/
func_2917a:
/*----------------------------------------------------------------*/
		mov    $data_51a3c,%eax
		call   func_28091
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x24(%esp),%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %bl,data_19e16a(,%eax,8)
		jmp    jump_291c4


/*----------------------------------------------------------------*/
func_291a0:
/*----------------------------------------------------------------*/
		mov    $data_51a46,%eax
		call   func_28091
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x24(%esp),%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    %bl,data_19e16b(,%eax,8)
	jump_291c4:
		cmp    $0x7,%cx
		je     jump_291f2
		test   %cx,%cx
		jne    jump_28e78
		xor    %eax,%eax
		mov    0x24(%esp),%ax
		lea    -0x2(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %bl,%bl
		mov    %bl,data_19e149(,%eax,8)
		jmp    jump_292a6
	jump_291f2:
		call   func_3197d
		xor    %ebx,%ebx
		mov    0x24(%esp),%bx
		lea    -0x2(%ebx),%eax
		mov    %eax,%esi
		shl    $0x2,%esi
		add    %eax,%esi
		shl    $0x3,%esi
		mov    data_19e161(%esi),%ax
		mov    $0x1,%cl
		shl    $0x4,%eax
		xor    %edx,%edx
		cwtl
		mov    %cl,data_19e144(%esi)
		push   %eax
		mov    $0x4,%ecx
		xor    %eax,%eax
		call   func_1a51d
		cmpb   $0x0,data_19e16a(%esi)
		jne    jump_2925f
		mov    data_19e145(%esi),%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9c4,%edx
		add    %edx,%eax
		mov    data_19e143(%esi),%edx
		sar    $0x10,%edx
		movb   $0xff,(%edx,%eax,1)
	jump_2925f:
		xor    %edx,%edx
		mov    0x24(%esp),%dx
		sub    $0x2,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19e145(%eax),%dx
		mov    %dx,data_19e165(%eax)
		mov    data_19e147(%eax),%dx
		mov    %dx,data_19e167(%eax)
		cmpb   $0x0,data_19e149(%eax)
		jne    jump_292a6
		mov    data_51abb,%dx
		mov    %dx,data_19e149(%eax)
	jump_292a6:
		add    $0x2c,%esp
		jmp    jump_285c2


/*----------------------------------------------------------------*/
func_292ae:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
	jump_292b5:
		lea    0xc(%esp),%eax
		lea    0x8(%esp),%edx
		mov    $0x1,%ebx
		call   func_27c28
		test   %al,%al
		je     jump_2942e
		cmp    $0xff,%al
		jne    jump_29302
		xor    %ebx,%ebx
		jmp    jump_292e2
	jump_292d7:
		mov    data_15b9c0,%edx
		inc    %ebx
		movb   $0x0,(%edx,%eax,1)
	jump_292e2:
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     jump_292d7
		jmp    jump_2942e
	jump_29302:
		mov    data_56bf8,%edx
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		mov    data_15ba1e,%edx
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_15b9c0,%esi
		mov    data_56bfa,%edx
		add    %eax,%esi
		mov    0xa(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		add    %eax,%esi
		cmpb   $0x0,(%esi)
		je     jump_29351
		mov    $0x1,%dh
		movb   $0x0,(%esi)
		mov    %dh,data_15ba22
		jmp    jump_292b5
	jump_29351:
		call   func_19ba9
		xor    %eax,%eax
		mov    $0x56,%ebx
		call   func_20f7a
		mov    data_15b9cc,%edx
		mov    $0x11,%ecx
		push   %edx
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_1843d
		mov    $0x12,%edx
		mov    data_15b9cc,%ebx
		mov    $0x23,%ecx
		push   %ebx
		xor    %eax,%eax
		mov    $0x56,%ebx
		call   func_1851e
		push   $data_51abd
		push   $0x2
		push   $0x4
		mov    $0x14,%edx
		lea    0xc(%esp),%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x5,%ecx
		mov    $0x4,%eax
		call   func_2c775
		mov    %esp,%eax
		mov    $data_51ac7,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_293dd
		mov    %esp,%eax
		mov    $data_51acd,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_293e2
	jump_293dd:
		movb   $0xff,(%esi)
		jmp    jump_29412
	jump_293e2:
		mov    %esp,%eax
		mov    $data_51ad3,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_29402
		mov    %esp,%eax
		mov    $data_51ad8,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		jne    jump_29407
	jump_29402:
		movb   $0xfe,(%esi)
		jmp    jump_29412
	jump_29407:
		mov    %esp,%eax
		call   func_3b155
		inc    %al
		mov    %al,(%esi)
	jump_29412:
		mov    $0x1,%dl
		mov    $0x1,%eax
		mov    %dl,data_15ba22
		call   func_20f7a
		call   func_19b67
		jmp    jump_292b5
	jump_2942e:
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_29436:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x8,%esp
	jump_2943b:
		lea    0x4(%esp),%eax
		mov    %esp,%edx
		mov    $0x4,%ebx
		call   func_27c28
		test   %ax,%ax
		je     jump_294b0
		mov    data_56bf8,%eax
		mov    -0x2(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    %eax,%edx
		mov    data_15ba1e,%eax
		sar    $0x10,%eax
		imul   %edx,%eax
		mov    data_15b9c4,%edx
		lea    (%edx,%eax,1),%ebx
		mov    data_56bfa,%edx
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %edx,%eax
		add    %ebx,%eax
		cmpb   $0x0,(%eax)
		je     jump_294a4
		cmpl   $0x0,data_1a0168
		jne    jump_294a4
		mov    $0x1,%dh
		movb   $0x0,(%eax)
		mov    %dh,data_15ba22
		jmp    jump_294a7
	jump_294a4:
		movb   $0x1,(%eax)
	jump_294a7:
		movb   $0x1,data_15ba22
		jmp    jump_2943b
	jump_294b0:
		add    $0x8,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_295b4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
	jump_295b8:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %dl,%dl
		inc    %ebx
		mov    %dl,data_19e144(,%eax,8)
		cmp    $0x32,%bx
		jl     jump_295b8
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2966a:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		xor    %esi,%esi
	jump_2967f:
		mov    data_15b9cc,%edx
		push   %edx
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %eax,%edx
		mov    $0x50,%ebx
		add    %edx,%edx
		xor    %eax,%eax
		lea    0x11(%edx),%ecx
		inc    %esi
		call   func_1843d
		cmp    $0xb,%si
		jl     jump_2967f
		push   $data_51add
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51ae6
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51af0
		push   $0x26
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51af7
		push   $0x38
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b01
		push   $0x4a
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b06
		push   $0x5c
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b0f
		push   $0x6e
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b19
		push   $0x80
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b1f
		push   $0x92
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51b29
		push   $0xb6
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2976f:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x6c,%esp
		mov    $0x7,%ecx
		lea    0x20(%esp),%edi
		mov    $data_27b5c,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		lea    0x40(%esp),%edi
		mov    $data_27b7a,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x7,%ecx
		mov    %esp,%edi
		mov    $data_27b89,%esi
		lea    0x40(%esp),%edx
		mov    $0xa,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		call   func_21e29
		xor    %eax,%eax
		lea    0x40(%esp),%edi
		mov    data_15ba23,%al
		mov    $data_51b32,%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_297da:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_297f6
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_297da
	jump_297f6:
		pop    %edi
		lea    0x40(%esp),%eax
		push   %eax
		push   $0x1
		push   $0xe6
		mov    $0x1,%dl
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		lea    0x20(%esp),%ebx
		call   func_2b44f
		mov    %dl,data_15ba22
		xor    %ah,%ah
		mov    $data_51b37,%edx
		mov    %ah,0x40(%esp)
		mov    $data_51b3d,%eax
		call   func_30bad
		lea    0x20(%esp),%eax
		mov    $data_51b47,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_29d5d
		lea    0x20(%esp),%eax
		mov    $0x77,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		jne    jump_2989f
		lea    0x20(%esp),%eax
		mov    $0x57,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		jne    jump_2989f
		lea    0x20(%esp),%edi
		mov    $data_51b53,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_29882:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_2989e
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_29882
	jump_2989e:
		pop    %edi
	jump_2989f:
		call   func_19ba9
		mov    $0x6e,%eax
		mov    data_15b9cc,%edx
		mov    $0xd2,%ebx
		push   %edx
		mov    $0x90,%ecx
		mov    $0x50,%edx
		call   func_1843d
		push   $data_51b58
		push   $0x52
		push   $0x72
		mov    $0x64,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x77,%ecx
		push   %ebx
		mov    $0x78,%eax
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_51b62
		push   $0x66
		push   $0x96
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ecx
		mov    $0x78,%eax
		push   %ecx
		mov    %eax,%edx
		mov    $0x8b,%ecx
		call   func_1843d
		push   $data_51b66
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_29949:
		lea    0x5c(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x5c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0x78,%esi
		jl     jump_2998a
		cmp    $0xc8,%esi
		jg     jump_2998a
		mov    data_7cf28,%ebp
		cmp    $0x64,%ebp
		jl     jump_2998a
		cmp    $0x78,%ebp
		jg     jump_2998a
		cmpl   $0x1,data_7cf20
		je     jump_299ca
	jump_2998a:
		mov    data_7cf24,%ebx
		cmp    $0x78,%ebx
		jl     jump_29949
		cmp    $0xc8,%ebx
		jg     jump_29949
		mov    data_7cf28,%esi
		cmp    $0x78,%esi
		jl     jump_29949
		cmp    $0x8c,%esi
		jg     jump_29949
		cmpl   $0x1,data_7cf20
		jne    jump_29949
	jump_299b9:
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		jmp    jump_29d5d
	jump_299ca:
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		call   func_3197d
		push   $0x200
		lea    0x24(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x68(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_29b26
		call   func_19ba9
		mov    $0x50,%edx
		mov    data_15b9cc,%eax
		mov    $0xd2,%ebx
		push   %eax
		mov    $0x90,%ecx
		mov    $0x6e,%eax
		call   func_1843d
		push   $data_51b6c
		push   $0x52
		push   $0x72
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%edx
		mov    $0x77,%ecx
		push   %edx
		mov    $0x78,%eax
		mov    $0x64,%edx
		call   func_1843d
		push   $data_51b62
		push   $0x66
		push   $0x96
		mov    $0x8b,%ecx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x78,%eax
		push   %ebx
		mov    %eax,%edx
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_51b66
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_29aa5:
		lea    0x50(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x50(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%ecx
		cmp    $0x78,%ecx
		jl     jump_29ae6
		cmp    $0xc8,%ecx
		jg     jump_29ae6
		mov    data_7cf28,%edi
		cmp    $0x64,%edi
		jl     jump_29ae6
		cmp    $0x78,%edi
		jg     jump_29ae6
		cmpl   $0x1,data_7cf20
		je     jump_29b1a
	jump_29ae6:
		mov    data_7cf24,%edx
		cmp    $0x78,%edx
		jl     jump_29aa5
		cmp    $0xc8,%edx
		jg     jump_29aa5
		mov    data_7cf28,%ecx
		cmp    $0x78,%ecx
		jl     jump_29aa5
		cmp    $0x8c,%ecx
		jg     jump_29aa5
		cmpl   $0x1,data_7cf20
		jne    jump_29aa5
		jmp    jump_299b9
	jump_29b1a:
		mov    0x66(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
	jump_29b26:
		call   func_19ba9
		lea    0x20(%esp),%eax
		mov    $0x180,%edx
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		lea    0x24(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%esi
		cmp    $0xffffffff,%edx
		jne    jump_29b79
		lea    0x20(%esp),%eax
		push   %eax
		push   $data_51b77
		call   w_printf
		add    $0x8,%esp
		mov    %edx,%eax
		call   w_dos_close
		call   func_19079
	jump_29b79:
		mov    $data_1a00ce,%edx
		movswl %si,%ecx
		mov    $0xd,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    data_15ba1e,%eax
		mov    data_15ba1c,%ebx
		sar    $0x10,%eax
		sar    $0x10,%ebx
		imul   %eax,%ebx
		mov    data_15b9c4,%edx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		mov    $0x1,%ebp
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		xor    %edi,%edi
		call   w_dos_write
		jmp    jump_29c30
	jump_29bfb:
		xor    %ecx,%ecx
		jmp    jump_29c26
	jump_29bff:
		mov    data_15ba1e,%edx
		movswl %di,%eax
		sar    $0x10,%edx
		imul   %edx,%eax
		mov    data_15b9c0,%edx
		add    %edx,%eax
		movswl %cx,%edx
		mov    %ebp,%ebx
		add    %eax,%edx
		movswl %si,%eax
		inc    %ecx
		call   w_dos_write
	jump_29c26:
		cmp    data_15ba20,%cx
		jl     jump_29bff
		inc    %edi
	jump_29c30:
		cmp    data_15ba1e,%di
		jl     jump_29bfb
		mov    $data_15ba20,%edx
		movswl %si,%ecx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    %ecx,%eax
		mov    data_15b9bc,%edx
		add    %ebx,%ebx
		call   w_dos_write
		mov    $data_15ba20,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    $data_15ba1e,%edx
		mov    $0x2,%ebx
		mov    %ecx,%eax
		call   w_dos_write
		mov    data_15ba1e,%edx
		mov    data_15ba1c,%ebx
		sar    $0x10,%edx
		sar    $0x10,%ebx
		imul   %edx,%ebx
		mov    %ecx,%eax
		mov    data_15b9b8,%edx
		add    %ebx,%ebx
		xor    %ecx,%ecx
		call   w_dos_write
	jump_29cca:
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19e149(%eax)
		jne    jump_29cea
		cmpw   $0x0,data_19e165(%eax)
		je     jump_29d05
	jump_29cea:
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $data_19e144,%edx
		shl    $0x3,%eax
		mov    $0x28,%ebx
		add    %eax,%edx
		jmp    jump_29d0c
	jump_29d05:
		mov    %esp,%edx
		mov    $0x28,%ebx
	jump_29d0c:
		movswl %si,%eax
		call   w_dos_write
		inc    %ecx
		cmp    $0xaa,%cx
		jl     jump_29cca
		xor    %edi,%edi
	jump_29d1e:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $0x16,%ebx
		sub    %edx,%eax
		mov    $data_19fbd4,%edx
		add    %eax,%eax
		movswl %si,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %edi
		call   w_dos_write
		cmp    $0x28,%di
		jl     jump_29d1e
		mov    %ecx,%eax
		call   w_dos_close
		call   func_19b67
		call   func_3197d
	jump_29d5d:
		add    $0x6c,%esp
		jmp    jump_285c2


/*----------------------------------------------------------------*/
func_29d65:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4c,%esp
		mov    $0x7,%ecx
		mov    %esp,%edi
		mov    $data_27ba7,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		lea    0x20(%esp),%edi
		mov    $data_27bc5,%esi
		lea    0x20(%esp),%edx
		mov    $0xa,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		call   func_21e29
		xor    %eax,%eax
		lea    0x20(%esp),%edi
		mov    data_15ba23,%al
		mov    $data_51b88,%esi
		call   func_itoa_
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_29dbe:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_29dda
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_29dbe
	jump_29dda:
		pop    %edi
		lea    0x20(%esp),%eax
		push   %eax
		push   $0x1
		push   $0xe6
		mov    $0x1,%dl
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    %esp,%ebx
		call   func_2b44f
		mov    %dl,data_15ba22
		xor    %ah,%ah
		mov    $data_51b8d,%edx
		mov    %ah,0x20(%esp)
		mov    $data_51b93,%eax
		call   func_30bad
		mov    %esp,%eax
		mov    $data_51b47,%edx
		call   w_dos_strcmp
		test   %eax,%eax
		je     jump_2a190
		mov    %esp,%eax
		mov    $0x65,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		jne    jump_29e79
		mov    %esp,%eax
		mov    $0x45,%edx
		call   w_dos_strrchr
		test   %eax,%eax
		jne    jump_29e79
		mov    %esp,%edi
		mov    $data_51ba3,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_29e5c:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_29e78
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_29e5c
	jump_29e78:
		pop    %edi
	jump_29e79:
		call   func_19ba9
		mov    $0x6e,%eax
		mov    data_15b9cc,%edx
		mov    $0xd2,%ebx
		push   %edx
		mov    $0x90,%ecx
		mov    $0x50,%edx
		call   func_1843d
		push   $data_51b58
		push   $0x52
		push   $0x72
		mov    $0x64,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x77,%ecx
		push   %ebx
		mov    $0x78,%eax
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_51b62
		push   $0x66
		push   $0x96
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ecx
		mov    $0x78,%eax
		push   %ecx
		mov    %eax,%edx
		mov    $0x8b,%ecx
		call   func_1843d
		push   $data_51b66
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_29f23:
		lea    0x30(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x30(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    $0x78,%esi
		jl     jump_29f64
		cmp    $0xc8,%esi
		jg     jump_29f64
		mov    data_7cf28,%ebp
		cmp    $0x64,%ebp
		jl     jump_29f64
		cmp    $0x78,%ebp
		jg     jump_29f64
		cmpl   $0x1,data_7cf20
		je     jump_29fa4
	jump_29f64:
		mov    data_7cf24,%ebx
		cmp    $0x78,%ebx
		jl     jump_29f23
		cmp    $0xc8,%ebx
		jg     jump_29f23
		mov    data_7cf28,%esi
		cmp    $0x78,%esi
		jl     jump_29f23
		cmp    $0x8c,%esi
		jg     jump_29f23
		cmpl   $0x1,data_7cf20
		jne    jump_29f23
	jump_29f93:
		mov    0x46(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		jmp    jump_2a190
	jump_29fa4:
		mov    0x46(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
		call   func_3197d
		push   $0x200
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		mov    %ax,0x48(%esp)
		cwtl
		cmp    $0xffffffff,%eax
		je     jump_2a100
		call   func_19ba9
		mov    $0x50,%edx
		mov    data_15b9cc,%eax
		mov    $0xd2,%ebx
		push   %eax
		mov    $0x90,%ecx
		mov    $0x6e,%eax
		call   func_1843d
		push   $data_51b6c
		push   $0x52
		push   $0x72
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%edx
		mov    $0x77,%ecx
		push   %edx
		mov    $0x78,%eax
		mov    $0x64,%edx
		call   func_1843d
		push   $data_51b62
		push   $0x66
		push   $0x96
		mov    $0x8b,%ecx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ebx
		mov    $0x78,%eax
		push   %ebx
		mov    %eax,%edx
		mov    $0xc8,%ebx
		call   func_1843d
		push   $data_51b66
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_2a07f:
		lea    0x3c(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x3c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%ecx
		cmp    $0x78,%ecx
		jl     jump_2a0c0
		cmp    $0xc8,%ecx
		jg     jump_2a0c0
		mov    data_7cf28,%edi
		cmp    $0x64,%edi
		jl     jump_2a0c0
		cmp    $0x78,%edi
		jg     jump_2a0c0
		cmpl   $0x1,data_7cf20
		je     jump_2a0f4
	jump_2a0c0:
		mov    data_7cf24,%edx
		cmp    $0x78,%edx
		jl     jump_2a07f
		cmp    $0xc8,%edx
		jg     jump_2a07f
		mov    data_7cf28,%ecx
		cmp    $0x78,%ecx
		jl     jump_2a07f
		cmp    $0x8c,%ecx
		jg     jump_2a07f
		cmpl   $0x1,data_7cf20
		jne    jump_2a07f
		jmp    jump_29f93
	jump_2a0f4:
		mov    0x46(%esp),%eax
		sar    $0x10,%eax
		call   w_dos_close
	jump_2a100:
		call   func_19ba9
		mov    %esp,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		cwtl
		call   w_dos_close
		push   $0x201
		lea    0x4(%esp),%eax
		push   %eax
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%edi
		cmp    $0xffffffff,%edx
		jne    jump_2a14f
		mov    %esp,%eax
		push   %eax
		push   $data_51b77
		call   w_printf
		add    $0x8,%esp
		mov    %edx,%eax
		call   w_dos_close
		call   func_19079
	jump_2a14f:
		xor    %esi,%esi
	jump_2a151:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $0x16,%ebx
		sub    %edx,%eax
		mov    $data_19fbd4,%edx
		add    %eax,%eax
		movswl %di,%ecx
		add    %eax,%edx
		mov    %ecx,%eax
		inc    %esi
		call   w_dos_write
		cmp    $0x28,%si
		jl     jump_2a151
		mov    %ecx,%eax
		call   w_dos_close
		call   func_19b67
		call   func_3197d
	jump_2a190:
		add    $0x4c,%esp
		jmp    jump_285c2

vtable_2a19a:
		.long   func_2ab4d
		.long   func_2aba1
		.long   func_2ace6
		.long   func_2ad00
		.long   func_2ad1a
		.long   func_2ad31
		.long   func_2ad48
		.long   func_2ad5f
		.long   func_2ad76
		.long   func_2ad8d


/*----------------------------------------------------------------*/
func_2a1c2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		mov    $0x2,%ebp
	jump_2a1d0:
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		xor    %esi,%esi
		xor    %edi,%edi
	jump_2a1e3:
		mov    data_15b9cc,%edx
		push   %edx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		shl    $0x2,%eax
		add    %eax,%ebx
		mov    $0x2,%ecx
		add    %ebx,%ebx
		mov    %esi,%edx
		lea    0x9(%ebx),%eax
		sar    $0x1f,%edx
		mov    %eax,0x18(%esp)
		mov    %esi,%eax
		idiv   %ecx
		imul   $0x43,%edx,%eax
		lea    0x42(%eax),%ecx
		mov    %ebx,%edx
		mov    %ecx,%ebx
		mov    0x18(%esp),%ecx
		call   func_1843d
		cmpw   $0x0,data_19fbd8(%edi)
		jne    jump_2a262
		cmpw   $0x0,data_19fbda(%edi)
		jne    jump_2a262
		cmpw   $0x0,data_19fbdc(%edi)
		jne    jump_2a262
		cmpw   $0x0,data_19fbe4(%edi)
		jne    jump_2a262
		cmpw   $0x0,data_19fbe6(%edi)
		jne    jump_2a262
		cmpw   $0x0,data_19fbe8(%edi)
		je     jump_2a299
	jump_2a262:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		shl    $0x2,%eax
		mov    $0x2,%ecx
		add    %ebx,%eax
		mov    %esi,%edx
		add    %eax,%eax
		sar    $0x1f,%edx
		lea    0x3(%eax),%ebx
		mov    %esi,%eax
		idiv   %ecx
		imul   $0x43,%edx,%eax
		add    $0x3c,%eax
		mov    %ebx,%edx
		mov    $data_51ba8,%ebx
		call   func_18274
	jump_2a299:
		inc    %esi
		add    $0x16,%edi
		cmp    $0x28,%esi
		jl     jump_2a1e3
		mov    $0x2,%eax
		mov    $0x3,%edx
		mov    $data_51baa,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x3,%edx
		mov    $data_51bb2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xd,%edx
		mov    $data_51bba,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0xd,%edx
		mov    $data_51bc2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x17,%edx
		mov    $data_51bca,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x17,%edx
		mov    $data_51bd2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x21,%edx
		mov    $data_51bda,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x21,%edx
		mov    $data_51be2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x2b,%edx
		mov    $data_51bea,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x2b,%edx
		mov    $data_51bf2,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x35,%edx
		mov    $data_51bfb,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x35,%edx
		mov    $data_51c04,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x3f,%edx
		mov    $data_51c0d,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x3f,%edx
		mov    $data_51c16,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x49,%edx
		mov    $data_51c1f,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x49,%edx
		mov    $data_51c28,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x53,%edx
		mov    $data_51c31,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x53,%edx
		mov    $data_51c3a,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x5d,%edx
		mov    $data_51c43,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x5d,%edx
		mov    $data_51c4c,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x67,%edx
		mov    $data_51c55,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x67,%edx
		mov    $data_51c5e,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x71,%edx
		mov    $data_51c67,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x71,%edx
		mov    $data_51c70,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x7b,%edx
		mov    $data_51c79,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x7b,%edx
		mov    $data_51c82,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x85,%edx
		mov    $data_51c8b,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x85,%edx
		mov    $data_51c94,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x8f,%edx
		mov    $data_51c9d,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x8f,%edx
		mov    $data_51ca6,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0x99,%edx
		mov    $data_51caf,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0x99,%edx
		mov    $data_51cb8,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xa3,%edx
		mov    $data_51cc1,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0xa3,%edx
		mov    $data_51cca,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xad,%edx
		mov    $data_51cd3,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0xad,%edx
		mov    $data_51cdc,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xb7,%edx
		mov    $data_51ce5,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0xb7,%edx
		mov    $data_51cee,%ebx
		call   func_18274
		mov    $0x2,%eax
		mov    $0xc1,%edx
		mov    $data_51cf7,%ebx
		call   func_18274
		mov    $0x45,%eax
		mov    $0xc1,%edx
		mov    $data_51d00,%ebx
		call   func_18274
		mov    $0xc4,%eax
		mov    data_15b9cc,%ebx
		mov    $0x62,%edx
		push   %ebx
		mov    $0x86,%ecx
		mov    $0x122,%ebx
		call   func_1851e
		push   $data_51d09
		push   $0x64
		push   $0xc8
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d15
		push   $0x74
		push   $0xc8
		mov    $0x94,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%ecx
		mov    $0x122,%ebx
		push   %ecx
		mov    $0xc4,%eax
		mov    $0xa8,%ecx
		call   func_1843d
		push   $data_51d21
		push   $0x96
		push   $0xc8
		call   func_2c6ab
		add    $0xc,%esp
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		push   $0xa8
		push   $0x94
		push   $0x122
		push   $0xc4
		push   $0xa
		mov    $0x85,%edx
		mov    $0xc7,%ecx
		push   $0x42
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_31bd3
		mov    %eax,%edx
		mov    %eax,%ebx
		cmp    $0x3e7,%eax
		je     jump_2adb0
		test   %eax,%eax
		jne    jump_2a75e
		mov    data_7cf24,%esi
		test   %esi,%esi
		jl     jump_2a75e
		cmp    $0x85,%esi
		jg     jump_2a75e
		mov    data_7cf28,%eax
		test   %eax,%eax
		jl     jump_2a75e
		cmp    $0xc7,%eax
		jg     jump_2a75e
		mov    %eax,%edx
		mov    $0xa,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %esi,%edx
		lea    (%eax,%eax,1),%ecx
		mov    %esi,%eax
		sar    $0x1f,%edx
		mov    $0x42,%esi
		idiv   %esi
		lea    (%ecx,%eax,1),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ecx,%ecx
		xor    %esi,%esi
		mov    %cx,data_19fbd4(,%eax,2)
		xor    %edi,%edi
		mov    %si,data_19fbd6(,%eax,2)
		mov    %di,data_19fbe8(,%eax,2)
		mov    %cx,data_19fbde(,%eax,2)
		mov    %si,data_19fbda(,%eax,2)
		mov    %di,data_19fbe0(,%eax,2)
		mov    %cx,data_19fbe2(,%eax,2)
		mov    %si,data_19fbe4(,%eax,2)
		xor    %edx,%edx
		mov    %di,data_19fbe6(,%eax,2)
		mov    %dx,data_19fbd8(,%eax,2)
		mov    %dx,data_19fbdc(,%eax,2)
	jump_2a75e:
		mov    %ebx,%eax
		dec    %ebx
		test   %eax,%eax
		je     jump_2a1d0
		mov    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		shl    $0x2,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x1c(%esp)
	jump_2a77b:
		call   func_19ba9
		xor    %ebx,%ebx
		mov    $0x11,%esi
		mov    %ebx,0x18(%esp)
	jump_2a78b:
		mov    0x18(%esp),%edx
		mov    $0xfa,%ebx
		mov    data_15b9cc,%ecx
		mov    0x18(%esp),%edi
		push   %ecx
		mov    %edx,%eax
		inc    %edi
		shl    $0x3,%eax
		mov    %esi,%ecx
		mov    %edi,0x1c(%esp)
		add    %eax,%edx
		mov    $0x64,%eax
		add    %edx,%edx
		add    $0x12,%esi
		call   func_1843d
		cmp    $0xb,%edi
		jl     jump_2a78b
		push   $data_51d2d
		push   $0x2
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%eax
		lea    0xc(%esp),%edx
		mov    data_19fbd2(%eax),%eax
		mov    $0xa,%ebx
		sar    $0x10,%eax
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x2
		push   $0xbe
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%eax
		lea    0xc(%esp),%edx
		mov    data_19fbd4(%eax),%eax
		mov    $0xa,%ebx
		sar    $0x10,%eax
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x2
		push   $0xde
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d38
		push   $0x14
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%eax
		cmpw   $0x0,data_19fbe8(%eax)
		je     jump_2a8d1
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    data_19fbe8(%edx),%ax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    data_19e15f(,%eax,8),%eax
		sar    $0x10,%eax
		shl    $0x6,%eax
		mov    data_921ae(%eax),%edx
		mov    0xa(%edx),%ebx
		mov    0x2(%edx),%dx
		and    $0xffff,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0xdc,%edx
		sub    %eax,%edx
		mov    data_15b9cc,%ecx
		mov    %edx,%eax
		mov    $0xf,%edx
		call   func_2b240
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    data_19fbe8(%edx),%ax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		add    $data_19e144,%eax
		add    $0x5,%eax
		push   %eax
		jmp    jump_2a8d6
	jump_2a8d1:
		push   $data_51d45
	jump_2a8d6:
		push   $0x14
		push   $0xc8
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d4c
		push   $0x26
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbd8(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x26
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d59
		push   $0x38
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbde(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x38
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d66
		push   $0x4a
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbda(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x4a
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d73
		push   $0x5c
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbe0(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x5c
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d80
		push   $0x6e
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbdc(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x6e
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d8d
		push   $0x80
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbe2(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x80
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51d9a
		push   $0x92
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbe4(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0x92
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51da7
		push   $0xa4
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x1c(%esp),%edx
		xor    %eax,%eax
		mov    $0xa,%ebx
		mov    data_19fbe6(%edx),%ax
		lea    0xc(%esp),%edx
		call   func_itoa_
		lea    0xc(%esp),%eax
		push   %eax
		push   $0xa4
		push   $0xd2
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51db4
		push   $0xb6
		push   $0x68
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		push   $0x12
		mov    $0xfa,%edx
		mov    $0xc6,%ecx
		push   $0x96
		xor    %ebx,%ebx
		mov    $0x64,%eax
		call   func_31a49
		mov    %eax,%ecx
		dec    %eax
		cmp    $0x9,%eax
		ja     jump_2ada2
		jmp    *vtable_2a19a(,%eax,4)


/*----------------------------------------------------------------*/
func_2ab4d:
/*----------------------------------------------------------------*/
		mov    $data_19fbd4,%eax
		add    0x1c(%esp),%eax
		mov    $0x5,%ebx
		lea    0x2(%eax),%edx
		call   func_27c28
		test   %ax,%ax
		je     jump_2adb0
		mov    0x1c(%esp),%edx
		mov    data_56bfc,%ax
		mov    data_19fbd4(%edx),%bx
		mov    data_19fbd6(%edx),%si
		add    %eax,%ebx
		mov    data_56bfa,%ax
		mov    %bx,data_19fbd4(%edx)
		add    %eax,%esi
		mov    %si,data_19fbd6(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2aba1:
/*----------------------------------------------------------------*/
		mov    $0x14,%edx
		mov    %ebp,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		call   func_2b44f
		movb   $0x1,data_15ba22
	jump_2abbe:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_2accd
		cmpb   $0x0,data_15ba22
		jne    jump_2accd
		mov    data_7cf24,%esi
		cmp    $0x118,%esi
		jl     jump_2ac33
		cmp    $0x13f,%esi
		jg     jump_2ac33
		mov    data_7cf28,%eax
		test   %eax,%eax
		jl     jump_2ac33
		cmp    $0x63,%eax
		jg     jump_2ac33
		cmp    $0x2,%ebp
		jle    jump_2ac15
		sub    $0x5,%ebp
	jump_2ac15:
		mov    $0x14,%edx
		mov    %ebp,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%dh
		call   func_2b44f
		mov    %dh,data_15ba22
	jump_2ac33:
		mov    data_7cf24,%ebx
		cmp    $0x118,%ebx
		jl     jump_2ac85
		cmp    $0x13f,%ebx
		jge    jump_2ac85
		mov    data_7cf28,%edi
		cmp    $0x64,%edi
		jl     jump_2ac85
		cmp    $0xc7,%edi
		jg     jump_2ac85
		cmp    $0xb0,%ebp
		jge    jump_2ac67
		add    $0x5,%ebp
	jump_2ac67:
		mov    $0x14,%edx
		mov    %ebp,%eax
		call   func_17c49
		mov    data_15b9cc,%eax
		mov    $0x1,%bl
		call   func_2b44f
		mov    %bl,data_15ba22
	jump_2ac85:
		cmpl   $0x118,data_7cf24
		jge    jump_2accd
		mov    data_7cf28,%eax
		mov    %eax,%edx
		mov    $0x28,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    0x1c(%esp),%edx
		mov    $0x1,%bh
		add    %ebp,%eax
		mov    %bh,data_15ba22
		mov    %eax,%edi
		mov    %ax,data_19fbe8(%edx)
		dec    %edi
		mov    0x18(%esp),%ebx
		mov    %di,data_19fbe8(%edx)
		cmp    $0xb5,%ebx
		jl     jump_2acd7
	jump_2accd:
		call   func_27bf2
		jmp    jump_2abbe
	jump_2acd7:
		call   func_21e29
		call   func_2294d
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ace6:
/*----------------------------------------------------------------*/
		mov    $data_51db8,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbd8(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad00:
/*----------------------------------------------------------------*/
		mov    $data_51dca,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbde(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad1a:
/*----------------------------------------------------------------*/
		mov    $data_51dda,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbda(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad31:
/*----------------------------------------------------------------*/
		mov    $data_51dec,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbe0(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad48:
/*----------------------------------------------------------------*/
		mov    $data_51dfc,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbdc(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad5f:
/*----------------------------------------------------------------*/
		mov    $data_51e0e,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbe2(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad76:
/*----------------------------------------------------------------*/
		mov    $data_51e1e,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbe4(%edx)
		jmp    jump_2ada2


/*----------------------------------------------------------------*/
func_2ad8d:
/*----------------------------------------------------------------*/
		mov    $data_51e2a,%eax
		mov    0x1c(%esp),%edx
		call   func_28091
		mov    %ax,data_19fbe6(%edx)
	jump_2ada2:
		cmp    $0xb,%ecx
		je     jump_2a1d0
		jmp    jump_2a77b
	jump_2adb0:
		add    $0x20,%esp
		jmp    jump_285c2

vtable_2adba:
		.long   func_2aeb7
		.long   func_2aedc
		.long   func_2aef9
		.long   func_2af15
		.long   func_2af32
		.long   func_2af4f
		.long   func_2af6d
		.long   func_2af81
		.long   func_2b046
		.long   func_2aed2
		.long   func_2b170


/*----------------------------------------------------------------*/
func_2ade6:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		mov    data_56bfc,%ax
		mov    %eax,0x24(%esp)
		mov    data_56bfa,%ax
		mov    %eax,0x30(%esp)
		mov    data_56bf8,%ax
		mov    %eax,0x28(%esp)
		mov    data_56bf6,%ax
		mov    $0x27f,%edx
		mov    %eax,0x2c(%esp)
		xor    %eax,%eax
		call   func_19c3b
		mov    $0xc7,%edx
		xor    %eax,%eax
		call   func_19c46
		call   func_19b67
		xor    %edx,%edx
		call   func_2966a
		mov    %dx,data_56bf8
		mov    %dx,data_56bf6
		mov    $0x78,%ebp
	jump_2ae4e:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    func_2aed2
		cmpb   $0x0,data_15ba22
		jne    func_2aed2
		cmpl   $0x50,data_7cf24
		jg     func_2aed2
		mov    data_7cf28,%ecx
		cmp    $0xc8,%ecx
		jg     func_2aed2
		mov    $0x12,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		cmp    $0xa,%eax
		ja     func_2aed2
		jmp    *vtable_2adba(,%eax,4)


/*----------------------------------------------------------------*/
func_2aeb7:
/*----------------------------------------------------------------*/
		mov    $0x1,%dl
		xor    %edi,%edi
		mov    %dl,data_15ba22
		call   func_28b1a
	jump_2aec6:
		call   func_2966a
		mov    %di,data_543cc


/*----------------------------------------------------------------*/
func_2aed2:
/*----------------------------------------------------------------*/
		call   func_27bf2
		jmp    jump_2ae4e


/*----------------------------------------------------------------*/
func_2aedc:
/*----------------------------------------------------------------*/
		mov    $0x1,%ah
		xor    %esi,%esi
		mov    %ah,data_15ba22
		call   func_29436
	jump_2aeeb:
		call   func_2966a
		mov    %si,data_543cc
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2aef9:
/*----------------------------------------------------------------*/
		mov    $0x1,%al
		xor    %ecx,%ecx
		mov    %al,data_15ba22
		call   func_28251
	jump_2af07:
		call   func_2966a
		mov    %cx,data_543cc
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2af15:
/*----------------------------------------------------------------*/
		mov    $0x1,%ch
		xor    %ebx,%ebx
		mov    %ch,data_15ba22
		call   func_292ae
		call   func_2966a
		mov    %bx,data_543cc
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2af32:
/*----------------------------------------------------------------*/
		mov    $0x1,%cl
		xor    %edx,%edx
		mov    %cl,data_15ba22
		call   func_285c9
		call   func_2966a
		mov    %dx,data_543cc
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2af4f:
/*----------------------------------------------------------------*/
		movb   $0x1,data_15ba22
		call   func_2976f
		call   func_2966a
		xor    %eax,%eax
		mov    %ax,data_543cc
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2af6d:
/*----------------------------------------------------------------*/
		mov    $0x1,%bl
		xor    %edi,%edi
		mov    %bl,data_15ba22
		call   func_29d65
		jmp    jump_2aec6


/*----------------------------------------------------------------*/
func_2af81:
/*----------------------------------------------------------------*/
		call   func_19ba9
		call   func_21e29
		call   func_2294d
		mov    $0x56,%ebx
		mov    data_15b9cc,%edx
		mov    $0x11,%ecx
		push   %edx
		xor    %eax,%eax
		xor    %edx,%edx
		call   func_1843d
		mov    $0x23,%ecx
		mov    data_15b9cc,%ebx
		mov    %esi,%edx
		push   %ebx
		xor    %eax,%eax
		mov    $0x56,%ebx
		call   func_1843d
		push   $data_51e35
		push   $0x2
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		push   $data_51e40
		push   $0x14
		push   $0x4
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		push   $0x0
		push   $0x11
		mov    $0x56,%edx
		mov    $0x23,%ecx
		push   $0x56
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_31a49
		cmp    $0x1,%ax
		jne    jump_2b028
		mov    $0x1,%dh
		xor    %esi,%esi
		mov    %dh,data_15ba22
		call   func_2a1c2
		jmp    jump_2aeeb
	jump_2b028:
		cmp    $0x2,%ax
		jne    func_2aed2
		mov    $0x1,%dl
		xor    %ecx,%ecx
		mov    %dl,data_15ba22
		call   func_16c33
		jmp    jump_2af07


/*----------------------------------------------------------------*/
func_2b046:
/*----------------------------------------------------------------*/
		call   func_19ba9
		mov    $0x6e,%eax
		mov    data_15b9cc,%esi
		mov    $0x50,%edx
		push   %esi
		mov    $0xd2,%ebx
		mov    $0x90,%ecx
		call   func_1843d
		push   $data_51e4b
		push   $0x52
		push   $0x72
		mov    $0x64,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%edi
		mov    $0xc8,%ebx
		push   %edi
		mov    $0x77,%ecx
		mov    %ebp,%eax
		call   func_1843d
		push   $data_51b62
		push   $0x66
		push   $0x96
		mov    $0xc8,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x8b,%ecx
		push   %eax
		mov    %ebp,%edx
		mov    %ebp,%eax
		call   func_1843d
		push   $data_51b66
		push   $0x7a
		push   $0x90
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		mov    %ebp,%edx
	jump_2b0eb:
		lea    0x18(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x18(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%esi
		cmp    %esi,%edx
		jg     jump_2b13b
		cmp    $0xc8,%esi
		jg     jump_2b13b
		mov    data_7cf28,%eax
		cmp    $0x64,%eax
		jl     jump_2b13b
		cmp    %eax,%edx
		jl     jump_2b13b
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		jne    jump_2b13b
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    data_15ba23,%al
		call   func_23997
		jmp    jump_2b166
	jump_2b13b:
		mov    data_7cf24,%esi
		cmp    %esi,%edx
		jg     jump_2b0eb
		cmp    $0xc8,%esi
		jg     jump_2b0eb
		mov    data_7cf28,%eax
		cmp    %eax,%edx
		jg     jump_2b0eb
		cmp    $0x8c,%eax
		jg     jump_2b0eb
		cmpl   $0x1,data_7cf20
		jne    jump_2b0eb
	jump_2b166:
		call   func_2966a
		jmp    func_2aed2


/*----------------------------------------------------------------*/
func_2b170:
/*----------------------------------------------------------------*/
		mov    0x28(%esp),%eax
		mov    %ax,data_56bf8
		mov    0x2c(%esp),%eax
		mov    %ax,data_56bf6
		mov    0x24(%esp),%eax
		mov    %ax,data_56bfc
		mov    0x30(%esp),%eax
		mov    %ax,data_56bfa
		call   func_19ba9
		mov    $0x64,%eax
		mov    %eax,%edx
		call   func_19c0e
	jump_2b1a9:
		cmpl   $0x1,data_7cf20
		jne    jump_2b1c9
		lea    0xc(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		jmp    jump_2b1a9
	jump_2b1c9:
		xor    %eax,%eax
		mov    $0x262,%edx
		mov    %ax,data_543cc
		mov    $0x14,%eax
		call   func_19c3b
		mov    $0x11,%eax
		mov    $0xc2,%edx
		call   func_19c46
		add    $0x34,%esp
		jmp    jump_285c2


/*----------------------------------------------------------------*/
func_2b1f8:
/*----------------------------------------------------------------*/
#if 0
		mov    $0x13,%ax
		int    $0x10
#endif
		ret


/*----------------------------------------------------------------*/
func_2b1ff:
/*----------------------------------------------------------------*/
#if 0
		mov    $0x3,%ax
		int    $0x10
#endif
		ret


/*----------------------------------------------------------------*/
func_2b206:
/*----------------------------------------------------------------*/
#if 0
		push   %eax
		push   %edx
		push   %ebx
		push   %ecx
		mov    $0x3da,%dx
	jump_2b20e:
		in     (%dx),%al
		test   $0x8,%al
		jne    jump_2b20e
	jump_2b213:
		in     (%dx),%al
		test   $0x8,%al
		je     jump_2b213
		pop    %ecx
		pop    %ebx
		pop    %edx
		pop    %eax
#endif
		ret


/*----------------------------------------------------------------*/
func_2b21d:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		push   %esi
		mov    %ecx,%edi
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		mov    %bl,(%edi)
		pop    %esi
		pop    %edi
		leave
		ret


/*----------------------------------------------------------------*/
func_2b240:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		push   %esi
		mov    %ecx,%edi
		mov    %ebx,%esi
		cmp    $0x0,%eax
		jge    jump_2b25b
		mov    $0x140,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		dec    %edx
	jump_2b25b:
		cmp    $0x0,%edx
		jge    jump_2b273
		neg    %edx
		mov    %edx,%ecx
		shl    $0x8,%ecx
		sub    %ecx,%edi
		shr    $0x2,%ecx
		sub    %ecx,%edi
		mov    $0x0,%edx
	jump_2b273:
		mov    %edx,%ecx
		add    %eax,%edi
		shl    $0x8,%ecx
		add    %ecx,%edi
		shr    $0x2,%ecx
		add    %ecx,%edi
		lods   %ds:(%esi),%ax
		mov    %eax,%ecx
	jump_2b285:
		push   %ecx
		and    $0x0,%ecx
		lods   %ds:(%esi),%eax
		movzwl %ax,%ebx
		add    %ebx,%edi
		ror    $0x10,%eax
		mov    %al,%cl
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ah,%cl
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %ecx
		loop   jump_2b285
		pop    %esi
		pop    %edi
		leave
		ret


/*----------------------------------------------------------------*/
func_2b2a1: /* 2b2a1 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff0,%esp
		push   %edi
		push   %esi
		cmp    $0x13f,%eax
		jg     jump_2b370
		mov    %ecx,%edi
		mov    %ebx,%esi
		add    $0x3,%esi
		and    $0x0,%ebx
		mov    (%esi),%bl
		dec    %esi
		shl    $0x8,%bx
		mov    (%esi),%bl
		mov    %bx,-0x4(%ebp)
		dec    %esi
		and    $0x0,%bx
		mov    (%esi),%bl
		dec    %esi
		shl    $0x8,%bx
		mov    (%esi),%bl
		mov    %bx,-0x2(%ebp)
		add    $0x4,%esi
		movl   $0x0,-0xc(%ebp)
		mov    %ax,%bx
		add    -0x2(%ebp),%bx
		cmp    $0x140,%bx
		jle    jump_2b308
		sub    $0x140,%bx
		mov    %ebx,-0xc(%ebp)
		mov    $0x140,%bx
		sub    %ax,%bx
		mov    %bx,-0x2(%ebp)
	jump_2b308:
		movl   $0x0,-0x10(%ebp)
		cmp    $0x0,%ax
		jge    jump_2b324
		add    %ax,-0x2(%ebp)
		mov    %eax,-0x10(%ebp)
		mov    $0x0,%eax
		negl   -0x10(%ebp)
	jump_2b324:
		cmp    $0x0,%edx
		jge    jump_2b336
		neg    %edx
		sub    %dx,-0x4(%ebp)
	jump_2b32f:
		add    -0x2(%ebp),%si
		dec    %edx
		jne    jump_2b32f
	jump_2b336:
		mov    %edx,%ecx
		add    %eax,%edi
		shl    $0x8,%ecx
		add    %ecx,%edi
		shr    $0x2,%ecx
		add    %ecx,%edi
		mov    $0x140,%eax
		sub    -0x2(%ebp),%ax
		mov    %eax,-0x8(%ebp)
		movzwl -0x4(%ebp),%ebx
	jump_2b354:
		add    -0x10(%ebp),%esi
		movzwl -0x2(%ebp),%ecx
	jump_2b35b:
		mov    (%esi),%al
		cmp    $0xff,%al
		je     jump_2b363
		mov    %al,(%edi)
	jump_2b363:
		inc    %esi
		inc    %edi
		loop   jump_2b35b
		add    -0x8(%ebp),%edi
		add    -0xc(%ebp),%esi
		dec    %ebx
		jne    jump_2b354
	jump_2b370:
		pop    %esi
		pop    %edi
		leave
		ret


/*----------------------------------------------------------------*/
func_2b374: /* 2b374 */
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff4,%esp
		push   %edi
		push   %esi
		mov    %ecx,%edi
		mov    %ebx,%esi
		add    $0x3,%esi
		and    $0x0,%ebx
		mov    (%esi),%bl
		dec    %esi
		shl    $0x8,%bx
		mov    (%esi),%bl
		mov    %bx,-0x4(%ebp)
		dec    %esi
		and    $0x0,%bx
		mov    (%esi),%bl
		dec    %esi
		shl    $0x8,%bx
		mov    (%esi),%bl
		mov    %bx,-0x2(%ebp)
		add    $0x4,%esi
		mov    %edx,%ecx
		add    %eax,%edi
		shl    $0x8,%ecx
		add    %ecx,%edi
		shr    $0x2,%ecx
		add    %ecx,%edi
		mov    $0x140,%eax
		sub    -0x2(%ebp),%ax
		mov    %eax,-0x8(%ebp)
		movzwl -0x4(%ebp),%ebx
	jump_2b3c6:
		movzwl -0x2(%ebp),%ecx
	jump_2b3ca:
		mov    (%esi),%al
		mov    %al,(%edi)
		inc    %esi
		inc    %edi
		loop   jump_2b3ca
		add    -0x8(%ebp),%edi
		dec    %ebx
		jne    jump_2b3c6
		pop    %esi
		pop    %edi
		leave
		ret


/*----------------------------------------------------------------*/
func_2b3dc:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff4,%esp
		push   %edi
		push   %esi
		mov    0xc(%ebp),%esi
		mov    %ebx,%edi
		mov    %cx,-0x2(%ebp)
		mov    %cl,(%edi)
		inc    %edi
		mov    %ch,(%edi)
		inc    %edi
		mov    0x8(%ebp),%cx
		mov    %cl,(%edi)
		inc    %edi
		mov    %ch,(%edi)
		inc    %edi
		mov    %edx,%ecx
		add    %eax,%esi
		shl    $0x8,%ecx
		add    %ecx,%esi
		shr    $0x2,%ecx
		add    %ecx,%esi
		mov    $0x140,%eax
		sub    -0x2(%ebp),%ax
		mov    %eax,-0x8(%ebp)
		movzwl 0x8(%ebp),%ebx
	jump_2b41b:
		movzwl -0x2(%ebp),%ecx
	jump_2b41f:
		mov    (%esi),%al
		mov    %al,(%edi)
		inc    %esi
		inc    %edi
		loop   jump_2b41f
		add    -0x8(%ebp),%esi
		dec    %ebx
		jne    jump_2b41b
		pop    %esi
		pop    %edi
		leave
		ret    $0x8


/*----------------------------------------------------------------*/
func_2b433:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ebx
		push   %ecx
		mov    %edx,%edi
		mov    %eax,%esi
		mov    $0xc8,%ebx
	jump_2b440:
		mov    $0x50,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		dec    %ebx
		jne    jump_2b440
		pop    %ecx
		pop    %ebx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_2b44f:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ebx
		push   %ecx
#if 1
    movl   video_buffer,%edi
#else
		mov    $0xa0000,%edi
#endif
		mov    %eax,%esi
		mov    $0xc8,%ebx
	jump_2b460:
		mov    $0x50,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		dec    %ebx
		jne    jump_2b460
#if 1
    call   w_game_update
#endif
		pop    %ecx
		pop    %ebx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_2b470:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ebx
		push   %ecx
#if 1
    movl   video_buffer,%edi
#else
		mov    $0xa0000,%edi
#endif
		mov    %eax,%esi
		mov    $0x0,%ecx
		mov    $0x3da,%dx
#if 0
	jump_2b485:
		inc    %ecx
		cmp    data_82720,%ecx
		jg     jump_2b493
		in     (%dx),%al
		test   $0x8,%al
		je     jump_2b485
	jump_2b493:
#endif
		mov    $0xc8,%ebx
	jump_2b498:
		mov    $0x50,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		dec    %ebx
		jne    jump_2b498
#if 1
    call   w_game_update
#endif
		pop    %ecx
		pop    %ebx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_2b4a8:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		push   %esi
		mov    0x8(%ebp),%edi
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
	jump_2b4c6:
		mov    %bl,(%edi)
		add    $0x140,%edi
		loop   jump_2b4c6
		pop    %esi
		pop    %edi
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_2b4d6:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		push   %esi
		cmp    $0x0,%edx
		jge    jump_2b4e5
		jmp    jump_2b513
	jump_2b4e5:
		cmp    $0x0,%eax
		jge    jump_2b4f1
		add    %eax,%ecx
		mov    $0x0,%eax
	jump_2b4f1:
		cmp    $0x1,%ecx
		jge    jump_2b4f8
		jmp    jump_2b513
	jump_2b4f8:
		mov    0x8(%ebp),%edi
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
	jump_2b50e:
		mov    %bl,(%edi)
		inc    %edi
		loop   jump_2b50e
	jump_2b513:
		pop    %esi
		pop    %edi
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_2b519:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		mov    0x8(%ebp),%edi
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
	jump_2b536:
		xor    %bl,(%edi)
		add    $0x140,%edi
		loop   jump_2b536
		pop    %edi
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_2b545:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffffc,%esp
		push   %edi
		mov    0x8(%ebp),%edi
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
	jump_2b562:
		xor    %bl,(%edi)
		inc    %edi
		loop   jump_2b562
		pop    %edi
		leave
		ret    $0x4


/*----------------------------------------------------------------*/
func_2b56c:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff8,%esp
		push   %edi
		cmp    $0x0,%cx
		jle    jump_2b5bb
		cmpw   $0x0,0x8(%ebp)
		jle    jump_2b5bb
		mov    0xc(%ebp),%edi
		mov    %cx,-0x6(%ebp)
		mov    %edx,-0x4(%ebp)
		add    %eax,%edi
		shll   $0x8,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		shrl   $0x2,-0x4(%ebp)
		add    -0x4(%ebp),%edi
		mov    $0x140,%eax
		sub    -0x6(%ebp),%ax
		mov    %eax,-0x4(%ebp)
		mov    %bl,%al
		movzwl 0x8(%ebp),%ecx
	jump_2b5ac:
		movzwl -0x6(%ebp),%ebx
	jump_2b5b0:
		mov    %al,(%edi)
		inc    %edi
		dec    %ebx
		jne    jump_2b5b0
		add    -0x4(%ebp),%edi
		loop   jump_2b5ac
	jump_2b5bb:
		pop    %edi
		leave
		ret    $0x8


/*----------------------------------------------------------------*/
func_2b5c0:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		mov    %ebx,%edi
		add    %eax,%edi
		mov    %edx,%esi
		mov    $0x10,%ebx
	jump_2b5ce:
		mov    $0x6,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    $0x128,%edi
		dec    %ebx
		jne    jump_2b5ce
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_2b5e2:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ebx
		push   %ecx
		mov    %edx,%edi
		add    %eax,%edi
		mov    $0x0,%eax
		mov    $0x10,%ebx
	jump_2b5f4:
		mov    $0x6,%ecx
	jump_2b5f9:
		mov    %eax,(%edi)
		add    $0x4,%edi
		dec    %ecx
		jne    jump_2b5f9
		add    $0x128,%edi
		dec    %ebx
		jne    jump_2b5f4
		pop    %ecx
		pop    %ebx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
GLOBAL (keyboard_isr) /* 2b60f */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
#if 0
		call   func___GETDS
		mov    $0x60,%edx
		sub    %eax,%eax
		in     (%dx),%al
#endif
		mov    %al,data_1a02fa
		cmp    $0x7f,%al
		jb     jump_2b63f
		and    $0xff,%eax
		xor    %ebx,%ebx
		mov    %ebx,data_19fef4(,%eax,4)
		jmp    jump_2b64f
	jump_2b63f:
		and    $0xff,%eax
		movl   $0x1,data_1a00f4(,%eax,4)
	jump_2b64f:
#if 0
		cli
		mov    data_5ec9c,%eax
		mov    data_5eca0,%edx
		mov    (%eax),%ax
		mov    %ax,(%edx)
		pushf
		lcall  *data_1a02f4
		sti
#endif
		cld
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
#if 1
    ret
#else
		iret
#endif


/*----------------------------------------------------------------*/
func_2b672:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
#if 0
		cli
#endif
		mov    $0x9,%eax
		mov    $keyboard_isr,%ebx
#if 0
		call   func__dos_getvect_
#endif
		mov    %cs,%ecx
		mov    %eax,data_1a02f4
		mov    $0x9,%eax
		mov    %dx,data_1a02f8
#if 1
    call   w_game_install_keyboard_isr
#else
		call   func__dos_setvect_
		sti
#endif
		cld
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b6a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
#if 0
		cli
#endif
		mov    $0x9,%eax
		mov    data_1a02f8,%cx
		mov    data_1a02f4,%ebx
#if 1
    call   w_game_uninstall_keyboard_isr
#else
		call   func__dos_setvect_
		sti
#endif
		cld
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b6c2:
/*----------------------------------------------------------------*/
		mov    $0x1f400,%eax
		call   w_dos_malloc
		mov    %eax,data_1a032c
		test   %eax,%eax
		jne    jump_2b6f1
		call   func_2b1ff
		push   $data_51e58
		call   w_printf
		add    $0x4,%esp
		mov    $0xffffffff,%eax
		jmp    w_dos_exit
	jump_2b6f1:
		ret


/*----------------------------------------------------------------*/
func_2b70e:
/*----------------------------------------------------------------*/
		mov    data_1a032c,%eax


/*----------------------------------------------------------------*/
func_j__nfree_:	/* 0x2b713 */
/*----------------------------------------------------------------*/
		jmp    w_dos_free


/*----------------------------------------------------------------*/
func_2b81d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		test   %edx,%edx
		jg     jump_2b82a
		mov    $0x1,%edx
	jump_2b82a:
		call   w_rand
		mov    %edx,%ecx
		mov    %eax,%edx
		sub    %ebx,%ecx
		sar    $0x1f,%edx
		idiv   %ecx
		lea    (%ebx,%edx,1),%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2b920:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    data_5ecae,%edx
		mul    %edx
		add    %ecx,%eax
		add    data_15b9cc,%eax
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2b949:
/*----------------------------------------------------------------*/
		mov    %ax,data_5eca8
		ret


/*----------------------------------------------------------------*/
func_2b950:
/*----------------------------------------------------------------*/
		mov    data_5eca8,%ax
		ret


/*----------------------------------------------------------------*/
func_2be41:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff8,%esp
		push   %esi
		push   %edi
		call   func_2b920
		mov    $0x0,%edx
		mov    (%ebx),%dx
		inc    %dx
		mov    %edx,-0x4(%ebp)
		mov    0x2(%ebx),%dx
		inc    %dx
		mov    %dx,-0x6(%ebp)
		add    $0x4,%ebx
		mov    %ebx,%esi
		mov    %eax,%edi
		mov    %cl,%bl
		mov    0x8(%ebp),%bh
	jump_2be71:
		mov    -0x4(%ebp),%ecx
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_2be78:
		test   $0x80,%dh
		je     jump_2be86
		cmp    $0xff,%bl
		je     jump_2be8d
		mov    %bl,(%edi)
		jmp    jump_2be8d
	jump_2be86:
		cmp    $0xff,%bh
		je     jump_2be8d
		mov    %bh,(%edi)
	jump_2be8d:
		shl    %dx
		cmp    $0x100,%dx
		jne    jump_2be9c
		inc    %esi
		mov    $0x1,%dl
		mov    (%esi),%dh
	jump_2be9c:
		inc    %edi
		loop   jump_2be78
		cmp    $0x1,%dl
		je     jump_2bea5
		inc    %esi
	jump_2bea5:
		add    data_5ecae,%eax
		mov    %eax,%edi
		decw   -0x6(%ebp)
		jne    jump_2be71
		pop    %edi
		pop    %esi
		leave
		ret    $0x4
.data
data_2beb9:
		.ascii  "\x00\x00\x01\x02\x03\x04\x05\x06"
		.ascii  "\x07\x08\x09\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x0f\x10\x11\x12\x13"
		.fill   0xb
data_2bed9:
		.ascii  "\x00\x00\x00\x01\x02\x03\x04\x05"
		.ascii  "\x00\x00\x06\x07\x08\x09\x0a\x0b"
		.ascii  "\x00\x00\x0c\x0d\x0e\x0f\x10\x11"
		.ascii  "\x00\x00\x12\x13\x14\x15\x00\x00"
data_2bef9:
		.ascii  "\x00\x00\x01\x02\x03\x04\x05\x06"
		.ascii  "\x07\x08\x09\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x0f\x10\x00\x11\x12\x13\x14\x15"
		.ascii  "\x16\x17\x18\x19\x1a\x1b\x00\x00"
data_2bf19:
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x00\x01\x01\x01"
data_2bf2d:
		.ascii  "\x00\x02\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x02\x03\x03\x03"
data_2bf41:
		.ascii  "\x00\x00\x02\x00\x02\x01\x02\x01"
		.ascii  "\x02\x03\x00\x02\x01\x03\x03\x01"
		.ascii  "\x02\x01\x03\x03\x01\x01"
data_2bf57:
		.fill   0x9
		.ascii  "\x01\x03\x03\x03\x01\x02\x04\x04"
		.ascii  "\x04\x02\x01\x03\x00"
data_2bf6d:
		.ascii  "\x00\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x06\x07\x07\x07\x06\x06\x07"
		.ascii  "\x07\x07\x06\x06\x07\x05"
data_2bf83:
		.ascii  "\x08\x00\x7e\x00\x10\x00\x0d\x00"
		.ascii  "\x05\x00\x07\x00\x14\x00\x71\x00"
		.ascii  "\x69\x00\x6b\x00\x67\x00\x81\x00"
		.ascii  "\x7f\x00\x78\x00\x68\x00\x6e\x00"
		.ascii  "\x09\x00\x02\x00\x04\x00\x0b\x00"
		.ascii  "\x6f\x00\x13\x00\x0e\x00\x12\x00"
		.ascii  "\x77\x00\x11\x00"
data_2bfb7:
		.ascii  "\x08\x00\x7e\x00\x10\x00\x0d\x00"
		.ascii  "\x06\x00\x07\x00\x14\x00\x71\x00"
		.ascii  "\x69\x00\x6b\x00\x67\x00\x81\x00"
		.ascii  "\x7f\x00\x78\x00\x6a\x00\x70\x00"
		.ascii  "\x0a\x00\x03\x00\x04\x00\x0c\x00"
		.ascii  "\x6f\x00\x13\x00\x0f\x00\x12\x00"
		.ascii  "\x77\x00\x11\x00"
data_2bfeb:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x05\x00\x08\x00\x01\x00\x09\x00"
		.ascii  "\x11\x00\x13\x00\x01\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x18\x00\x01\x00"
		.ascii  "\x19\x00\x1a\x00\x1b\x00\x1c\x00"
		.ascii  "\x1d\x00"
data_2c015:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x64\x00\x04\x00\x65\x00\x66\x00"
		.ascii  "\x05\x00\x07\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x6a\x00\x6b\x00\x6c\x00"
		.ascii  "\x6d\x00\x08\x00\x01\x00\x09\x00"
		.ascii  "\x6e\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x10\x00\x11\x00\x12\x00"
		.ascii  "\x13\x00\x14\x00"
data_2c051:
		.ascii  "\x02\x00"
data_2c053:
		.ascii  "\x0b\x00"
data_2c055:
		.ascii  "\x04\x00\x05\x00\x0e\x00\x06\x00"
		.ascii  "\x05\x00\x14\x00\x07\x00\x09\x00"
		.ascii  "\x02\x00\x0a\x00\x09\x00\x08\x00"
		.ascii  "\x0b\x00\x09\x00\x09\x00\x0c\x00"
		.ascii  "\x09\x00\x0b\x00\x0d\x00\x09\x00"
		.ascii  "\x12\x00\x0e\x00\x09\x00\x13\x00"
		.ascii  "\x0f\x00\x09\x00\x14\x00\x10\x00"
		.ascii  "\x13\x00\x0b\x00\x14\x00"
data_2c093:
		.ascii  "\x02\x00\x05\x00\x09\x00\x0b\x00"
		.ascii  "\x0e\x00"
data_2c09d:
		.ascii  "\x0d\x00"
data_2c09f:
		.ascii  "\x03\x00"
data_2c0a1:
		.ascii  "\x0e\x00\x0d\x00\x04\x00\x0f\x00"
		.ascii  "\x0d\x00\x1d\x00\x12\x00\x14\x00"
		.ascii  "\x07\x00\x15\x00\x14\x00\x0a\x00"
		.ascii  "\x16\x00\x14\x00\x1d\x00\x17\x00"
		.ascii  "\x1b\x00\x1d\x00\x1c\x00"
.text


/*----------------------------------------------------------------*/
func_2c0c7:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		call   func_2c107
		mov    $0xf,%edx
		mov    $0x7,%ecx
		xor    %edi,%edi
		mov    %dx,data_1a4060
		mov    %dx,data_1a4062
		mov    %cx,data_1a404c
		mov    %dx,data_1a404e
		mov    %di,data_1a4088
		mov    %di,data_1a408a
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2c107:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%esi
		push   $0x200
		push   %eax
		mov    $data_1a033c,%edx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    $0x1400,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_1a173c,%edx
		mov    $0xb00,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    $data_1a223c,%edx
		mov    $0xe00,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		push   $0x200
		push   %esi
		mov    $data_1a303c,%edx
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%ecx
		mov    $0x1000,%ebx
		mov    %ecx,%eax
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2c184:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		jmp    jump_2c1a4
	jump_2c194:
		movswl %bx,%edx
		lea    (%edi,%edx,1),%eax
		mov    (%edx,%esi,1),%dl
		mov    (%eax),%dh
		or     %dl,%dh
		inc    %ebx
		mov    %dh,(%eax)
	jump_2c1a4:
		cmp    (%esp),%bx
		jne    jump_2c194
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		ret

vtable_2c1b1:
		.long   func_2c1de
		.long   func_2c1f1
		.long   func_2c201
		.long   func_2c1de
		.long   func_2c1de
		.long   func_2c1de


/*----------------------------------------------------------------*/
func_2c1c9:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		cwtl
		mov    %eax,data_1a4048
		cmp    $0x5,%eax
		ja     jump_2c214
		jmp    *vtable_2c1b1(,%eax,4)


/*----------------------------------------------------------------*/
func_2c1de:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		mov    %eax,data_1a4040
		movswl %bx,%eax
	jump_2c1e9:
		mov    %eax,data_1a403c
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2c1f1:
/*----------------------------------------------------------------*/
		mov    $0xff,%edi
		movswl %dx,%eax
		mov    %edi,data_1a4040
		jmp    jump_2c1e9


/*----------------------------------------------------------------*/
func_2c201:
/*----------------------------------------------------------------*/
		movswl %dx,%eax
		mov    $0xff,%esi
		mov    %eax,data_1a4040
		mov    %esi,data_1a403c
	jump_2c214:
		pop    %edi
		pop    %esi
		ret

vtable_2c219:
		.long   func_2c269
		.long   func_2c269
		.long   func_2c269
		.long   func_2c387
		.long   func_2c287
		.long   func_2c333


/*----------------------------------------------------------------*/
func_2c231:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		mov    %ebx,%esi
		mov    data_1a4048,%ebx
		cmp    $0x5,%ebx
		ja     func_2c387
		mov    data_1a4040,%edi
		mov    data_1a4040,%ebp
		mov    %ebx,%eax
		and    $0xff,%edi
		sar    $0x8,%ebp
		jmp    *vtable_2c219(,%eax,4)


/*----------------------------------------------------------------*/
func_2c269:
/*----------------------------------------------------------------*/
		mov    -0x2(%esp),%eax
		mov    data_1a403c,%ebx
		mov    data_1a4040,%ecx
		movswl %dx,%edx
		push   %ebx
		sar    $0x10,%eax
		mov    %esi,%ebx
		jmp    jump_2c382


/*----------------------------------------------------------------*/
func_2c287:
/*----------------------------------------------------------------*/
		mov    data_1a403c,%eax
		push   %eax
		movswl %dx,%eax
		mov    %esi,%ebx
		mov    %eax,0xc(%esp)
		mov    0x2(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x10,%eax
		mov    0xc(%esp),%edx
		mov    %eax,0x8(%esp)
		call   func_2be41
		mov    0x8(%esp),%eax
		push   $0xff
		dec    %eax
		mov    %esi,%ebx
		mov    %eax,0x10(%esp)
		mov    0x8(%esp),%eax
		mov    %edi,%ecx
		dec    %eax
		mov    0x10(%esp),%edx
		mov    %eax,0x14(%esp)
		call   func_2be41
		mov    0x8(%esp),%eax
		push   $0xff
		inc    %eax
		mov    %esi,%ebx
		mov    %eax,0x1c(%esp)
		mov    0x8(%esp),%eax
		mov    %edi,%ecx
		inc    %eax
		mov    0x1c(%esp),%edx
		mov    %eax,0x18(%esp)
		call   func_2be41
		push   $0xff
		mov    0x14(%esp),%eax
		mov    0x1c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   func_2be41
		push   $0xff
		mov    0x18(%esp),%eax
		mov    0x10(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   func_2be41
		push   $0xff
		mov    0x8(%esp),%eax
		mov    0xc(%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		jmp    jump_2c382


/*----------------------------------------------------------------*/
func_2c333:
/*----------------------------------------------------------------*/
		mov    data_1a403c,%ecx
		movswl %dx,%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %eax,0x1c(%esp)
		mov    0x2(%esp),%eax
		mov    0x1c(%esp),%edx
		sar    $0x10,%eax
		mov    %ebp,%ecx
		mov    %eax,0x18(%esp)
		call   func_2be41
		push   $0xff
		mov    0x1c(%esp),%edx
		mov    0x18(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%ecx
		inc    %edx
		inc    %eax
		call   func_2be41
		push   $0xff
		mov    0x18(%esp),%eax
		mov    0x1c(%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
	jump_2c382:
		call   func_2be41


/*----------------------------------------------------------------*/
func_2c387:
/*----------------------------------------------------------------*/
		add    $0x1c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2c3a4:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x1c,%esp
		push   %eax
		mov    %ebx,%esi
		mov    %ax,data_1a4088
		mov    %ebx,%edi
		mov    %dx,data_1a408a
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,0xc(%esp)
		xor    %ecx,%ecx
		jmp    jump_2c67c
	jump_2c3d1:
		xor    %eax,%eax
		mov    %cx,%ax
		mov    (%esi,%eax,1),%al
		mov    %al,0x14(%esp)
		cmp    $0x7f,%al
		jbe    jump_2c5ba
		mov    $data_1a4064,%eax
		mov    $0x20,%ebx
		xor    %edx,%edx
		call   w_dos_memset
		cmpw   $0x130,data_1a4088
		jle    jump_2c42a
		cmpw   $0x0,data_5ecc0
		je     jump_2c42a
		mov    data_5ecbe,%ax
		mov    data_1a408a,%bx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    %dx,data_1a4088
		mov    %bx,data_1a408a
	jump_2c42a:
		inc    %ecx
		xor    %eax,%eax
		mov    %cx,%ax
		add    %esi,%eax
		mov    (%eax),%bh
		mov    0x14(%esp),%al
		and    $0x7c,%al
		and    $0xff,%eax
		sar    $0x2,%eax
		mov    %al,%bl
		mov    0x14(%esp),%al
		and    $0x3,%al
		mov    %eax,%edx
		xor    %eax,%eax
		and    $0xff,%edx
		mov    %bh,%al
		shl    $0x3,%edx
		sar    $0x5,%eax
		add    %edx,%eax
		mov    %al,0x18(%esp)
		xor    %eax,%eax
		mov    %bl,%al
		mov    data_2beb9(%eax),%bl
		xor    %eax,%eax
		mov    0x18(%esp),%al
		mov    data_2bed9(%eax),%al
		and    $0x1f,%bh
		mov    %al,0x18(%esp)
		xor    %eax,%eax
		mov    %bh,%al
		mov    %bh,0x1c(%esp)
		mov    data_2bef9(%eax),%al
		mov    %al,0x1c(%esp)
		xor    %eax,%eax
		mov    0x18(%esp),%al
		xor    %dh,%dh
		mov    data_2bf41(%eax),%dl
		mov    %edx,0x4(%esp)
		cmpb   $0x0,0x1c(%esp)
		jne    jump_2c4c8
		xor    %edx,%edx
		mov    %bl,%dl
		mov    data_2bf57(%eax),%al
		xor    %ah,%ah
		mov    data_2bf19(%edx),%dl
	jump_2c4bc:
		xor    %dh,%dh
		mov    %eax,0x10(%esp)
		mov    %edx,0x8(%esp)
		jmp    jump_2c4e8
	jump_2c4c8:
		test   %bl,%bl
		je     jump_2c4e0
		xor    %edx,%edx
		mov    %bl,%dl
		mov    data_2bf6d(%eax),%al
		xor    %ah,%ah
		mov    data_2bf2d(%edx),%dl
		jmp    jump_2c4bc
	jump_2c4e0:
		movl   $0x2,0x8(%esp)
	jump_2c4e8:
		test   %bl,%bl
		je     jump_2c51a
		xor    %edx,%edx
		mov    0x10(%esp),%dx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x7,%eax
		mov    %bl,%dl
		add    $data_1a033c,%eax
		shl    $0x5,%edx
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_1a4064,%edx
		call   func_2c184
	jump_2c51a:
		mov    0x18(%esp),%bl
		test   %bl,%bl
		je     jump_2c557
		xor    %edx,%edx
		mov    0x8(%esp),%dx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    $data_1a173c,%edx
		shl    $0x6,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %bl,%al
		shl    $0x5,%eax
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_1a4064,%edx
		call   func_2c184
	jump_2c557:
		mov    0x1c(%esp),%bh
		test   %bh,%bh
		je     jump_2c58d
		xor    %edx,%edx
		mov    0x4(%esp),%dx
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x7,%eax
		mov    %bh,%dl
		add    $data_1a223c,%eax
		shl    $0x5,%edx
		mov    $0x20,%ebx
		add    %edx,%eax
		mov    $data_1a4064,%edx
		call   func_2c184
	jump_2c58d:
		mov    $data_1a4060,%ebx
		mov    data_1a4088,%edx
		mov    data_1a4086,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2c231
		mov    data_5ecbc,%ax
		add    %ax,data_1a4088
		jmp    jump_2c67b
	jump_2c5ba:
		cmp    $0xa,%al
		jne    jump_2c5e2
		mov    (%esp),%eax
		mov    data_1a408a,%bx
		mov    %ax,data_1a4088
		mov    data_5ecbe,%ax
		add    %eax,%ebx
		mov    %bx,data_1a408a
		jmp    jump_2c67b
	jump_2c5e2:
		mov    $data_1a4050,%eax
		mov    $0x10,%ebx
		xor    %edx,%edx
		call   w_dos_memset
		cmpw   $0x138,data_1a4088
		jle    jump_2c626
		cmpw   $0x0,data_5ecc0
		je     jump_2c626
		xor    %eax,%eax
		mov    data_1a408a,%dx
		mov    %ax,data_1a4088
		mov    data_5ecbe,%ax
		add    %eax,%edx
		mov    %dx,data_1a408a
	jump_2c626:
		xor    %eax,%eax
		mov    0x14(%esp),%al
		mov    $data_1a303c,%edx
		shl    $0x4,%eax
		mov    $0x10,%ebx
		add    %eax,%edx
		mov    $data_1a4050,%eax
		call   w_dos_memmove
		mov    $data_1a404c,%ebx
		mov    data_1a4088,%edx
		mov    data_1a4086,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2c231
		mov    data_5ecba,%edx
		mov    data_1a4086,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,data_1a4088
	jump_2c67b:
		inc    %ecx
	jump_2c67c:
		cmp    0xc(%esp),%cx
		jb     jump_2c3d1
		add    $0x20,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2c6ab:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x90,%esp
		lea    0xa8(%esp),%eax
		mov    0xa4(%esp),%edx
		lea    0x8c(%esp),%ebx
		mov    %eax,0x8c(%esp)
		mov    %esp,%eax
		call   w_dos_vsprintf
		mov    0x9e(%esp),%edx
		mov    0x9a(%esp),%eax
		mov    %esp,%ebx
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2c3a4
		xor    %edx,%edx
		mov    %edx,0x8c(%esp)
		add    $0x90,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2c703:
/*----------------------------------------------------------------*/
		sub    $0x8,%esp
		mov    %dl,0x4(%esp)
		shl    $0x2,%al
		xor    %edx,%edx
		xor    %ah,%ah
		mov    0x4(%esp),%dl
		or     $0x80,%al
		mov    %ah,0x2(%esp)
		mov    %al,(%esp)
		xor    %eax,%eax
		sar    $0x3,%edx
		mov    (%esp),%al
		or     %edx,%eax
		mov    %al,(%esp)
		mov    0x4(%esp),%al
		shl    $0x5,%al
		mov    %al,%dl
		mov    %al,0x1(%esp)
		or     %bl,%dl
		mov    0xc(%esp),%ebx
		mov    %dl,0x1(%esp)
		movswl %cx,%edx
		add    %ebx,%edx
		mov    (%esp),%al
		mov    %al,(%edx)
		mov    0x1(%esp),%al
		movb   $0x0,0x2(%edx)
		mov    %al,0x1(%edx)
		mov    %esp,%ebx
		mov    data_1a4084,%edx
		mov    data_1a4082,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2c3a4
		add    $0x8,%esp
		ret    $0x4


/*----------------------------------------------------------------*/
func_2c775:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0x2c,%esp
		push   %edx
		mov    %ebx,%esi
		mov    %cx,0x10(%esp)
		mov    $0x1,%dl
		movb   $0x0,(%ebx)
		mov    %dl,0x24(%esp)
		mov    %dl,0x20(%esp)
		mov    %dl,0x28(%esp)
		mov    %ax,data_1a4084
		mov    (%esp),%eax
		xor    %edx,%edx
		mov    %ax,data_1a4086
		mov    %dx,0x14(%esp)
	jump_2c7a9:
		call   func_2b950
		mov    %eax,%ecx
		mov    $0xff,%eax
		call   func_2b949
		call   w_dos_getch
		mov    %eax,%edx
		mov    %ax,0xc(%esp)
		mov    %eax,%ebx
		mov    %eax,0x4(%esp)
		movswl %cx,%eax
		call   func_2b949
		cmp    $0x20,%dx
		jne    jump_2c816
		mov    $0x2,%ah
		mov    %ah,%dh
		int    $0x16
		jne    jump_2c7eb
		and    $0xf,%dh
		dec    %dh
		jne    jump_2c7eb
		sub    %eax,%eax
	jump_2c7eb:
		test   $0x3,%al
		je     jump_2c816
		cmpl   $0x2,data_1a4044
		jne    jump_2c807
		movl   $0x1,data_1a4044
		jmp    jump_2cf7e
	jump_2c807:
		movl   $0x2,data_1a4044
		jmp    jump_2cf7e
	jump_2c816:
		cmp    $0x8,%bx
		jne    jump_2c944
		cmpb   $0x1,0x28(%esp)
		jne    jump_2c8d6
		mov    $0x1,%bl
		xor    %edx,%edx
	jump_2c82f:
		movswl %dx,%eax
		mov    (%esi,%eax,1),%al
		test   %al,%al
		je     jump_2c84b
		xor    %ah,%ah
		inc    %edx
		mov    %ah,0x1c(%esp)
		cmp    $0x80,%al
		jb     jump_2c82f
		mov    %bl,0x1c(%esp)
		inc    %edx
		jmp    jump_2c82f
	jump_2c84b:
		test   %dx,%dx
		je     jump_2cf7e
		cmpb   $0x0,0x1c(%esp)
		je     jump_2c890
		mov    0x14(%esp),%ecx
		mov    data_1a4084,%di
		mov    $data_52014,%ebx
		sub    $0x10,%edi
		mov    data_1a4084,%edx
		mov    %di,data_1a4084
		sar    $0x10,%edx
		mov    data_1a4082,%eax
		sub    $0x2,%ecx
		sar    $0x10,%eax
		mov    %cx,0x14(%esp)
		jmp    jump_2c8c1
	jump_2c890:
		mov    0x14(%esp),%eax
		mov    data_1a4084,%edx
		mov    data_1a4084,%bx
		sar    $0x10,%edx
		sub    $0x8,%ebx
		dec    %eax
		mov    %bx,data_1a4084
		mov    %ax,0x14(%esp)
		mov    data_1a4082,%eax
		mov    $data_52019,%ebx
		sar    $0x10,%eax
	jump_2c8c1:
		call   func_2c3a4
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		movb   $0x0,(%esi,%eax,1)
		jmp    jump_2cf7e
	jump_2c8d6:
		mov    0x20(%esp),%bl
		cmp    $0x1,%bl
		jne    jump_2c90c
		mov    0x12(%esp),%edi
		mov    %bl,%al
		mov    %bl,0x28(%esp)
		push   %esi
		xor    %edx,%edx
		sar    $0x10,%edi
		xor    %ebx,%ebx
		mov    %al,%dl
		mov    0x28(%esp),%bl
		mov    $0x1,%eax
		mov    %edi,%ecx
		call   func_2c703
		movb   $0x0,(%edi,%esi,1)
		jmp    jump_2cf7e
	jump_2c90c:
		mov    0x24(%esp),%bh
		cmp    $0x1,%bh
		jne    jump_2c91b
		mov    %bh,0x20(%esp)
		jmp    jump_2c920
	jump_2c91b:
		movb   $0x1,0x24(%esp)
	jump_2c920:
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
	jump_2c937:
		sar    $0x10,%ecx
	jump_2c93a:
		call   func_2c703
		jmp    jump_2cf7e
	jump_2c944:
		cmp    $0x20,%bx
		jl     jump_2cf7e
		cmp    $0x61,%bx
		jl     jump_2c95d
		cmp    $0x7a,%bx
		jg     jump_2c95d
		sub    $0x20,%ebx
	jump_2c95d:
		cmpl   $0x2,data_1a4044
		jne    jump_2cec7
		cmp    $0x41,%bx
		jl     jump_2cec7
		cmp    $0x5a,%bx
		jg     jump_2cec7
		mov    $0x2,%ah
		sub    $0x41,%ebx
		mov    %ah,%dh
		int    $0x16
		jne    jump_2c992
		and    $0xf,%dh
		dec    %dh
		jne    jump_2c992
		sub    %eax,%eax
	jump_2c992:
		test   $0x3,%al
		je     jump_2c9a2
		movswl %bx,%eax
		mov    data_2bfb7(,%eax,2),%al
		jmp    jump_2c9ac
	jump_2c9a2:
		movswl %bx,%eax
		mov    data_2bf83(,%eax,2),%al
	jump_2c9ac:
		mov    %al,0x2c(%esp)
		mov    0x2c(%esp),%bl
		cmp    $0x64,%bl
		jae    jump_2cc76
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    -0x2(%edx),%ebx
		cmp    %ebx,%eax
		jg     jump_2cf7e
		sub    $0x3,%edx
		cmp    %edx,%eax
		jl     jump_2ca75
		mov    0x24(%esp),%al
		cmp    $0x1,%al
		je     jump_2ca28
		xor    %ebx,%ebx
	jump_2c9eb:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x24(%esp),%dl
		mov    data_2c051(%eax),%di
		cmp    %di,%dx
		jne    jump_2ca1b
		xor    %edi,%edx
		mov    data_2c053(%eax),%cx
		mov    0x2c(%esp),%dl
		cmp    %cx,%dx
		je     jump_2ca22
	jump_2ca1b:
		inc    %ebx
		cmp    $0xb,%bx
		jl     jump_2c9eb
	jump_2ca22:
		cmp    $0xb,%bx
		jmp    jump_2ca6f
	jump_2ca28:
		cmp    0x20(%esp),%al
		je     jump_2ca3f
		xor    %eax,%eax
		mov    0x2c(%esp),%al
		cmpw   $0x1,data_2bfeb(,%eax,2)
		jmp    jump_2ca6f
	jump_2ca3f:
		cmp    0x28(%esp),%al
		je     jump_2ca75
		xor    %edx,%edx
	jump_2ca47:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    0x28(%esp),%bl
		cmp    data_2c093(,%eax,2),%bx
		jne    jump_2ca64
		mov    0x2c(%esp),%al
		cmp    0x28(%esp),%al
		je     jump_2ca6b
	jump_2ca64:
		inc    %edx
		cmp    $0x5,%dx
		jl     jump_2ca47
	jump_2ca6b:
		cmp    $0x5,%dx
	jump_2ca6f:
		je     jump_2cf7e
	jump_2ca75:
		mov    0x20(%esp),%bh
		cmp    $0x1,%bh
		jne    jump_2cb2d
		cmp    0x28(%esp),%bh
		je     jump_2cb04
		xor    %edi,%edi
	jump_2ca8e:
		xor    %edx,%edx
		movswl %di,%eax
		mov    0x28(%esp),%dl
		cmp    data_2c093(,%eax,2),%dx
		jne    jump_2cab7
		mov    0x2c(%esp),%al
		mov    0x28(%esp),%bl
		cmp    %bl,%al
		jne    jump_2cab7
		mov    %bl,%bh
		inc    %bh
		mov    %bh,0x28(%esp)
		jmp    jump_2cabe
	jump_2cab7:
		inc    %edi
		cmp    $0x5,%di
		jl     jump_2ca8e
	jump_2cabe:
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		call   func_2c703
		cmp    $0x5,%di
		jne    jump_2cf7e
		mov    data_1a4084,%cx
		mov    0x14(%esp),%edi
		add    $0x10,%ecx
		add    $0x2,%edi
		mov    %cx,data_1a4084
		mov    %di,0x14(%esp)
	jump_2cb04:
		mov    0x2c(%esp),%al
		mov    $0x1,%cl
		mov    $0x1,%edx
		push   %esi
		mov    %al,0x2c(%esp)
		mov    %cl,0x24(%esp)
		mov    %cl,0x28(%esp)
		mov    %edx,%ebx
		xor    %eax,%eax
		mov    0x16(%esp),%ecx
		mov    0x30(%esp),%al
		jmp    jump_2c937
	jump_2cb2d:
		mov    0x24(%esp),%cl
		cmp    $0x1,%cl
		jne    jump_2cba0
		xor    %eax,%eax
		mov    0x2c(%esp),%al
		mov    data_2bfeb(,%eax,2),%al
		mov    %al,0x24(%esp)
		cmp    %cl,%al
		jne    jump_2c920
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		call   func_2c703
		mov    0x2c(%esp),%al
		mov    %al,0x28(%esp)
		mov    $0x1,%al
		mov    data_1a4084,%di
		mov    %al,0x20(%esp)
		mov    0x14(%esp),%eax
		add    $0x10,%edi
		add    $0x2,%eax
		mov    %di,data_1a4084
		mov    %ax,0x14(%esp)
		jmp    jump_2c920
	jump_2cba0:
		xor    %edi,%edi
	jump_2cba2:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x24(%esp),%dl
		mov    data_2c051(%eax),%bx
		cmp    %bx,%dx
		jne    jump_2cbfb
		xor    %ebx,%edx
		mov    data_2c053(%eax),%cx
		mov    0x2c(%esp),%dl
		cmp    %cx,%dx
		jne    jump_2cbfb
		mov    0x12(%esp),%ecx
		push   %esi
		mov    data_2c055(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x24(%esp),%dl
		mov    %al,0x28(%esp)
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x10,%ecx
		mov    0x2c(%esp),%al
		call   func_2c703
		jmp    jump_2cc02
	jump_2cbfb:
		inc    %edi
		cmp    $0xb,%di
		jl     jump_2cba2
	jump_2cc02:
		cmp    $0xb,%di
		jne    jump_2cf7e
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		call   func_2c703
		mov    0x2c(%esp),%al
		mov    $0x1,%dl
		mov    data_1a4084,%di
		push   %esi
		mov    %al,0x2c(%esp)
		mov    %dl,0x28(%esp)
		mov    %dl,0x24(%esp)
		add    $0x10,%edi
		mov    0x18(%esp),%eax
		mov    $0x1,%edx
		add    $0x2,%eax
		mov    %edx,%ebx
		mov    %ax,0x18(%esp)
		xor    %eax,%eax
		mov    0x16(%esp),%ecx
		mov    0x30(%esp),%al
		sar    $0x10,%ecx
		mov    %di,data_1a4084
		jmp    jump_2c93a
	jump_2cc76:
		mov    0xe(%esp),%eax
		mov    0x12(%esp),%edx
		mov    %bl,%bh
		sar    $0x10,%eax
		sub    $0x64,%bh
		sar    $0x10,%edx
		mov    %bh,0x2c(%esp)
		lea    -0x2(%eax),%ebx
		cmp    %ebx,%edx
		jg     jump_2cf7e
		sub    $0x3,%eax
		cmp    %eax,%edx
		jl     jump_2ccf5
		mov    0x24(%esp),%cl
		cmp    $0x1,%cl
		jne    jump_2cf7e
		cmp    0x20(%esp),%cl
		je     jump_2ccf5
		xor    %ebx,%ebx
	jump_2ccb4:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x20(%esp),%dl
		mov    data_2c09d(%eax),%cx
		cmp    %cx,%dx
		jne    jump_2cce4
		xor    %ecx,%edx
		mov    data_2c09f(%eax),%di
		mov    0x2c(%esp),%dl
		cmp    %di,%dx
		je     jump_2cceb
	jump_2cce4:
		inc    %ebx
		cmp    $0x7,%bx
		jl     jump_2ccb4
	jump_2cceb:
		cmp    $0x7,%bx
		je     jump_2cf7e
	jump_2ccf5:
		mov    0x20(%esp),%ah
		cmp    $0x1,%ah
		je     jump_2ce92
		mov    0x24(%esp),%bh
		cmp    $0x1,%bh
		jne    jump_2cde3
		xor    %edi,%edi
	jump_2cd11:
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x20(%esp),%dl
		mov    data_2c09d(%eax),%cx
		cmp    %cx,%dx
		jne    jump_2cd6a
		xor    %ecx,%edx
		mov    data_2c09f(%eax),%bx
		mov    0x2c(%esp),%dl
		cmp    %bx,%dx
		jne    jump_2cd6a
		mov    0x12(%esp),%ecx
		push   %esi
		mov    data_2c0a1(%eax),%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x28(%esp),%bl
		mov    %al,0x24(%esp)
		mov    %al,%dl
		xor    %eax,%eax
		sar    $0x10,%ecx
		mov    0x2c(%esp),%al
		call   func_2c703
		jmp    jump_2cd71
	jump_2cd6a:
		inc    %edi
		cmp    $0x7,%di
		jl     jump_2cd11
	jump_2cd71:
		cmp    $0x7,%di
		jne    jump_2cf7e
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		mov    0x18(%esp),%edi
		call   func_2c703
		add    $0x2,%edi
		mov    $0xd,%dl
		mov    0x2c(%esp),%al
		mov    $0x1,%dh
		mov    $0x1,%ebx
		mov    data_1a4084,%cx
		push   %esi
		mov    %di,0x18(%esp)
		mov    %dl,0x2c(%esp)
		mov    %al,0x24(%esp)
		add    $0x10,%ecx
		mov    %dh,0x28(%esp)
		mov    %cx,data_1a4084
		xor    %edx,%edx
		mov    0x16(%esp),%ecx
		mov    %al,%dl
		mov    $0xd,%eax
		jmp    jump_2c937
	jump_2cde3:
		xor    %eax,%eax
		mov    %bh,%al
		mov    $0x1,%cl
		mov    data_2c015(,%eax,2),%al
		mov    %cl,0x24(%esp)
		mov    %al,0x18(%esp)
		cmp    $0x64,%al
		jb     jump_2ce23
		sub    $0x64,%al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,0x18(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_2c051(,%eax,2),%dl
		mov    data_2c053(,%eax,2),%al
		mov    %dl,0x24(%esp)
		mov    %al,0x18(%esp)
	jump_2ce23:
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		call   func_2c703
		mov    0x18(%esp),%al
		mov    $0x1,%ah
		mov    data_1a4084,%bx
		xor    %edx,%edx
		push   %esi
		mov    0x30(%esp),%dl
		mov    %al,0x2c(%esp)
		mov    %ah,0x28(%esp)
		mov    0x30(%esp),%al
		add    $0x10,%ebx
		mov    %al,0x24(%esp)
		mov    0x18(%esp),%eax
		mov    %bx,data_1a4084
		add    $0x2,%eax
		mov    $0x1,%ebx
		mov    %ax,0x18(%esp)
		xor    %eax,%eax
		mov    0x16(%esp),%ecx
		mov    0x1c(%esp),%al
		jmp    jump_2c937
	jump_2ce92:
		cmp    0x28(%esp),%ah
		jne    jump_2ce9d
		movb   $0xd,0x28(%esp)
	jump_2ce9d:
		mov    0x2c(%esp),%al
		mov    $0x1,%bl
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %edx,%edx
		mov    %al,0x24(%esp)
		mov    %bl,0x28(%esp)
		sar    $0x10,%ecx
		mov    %al,%dl
		xor    %eax,%eax
		mov    $0x1,%ebx
		mov    0x2c(%esp),%al
		jmp    jump_2c93a
	jump_2cec7:
		mov    0x28(%esp),%bh
		cmp    $0x1,%bh
		jne    jump_2cedc
		cmp    0x20(%esp),%bh
		jne    jump_2cedc
		cmp    0x24(%esp),%bh
		je     jump_2cf26
	jump_2cedc:
		mov    0x12(%esp),%ecx
		push   %esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x28(%esp),%bl
		mov    0x24(%esp),%dl
		mov    0x2c(%esp),%al
		sar    $0x10,%ecx
		call   func_2c703
		mov    $0x1,%al
		mov    0x14(%esp),%ebx
		mov    data_1a4084,%cx
		mov    %al,0x24(%esp)
		mov    %al,0x20(%esp)
		mov    %al,0x28(%esp)
		add    $0x2,%ebx
		add    $0x10,%ecx
		mov    %bx,0x14(%esp)
		mov    %cx,data_1a4084
	jump_2cf26:
		mov    0xe(%esp),%edx
		mov    0x12(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		dec    %edx
		cmp    %edx,%eax
		jg     jump_2cf7e
		mov    0xc(%esp),%dl
		mov    0x14(%esp),%edi
		xor    %dh,%dh
		mov    %dl,0x8(%esp)
		inc    %edi
		mov    %dh,0x9(%esp)
		mov    %di,0x14(%esp)
		mov    %dl,(%esi,%eax,1)
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		lea    0x8(%esp),%ebx
		mov    %dh,(%esi,%eax,1)
		mov    -0x2(%esp),%edx
		mov    data_1a4082,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   func_2c3a4
		addw   $0x8,data_1a4084
	jump_2cf7e:
		mov    0x4(%esp),%eax
		cmp    $0xd,%ax
		je     jump_2cf92
		cmp    $0x1b,%ax
		jne    jump_2c7a9
	jump_2cf92:
		cmpw   $0x1b,0x4(%esp)
		jne    jump_2cfa1
		movb   $0x0,(%esi)
		xor    %eax,%eax
		jmp    jump_2cfa3
	jump_2cfa1:
		mov    %esi,%eax
	jump_2cfa3:
		add    $0x30,%esp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_2cfa9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%edi
		push   $0x200
		push   $data_52020
		call   w_dos_open
		add    $0x8,%esp
		movswl %ax,%edx
		mov    %eax,%ecx
		cmp    $0xffffffff,%edx
		jne    jump_2cfed
		mov    $data_5202b,%eax
		call   w_puts
		call   w_dos_getch
		mov    %edx,%eax
		call   w_dos_close
		mov    $data_52042,%eax
		call   func_18fd0
	jump_2cfed:
		mov    $0x4,%edx
		movswl %cx,%ecx
		mov    $0x1,%ebx
		mov    %ecx,%eax
		call   w_dos_lseek
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		mov    $0x1,%ebx
		add    %eax,%edx
		mov    %ecx,%eax
		add    %edx,%edx
		call   w_dos_lseek
		mov    $0x88,%ebx
		mov    %ecx,%eax
		mov    %esi,%edx
		call   w_dos_read
		mov    %ecx,%eax
		call   w_dos_close
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d038:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		xor    %edi,%edi
		xor    %esi,%esi
		mov    $0xff,%ebp
	jump_2d04a:
		xor    %eax,%eax
		mov    data_19fbd4(%esi),%dx
		mov    %eax,(%esp)
		mov    %eax,0x4(%esp)
		mov    %eax,0x8(%esp)
		mov    %eax,0xc(%esp)
		mov    %eax,0x10(%esp)
		mov    %eax,0x14(%esp)
		test   %dx,%dx
		jne    jump_2d079
		cmpw   $0x0,data_19fbd6(%esi)
		je     jump_2d083
	jump_2d079:
		mov    $0x1,%edx
		mov    %edx,(%esp)
		add    %edx,%eax
	jump_2d083:
		cmpw   $0x0,data_19fbe4(%esi)
		je     jump_2d098
		mov    $0x1,%ebx
		mov    %ebx,0x4(%esp)
		add    %ebx,%eax
	jump_2d098:
		cmpw   $0x0,data_19fbd8(%esi)
		je     jump_2d0b7
		cmpw   $0x0,data_19fbde(%esi)
		je     jump_2d0b7
		mov    $0x1,%ecx
		mov    %ecx,0x8(%esp)
		add    %ecx,%eax
	jump_2d0b7:
		cmpw   $0x0,data_19fbda(%esi)
		je     jump_2d0d6
		cmpw   $0x0,data_19fbe0(%esi)
		je     jump_2d0d6
		mov    $0x1,%edx
		mov    %edx,0xc(%esp)
		add    %edx,%eax
	jump_2d0d6:
		cmpw   $0x0,data_19fbdc(%esi)
		je     jump_2d0f5
		cmpw   $0x0,data_19fbe2(%esi)
		je     jump_2d0f5
		mov    $0x1,%ebx
		mov    %ebx,0x10(%esp)
		add    %ebx,%eax
	jump_2d0f5:
		cmpw   $0x0,data_19fbe8(%esi)
		je     jump_2d10a
		mov    $0x1,%ecx
		mov    %ecx,0x14(%esp)
		add    %ecx,%eax
	jump_2d10a:
		mov    data_15ba16,%cx
		mov    data_19fbd4(%esi),%bx
		xor    %edx,%edx
		cmp    %cx,%bx
		jne    jump_2d140
		mov    data_19fbd4(%esi),%ebx
		mov    data_15ba16,%ecx
		sar    $0x10,%ebx
		sar    $0x10,%ecx
		inc    %ebx
		cmp    %ecx,%ebx
		jne    jump_2d140
		mov    (%esp),%ebx
		cmp    $0x1,%ebx
		jne    jump_2d140
		mov    %ebx,%edx
	jump_2d140:
		mov    data_1a00c8,%ebx
		xor    %ecx,%ecx
		sar    $0x10,%ebx
		mov    data_19fbe4(%esi),%cx
		cmp    %ebx,%ecx
		jne    jump_2d161
		mov    0x4(%esp),%ecx
		cmp    $0x1,%ecx
		jne    jump_2d161
		add    %ecx,%edx
	jump_2d161:
		xor    %ebx,%ebx
		mov    data_19fbd8(%esi),%bx
		xor    %ecx,%ecx
		mov    data_7d88c(%ebx),%cl
		xor    %ebx,%ebx
		mov    data_19fbde(%esi),%bx
		cmp    %ebx,%ecx
		jne    jump_2d18a
		mov    0x8(%esp),%ebx
		cmp    $0x1,%ebx
		jne    jump_2d18a
		add    %ebx,%edx
	jump_2d18a:
		xor    %ebx,%ebx
		mov    data_19fbda(%esi),%bx
		xor    %ecx,%ecx
		mov    data_7d88c(%ebx),%cl
		xor    %ebx,%ebx
		mov    data_19fbe0(%esi),%bx
		cmp    %ebx,%ecx
		jne    jump_2d1b3
		mov    0xc(%esp),%ecx
		cmp    $0x1,%ecx
		jne    jump_2d1b3
		add    %ecx,%edx
	jump_2d1b3:
		xor    %ebx,%ebx
		mov    data_19fbdc(%esi),%bx
		xor    %ecx,%ecx
		mov    data_7d88c(%ebx),%bl
		mov    data_19fbe2(%esi),%cx
		and    $0xff,%ebx
		cmp    %ecx,%ebx
		jne    jump_2d1e0
		mov    0x10(%esp),%ebx
		cmp    $0x1,%ebx
		jne    jump_2d1e0
		add    %ebx,%edx
	jump_2d1e0:
		xor    %ebx,%ebx
		mov    data_8271c,%ecx
		mov    data_19fbe8(%esi),%bx
		cmp    %ecx,%ebx
		jne    jump_2d1fe
		mov    0x14(%esp),%ebx
		cmp    $0x1,%ebx
		jne    jump_2d1fe
		add    %ebx,%edx
	jump_2d1fe:
		cmp    %eax,%edx
		jne    jump_2d2d1
		test   %eax,%eax
		jle    jump_2d2d1
		xor    %eax,%edx
		mov    data_15ba23,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		cmpb   $0x0,data_7ff9c(%edi,%eax,8)
		jne    jump_2d2d1
		mov    $data_f3370,%eax
		mov    %ebp,%ebx
		xor    %edx,%edx
		call   func_201cf
	jump_2d239:
		mov    $data_f3370,%eax
		mov    $0x2,%ecx
		mov    %ebp,%ebx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_2d25c
		call   func_2b206
		call   func_2b206
		jmp    jump_2d239
	jump_2d25c:
		xor    %edx,%edx
		mov    data_15ba23,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movb   $0x1,data_7ff9c(%edi,%eax,8)
		xor    %eax,%eax
		mov    data_19fbe6(%esi),%ax
		call   func_2d3b8
		xor    %eax,%eax
		mov    data_19fbe6(%esi),%ax
		call   func_13b8d
	jump_2d28f:
		mov    $data_f3370,%eax
		mov    $0x2,%ecx
		mov    %ebp,%ebx
		xor    %edx,%edx
		call   func_208fa
		cmp    $0x1,%al
		jne    jump_2d2b2
		call   func_2b206
		call   func_2b206
		jmp    jump_2d28f
	jump_2d2b2:
		cmpb   $0x1,game_cfg_music
		jne    jump_2d2ca
		mov    $0x1,%edx
		mov    data_82718,%eax
		call   func_39e5e
	jump_2d2ca:
		movb   $0x1,data_54041
	jump_2d2d1:
		inc    %edi
		add    $0x16,%esi
		cmp    $0x28,%edi
		jl     jump_2d04a
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret

vtable_2d2e8:
		.long   func_2d3dc
		.long   func_2d3eb
		.long   func_2d3eb
		.long   func_2d418
		.long   func_2d436
		.long   func_2d436
		.long   func_2d3eb
		.long   func_2d3eb
		.long   func_2d436
		.long   func_2d3dc
		.long   func_2d436
		.long   func_2d436
		.long   func_2d442
		.long   func_2d3eb
		.long   func_2d3eb
		.long   func_2d45c
		.long   func_2d45c
		.long   func_2d3fa
		.long   func_2d409
		.long   func_2d492
		.long   func_2d3fa
		.long   func_2d45c
		.long   func_2d427
		.long   func_2d455
		.long   func_2d492
		.long   func_2d492
		.long   func_2d44e
		.long   func_2d468
		.long   func_2d468
		.long   func_2d455
		.long   func_2d427
		.long   func_2d468
		.long   func_2d427
		.long   func_2d427
		.long   func_2d427
		.long   func_2d46f
		.long   func_2d476
		.long   func_2d47d
		.long   func_2d427
		.long   func_2d476
		.long   func_2d47d
		.long   func_2d46f
		.long   func_2d427
		.long   func_2d484
		.long   func_2d455
		.long   func_2d427
		.long   func_2d46f
		.long   func_2d455
		.long   func_2d427
		.long   func_2d476
		.long   func_2d46f
		.long   func_2d48b


/*----------------------------------------------------------------*/
func_2d3b8:
/*----------------------------------------------------------------*/
		push   %edx
		cmpb   $0x0,game_cfg_music
		je     jump_2d4a1
		sub    $0x10f,%eax
		cmp    $0x33,%eax
		ja     func_2d492
		jmp    *vtable_2d2e8(,%eax,4)


/*----------------------------------------------------------------*/
func_2d3dc:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0xd,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d3eb:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0x2,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d3fa:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0x14,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d409:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0xb,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d418:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0x9,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d427:
/*----------------------------------------------------------------*/
		mov    $0x9,%eax
	jump_2d42c:
		mov    $0x1,%edx
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d436:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0x11,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d442:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0x10,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d44e:
/*----------------------------------------------------------------*/
		mov    $0x11,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d455:
/*----------------------------------------------------------------*/
		mov    $0x14,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d45c:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
		mov    $0xe,%eax
		jmp    jump_2d49c


/*----------------------------------------------------------------*/
func_2d468:
/*----------------------------------------------------------------*/
		mov    $0x10,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d46f:
/*----------------------------------------------------------------*/
		mov    $0x8,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d476:
/*----------------------------------------------------------------*/
		mov    $0x2,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d47d:
/*----------------------------------------------------------------*/
		mov    $0xd,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d484:
/*----------------------------------------------------------------*/
		mov    $0x3,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d48b:
/*----------------------------------------------------------------*/
		mov    $0x7,%eax
		jmp    jump_2d42c


/*----------------------------------------------------------------*/
func_2d492:
/*----------------------------------------------------------------*/
		mov    $0xb,%eax
		mov    $0x1,%edx
	jump_2d49c:
		call   func_39e5e
	jump_2d4a1:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_2d4a3:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%edi
		call   func_19ba9
		mov    $0x34,%eax
		mov    $0x32,%edx
		mov    $data_5ecc8,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		push   %edi
		push   $0x3a
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%eax
		shr    %eax
		mov    $0xa0,%ecx
		shl    $0x3,%eax
		sub    %eax,%ecx
		movswl %cx,%eax
		push   %eax
		mov    $0x6c,%edx
		mov    $data_60199,%ebx
		call   func_2c6ab
		add    $0xc,%esp
		mov    $0x48,%eax
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0xae,%eax
		mov    $0x6c,%edx
		mov    $data_605e9,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_2d537:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%edx
		cmp    $0x48,%edx
		jl     jump_2d57b
		cmp    $0x8d,%edx
		jg     jump_2d57b
		mov    data_7cf28,%ecx
		cmp    $0x6c,%ecx
		jl     jump_2d57b
		cmp    $0x7b,%ecx
		jg     jump_2d57b
		cmpl   $0x1,data_7cf20
		jne    jump_2d57b
		mov    $0x1,%eax
		jmp    jump_2d5b2
	jump_2d57b:
		mov    data_7cf24,%ebp
		cmp    $0xae,%ebp
		jl     jump_2d537
		cmp    $0xf3,%ebp
		jg     jump_2d537
		mov    data_7cf28,%edx
		cmp    $0x6c,%edx
		jl     jump_2d537
		cmp    $0x80,%edx
		jg     jump_2d537
		cmpl   $0x1,data_7cf20
		jne    jump_2d537
		mov    $0xffffffff,%eax
	jump_2d5b2:
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d5bc:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		push   %edx
		mov    $0x118,%eax
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_2d5ff
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2d5ff:
		imul   $0x28,0x4(%esp),%edx
		mov    0x4(%esp),%eax
		mov    %ax,0x14(%esp)
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,0x10(%esp)
		mov    %edx,%eax
		add    $0x4,%eax
		neg    %edx
		add    %edx,%eax
		mov    %ax,0x18(%esp)
		jmp    jump_2d715
	jump_2d62c:
		mov    %esi,%edx
		sub    %eax,%edx
		mov    $0x117,%ebx
		mov    %edx,%edi
		mov    data_15b9cc,%ecx
		shl    $0x2,%edi
		push   %ecx
		add    %edx,%edi
		mov    %edx,%eax
		shl    $0x3,%edi
		xor    %edx,%eax
		lea    0x27(%edi),%ecx
		mov    %edi,%edx
		call   func_1843d
		xor    %eax,%eax
		mov    data_99230,%ax
		cmp    %eax,%esi
		jge    jump_2d6ff
		mov    data_99232(,%esi,4),%ebx
		mov    0xa(%ebx),%ebp
		test   %ebp,%ebp
		je     jump_2d6ff
		xor    %edx,%edx
		mov    data_15b9cc,%eax
		mov    0x2(%ebx),%dx
		mov    %eax,0xc(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		mov    %ebp,0x8(%esp)
		lea    (%ecx,%edi,1),%ebp
		sub    %eax,%ebp
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    (%ebx),%dx
		movswl %ax,%ebp
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x8(%esp),%ebx
		sub    %eax,%ecx
		mov    %ebp,%edx
		movswl %cx,%eax
		mov    0xc(%esp),%ecx
		call   func_2b240
		mov    %esi,%ebx
		shl    $0x5,%ebx
		add    %esi,%ebx
		mov    $data_f10a4,%eax
		add    %ebx,%ebx
		add    %ebx,%eax
		inc    %eax
		push   %eax
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x16(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		lea    0x4(%edi),%edx
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x1(%esi),%ebx
		mov    $0xe6,%eax
		call   func_1822d
	jump_2d6ff:
		mov    0x18(%esp),%ecx
		mov    0x14(%esp),%esi
		add    $0x28,%ecx
		inc    %esi
		mov    %cx,0x18(%esp)
		mov    %si,0x14(%esp)
	jump_2d715:
		mov    0x2(%esp),%eax
		mov    0x12(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		lea    0x5(%eax),%edx
		cmp    %edx,%esi
		jl     jump_2d62c
		mov    $0x118,%eax
		mov    data_15b9cc,%ebx
		mov    $0x64,%edx
		push   %ebx
		mov    $0xc7,%ecx
		mov    $0x13f,%ebx
		call   func_1843d
		xor    %eax,%eax
		mov    data_921ac,%ax
		cmp    %eax,%esi
		jge    jump_2d76e
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2d76e:
		add    $0x1c,%esp
	jump_2d771:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2d777:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		push   %eax
		push   %edx
		call   func_19ba9
		mov    $0x118,%eax
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpl   $0x0,0x4(%esp)
		jle    jump_2d7be
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2d7be:
		mov    (%esp),%eax
		add    $0x46,%eax
		mov    0x4(%esp),%esi
		mov    %eax,0x14(%esp)
		lea    0x5(%esi),%eax
		mov    %eax,0x18(%esp)
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x3,%eax
		lea    0x27(%eax),%edi
		neg    %eax
		add    %eax,%edi
		mov    %esi,%eax
		mov    %esi,%ebp
		shl    $0x6,%eax
		shl    $0x2,%ebp
		mov    %eax,0x20(%esp)
		jmp    jump_2d8bc
	jump_2d7f7:
		mov    data_15b9cc,%eax
		mov    0x4(%esp),%edx
		push   %eax
		mov    %esi,%eax
		sub    %edx,%eax
		mov    %eax,%ebx
		shl    $0x2,%ebx
		add    %eax,%ebx
		mov    %edi,%ecx
		shl    $0x3,%ebx
		xor    %eax,%eax
		mov    %ebx,0x20(%esp)
		mov    %ebx,%edx
		mov    $0x117,%ebx
		call   func_1843d
		cmp    $0xde,%esi
		jge    jump_2d8aa
		mov    0x20(%esp),%ebx
		mov    data_921ae(%ebx),%ebx
		mov    0xa(%ebx),%ecx
		test   %ecx,%ecx
		je     jump_2d8aa
		mov    data_15b9cc,%eax
		mov    0x1c(%esp),%edx
		mov    %eax,0x10(%esp)
		mov    (%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %eax,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x8(%esp),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		xor    %edx,%edx
		mov    0x2(%ebx),%dx
		mov    %eax,0xc(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    (%esp),%edx
		mov    %ecx,%ebx
		sub    %eax,%edx
		mov    0x10(%esp),%ecx
		movswl %dx,%eax
		mov    0xc(%esp),%edx
		call   func_2b240
		mov    0x14(%esp),%eax
		mov    0x8(%esp),%edx
		mov    data_53460(%ebp),%ebx
		call   func_18274
	jump_2d8aa:
		mov    0x20(%esp),%ebx
		add    $0x28,%edi
		add    $0x4,%ebp
		add    $0x40,%ebx
		inc    %esi
		mov    %ebx,0x20(%esp)
	jump_2d8bc:
		cmp    0x18(%esp),%esi
		jl     jump_2d7f7
		mov    $0x118,%eax
		mov    data_15b9cc,%edi
		mov    $0x64,%edx
		push   %edi
		mov    $0x13f,%ebx
		mov    $0xc7,%ecx
		call   func_1843d
		cmp    $0xde,%esi
		jge    jump_2d902
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2d902:
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x24,%esp
		jmp    jump_2d771


/*----------------------------------------------------------------*/
func_2d919:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xa0,%esp
		push   %eax
		push   %edx
		call   func_19ba9
		xor    %edx,%edx
		mov    $0x118,%eax
		mov    %edx,0xa4(%esp)
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_2d96d
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2d96d:
		imul   $0x28,0x4(%esp),%edx
		mov    0x4(%esp),%eax
		mov    %ax,0x9c(%esp)
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,0x98(%esp)
		mov    %edx,%eax
		add    $0x4,%eax
		neg    %edx
		add    %edx,%eax
		mov    %ax,0xa0(%esp)
		jmp    jump_2dab8
	jump_2d9a3:
		mov    %edi,%edx
		sub    %eax,%edx
		mov    $0x117,%ebx
		mov    %edx,%esi
		mov    data_15b9cc,%ecx
		shl    $0x2,%esi
		push   %ecx
		add    %edx,%esi
		mov    %edx,%eax
		shl    $0x3,%esi
		xor    %edx,%eax
		lea    0x27(%esi),%ecx
		mov    %esi,%edx
		call   func_1843d
		cmpw   $0x7b,0x9c(%esp)
		jge    jump_2da96
		lea    0x8(%esp),%eax
		mov    %edi,%edx
		call   func_2cfa9
		mov    0x67(%esp),%edx
		sar    $0x10,%edx
		shl    $0x6,%edx
		mov    data_921ae(%edx),%ebx
		cmpl   $0x0,0xa(%ebx)
		je     jump_2da96
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    -0x2(%esp),%ecx
		sar    $0x10,%ecx
		lea    (%ecx,%esi,1),%ebp
		sub    %eax,%ebp
		mov    0xa(%ebx),%edx
		mov    %ebp,%eax
		mov    %edx,0x94(%esp)
		xor    %edx,%edx
		cwtl
		mov    0x2(%ebx),%dx
		mov    %eax,0x90(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    data_15b9cc,%ebp
		mov    0x94(%esp),%ebx
		sub    %eax,%ecx
		mov    0x90(%esp),%edx
		movswl %cx,%eax
		mov    %ebp,%ecx
		call   func_2b240
		lea    0xa(%esp),%eax
		push   %eax
		mov    0xa2(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x9e(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		lea    0x1(%edi),%ebx
		call   func_2c6ab
		add    $0xc,%esp
		lea    0x4(%esi),%edx
		mov    $0xe6,%eax
		call   func_1822d
		incl   0xa4(%esp)
	jump_2da96:
		mov    0xa0(%esp),%ebx
		mov    0x9c(%esp),%ecx
		add    $0x28,%ebx
		inc    %ecx
		mov    %bx,0xa0(%esp)
		mov    %cx,0x9c(%esp)
	jump_2dab8:
		mov    0x2(%esp),%eax
		mov    0x9a(%esp),%edi
		sar    $0x10,%eax
		sar    $0x10,%edi
		lea    0x5(%eax),%edx
		cmp    %edx,%edi
		jl     jump_2d9a3
		mov    $0x118,%eax
		mov    $0x64,%edx
		mov    data_15b9cc,%ebx
		mov    $0xc7,%ecx
		push   %ebx
		mov    $0x13f,%ebx
		mov    0xa0(%esp),%esi
		call   func_1843d
		cmp    $0x7b,%si
		jge    jump_2db15
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2db15:
		mov    0xa4(%esp),%edi
		call   func_19b67
		test   %di,%di
		jle    jump_2db2d
		mov    $0x1,%eax
		jmp    jump_2db32
	jump_2db2d:
		mov    $0xffffffff,%eax
	jump_2db32:
		add    $0xa8,%esp
		jmp    jump_2d771


/*----------------------------------------------------------------*/
func_2db3d:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		push   %edx
		call   func_19ba9
		mov    $0x118,%eax
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_2db85
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2db85:
		mov    0x4(%esp),%esi
		imul   $0x28,%esi,%edx
		mov    (%esp),%eax
		add    $0x46,%eax
		mov    %ax,0xc(%esp)
		mov    (%esp),%eax
		add    %edx,%eax
		neg    %edx
		add    %edx,%eax
		jmp    jump_2dcdd
	jump_2dba7:
		mov    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0x117,%ebx
		shl    $0x2,%eax
		mov    data_15b9cc,%ecx
		add    %eax,%edx
		push   %ecx
		shl    $0x3,%edx
		xor    %eax,%eax
		lea    0x27(%edx),%ecx
		call   func_1843d
		cmp    $0xde,%si
		jge    jump_2dcd3
		mov    %edi,%eax
		shl    $0x6,%eax
		mov    data_921ae(%eax),%ecx
		cmpl   $0x0,0xa(%ecx)
		je     jump_2dcd3
		xor    %ebx,%ebx
	jump_2dbed:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		cmp    data_15ba85(,%eax,8),%si
		je     jump_2dc08
		inc    %ebx
		cmp    $0x7b,%bx
		jl     jump_2dbed
	jump_2dc08:
		cmp    $0x7b,%bx
		jne    jump_2dc3e
		mov    0x2(%esp),%eax
		movswl %si,%edx
		sar    $0x10,%eax
		mov    data_53460(,%edx,4),%ebx
		sub    %eax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %eax,%edx
		mov    -0x2(%esp),%eax
		shl    $0x3,%edx
		sar    $0x10,%eax
		add    %eax,%edx
		add    $0x46,%eax
		call   func_18274
		jmp    jump_2dc6c
	jump_2dc3e:
		movswl %bx,%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		add    $data_15ba24,%eax
		add    $0x2,%eax
		push   %eax
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
	jump_2dc6c:
		mov    0x2(%esp),%edx
		movswl %si,%eax
		sar    $0x10,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x2,%eax
		mov    -0x2(%esp),%ebp
		add    %edx,%eax
		sar    $0x10,%ebp
		shl    $0x3,%eax
		lea    (%eax,%ebp,1),%edx
		mov    %edx,0x8(%esp)
		xor    %edx,%edx
		mov    (%ecx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x8(%esp),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		xor    %edx,%edx
		mov    0x2(%ecx),%dx
		mov    %eax,0x8(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    data_15b9cc,%edi
		mov    0xa(%ecx),%ebx
		sub    %eax,%ebp
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    0x8(%esp),%edx
		cwtl
		call   func_2b240
	jump_2dcd3:
		mov    0x10(%esp),%eax
		add    $0x28,%eax
		inc    %esi
	jump_2dcdd:
		mov    %ax,0x10(%esp)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		movswl %si,%edi
		lea    0x5(%eax),%edx
		cmp    %edx,%edi
		jl     jump_2dba7
		mov    $0x118,%eax
		mov    data_15b9cc,%ebx
		mov    $0x64,%edx
		push   %ebx
		mov    $0xc7,%ecx
		mov    $0x13f,%ebx
		call   func_1843d
		cmp    $0xde,%si
		jge    jump_2dd32
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2dd32:
		call   func_19b67
		add    $0x14,%esp
		jmp    jump_2d771


/*----------------------------------------------------------------*/
func_2dd3f:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   func_19ba9
		mov    $0x118,%eax
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,0x4(%esp)
		jle    jump_2dd87
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2dd87:
		mov    0x4(%esp),%eax
		mov    %ax,0xc(%esp)
		jmp    jump_2de2b
	jump_2dd95:
		mov    %esi,%edx
		sub    %eax,%edx
		mov    $0x117,%ebx
		mov    %edx,%edi
		mov    data_15b9cc,%ecx
		shl    $0x2,%edi
		push   %ecx
		add    %edx,%edi
		mov    %edx,%eax
		shl    $0x3,%edi
		xor    %edx,%eax
		lea    0x27(%edi),%ecx
		mov    %edi,%edx
		call   func_1843d
		mov    0x6(%esp),%edx
		sar    $0x10,%edx
		imul   $0x3842,%edx,%edx
		xor    %eax,%eax
		mov    data_840a4(%edx),%ax
		cmp    %eax,%esi
		jge    jump_2de26
		mov    data_840a6(%edx,%esi,4),%ebx
		mov    0xa(%ebx),%esi
		test   %esi,%esi
		je     jump_2de26
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%ebp
		mov    -0x2(%esp),%esi
		sar    $0x10,%esi
		xor    %edx,%edx
		add    %esi,%edi
		mov    0x2(%ebx),%dx
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    data_15b9cc,%ecx
		movswl %di,%edi
		mov    %ebp,%ebx
		sub    %eax,%esi
		mov    %edi,%edx
		movswl %si,%eax
		call   func_2b240
	jump_2de26:
		incw   0xc(%esp)
	jump_2de2b:
		mov    0x2(%esp),%eax
		mov    0xa(%esp),%esi
		sar    $0x10,%eax
		sar    $0x10,%esi
		lea    0x5(%eax),%edx
		cmp    %edx,%esi
		jl     jump_2dd95
		mov    $0x118,%eax
		mov    data_15b9cc,%ebx
		mov    $0x64,%edx
		push   %ebx
		mov    $0xc7,%ecx
		mov    $0x13f,%ebx
		call   func_1843d
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		imul   $0x3842,%eax,%eax
		mov    data_840a4(%eax),%ax
		and    $0xffff,%eax
		cmp    %eax,%esi
		jge    jump_2de95
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2de95:
		call   func_19b67
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_2e078:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		call   func_19ba9
		xor    %edx,%edx
		mov    $0x118,%eax
		mov    %edx,0x8(%esp)
		mov    data_15b9cc,%edx
		mov    $0x13f,%ebx
		push   %edx
		mov    $0x63,%ecx
		xor    %edx,%edx
		call   func_1843d
		cmpw   $0x0,(%esp)
		jle    jump_2e0c5
		mov    $0x126,%eax
		mov    $0x32,%edx
		mov    $data_52048,%ebx
		call   func_18274
	jump_2e0c5:
		mov    (%esp),%edi
		imul   $0x28,%edi,%edx
		mov    %edx,%eax
		add    $0xf,%eax
		neg    %edx
		add    %edx,%eax
		jmp    jump_2e126
	jump_2e0d8:
		mov    %esi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    $0x117,%ebx
		shl    $0x2,%eax
		mov    data_15b9cc,%ecx
		add    %eax,%edx
		push   %ecx
		shl    $0x3,%edx
		xor    %eax,%eax
		lea    0x27(%edx),%ecx
		call   func_1843d
		cmp    $0x55,%di
		jge    jump_2e11c
		mov    data_5eb39(,%esi,4),%ebp
		mov    0x2(%esp),%eax
		push   %ebp
		sar    $0x10,%eax
		push   %eax
		push   $0x1e
		call   func_2c6ab
		add    $0xc,%esp
	jump_2e11c:
		mov    0x4(%esp),%eax
		add    $0x28,%eax
		inc    %edi
	jump_2e126:
		mov    %ax,0x4(%esp)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		movswl %di,%esi
		lea    0x5(%eax),%edx
		cmp    %edx,%esi
		jl     jump_2e0d8
		mov    $0x118,%eax
		mov    data_15b9cc,%ebx
		mov    $0x64,%edx
		push   %ebx
		mov    $0xc7,%ecx
		mov    $0x13f,%ebx
		call   func_1843d
		cmp    $0x55,%di
		jge    jump_2e176
		mov    $0x120,%eax
		mov    $0x96,%edx
		mov    $data_5204b,%ebx
		call   func_18274
	jump_2e176:
		mov    data_15b9cc,%eax
		mov    0x8(%esp),%esi
		call   func_2b44f
		call   func_19b67
		test   %si,%si
		jle    jump_2e195
		mov    $0x1,%eax
		jmp    jump_2e19a
	jump_2e195:
		mov    $0xffffffff,%eax
	jump_2e19a:
		add    $0xc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2e1a4:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_82945,%si
		mov    data_7cf24,%ax
		sub    $0xa0,%esi
		sub    %esi,%eax
		mov    %eax,%esi
		cmp    $0x13,%ax
		jge    jump_2e1df
		mov    $0x13,%esi
		jmp    jump_2e1ea
	jump_2e1df:
		cmp    $0x13f,%ax
		jle    jump_2e1ea
		mov    $0x13f,%esi
	jump_2e1ea:
		mov    data_82947,%ax
		mov    data_7cf28,%dx
		sub    $0x5a,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    jump_2e20a
		mov    $0x1,%eax
		jmp    jump_2e216
	jump_2e20a:
		cmp    $0xc7,%dx
		jle    jump_2e216
		mov    $0xc7,%eax
	jump_2e216:
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x6,%eax
		movswl %si,%edx
		add    %edx,%eax
		mov    data_60a40(%eax),%al
		xor    %ah,%ah
		cmp    $0x4b,%ax
		jb     jump_2e248
		jbe    jump_2e264
		cmp    $0x4d,%ax
		jb     jump_2e278
		jbe    jump_2e26f
		cmp    $0x50,%ax
		je     jump_2e259
		jmp    jump_2e278
	jump_2e248:
		cmp    $0x48,%ax
		jne    jump_2e278
		xor    %esi,%esi
		mov    %si,data_8279e
		jmp    jump_2e278
	jump_2e259:
		movw   $0x2,data_8279e
		jmp    jump_2e278
	jump_2e264:
		movw   $0x4,data_8279e
		jmp    jump_2e278
	jump_2e26f:
		movw   $0x6,data_8279e
	jump_2e278:
		mov    data_7cf20,%edx
		cmp    $0x1,%edx
		je     jump_2e285
		jne    jump_2e290
	jump_2e285:
		mov    $0x1,%dl
		cwtl
		mov    %dl,data_15ba22
		jmp    jump_2e29d
	jump_2e290:
		xor    %ah,%ah
		mov    %ah,data_15ba22
		mov    $0xffffffff,%eax
	jump_2e29d:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_2e2a4:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		mov    data_70828,%edx
		inc    %edx
		mov    %edx,data_70828
		cmp    $0xffff,%edx
		jbe    jump_2e2d0
		xor    %ecx,%ecx
		mov    %ecx,data_70828
	jump_2e2d0:
		mov    data_7082c,%esi
		inc    %esi
		mov    %esi,data_7082c
		cmp    $0x10,%esi
		jbe    jump_2e2f0
		xor    %eax,%eax
		mov    %eax,data_7082c
		pushf
		lcall  *data_1a40cc
	jump_2e2f0:
		mov    $0x20,%eax
		mov    %eax,%edx
		call   func_outp_
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
		iret


/*----------------------------------------------------------------*/
func_2e392:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %edx,%edi
		mov    $data_52050,%edx
		call   w_dos_fopen
		xor    %esi,%esi
		mov    %eax,%edx
		mov    %eax,%ebp
		test   %eax,%eax
		jne    jump_2e3ba
		mov    $0xffffffff,%eax
		jmp    jump_2e462
	jump_2e3ba:
		mov    $0xfffffd00,%edx
		mov    $0x2,%ebx
		call   w_dos_fseek
		mov    %si,0x4(%esp)
	jump_2e3ce:
		mov    %esp,%eax
		mov    $0x3,%edx
		mov    $0x1,%ebx
		mov    %ebp,%ecx
		call   w_dos_fread
		mov    0x4(%esp),%ebx
		inc    %ebx
		mov    %bx,0x4(%esp)
		cmp    $0x100,%bx
		jb     jump_2e3ce
		mov    $0x80,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   w_dos_fseek
	jump_2e400:
		mov    %ebp,%eax
		call   w_dos_fgetc
		mov    %eax,%edx
		and    $0xc0,%al
		xor    %ah,%dh
		xor    %ah,%ah
		mov    %dx,0x4(%esp)
		cmp    $0xc0,%ax
		jne    jump_2e442
		mov    %ebp,%eax
		and    $0x3f,%dl
		call   w_dos_fgetc
		mov    %ax,0x4(%esp)
		xor    %dh,%dh
		mov    0x4(%esp),%bl
	jump_2e42f:
		mov    %edx,%eax
		dec    %edx
		test   %ax,%ax
		je     jump_2e44f
		xor    %eax,%eax
		mov    %si,%ax
		inc    %esi
		mov    %bl,(%edi,%eax,1)
		jmp    jump_2e42f
	jump_2e442:
		xor    %eax,%eax
		mov    %si,%ax
		mov    0x4(%esp),%dl
		inc    %esi
		mov    %dl,(%edi,%eax,1)
	jump_2e44f:
		cmp    $0xf9ff,%si
		jb     jump_2e400
	jump_2e456:
		mov    %ebp,%eax
		call   w_dos_fclose
		mov    $0x1,%eax
	jump_2e462:
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2e46b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %edx,%edi
		mov    $data_52050,%edx
		call   w_dos_fopen
		xor    %esi,%esi
		mov    %eax,%edx
		mov    %eax,%ebp
		test   %eax,%eax
		jne    jump_2e490
		mov    $0xffffffff,%eax
		jmp    jump_2e462
	jump_2e490:
		mov    $0xfffffd00,%edx
		mov    $0x2,%ebx
		call   w_dos_fseek
		mov    %si,0x4(%esp)
	jump_2e4a4:
		mov    %esp,%eax
		mov    $0x3,%edx
		mov    $0x1,%ebx
		mov    %ebp,%ecx
		call   w_dos_fread
		xor    %edx,%edx
		mov    $0x3c8,%eax
		mov    0x4(%esp),%dl
#if 1
    movb   %dl,palette_index
#else
		call   func_outp_
#endif
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x3c9,%eax
		sar    $0x2,%edx
#if 1
    movb   %dl,palette_r
#else
		call   func_outp_
#endif
		xor    %edx,%edx
		mov    0x1(%esp),%dl
		mov    $0x3c9,%eax
		sar    $0x2,%edx
		mov    0x4(%esp),%ebx
#if 1
    movb   %dl,palette_g
#else
		call   func_outp_
#endif
		xor    %edx,%edx
		inc    %ebx
		mov    0x2(%esp),%dl
		mov    $0x3c9,%eax
		sar    $0x2,%edx
		mov    %bx,0x4(%esp)
#if 1
    movb   %dl,palette_b

    call   w_video_set_palette
    movb   palette_index,%al
    inc    %al
    movb   %al,palette_index
#else
		call   func_outp_
#endif
		cmp    $0x100,%bx
		jb     jump_2e4a4
		mov    $0x80,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   w_dos_fseek
	jump_2e51e:
		mov    %ebp,%eax
		call   w_dos_fgetc
		mov    %eax,%edx
		and    $0xc0,%al
		xor    %ah,%dh
		xor    %ah,%ah
		mov    %dx,0x4(%esp)
		cmp    $0xc0,%ax
		jne    jump_2e560
		mov    %ebp,%eax
		and    $0x3f,%dl
		call   w_dos_fgetc
		mov    %ax,0x4(%esp)
		xor    %dh,%dh
		mov    0x4(%esp),%bl
	jump_2e54d:
		mov    %edx,%eax
		dec    %edx
		test   %ax,%ax
		je     jump_2e56d
		xor    %eax,%eax
		mov    %si,%ax
		inc    %esi
		mov    %bl,(%edi,%eax,1)
		jmp    jump_2e54d
	jump_2e560:
		xor    %eax,%eax
		mov    %si,%ax
		mov    0x4(%esp),%dl
		inc    %esi
		mov    %dl,(%edi,%eax,1)
	jump_2e56d:
		cmp    $0xf9ff,%si
		jb     jump_2e51e
		jmp    jump_2e456
.data
data_2e579:
		.ascii  "\x07\x00\x0b\x00\x08\x00\x02\x00"
		.ascii  "\x00\x00\x0a\x00\x01\x00\x06\x00"
		.ascii  "\x0d\x00\x05\x00"
		.ascii   "SQRVW"
		.ascii  "\x83\xec\x14\x89\xc1\x89\xe7\xbe"
		.long   data_2e579
		.ascii  "\x31\xd2\x31\xc0\xa5\xa5\xa5\xa5"
		.ascii  "\xa5"
.text
	jump_2e5c8:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2e5ce:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %eax,%edi
		shl    $0x4,%edi
		add    %eax,%edi
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac64(%edi),%dl
		mov    data_768ae(%eax),%dh
		mov    $0x1,%ebx
		cmp    %dh,%dl
		jae    jump_2e60c
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78719
	jump_2e60c:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac65(%edx),%al
		mov    data_768af(%edi),%ah
		cmp    %ah,%al
		jae    jump_2e642
		mov    %ah,%al
		mov    data_19ac65(%edx),%bl
		sub    %bl,%al
		mov    %al,data_7871a
		xor    %ebx,%ebx
	jump_2e642:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac66(%edi),%dl
		mov    data_768b0(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e670
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_7871b
	jump_2e670:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac67(%edi),%dl
		mov    data_768b1(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e69e
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_7871c
	jump_2e69e:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		shl    $0x3,%edx
		mov    data_19ac70(%edx),%eax
		mov    %eax,%edx
		mov    $0x64,%edi
		sar    $0x1f,%edx
		idiv   %edi
		mov    %eax,%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		add    %eax,%eax
		mov    data_768b2(%eax),%al
		and    $0xff,%eax
		cmp    %eax,%edx
		jge    jump_2e6de
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    %al,data_7871d
	jump_2e6de:
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edx
		add    %edx,%edx
		xor    %eax,%eax
		mov    data_768b3(%edx),%al
		mov    %eax,(%esp)
		mov    %esi,%eax
		shl    $0x4,%eax
		add    %esi,%eax
		shl    $0x3,%eax
		mov    data_19ac76(%eax),%di
		cmp    (%esp),%di
		jge    jump_2e720
		mov    data_768b3(%edx),%dl
		mov    data_19ac76(%eax),%bh
		sub    %bh,%dl
		mov    %dl,data_7871e
		xor    %ebx,%ebx
	jump_2e720:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac5c(%edi),%dl
		mov    data_768b4(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e74e
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_7871f
	jump_2e74e:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac5e(%edi),%dl
		mov    data_768b5(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e77c
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78720
	jump_2e77c:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac5d(%edi),%dl
		mov    data_768b6(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e7aa
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78721
	jump_2e7aa:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac5f(%edx),%al
		mov    data_768b7(%edi),%ah
		cmp    %ah,%al
		jae    jump_2e7e0
		mov    %ah,%al
		mov    data_19ac5f(%edx),%bl
		sub    %bl,%al
		mov    %al,data_78722
		xor    %ebx,%ebx
	jump_2e7e0:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac52(%edi),%dl
		mov    data_768b8(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e80e
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78723
	jump_2e80e:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac53(%edi),%dl
		mov    data_768b9(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e83c
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78724
	jump_2e83c:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac54(%edx),%al
		mov    data_768ba(%edi),%ah
		cmp    %ah,%al
		jae    jump_2e872
		mov    %ah,%al
		mov    data_19ac54(%edx),%bl
		sub    %bl,%al
		mov    %al,data_78725
		xor    %ebx,%ebx
	jump_2e872:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac55(%edx),%al
		mov    data_768bb(%edi),%ah
		cmp    %ah,%al
		jae    jump_2e8a8
		mov    %ah,%al
		mov    data_19ac55(%edx),%bl
		sub    %bl,%al
		mov    %al,data_78726
		xor    %ebx,%ebx
	jump_2e8a8:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		add    %eax,%eax
		mov    data_19ac56(%edi),%dl
		mov    data_768bc(%eax),%dh
		cmp    %dh,%dl
		jae    jump_2e8d6
		mov    %dh,%al
		sub    %dl,%al
		xor    %ebx,%ebx
		mov    %al,data_78727
	jump_2e8d6:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac58(%edx),%al
		mov    data_768bd(%edi),%ah
		cmp    %ah,%al
		jae    jump_2e90c
		mov    %ah,%al
		mov    data_19ac58(%edx),%bl
		sub    %bl,%al
		mov    %al,data_78728
		xor    %ebx,%ebx
	jump_2e90c:
		mov    %esi,%eax
		shl    $0x4,%eax
		add    %esi,%eax
		movzbl data_19ac31(,%eax,8),%edi
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		mov    %ecx,%edx
		add    %eax,%eax
		xor    %ecx,%edx
		inc    %edi
		mov    data_768be(%eax),%dl
		cmp    %edx,%edi
		je     jump_2e941
		test   %dl,%dl
		je     jump_2e941
		mov    $0x1,%dh
		xor    %ebx,%ebx
		mov    %dh,data_78729
	jump_2e941:
		mov    %esi,%edx
		mov    %ecx,%eax
		shl    $0x4,%edx
		shl    $0x3,%eax
		add    %esi,%edx
		add    %ecx,%eax
		shl    $0x3,%edx
		add    %eax,%eax
		mov    data_19ac4f(%edx),%cl
		mov    data_768bf(%eax),%ch
		cmp    %ch,%cl
		jae    jump_2e96f
		mov    %ch,%al
		sub    %cl,%al
		xor    %ebx,%ebx
		mov    %al,data_7872a
	jump_2e96f:
		mov    %ebx,%eax
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2e979:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %eax,%edi
		shl    $0x4,%edi
		add    %eax,%edi
		mov    %edx,%eax
		shl    $0x3,%eax
		shl    $0x3,%edi
		add    %edx,%eax
		mov    data_19ac64(%edi),%dl
		mov    data_768ae(,%eax,2),%dh
		mov    $0x1,%ebx
		cmp    %dh,%dl
		jae    jump_2e9aa
		xor    %ebx,%ebx
	jump_2e9aa:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768af(,%eax,2),%dh
		cmp    data_19ac65(%edi),%dh
		jbe    jump_2e9cc
		xor    %ebx,%ebx
	jump_2e9cc:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b0(,%eax,2),%dh
		cmp    data_19ac66(%edi),%dh
		jbe    jump_2e9ee
		xor    %ebx,%ebx
	jump_2e9ee:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b1(,%eax,2),%dh
		cmp    data_19ac67(%edi),%dh
		jbe    jump_2ea10
		xor    %ebx,%ebx
	jump_2ea10:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		shl    $0x3,%edx
		mov    data_19ac70(%edx),%eax
		mov    %eax,%edx
		mov    $0x64,%edi
		sar    $0x1f,%edx
		idiv   %edi
		mov    %eax,%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		add    %eax,%eax
		mov    data_768b2(%eax),%al
		and    $0xff,%eax
		cmp    %eax,%edx
		jge    jump_2ea49
		xor    %ebx,%ebx
	jump_2ea49:
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		movzbw data_768b3(,%eax,2),%di
		mov    %esi,%eax
		shl    $0x4,%eax
		add    %esi,%eax
		cmp    data_19ac76(,%eax,8),%di
		jle    jump_2ea6c
		xor    %ebx,%ebx
	jump_2ea6c:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b4(,%eax,2),%dh
		cmp    data_19ac5c(%edi),%dh
		jbe    jump_2ea8e
		xor    %ebx,%ebx
	jump_2ea8e:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b5(,%eax,2),%dh
		cmp    data_19ac5e(%edi),%dh
		jbe    jump_2eab0
		xor    %ebx,%ebx
	jump_2eab0:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b6(,%eax,2),%dh
		cmp    data_19ac5d(%edi),%dh
		jbe    jump_2ead2
		xor    %ebx,%ebx
	jump_2ead2:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b7(,%eax,2),%dh
		cmp    data_19ac5f(%edi),%dh
		jbe    jump_2eaf4
		xor    %ebx,%ebx
	jump_2eaf4:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768b8(,%eax,2),%dh
		cmp    data_19ac52(%edi),%dh
		jbe    jump_2eb16
		xor    %ebx,%ebx
	jump_2eb16:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac53(%edx),%al
		cmp    data_768b9(%edi),%al
		jae    jump_2eb3b
		xor    %ebx,%ebx
	jump_2eb3b:
		mov    %esi,%edi
		mov    %ecx,%eax
		shl    $0x4,%edi
		shl    $0x3,%eax
		add    %esi,%edi
		add    %ecx,%eax
		shl    $0x3,%edi
		mov    data_768ba(,%eax,2),%dh
		cmp    data_19ac54(%edi),%dh
		jbe    jump_2eb5d
		xor    %ebx,%ebx
	jump_2eb5d:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac55(%edx),%al
		cmp    data_768bb(%edi),%al
		jae    jump_2eb82
		xor    %ebx,%ebx
	jump_2eb82:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac56(%edx),%al
		cmp    data_768bc(%edi),%al
		jae    jump_2eba7
		xor    %ebx,%ebx
	jump_2eba7:
		mov    %esi,%eax
		shl    $0x4,%eax
		lea    (%esi,%eax,1),%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		lea    (%ecx,%eax,1),%edi
		shl    $0x3,%edx
		add    %edi,%edi
		mov    data_19ac58(%edx),%al
		cmp    data_768bd(%edi),%al
		jae    jump_2ebcc
		xor    %ebx,%ebx
	jump_2ebcc:
		mov    %esi,%eax
		shl    $0x4,%eax
		add    %esi,%eax
		movzbl data_19ac31(,%eax,8),%edi
		mov    %ecx,%eax
		shl    $0x3,%eax
		add    %ecx,%eax
		mov    %ecx,%edx
		add    %eax,%eax
		xor    %ecx,%edx
		inc    %edi
		mov    data_768be(%eax),%dl
		cmp    %edx,%edi
		je     jump_2ebf9
		test   %dl,%dl
		je     jump_2ebf9
		xor    %ebx,%ebx
	jump_2ebf9:
		mov    %esi,%edx
		shl    $0x4,%edx
		mov    %ecx,%eax
		add    %esi,%edx
		shl    $0x3,%ecx
		shl    $0x3,%edx
		add    %eax,%ecx
		mov    data_19ac4f(%edx),%al
		cmp    data_768bf(,%ecx,2),%al
		jae    jump_2ec1b
		xor    %ebx,%ebx
	jump_2ec1b:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2ec22:
/*----------------------------------------------------------------*/
		sub    $0xc,%esp
		push   %edx
		sub    %ebx,%eax
		mov    %eax,0x4(%esp)
		fildl  0x4(%esp)
		fildl  (%esp)
		fdivrp %st,%st(1)
		sub    $0x5,%ecx
		mov    %ecx,0x4(%esp)
		fildl  0x4(%esp)
		fdivp  %st,%st(1)
		fstps  0x8(%esp)
		cmp    $0x7b,%ebx
		jne    jump_2ec53
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
		jmp    jump_2ec60
	jump_2ec53:
		flds   0x8(%esp)
		call   func___CHP
		fistpl 0xc(%esp)
	jump_2ec60:
		mov    0xc(%esp),%eax
		add    $0x10,%esp
		ret


/*----------------------------------------------------------------*/
func_2ec68:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %edx
		xor    %edx,%edx
		mov    %edx,0x8(%esp)
		mov    0x8(%esp),%edx
		mov    %eax,%ebp
		imul   $0x18,%edx,%eax
		mov    $0x4,%ebx
		mov    $0x1c,%ecx
		mov    $0x16,%esi
		mov    %ebx,0x10(%esp)
		mov    %ecx,0x4(%esp)
		mov    %eax,%edx
		mov    %esi,0xc(%esp)
		add    $0x5,%edx
		add    $0x4,%eax
		mov    %dx,0x18(%esp)
		mov    %ax,0x14(%esp)
	jump_2ecaf:
		cmp    (%esp),%ebp
		jne    jump_2ecd1
		mov    0x10(%esp),%edx
		mov    data_15b9cc,%eax
		mov    $0x129,%ebx
		push   %eax
		mov    0x8(%esp),%ecx
		mov    $0xa9,%eax
		call   func_1843d
	jump_2ecd1:
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		cmp    %eax,%ebp
		jge    jump_2ed74
		mov    %ebp,%esi
		shl    $0x4,%esi
		add    %ebp,%esi
		shl    $0x3,%esi
		mov    data_19ac83(%esi),%eax
		sar    $0x10,%eax
		mov    0x12(%esp),%edx
		shl    $0x6,%eax
		mov    data_15b9cc,%ecx
		mov    data_921ae(%eax),%ebx
		sar    $0x10,%edx
		mov    $0xad,%eax
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $data_19ac24,%eax
		add    %esi,%eax
		add    $0x2,%eax
		push   %eax
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   $0xc9
		call   func_2c6ab
		xor    %eax,%eax
		mov    data_19ac35(%esi),%al
		mov    $data_52a00,%ebx
		shl    $0x4,%eax
		add    %eax,%ebx
		add    $0xc,%esp
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%esi
		shr    %esi
		mov    %esi,%eax
		shl    $0x2,%eax
		sub    %esi,%eax
		mov    $0xf1,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0xc(%esp),%edx
		call   func_18274
	jump_2ed74:
		mov    0x10(%esp),%edx
		mov    0x4(%esp),%ebx
		mov    0xc(%esp),%ecx
		mov    0x8(%esp),%esi
		inc    %ebp
		add    $0x18,%edx
		add    $0x18,%ebx
		add    $0x18,%ecx
		inc    %esi
		mov    %edx,0x10(%esp)
		mov    %ebx,0x4(%esp)
		mov    %ecx,0xc(%esp)
		mov    %esi,0x8(%esp)
		mov    0x18(%esp),%ebx
		mov    0x14(%esp),%ecx
		add    $0x18,%ebx
		add    $0x18,%ecx
		mov    %bx,0x18(%esp)
		mov    %cx,0x14(%esp)
		cmp    $0x6,%esi
		jl     jump_2ecaf
		add    $0x1c,%esp
	jump_2edc3:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2edc9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x34,%esp
		push   %eax
		mov    %edx,%ebx
		mov    $0xffffffff,%edx
		mov    $data_172224,%eax
		mov    $0x4,%esi
		mov    %edx,0x10(%esp)
		mov    data_15b9cc,%edx
		shl    $0x5,%ebx
		call   func_2b433
		mov    (%esp),%edx
		mov    data_1a40e0,%eax
		xor    %ecx,%ecx
		call   func_2ec68
		mov    $0x1ae,%eax
		mov    %ecx,0x8(%esp)
		add    $data_70a30,%eax
		mov    %ebx,0x1c(%esp)
		mov    %eax,0x20(%esp)
		mov    $data_70a30,%eax
		mov    %esi,0x4(%esp)
		mov    %eax,0xc(%esp)
	jump_2ee27:
		mov    0x8(%esp),%eax
		shl    $0x2,%eax
		mov    %eax,0x18(%esp)
		mov    0x4(%esp),%eax
		mov    %eax,0x14(%esp)
	jump_2ee3a:
		mov    data_1a40dc,%eax
		mov    0x1c(%esp),%edi
		add    %eax,%eax
		add    %edi,%eax
		mov    data_76d1c(%eax),%ax
		and    $0xffff,%eax
		dec    %eax
		mov    %eax,0x24(%esp)
		test   %eax,%eax
		jl     jump_2f0d5
		mov    0x18(%esp),%edx
		cmp    data_1a40dc,%edx
		jne    jump_2f0d5
		mov    data_1a40dc,%eax
		mov    0x24(%esp),%edx
		mov    %eax,0x10(%esp)
		mov    (%esp),%eax
		call   func_2e5ce
		cmpb   $0x0,data_78718
		je     jump_2ee9a
		test   %eax,%eax
		jne    jump_2ee9a
		xor    %dh,%dh
		mov    %dh,data_78718
	jump_2ee9a:
		xor    %ebx,%ebx
		mov    %ebx,0x2c(%esp)
		mov    0x24(%esp),%ebx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		add    %edx,%edx
		mov    %edx,0x28(%esp)
		imul   $0x11,0x2c(%esp),%eax
		mov    0x20(%esp),%edi
		mov    0xc(%esp),%ebp
		add    $0x9,%eax
		xor    %esi,%esi
		mov    %ax,0x30(%esp)
	jump_2eeca:
		mov    0x28(%esp),%eax
		cmpb   $0x0,data_768ae(%eax)
		je     jump_2ef29
		cmpb   $0x0,data_78719(%esi)
		jne    jump_2eef3
		mov    0x2e(%esp),%edx
		mov    $0x4,%eax
		mov    data_15b9cc,%ecx
		mov    %ebp,%ebx
		jmp    jump_2ef04
	jump_2eef3:
		mov    0x2e(%esp),%edx
		mov    $0x4,%eax
		mov    data_15b9cc,%ecx
		mov    %edi,%ebx
	jump_2ef04:
		sar    $0x10,%edx
		call   func_2b240
		xor    %cl,%cl
		mov    0x30(%esp),%ebx
		mov    %cl,data_78718
		mov    0x2c(%esp),%ecx
		add    $0x11,%ebx
		inc    %ecx
		mov    %bx,0x30(%esp)
		mov    %ecx,0x2c(%esp)
	jump_2ef29:
		mov    0x28(%esp),%eax
		add    $0x35c,%edi
		add    $0x35c,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x28(%esp)
		cmp    $0xa,%esi
		jl     jump_2eeca
		mov    0x24(%esp),%eax
		mov    %eax,%edx
		shl    $0x3,%edx
		mov    0x2c(%esp),%ecx
		add    %eax,%edx
		imul   $0x11,%ecx,%eax
		mov    $0xa,%edi
		mov    $0x14,%ebp
		add    %edx,%edx
		add    $0x9,%eax
		lea    (%edi,%edx,1),%esi
		mov    %ax,0x34(%esp)
	jump_2ef6f:
		mov    data_768ae(%esi),%ch
		test   %ch,%ch
		je     jump_2f002
		cmpb   $0x0,data_78719(%edi)
		jne    jump_2efb2
		xor    %edx,%edx
		mov    %ch,%dl
		add    %edx,%edx
		sub    $0x2,%edx
		add    %ebp,%edx
		imul   $0x1ae,%edx,%edx
		mov    $data_70a30,%ebx
		mov    $0x4,%eax
		add    %edx,%ebx
		mov    0x32(%esp),%edx
		mov    data_15b9cc,%ecx
		sar    $0x10,%edx
		jmp    jump_2efde
	jump_2efb2:
		xor    %edx,%edx
		mov    %ch,%dl
		add    %edx,%edx
		sub    $0x2,%edx
		add    %ebp,%edx
		lea    0x1(%edx),%ebx
		imul   $0x1ae,%ebx,%ebx
		mov    $0x4,%eax
		mov    0x32(%esp),%edx
		mov    data_15b9cc,%ecx
		sar    $0x10,%edx
		add    $data_70a30,%ebx
	jump_2efde:
		call   func_2b240
		xor    %ah,%ah
		mov    0x2c(%esp),%edx
		mov    %ah,data_78718
		mov    0x34(%esp),%eax
		inc    %edx
		add    $0x11,%eax
		mov    %edx,0x2c(%esp)
		mov    %ax,0x34(%esp)
	jump_2f002:
		inc    %esi
		inc    %edi
		add    $0x4,%ebp
		cmp    $0x10,%edi
		jl     jump_2ef6f
		mov    0x24(%esp),%ebx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		add    %edx,%edx
		cmpb   $0x0,data_768be(%edx)
		je     jump_2f08d
		imul   $0x11,0x2c(%esp),%esi
		mov    data_768be(%edx),%bh
		add    $0x9,%esi
		cmp    $0x2,%bh
		jne    jump_2f060
		xor    %eax,%eax
		mov    data_78729,%al
		add    $0x30,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%ebx
		mov    data_15b9cc,%ecx
		movswl %si,%edx
		add    %eax,%ebx
		mov    $0x4,%eax
		jmp    jump_2f084
	jump_2f060:
		xor    %eax,%eax
		mov    data_78729,%al
		add    $0x2c,%eax
		imul   $0x1ae,%eax,%ebx
		mov    data_15b9cc,%ecx
		movswl %si,%edx
		mov    $0x4,%eax
		add    $data_70a30,%ebx
	jump_2f084:
		call   func_2b240
		incl   0x2c(%esp)
	jump_2f08d:
		mov    0x24(%esp),%ebx
		mov    %ebx,%edx
		shl    $0x3,%edx
		add    %ebx,%edx
		cmpb   $0x0,data_768bf(,%edx,2)
		je     jump_2f0d5
		imul   $0x11,0x2c(%esp),%eax
		mov    data_7872a,%ch
		add    $0x9,%eax
		test   %ch,%ch
		jne    jump_2f0bd
		mov    $data_75774,%ebx
		jmp    jump_2f0c2
	jump_2f0bd:
		mov    $data_75922,%ebx
	jump_2f0c2:
		mov    data_15b9cc,%ecx
		movswl %ax,%edx
		mov    $0x4,%eax
		call   func_2b240
	jump_2f0d5:
		mov    0x18(%esp),%ecx
		inc    %ecx
		mov    0x14(%esp),%esi
		mov    %ecx,0x18(%esp)
		cmp    %esi,%ecx
		jne    jump_2ee3a
		mov    0x4(%esp),%edi
		mov    0x8(%esp),%ebp
		add    $0x4,%edi
		inc    %ebp
		mov    %edi,0x4(%esp)
		mov    %ebp,0x8(%esp)
		cmp    $0x4,%ebp
		jl     jump_2ee27
		mov    0x10(%esp),%eax
		add    $0x38,%esp
		jmp    jump_2edc3


/*----------------------------------------------------------------*/
func_2f113:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x50,%esp
		push   %eax
		push   %edx
		mov    %edx,%eax
		mov    $0x11,%ebx
		shl    $0x5,%eax
		mov    %ebx,0x18(%esp)
		xor    %edx,%edx
		mov    %eax,0x14(%esp)
		add    $0x8,%eax
		mov    %edx,0x28(%esp)
		mov    %eax,0xc(%esp)
	jump_2f13c:
		mov    0x18(%esp),%eax
		mov    0x14(%esp),%ebp
		mov    0x28(%esp),%ecx
		mov    $0x2a,%esi
		mov    0xc(%esp),%edi
		mov    %eax,0x38(%esp)
		mov    %esi,0x3c(%esp)
		lea    (%ecx,%edi,1),%eax
		add    %ecx,%ebp
		mov    %eax,0x30(%esp)
	jump_2f162:
		mov    data_1a40d4,%eax
		mov    %eax,%esi
		xor    %edi,%edi
		shl    $0x6,%esi
		mov    data_76d1c(%ebp),%di
		sub    %eax,%esi
		dec    %edi
		add    %esi,%esi
		lea    (%edi,%edi,1),%eax
		add    %esi,%eax
		mov    data_76efc(%eax),%ax
		mov    %eax,%edx
		and    $0xffff,%edx
		shl    $0x6,%edx
		mov    data_921ae(%edx),%esi
		test   %edi,%edi
		jl     jump_2f21d
		xor    %edx,%edx
		mov    (%esi),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x3c(%esp),%edx
		sub    %eax,%edx
		mov    %edx,0x50(%esp)
		xor    %edx,%edx
		mov    0x2(%esi),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x38(%esp),%edx
		mov    data_15b9cc,%ecx
		sub    %eax,%edx
		mov    0xa(%esi),%ebx
		mov    %edx,0x54(%esp)
		mov    0x4e(%esp),%eax
		mov    0x52(%esp),%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		call   func_2b240
		mov    0x4(%esp),%eax
		mov    %edi,%edx
		call   func_2e979
		test   %eax,%eax
		jne    jump_2f21d
		mov    0x54(%esp),%eax
		mov    0x50(%esp),%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x2(%esi),%cx
		mov    (%esi),%bx
		add    %eax,%ecx
		add    %edx,%ebx
		mov    %edx,%eax
		mov    0x54(%esp),%edx
		call   func_188bc
	jump_2f21d:
		mov    0x3c(%esp),%ebx
		mov    0x30(%esp),%ecx
		add    $0x20,%ebx
		add    $0x2,%ebp
		mov    %ebx,0x3c(%esp)
		cmp    %ecx,%ebp
		jne    jump_2f162
		mov    0x28(%esp),%edi
		mov    0x18(%esp),%ebp
		add    $0x8,%edi
		add    $0x1f,%ebp
		mov    %edi,0x28(%esp)
		mov    %ebp,0x18(%esp)
		cmp    $0x20,%edi
		jne    jump_2f13c
		mov    (%esp),%eax
		xor    %edx,%edx
		mov    $0x11,%ecx
		mov    %edx,0x24(%esp)
		shl    $0x5,%eax
		mov    %edx,0x1c(%esp)
		mov    %ecx,0x20(%esp)
		mov    %eax,0x10(%esp)
	jump_2f273:
		mov    0x20(%esp),%eax
		mov    %eax,0x2c(%esp)
		mov    0x24(%esp),%eax
		shl    $0x2,%eax
		mov    0x1c(%esp),%ebp
		mov    %eax,0x34(%esp)
		mov    0x10(%esp),%eax
		add    %ebp,%eax
		xor    %edi,%edi
		mov    %eax,0x40(%esp)
		mov    $0x32,%eax
		mov    %edi,0x48(%esp)
		mov    %eax,0x44(%esp)
	jump_2f2a3:
		mov    0x34(%esp),%eax
		mov    0x48(%esp),%edx
		mov    0x40(%esp),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_76d1c(%ebx),%dx
		dec    %edx
		mov    %edx,0x4c(%esp)
		test   %edx,%edx
		jl     jump_2f3dd
		cmp    data_1a40dc,%eax
		jne    jump_2f3dd
		xor    %edx,%edx
		mov    (%esi),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x44(%esp),%edx
		sub    %eax,%edx
		mov    %edx,0x50(%esp)
		xor    %edx,%edx
		mov    0x2(%esi),%dx
		mov    %edx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x4c(%esp),%edi
		shl    $0x4,%edi
		mov    0x2c(%esp),%edx
		add    $data_52a00,%edi
		sub    %eax,%edx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		shr    %ecx
		mov    0x50(%esp),%eax
		lea    (%ecx,%ecx,4),%ebp
		sub    %ebp,%eax
		mov    %edx,0x54(%esp)
		mov    %eax,%ebp
		cmp    $0x1a,%eax
		jge    jump_2f332
		mov    $0x1a,%ebp
	jump_2f332:
		mov    $0x4,%eax
		call   func_189fa
		mov    data_15b9cc,%edi
		push   %edi
		mov    0x50(%esp),%edi
		mov    0x58(%esp),%eax
		shl    $0x4,%edi
		add    $0x5,%eax
		add    $data_52a00,%edi
		mov    %eax,0xc(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		imul   $0x6,%ecx,%ebx
		mov    0x58(%esp),%edx
		sub    $0x2,%edx
		lea    -0x2(%ebp),%eax
		mov    0xc(%esp),%ecx
		add    %ebp,%ebx
		call   func_1843d
		mov    $0xd,%eax
		call   func_189fa
		mov    (%esp),%eax
		cmp    $0x1,%eax
		jb     jump_2f398
		jbe    jump_2f3a3
		cmp    $0x2,%eax
		je     jump_2f3aa
		jmp    jump_2f3b4
	jump_2f398:
		test   %eax,%eax
		jne    jump_2f3b4
		mov    $0x2d,%eax
		jmp    jump_2f3af
	jump_2f3a3:
		mov    $0x25,%eax
		jmp    jump_2f3af
	jump_2f3aa:
		mov    $0x35,%eax
	jump_2f3af:
		call   func_18136
	jump_2f3b4:
		mov    0x4c(%esp),%eax
		mov    0x54(%esp),%edx
		mov    %eax,%ebx
		mov    %eax,data_1a40e4
		shl    $0x4,%ebx
		mov    %ebp,%eax
		add    $data_52a00,%ebx
		call   func_18274
		mov    $0x1,%eax
		call   func_18136
	jump_2f3dd:
		mov    0x40(%esp),%edi
		mov    0x44(%esp),%ebp
		mov    0x48(%esp),%eax
		add    $0x2,%edi
		add    $0x20,%ebp
		inc    %eax
		mov    %edi,0x40(%esp)
		mov    %ebp,0x44(%esp)
		mov    %eax,0x48(%esp)
		cmp    $0x4,%eax
		jl     jump_2f2a3
		mov    0x1c(%esp),%ebx
		mov    0x20(%esp),%ecx
		mov    0x24(%esp),%edi
		add    $0x8,%ebx
		add    $0x1f,%ecx
		inc    %edi
		mov    %ebx,0x1c(%esp)
		mov    %ecx,0x20(%esp)
		mov    %edi,0x24(%esp)
		cmp    $0x4,%edi
		jl     jump_2f273
		add    $0x58,%esp
		jmp    jump_2edc3


/*----------------------------------------------------------------*/
func_2f435:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac33(%eax),%al
		and    $0xff,%eax
		cmp    $0x45,%eax
		je     jump_2f455
		cmp    $0x2e,%eax
		jne    jump_2f45c
	jump_2f455:
		mov    $0x3,%eax
		pop    %edx
		ret
	jump_2f45c:
		cmp    $0x66,%eax
		je     jump_2f46b
		cmp    $0x68,%eax
		je     jump_2f46b
		cmp    $0x6c,%eax
		jne    jump_2f472
	jump_2f46b:
		mov    $0x4,%eax
		pop    %edx
		ret
	jump_2f472:
		cmp    $0x3f,%eax
		je     jump_2f49f
		cmp    $0x5b,%eax
		je     jump_2f49f
		cmp    $0x5c,%eax
		je     jump_2f49f
		cmp    $0x5d,%eax
		je     jump_2f49f
		cmp    $0x5e,%eax
		je     jump_2f49f
		cmp    $0x5f,%eax
		je     jump_2f49f
		cmp    $0x60,%eax
		je     jump_2f49f
		cmp    $0x61,%eax
		je     jump_2f49f
		cmp    $0x62,%eax
		jne    jump_2f4a6
	jump_2f49f:
		mov    $0x5,%eax
		pop    %edx
		ret
	jump_2f4a6:
		cmp    $0x3e,%eax
		je     jump_2f4b0
		cmp    $0x2c,%eax
		jne    jump_2f4b7
	jump_2f4b0:
		mov    $0x6,%eax
		pop    %edx
		ret
	jump_2f4b7:
		cmp    $0x14,%eax
		je     jump_2f4df
		cmp    $0x15,%eax
		je     jump_2f4df
		cmp    $0x32,%eax
		je     jump_2f4df
		cmp    $0x3b,%eax
		je     jump_2f4df
		cmp    $0x3c,%eax
		je     jump_2f4df
		cmp    $0x3d,%eax
		je     jump_2f4df
		cmp    $0x6d,%eax
		je     jump_2f4df
		cmp    $0x6e,%eax
		jne    jump_2f4e6
	jump_2f4df:
		mov    $0x7,%eax
		pop    %edx
		ret
	jump_2f4e6:
		cmp    $0x3,%eax
		je     jump_2f522
		cmp    $0x4,%eax
		je     jump_2f522
		cmp    $0xc,%eax
		je     jump_2f522
		cmp    $0x48,%eax
		je     jump_2f522
		cmp    $0x64,%eax
		je     jump_2f522
		cmp    $0x65,%eax
		je     jump_2f522
		cmp    $0x6a,%eax
		je     jump_2f522
		cmp    $0x6b,%eax
		je     jump_2f522
		cmp    $0x70,%eax
		je     jump_2f522
		cmp    $0x71,%eax
		je     jump_2f522
		cmp    $0x73,%eax
		je     jump_2f522
		cmp    $0x77,%eax
		jne    jump_2f529
	jump_2f522:
		mov    $0x8,%eax
		pop    %edx
		ret
	jump_2f529:
		cmp    $0x16,%eax
		je     jump_2f533
		cmp    $0x50,%eax
		jne    jump_2f53a
	jump_2f533:
		mov    $0x9,%eax
		pop    %edx
		ret
	jump_2f53a:
		cmp    $0x4b,%eax
		jne    jump_2f546
		mov    $0xa,%eax
		pop    %edx
		ret
	jump_2f546:
		cmp    $0x8,%eax
		je     jump_2f555
		cmp    $0x4f,%eax
		je     jump_2f555
		cmp    $0x67,%eax
		jne    jump_2f55c
	jump_2f555:
		mov    $0xb,%eax
		pop    %edx
		ret
	jump_2f55c:
		cmp    $0x42,%eax
		je     jump_2f566
		cmp    $0x41,%eax
		jne    jump_2f56d
	jump_2f566:
		mov    $0xc,%eax
		pop    %edx
		ret
	jump_2f56d:
		cmp    $0x43,%eax
		je     jump_2f577
		cmp    $0x44,%eax
		jne    jump_2f57e
	jump_2f577:
		mov    $0xd,%eax
		pop    %edx
		ret
	jump_2f57e:
		cmp    $0x11,%eax
		je     jump_2f588
		cmp    $0x6f,%eax
		jne    jump_2f58f
	jump_2f588:
		mov    $0xe,%eax
		pop    %edx
		ret
	jump_2f58f:
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac35(%eax),%al
		and    $0xff,%eax
		mov    data_7869a(,%eax,2),%eax
		sar    $0x10,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_2f5b0:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		shl    $0x4,%ebx
		xor    %ebp,%ebp
		add    %eax,%ebx
		xor    %edi,%edi
		shl    $0x3,%ebx
	jump_2f5c4:
		mov    %edi,%eax
		xor    %edx,%edx
	jump_2f5c8:
		mov    data_19ac83(%ebx),%esi
		xor    %ecx,%ecx
		sar    $0x10,%esi
		mov    data_76efc(%eax),%cx
		cmp    %ecx,%esi
		jne    jump_2f5e2
		mov    %ebp,%eax
		jmp    jump_2f5fc
	jump_2f5e2:
		inc    %edx
		add    $0x2,%eax
		cmp    $0x3f,%edx
		jl     jump_2f5c8
		add    $0x7e,%edi
		inc    %ebp
		cmp    $0x17a0,%edi
		jl     jump_2f5c4
		mov    $0x1869f,%eax
	jump_2f5fc:
		pop    %ebp
		jmp    jump_2e5c8


/*----------------------------------------------------------------*/
func_2f602:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ebx
		mov    data_1a40d8,%edx
		call   func_2edc9
		mov    data_1a40d8,%edx
		mov    %ebx,%eax
		call   func_2f113
		flds   data_1a4f18
		mov    $0x12a,%eax
		mov    data_15b9cc,%edx
		mov    data_1a4f1c,%ebx
		call   func___CHP
		fistpl (%esp)
		push   %edx
		mov    0x4(%esp),%ecx
		mov    $0xf,%edx
		add    $0xf,%ecx
		add    %ebx,%edx
		add    %ebx,%ecx
		mov    $0x139,%ebx
		call   func_1843d
		mov    data_1a40d8,%edi
		cmp    $0x3,%edi
		jge    jump_2f693
		imul   $0x15e,%edi,%ebx
		mov    data_1a40d8,%ax
		shl    $0x5,%eax
		mov    $0x84,%edx
		add    $0x1f,%eax
		mov    data_15b9cc,%ecx
		cwtl
		add    $data_76336,%ebx
		call   func_2b240
	jump_2f693:
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x4,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f6af:
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		shl    $0x4,%eax
		add    %eax,%edx
		shl    $0x3,%edx
		xor    %eax,%eax
		mov    data_19ac35(%edx),%al
		inc    %eax
		cmp    $0x3,%eax
		je     jump_2f6fa
		cmp    $0x4,%eax
		je     jump_2f6fa
		cmp    $0x5,%eax
		je     jump_2f6fa
		cmp    $0x6,%eax
		je     jump_2f6fa
		cmp    $0xa,%eax
		je     jump_2f6fa
		cmp    $0x12,%eax
		je     jump_2f6fa
		cmp    $0x21,%eax
		je     jump_2f6fa
		cmp    $0x34,%eax
		je     jump_2f6fa
		cmp    $0x35,%eax
		je     jump_2f6fa
		cmp    $0x47,%eax
		je     jump_2f6fa
		cmp    $0x48,%eax
		jne    jump_2f6fe
	jump_2f6fa:
		xor    %eax,%eax
		pop    %edx
		ret
	jump_2f6fe:
		cmpb   $0x48,data_19ac33(%edx)
		je     jump_2f6fa
		mov    $0x1,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_2f70e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x40(%eax),%dl
		mov    0x11(%eax),%bl
		mov    %dx,0x44(%eax)
		mov    %ebx,%edx
		shl    $0x2,%edx
		sub    %ebx,%edx
		mov    data_70830(%edx),%dl
		xor    %dh,%dh
		test   %dx,%dx
		je     jump_2f738
		cmp    $0x6,%dx
		jne    jump_2f742
	jump_2f738:
		mov    0x44(%eax),%dx
		add    %edx,%edx
		mov    %dx,0x44(%eax)
	jump_2f742:
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    data_537d8(,%edx,8),%dx
		mov    %dx,0x46(%eax)
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x11(%eax),%dl
		mov    0x42(%eax),%bl
		mov    data_537dc(,%edx,8),%dx
		add    %edx,%ebx
		mov    %bx,0x54(%eax)
		cmp    $0x3c,%bx
		jge    jump_2f777
		movw   $0x3c,0x54(%eax)
	jump_2f777:
		xor    %edx,%edx
		mov    0x11(%eax),%dl
		mov    data_537da(,%edx,8),%dl
		mov    %dl,0x59(%eax)
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_2f789:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4c,%esp
		mov    %eax,%ebp
		mov    %edx,0x28(%esp)
		mov    %ebx,0x2c(%esp)
		movb   $0x1,0x48(%esp)
		mov    %ebp,%eax
		call   func_2f6af
		test   %eax,%eax
		jne    jump_2f7b4
		mov    $0xffffffff,%edx
		jmp    jump_30515
	jump_2f7b4:
		mov    %ebp,%eax
		call   func_2f5b0
		mov    %eax,data_1a40d4
		mov    (%edx),%eax
		mov    $data_172224,%edx
		mov    %eax,data_1a40e0
		mov    $data_52054,%eax
		call   func_2e392
		cmp    $0xffffffff,%eax
		jne    jump_2f7f4
		mov    $data_5205b,%eax
		call   w_puts
		call   w_dos_getch
		mov    $data_5206e,%eax
		call   func_18fd0
	jump_2f7f4:
		mov    data_1a00c8,%dx
		cmp    $0x6,%dx
		jae    jump_2f80d
		movl   $0x42f60000,data_1a4f18
		jmp    jump_2f82c
	jump_2f80d:
		xor    %eax,%eax
		mov    %dx,%ax
		mov    %eax,0x44(%esp)
		fildl  0x44(%esp)
		fdivs  data_52088
		fdivrs data_5208c
		fstps  data_1a4f18
	jump_2f82c:
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x12a,%eax
		mov    data_15b9cc,%ebx
		mov    data_1a4f1c,%esi
		call   func___CHP
		fistpl 0x44(%esp)
		push   %ebx
		mov    0x48(%esp),%ecx
		add    %esi,%edx
		add    $0xf,%ecx
		mov    $0x139,%ebx
		add    %esi,%ecx
		call   func_1843d
		mov    %ebp,%eax
		call   func_2f435
		mov    %eax,%edx
		mov    %eax,data_1a40d8
		mov    %ebp,%eax
		call   func_2edc9
		mov    data_1a40d8,%edx
		mov    %ebp,%eax
		call   func_2f113
		flds   data_1a4f18
		mov    data_15b9cc,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		fistpl 0x44(%esp)
		mov    0x44(%esp),%ecx
		mov    data_1a4f1c,%ebx
		add    $0xf,%ecx
		push   %eax
		add    %edx,%ecx
		mov    $0xf,%edx
		mov    $0x12a,%eax
		add    %ebx,%edx
		mov    $0x139,%ebx
		call   func_1843d
		cmpl   $0x3,data_1a40d8
		jge    jump_2f901
		imul   $0x15e,data_1a40d8,%ebx
		mov    data_1a40d8,%ax
		shl    $0x5,%eax
		mov    $0x84,%edx
		add    $0x1f,%eax
		mov    data_15b9cc,%ecx
		cwtl
		add    $data_76336,%ebx
		call   func_2b240
	jump_2f901:
		mov    $data_172224,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		xor    %edx,%edx
		mov    game_cfg_sound,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    $0x13e,%edi
		add    %edx,%eax
		mov    $0x1,%edx
		add    %eax,%eax
		mov    %edx,%ebx
		xor    %esi,%esi
		call   func_394d1
		call   func_19ba9
	jump_2f939:
		mov    $0x4,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x94,%ecx
		mov    $data_172224,%eax
		lea    (%esi,%edx,1),%ebx
		mov    data_15b9cc,%edx
		call   func_37f18
		mov    $0x4,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x94,%ecx
		lea    (%edi,%edx,1),%ebx
		mov    data_15b9cc,%edx
		mov    $data_183394,%eax
		add    %esi,%edx
		sub    $0x2,%edi
		call   func_37f18
		mov    data_15b9cc,%eax
		add    $0x2,%esi
		call   func_2b470
		cmp    $0xa0,%esi
		jle    jump_2f939
		call   func_19b67
	jump_2f9a4:
		mov    %ebp,%eax
		mov    $data_172224,%edx
		call   func_2f5b0
		mov    %eax,data_1a40d4
		mov    $data_52054,%eax
		call   func_2e392
		cmp    $0xffffffff,%eax
		jne    jump_2f9dd
		mov    $data_5205b,%eax
		call   w_puts
		call   w_dos_getch
		mov    $data_5206e,%eax
		call   func_18fd0
	jump_2f9dd:
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    data_1a00c8,%bx
		cmp    $0x6,%bx
		jae    jump_2fa06
		movl   $0x42f60000,data_1a4f18
		jmp    jump_2fa25
	jump_2fa06:
		xor    %eax,%eax
		mov    %bx,%ax
		mov    %eax,0x44(%esp)
		fildl  0x44(%esp)
		fdivs  data_52088
		fdivrs data_5208c
		fstps  data_1a4f18
	jump_2fa25:
		flds   data_1a4f18
		mov    data_15b9cc,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		fistpl 0x44(%esp)
		mov    0x44(%esp),%ecx
		mov    data_1a4f1c,%ebx
		add    $0xf,%ecx
		push   %eax
		add    %edx,%ecx
		mov    $0xf,%edx
		mov    $0x12a,%eax
		add    %ebx,%edx
		mov    $0x139,%ebx
		call   func_1843d
		mov    %ebp,%eax
		call   func_2f435
		mov    %eax,%edx
		mov    %eax,data_1a40d8
		mov    %ebp,%eax
		call   func_2edc9
		mov    data_1a40d8,%edx
		mov    %ebp,%eax
		mov    $0x139,%ebx
		call   func_2f113
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x12a,%eax
		mov    data_15b9cc,%ecx
		call   func___CHP
		fistpl 0x44(%esp)
		push   %ecx
		mov    0x48(%esp),%ecx
		mov    data_1a4f1c,%esi
		add    $0xf,%ecx
		add    %esi,%edx
		add    %esi,%ecx
		call   func_1843d
		mov    data_1a40d8,%eax
		cmp    $0x3,%eax
		jge    jump_2faf7
		imul   $0x15e,%eax,%ebx
		mov    data_1a40d8,%ax
		mov    $0x84,%edx
		shl    $0x5,%eax
		mov    data_15b9cc,%ecx
		add    $0x1f,%eax
		add    $data_76336,%ebx
		cwtl
		call   func_2b240
	jump_2faf7:
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    %ebp,%eax
		shl    $0x4,%eax
		add    %ebp,%eax
		shl    $0x3,%eax
		mov    %eax,0x3c(%esp)
		mov    $data_19ac24,%eax
		mov    0x3c(%esp),%ebx
		add    %ebx,%eax
		mov    %eax,0x40(%esp)
	jump_2fb2d:
		xor    %esi,%esi
	jump_2fb2f:
		mov    $0x1d,%edi
		xor    %ebx,%ebx
	jump_2fb36:
		imul   $0x1e,%ebx,%eax
		mov    data_7cf24,%ecx
		cmp    %ecx,%edi
		jg     jump_2fb98
		add    $0x3a,%eax
		cmp    %ecx,%eax
		jl     jump_2fb98
		imul   $0x1f,%esi,%eax
		mov    data_7cf28,%ecx
		lea    0x2(%eax),%edx
		cmp    %ecx,%edx
		jg     jump_2fb98
		add    $0x20,%eax
		cmp    %ecx,%eax
		jl     jump_2fb98
		cmpl   $0x1,data_7cf20
		jne    jump_2fb98
		mov    $data_78719,%eax
		shl    $0x2,%esi
		mov    $0x14,%ecx
		add    %ebx,%esi
		xor    %edx,%edx
		mov    %esi,data_1a40dc
		call   func___STOSB
		mov    $0x14,%esi
		mov    %ebp,%eax
		xor    %dl,%dl
		call   func_2f602
		mov    %dl,0x48(%esp)
	jump_2fb98:
		inc    %ebx
		add    $0x1e,%edi
		cmp    $0x4,%ebx
		jl     jump_2fb36
		inc    %esi
		cmp    $0x4,%esi
		jl     jump_2fb2f
		mov    data_7cf24,%esi
		cmp    $0x4,%esi
		jl     jump_2fd67
		cmp    $0x18,%esi
		jg     jump_2fd67
		mov    data_7cf28,%eax
		cmp    $0x9,%eax
		jl     jump_2fd67
		cmp    $0x8f,%eax
		jg     jump_2fd67
		lea    -0x9(%eax),%edx
		mov    $0x11,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a40d8,%ecx
		xor    %edi,%edi
		mov    %eax,%esi
		mov    data_1a40dc,%eax
		shl    $0x5,%ecx
		add    %eax,%eax
		xor    %edx,%edx
		add    %eax,%ecx
	jump_2fbff:
		xor    %ebx,%ebx
		mov    data_76d1c(%ecx),%bx
		dec    %ebx
		mov    %ebx,%eax
		shl    $0x3,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x44(%esp)
		mov    0x44(%esp),%ebx
		mov    %edi,%eax
		add    %ebx,%eax
		mov    data_768ae(%eax),%bl
		inc    %edi
		test   %bl,%bl
		je     jump_2fc2a
		inc    %edx
	jump_2fc2a:
		cmp    %esi,%edx
		jg     jump_2fc33
		cmp    $0x14,%edi
		jl     jump_2fbff
	jump_2fc33:
		mov    data_78718(%edi),%bh
		dec    %edi
		test   %bh,%bh
		jbe    jump_2fd67
		cmp    $0x14,%edi
		jge    jump_2fd67
		cmp    $0x1,%bh
		jne    jump_2fcc4
		cmp    $0x10,%edi
		jne    jump_2fcc4
		mov    data_1a40d8,%edx
		mov    data_1a40dc,%eax
		shl    $0x5,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    data_76d1c(%eax),%ax
		and    $0xffff,%eax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x3,%eax
		add    %edx,%eax
		mov    data_768ae(%edi,%eax,2),%dl
		cmp    %bh,%dl
		jb     jump_2fd10
		imul   $0x11,%esi,%eax
		add    $0x9,%eax
		cmp    %bh,%dl
		jbe    jump_2fca3
		cmp    $0x2,%dl
		je     jump_2fcbd
		jmp    jump_2fd10
	jump_2fca3:
		mov    $data_75fda,%ebx
	jump_2fca8:
		mov    data_15b9cc,%ecx
		movswl %ax,%edx
		mov    $0x4,%eax
		call   func_2b240
		jmp    jump_2fd10
	jump_2fcbd:
		mov    $data_76188,%ebx
		jmp    jump_2fca8
	jump_2fcc4:
		imul   $0x11,%esi,%eax
		mov    $data_75e2c,%ebx
		add    $0x9,%eax
		mov    data_15b9cc,%ecx
		movswl %ax,%edx
		mov    $0x4,%eax
		call   func_2b240
		imul   $0x11,%esi,%edx
		mov    $0x14,%eax
		call   func_18136
		xor    %ebx,%ebx
		mov    $0x8,%eax
		mov    data_78719(%edi),%bl
		add    $0xf,%edx
		call   func_1822d
		mov    $0x1,%eax
		call   func_18136
	jump_2fd10:
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		imul   $0x11,%esi,%edx
	jump_2fd27:
		lea    0x18(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x18(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%ecx
		cmp    $0x4,%ecx
		jl     jump_2fd60
		cmp    $0x18,%ecx
		jg     jump_2fd60
		mov    data_7cf28,%edi
		lea    0x9(%edx),%eax
		cmp    %edi,%eax
		jg     jump_2fd60
		lea    0x1a(%edx),%eax
		cmp    %edi,%eax
		jge    jump_2fd27
	jump_2fd60:
		mov    %ebp,%eax
		call   func_2f602
	jump_2fd67:
		cmpb   $0x1,0x48(%esp)
		je     jump_2fd7a
		mov    %ebp,%eax
		call   func_2f602
		movb   $0x1,0x48(%esp)
	jump_2fd7a:
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		je     jump_2fd8b
		jne    jump_30482
	jump_2fd8b:
		mov    data_7cf24,%edi
		cmp    $0xab,%edi
		jl     jump_2fe12
		cmp    $0x12b,%edi
		jg     jump_2fe12
		mov    data_7cf28,%edx
		cmp    $0x8,%edx
		jl     jump_2fe12
		cmp    $0x97,%edx
		jg     jump_2fe12
		sub    $0x8,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a40e0,%esi
		add    %eax,%esi
		mov    %esi,%eax
		call   func_2f6af
		test   %eax,%eax
		je     jump_2fe01
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		mov    %esi,%ebp
		cmp    %eax,%esi
		jl     jump_2fdeb
		lea    -0x1(%eax),%ebp
	jump_2fdeb:
		mov    $data_78719,%eax
		mov    $0x14,%ecx
		xor    %edx,%edx
		call   func___STOSB
		jmp    jump_2f9a4
	jump_2fe01:
		mov    $data_52073,%eax
		call   func_34fbe
		mov    %ebp,%eax
		call   func_2f602
	jump_2fe12:
		mov    data_7cf24,%ecx
		cmp    $0x12a,%ecx
		jl     jump_2fffc
		cmp    $0x139,%ecx
		jg     jump_2fffc
		mov    $0xf,%eax
		mov    data_1a4f1c,%edi
		add    %edi,%eax
		mov    %eax,0x34(%esp)
		mov    0x34(%esp),%edx
		cmp    data_7cf28,%edx
		jg     jump_2fffc
		fildl  0x34(%esp)
		fadds  data_1a4f18
		fildl  data_7cf28
		fcompp
		fnstsw %ax
		sahf
		ja     jump_2fffc
		mov    data_7cf28,%eax
		lea    (%ecx,%ecx,1),%edx
		mov    %eax,0x30(%esp)
		mov    %edx,%eax
		call   func_19c3b
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_2fe93:
		mov    data_7cf20,%eax
		cmp    $0x1,%eax
		je     jump_2fea3
		jne    jump_2ffe8
	jump_2fea3:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x30(%esp),%eax
		mov    data_7cf28,%ebx
		cmp    %ebx,%eax
		jge    jump_2ff89
		mov    0x30(%esp),%esi
		mov    %ebx,%eax
		mov    data_1a4f1c,%edi
		sub    %esi,%eax
		add    %eax,%edi
		mov    %edi,data_1a4f1c
		lea    (%esi,%eax,1),%edx
		fildl  data_1a4f1c
		fadds  data_1a4f18
		mov    %edx,0x30(%esp)
		fsts   0x24(%esp)
		fcomps data_5208c
		fnstsw %ax
		sahf
		jbe    jump_2ff2e
		fildl  0x30(%esp)
		flds   0x24(%esp)
		fadds  data_52090
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x30(%esp)
		flds   data_5208c
		fsubs  data_1a4f18
		call   func___CHP
		fistpl data_1a4f1c
	jump_2ff2e:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x44(%esp)
		mov    data_1a00c8,%cx
		mov    0x44(%esp),%ebx
		call   func_2ec22
		mov    data_1a00c8,%cx
		mov    %eax,%edx
		mov    %eax,data_1a40e0
		cmp    $0x9,%cx
		jne    jump_2ff7d
		cmp    $0x4,%eax
		jne    jump_2ff7d
		movl   $0x3,data_1a40e0
	jump_2ff7d:
		mov    %ebp,%eax
		call   func_2f602
		jmp    jump_2fe93
	jump_2ff89:
		jle    jump_2fe93
		mov    data_1a4f1c,%edi
		sub    %ebx,%eax
		mov    0x30(%esp),%edx
		sub    %eax,%edi
		sub    %eax,%edx
		mov    %edi,data_1a4f1c
		mov    %edx,0x30(%esp)
		test   %edi,%edi
		jge    jump_2ffb5
		xor    %ecx,%ecx
		mov    %ecx,data_1a4f1c
	jump_2ffb5:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x44(%esp)
		mov    data_1a00c8,%cx
		mov    0x44(%esp),%ebx
		call   func_2ec22
		mov    %eax,data_1a40e0
		jmp    jump_2ff7d
	jump_2ffe8:
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		jmp    jump_30163
	jump_2fffc:
		mov    data_7cf24,%ebx
		cmp    $0x12a,%ebx
		jl     jump_30058
		cmp    $0x139,%ebx
		jg     jump_30058
		mov    data_7cf28,%esi
		cmp    $0x5,%esi
		jl     jump_30058
		cmp    $0xf,%esi
		jg     jump_30058
		mov    data_1a40e0,%esi
		test   %esi,%esi
		jle    jump_30035
		lea    -0x1(%esi),%edi
		mov    %edi,data_1a40e0
	jump_30035:
		mov    $0x7b,%eax
		xor    %ebx,%ebx
		mov    data_1a40e0,%edx
		mov    data_1a00c8,%bx
		call   func_320a4
		mov    %eax,data_1a4f1c
		jmp    jump_3015c
	jump_30058:
		mov    data_7cf24,%eax
		cmp    $0x12a,%eax
		jl     jump_300a1
		cmp    $0x139,%eax
		jg     jump_300a1
		mov    data_7cf28,%ebx
		cmp    $0x8a,%ebx
		jl     jump_300a1
		cmp    $0x93,%ebx
		jg     jump_300a1
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		mov    data_1a40e0,%ebx
		sub    $0x6,%eax
		cmp    %ebx,%eax
		jle    jump_30035
		lea    0x1(%ebx),%ecx
		mov    %ecx,data_1a40e0
		jmp    jump_30035
	jump_300a1:
		mov    data_7cf24,%esi
		cmp    $0x12a,%esi
		jl     jump_30163
		cmp    $0x139,%esi
		jg     jump_30163
		mov    data_7cf28,%eax
		cmp    $0xf,%eax
		jl     jump_30163
		cmp    $0x8a,%eax
		jg     jump_30163
		sub    $0xf,%eax
		mov    %eax,data_1a4f1c
		fildl  data_1a4f1c
		fadds  data_1a4f18
		fsts   0x38(%esp)
		fcomps data_5208c
		fnstsw %ax
		sahf
		jbe    jump_3012b
		fildl  0x30(%esp)
		flds   0x38(%esp)
		fadds  data_52090
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x30(%esp)
		flds   data_5208c
		fsubs  data_1a4f18
		call   func___CHP
		fistpl data_1a4f1c
	jump_3012b:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x44(%esp)
		mov    data_1a00c8,%cx
		mov    0x44(%esp),%ebx
		call   func_2ec22
		mov    %eax,data_1a40e0
	jump_3015c:
		mov    %ebp,%eax
		call   func_2f602
	jump_30163:
		mov    data_7cf24,%ecx
		cmp    $0x1f,%ecx
		jl     jump_301b7
		cmp    $0x34,%ecx
		jg     jump_301b7
		mov    data_7cf28,%edi
		cmp    $0x84,%edi
		jl     jump_301b7
		cmp    $0x90,%edi
		jg     jump_301b7
		cmpl   $0x3,data_1a40d8
		jge    jump_301b7
		mov    $data_78719,%eax
		mov    $0x14,%ecx
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %esi,data_1a40d8
	jump_301a6:
		call   func___STOSB
	jump_301ab:
		mov    %ebp,%eax
		call   func_2f602
		jmp    jump_3047d
	jump_301b7:
		mov    data_7cf24,%ebx
		cmp    $0x3f,%ebx
		jl     jump_301ff
		cmp    $0x54,%ebx
		jg     jump_301ff
		mov    data_7cf28,%esi
		cmp    $0x84,%esi
		jl     jump_301ff
		cmp    $0x90,%esi
		jg     jump_301ff
		cmpl   $0x3,data_1a40d8
		jge    jump_301ff
		mov    $0x1,%ecx
		mov    $data_78719,%eax
		xor    %edx,%edx
		mov    %ecx,data_1a40d8
		mov    $0x14,%ecx
		jmp    jump_301a6
	jump_301ff:
		mov    data_7cf24,%edx
		cmp    $0x5f,%edx
		jl     jump_3024a
		cmp    $0x74,%edx
		jg     jump_3024a
		mov    data_7cf28,%ecx
		cmp    $0x84,%ecx
		jl     jump_3024a
		cmp    $0x90,%ecx
		jg     jump_3024a
		cmpl   $0x3,data_1a40d8
		jge    jump_3024a
		mov    $0x2,%ebx
		mov    $data_78719,%eax
		mov    $0x14,%ecx
		xor    %edx,%edx
		mov    %ebx,data_1a40d8
		jmp    jump_301a6
	jump_3024a:
		mov    data_7cf24,%eax
		cmp    $0x7f,%eax
		jl     jump_3042e
		cmp    $0x94,%eax
		jg     jump_3042e
		mov    data_7cf28,%ebx
		cmp    $0x84,%ebx
		jl     jump_3042e
		cmp    $0x90,%ebx
		jg     jump_3042e
		mov    $0x7f,%eax
		mov    $0x84,%edx
		mov    $data_76750,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_1199e
		mov    data_1a40e4,%edx
		mov    %ebp,%eax
		call   func_2e979
		cmp    $0x1,%eax
		jne    jump_30420
		xor    %eax,%eax
		mov    game_cfg_sound,%al
		imul   $0xa,%eax,%eax
		mov    $0x2,%edx
		mov    $0x1,%ebx
		call   func_394d1
		mov    0x3c(%esp),%edx
		mov    data_1a40e4,%al
		mov    %al,data_19ac35(%edx)
		mov    data_1a40d4,%edx
		mov    %edx,%eax
		shl    $0x6,%eax
		sub    %edx,%eax
		mov    data_1a40e4,%edx
		add    %edx,%edx
		mov    data_76efc(%edx,%eax,2),%ax
		mov    0x3c(%esp),%edx
		mov    %ax,data_19ac85(%edx)
		cmpb   $0x0,data_19ac7f(%edx)
		je     jump_3034c
		mov    0x3c(%esp),%edx
		xor    %eax,%eax
		mov    data_19ac7f(%edx),%al
		dec    %eax
		call   func_376d8
		test   %eax,%eax
		jne    jump_3033e
		call   func_34261
	jump_3033e:
		mov    0x40(%esp),%eax
		mov    $0x1,%edx
		call   func_37e5e
	jump_3034c:
		mov    0x3c(%esp),%eax
		cmpb   $0x0,data_19ac7e(%eax)
		je     jump_30382
		mov    0x3c(%esp),%edx
		xor    %eax,%eax
		mov    data_19ac7e(%edx),%al
		dec    %eax
		call   func_376d8
		test   %eax,%eax
		jne    jump_30374
		call   func_34261
	jump_30374:
		mov    0x40(%esp),%eax
		mov    $0x2,%edx
		call   func_37e5e
	jump_30382:
		mov    0x3c(%esp),%eax
		cmpb   $0x0,data_19ac81(%eax)
		je     jump_303b8
		mov    0x3c(%esp),%edx
		xor    %eax,%eax
		mov    data_19ac81(%edx),%al
		dec    %eax
		call   func_376d8
		test   %eax,%eax
		jne    jump_303aa
		call   func_34261
	jump_303aa:
		mov    0x40(%esp),%eax
		mov    $0x3,%edx
		call   func_37e5e
	jump_303b8:
		mov    0x3c(%esp),%eax
		cmpb   $0x0,data_19ac82(%eax)
		je     jump_303ec
		mov    0x3c(%esp),%edx
		xor    %eax,%eax
		mov    data_19ac82(%edx),%al
		dec    %eax
		call   func_376d8
		test   %eax,%eax
		jne    jump_303e0
		call   func_34261
	jump_303e0:
		mov    0x3c(%esp),%eax
		xor    %cl,%cl
		mov    %cl,data_19ac82(%eax)
	jump_303ec:
		mov    0x3c(%esp),%eax
		cmpb   $0x0,data_19ac83(%eax)
		je     jump_30420
		mov    0x3c(%esp),%edx
		xor    %eax,%eax
		mov    data_19ac83(%edx),%al
		dec    %eax
		call   func_376d8
		test   %eax,%eax
		jne    jump_30414
		call   func_34261
	jump_30414:
		mov    0x3c(%esp),%eax
		xor    %dl,%dl
		mov    %dl,data_19ac83(%eax)
	jump_30420:
		mov    0x40(%esp),%eax
		call   func_2f70e
		jmp    jump_301ab
	jump_3042e:
		mov    data_7cf24,%esi
		test   %esi,%esi
		jl     jump_3047d
		cmp    $0x13f,%esi
		jg     jump_3047d
		mov    data_7cf28,%eax
		cmp    $0x94,%eax
		jl     jump_3047d
		cmp    $0xa3,%eax
		jg     jump_3047d
		mov    $data_183394,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		mov    0x28(%esp),%edx
		mov    data_1a40e0,%eax
		mov    %eax,(%edx)
		mov    0x2c(%esp),%eax
		mov    $0x1,%edx
		mov    %ebp,(%eax)
		jmp    jump_30515
	jump_3047d:
		call   func_3197d
	jump_30482:
		lea    0xc(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%edi
		cmp    $0xfc,%edi
		jl     jump_2fb2d
		cmp    $0x135,%edi
		jg     jump_2fb2d
		mov    data_7cf28,%edx
		cmp    $0xbb,%edx
		jl     jump_2fb2d
		cmp    $0xc5,%edx
		jg     jump_2fb2d
		cmpl   $0x1,data_7cf20
		jne    jump_2fb2d
		mov    $0xfc,%eax
		mov    $0xbb,%edx
		mov    $data_7c4d2,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		xor    %edx,%edx
	jump_30515:
		mov    %edx,%eax
		add    $0x4c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
.data
data_3051f:
		.fill   0xf
data_3052e:
		.string ".\\cstldata\\"
		.fill   0x58
data_30592:
		.fill   0xf
.text


/*----------------------------------------------------------------*/
func_305a1:
/*----------------------------------------------------------------*/
		push   %edx
		xor    %eax,%eax
	jump_305a4:
		add    $0xd,%eax
		xor    %dl,%dl
		mov    %dl,data_1a410f(%eax)
		cmp    $0xcf3,%eax
		jne    jump_305a4
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_305b8:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    %ebx,%esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		jmp    jump_305cd
	jump_305c6:
		inc    %ebx
		mov    (%eax),%cl
		inc    %eax
		mov    %cl,(%edx)
		inc    %edx
	jump_305cd:
		movswl %si,%ecx
		cmp    %ecx,%ebx
		jl     jump_305c6
		pop    %esi
		pop    %ecx
		ret
	jump_3067f:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_30685:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		push   %eax
		push   %edx
		mov    %ebx,%ebp
		mov    %cx,0x20(%esp)
		lea    0x8(%esp),%edi
		mov    $data_3051f,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x8(%esp),%edi
		mov    %ebx,%esi
		call   func_19ba9
		push   %edi
	jump_306af:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_306cb
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_306af
	jump_306cb:
		pop    %edi
		mov    -0x2(%esp),%esi
		mov    0x2(%esp),%eax
		mov    0x1e(%esp),%ebx
		mov    data_15b9cc,%edx
		mov    %ebp,%edi
		push   %edx
		sar    $0x10,%esi
		sar    $0x10,%eax
		sar    $0x10,%ebx
		lea    0x8(%esi),%ecx
		mov    %esi,%edx
		add    %eax,%ebx
		mov    %eax,0x1c(%esp)
		call   func_1851e
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		movswl %cx,%eax
		movb   $0x5f,(%eax,%ebp,1)
		lea    0x2(%esi),%edx
		movb   $0x0,0x1(%eax,%ebp,1)
		mov    0x18(%esp),%eax
		mov    %ebp,%ebx
		add    $0x2,%eax
		mov    %cx,0x1c(%esp)
		call   func_18274
	jump_30726:
		call   func_3c16c
		test   %eax,%eax
		je     jump_30726
		call   w_dos_getch
		mov    %ax,0x24(%esp)
		cmp    $0x30,%ax
		jl     jump_30745
		cmp    $0x7a,%ax
		jle    jump_30761
	jump_30745:
		mov    0x24(%esp),%edx
		cmp    $0x2e,%dx
		je     jump_30761
		cmp    $0x2a,%dx
		je     jump_30761
		cmp    $0x3f,%dx
		je     jump_30761
		cmp    $0x20,%dx
		jne    jump_307d0
	jump_30761:
		mov    0x1a(%esp),%esi
		mov    0x24(%esp),%dl
		sar    $0x10,%esi
		mov    0x1e(%esp),%ebx
		mov    %dl,(%esi,%ebp,1)
		sar    $0x10,%ebx
		mov    data_15b9cc,%eax
		mov    -0x2(%esp),%edx
		push   %eax
		mov    0x6(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		lea    0x8(%edx),%ecx
		add    %eax,%ebx
		call   func_1851e
		mov    0x36(%esp),%eax
		sar    $0x10,%eax
		dec    %eax
		cmp    %eax,%esi
		jge    jump_307a5
		incw   0x1c(%esp)
	jump_307a5:
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		mov    -0x2(%esp),%edx
		movb   $0x5f,(%eax,%ebp,1)
		mov    %ebp,%ebx
		movb   $0x0,0x1(%eax,%ebp,1)
		mov    0x2(%esp),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x2,%edx
		add    $0x2,%eax
		call   func_18274
	jump_307d0:
		cmpl   $0x0,data_1a0164
		je     jump_307f8
		mov    0x1a(%esp),%eax
		sar    $0x10,%eax
		movb   $0x0,(%eax,%ebp,1)
	jump_307e4:
		cmpl   $0x0,data_1a0164
		je     jump_308a5
		call   func_2b206
		jmp    jump_307e4
	jump_307f8:
		cmpw   $0x8,0x24(%esp)
		jne    jump_30858
		mov    0x1c(%esp),%edx
		test   %dx,%dx
		je     jump_30858
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x1c(%esp)
		mov    0x1a(%esp),%eax
		mov    -0x2(%esp),%edi
		sar    $0x10,%eax
		mov    0x2(%esp),%esi
		movb   $0x5f,(%eax,%ebp,1)
		sar    $0x10,%edi
		movb   $0x0,0x1(%eax,%ebp,1)
		sar    $0x10,%esi
		mov    data_15b9cc,%ebx
		lea    0x8(%edi),%ecx
		push   %ebx
		mov    0x22(%esp),%ebx
		mov    %edi,%edx
		sar    $0x10,%ebx
		mov    %esi,%eax
		add    %esi,%ebx
		call   func_1851e
		lea    0x2(%edi),%edx
		lea    0x2(%esi),%eax
		mov    %ebp,%ebx
		call   func_18274
	jump_30858:
		cmpl   $0x0,data_1a00f8
		je     jump_30726
		lea    0x8(%esp),%esi
		mov    %ebp,%edi
		push   %edi
	jump_3086c:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_30888
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_3086c
	jump_30888:
		pop    %edi
		call   func_19b67
	jump_3088e:
		cmpl   $0x0,data_1a00f8
		je     jump_3089e
		call   func_2b206
		jmp    jump_3088e
	jump_3089e:
		mov    $0xffffffff,%eax
		jmp    jump_308af
	jump_308a5:
		call   func_19b67
		mov    $0x1,%eax
	jump_308af:
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_308b8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x90,%esp
		mov    %eax,%edx
		mov    $0x19,%ecx
		mov    %esp,%edi
		mov    $data_3052e,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    %esp,%edi
		mov    %bx,data_1a4116
		mov    %bx,data_1a4118
		mov    %bx,data_1a411a
		mov    %edx,%esi
		call   func_305a1
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_308fc:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_30918
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_308fc
	jump_30918:
		pop    %edi
		mov    %esp,%eax
		lea    0x64(%esp),%ebx
		xor    %edx,%edx
		call   w_dos_findfirst
	jump_30926:
		test   %eax,%eax
		jne    jump_309bb
		mov    data_1a4114,%ecx
		sar    $0x10,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%edi
		add    %ecx,%eax
		lea    0x82(%esp),%esi
		add    %eax,%edi
		push   %edi
	jump_30952:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_3096e
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_30952
	jump_3096e:
		pop    %edi
		mov    data_1a4116,%di
		mov    data_1a4118,%ax
		mov    data_1a411a,%dx
		inc    %edi
		inc    %eax
		inc    %edx
		mov    %di,data_1a4116
		mov    %ax,data_1a4118
		lea    0x64(%esp),%eax
		mov    %dx,data_1a411a
		call   w_dos_findnext
		mov    data_1a4116,%ecx
		sar    $0x10,%ecx
		sub    $0xa,%ecx
		cmp    $0xff,%ecx
		jne    jump_30926
	jump_309bb:
		mov    $data_52094,%eax
		lea    0x64(%esp),%ebx
		xor    %edx,%edx
		call   w_dos_findfirst
		mov    $0x5b,%dl
		mov    $0x5d,%dh
	jump_309cf:
		test   %eax,%eax
		jne    jump_30ab5
		cmpb   $0x10,0x79(%esp)
		jne    jump_30aa7
		mov    data_1a4114,%ecx
		sar    $0x10,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%edi
		add    %ecx,%eax
		add    %eax,%edi
		lea    0x82(%esp),%esi
		inc    %edi
		push   %edi
	jump_30a07:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_30a23
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_30a07
	jump_30a23:
		pop    %edi
		mov    data_1a4114,%ecx
		sar    $0x10,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%edi
		add    %ecx,%eax
		add    %eax,%edi
		mov    %dl,data_1a411c(%eax)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%esi
		mov    data_1a4114,%ecx
		sar    $0x10,%ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		shl    $0x2,%eax
		add    %ecx,%eax
		mov    data_1a4118,%cx
		xor    %bl,%bl
		inc    %ecx
		mov    %dh,data_1a411c(%esi,%eax,1)
		mov    %cx,data_1a4118
		mov    %bl,data_1a411d(%esi,%eax,1)
		mov    data_1a4116,%eax
		mov    data_1a4116,%bx
		sar    $0x10,%eax
		inc    %ebx
		sub    $0xa,%eax
		mov    %bx,data_1a4116
		cmp    $0xff,%eax
		je     jump_30ab5
	jump_30aa7:
		lea    0x64(%esp),%eax
		call   w_dos_findnext
		jmp    jump_309cf
	jump_30ab5:
		call   func_19ba9
		mov    $0x3e,%eax
		mov    data_15b9cc,%edx
		mov    $0xa6,%ebx
		push   %edx
		mov    $0x94,%ecx
		mov    $0x1a,%edx
		call   func_1843d
		mov    $0x9b,%eax
		mov    data_15b9cc,%ebx
		mov    $0x32,%edx
		push   %ebx
		mov    $0x46,%ecx
		mov    $0xa4,%ebx
		call   func_1843d
		mov    $0x9b,%eax
		mov    data_15b9cc,%ecx
		mov    $0x47,%edx
		push   %ecx
		mov    $0xa4,%ebx
		mov    $0x5b,%ecx
		call   func_1843d
		mov    $0x42,%eax
		mov    data_15b9cc,%esi
		mov    $0x3a,%edx
		push   %esi
		mov    $0x88,%ebx
		mov    $0x8c,%ecx
		call   func_1851e
		mov    $0x42,%eax
		mov    $0x24,%edx
		mov    data_15b9cc,%edi
		mov    $0x94,%ebx
		push   %edi
		mov    $0x2c,%ecx
		mov    $data_1a411c,%esi
		call   func_1851e
		mov    $0x44,%eax
		mov    $0x26,%edx
		mov    $data_78735,%ebx
		mov    $0x3c,%ecx
		call   func_18274
	jump_30b78:
		mov    $0x44,%eax
		mov    %ecx,%edx
		mov    %esi,%ebx
		call   func_18274
		add    $0x8,%ecx
		add    $0xd,%esi
		cmp    $0x8c,%ecx
		jne    jump_30b78
		xor    %esi,%esi
		call   func_19b67
		mov    %si,data_1a4116
		add    $0x90,%esp
		jmp    jump_3067f


/*----------------------------------------------------------------*/
func_30bad:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%ebp
		lea    0x8(%esp),%edi
		mov    $data_30592,%esi
		mov    $0xf,%ebx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   func_19ba9
		lea    0x8(%esp),%eax
		mov    $0x19,%ecx
		call   func_305b8
		xor    %eax,%eax
		mov    $0xa6,%ebx
		call   func_20f7a
		mov    data_15b9cc,%edx
		mov    $0x3e,%eax
		push   %edx
		mov    $0x10,%edx
		mov    $data_78735,%edi
		call   func_1843d
		mov    $0x44,%eax
		mov    $0x12,%edx
		mov    0x4(%esp),%ebx
		lea    0x8(%esp),%esi
		call   func_18274
		call   func_19b67
		push   %edi
	jump_30c23:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_30c3f
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_30c23
	jump_30c3f:
		pop    %edi
		mov    (%esp),%eax
		call   func_308b8
		call   func_3197d
	jump_30c4d:
		lea    0x18(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x18(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf20,%ebx
		cmp    $0x1,%ebx
		je     jump_30c7a
		cmp    $0x2,%ebx
		je     jump_30c7a
		xor    %ah,%ah
		mov    %ah,data_78785
	jump_30c7a:
		cmpl   $0x2,data_7cf20
		jne    jump_30c8c
		cmpb   $0x0,data_78785
		je     jump_30c95
	jump_30c8c:
		cmpl   $0x0,data_1a00f8
		je     jump_30cba
	jump_30c95:
		mov    data_1a00f8,%ebx
	jump_30c9b:
		test   %ebx,%ebx
		jne    jump_30c9b
		mov    $0x1,%eax
		call   func_20f7a
		mov    data_15b9cc,%eax
		call   func_2b44f
		xor    %eax,%eax
		jmp    jump_31149
	jump_30cba:
		mov    data_7cf24,%eax
		cmp    $0x42,%eax
		jl     jump_30d78
		cmp    $0x88,%eax
		jg     jump_30d78
		mov    data_7cf28,%ebx
		cmp    $0x24,%ebx
		jl     jump_30d78
		cmp    $0x2a,%ebx
		jg     jump_30d78
		cmpl   $0x1,data_7cf20
		jne    jump_30d78
		cmpb   $0x0,data_78785
		jne    jump_30d78
		push   $0xd
		mov    $0x42,%eax
		mov    $0x24,%edx
		xor    %bl,%bl
		mov    $0x52,%ecx
		mov    %bl,0xc(%esp)
		lea    0xc(%esp),%ebx
		call   func_30685
		cmp    $0x1,%ax
		jne    jump_30d78
		mov    $data_52098,%esi
		mov    %ebp,%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		lea    0x8(%esp),%esi
		mov    %ebp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_30d40:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_30d5c
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_30d40
	jump_30d5c:
		pop    %edi
		movb   $0x1,data_78785
	jump_30d64:
		mov    $0x1,%eax
		call   func_20f7a
		mov    $0x1,%eax
		jmp    jump_31149
	jump_30d78:
		mov    data_7cf24,%edi
		cmp    $0x9b,%edi
		jl     jump_30e67
		cmp    $0xa4,%edi
		jg     jump_30e67
		mov    data_7cf28,%edx
		cmp    $0x32,%edx
		jl     jump_30e67
		cmp    $0x46,%edx
		jg     jump_30e67
		cmpl   $0x1,data_7cf20
		jne    jump_30e67
		cmpb   $0x0,data_78785
		jne    jump_30e67
		cmpw   $0x0,data_1a4116
		je     jump_30e67
		call   func_19ba9
		mov    data_1a4114,%eax
		sar    $0x10,%eax
		sub    $0x5,%eax
		test   %eax,%eax
		jl     jump_30e03
		mov    data_1a4116,%bx
		mov    $0x1,%cl
		sub    $0x5,%ebx
		mov    %cl,data_78785
		mov    %bx,data_1a4116
	jump_30e03:
		mov    $0x42,%eax
		mov    data_15b9cc,%esi
		mov    $0x3a,%edx
		push   %esi
		mov    $0x88,%ebx
		mov    $0x8c,%ecx
		call   func_1851e
		mov    $0x9b,%eax
		mov    data_15b9cc,%edi
		mov    $0x32,%edx
		push   %edi
		mov    $0xa4,%ebx
		mov    $0x46,%ecx
		call   func_1851e
		mov    $0x32,%edx
		mov    data_15b9cc,%eax
		mov    $0xa4,%ebx
		push   %eax
		mov    $0x46,%ecx
		mov    $0x9b,%eax
		call   func_1843d
		call   func_19b67
	jump_30e67:
		mov    data_7cf24,%edx
		cmp    $0x9b,%edx
		jl     jump_30f8c
		cmp    $0xa4,%edx
		jg     jump_30f8c
		mov    data_7cf28,%ecx
		cmp    $0x46,%ecx
		jl     jump_30f8c
		cmp    $0x5a,%ecx
		jg     jump_30f8c
		cmpl   $0x1,data_7cf20
		jne    jump_30f8c
		cmpb   $0x0,data_78785
		jne    jump_30f8c
		call   func_19ba9
		mov    data_1a4114,%eax
		mov    data_1a4116,%edx
		sar    $0x10,%eax
		sar    $0x10,%edx
		add    $0x5,%eax
		cmp    %edx,%eax
		jge    jump_30eec
		mov    data_1a4116,%cx
		mov    $0x1,%al
		add    $0x5,%ecx
		mov    %al,data_78785
		mov    %cx,data_1a4116
	jump_30eec:
		mov    $0x3a,%edx
		mov    data_15b9cc,%eax
		mov    $0x88,%ebx
		push   %eax
		mov    $0x8c,%ecx
		mov    $0x42,%eax
		call   func_1851e
		mov    $0x9b,%eax
		mov    $0xa4,%ebx
		mov    data_15b9cc,%edx
		mov    $0x5b,%ecx
		push   %edx
		mov    $0x47,%edx
		xor    %edi,%edi
		call   func_1851e
	jump_30f2d:
		mov    data_1a4114,%eax
		movswl %di,%ecx
		sar    $0x10,%eax
		lea    (%eax,%ecx,1),%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%ebx
		add    %edx,%eax
		mov    %ecx,%edx
		add    %eax,%ebx
		shl    $0x3,%edx
		mov    $0x44,%eax
		add    $0x3c,%edx
		inc    %edi
		call   func_18274
		cmp    $0xa,%di
		jl     jump_30f2d
		mov    $0x9b,%eax
		mov    data_15b9cc,%ebx
		mov    $0x47,%edx
		push   %ebx
		mov    $0x5b,%ecx
		mov    $0xa4,%ebx
		call   func_1843d
		call   func_19b67
	jump_30f8c:
		mov    data_7cf24,%ecx
		cmp    $0x44,%ecx
		jl     jump_310a9
		cmp    $0x98,%ecx
		jg     jump_310a9
		mov    data_7cf28,%edi
		cmp    $0x3c,%edi
		jl     jump_310a9
		cmp    $0x8c,%edi
		jg     jump_310a9
		cmpl   $0x1,data_7cf20
		jne    jump_310a9
		cmpb   $0x0,data_78785
		jne    jump_310a9
		movb   $0x1,data_78785
		mov    data_7cf28,%edx
		sub    $0x3c,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		xor    %edi,%edi
		mov    %eax,%esi
		jmp    jump_3100d
	jump_30fff:
		mov    data_1a4116,%ax
		inc    %eax
		inc    %edi
		mov    %ax,data_1a4116
	jump_3100d:
		movswl %di,%eax
		cmp    %esi,%eax
		jl     jump_30fff
		mov    data_1a4116,%ax
		cmp    data_1a4118,%ax
		jge    jump_31076
		mov    $data_52098,%esi
		mov    %ebp,%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_1a4114,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%esi
		add    %edx,%eax
		mov    %ebp,%edi
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x0,%al
		repnz scas %es:(%edi),%al
		dec    %edi
	jump_31054:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x0,%al
		je     jump_31070
		mov    0x1(%esi),%al
		add    $0x2,%esi
		mov    %al,0x1(%edi)
		add    $0x2,%edi
		cmp    $0x0,%al
		jne    jump_31054
	jump_31070:
		pop    %edi
		jmp    jump_30d64
	jump_31076:
		mov    data_7cf28,%edx
		sub    $0x3c,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		xor    %edi,%edi
		mov    %eax,%esi
		jmp    jump_310a2
	jump_31092:
		mov    data_1a4116,%dx
		dec    %edx
		inc    %edi
		mov    %dx,data_1a4116
	jump_310a2:
		movswl %di,%eax
		cmp    %esi,%eax
		jl     jump_31092
	jump_310a9:
		xor    %edi,%edi
	jump_310ab:
		mov    data_7cf28,%edx
		sub    $0x3c,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		shl    $0x3,%edx
		sbb    %edx,%eax
		sar    $0x3,%eax
		movswl %di,%edx
		mov    %edx,%ebx
		shl    $0x3,%ebx
		add    $0x3c,%ebx
		cmp    %eax,%edx
		jne    jump_3110e
		xor    %eax,%eax
		call   func_18136
		mov    data_1a4114,%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%ecx
		add    %edx,%eax
		mov    %ebx,%edx
		add    %eax,%ecx
		mov    $0x44,%eax
		mov    %ecx,%ebx
		call   func_18274
		mov    $0x1,%eax
		call   func_18136
		jmp    jump_31139
	jump_3110e:
		mov    data_1a4114,%eax
		sar    $0x10,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		mov    $data_1a411c,%ecx
		add    %edx,%eax
		mov    %ebx,%edx
		add    %eax,%ecx
		mov    $0x44,%eax
		mov    %ecx,%ebx
		call   func_18274
	jump_31139:
		inc    %edi
		cmp    $0xa,%di
		jge    jump_30c4d
		jmp    jump_310ab
	jump_31149:
		add    $0x24,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
.data
data_31151:
		.fill   0xd
data_3115e:
		.ascii  "\x0e\x00\x0c\x00\xff\x06\x06\xff"
		.ascii  "\xff\x07\x06\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x04\x03\x06\x07\x05"
		.ascii  "\x04\x06\x06\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x05\x02\x06\x03\x05\x02"
		.ascii  "\x03\x06\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x03\x05\x02\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x07"
		.ascii  "\x06\x05\x02\x04\x05\x04\x06\x07"
		.ascii  "\xff\xff\xff\xff\x07\x04\x07\x07"
		.ascii  "\x06\x06\x03\x01\x03\x04\x06\x07"
		.ascii  "\xff\xff\x07\x03\x04\x06\x07\x05"
		.ascii  "\x01\x03\x05\x07\x00\x00\xff\xff"
		.ascii  "\xff\x07\x07\x07\x07\x06\x02\x06"
		.ascii  "\x00\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x07\x04\x00\x00\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\x06\x00\x07\x06\x05\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x00\x00\x07\x07\x00\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x00"
		.ascii  "\x00\x00\xff\xff"
data_3120a:
		.ascii  "\x11\x16\x19\x1a\x1c\x1d"
		.ascii   " \"#$Fg"
data_31216:
		.ascii  "\x0e\x00\x0c\x00\xff\x06\x06\xff"
		.ascii  "\xff\x07\x06\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x04\x03\x06\x07\x05"
		.ascii  "\x04\x06\x06\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x05\x02\x06\x03\x05\x02"
		.ascii  "\x03\x06\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x03\x05\x02\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x07"
		.ascii  "\x06\x05\x02\x04\x05\x04\x06\x07"
		.ascii  "\xff\xff\xff\xff\x07\x04\x07\x07"
		.ascii  "\x06\x06\x03\x01\x03\x04\x06\x07"
		.ascii  "\xff\xff\x07\x03\x04\x06\x07\x05"
		.ascii  "\x01\x03\x05\x07\x00\x00\xff\xff"
		.ascii  "\xff\x07\x07\x07\x07\x06\x02\x06"
		.ascii  "\x00\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x07\x04\x00\x00\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\x06\x00\x07\x06\x05\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x00\x00\x07\x07\x00\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x00"
		.ascii  "\x00\x00\xff\xff"
data_312c2:
		.ascii  "\x10\x00\x0a\x00\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x07\x07\x07\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07"
data_31366:
		.ascii  "\x10\x00\x0a\x00\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x07\x07\x07\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07"
data_3140a:
		.ascii  "\x0e\x00\x0c\x00\xff\x06\x06\xff"
		.ascii  "\xff\x07\x06\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x04\x03\x06\x07\x05"
		.ascii  "\x04\x06\x06\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x05\x02\x06\x03\x05\x02"
		.ascii  "\x03\x06\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x03\x05\x02\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x07"
		.ascii  "\x06\x05\x02\x04\x05\x04\x06\x07"
		.ascii  "\xff\xff\xff\xff\x07\x04\x07\x07"
		.ascii  "\x06\x06\x03\x01\x03\x04\x06\x07"
		.ascii  "\xff\xff\x07\x03\x04\x06\x07\x05"
		.ascii  "\x01\x03\x05\x07\x00\x00\xff\xff"
		.ascii  "\xff\x07\x07\x07\x07\x06\x02\x06"
		.ascii  "\x00\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x07\x04\x00\x00\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\x06\x00\x07\x06\x05\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x00\x00\x07\x07\x00\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x00"
		.ascii  "\x00\x00\xff\xff"
data_314b6:
		.ascii  "\x10\x00\x0a\x00\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x07\x07\x07\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07"
data_3155a:
		.ascii  "\x10\x00\x0a\x00\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x07\x07\x07\x07\x07\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x07\x07\x07\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x02\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07"
data_315fe:
		.ascii  "\x12\x00\x02\x00\x0d\x03"
		.ascii   "NNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNN"
		.ascii  "\xb6\x4c\x4e\xb7\xb7\x02\x00\x00"
		.ascii  "\x00\x07\x01\x0d\x03\x4e\x11\x12"
		.ascii  "\x15\x14\x14\x15\x13\x11\x11\x11"
		.ascii  "\x11\x11\x12\x12\x12\x12\x12\x11"
		.ascii  "\x13\x12\x11\x13\x13\x13\x13\x13"
		.ascii  "\x13\x13\x13\x13\x13\x13\x13\x13"
		.ascii  "\x13\x13\x13\x13\x13\x13\x13\x13"
		.ascii  "\x13\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x11\x12\x11\x4e\x02\x00\x00\x00"
		.ascii  "\x05\x01\x0e\x03\x4e\x4e\x17\x13"
		.ascii   "NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOON"
		.ascii  "\x13\x17\x4e\x4e\x05\x01\x0e\x03"
		.ascii  "\x4e\x11\x4e\x11\x4e"
		.fill   0x31
		.ascii  "\x4e\x11\x4e\x11\x4e\x05\x01\x0e"
		.ascii  "\x03\x4e\x11\x13\x11\x4e"
		.fill   0x24
		.ascii  "\x10\x12\x14\x00\x10\x00\x00\x00"
		.ascii  "\x10\x12\x00\x00\x00\x4e\x11\x13"
		.ascii  "\x11\x4e\x05\x01\x0e\x03\x4e\x4e"
		.ascii  "\x4e\x12\x4e"
		.fill   0x24
		.ascii  "\x10\x00\x00\x00\x10\x00\x00\x00"
		.ascii  "\x10\x00\x12\x00\x00\x4e\x12\x4e"
		.ascii  "\x4e\x4e\x07\x01\x0d\x03\x17\x4e"
		.ascii  "\x4e"
		.fill   0x24
		.ascii  "\x12\x12\x14\x00\x12\x00\x00\x00"
		.ascii  "\x12\x00\x10\x00\x00\x4e\x4e\x17"
		.ascii  "\x02\x00\x00\x00\x05\x01\x0e\x03"
		.ascii  "\x4e\x4e\x4e\x12\x4e"
		.fill   0x24
		.ascii  "\x10\x00\x00\x00\x10\x00\x00\x00"
		.ascii  "\x10\x00\x13\x00\x00\x4e\x12\x4e"
		.ascii  "\x4e\x4e\x05\x01\x0e\x03\x4e\x11"
		.ascii  "\x13\x12\x4e"
		.fill   0x24
		.ascii  "\x12\x12\x14\x00\x12\x14\x15\x00"
		.ascii  "\x12\x14\x17\x00\x00\x4e\x12\x13"
		.ascii  "\x11\x4e\x05\x01\x0e\x03\x4e\x13"
		.ascii  "\x17\x11\x4e"
		.fill   0x31
		.ascii  "\x4e\x11\x17\x13\x4e\x05\x01\x0e"
		.ascii  "\x03\x4e\x4e\x4e\x13"
		.ascii   "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"
		.ascii  "\x13\x4e\x4e\x4e\x07\x01\x0d\x03"
		.ascii  "\x4e\x14\x14\x14\x13\x13\x12\x12"
		.ascii  "\x11\x11\x11\x11\x11\x11\x11\x11"
		.ascii  "\x11\x11\x11\x11\x11\x11\x11\x11"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x11"
		.ascii  "\x11\x11\x11\x12\x14\x14\x4e\x02"
		.ascii  "\x00\x00\x00\x07\x01\x0d\x03"
		.ascii   "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"
		.ascii  "\xb7\x06\x07\xb6\xb6\x02\x00\x00"
		.ascii  "\x00"
.text


/*----------------------------------------------------------------*/
func_31933:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    $0x1,%dl
	jump_3193b:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_31960
		cmpl   $0x0,data_1a0168
		jne    jump_31960
		xor    %dl,%dl
	jump_31960:
		cmpl   $0x1,data_7cf20
		je     jump_31972
		cmpl   $0x0,data_1a0168
		je     jump_3193b
	jump_31972:
		test   %dl,%dl
		jne    jump_3193b
	jump_31976:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_3197d:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
	jump_31983:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf20,%edx
		cmp    $0x1,%edx
		je     jump_31983
		je     jump_31983
		cmpl   $0x0,data_1a0168
		jne    jump_31983
		jmp    jump_31976


/*----------------------------------------------------------------*/
func_319db:
/*----------------------------------------------------------------*/
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
	jump_319e1:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf20,%edx
		cmp    $0x2,%edx
		je     jump_319e1
		je     jump_319e1
		cmpl   $0x0,data_1a01d4
		jne    jump_319e1
		jmp    jump_31976


/*----------------------------------------------------------------*/
func_31a49:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		sub    $0xc,%esp
		push   %eax
		push   %edx
		movb   $0x1,data_15ba22
	jump_31a57:
		lea    0x8(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x8(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_31a82
		cmpl   $0x0,data_1a0168
		je     jump_31af4
	jump_31a82:
		cmpb   $0x0,data_15ba22
		jne    jump_31af4
		mov    0x2(%esp),%eax
		mov    data_7cf24,%edi
		sar    $0x10,%eax
		cmp    %edi,%eax
		jg     jump_31af4
		mov    -0x2(%esp),%edx
		sar    $0x10,%edx
		cmp    %edi,%edx
		jl     jump_31af4
		mov    data_7cf28,%edx
		movswl %bx,%esi
		cmp    %edx,%esi
		jg     jump_31af4
		mov    data_7cf28,%edi
		movswl %cx,%edx
		cmp    %edi,%edx
		jl     jump_31af4
		cmpb   $0x1,0x28(%esp)
		jne    jump_31ae5
		mov    data_7cf24,%edx
		mov    0x1e(%esp),%esi
		sub    %eax,%edx
		sar    $0x10,%esi
		mov    %edx,%eax
	jump_31add:
		sar    $0x1f,%edx
		idiv   %esi
		inc    %eax
		jmp    jump_31b1d
	jump_31ae5:
		mov    %edi,%edx
		sub    %esi,%edx
		mov    0x22(%esp),%esi
		mov    %edx,%eax
		sar    $0x10,%esi
		jmp    jump_31add
	jump_31af4:
		cmpl   $0x2,data_7cf20
		je     jump_31b06
		cmpl   $0x0,data_1a01d4
		je     jump_31b13
	jump_31b06:
		cmpb   $0x0,data_15ba22
		jne    jump_31b13
		xor    %eax,%eax
		jmp    jump_31b1d
	jump_31b13:
		call   func_27bf2
		jmp    jump_31a57
	jump_31b1d:
		add    $0x14,%esp
		pop    %edi
		pop    %esi
		ret    $0xc


/*----------------------------------------------------------------*/
func_31bd3:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		push   %eax
		push   %edx
		push   %ebx
	jump_31bdc:
		lea    0xc(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_31cb0
		mov    0x6(%esp),%esi
		mov    data_7cf24,%ebx
		sar    $0x10,%esi
		cmp    %ebx,%esi
		jg     jump_31c71
		mov    0x2(%esp),%ebx
		mov    data_7cf24,%edi
		sar    $0x10,%ebx
		cmp    %edi,%ebx
		jl     jump_31c71
		mov    -0x2(%esp),%eax
		mov    data_7cf28,%ebp
		sar    $0x10,%eax
		cmp    %ebp,%eax
		jg     jump_31c71
		movswl %cx,%edx
		cmp    %ebp,%edx
		jl     jump_31c71
		mov    %ebp,%edx
		mov    0x2a(%esp),%ecx
		sub    %eax,%edx
		sar    $0x10,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    0x26(%esp),%ebx
		sub    %esi,%edx
		sar    $0x10,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		imul   %eax,%ecx
		mov    %edi,%edx
		sub    %esi,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		add    %ecx,%eax
		inc    %eax
		jmp    jump_31cbf
	jump_31c71:
		mov    0x2e(%esp),%eax
		mov    data_7cf24,%ebp
		sar    $0x10,%eax
		cmp    %ebp,%eax
		jg     jump_31cb0
		mov    0x32(%esp),%eax
		sar    $0x10,%eax
		cmp    %ebp,%eax
		jl     jump_31cb0
		mov    0x36(%esp),%eax
		mov    data_7cf28,%ebx
		sar    $0x10,%eax
		cmp    %ebx,%eax
		jg     jump_31cb0
		mov    0x3a(%esp),%eax
		sar    $0x10,%eax
		cmp    %ebx,%eax
		jl     jump_31cb0
		mov    $0x3e7,%eax
		jmp    jump_31cbf
	jump_31cb0:
		cmpl   $0x2,data_7cf20
		jne    jump_31bdc
		xor    %eax,%eax
	jump_31cbf:
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x18


/*----------------------------------------------------------------*/
func_31cc8:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    %esp,%edi
		mov    $data_31151,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    %ecx,%eax
		mov    %ebp,%edx
		call   func_333c7
		mov    %ebp,%eax
		mov    %eax,%ecx
		shl    $0x4,%ecx
		add    %eax,%ecx
		shl    $0x3,%ecx
		mov    data_19ac7f(%ecx),%cl
		and    $0xff,%ecx
		je     jump_31d3f
		mov    data_9922e(,%ecx,4),%ecx
		mov    data_15b9cc,%esi
		mov    0xa(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		add    $0x8f,%edx
		add    $0xa2,%eax
		call   func_2b240
	jump_31d3f:
		mov    %ebp,%ecx
		shl    $0x4,%ecx
		add    %ebp,%ecx
		shl    $0x3,%ecx
		mov    data_19ac7e(%ecx),%cl
		and    $0xff,%ecx
		je     jump_31d85
		mov    data_9922e(,%ecx,4),%ecx
		mov    data_15b9cc,%esi
		mov    0xa(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		add    $0x8f,%edx
		add    $0xc0,%eax
		call   func_2b240
	jump_31d85:
		mov    %ebp,%ecx
		shl    $0x4,%ecx
		add    %ebp,%ecx
		shl    $0x3,%ecx
		mov    data_19ac81(%ecx),%cl
		and    $0xff,%ecx
		je     jump_31dcb
		mov    data_9922e(,%ecx,4),%ecx
		mov    data_15b9cc,%esi
		mov    0xa(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		add    $0x8f,%edx
		add    $0xdf,%eax
		call   func_2b240
	jump_31dcb:
		mov    %ebp,%ecx
		shl    $0x4,%ecx
		add    %ebp,%ecx
		shl    $0x3,%ecx
		mov    data_19ac82(%ecx),%cl
		and    $0xff,%ecx
		je     jump_31e11
		mov    data_9922e(,%ecx,4),%ecx
		mov    data_15b9cc,%esi
		mov    0xa(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		add    $0x8f,%edx
		add    $0xfc,%eax
		call   func_2b240
	jump_31e11:
		mov    %ebp,%ecx
		shl    $0x4,%ecx
		add    %ebp,%ecx
		shl    $0x3,%ecx
		mov    data_19ac83(%ecx),%cl
		and    $0xff,%ecx
		je     jump_31e57
		mov    data_9922e(,%ecx,4),%ecx
		mov    data_15b9cc,%esi
		mov    0xa(%ecx),%ebx
		mov    0x4(%ecx),%edx
		mov    0x2(%ecx),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		mov    %esi,%ecx
		add    $0x8f,%edx
		add    $0x11a,%eax
		call   func_2b240
	jump_31e57:
		mov    $0x1b,%eax
		mov    $0x21,%edx
		mov    $data_520a4,%ebx
		call   func_18136
		mov    $0xe1,%eax
		mov    %ebp,%ecx
		call   func_18274
		mov    $0x21,%eax
		mov    $0x2a,%edx
		mov    $data_520a8,%ebx
		call   func_18136
		mov    $0xe1,%eax
		shl    $0x4,%ecx
		call   func_18274
		mov    $0x11,%eax
		mov    $0x33,%edx
		mov    $data_520ac,%ebx
		call   func_18136
		mov    $0xdc,%eax
		add    %ebp,%ecx
		call   func_18274
		mov    $0x1,%eax
		shl    $0x3,%ecx
		call   func_18136
		mov    data_19ac70(%ecx),%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		push   %eax
		mov    data_19ac6c(%ecx),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		push   %eax
		push   $data_520b9
		lea    0xc(%esp),%eax
		push   %eax
		mov    $0x21,%edx
		call   w_sprintf
		add    $0x10,%esp
		mov    %esp,%ebx
		mov    $0xf8,%eax
		call   func_18274
		mov    data_19ac74(%ecx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    data_19ac72(%ecx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $data_520b9
		lea    0xc(%esp),%eax
		push   %eax
		mov    $0x2a,%edx
		call   w_sprintf
		add    $0x10,%esp
		mov    %esp,%ebx
		mov    $0xf8,%eax
		call   func_18274
		xor    %eax,%eax
		mov    data_19ac61(%ecx),%al
		push   %eax
		xor    %eax,%eax
		mov    data_19ac4f(%ecx),%al
		push   %eax
		push   $data_520c1
		lea    0xc(%esp),%eax
		push   %eax
		call   w_sprintf
		add    $0x10,%esp
		mov    $0xf3,%eax
		mov    $0x33,%edx
		mov    %esp,%ebx
		call   func_18274
		mov    $data_19ac24,%eax
		add    %ecx,%eax
		add    $0x2,%eax
		push   %eax
		push   $0xb
		push   $0xdc
		mov    $0x43,%edx
		call   func_2c6ab
		mov    $0xbc,%eax
		mov    data_19ac66(%ecx),%ebx
		add    $0xc,%esp
		sar    $0x10,%ebx
		call   func_1822d
		mov    $0xec,%eax
		xor    %ebx,%ebx
		mov    $0x43,%edx
		mov    data_19ac64(%ecx),%bl
		call   func_1822d
		mov    $0x11a,%eax
		xor    %ebx,%ebx
		mov    $0x43,%edx
		mov    data_19ac65(%ecx),%bl
		call   func_1822d
		mov    $0xbc,%eax
		mov    data_19ac68(%ecx),%ebx
		mov    $0x57,%edx
		sar    $0x10,%ebx
		call   func_1822d
		mov    $0xec,%eax
		xor    %ebx,%ebx
		mov    $0x57,%edx
		mov    data_19ac66(%ecx),%bl
		call   func_1822d
		mov    $0x11a,%eax
		xor    %ebx,%ebx
		mov    $0x57,%edx
		mov    data_19ac67(%ecx),%bl
		call   func_1822d
		mov    $0xbd,%eax
		mov    $0x86,%edx
		call   func_3507e
		xor    %eax,%eax
		mov    $data_16e78c,%edx
		mov    data_19ac34(%ecx),%al
		mov    $data_16e78c,%ebx
		call   func_24c7f
		mov    $0xa2,%eax
		mov    $0x9,%edx
		mov    data_15b9cc,%ecx
		call   func_2b240
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3205e:
/*----------------------------------------------------------------*/
		sub    $0xc,%esp
		push   %edx
		sub    %ebx,%eax
		mov    %eax,0x4(%esp)
		fildl  0x4(%esp)
		fildl  (%esp)
		fdivrp %st,%st(1)
		sub    $0x5,%ecx
		mov    %ecx,0x4(%esp)
		fildl  0x4(%esp)
		fdivp  %st,%st(1)
		fstps  0x8(%esp)
		cmp    $0x7b,%ebx
		jne    jump_3208f
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
		jmp    jump_3209c
	jump_3208f:
		flds   0x8(%esp)
	jump_32093:
		call   func___CHP
		fistpl 0xc(%esp)
	jump_3209c:
		mov    0xc(%esp),%eax
		add    $0x10,%esp
		ret


/*----------------------------------------------------------------*/
func_320a4:
/*----------------------------------------------------------------*/
		sub    $0x4,%esp
		push   %eax
		push   %edx
		push   %ebx
		fildl  (%esp)
		fildl  0x4(%esp)
		fdivrp %st,%st(1)
		fildl  0x8(%esp)
		fdivp  %st,%st(1)
		jmp    jump_32093


/*----------------------------------------------------------------*/
func_320bb:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		push   %eax
		mov    data_7cf24,%eax
		mov    $0x24,%edx
		mov    %eax,0x38(%esp)
		mov    data_7cf28,%eax
		mov    $0xa,%ecx
		mov    %eax,0x34(%esp)
		mov    0x38(%esp),%eax
		mov    0x38(%esp),%ebx
		mov    %eax,0x30(%esp)
		mov    0x34(%esp),%eax
		sub    %ebx,%edx
		mov    %eax,0x2c(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x3b,%edx
		mov    0x34(%esp),%ecx
		mov    %eax,0x10(%esp)
		sub    %ecx,%edx
		mov    $0xa,%ecx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    $0x118,%edx
		sub    %ebx,%edx
		mov    %eax,0x14(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		mov    0x34(%esp),%edi
		mov    $0x82,%edx
		sub    %edi,%edx
		mov    %eax,0x18(%esp)
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ecx
		fildl  0x10(%esp)
		fstps  0x20(%esp)
		fildl  0x14(%esp)
		fstps  0x24(%esp)
		fildl  0x18(%esp)
		fstps  0x28(%esp)
		xor    %edi,%edi
		mov    %eax,0x18(%esp)
		mov    $data_183394,%edx
		fildl  0x18(%esp)
		mov    data_15b9cc,%eax
		fstps  0x1c(%esp)
		call   func_2b433
		call   func_19ba9
		jmp    jump_3219f
	jump_3217d:
		test   %edi,%edi
		jle    jump_3219f
		mov    data_15b9cc,%ebp
		push   %ebp
		mov    0x3c(%esp),%eax
		mov    0x38(%esp),%edx
		push   $0x1
		mov    0x38(%esp),%ebx
		mov    0x34(%esp),%ecx
		call   func_18303
	jump_3219f:
		mov    data_15b9cc,%eax
		call   func_2b470
		fildl  0x38(%esp)
		fld    %st(0)
		fadds  0x20(%esp)
		fstp   %st(1)
		call   func___CHP
		fistpl 0x38(%esp)
		fildl  0x34(%esp)
		fld    %st(0)
		fadds  0x24(%esp)
		fstp   %st(1)
		call   func___CHP
		fistpl 0x34(%esp)
		fildl  0x30(%esp)
		fld    %st(0)
		fadds  0x28(%esp)
		fstp   %st(1)
		call   func___CHP
		fistpl 0x30(%esp)
		fildl  0x2c(%esp)
		fld    %st(0)
		fadds  0x1c(%esp)
		inc    %edi
		fstp   %st(1)
		call   func___CHP
		fistpl 0x2c(%esp)
		cmp    $0xa,%edi
		jl     jump_3217d
		mov    $data_183394,%eax
		mov    data_15b9cc,%edx
		mov    $data_59abd,%ebx
		call   func_2b433
		mov    $0x24,%eax
		mov    $0x3b,%edx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0x1e,%eax
		mov    $0x32,%edx
		mov    $data_58cf4,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    (%esp),%edx
		dec    %edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $data_f10a4,%eax
		lea    0x1(%eax),%esi
		mov    %esi,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0xa0,%edx
		shl    $0x3,%eax
		push   %esi
		sub    %eax,%edx
		push   $0x41
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   func_3777c
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_322b0:
		lea    0x4(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x4(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_322b0
		call   func_3197d
		mov    $data_183394,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		add    $0x3c,%esp
		jmp    jump_3379b

vtable_32301:
		.long   func_324c7
		.long   func_329b8
		.long   func_329cd
		.long   func_329e2
		.long   func_329f7


/*----------------------------------------------------------------*/
func_32315:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xec,%esp
		mov    $0x2b,%ecx
		mov    %esp,%edi
		xor    %edx,%edx
		mov    $data_3115e,%esi
		mov    %edx,0xd8(%esp)
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %edx,0xd4(%esp)
		mov    data_1a00c8,%dx
		cmp    $0x6,%dx
		jae    jump_32358
		movl   $0x42f60000,data_1a4f18
		jmp    jump_3237d
	jump_32358:
		xor    %eax,%eax
		mov    %dx,%ax
		mov    %eax,0xe8(%esp)
		fildl  0xe8(%esp)
		fdivs  data_52108
		fdivrs data_5210c
		fstps  data_1a4f18
	jump_3237d:
		call   func_319db
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %esi,data_1a4f10
		mov    %esi,data_1a4f14
		call   func_201cf
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		mov    $0x140,%ecx
		xor    %eax,%eax
		push   $0xc8
		xor    %edx,%edx
		xor    %ebx,%ebx
		call   func_2b56c
		mov    $data_520cc,%eax
		mov    $data_172224,%edx
		call   func_2e46b
		cmp    $0xffffffff,%eax
		jne    jump_323e8
		mov    $data_520d7,%eax
		call   w_puts
		call   w_dos_getch
		mov    $data_520ee,%eax
		call   func_18fd0
	jump_323e8:
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0x87,%eax
		mov    $0xf,%edx
		mov    data_15b9cc,%ebp
		call   func___CHP
		fistpl 0xe8(%esp)
		push   %ebp
		mov    0xec(%esp),%ecx
		mov    $0x96,%ebx
		add    $0xf,%ecx
		call   func_1843d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_32446:
		mov    data_7cf20,%eax
		cmp    $0x2,%eax
		je     jump_32456
		jne    jump_3254e
	jump_32456:
		mov    data_7cf24,%ebx
		cmp    $0xa2,%ebx
		jl     jump_324dd
		cmp    $0x135,%ebx
		jg     jump_324dd
		mov    data_7cf28,%esi
		cmp    $0x67,%esi
		jl     jump_324dd
		cmp    $0x81,%esi
		jg     jump_324dd
		lea    -0xa2(%ebx),%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%eax
		ja     jump_324dd
		mov    0xd8(%esp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %ebx,%eax
		shl    $0x2,%edx
		shl    $0x3,%eax
		jmp    *vtable_32301(%edx)


/*----------------------------------------------------------------*/
func_324c7:
/*----------------------------------------------------------------*/
		mov    data_19ac7f(%eax),%cl
		test   %cl,%cl
		je     jump_324dd
		mov    %cl,%al
	jump_324d3:
		and    $0xff,%eax
		call   func_320bb
	jump_324dd:
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x96,%ebx
		mov    data_15b9cc,%ebp
		mov    data_1a4f1c,%eax
		call   func___CHP
		fistpl 0xe8(%esp)
		mov    0xe8(%esp),%ecx
		push   %ebp
		add    $0xf,%ecx
		add    %eax,%edx
		add    %eax,%ecx
		mov    $0x87,%eax
		call   func_1843d
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_3254e:
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		je     jump_32569
		je     jump_32569
		cmpl   $0x0,0xd4(%esp)
		je     jump_332eb
	jump_32569:
		xor    %ebp,%ebp
		mov    data_7cf24,%eax
		mov    %ebp,0xd4(%esp)
		cmp    $0x8,%eax
		jl     jump_325c8
		cmp    $0x88,%eax
		jg     jump_325c8
		mov    data_7cf28,%ebx
		cmp    $0x5,%ebx
		jl     jump_325c8
		cmp    $0x93,%ebx
		jg     jump_325c8
		lea    -0x4(%ebx),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a4f10,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		mov    %edx,0xd8(%esp)
		cmp    %edx,%eax
		jg     jump_325c8
		dec    %eax
		mov    %eax,0xd8(%esp)
	jump_325c8:
		mov    data_7cf24,%edi
		cmp    $0xfc,%edi
		jl     jump_32aff
		cmp    $0x135,%edi
		jg     jump_32aff
		mov    data_7cf28,%eax
		cmp    $0x87,%eax
		jl     jump_32aff
		cmp    $0x91,%eax
		jg     jump_32aff
		xor    %esi,%esi
	jump_32603:
		mov    $0x3,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edi
		shl    $0x2,%eax
		add    %edi,%eax
		mov    %esi,%edx
		shl    $0x2,%eax
		sar    $0x1f,%edx
		add    %edi,%eax
		mov    $0x3,%edi
		lea    0x3d(%eax),%ebx
		mov    %esi,%eax
		idiv   %edi
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		shl    $0x4,%eax
		mov    %ebx,%edx
		mov    $data_7c784,%ebx
		add    $0xa6,%eax
		inc    %esi
		call   func_2b240
		cmp    $0x6,%esi
		jl     jump_32603
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac52(%eax),%ch
		xor    %esi,%esi
		test   %ch,%ch
		jbe    jump_326a8
		mov    data_19ac52(%eax),%al
		and    $0xff,%eax
		add    %eax,%eax
		lea    0x14(%eax),%ebx
		imul   $0x1ae,%ebx,%ebx
		mov    $0x3e,%edx
		mov    data_15b9cc,%ecx
		mov    $0xa8,%eax
		add    $data_70a30,%ebx
		mov    $0x1,%esi
		call   func_2b240
	jump_326a8:
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac53(%eax),%dl
		test   %dl,%dl
		jbe    jump_32727
		mov    %dl,%al
		and    $0xff,%eax
		add    %eax,%eax
		add    $0x18,%eax
		imul   $0x1ae,%eax,%ecx
		mov    %esi,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x3,%ebp
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%edi
		sub    %edx,%eax
		add    $data_70a30,%ecx
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xa8,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_32727:
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac54(%eax),%dh
		test   %dh,%dh
		jbe    jump_327a7
		mov    %dh,%al
		and    $0xff,%eax
		add    %eax,%eax
		add    $0x1c,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%ecx
		mov    %esi,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		add    %eax,%ecx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x3,%ebp
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_15b9cc,%edi
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xa8,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_327a7:
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac55(%eax),%bl
		test   %bl,%bl
		jbe    jump_32824
		mov    %bl,%al
		and    $0xff,%eax
		add    %eax,%eax
		add    $0x20,%eax
		imul   $0x1ae,%eax,%ebx
		mov    %esi,%edx
		mov    $0x3,%ecx
		sar    $0x1f,%edx
		mov    %esi,%eax
		idiv   %ecx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x3,%ebp
		lea    0x3e(%eax),%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%edi
		sub    %edx,%eax
		add    $data_70a30,%ebx
		shl    $0x4,%eax
		mov    %ecx,%edx
		add    $0xa8,%eax
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_32824:
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac56(%eax),%bh
		test   %bh,%bh
		jbe    jump_328a4
		mov    %bh,%al
		and    $0xff,%eax
		add    %eax,%eax
		add    $0x24,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%ecx
		mov    %esi,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		add    %eax,%ecx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x3,%ebp
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_15b9cc,%edi
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xa8,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_328a4:
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		cmpb   $0x0,data_19ac57(%eax)
		jbe    jump_32923
		mov    data_19ac57(%eax),%al
		and    $0xff,%eax
		add    %eax,%eax
		add    $0x28,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%ebx
		mov    %esi,%edx
		mov    $0x3,%edi
		sar    $0x1f,%edx
		add    %eax,%ebx
		mov    %esi,%eax
		idiv   %edi
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x3,%ebp
		lea    0x3e(%eax),%edi
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebp
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		shl    $0x4,%eax
		mov    %edi,%edx
		add    $0xa8,%eax
		inc    %esi
		call   func_2b240
	jump_32923:
		mov    0xd8(%esp),%eax
		mov    $0x3,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		shl    $0x4,%ebx
		sar    $0x1f,%edx
		add    %eax,%ebx
		mov    %esi,%eax
		idiv   %ecx
		mov    %eax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		mov    $0x3,%esi
		idiv   %esi
		mov    %edx,%ebp
		shl    $0x2,%ebp
		sub    %edx,%ebp
		mov    %ecx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		shl    $0x3,%ebx
		add    %edx,%eax
		shl    $0x4,%ebp
		shl    $0x2,%eax
		lea    0xc2(%ebp),%esi
		add    %eax,%edx
		mov    data_19ac5c(%ebx),%ch
		lea    0x44(%edx),%edi
		lea    0xa8(%ebp),%eax
		add    $0x3e,%edx
		test   %ch,%ch
		jbe    jump_32a0c
		mov    $data_71e58,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %edi,%edx
		mov    data_19ac5c(,%eax,8),%bl
		jmp    jump_32aa6


/*----------------------------------------------------------------*/
func_329b8:
/*----------------------------------------------------------------*/
		mov    data_19ac7e(%eax),%bh
		test   %bh,%bh
		je     jump_324dd
		mov    %bh,%al
		jmp    jump_324d3


/*----------------------------------------------------------------*/
func_329cd:
/*----------------------------------------------------------------*/
		mov    data_19ac81(%eax),%bl
		test   %bl,%bl
		je     jump_324dd
		mov    %bl,%al
		jmp    jump_324d3


/*----------------------------------------------------------------*/
func_329e2:
/*----------------------------------------------------------------*/
		mov    data_19ac82(%eax),%dh
		test   %dh,%dh
		je     jump_324dd
		mov    %dh,%al
		jmp    jump_324d3


/*----------------------------------------------------------------*/
func_329f7:
/*----------------------------------------------------------------*/
		mov    data_19ac83(%eax),%dl
		test   %dl,%dl
		je     jump_324dd
		mov    %dl,%al
		jmp    jump_324d3
	jump_32a0c:
		cmpb   $0x0,data_19ac5e(%ebx)
		jbe    jump_32a40
		mov    $data_721b4,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %edi,%edx
		mov    data_19ac5e(,%eax,8),%bl
		jmp    jump_32aa6
	jump_32a40:
		cmpb   $0x0,data_19ac5d(%ebx)
		jbe    jump_32a74
		mov    $data_72510,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %edi,%edx
		mov    data_19ac5d(,%eax,8),%bl
		jmp    jump_32aa6
	jump_32a74:
		cmpb   $0x0,data_19ac5f(%ebx)
		jbe    jump_32aad
		mov    $data_7286c,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    0xd8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %edi,%edx
		mov    data_19ac5f(,%eax,8),%bl
	jump_32aa6:
		mov    %esi,%eax
		call   func_1822d
	jump_32aad:
		mov    $0xfc,%eax
		mov    $0x87,%edx
		mov    $data_7c220,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_32adb:
		lea    0xc4(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc4(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_32adb
	jump_32aff:
		mov    data_7cf24,%ecx
		cmp    $0x87,%ecx
		jl     jump_32db0
		cmp    $0x98,%ecx
		jg     jump_32db0
		mov    $0xf,%eax
		mov    data_1a4f1c,%edi
		add    %edi,%eax
		mov    %eax,0xdc(%esp)
		mov    0xdc(%esp),%ebp
		cmp    data_7cf28,%ebp
		jg     jump_32db0
		fildl  0xdc(%esp)
		fadds  data_1a4f18
		fildl  data_7cf28
		fcompp
		fnstsw %ax
		sahf
		ja     jump_32db0
		mov    data_7cf28,%eax
		lea    (%ecx,%ecx,1),%edx
		mov    %eax,0xd0(%esp)
		mov    %edx,%eax
		mov    %esp,%ebx
		call   func_19c3b
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		call   func_19ba9
	jump_32b9b:
		mov    data_15b9cc,%eax
		call   func_2b44f
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		je     jump_32bb6
		jne    jump_32d9c
	jump_32bb6:
		lea    0xb8(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xb8(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0xd0(%esp),%eax
		mov    data_7cf28,%edi
		cmp    %edi,%eax
		jge    jump_32cbb
		mov    0xd0(%esp),%ebp
		mov    %edi,%eax
		mov    data_1a4f1c,%edx
		sub    %ebp,%eax
		add    %eax,%edx
		mov    %edx,data_1a4f1c
		lea    (%eax,%ebp,1),%ebx
		fildl  data_1a4f1c
		fadds  data_1a4f18
		mov    %ebx,0xd0(%esp)
		fsts   0xe0(%esp)
		fcomps data_5210c
		fnstsw %ax
		sahf
		jbe    jump_32c60
		fildl  0xd0(%esp)
		flds   0xe0(%esp)
		fadds  data_52110
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0xd0(%esp)
		flds   data_5210c
		fsubs  data_1a4f18
		call   func___CHP
		fistpl data_1a4f1c
	jump_32c60:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0xe8(%esp)
		mov    data_1a00c8,%cx
		mov    0xe8(%esp),%ebx
		call   func_3205e
		mov    data_1a00c8,%bx
		mov    %eax,%edx
		mov    %eax,data_1a4f10
		cmp    $0x9,%bx
		jne    jump_32d20
		cmp    $0x4,%eax
		jne    jump_32d20
		movl   $0x3,data_1a4f10
		jmp    jump_32d20
	jump_32cbb:
		jle    jump_32d20
		mov    data_1a4f1c,%ebx
		sub    %edi,%eax
		mov    0xd0(%esp),%ecx
		sub    %eax,%ebx
		sub    %eax,%ecx
		mov    %ebx,data_1a4f1c
		mov    %ecx,0xd0(%esp)
		test   %ebx,%ebx
		jge    jump_32ce9
		xor    %edi,%edi
		mov    %edi,data_1a4f1c
	jump_32ce9:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0xe8(%esp)
		mov    data_1a00c8,%cx
		mov    0xe8(%esp),%ebx
		call   func_3205e
		mov    %eax,data_1a4f10
	jump_32d20:
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x87,%eax
		mov    $0x96,%ebx
		mov    data_15b9cc,%esi
		mov    data_1a4f1c,%edi
		call   func___CHP
		fistpl 0xe8(%esp)
		mov    0xe8(%esp),%ecx
		push   %esi
		add    $0xf,%ecx
		add    %edi,%edx
		add    %edi,%ecx
		call   func_1843d
		mov    %esp,%ebx
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		jmp    jump_32b9b
	jump_32d9c:
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		jmp    jump_3326f
	jump_32db0:
		mov    data_7cf24,%eax
		cmp    $0x87,%eax
		jl     jump_32e09
		cmp    $0x98,%eax
		jg     jump_32e09
		mov    data_7cf28,%ebx
		cmp    $0x5,%ebx
		jl     jump_32e09
		cmp    $0xf,%ebx
		jg     jump_32e09
		mov    data_1a4f10,%edx
		test   %edx,%edx
		jle    jump_32de6
		lea    -0x1(%edx),%ebx
		mov    %ebx,data_1a4f10
	jump_32de6:
		mov    $0x7b,%eax
		xor    %ebx,%ebx
		mov    data_1a4f10,%edx
		mov    data_1a00c8,%bx
		call   func_320a4
		mov    %eax,data_1a4f1c
		jmp    jump_3326f
	jump_32e09:
		mov    data_7cf24,%esi
		cmp    $0x87,%esi
		jl     jump_32e54
		cmp    $0x98,%esi
		jg     jump_32e54
		mov    data_7cf28,%ebp
		cmp    $0x8a,%ebp
		jl     jump_32e54
		cmp    $0x93,%ebp
		jg     jump_32e54
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		mov    data_1a4f10,%ebp
		sub    $0x6,%eax
		cmp    %ebp,%eax
		jle    jump_32de6
		lea    0x1(%ebp),%eax
		mov    %eax,data_1a4f10
		jmp    jump_32de6
	jump_32e54:
		mov    data_7cf24,%edx
		cmp    $0x87,%edx
		jl     jump_32f28
		cmp    $0x98,%edx
		jg     jump_32f28
		mov    data_7cf28,%ecx
		cmp    $0xf,%ecx
		jl     jump_32f28
		cmp    $0x8a,%ecx
		jg     jump_32f28
		lea    -0xf(%ecx),%eax
		mov    %eax,data_1a4f1c
		fildl  data_1a4f1c
		fadds  data_1a4f18
		fsts   0xe4(%esp)
		fcomps data_5210c
		fnstsw %ax
		sahf
		jbe    jump_32eec
		fildl  0xd0(%esp)
		flds   0xe4(%esp)
		fadds  data_52110
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0xd0(%esp)
		flds   data_5210c
		fsubs  data_1a4f18
		call   func___CHP
		fistpl data_1a4f1c
	jump_32eec:
		flds   data_1a4f18
		mov    $0x7b,%eax
		mov    data_1a4f1c,%edx
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0xe8(%esp)
		mov    data_1a00c8,%cx
		mov    0xe8(%esp),%ebx
		call   func_3205e
		mov    %eax,data_1a4f10
		jmp    jump_3326f
	jump_32f28:
		mov    data_7cf24,%edi
		test   %edi,%edi
		jl     jump_330d6
		cmp    $0x4e,%edi
		jg     jump_330d6
		mov    data_7cf28,%eax
		cmp    $0x94,%eax
		jl     jump_330d6
		cmp    $0xa3,%eax
		jg     jump_330d6
		call   func_19ba9
		mov    data_15b9cc,%eax
		mov    $data_183394,%edx
		call   func_2b44f
		call   func_19b67
		mov    data_15b9cc,%eax
		lea    0xd8(%esp),%ebx
		call   func_2b433
		mov    0xd8(%esp),%eax
		mov    $data_1a4f10,%edx
		call   func_2f789
		mov    %eax,%edx
		mov    %eax,0xd4(%esp)
		test   %eax,%eax
		je     jump_33359
		cmp    $0xffffffff,%eax
		je     jump_330c7
		mov    $data_520cc,%eax
		mov    $data_172224,%edx
		call   func_2e392
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x87,%eax
		mov    $0x96,%ebx
		mov    data_15b9cc,%ecx
		call   func___CHP
		fistpl 0xe8(%esp)
		push   %ecx
		mov    0xec(%esp),%ecx
		mov    data_1a4f1c,%esi
		add    $0xf,%ecx
		add    %esi,%edx
		add    %esi,%ecx
		call   func_1843d
		mov    $data_172224,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		xor    %eax,%eax
		mov    game_cfg_sound,%al
		imul   $0xa,%eax,%eax
		mov    $0x9e,%ebp
		mov    %esi,%edi
		mov    $0x1,%edx
		xor    %esi,%edi
		mov    %edx,%ebx
		mov    $0xfffffffe,%esi
		call   func_394d1
		call   func_19ba9
	jump_3305f:
		mov    $data_183394,%eax
		mov    $0xa0,%ebx
		mov    $0x94,%ecx
		mov    data_15b9cc,%edx
		call   func_37f18
		mov    $0x4,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x94,%ecx
		lea    (%edx,%ebp,1),%ebx
		mov    data_15b9cc,%edx
		add    $0x2,%esi
		add    $0x9e,%edx
		mov    $data_172224,%eax
		sub    %edi,%edx
		add    $0x2,%ebp
		call   func_37f18
		mov    data_15b9cc,%eax
		add    $0x2,%edi
		call   func_2b470
		cmp    $0xa0,%edi
		jle    jump_3305f
		jmp    jump_3325b
	jump_330c7:
		mov    $data_520f3,%eax
		call   func_34fbe
		jmp    jump_3326f
	jump_330d6:
		mov    data_7cf24,%ebx
		cmp    $0xee,%ebx
		jl     jump_3326f
		cmp    $0x13f,%ebx
		jg     jump_3326f
		mov    data_7cf28,%esi
		cmp    $0x94,%esi
		jl     jump_3326f
		cmp    $0xa3,%esi
		jg     jump_3326f
		call   func_19ba9
		mov    data_15b9cc,%eax
		mov    $data_183394,%edx
		call   func_2b44f
		call   func_19b67
		mov    data_15b9cc,%eax
		call   func_2b433
		mov    0xd8(%esp),%eax
		call   func_357c4
		mov    %eax,0xd4(%esp)
		test   %eax,%eax
		je     jump_33359
		mov    $data_520cc,%eax
		mov    $data_172224,%edx
		call   func_2e392
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0xf,%edx
		mov    $0x96,%ebx
		mov    data_15b9cc,%ebp
		mov    data_1a4f1c,%eax
		call   func___CHP
		fistpl 0xe8(%esp)
		mov    0xe8(%esp),%ecx
		push   %ebp
		add    $0xf,%ecx
		add    %eax,%edx
		add    %eax,%ecx
		mov    $0x87,%eax
		call   func_1843d
		mov    $data_172224,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		xor    %eax,%eax
		mov    game_cfg_sound,%al
		imul   $0xa,%eax,%eax
		mov    $data_1722c4,%edi
		mov    $0x1,%edx
		xor    %esi,%esi
		mov    %edx,%ebx
		mov    $0xa0,%ebp
		call   func_394d1
		call   func_19ba9
	jump_331fd:
		mov    $data_183434,%eax
		mov    $0xa0,%ebx
		mov    data_15b9cc,%edx
		mov    $0x94,%ecx
		add    $0xa0,%edx
		call   func_37f18
		mov    $0x4,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x94,%ecx
		mov    %edi,%eax
		lea    (%edx,%ebp,1),%ebx
		mov    data_15b9cc,%edx
		add    $0x2,%esi
		call   func_37f18
		sub    $0x2,%edi
		mov    data_15b9cc,%eax
		add    $0x2,%ebp
		call   func_2b470
		cmp    $0xa0,%esi
		jle    jump_331fd
	jump_3325b:
		call   func_19b67
		mov    $data_520cc,%eax
		mov    $data_172224,%edx
		call   func_2e392
	jump_3326f:
		cmpl   $0x0,0xd4(%esp)
		jne    jump_332eb
		mov    0xd8(%esp),%eax
		mov    data_1a4f14,%ebx
		mov    data_1a4f10,%edx
		call   func_31cc8
		flds   data_1a4f18
		mov    $0x87,%eax
		mov    data_15b9cc,%edx
		mov    data_1a4f1c,%ebx
		call   func___CHP
		fistpl 0xe8(%esp)
		push   %edx
		mov    0xec(%esp),%ecx
		mov    $0xf,%edx
		add    $0xf,%ecx
		add    %ebx,%edx
		add    %ebx,%ecx
		mov    $0x96,%ebx
		call   func_1843d
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_332eb:
		cmpl   $0x0,0xd4(%esp)
		jne    jump_33310
		lea    0xac(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xac(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
	jump_33310:
		mov    data_7cf24,%ebp
		cmp    $0xfc,%ebp
		jl     jump_32446
		cmp    $0x135,%ebp
		jg     jump_32446
		mov    data_7cf28,%edx
		cmp    $0xbb,%edx
		jl     jump_32446
		cmp    $0xc5,%edx
		jg     jump_32446
		cmpl   $0x1,data_7cf20
		jne    jump_32446
	jump_33359:
		mov    $0xfc,%eax
		mov    $0xbb,%edx
		mov    $data_7c4d2,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_230ae
		call   func_3197d
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		mov    $0x140,%ecx
		xor    %edx,%edx
		push   $0xc8
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_2b56c
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_20118
		add    $0xec,%esp
		jmp    jump_3379b


/*----------------------------------------------------------------*/
func_333c7:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		push   %edx
		xor    %edx,%edx
		mov    %edx,0x4(%esp)
		mov    0x4(%esp),%edx
		mov    %eax,%ebp
		imul   $0x18,%edx,%eax
		mov    $0x1c,%ebx
		mov    $0x16,%ecx
		mov    $0x4,%esi
		mov    %ebx,0x8(%esp)
		add    $0x5,%eax
		mov    %ecx,0xc(%esp)
		mov    %ax,0x10(%esp)
	jump_33400:
		cmp    (%esp),%ebp
		jne    jump_33420
		mov    $0x86,%ebx
		mov    data_15b9cc,%eax
		mov    0x8(%esp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    $0x6,%eax
		call   func_1843d
	jump_33420:
		xor    %eax,%eax
		mov    data_1a00c8,%ax
		cmp    %eax,%ebp
		jge    jump_334b8
		mov    %ebp,%edi
		shl    $0x4,%edi
		add    %ebp,%edi
		shl    $0x3,%edi
		mov    data_19ac83(%edi),%eax
		sar    $0x10,%eax
		shl    $0x6,%eax
		mov    data_15b9cc,%ecx
		mov    data_921ae(%eax),%ebx
		mov    %esi,%edx
		mov    $0xa,%eax
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $data_19ac24,%eax
		add    %edi,%eax
		add    $0x2,%eax
		push   %eax
		mov    0x12(%esp),%eax
		sar    $0x10,%eax
		push   %eax
		push   $0x26
		xor    %ebx,%ebx
		call   func_2c6ab
		mov    data_19ac35(%edi),%bl
		shl    $0x4,%ebx
		add    $data_52a00,%ebx
		add    $0xc,%esp
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		shr    %ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		sub    %ecx,%eax
		mov    $0x4e,%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    0xc(%esp),%edx
		mov    %ecx,%eax
		call   func_18274
	jump_334b8:
		mov    0x8(%esp),%edx
		mov    0xc(%esp),%ebx
		mov    0x4(%esp),%ecx
		inc    %ebp
		add    $0x18,%esi
		add    $0x18,%edx
		add    $0x18,%ebx
		inc    %ecx
		mov    %ebx,0xc(%esp)
		mov    0x10(%esp),%ebx
		mov    %edx,0x8(%esp)
		add    $0x18,%ebx
		mov    %ecx,0x4(%esp)
		mov    %bx,0x10(%esp)
		cmp    $0x6,%ecx
		jl     jump_33400
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_334f9:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    %eax,%ebx
		mov    %esp,%edi
		mov    $data_3120a,%esi
		xor    %dl,%dl
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
	jump_3350e:
		xor    %eax,%eax
		mov    %dl,%al
		mov    (%esp,%eax,1),%al
		xor    %ah,%ah
		cmp    %ax,%bx
		jne    jump_33523
		mov    $0x1,%eax
		jmp    jump_3352c
	jump_33523:
		inc    %dl
		cmp    $0xc,%dl
		jb     jump_3350e
		xor    %al,%al
	jump_3352c:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_33534:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		xor    %edx,%edx
		mov    %edx,0x14(%esp)
		imul   $0x18,0x14(%esp),%eax
		mov    $0x1f,%ebp
		mov    $0x8,%esi
		mov    $0x1a,%ebx
		mov    $0x2e,%ecx
		mov    %ebx,0x8(%esp)
		add    $0x9,%eax
		mov    %ecx,0xc(%esp)
		mov    %ax,0x18(%esp)
	jump_3356f:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    0x14(%esp),%edi
		sub    %edx,%eax
		mov    data_1a4f14,%edx
		add    %edi,%edx
		add    %edx,%eax
		mov    data_15fd2c(%eax),%al
		and    $0xff,%eax
		dec    %eax
		mov    %eax,0x10(%esp)
		test   %eax,%eax
		jl     jump_336be
		mov    (%esp),%ecx
		mov    data_99232(,%eax,4),%edi
		cmp    %ecx,%edx
		jne    jump_335d9
		mov    $0x34,%eax
		mov    data_15b9cc,%ebx
		mov    %esi,%edx
		push   %ebx
		mov    %ebp,%ecx
		mov    $0xc3,%ebx
		call   func_1843d
		jmp    jump_33611
	jump_335d9:
		mov    data_15b9cc,%eax
		push   %eax
		mov    $0x8f,%ecx
		mov    %esi,%edx
		push   $0x17
		xor    %ebx,%ebx
		mov    $0x34,%eax
		call   func_2b56c
		mov    $0x34,%eax
		mov    data_15b9cc,%edx
		mov    $0x6,%ebx
		push   %edx
		mov    $0x8f,%ecx
		mov    %ebp,%edx
		call   func_2b4d6
	jump_33611:
		mov    0xc(%esp),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%edi),%ebx
		mov    0x4(%edi),%edx
		mov    0x2(%edi),%edi
		sar    $0x10,%edx
		sar    $0x10,%edi
		add    %eax,%edx
		lea    0x34(%edi),%eax
		call   func_2b240
		mov    0x10(%esp),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		mov    $data_f10a4,%edx
		add    %eax,%eax
		add    %eax,%edx
		lea    0x1(%edx),%ebx
		mov    %ebx,%edi
		mov    %edx,0x4(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x16(%esp),%eax
		mov    %ecx,%edx
		push   %ebx
		sar    $0x10,%eax
		sar    $0x1f,%edx
		push   %eax
		mov    %ecx,%eax
		sub    %edx,%eax
		sar    %eax
		mov    $0x82,%edx
		shl    $0x3,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x4(%esp),%ebx
		add    $0x10,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x82,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x8(%esp),%edx
		call   func_18274
		jmp    jump_336f7
	jump_336be:
		mov    data_15b9cc,%edx
		push   %edx
		mov    $0x34,%eax
		mov    $0x8f,%ecx
		push   $0x17
		xor    %ebx,%ebx
		mov    %esi,%edx
		call   func_2b56c
		mov    $0x34,%eax
		mov    data_15b9cc,%ebx
		mov    $0x8f,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    $0x6,%ebx
		call   func_2b4d6
	jump_336f7:
		mov    0x8(%esp),%edx
		mov    0x18(%esp),%ebx
		mov    0x14(%esp),%ecx
		add    $0x18,%ebp
		add    $0x18,%esi
		add    $0x18,%edx
		add    $0x18,%ebx
		inc    %ecx
		mov    %bx,0x18(%esp)
		mov    0xc(%esp),%ebx
		mov    %edx,0x8(%esp)
		add    $0x18,%ebx
		mov    %ecx,0x14(%esp)
		mov    %ebx,0xc(%esp)
		cmp    $0x6,%ecx
		jl     jump_3356f
		mov    $0xdc,%eax
		mov    data_15b9cc,%ebp
		mov    $0x64,%edx
		push   %ebp
		mov    $0x118,%ebx
		mov    $0x76,%ecx
		call   func_1843d
		push   $data_52114
		push   $0x66
		push   $0xe6
		mov    $0x78,%edx
		call   func_2c6ab
		add    $0xc,%esp
		mov    data_15b9cc,%eax
		mov    $0x118,%ebx
		push   %eax
		mov    $0x8a,%ecx
		mov    $0xdc,%eax
		call   func_1843d
		push   $data_5211a
		push   $0x7a
	jump_3378b:
		push   $0xe6
		call   func_2c6ab
		add    $0xc,%esp
		add    $0x1c,%esp
	jump_3379b:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_337a2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x234,%esp
		mov    $0x2b,%ecx
		mov    %esp,%edi
		mov    $data_31216,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x29,%ecx
		lea    0xac(%esp),%edi
		mov    $data_312c2,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x29,%ecx
		lea    0x150(%esp),%edi
		mov    $data_31366,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		xor    %ebp,%ebp
		add    %edx,%edx
		mov    %ebp,0x214(%esp)
		mov    data_19763c(%edx),%bx
		mov    %ebp,0x22c(%esp)
		cmp    $0x6,%bx
		jae    jump_33817
		movl   $0x42f60000,0x224(%esp)
		jmp    jump_3383d
	jump_33817:
		xor    %eax,%eax
		mov    %bx,%ax
		mov    %eax,0x230(%esp)
		fildl  0x230(%esp)
		fdivs  data_52120
		fdivrs data_52124
		fstps  0x224(%esp)
	jump_3383d:
		call   func_3197d
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %esi,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %esi,data_1a4f14
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_33534
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%edi
		push   %edi
		mov    $0xc4,%eax
		mov    $0x12,%edx
		push   $0x7c
		mov    $0x3,%ebx
		mov    $0xf,%ecx
		call   func_2b56c
		flds   0x224(%esp)
		mov    $0x12,%edx
		mov    $0xd3,%ebx
		mov    data_15b9cc,%eax
		call   func___CHP
		fistpl 0x230(%esp)
		push   %eax
		mov    0x234(%esp),%ecx
		mov    $0xc4,%eax
		add    $0x12,%ecx
		call   func_1843d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		flds   data_52124
		fsubs  0x224(%esp)
		fstps  0x21c(%esp)
	jump_33919:
		mov    data_7cf20,%edx
		cmp    $0x2,%edx
		je     jump_34026
		je     jump_34026
		lea    0x1f4(%esp),%esi
		call   func_19924
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %ebp,%eax
		mov    $data_7cf20,%edi
		lea    0x1f4(%esp),%esi
		mov    data_15fd2c(%eax),%dl
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		test   %dl,%dl
		je     jump_339b7
		mov    data_7cf24,%ecx
		cmp    $0xdc,%ecx
		jl     jump_339b7
		cmp    $0x118,%ecx
		jg     jump_339b7
		mov    data_7cf28,%edi
		cmp    $0x64,%edi
		jl     jump_339b7
		cmp    $0x76,%edi
		jg     jump_339b7
		mov    $0x1,%ecx
		mov    data_7cf20,%esi
		mov    %ecx,0x218(%esp)
		cmp    %ecx,%esi
		jne    jump_33a0a
		mov    %dl,%al
		and    $0xff,%eax
		jmp    jump_3402d
	jump_339b7:
		mov    data_7cf24,%ebx
		cmp    $0xdc,%ebx
		jl     jump_33a01
		cmp    $0x118,%ebx
		jg     jump_33a01
		mov    data_7cf28,%esi
		cmp    $0x78,%esi
		jl     jump_33a01
		cmp    $0x8a,%esi
		jg     jump_33a01
		mov    $0x2,%edx
		mov    data_7cf20,%ebx
		mov    %edx,0x218(%esp)
		cmp    $0x1,%ebx
		jne    jump_33a0a
		call   func_3197d
		jmp    jump_3402b
	jump_33a01:
		xor    %eax,%eax
		mov    %eax,0x218(%esp)
	jump_33a0a:
		mov    data_7cf20,%edi
		cmp    $0x1,%edi
		je     jump_33a1b
		jne    jump_33f64
	jump_33a1b:
		mov    data_7cf24,%edx
		cmp    $0x34,%edx
		jl     jump_33a58
		cmp    $0xc3,%edx
		jg     jump_33a58
		mov    data_7cf28,%ecx
		cmp    $0x8,%ecx
		jl     jump_33a58
		cmp    $0x97,%ecx
		jg     jump_33a58
		lea    -0x8(%ecx),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a4f14,%ebp
		add    %eax,%ebp
	jump_33a58:
		mov    data_7cf24,%edi
		cmp    $0xc4,%edi
		jl     jump_33cf7
		cmp    $0xd2,%edi
		jg     jump_33cf7
		mov    0x22c(%esp),%eax
		add    $0x12,%eax
		mov    %eax,0x20c(%esp)
		mov    0x20c(%esp),%edx
		cmp    data_7cf28,%edx
		jg     jump_33cf7
		fildl  0x20c(%esp)
		fadds  0x224(%esp)
		fildl  data_7cf28
		fcompp
		fnstsw %ax
		sahf
		ja     jump_33cf7
		mov    data_7cf28,%eax
		mov    %eax,0x228(%esp)
		call   func_19ba9
		mov    data_7cf24,%edx
		add    %edx,%edx
		mov    %edx,%eax
		mov    %esp,%ebx
		call   func_19c3b
	jump_33adb:
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_33b01:
		mov    data_7cf20,%eax
		cmp    $0x1,%eax
		je     jump_33b11
		jne    jump_33ce3
	jump_33b11:
		lea    0x200(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x200(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x228(%esp),%eax
		mov    data_7cf28,%ebx
		cmp    %ebx,%eax
		jge    jump_33ca5
		mov    0x228(%esp),%edx
		mov    %ebx,%eax
		mov    0x22c(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %ebx,0x22c(%esp)
		lea    (%edx,%eax,1),%ecx
		fildl  0x22c(%esp)
		fadds  0x224(%esp)
		mov    %ecx,0x228(%esp)
		fsts   0x220(%esp)
		fcomps data_52124
		fnstsw %ax
		sahf
		jbe    jump_33bbb
		fildl  0x228(%esp)
		flds   0x220(%esp)
		fadds  data_52128
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x228(%esp)
		flds   0x21c(%esp)
		call   func___CHP
		fistpl 0x22c(%esp)
	jump_33bbb:
		flds   0x224(%esp)
		mov    0x22c(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x230(%esp)
		sar    $0x10,%eax
		mov    0x230(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		call   func_3205e
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		mov    %eax,data_1a4f14
		xor    %edx,%edx
		xor    %eax,%eax
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_33534
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%esi
		push   %esi
		mov    $0xc4,%eax
		mov    $0x12,%edx
		push   $0x7c
		mov    $0x3,%ebx
		mov    $0xf,%ecx
		call   func_2b56c
		mov    0x230(%esp),%ecx
		mov    0x22c(%esp),%eax
		mov    data_15b9cc,%edi
		mov    $0xd3,%ebx
		push   %edi
		add    $0x12,%ecx
		lea    0x12(%eax),%edx
		add    %eax,%ecx
		mov    $0xc4,%eax
		call   func_1843d
		mov    %esp,%ebx
		jmp    jump_33adb
	jump_33ca5:
		jle    jump_33b01
		mov    0x22c(%esp),%edi
		sub    %ebx,%eax
		mov    0x228(%esp),%edx
		sub    %eax,%edi
		sub    %eax,%edx
		mov    %edi,0x22c(%esp)
		mov    %edx,0x228(%esp)
		test   %edi,%edi
		jge    jump_33bbb
		xor    %ecx,%ecx
		mov    %ecx,0x22c(%esp)
		jmp    jump_33bbb
	jump_33ce3:
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		jmp    jump_33e97
	jump_33cf7:
		mov    data_7cf24,%ebx
		cmp    $0xc4,%ebx
		jl     jump_33d64
		cmp    $0xd3,%ebx
		jg     jump_33d64
		mov    data_7cf28,%esi
		cmp    $0x8,%esi
		jl     jump_33d64
		cmp    $0x11,%esi
		jg     jump_33d64
		mov    data_1a4f14,%esi
		test   %esi,%esi
		jle    jump_33d30
		lea    -0x1(%esi),%edi
		mov    %edi,data_1a4f14
	jump_33d30:
		mov    data_1a00ca,%ebx
		sar    $0x10,%ebx
		add    %ebx,%ebx
		mov    $0x7b,%eax
		mov    data_19763c(%ebx),%bx
		mov    data_1a4f14,%edx
		and    $0xffff,%ebx
		call   func_320a4
		mov    %eax,0x22c(%esp)
		jmp    jump_33e97
	jump_33d64:
		mov    data_7cf24,%eax
		cmp    $0xc4,%eax
		jl     jump_33dbe
		cmp    $0xd3,%eax
		jg     jump_33dbe
		mov    data_7cf28,%ebx
		cmp    $0x8e,%ebx
		jl     jump_33dbe
		cmp    $0x97,%ebx
		jg     jump_33dbe
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    data_19763c(%eax),%ax
		and    $0xffff,%eax
		mov    data_1a4f14,%ebx
		sub    $0x6,%eax
		cmp    %ebx,%eax
		jle    jump_33d30
		lea    0x1(%ebx),%ecx
		mov    %ecx,data_1a4f14
		jmp    jump_33d30
	jump_33dbe:
		mov    data_7cf24,%esi
		cmp    $0xc4,%esi
		jl     jump_33e97
		cmp    $0xd3,%esi
		jg     jump_33e97
		mov    data_7cf28,%eax
		cmp    $0x12,%eax
		jl     jump_33e97
		cmp    $0x8d,%eax
		jg     jump_33e97
		sub    $0x12,%eax
		mov    %eax,0x22c(%esp)
		fildl  0x22c(%esp)
		fadds  0x224(%esp)
		fsts   0x210(%esp)
		fcomps data_52124
		fnstsw %ax
		sahf
		jbe    jump_33e54
		fildl  0x228(%esp)
		flds   0x210(%esp)
		fadds  data_52128
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x228(%esp)
		flds   0x21c(%esp)
		call   func___CHP
		fistpl 0x22c(%esp)
	jump_33e54:
		flds   0x224(%esp)
		mov    0x22c(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x230(%esp)
		sar    $0x10,%eax
		mov    0x230(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		dec    %ecx
		call   func_3205e
		mov    %eax,data_1a4f14
	jump_33e97:
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_33534
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%edx
		mov    $0xc4,%eax
		push   %edx
		mov    $0x3,%ebx
		mov    $0xf,%ecx
		push   $0x7c
		mov    $0x12,%edx
		mov    0x234(%esp),%esi
		call   func_2b56c
		flds   0x224(%esp)
		mov    $0xc4,%eax
		mov    data_15b9cc,%ebx
		call   func___CHP
		lea    0x12(%esi),%edx
		fistpl 0x230(%esp)
		mov    0x230(%esp),%ecx
		push   %ebx
		add    $0x12,%ecx
		mov    $0xd3,%ebx
		add    %esi,%ecx
		call   func_1843d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_33f64:
		mov    0x214(%esp),%eax
		mov    0x218(%esp),%edi
		cmp    %edi,%eax
		je     jump_33919
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		cmp    $0x1,%edi
		jb     jump_33fbe
		jbe    jump_33fa1
		cmp    $0x2,%edi
		je     jump_33faa
		jmp    jump_33fbe
	jump_33fa1:
		push   $data_52114
		push   $0x66
		jmp    jump_33fb1
	jump_33faa:
		push   $data_5211a
		push   $0x7a
	jump_33fb1:
		push   $0xe6
		call   func_2c6ab
		add    $0xc,%esp
	jump_33fbe:
		mov    $0x4,%eax
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		mov    0x214(%esp),%ecx
		call   func_2c1c9
		cmp    $0x1,%ecx
		jb     jump_34004
		jbe    jump_33fe7
		cmp    $0x2,%ecx
		je     jump_33ff0
		jmp    jump_34004
	jump_33fe7:
		push   $data_52114
		push   $0x66
		jmp    jump_33ff7
	jump_33ff0:
		push   $data_5211a
		push   $0x7a
	jump_33ff7:
		push   $0xe6
		call   func_2c6ab
		add    $0xc,%esp
	jump_34004:
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		mov    0x218(%esp),%eax
		mov    %eax,0x214(%esp)
		jmp    jump_33919
	jump_34026:
		call   func_319db
	jump_3402b:
		xor    %eax,%eax
	jump_3402d:
		add    $0x234,%esp
		jmp    jump_3379b


/*----------------------------------------------------------------*/
func_34038:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x18,%esp
		push   %eax
		xor    %edx,%edx
		mov    %edx,0x14(%esp)
		imul   $0x18,0x14(%esp),%eax
		mov    $0x1f,%ebp
		mov    $0x8,%esi
		mov    $0x1a,%ebx
		mov    $0x2e,%ecx
		mov    %ebx,0x8(%esp)
		add    $0x9,%eax
		mov    %ecx,0xc(%esp)
		mov    %ax,0x18(%esp)
	jump_34073:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    0x14(%esp),%edi
		sub    %edx,%eax
		mov    data_1a4f14,%edx
		add    %edi,%edx
		add    %edx,%eax
		mov    data_15fd2c(%eax),%al
		and    $0xff,%eax
		dec    %eax
		mov    %eax,0x10(%esp)
		test   %eax,%eax
		jl     jump_341c2
		mov    (%esp),%ecx
		mov    data_99232(,%eax,4),%edi
		cmp    %ecx,%edx
		jne    jump_340dd
		mov    $0x34,%eax
		mov    data_15b9cc,%ebx
		mov    %esi,%edx
		push   %ebx
		mov    %ebp,%ecx
		mov    $0xc3,%ebx
		call   func_1843d
		jmp    jump_34115
	jump_340dd:
		mov    data_15b9cc,%eax
		push   %eax
		mov    $0x8f,%ecx
		mov    %esi,%edx
		push   $0x17
		xor    %ebx,%ebx
		mov    $0x34,%eax
		call   func_2b56c
		mov    $0x34,%eax
		mov    data_15b9cc,%edx
		mov    $0x6,%ebx
		push   %edx
		mov    $0x8f,%ecx
		mov    %ebp,%edx
		call   func_2b4d6
	jump_34115:
		mov    0xc(%esp),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%edi),%ebx
		mov    0x4(%edi),%edx
		mov    0x2(%edi),%edi
		sar    $0x10,%edx
		sar    $0x10,%edi
		add    %eax,%edx
		lea    0x34(%edi),%eax
		call   func_2b240
		mov    0x10(%esp),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		mov    $data_f10a4,%edx
		add    %eax,%eax
		add    %eax,%edx
		lea    0x1(%edx),%ebx
		mov    %ebx,%edi
		mov    %edx,0x4(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x16(%esp),%eax
		mov    %ecx,%edx
		push   %ebx
		sar    $0x10,%eax
		sar    $0x1f,%edx
		push   %eax
		mov    %ecx,%eax
		sub    %edx,%eax
		sar    %eax
		mov    $0x82,%edx
		shl    $0x3,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x4(%esp),%ebx
		add    $0x10,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0x82,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x8(%esp),%edx
		call   func_18274
		jmp    jump_341fb
	jump_341c2:
		mov    data_15b9cc,%edx
		push   %edx
		mov    $0x34,%eax
		mov    $0x8f,%ecx
		push   $0x17
		xor    %ebx,%ebx
		mov    %esi,%edx
		call   func_2b56c
		mov    $0x34,%eax
		mov    data_15b9cc,%ebx
		mov    $0x8f,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    $0x6,%ebx
		call   func_2b4d6
	jump_341fb:
		mov    0x8(%esp),%edx
		mov    0x18(%esp),%ebx
		mov    0x14(%esp),%ecx
		add    $0x18,%ebp
		add    $0x18,%esi
		add    $0x18,%edx
		add    $0x18,%ebx
		inc    %ecx
		mov    %bx,0x18(%esp)
		mov    0xc(%esp),%ebx
		mov    %edx,0x8(%esp)
		add    $0x18,%ebx
		mov    %ecx,0x14(%esp)
		mov    %ebx,0xc(%esp)
		cmp    $0x6,%ecx
		jl     jump_34073
		mov    $0xdc,%eax
		mov    data_15b9cc,%ebp
		mov    $0x64,%edx
		push   %ebp
		mov    $0x118,%ebx
		mov    $0x76,%ecx
		call   func_1843d
		push   $data_5212c
		push   $0x66
		jmp    jump_3378b


/*----------------------------------------------------------------*/
func_34261:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x234,%esp
		mov    $0x2b,%ecx
		mov    %esp,%edi
		mov    $data_3140a,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x29,%ecx
		lea    0xac(%esp),%edi
		mov    $data_314b6,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x29,%ecx
		lea    0x150(%esp),%edi
		mov    $data_3155a,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		xor    %ebp,%ebp
		add    %edx,%edx
		mov    %ebp,0x214(%esp)
		mov    data_19763c(%edx),%bx
		mov    %ebp,0x22c(%esp)
		cmp    $0x6,%bx
		jae    jump_342d6
		movl   $0x42f60000,0x224(%esp)
		jmp    jump_342fc
	jump_342d6:
		xor    %eax,%eax
		mov    %bx,%ax
		mov    %eax,0x230(%esp)
		fildl  0x230(%esp)
		fdivs  data_52133
		fdivrs data_52137
		fstps  0x224(%esp)
	jump_342fc:
		call   func_3197d
		call   func_319db
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %esi,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %esi,data_1a4f14
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_34038
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%edi
		push   %edi
		mov    $0xc4,%eax
		mov    $0x12,%edx
		push   $0x7c
		mov    $0x3,%ebx
		mov    $0xf,%ecx
		call   func_2b56c
		flds   0x224(%esp)
		mov    $0x12,%edx
		mov    $0xd3,%ebx
		mov    data_15b9cc,%eax
		call   func___CHP
		fistpl 0x230(%esp)
		push   %eax
		mov    0x234(%esp),%ecx
		mov    $0xc4,%eax
		add    $0x12,%ecx
		call   func_1843d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		flds   data_52137
		fsubs  0x224(%esp)
		fstps  0x21c(%esp)
	jump_343dd:
		lea    0x1f4(%esp),%esi
		call   func_19924
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %ebp,%eax
		mov    $data_7cf20,%edi
		lea    0x1f4(%esp),%esi
		mov    data_15fd2c(%eax),%dl
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		test   %dl,%dl
		je     jump_3446e
		mov    data_7cf24,%edx
		cmp    $0xdc,%edx
		jl     jump_3446e
		cmp    $0x118,%edx
		jg     jump_3446e
		mov    data_7cf28,%ecx
		cmp    $0x64,%ecx
		jl     jump_3446e
		cmp    $0x76,%ecx
		jg     jump_3446e
		mov    $0x1,%edx
		mov    data_7cf20,%ebx
		mov    %edx,0x218(%esp)
		cmp    %edx,%ebx
		jne    jump_344c1
		xor    %dh,%dh
		mov    %dh,data_15fd2c(%eax)
		mov    %ebp,%eax
		call   func_3767b
		jmp    jump_3402d
	jump_3446e:
		mov    data_7cf24,%edi
		cmp    $0xdc,%edi
		jl     jump_344b8
		cmp    $0x118,%edi
		jg     jump_344b8
		mov    data_7cf28,%edx
		cmp    $0x78,%edx
		jl     jump_344b8
		cmp    $0x8a,%edx
		jg     jump_344b8
		mov    $0x2,%esi
		mov    data_7cf20,%edi
		mov    %esi,0x218(%esp)
		cmp    $0x1,%edi
		jne    jump_344c1
		call   func_3197d
		jmp    jump_3402d
	jump_344b8:
		xor    %ecx,%ecx
		mov    %ecx,0x218(%esp)
	jump_344c1:
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		je     jump_344d2
		jne    jump_34af4
	jump_344d2:
		mov    data_7cf24,%edi
		cmp    $0x34,%edi
		jl     jump_3450f
		cmp    $0xc3,%edi
		jg     jump_3450f
		mov    data_7cf28,%edx
		cmp    $0x8,%edx
		jl     jump_3450f
		cmp    $0x97,%edx
		jg     jump_3450f
		sub    $0x8,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a4f14,%ebp
		add    %eax,%ebp
	jump_3450f:
		mov    data_7cf24,%ecx
		cmp    $0xc4,%ecx
		jl     jump_34889
		cmp    $0xd2,%ecx
		jg     jump_34889
		mov    0x22c(%esp),%eax
		add    $0x12,%eax
		mov    %eax,0x210(%esp)
		mov    0x210(%esp),%edi
		cmp    data_7cf28,%edi
		jg     jump_34889
		fildl  0x210(%esp)
		fadds  0x224(%esp)
		fildl  data_7cf28
		fcompp
		fnstsw %ax
		sahf
		ja     jump_34889
		mov    data_7cf28,%eax
		mov    %eax,0x228(%esp)
		call   func_19ba9
		mov    data_7cf24,%edx
		add    %edx,%edx
		mov    %edx,%eax
		mov    %esp,%ebx
		call   func_19c3b
	jump_34592:
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		call   func_2b44f
	jump_345b8:
		mov    data_7cf20,%edi
		cmp    $0x1,%edi
		je     jump_345c9
		jne    jump_34875
	jump_345c9:
		lea    0x200(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x200(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x228(%esp),%eax
		mov    data_7cf28,%edx
		cmp    %edx,%eax
		jge    jump_3475d
		mov    0x228(%esp),%edi
		mov    %edx,%eax
		mov    0x22c(%esp),%edx
		sub    %edi,%eax
		add    %eax,%edx
		mov    %edx,0x22c(%esp)
		lea    (%edi,%eax,1),%ebx
		fildl  0x22c(%esp)
		fadds  0x224(%esp)
		mov    %ebx,0x228(%esp)
		fsts   0x220(%esp)
		fcomps data_52137
		fnstsw %ax
		sahf
		jbe    jump_34673
		fildl  0x228(%esp)
		flds   0x220(%esp)
		fadds  data_5213b
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x228(%esp)
		flds   0x21c(%esp)
		call   func___CHP
		fistpl 0x22c(%esp)
	jump_34673:
		flds   0x224(%esp)
		mov    0x22c(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x230(%esp)
		sar    $0x10,%eax
		mov    0x230(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		call   func_3205e
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		mov    %eax,data_1a4f14
		xor    %edx,%edx
		xor    %eax,%eax
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_34038
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%ecx
		mov    $0xc4,%eax
		push   %ecx
		mov    $0x12,%edx
		mov    $0x3,%ebx
		push   $0x7c
		mov    $0xf,%ecx
		mov    0x234(%esp),%edi
		call   func_2b56c
		mov    0x230(%esp),%ecx
		mov    $0xc4,%eax
		mov    data_15b9cc,%esi
		mov    $0xd3,%ebx
		push   %esi
		add    $0x12,%ecx
		lea    0x12(%edi),%edx
		add    %edi,%ecx
	jump_34751:
		call   func_1843d
		mov    %esp,%ebx
		jmp    jump_34592
	jump_3475d:
		jle    jump_345b8
		mov    0x22c(%esp),%esi
		sub    %edx,%eax
		mov    0x228(%esp),%edi
		sub    %eax,%esi
		sub    %eax,%edi
		mov    %esi,0x22c(%esp)
		mov    %edi,0x228(%esp)
		test   %esi,%esi
		jge    jump_34792
		xor    %edx,%edx
		mov    %edx,0x22c(%esp)
	jump_34792:
		flds   0x224(%esp)
		mov    0x22c(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x230(%esp)
		sar    $0x10,%eax
		mov    0x230(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		call   func_3205e
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		mov    %eax,data_1a4f14
		xor    %edx,%edx
		xor    %eax,%eax
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_34038
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%ebx
		mov    $0xc4,%eax
		push   %ebx
		mov    $0x12,%edx
		mov    $0xf,%ecx
		push   $0x7c
		mov    $0x3,%ebx
		mov    0x234(%esp),%esi
		call   func_2b56c
		mov    data_15b9cc,%ecx
		mov    $0xc4,%eax
		push   %ecx
		mov    0x234(%esp),%ecx
		mov    $0xd3,%ebx
		add    $0x12,%ecx
		lea    0x12(%esi),%edx
		add    %esi,%ecx
		jmp    jump_34751
	jump_34875:
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		jmp    jump_34a28
	jump_34889:
		mov    data_7cf24,%eax
		cmp    $0xc4,%eax
		jl     jump_348f3
		cmp    $0xd3,%eax
		jg     jump_348f3
		mov    data_7cf28,%ebx
		cmp    $0x8,%ebx
		jl     jump_348f3
		cmp    $0x11,%ebx
		jg     jump_348f3
		mov    data_1a4f14,%ecx
		test   %ecx,%ecx
		jle    jump_348bf
		lea    -0x1(%ecx),%esi
		mov    %esi,data_1a4f14
	jump_348bf:
		mov    data_1a00ca,%ebx
		sar    $0x10,%ebx
		add    %ebx,%ebx
		mov    $0x7b,%eax
		mov    data_19763c(%ebx),%bx
		mov    data_1a4f14,%edx
		and    $0xffff,%ebx
		call   func_320a4
		mov    %eax,0x22c(%esp)
		jmp    jump_34a28
	jump_348f3:
		mov    data_7cf24,%esi
		cmp    $0xc4,%esi
		jl     jump_3494d
		cmp    $0xd3,%esi
		jg     jump_3494d
		mov    data_7cf28,%eax
		cmp    $0x8e,%eax
		jl     jump_3494d
		cmp    $0x97,%eax
		jg     jump_3494d
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    data_19763c(%eax),%ax
		and    $0xffff,%eax
		mov    data_1a4f14,%edx
		sub    $0x6,%eax
		cmp    %edx,%eax
		jle    jump_348bf
		lea    0x1(%edx),%ebx
		mov    %ebx,data_1a4f14
		jmp    jump_348bf
	jump_3494d:
		mov    data_7cf24,%ebx
		cmp    $0xc4,%ebx
		jl     jump_34a28
		cmp    $0xd3,%ebx
		jg     jump_34a28
		mov    data_7cf28,%esi
		cmp    $0x12,%esi
		jl     jump_34a28
		cmp    $0x8d,%esi
		jg     jump_34a28
		lea    -0x12(%esi),%eax
		mov    %eax,0x22c(%esp)
		fildl  0x22c(%esp)
		fadds  0x224(%esp)
		fsts   0x20c(%esp)
		fcomps data_52137
		fnstsw %ax
		sahf
		jbe    jump_349e5
		fildl  0x228(%esp)
		flds   0x20c(%esp)
		fadds  data_5213b
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x228(%esp)
		flds   0x21c(%esp)
		call   func___CHP
		fistpl 0x22c(%esp)
	jump_349e5:
		flds   0x224(%esp)
		mov    0x22c(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x230(%esp)
		sar    $0x10,%eax
		mov    0x230(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		dec    %ecx
		call   func_3205e
		mov    %eax,data_1a4f14
	jump_34a28:
		call   func_19ba9
		mov    $data_172224,%ebx
		mov    data_15b9cc,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		call   w_game_copy
		mov    $0x8,%edx
		mov    %ebp,%eax
		lea    0xac(%esp),%ebx
		call   func_34038
		mov    $0xc4,%eax
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    $0xc4,%eax
		mov    $0x8e,%edx
		lea    0x150(%esp),%ebx
		mov    data_15b9cc,%ecx
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		push   %eax
		mov    $0x12,%edx
		mov    $0x3,%ebx
		push   $0x7c
		mov    $0xf,%ecx
		mov    $0xc4,%eax
		call   func_2b56c
		flds   0x224(%esp)
		mov    0x22c(%esp),%ebx
		mov    $0xc4,%eax
		mov    data_15b9cc,%edx
		call   func___CHP
		fistpl 0x230(%esp)
		mov    0x230(%esp),%ecx
		push   %edx
		add    $0x12,%ecx
		lea    0x12(%ebx),%edx
		add    %ebx,%ecx
		mov    $0xd3,%ebx
		call   func_1843d
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_34af4:
		mov    0x214(%esp),%eax
		mov    0x218(%esp),%ecx
		cmp    %ecx,%eax
		je     jump_343dd
		call   func_19ba9
		mov    $0x4,%eax
		mov    $0x100,%edx
		mov    $0xff,%ebx
		call   func_2c1c9
		cmp    $0x1,%ecx
		jne    jump_34b3c
		push   $data_5212c
		push   $0x66
		push   $0xe6
		call   func_2c6ab
		add    $0xc,%esp
	jump_34b3c:
		mov    $0x4,%eax
		mov    $0x1000,%edx
		mov    $0xff,%ebx
		mov    0x214(%esp),%edi
		call   func_2c1c9
		cmp    $0x1,%edi
		jne    jump_34b70
		push   $data_5212c
		push   $0x66
		push   $0xe6
		call   func_2c6ab
		add    $0xc,%esp
	jump_34b70:
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		mov    0x218(%esp),%eax
		mov    %eax,0x214(%esp)
		jmp    jump_343dd


/*----------------------------------------------------------------*/
func_34b92:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x10,%esp
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_201cf
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		mov    $0x140,%ecx
		xor    %eax,%eax
		push   $0xc8
		xor    %edx,%edx
		xor    %ebx,%ebx
		call   func_2b56c
		mov    $0xbf,%ebp
	jump_34bcb:
		mov    $data_5213f,%eax
		mov    data_15b9cc,%edx
		call   func_2e46b
		mov    game_cfg_speed,%al
		test   %al,%al
		jbe    jump_34bea
		cmp    $0x1,%al
		je     jump_34c01
		jmp    jump_34c18
	jump_34bea:
		mov    $0x3e,%eax
		mov    $0x31,%edx
		mov    $data_78788,%ebx
		mov    data_15b9cc,%ecx
		jmp    jump_34c13
	jump_34c01:
		mov    $0x31,%edx
		mov    $data_78d64,%ebx
		mov    data_15b9cc,%ecx
		mov    %ebp,%eax
	jump_34c13:
		call   func_2b240
	jump_34c18:
		cmpb   $0x1,game_cfg_music
		jne    jump_34c35
		mov    $0x51,%edx
		mov    $data_7991c,%ebx
		mov    data_15b9cc,%ecx
		mov    %ebp,%eax
		jmp    jump_34c4a
	jump_34c35:
		mov    $0x3e,%eax
		mov    $0x51,%edx
		mov    $data_79340,%ebx
		mov    data_15b9cc,%ecx
	jump_34c4a:
		call   func_2b240
		cmpb   $0x1,game_cfg_sound
		jne    jump_34c6c
		mov    $0x71,%edx
		mov    $data_7a4d4,%ebx
		mov    data_15b9cc,%ecx
		mov    %ebp,%eax
		jmp    jump_34c81
	jump_34c6c:
		mov    $0x3e,%eax
		mov    $0x71,%edx
		mov    $data_79ef8,%ebx
		mov    data_15b9cc,%ecx
	jump_34c81:
		call   func_2b240
		mov    $0x5f,%eax
		mov    $0xa2,%edx
		mov    $data_7b668,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0xbc,%eax
		mov    $0xa2,%edx
		mov    $data_7bc44,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_34cd3:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_34cd3
		mov    data_7cf24,%ebx
		cmp    $0x3e,%ebx
		jl     jump_34d26
		cmp    $0x80,%ebx
		jg     jump_34d26
		mov    data_7cf28,%esi
		cmp    $0x31,%esi
		jl     jump_34d26
		cmp    $0x4e,%esi
		jg     jump_34d26
		xor    %al,%al
		mov    %al,game_cfg_speed
		movl   $0x895440,data_82720
		jmp    jump_34bcb
	jump_34d26:
		mov    data_7cf24,%eax
		cmp    %eax,%ebp
		jg     jump_34d5b
		cmp    $0x101,%eax
		jg     jump_34d5b
		mov    data_7cf28,%ebx
		cmp    $0x31,%ebx
		jl     jump_34d5b
		cmp    $0x4e,%ebx
		jg     jump_34d5b
		mov    $0x1,%ch
		xor    %edi,%edi
		mov    %ch,game_cfg_speed
		mov    %edi,data_82720
		jmp    jump_34bcb
	jump_34d5b:
		mov    data_7cf24,%esi
		cmp    $0x3e,%esi
		jl     jump_34d8f
		cmp    $0x80,%esi
		jg     jump_34d8f
		mov    data_7cf28,%eax
		cmp    $0x51,%eax
		jl     jump_34d8f
		cmp    $0x6c,%eax
		jg     jump_34d8f
		xor    %cl,%cl
		mov    %cl,game_cfg_music
		call   func_39ed7
		jmp    jump_34bcb
	jump_34d8f:
		mov    data_7cf24,%ebx
		cmp    %ebx,%ebp
		jg     jump_34dd2
		cmp    $0x101,%ebx
		jg     jump_34dd2
		mov    data_7cf28,%esi
		cmp    $0x51,%esi
		jl     jump_34dd2
		cmp    $0x6c,%esi
		jg     jump_34dd2
		mov    $0x1,%bh
		mov    $0x1,%edx
		mov    %bh,game_cfg_music
		call   func_397dd
		mov    data_82718,%eax
		call   func_39e5e
		jmp    jump_34bcb
	jump_34dd2:
		mov    data_7cf24,%eax
		cmp    $0x3e,%eax
		jl     jump_34e03
		cmp    $0x80,%eax
		jg     jump_34e03
		mov    data_7cf28,%ebx
		cmp    $0x71,%ebx
		jl     jump_34e03
		cmp    $0x8e,%ebx
		jg     jump_34e03
		xor    %bl,%bl
		mov    %bl,game_cfg_sound
		jmp    jump_34bcb
	jump_34e03:
		mov    data_7cf24,%esi
		cmp    %esi,%ebp
		jg     jump_34e32
		cmp    $0x101,%esi
		jg     jump_34e32
		mov    data_7cf28,%eax
		cmp    $0x71,%eax
		jl     jump_34e32
		cmp    $0x8e,%eax
		jg     jump_34e32
		movb   $0x1,game_cfg_sound
		jmp    jump_34bcb
	jump_34e32:
		mov    data_7cf24,%ebx
		cmp    $0x21,%ebx
		jl     jump_34e5c
		cmp    $0x47,%ebx
		jg     jump_34e5c
		mov    data_7cf28,%esi
		cmp    $0x97,%esi
		jl     jump_34e5c
		cmp    $0xa5,%esi
		jle    jump_34f50
	jump_34e5c:
		mov    data_7cf24,%eax
		cmp    $0xf8,%eax
		jl     jump_34cd3
		cmp    $0x11e,%eax
		jg     jump_34cd3
		mov    data_7cf28,%ebx
		cmp    $0x97,%ebx
		jl     jump_34cd3
		cmp    $0xa5,%ebx
		jg     jump_34cd3
		mov    $0xf8,%eax
		mov    $0x97,%edx
		mov    $data_7b08c,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_1199e
		call   func_3197d
		mov    data_15b9cc,%esi
		push   %esi
		mov    $0x140,%ecx
		xor    %edx,%edx
		push   $0xc8
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   func_2b56c
		mov    $data_5214a,%eax
		call   func_2d4a3
		cmp    $0x1,%eax
		jne    jump_34bcb
		mov    $data_52154,%eax
		mov    $0x180,%edx
		call   w_dos_creat
		mov    %eax,0xc(%esp)
		call   w_dos_close
		push   $0x201
		push   $data_52154
		mov    $0x2,%ebx
		call   w_dos_open
		add    $0x8,%esp
		lea    0xc(%esp),%edx
		mov    %eax,0xc(%esp)
		call   w_dos_write
		mov    0xc(%esp),%eax
		call   w_dos_close
		mov    $data_520ee,%eax
		call   func_18fd0
		jmp    jump_34bcb
	jump_34f50:
		mov    $0x21,%eax
		mov    $0x97,%edx
		mov    $data_7aab0,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    $0x1,%ah
#if 1
    pushl  video_buffer
#else
		push   $0xa0000
#endif
		mov    $0x140,%ecx
		xor    %edx,%edx
		xor    %ebx,%ebx
		push   $0xc8
		mov    %ah,data_15ba22
		xor    %eax,%eax
		call   func_2b56c
		mov    $data_15b2b8,%eax
		mov    $0xff,%ebx
		xor    %edx,%edx
		call   func_20118
		add    $0x10,%esp
		jmp    jump_3379b


/*----------------------------------------------------------------*/
func_34fbe:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0xc,%esp
		mov    %eax,%ebp
		mov    %ebp,%edi
		call   func_3197d
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%edi
		imul   $0x5,%edi,%edi
		mov    $0xb,%eax
		call   func_189fa
		movswl %cx,%eax
		mov    %eax,%esi
		mov    $0x96,%ebx
		shl    $0x2,%esi
		mov    data_15b9cc,%edx
		add    %eax,%esi
		mov    $0x78,%ecx
		sub    %esi,%ebx
		shl    $0x3,%eax
		mov    %ebx,%esi
		add    $0x1e,%ebx
		push   %edx
		add    %eax,%ebx
		mov    $0x55,%edx
		add    $0x4,%ebx
		lea    0x1a(%esi),%eax
		call   func_1843d
		mov    $0xd,%eax
		call   func_189fa
		mov    $0x96,%eax
		sub    %edi,%eax
		push   %ebp
		add    $0x1e,%eax
		push   $0x5f
		cwtl
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_35057:
		mov    %esp,%esi
		mov    $data_7cf20,%edi
		call   func_19924
		mov    %esp,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		jne    jump_35057
		call   func_3197d
		add    $0xc,%esp
		jmp    jump_3379b


/*----------------------------------------------------------------*/
func_3507e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x340,%esp
		mov    $0xcd,%ecx
		mov    %esp,%edi
		mov    $data_315fe,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %esp,%ebx
		mov    data_15b9cc,%ecx
		movswl %ax,%esi
		movswl %dx,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   func_2b240
		lea    0x338(%esp),%edx
		mov    $0xa,%ebx
		mov    data_19ff44,%eax
		call   func_itoa_
		mov    $0x1,%eax
		call   func_18136
		lea    0x5(%edi),%edx
		lea    0x338(%esp),%edi
		mov    data_19ff44,%ebx
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%eax
		shl    $0x2,%eax
		add    %eax,%ecx
		lea    0x23(%esi),%eax
		sub    %ecx,%eax
		mov    $0xa,%ecx
		call   func_1822d
		add    $0x340,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_35109:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		call   func_3197d
		mov    $0x4,%eax
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		call   func_2b44f
		mov    data_19ff44,%edx
		movswl %bx,%eax
		add    %eax,%edx
		mov    %edx,data_19ff44
		xor    %edx,%edx
		call   func_1199e
		mov    game_cfg_sound,%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    $0x1,%ebx
		add    %edx,%eax
		mov    $0x2,%edx
		add    %eax,%eax
		call   func_394d1
		mov    $0x4,%eax
		mov    %eax,%edx
		call   func_3507e
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_1189f
		pop    %edx
		pop    %ebx
		ret
.data
data_3517c:
		.fill   0xd
data_35189:
		.ascii  "\x0e\x00\x0c\x00\xff\x06\x06\xff"
		.ascii  "\xff\x07\x06\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x04\x03\x06\x07\x05"
		.ascii  "\x04\x06\x06\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x05\x02\x06\x03\x05\x02"
		.ascii  "\x03\x06\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x03\x05\x02\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x07"
		.ascii  "\x06\x05\x02\x04\x05\x04\x06\x07"
		.ascii  "\xff\xff\xff\xff\x07\x04\x07\x07"
		.ascii  "\x06\x06\x03\x01\x03\x04\x06\x07"
		.ascii  "\xff\xff\x07\x03\x04\x06\x07\x05"
		.ascii  "\x01\x03\x05\x07\x00\x00\xff\xff"
		.ascii  "\xff\x07\x07\x07\x07\x06\x02\x06"
		.ascii  "\x00\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x07\x04\x00\x00\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\x06\x00\x07\x06\x05\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x00\x00\x07\x07\x00\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x00"
		.ascii  "\x00\x00\xff\xff"
		.fill   0x62
data_35297:
		.ascii  "\x01\x01\x01\x01\x01"
.text


/*----------------------------------------------------------------*/
func_3529c:
/*----------------------------------------------------------------*/
		sub    $0xc,%esp
		push   %edx
		sub    %ebx,%eax
		mov    %eax,0x4(%esp)
		fildl  0x4(%esp)
		fildl  (%esp)
		fdivrp %st,%st(1)
		sub    $0x5,%ecx
		mov    %ecx,0x4(%esp)
		fildl  0x4(%esp)
		fdivp  %st,%st(1)
		fstps  0x8(%esp)
		cmp    $0x7b,%ebx
		jne    jump_352cd
		xor    %edx,%edx
		mov    %edx,0xc(%esp)
		jmp    jump_352da
	jump_352cd:
		flds   0x8(%esp)
		call   func___CHP
		fistpl 0xc(%esp)
	jump_352da:
		mov    0xc(%esp),%eax
		add    $0x10,%esp
		ret


/*----------------------------------------------------------------*/
func_352e2:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x20,%esp
		push   %eax
		mov    %edx,%ebp
		lea    0x4(%esp),%edi
		mov    $data_3517c,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movzbl data_19ac7f(,%eax,8),%esi
		test   %esi,%esi
		je     jump_3534a
		mov    data_9922e(,%esi,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x8f,%edx
		add    $0x5,%eax
		call   func_2b240
	jump_3534a:
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movzbl data_19ac7e(,%eax,8),%esi
		test   %esi,%esi
		je     jump_3538a
		mov    data_9922e(,%esi,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x8f,%edx
		add    $0x25,%eax
		call   func_2b240
	jump_3538a:
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movzbl data_19ac81(,%eax,8),%esi
		test   %esi,%esi
		je     jump_353ca
		mov    data_9922e(,%esi,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x8f,%edx
		add    $0x44,%eax
		call   func_2b240
	jump_353ca:
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movzbl data_19ac82(,%eax,8),%esi
		test   %esi,%esi
		je     jump_3540a
		mov    data_9922e(,%esi,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x8f,%edx
		add    $0x5f,%eax
		call   func_2b240
	jump_3540a:
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		movzbl data_19ac83(,%eax,8),%esi
		test   %esi,%esi
		je     jump_3544a
		mov    data_9922e(,%esi,4),%eax
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    $0x8f,%edx
		add    $0x7f,%eax
		call   func_2b240
	jump_3544a:
		mov    $0x1b,%eax
		mov    $0x21,%edx
		mov    $data_52164,%ebx
		call   func_18136
		mov    $0x44,%eax
		call   func_18274
		mov    $0x21,%eax
		mov    $0x2a,%edx
		mov    $data_52168,%ebx
		call   func_18136
		mov    $0x44,%eax
		call   func_18274
		mov    $0x11,%eax
		mov    $0x33,%edx
		mov    $data_5216c,%ebx
		call   func_18136
		mov    $0x41,%eax
		call   func_18274
		mov    $0x1,%eax
		call   func_18136
		mov    (%esp),%eax
		mov    %eax,%esi
		shl    $0x4,%esi
		add    %eax,%esi
		shl    $0x3,%esi
		mov    data_19ac70(%esi),%eax
		mov    %eax,%edx
		mov    $0x64,%ebx
		sar    $0x1f,%edx
		idiv   %ebx
		push   %eax
		mov    data_19ac6c(%esi),%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		push   %eax
		push   $data_52179
		lea    0x10(%esp),%eax
		push   %eax
		mov    $0x21,%edx
		call   w_sprintf
		add    $0x10,%esp
		lea    0x4(%esp),%ebx
		mov    $0x5b,%eax
		call   func_18274
		mov    data_19ac74(%esi),%eax
		sar    $0x10,%eax
		push   %eax
		mov    data_19ac72(%esi),%eax
		sar    $0x10,%eax
		push   %eax
		push   $data_52179
		lea    0x10(%esp),%eax
		push   %eax
		mov    $0x2a,%edx
		call   w_sprintf
		add    $0x10,%esp
		lea    0x4(%esp),%ebx
		mov    $0x5b,%eax
		call   func_18274
		xor    %eax,%eax
		mov    data_19ac61(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    data_19ac4f(%esi),%al
		push   %eax
		push   $data_52181
		lea    0x10(%esp),%eax
		push   %eax
		call   w_sprintf
		add    $0x10,%esp
		mov    $0x56,%eax
		mov    $0x33,%edx
		lea    0x4(%esp),%ebx
		call   func_18274
		mov    $data_19ac24,%eax
		add    %esi,%eax
		add    $0x2,%eax
		push   %eax
		push   $0xb
		push   $0x3f
		mov    $0x43,%edx
		call   func_2c6ab
		mov    $0x1f,%eax
		mov    data_19ac66(%esi),%ebx
		add    $0xc,%esp
		sar    $0x10,%ebx
		call   func_1822d
		mov    $0x4f,%eax
		xor    %ebx,%ebx
		mov    $0x43,%edx
		mov    data_19ac64(%esi),%bl
		call   func_1822d
		mov    $0x7d,%eax
		xor    %ebx,%ebx
		mov    $0x43,%edx
		mov    data_19ac65(%esi),%bl
		call   func_1822d
		mov    $0x1f,%eax
		mov    data_19ac68(%esi),%ebx
		mov    $0x57,%edx
		sar    $0x10,%ebx
		call   func_1822d
		mov    $0x4f,%eax
		xor    %ebx,%ebx
		mov    $0x57,%edx
		mov    data_19ac66(%esi),%bl
		call   func_1822d
		mov    $0x7d,%eax
		xor    %ebx,%ebx
		mov    $0x57,%edx
		mov    data_19ac67(%esi),%bl
		call   func_1822d
		mov    $0x20,%eax
		mov    $0x86,%edx
		xor    %esi,%esi
		call   func_3507e
		imul   $0x18,%esi,%eax
		mov    %ebp,0x18(%esp)
		mov    $0x16,%ebp
		mov    $0x2b,%edx
		add    $0x6,%eax
		mov    %edx,0x1c(%esp)
		mov    %ax,0x20(%esp)
	jump_35644:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    0x18(%esp),%ebx
		sub    %edx,%eax
		add    %ebx,%eax
		movzbl data_15fd2c(%eax),%edi
		dec    %edi
		test   %edi,%edi
		jl     jump_3572a
		mov    data_15b9cc,%edx
		mov    data_99232(,%edi,4),%eax
		mov    0x1c(%esp),%ecx
		mov    %edx,0x14(%esp)
		mov    0xa(%eax),%ebx
		mov    0x4(%eax),%edx
		mov    0x2(%eax),%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		add    %ecx,%edx
		mov    0x14(%esp),%ecx
		add    $0xa7,%eax
		call   func_2b240
		mov    %edi,%eax
		shl    $0x5,%eax
		add    %edi,%eax
		mov    $data_f10a4,%edx
		add    %eax,%eax
		add    %eax,%edx
		lea    0x1(%edx),%ebx
		mov    %ebx,%edi
		mov    %edx,0x14(%esp)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x1e(%esp),%eax
		mov    %ecx,%edx
		push   %ebx
		sar    $0x10,%eax
		sar    $0x1f,%edx
		push   %eax
		mov    %ecx,%eax
		sub    %edx,%eax
		sar    %eax
		mov    $0xf1,%edx
		shl    $0x3,%eax
		sub    %eax,%edx
		movswl %dx,%eax
		push   %eax
		call   func_2c6ab
		add    $0xc,%esp
		mov    0x14(%esp),%ebx
		add    $0x10,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x1f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $0xf1,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %ebp,%edx
		call   func_18274
	jump_3572a:
		mov    0x18(%esp),%edi
		mov    0x20(%esp),%edx
		mov    0x1c(%esp),%eax
		add    $0x18,%ebp
		inc    %esi
		inc    %edi
		add    $0x18,%edx
		add    $0x18,%eax
		mov    %edi,0x18(%esp)
		mov    %dx,0x20(%esp)
		mov    %eax,0x1c(%esp)
		cmp    $0x6,%esi
		jl     jump_35644
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    data_19ac34(%eax),%al
		mov    $data_16e78c,%edx
		and    $0xff,%eax
		mov    $data_16e78c,%ebx
		call   func_24c7f
		mov    $0x5,%eax
		mov    $0x9,%edx
		mov    data_15b9cc,%ecx
		call   func_2b240
		add    $0x24,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret

vtable_3579c:
		.long   func_35ae6
		.long   func_35af6
		.long   func_35b06
		.long   func_35b19
		.long   func_35b2c

vtable_357b0:
		.long   func_365de
		.long   func_365fd
		.long   func_36615
		.long   func_3662a
		.long   func_36642


/*----------------------------------------------------------------*/
func_357c4:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x154,%esp
		push   %eax
		mov    $0x43,%ecx
		lea    0x4(%esp),%edi
		mov    $data_35189,%esi
		xor    %edx,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    %edx,0x150(%esp)
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		add    %edx,%edx
		mov    data_19763c(%edx),%bx
		cmp    $0x6,%bx
		jae    jump_35811
		movl   $0x42f60000,0x148(%esp)
		jmp    jump_35837
	jump_35811:
		xor    %eax,%eax
		mov    %bx,%ax
		mov    %eax,0x154(%esp)
		fildl  0x154(%esp)
		fdivs  data_521b5
		fdivrs data_521b9
		fstps  0x148(%esp)
	jump_35837:
		call   func_319db
		mov    $data_5218c,%eax
		xor    %ecx,%ecx
		mov    $data_172224,%edx
		mov    %ecx,data_1a4f34
		mov    %ecx,data_1a4f38
		call   func_2e392
		cmp    $0xffffffff,%eax
		jne    jump_35877
		mov    $data_52198,%eax
		call   w_puts
		call   w_dos_getch
		mov    $data_521b0,%eax
		call   func_18fd0
	jump_35877:
		mov    (%esp),%eax
		mov    0x150(%esp),%ebp
		mov    data_1a4f38,%edx
		mov    $0x139,%ebx
		call   func_352e2
		flds   0x148(%esp)
		mov    $0x12a,%eax
		mov    data_15b9cc,%edi
		call   func___CHP
		fistpl 0x154(%esp)
		mov    0x154(%esp),%ecx
		push   %edi
		add    $0xf,%ecx
		lea    0xf(%ebp),%edx
		add    %ebp,%ecx
		call   func_1843d
		mov    $data_172224,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		xor    %edx,%edx
		mov    game_cfg_sound,%dl
		mov    %edx,%eax
		mov    $0x140,%esi
		shl    $0x2,%eax
		mov    $data_183394,%edi
		add    %edx,%eax
		mov    $0x1,%edx
		add    %eax,%eax
		mov    %edx,%ebx
		lea    0xa2(%edi),%ebp
		call   func_394d1
		call   func_19ba9
	jump_35905:
		mov    $data_1722c4,%eax
		mov    $0xa0,%ebx
		mov    data_15b9cc,%edx
		mov    $0x94,%ecx
		add    $0xa0,%edx
		call   func_37f18
		mov    $0x4,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x94,%ecx
		mov    %edi,%eax
		lea    (%esi,%edx,1),%ebx
		mov    data_15b9cc,%edx
		call   func_37f18
		add    $0x2,%edi
		mov    data_15b9cc,%eax
		sub    $0x2,%esi
		call   func_2b470
		cmp    %ebp,%edi
		jne    jump_35905
		call   func_19b67
		mov    $data_5218c,%eax
		mov    $data_172224,%edx
		call   func_2e392
		cmp    $0xffffffff,%eax
		jne    jump_3598e
		mov    $data_52198,%eax
		call   w_puts
		call   w_dos_getch
		mov    $data_521b0,%eax
		call   func_18fd0
	jump_3598e:
		mov    $data_172224,%eax
		mov    data_15b9cc,%edx
		call   func_2b433
		mov    (%esp),%eax
		mov    data_1a4f38,%edx
		mov    $0x139,%ebx
		call   func_352e2
		flds   0x148(%esp)
		mov    0x150(%esp),%edx
		mov    data_15b9cc,%eax
		call   func___CHP
		fistpl 0x154(%esp)
		mov    0x154(%esp),%ecx
		push   %eax
		add    $0xf,%ecx
		mov    $0x12a,%eax
		add    %edx,%ecx
		add    $0xf,%edx
		call   func_1843d
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		mov    (%esp),%eax
		mov    %eax,%ebp
		shl    $0x4,%ebp
		add    %eax,%ebp
		shl    $0x3,%ebp
	jump_35a10:
		mov    data_7cf20,%ebx
		cmp    $0x2,%ebx
		je     jump_35a21
		jne    jump_35b42
	jump_35a21:
		mov    data_7cf24,%esi
		cmp    $0x99,%esi
		jl     jump_35a90
		cmp    $0x127,%esi
		jg     jump_35a90
		mov    data_7cf28,%eax
		cmp    $0x8,%eax
		jl     jump_35a90
		cmp    $0x97,%eax
		jg     jump_35a90
		lea    -0x8(%eax),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a00ca,%edx
		mov    data_1a4f38,%ebx
		sar    $0x10,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		mov    data_15fd2c(%eax),%al
		and    $0xff,%eax
	jump_35a86:
		call   func_320bb
		jmp    jump_35b42
	jump_35a90:
		mov    data_7cf24,%ebx
		cmp    $0x5,%ebx
		jl     jump_35b42
		cmp    $0x98,%ebx
		jg     jump_35b42
		mov    data_7cf28,%esi
		cmp    $0x67,%esi
		jl     jump_35b42
		cmp    $0x81,%esi
		jg     jump_35b42
		lea    -0x5(%ebx),%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%eax
		ja     jump_35b42
		jmp    *vtable_3579c(,%eax,4)


/*----------------------------------------------------------------*/
func_35ae6:
/*----------------------------------------------------------------*/
		mov    data_19ac7f(%ebp),%bh
		test   %bh,%bh
		je     jump_35b42
		xor    %eax,%eax
		mov    %bh,%al
		jmp    jump_35a86


/*----------------------------------------------------------------*/
func_35af6:
/*----------------------------------------------------------------*/
		mov    data_19ac7e(%ebp),%bl
		test   %bl,%bl
		je     jump_35b42
		xor    %eax,%eax
		mov    %bl,%al
		jmp    jump_35a86


/*----------------------------------------------------------------*/
func_35b06:
/*----------------------------------------------------------------*/
		mov    data_19ac81(%ebp),%dh
		test   %dh,%dh
		je     jump_35b42
		xor    %eax,%eax
		mov    %dh,%al
		jmp    jump_35a86


/*----------------------------------------------------------------*/
func_35b19:
/*----------------------------------------------------------------*/
		mov    data_19ac82(%ebp),%dl
		test   %dl,%dl
		je     jump_35b42
		xor    %eax,%eax
		mov    %dl,%al
		jmp    jump_35a86


/*----------------------------------------------------------------*/
func_35b2c:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac83(%ebp)
		je     jump_35b42
		xor    %eax,%eax
		mov    data_19ac83(%ebp),%al
		jmp    jump_35a86
	jump_35b42:
		mov    data_7cf20,%eax
		cmp    $0x1,%eax
		je     jump_35b52
		jne    jump_35ff8
	jump_35b52:
		mov    data_7cf24,%ebx
		cmp    $0x60,%ebx
		jl     jump_3609e
		cmp    $0x99,%ebx
		jg     jump_3609e
		mov    data_7cf28,%esi
		cmp    $0x87,%esi
		jl     jump_3609e
		cmp    $0x91,%esi
		jg     jump_3609e
		mov    $0x3,%edi
		xor    %esi,%esi
	jump_35b92:
		mov    $0x3,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		lea    0x3d(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %edi
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		mov    data_15b9cc,%ecx
		shl    $0x4,%eax
		mov    %ebx,%edx
		mov    $data_7c784,%ebx
		add    $0x9,%eax
		inc    %esi
		call   func_2b240
		cmp    $0x6,%esi
		jl     jump_35b92
		mov    data_19ac52(%ebp),%dh
		xor    %esi,%esi
		test   %dh,%dh
		jbe    jump_35c19
		xor    %eax,%eax
		mov    %dh,%al
		add    %eax,%eax
		add    $0x14,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%ebx
		mov    data_15b9cc,%ecx
		mov    $0x3e,%edx
		add    %eax,%ebx
		mov    $0xb,%eax
		mov    $0x1,%esi
		call   func_2b240
	jump_35c19:
		mov    data_19ac53(%ebp),%bl
		test   %bl,%bl
		jbe    jump_35c8e
		xor    %eax,%eax
		mov    %bl,%al
		add    %eax,%eax
		add    $0x18,%eax
		imul   $0x1ae,%eax,%eax
		mov    %esi,%edx
		mov    $data_70a30,%ecx
		sar    $0x1f,%edx
		mov    $0x3,%ebx
		add    %eax,%ecx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movl   $0x3,0x154(%esp)
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idivl  0x154(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%edi
		sub    %edx,%eax
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xb,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_35c8e:
		mov    data_19ac54(%ebp),%bh
		test   %bh,%bh
		jbe    jump_35cff
		xor    %eax,%eax
		mov    %bh,%al
		add    %eax,%eax
		add    $0x1c,%eax
		imul   $0x1ae,%eax,%eax
		mov    $0x3,%edi
		mov    %esi,%edx
		mov    $data_70a30,%ebx
		sar    $0x1f,%edx
		add    %eax,%ebx
		mov    %esi,%eax
		idiv   %edi
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movl   $0x3,0x154(%esp)
		lea    0x3e(%eax),%edi
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idivl  0x154(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%ecx
		sub    %edx,%eax
		shl    $0x4,%eax
		mov    %edi,%edx
		add    $0xb,%eax
		inc    %esi
		call   func_2b240
	jump_35cff:
		cmpb   $0x0,data_19ac55(%ebp)
		jbe    jump_35d75
		xor    %eax,%eax
		mov    data_19ac55(%ebp),%al
		add    %eax,%eax
		add    $0x20,%eax
		imul   $0x1ae,%eax,%eax
		mov    $data_70a30,%edi
		mov    %esi,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		add    %eax,%edi
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movl   $0x3,0x154(%esp)
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idivl  0x154(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%ecx
		sub    %edx,%eax
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xb,%eax
		mov    %edi,%ebx
		inc    %esi
		call   func_2b240
	jump_35d75:
		mov    data_19ac56(%ebp),%ch
		test   %ch,%ch
		jbe    jump_35de9
		xor    %eax,%eax
		mov    $0x3,%ebx
		mov    %ch,%al
		mov    %esi,%edx
		add    %eax,%eax
		sar    $0x1f,%edx
		lea    0x24(%eax),%ecx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movl   $0x3,0x154(%esp)
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idivl  0x154(%esp)
		imul   $0x1ae,%ecx,%ecx
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%edi
		sub    %edx,%eax
		add    $data_70a30,%ecx
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xb,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_35de9:
		cmpb   $0x0,data_19ac57(%ebp)
		jbe    jump_35e60
		xor    %eax,%eax
		mov    data_19ac57(%ebp),%al
		add    %eax,%eax
		add    $0x28,%eax
		imul   $0x1ae,%eax,%ecx
		mov    %esi,%edx
		mov    $0x3,%ebx
		sar    $0x1f,%edx
		mov    %esi,%eax
		idiv   %ebx
		mov    %eax,%edx
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		movl   $0x3,0x154(%esp)
		lea    0x3e(%eax),%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idivl  0x154(%esp)
		mov    %edx,%eax
		shl    $0x2,%eax
		mov    data_15b9cc,%edi
		sub    %edx,%eax
		add    $data_70a30,%ecx
		shl    $0x4,%eax
		mov    %ebx,%edx
		add    $0xb,%eax
		mov    %ecx,%ebx
		mov    %edi,%ecx
		inc    %esi
		call   func_2b240
	jump_35e60:
		mov    $0x3,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    %edx,%ebx
		shl    $0x2,%ebx
		sub    %edx,%ebx
		mov    %ecx,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		shl    $0x4,%ebx
		add    %eax,%edx
		lea    0x25(%ebx),%edi
		lea    0x44(%edx),%esi
		lea    0xb(%ebx),%eax
		mov    data_19ac5c(%ebp),%bl
		add    $0x3e,%edx
		test   %bl,%bl
		jbe    jump_35ec8
		mov    $data_71e58,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    %esi,%edx
		mov    data_19ac5c(%ebp),%bl
		jmp    jump_35f3b
	jump_35ec8:
		cmpb   $0x0,data_19ac5e(%ebp)
		jbe    jump_35eef
		mov    $data_721b4,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    %esi,%edx
		mov    data_19ac5e(%ebp),%bl
		jmp    jump_35f3b
	jump_35eef:
		cmpb   $0x0,data_19ac5d(%ebp)
		jbe    jump_35f16
		mov    $data_72510,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    %esi,%edx
		mov    data_19ac5d(%ebp),%bl
		jmp    jump_35f3b
	jump_35f16:
		cmpb   $0x0,data_19ac5f(%ebp)
		jbe    jump_35f40
		mov    $data_7286c,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    %esi,%edx
		mov    data_19ac5f(%ebp),%bl
	jump_35f3b:
		call   func_1822d
	jump_35f40:
		mov    $0x5f,%eax
		mov    $0x87,%edx
		mov    $data_7c220,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
	jump_35f6e:
		lea    0x120(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x120(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		cmpl   $0x1,data_7cf20
		je     jump_35f6e
	jump_35f92:
		mov    (%esp),%eax
		mov    0x150(%esp),%esi
		mov    data_1a4f38,%edx
		mov    $0x139,%ebx
		call   func_352e2
		flds   0x148(%esp)
		mov    data_15b9cc,%ecx
		call   func___CHP
		fistpl 0x154(%esp)
		push   %ecx
		mov    0x158(%esp),%ecx
		mov    $0x12a,%eax
		add    $0xf,%ecx
		lea    0xf(%esi),%edx
		add    %esi,%ecx
		call   func_1843d
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
	jump_35ff8:
		lea    0x12c(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x12c(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%edi
		cmp    $0xfc,%edi
		jl     jump_35a10
		cmp    $0x135,%edi
		jg     jump_35a10
		mov    data_7cf28,%edx
		cmp    $0xbb,%edx
		jl     jump_35a10
		cmp    $0xc5,%edx
		jg     jump_35a10
		cmpl   $0x1,data_7cf20
		jne    jump_35a10
		mov    $0xfc,%eax
		mov    $0xbb,%edx
		mov    $data_7c4d2,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		call   func_19b67
		call   func_3197d
		xor    %eax,%eax
	jump_36091:
		add    $0x158,%esp
	jump_36097:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3609e:
		mov    data_7cf24,%eax
		cmp    $0x12a,%eax
		jl     jump_3634b
		cmp    $0x139,%eax
		jg     jump_3634b
		mov    0x150(%esp),%eax
		add    $0xf,%eax
		mov    %eax,0x13c(%esp)
		mov    0x13c(%esp),%ebx
		cmp    data_7cf28,%ebx
		jg     jump_3634b
		fildl  0x13c(%esp)
		fadds  0x148(%esp)
		fildl  data_7cf28
		fcompp
		fnstsw %ax
		sahf
		ja     jump_3634b
		mov    data_7cf24,%edx
		mov    data_7cf28,%eax
		add    %edx,%edx
		mov    %eax,0x14c(%esp)
		mov    %edx,%eax
		lea    0x4(%esp),%ebx
		call   func_19c3b
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		call   func_19ba9
		mov    data_15b9cc,%eax
		call   func_2b44f
		flds   data_521b9
		fsubs  0x148(%esp)
		fstps  0x140(%esp)
	jump_3615a:
		mov    data_7cf20,%ecx
		cmp    $0x1,%ecx
		je     jump_3616b
		jne    jump_36337
	jump_3616b:
		lea    0x114(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0x114(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    0x14c(%esp),%eax
		mov    data_7cf28,%edi
		cmp    %edi,%eax
		jge    jump_36217
		mov    0x14c(%esp),%edx
		mov    %edi,%eax
		mov    0x150(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %ebx,0x150(%esp)
		lea    (%edx,%eax,1),%ecx
		fildl  0x150(%esp)
		fadds  0x148(%esp)
		mov    %ecx,0x14c(%esp)
		fsts   0x144(%esp)
		fcomps data_521b9
		fnstsw %ax
		sahf
		jbe    jump_36248
		fildl  0x14c(%esp)
		flds   0x144(%esp)
		fadds  data_521bd
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x14c(%esp)
		flds   0x140(%esp)
		call   func___CHP
		fistpl 0x150(%esp)
		jmp    jump_36248
	jump_36217:
		jle    jump_3628a
		mov    0x150(%esp),%ecx
		sub    %edi,%eax
		mov    0x14c(%esp),%esi
		sub    %eax,%ecx
		sub    %eax,%esi
		mov    %ecx,0x150(%esp)
		mov    %esi,0x14c(%esp)
		test   %ecx,%ecx
		jge    jump_36248
		xor    %eax,%eax
		mov    %eax,0x150(%esp)
	jump_36248:
		flds   0x148(%esp)
		mov    0x150(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x154(%esp)
		sar    $0x10,%eax
		mov    0x154(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		call   func_3529c
		mov    %eax,data_1a4f38
	jump_3628a:
		flds   0x148(%esp)
		mov    $0x7b,%eax
		mov    data_1a00ca,%ecx
		mov    0x150(%esp),%edx
		sar    $0x10,%ecx
		call   func___CHP
		add    %ecx,%ecx
		fistpl 0x154(%esp)
		mov    data_19763c(%ecx),%cx
		mov    0x154(%esp),%ebx
		and    $0xffff,%ecx
		mov    0x150(%esp),%edi
		call   func_3529c
		mov    0x154(%esp),%ecx
		mov    %eax,%edx
		mov    %eax,data_1a4f38
		mov    (%esp),%eax
		mov    $0x139,%ebx
		call   func_352e2
		add    $0xf,%ecx
		mov    data_15b9cc,%esi
		mov    $0x12a,%eax
		push   %esi
		lea    0xf(%edi),%edx
		add    %edi,%ecx
		call   func_1843d
		lea    0x4(%esp),%ebx
		mov    data_15b9cc,%ecx
		mov    data_54055,%edx
		mov    data_54053,%eax
		sar    $0x10,%edx
		sar    $0x10,%eax
		call   w_game_copy_ff
		mov    data_15b9cc,%eax
		call   func_2b44f
		jmp    jump_3615a
	jump_36337:
		mov    $0x10,%eax
		mov    $0x266,%edx
		call   func_19c3b
		jmp    jump_35f92
	jump_3634b:
		mov    data_7cf24,%ecx
		cmp    $0x12a,%ecx
		jl     jump_363b2
		cmp    $0x139,%ecx
		jg     jump_363b2
		mov    data_7cf28,%edi
		cmp    $0x5,%edi
		jl     jump_363b2
		cmp    $0xf,%edi
		jg     jump_363b2
		mov    data_1a4f38,%edx
		test   %edx,%edx
		jle    jump_36384
		lea    -0x1(%edx),%ebx
		mov    %ebx,data_1a4f38
	jump_36384:
		mov    data_1a00ca,%eax
		xor    %ebx,%ebx
		sar    $0x10,%eax
		mov    data_1a4f38,%edx
		mov    data_19763c(,%eax,2),%bx
		mov    $0x7b,%eax
		call   func_320a4
		mov    %eax,0x150(%esp)
		jmp    jump_35f92
	jump_363b2:
		mov    data_7cf24,%edx
		cmp    $0x12a,%edx
		jl     jump_3640e
		cmp    $0x139,%edx
		jg     jump_3640e
		mov    data_7cf28,%ecx
		cmp    $0x8a,%ecx
		jl     jump_3640e
		cmp    $0x93,%ecx
		jg     jump_3640e
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    data_19763c(%eax),%ax
		and    $0xffff,%eax
		mov    data_1a4f38,%edi
		sub    $0x6,%eax
		cmp    %edi,%eax
		jle    jump_36384
		lea    0x1(%edi),%eax
		mov    %eax,data_1a4f38
		jmp    jump_36384
	jump_3640e:
		mov    data_7cf24,%edi
		cmp    $0x12a,%edi
		jl     jump_364f4
		cmp    $0x139,%edi
		jg     jump_364f4
		mov    data_7cf28,%edx
		cmp    $0xf,%edx
		jl     jump_364f4
		cmp    $0x8a,%edx
		jg     jump_364f4
		lea    -0xf(%edx),%eax
		mov    %eax,0x150(%esp)
		fildl  0x150(%esp)
		fadds  0x148(%esp)
		fsts   0x138(%esp)
		fcomps data_521b9
		fnstsw %ax
		sahf
		jbe    jump_364ac
		fildl  0x14c(%esp)
		flds   0x138(%esp)
		fadds  data_521bd
		fsubrp %st,%st(1)
		call   func___CHP
		fistpl 0x14c(%esp)
		flds   data_521b9
		fsubs  0x148(%esp)
		call   func___CHP
		fistpl 0x150(%esp)
	jump_364ac:
		flds   0x148(%esp)
		mov    0x150(%esp),%edx
		mov    data_1a00ca,%eax
		call   func___CHP
		xor    %ecx,%ecx
		fistpl 0x154(%esp)
		sar    $0x10,%eax
		mov    0x154(%esp),%ebx
		mov    data_19763c(,%eax,2),%cx
		mov    $0x7b,%eax
		dec    %ecx
		call   func_3529c
		mov    %eax,data_1a4f38
		jmp    jump_35f92
	jump_364f4:
		mov    data_7cf24,%ecx
		cmp    $0x99,%ecx
		jl     jump_36588
		cmp    $0x127,%ecx
		jg     jump_36588
		mov    data_7cf28,%edi
		cmp    $0x8,%edi
		jl     jump_36588
		cmp    $0x97,%edi
		jg     jump_36588
		lea    -0x8(%edi),%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a4f38,%ecx
		mov    data_1a00ca,%edx
		mov    %eax,%ebx
		sar    $0x10,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		add    %ecx,%eax
		mov    data_15fd2c(%eax),%al
		and    $0xff,%eax
		je     jump_35f92
		mov    $0x64,%edx
		add    data_1a4f38,%edx
		add    %edx,%ebx
		lea    -0x1(%eax),%edx
		mov    (%esp),%eax
		call   func_367b0
		jmp    jump_35f92
	jump_36588:
		mov    data_7cf24,%edx
		cmp    $0x5,%edx
		jl     jump_366b1
		cmp    $0x98,%edx
		jg     jump_366b1
		mov    data_7cf28,%ecx
		cmp    $0x67,%ecx
		jl     jump_366b1
		cmp    $0x81,%ecx
		jg     jump_366b1
		sub    $0x5,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%eax
		ja     jump_3665e
		jmp    *vtable_357b0(,%eax,4)


/*----------------------------------------------------------------*/
func_365de:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac7f(%ebp)
		je     jump_3665e
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    data_19ac7f(%ebp),%dl
		mov    $0x1,%ebx
		jmp    jump_36658


/*----------------------------------------------------------------*/
func_365fd:
/*----------------------------------------------------------------*/
		mov    data_19ac7e(%ebp),%ah
		test   %ah,%ah
		je     jump_3665e
		xor    %edx,%edx
		mov    $0x2,%ebx
		mov    %ah,%dl
	jump_36610:
		mov    (%esp),%eax
		jmp    jump_36658


/*----------------------------------------------------------------*/
func_36615:
/*----------------------------------------------------------------*/
		mov    data_19ac81(%ebp),%al
		test   %al,%al
		je     jump_3665e
		xor    %edx,%edx
		mov    $0x3,%ebx
		mov    %al,%dl
		jmp    jump_36610


/*----------------------------------------------------------------*/
func_3662a:
/*----------------------------------------------------------------*/
		mov    data_19ac82(%ebp),%ch
		test   %ch,%ch
		je     jump_3665e
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    %ch,%dl
		mov    $0x4,%ebx
		jmp    jump_36658


/*----------------------------------------------------------------*/
func_36642:
/*----------------------------------------------------------------*/
		mov    data_19ac83(%ebp),%cl
		test   %cl,%cl
		je     jump_3665e
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    %cl,%dl
		mov    $0x5,%ebx
	jump_36658:
		dec    %edx
		call   func_367b0
	jump_3665e:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		add    %edx,%edx
		mov    data_19763c(%edx),%cx
		cmp    $0x6,%cx
		jae    jump_36686
		movl   $0x42f60000,0x148(%esp)
		jmp    jump_35f92
	jump_36686:
		xor    %eax,%eax
		mov    %cx,%ax
		mov    %eax,0x154(%esp)
		fildl  0x154(%esp)
		fdivs  data_521b5
		fdivrs data_521b9
		fstps  0x148(%esp)
		jmp    jump_35f92
	jump_366b1:
		mov    data_7cf24,%edi
		test   %edi,%edi
		jl     jump_35f92
		cmp    $0x13f,%edi
		jg     jump_35f92
		mov    data_7cf28,%edx
		cmp    $0x94,%edx
		jl     jump_35f92
		cmp    $0xa3,%edx
		jg     jump_35f92
		mov    $data_183394,%edx
		mov    data_15b9cc,%eax
		call   func_2b433
		mov    $0x1,%eax
		jmp    jump_36091

vtable_36704:
		.long   func_3680f
		.long   func_36836
		.long   func_3685d
		.long   func_36884
		.long   func_3680f
		.long   func_368a8
		.long   func_368ca
		.long   func_368d6

vtable_36724:
		.long   func_36cfd
		.long   func_36d79
		.long   func_36d80
		.long   func_36d8a
		.long   func_36d97

vtable_36738:
		.long   func_36cfd
		.long   func_36d79
		.long   func_36d80
		.long   func_36df2
		.long   func_36dff

vtable_3674c:
		.long   func_36e8a
		.long   func_36f3f
		.long   func_36fed
		.long   func_37076
		.long   func_370a5

vtable_36760:
		.long   func_36cfd
		.long   func_36d79
		.long   func_36d80
		.long   func_37016
		.long   func_3709a

vtable_36774:
		.long   func_36cfd
		.long   func_36d79
		.long   func_36d80
		.long   func_37016
		.long   func_3709a

vtable_36788:
		.long   func_371cf
		.long   func_3733f
		.long   func_374a7
		.long   func_37580
		.long   func_375c9

vtable_3679c:
		.long   func_37613
		.long   func_3761f
		.long   func_37626
		.long   func_3762d
		.long   func_37637


/*----------------------------------------------------------------*/
func_367b0:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x24,%esp
		push   %eax
		push   %edx
		push   %ebx
		mov    data_7cf24,%eax
		mov    %edx,%ebx
		sub    $0x7,%eax
		shl    $0x5,%ebx
		mov    %eax,0x20(%esp)
		add    %edx,%ebx
		mov    data_7cf28,%eax
		add    %ebx,%ebx
		sub    $0x8,%eax
		lea    0x18(%esp),%edi
		mov    %eax,0x24(%esp)
		mov    data_f10a4(%ebx),%al
		mov    $data_35297,%esi
		dec    %al
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x7,%al
		ja     jump_36905
		mov    0x8(%esp),%edx
		movzbl %al,%esi
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		jmp    *vtable_36704(,%esi,4)


/*----------------------------------------------------------------*/
func_3680f:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac7e(%eax)
		je     jump_36827
		cmpb   $0x2,data_f10c9(%ebx)
		jne    jump_36827
		xor    %al,%al
		mov    %al,0x18(%esp)
	jump_36827:
		xor    %ah,%ah
		mov    %ah,0x19(%esp)
		mov    %ah,0x1a(%esp)
		jmp    jump_36905


/*----------------------------------------------------------------*/
func_36836:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac7e(%eax)
		je     jump_3684e
		cmpb   $0x2,data_f10c9(%ebx)
		jne    jump_3684e
		xor    %ah,%ah
		mov    %ah,0x18(%esp)
	jump_3684e:
		xor    %dl,%dl
		mov    %dl,0x19(%esp)
		mov    %dl,0x1a(%esp)
		jmp    jump_36905


/*----------------------------------------------------------------*/
func_3685d:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac7e(%eax)
		je     jump_36875
		cmpb   $0x2,data_f10c9(%ebx)
		jne    jump_36875
		xor    %bl,%bl
		mov    %bl,0x18(%esp)
	jump_36875:
		xor    %bh,%bh
		mov    %bh,0x19(%esp)
		mov    %bh,0x1a(%esp)
		jmp    jump_36905


/*----------------------------------------------------------------*/
func_36884:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac7e(%eax)
		je     jump_3689c
		cmpb   $0x2,data_f10c9(%ebx)
		jne    jump_3689c
		xor    %ch,%ch
		mov    %ch,0x18(%esp)
	jump_3689c:
		xor    %al,%al
		mov    %al,0x19(%esp)
		mov    %al,0x1a(%esp)
		jmp    jump_36905


/*----------------------------------------------------------------*/
func_368a8:
/*----------------------------------------------------------------*/
		xor    %edx,%edx
		mov    data_19ac7f(%eax),%dl
		dec    %edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		cmpb   $0x2,data_f10c9(,%eax,2)
		jne    jump_368fb
		xor    %dh,%dh
		mov    %dh,0x19(%esp)
		jmp    jump_368fb


/*----------------------------------------------------------------*/
func_368ca:
/*----------------------------------------------------------------*/
		xor    %cl,%cl
		mov    %cl,0x18(%esp)
		mov    %cl,0x19(%esp)
		jmp    jump_36905


/*----------------------------------------------------------------*/
func_368d6:
/*----------------------------------------------------------------*/
		mov    data_19ac7f(%eax),%al
		and    $0xff,%eax
		lea    -0x1(%eax),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		cmpb   $0x2,data_f10c9(,%eax,2)
		jne    jump_368fb
		xor    %dh,%dh
		mov    %dh,0x19(%esp)
	jump_368fb:
		xor    %bl,%bl
		mov    %bl,0x18(%esp)
		mov    %bl,0x1a(%esp)
	jump_36905:
		mov    0x4(%esp),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		cmpb   $0x2,data_f10c9(,%eax,2)
		jne    jump_3692e
		mov    $0x5,%eax
		mov    $0x62,%edx
		mov    $data_521c1,%ebx
		call   func_18274
	jump_3692e:
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_19ac35(,%eax,8),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    0x4(%esp),%edx
		mov    data_70830(%eax),%bl
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		mov    data_70a22(%ebx),%dl
		cmp    data_f10a4(,%eax,2),%dl
		je     jump_36993
		cmpb   $0x0,0x19(%esp)
		jne    jump_3698d
		cmpb   $0x0,0x1a(%esp)
		jne    jump_3698d
		mov    $0x26,%eax
		mov    $0x62,%edx
		mov    $data_521c7,%ebx
		call   func_18274
	jump_3698d:
		xor    %ch,%ch
		mov    %ch,0x18(%esp)
	jump_36993:
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_19ac35(,%eax,8),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpb   $0x1,data_70832(%eax)
		je     jump_369f4
		mov    0x4(%esp),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		cmpb   $0x6,data_f10a4(,%eax,2)
		jne    jump_369f4
		cmpb   $0x0,0x18(%esp)
		jne    jump_369ee
		cmpb   $0x0,0x1a(%esp)
		jne    jump_369ee
		mov    $0x26,%eax
		mov    $0x62,%edx
		mov    $data_521c7,%ebx
		call   func_18274
	jump_369ee:
		xor    %cl,%cl
		mov    %cl,0x19(%esp)
	jump_369f4:
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    data_19ac35(,%eax,8),%dl
		mov    %edx,%eax
		shl    $0x2,%eax
		sub    %edx,%eax
		cmpb   $0x2,data_70832(%eax)
		je     jump_36a55
		mov    0x4(%esp),%edx
		mov    %edx,%eax
		shl    $0x5,%eax
		add    %edx,%eax
		cmpb   $0x8,data_f10a4(,%eax,2)
		jne    jump_36a55
		cmpb   $0x0,0x18(%esp)
		jne    jump_36a4f
		cmpb   $0x0,0x1a(%esp)
		jne    jump_36a4f
		mov    $0x26,%eax
		mov    $0x62,%edx
		mov    $data_521c7,%ebx
		call   func_18274
	jump_36a4f:
		xor    %bh,%bh
		mov    %bh,0x19(%esp)
	jump_36a55:
		call   func_19ba9
		mov    $0x4,%ebx
		mov    $0x1c,%edi
		mov    $0x5,%ebp
		xor    %edx,%edx
		mov    $0x1d,%esi
		mov    %edx,0x2c(%esp)
		mov    %ebx,0x28(%esp)
	jump_36a78:
		mov    0x2c(%esp),%eax
		cmpb   $0x1,0x18(%esp,%eax,1)
		je     jump_36af6
		mov    data_15b9cc,%ecx
		push   %ecx
		mov    $0x67,%edx
		mov    %ebp,%eax
		push   $0x16
		mov    %esi,%ebx
		mov    $0x81,%ecx
		call   func_188df
		mov    data_15b9cc,%eax
		push   %eax
		mov    $0x67,%edx
		mov    $0x81,%ecx
		push   $0x16
		mov    %edi,%ebx
		mov    0x30(%esp),%eax
		call   func_188df
		mov    data_15b9cc,%edx
		push   %edx
		mov    $0x81,%ecx
		mov    %esi,%eax
		push   $0x16
		mov    %ebp,%ebx
		mov    $0x67,%edx
		call   func_188df
		mov    data_15b9cc,%ebx
		push   %ebx
		mov    $0x67,%edx
		mov    $0x81,%ecx
		push   $0x16
		mov    %edi,%eax
		mov    0x30(%esp),%ebx
		call   func_188df
	jump_36af6:
		mov    0x28(%esp),%ecx
		mov    0x2c(%esp),%eax
		add    $0x1e,%edi
		add    $0x1e,%ebp
		add    $0x1e,%esi
		add    $0x1e,%ecx
		inc    %eax
		mov    %ecx,0x28(%esp)
		mov    %eax,0x2c(%esp)
		cmp    $0x5,%eax
		jl     jump_36a78
		mov    0x4(%esp),%ebp
		mov    data_15b9cc,%eax
		mov    0x24(%esp),%edx
		call   func_2b44f
		mov    data_99232(,%ebp,4),%ebp
#if 1
    movl   video_buffer,%ecx
#else
		mov    $0xa0000,%ecx
#endif
		mov    0x20(%esp),%eax
		mov    0xa(%ebp),%ebx
		call   func_2b240
	jump_36b46:
		lea    0xc(%esp),%esi
		mov    $data_7cf20,%edi
		call   func_19924
		lea    0xc(%esp),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    data_7cf24,%eax
		mov    0x20(%esp),%ebx
		sub    $0x7,%eax
		cmp    %ebx,%eax
		jne    jump_36b7b
		mov    data_7cf28,%eax
		mov    0x24(%esp),%ecx
		sub    $0x8,%eax
		cmp    %ecx,%eax
		je     jump_36bb2
	jump_36b7b:
		mov    data_7cf24,%eax
		sub    $0x7,%eax
		mov    %eax,0x20(%esp)
		mov    data_7cf28,%eax
		sub    $0x8,%eax
#if 1
    movl   video_buffer,%ecx
#else
		mov    $0xa0000,%ecx
#endif
		mov    %eax,0x24(%esp)
		mov    data_15b9cc,%eax
		mov    0x24(%esp),%edx
		call   func_2b470
		mov    0x20(%esp),%eax
		mov    0xa(%ebp),%ebx
		call   func_2b240
	jump_36bb2:
		mov    data_7cf20,%esi
		cmp    $0x1,%esi
		je     jump_36b46
		je     jump_36b46
		mov    data_7cf28,%edx
		sub    $0x5,%edx
		mov    $0x18,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		mov    data_1a4f38,%ebx
		mov    (%esp),%ebp
		add    %eax,%ebx
		cmp    $0x6,%ebp
		jge    jump_370c9
		mov    data_7cf24,%esi
		cmp    $0xa9,%esi
		jl     jump_36e0c
		cmp    $0x129,%esi
		jg     jump_36e0c
		mov    data_7cf28,%ebp
		cmp    $0x5,%ebp
		jl     jump_36e0c
		cmp    $0x93,%ebp
		jg     jump_36e0c
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		cmpb   $0x0,data_15fd2c(%ebx,%eax,1)
		jne    jump_36da4
		xor    %esi,%esi
		mov    %esi,0x2c(%esp)
		jmp    jump_36c74
	jump_36c51:
		mov    %esi,%eax
		shl    $0x2,%eax
		add    %esi,%eax
		shl    $0x3,%eax
		mov    %eax,%esi
		shl    $0x4,%eax
		sub    %esi,%eax
		add    %edi,%eax
		cmpb   $0x0,data_15fd2c(%eax)
		je     jump_36c94
		lea    0x1(%edi),%eax
		mov    %eax,0x2c(%esp)
	jump_36c74:
		mov    data_1a00ca,%esi
		sar    $0x10,%esi
		lea    (%esi,%esi,1),%eax
		mov    data_19763c(%eax),%ax
		mov    0x2c(%esp),%edi
		and    $0xffff,%eax
		cmp    %edi,%eax
		jg     jump_36c51
	jump_36c94:
		mov    data_1a00ca,%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    0x2c(%esp),%edx
		mov    0x4(%esp),%cl
		add    %edx,%eax
		inc    %cl
		mov    %cl,data_15fd2c(%eax)
		mov    %ebx,%eax
		mov    data_19763c(,%ebx,2),%bx
		mov    (%esp),%edx
		inc    %ebx
		dec    %edx
		mov    %bx,data_19763c(,%eax,2)
		cmp    $0x4,%edx
		ja     jump_36d07
		mov    0x8(%esp),%ebx
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %eax,%ebx
		mov    $data_19ac24,%eax
		shl    $0x3,%ebx
		add    %ebx,%eax
		jmp    *vtable_36724(,%edx,4)


/*----------------------------------------------------------------*/
func_36cfd:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
	jump_36d02:
		call   func_37e5e
	jump_36d07:
		mov    data_7cf24,%ebx
		cmp    $0x18,%ebx
		jl     jump_3766e
		cmp    $0x33,%ebx
		jg     jump_3766e
		mov    data_7cf28,%esi
		cmp    $0xac,%esi
		jl     jump_3766e
		cmp    $0xbf,%esi
		jg     jump_3766e
		mov    0x4(%esp),%eax
		inc    %eax
		call   func_334f9
		test   %eax,%eax
		jne    jump_3766e
		mov    (%esp),%edx
		dec    %edx
		cmp    $0x4,%edx
		ja     jump_3763f
		mov    0x8(%esp),%ebx
		mov    %ebx,%eax
		shl    $0x4,%eax
		add    %eax,%ebx
		mov    $data_19ac24,%eax
		shl    $0x3,%ebx
		add    %ebx,%eax
		jmp    *vtable_3679c(,%edx,4)


/*----------------------------------------------------------------*/
func_36d79:
/*----------------------------------------------------------------*/
		mov    $0x2,%edx
		jmp    jump_36d02


/*----------------------------------------------------------------*/
func_36d80:
/*----------------------------------------------------------------*/
		mov    $0x3,%edx
		jmp    jump_36d02


/*----------------------------------------------------------------*/
func_36d8a:
/*----------------------------------------------------------------*/
		xor    %cl,%cl
		mov    %cl,data_19ac82(%ebx)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_36d97:
/*----------------------------------------------------------------*/
		xor    %dh,%dh
		mov    %dh,data_19ac83(%ebx)
		jmp    jump_36d07
	jump_36da4:
		mov    0x4(%esp),%eax
		mov    %ebx,%edx
		call   func_22e57
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		mov    data_19763c(,%eax,2),%dx
		mov    (%esp),%esi
		inc    %edx
		dec    %esi
		mov    %dx,data_19763c(,%eax,2)
		cmp    $0x4,%esi
		ja     jump_36d07
		mov    0x8(%esp),%edx
		mov    %edx,%ebx
		shl    $0x4,%ebx
		add    %edx,%ebx
		mov    $data_19ac24,%eax
		shl    $0x3,%ebx
		add    %ebx,%eax
		jmp    *vtable_36738(,%esi,4)


/*----------------------------------------------------------------*/
func_36df2:
/*----------------------------------------------------------------*/
		xor    %al,%al
		mov    %al,data_19ac82(%ebx)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_36dff:
/*----------------------------------------------------------------*/
		xor    %ch,%ch
		mov    %ch,data_19ac83(%ebx)
		jmp    jump_36d07
	jump_36e0c:
		mov    data_7cf24,%edx
		cmp    $0x5,%edx
		jl     jump_36d07
		cmp    $0x98,%edx
		jg     jump_36d07
		mov    data_7cf28,%ecx
		cmp    $0x67,%ecx
		jl     jump_36d07
		cmp    $0x81,%ecx
		jg     jump_36d07
		sub    $0x5,%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%eax
		ja     jump_36d07
		mov    0x4(%esp),%cl
		mov    (%esp),%ebx
		mov    %eax,%edi
		mov    0x8(%esp),%eax
		shl    $0x2,%edi
		inc    %cl
		mov    %eax,%esi
		dec    %ebx
		shl    $0x4,%esi
		mov    %ebx,%edx
		add    %eax,%esi
		mov    $data_19ac24,%eax
		shl    $0x3,%esi
		shl    $0x2,%edx
		add    %esi,%eax
		jmp    *vtable_3674c(%edi)


/*----------------------------------------------------------------*/
func_36e8a:
/*----------------------------------------------------------------*/
		cmpl   $0x4,(%esp)
		jne    jump_36eea
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    data_19ac7f(,%eax,8),%cl
		test   %cl,%cl
		jne    jump_36eea
		cmpb   $0x1,0x18(%esp)
		jne    jump_36eea
		mov    %edx,%eax
		mov    $0x1,%esi
		shl    $0x4,%eax
		mov    0x2(%esp),%ebx
		add    %eax,%edx
		mov    $data_19ac24,%eax
		shl    $0x3,%edx
		sar    $0x10,%ebx
		add    %edx,%eax
		mov    %ebx,%edx
		mov    %esi,%ebx
		call   func_37db2
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		mov    %cl,data_19ac82(,%eax,8)
		jmp    jump_36d07
	jump_36eea:
		cmpl   $0x5,(%esp)
		jne    jump_36d07
		mov    0x8(%esp),%edx
		mov    %edx,%esi
		shl    $0x4,%esi
		add    %edx,%esi
		shl    $0x3,%esi
		cmpb   $0x0,data_19ac7f(%esi)
		jne    jump_36d07
		cmpb   $0x1,0x18(%esp)
		jne    jump_36d07
		mov    0x2(%esp),%edx
		mov    $data_19ac24,%eax
		mov    $0x1,%ebx
		sar    $0x10,%edx
		add    %esi,%eax
		call   func_37db2
		xor    %dl,%dl
		mov    %dl,data_19ac83(%esi)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_36f3f:
/*----------------------------------------------------------------*/
		cmpl   $0x4,(%esp)
		jne    jump_36f98
		cmpb   $0x0,data_19ac7e(%esi)
		jne    jump_36f98
		cmpb   $0x1,0x19(%esp)
		jne    jump_36f98
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		mov    $0x2,%esi
		shl    $0x4,%eax
		mov    0x2(%esp),%ebx
		add    %eax,%edx
		mov    $data_19ac24,%eax
		shl    $0x3,%edx
		sar    $0x10,%ebx
		add    %edx,%eax
		mov    %ebx,%edx
		mov    %esi,%ebx
		call   func_37db2
		mov    0x8(%esp),%edx
		mov    %edx,%eax
		shl    $0x4,%eax
		add    %edx,%eax
		xor    %bh,%bh
		mov    %bh,data_19ac82(,%eax,8)
		jmp    jump_36d07
	jump_36f98:
		cmpl   $0x5,(%esp)
		jne    jump_36d07
		mov    0x8(%esp),%edx
		mov    %edx,%esi
		shl    $0x4,%esi
		add    %edx,%esi
		shl    $0x3,%esi
		cmpb   $0x0,data_19ac7e(%esi)
		jne    jump_36d07
		cmpb   $0x1,0x19(%esp)
		jne    jump_36d07
		mov    0x2(%esp),%edx
		mov    $data_19ac24,%eax
		mov    $0x2,%ebx
		sar    $0x10,%edx
		add    %esi,%eax
		call   func_37db2
		xor    %bl,%bl
		mov    %bl,data_19ac83(%esi)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_36fed:
/*----------------------------------------------------------------*/
		cmpl   $0x4,(%esp)
		jne    jump_37021
		cmpb   $0x0,data_19ac81(%esi)
		jne    jump_37021
		cmpb   $0x1,0x1a(%esp)
		jne    jump_37021
		mov    0x2(%esp),%edx
		mov    $0x3,%ebx
		sar    $0x10,%edx
		xor    %ch,%ch
		call   func_37db2


/*----------------------------------------------------------------*/
func_37016:
/*----------------------------------------------------------------*/
		mov    %ch,data_19ac82(%esi)
		jmp    jump_36d07
	jump_37021:
		cmpl   $0x5,(%esp)
		jne    jump_36d07
		mov    0x8(%esp),%edx
		mov    %edx,%esi
		shl    $0x4,%esi
		add    %edx,%esi
		shl    $0x3,%esi
		cmpb   $0x0,data_19ac81(%esi)
		jne    jump_36d07
		cmpb   $0x1,0x1a(%esp)
		jne    jump_36d07
		mov    0x2(%esp),%edx
		mov    $data_19ac24,%eax
		mov    $0x3,%ebx
		sar    $0x10,%edx
		add    %esi,%eax
		xor    %cl,%cl
		call   func_37db2
		mov    %cl,data_19ac83(%esi)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_37076:
/*----------------------------------------------------------------*/
		mov    data_19ac82(%esi),%ch
		test   %ch,%ch
		jne    jump_36d07
		mov    %cl,data_19ac82(%esi)
		cmp    $0x4,%ebx
		ja     jump_36d07
		jmp    *vtable_36760(%edx)


/*----------------------------------------------------------------*/
func_3709a:
/*----------------------------------------------------------------*/
		mov    %ch,data_19ac83(%esi)
		jmp    jump_36d07


/*----------------------------------------------------------------*/
func_370a5:
/*----------------------------------------------------------------*/
		mov    data_19ac83(%esi),%ch
		test   %ch,%ch
		jne    jump_36d07
		mov    %cl,data_19ac83(%esi)
		cmp    $0x4,%ebx
		ja     jump_36d07
		jmp    *vtable_36774(%edx)
	jump_370c9:
		cmp    $0x64,%ebp
		jl     jump_36d07
		mov    data_7cf24,%edx
		cmp    $0xa9,%edx
		jl     jump_37154
		cmp    $0x129,%edx
		jg     jump_37154
		mov    data_7cf28,%esi
		cmp    $0x5,%esi
		jl     jump_37154
		cmp    $0x93,%esi
		jg     jump_37154
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		add    %ebx,%eax
		add    %ebp,%edx
		mov    0x4(%esp),%bl
		mov    data_15fd2c(%eax),%bh
		inc    %bl
		test   %bh,%bh
		jne    jump_37143
		mov    %bl,data_15fd2c(%eax)
		lea    -0x64(%ebp),%eax
		mov    %bh,data_15fcc8(%edx)
		jmp    jump_3721a
	jump_37143:
		mov    %bh,data_15fcc8(%edx)
		mov    %bl,data_15fd2c(%eax)
		jmp    jump_36d07
	jump_37154:
		mov    data_7cf24,%ebp
		cmp    $0x5,%ebp
		jl     jump_36d07
		cmp    $0x98,%ebp
		jg     jump_36d07
		mov    data_7cf28,%edx
		cmp    $0x67,%edx
		jl     jump_36d07
		cmp    $0x81,%edx
		jg     jump_36d07
		lea    -0x5(%ebp),%edx
		mov    $0x1e,%ebx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %ebx
		cmp    $0x4,%eax
		ja     jump_36d07
		mov    (%esp),%esi
		mov    0x4(%esp),%cl
		mov    0x8(%esp),%edx
		mov    %eax,%edi
		mov    %edx,%eax
		mov    $data_19ac24,%ebx
		shl    $0x4,%eax
		shl    $0x2,%edi
		add    %edx,%eax
		sub    $0x64,%esi
		shl    $0x3,%eax
		inc    %cl
		add    %eax,%ebx
		jmp    *vtable_36788(%edi)


/*----------------------------------------------------------------*/
func_371cf:
/*----------------------------------------------------------------*/
		mov    data_19ac7f(%eax),%ch
		test   %ch,%ch
		jne    jump_37224
		cmpb   $0x1,0x18(%esp)
		jne    jump_37224
		mov    0x2(%esp),%edx
		mov    %ebx,%eax
		mov    $0x1,%ebx
	jump_371eb:
		sar    $0x10,%edx
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%ebx
		sub    %edx,%eax
		add    %ebx,%eax
		mov    %ch,data_15fcc8(%eax)
	jump_37218:
		mov    %esi,%eax
	jump_3721a:
		call   func_3767b
		jmp    jump_36d07
	jump_37224:
		mov    0x8(%esp),%edx
		mov    %edx,%ebx
		shl    $0x4,%ebx
		add    %edx,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac82(%ebx)
		jne    jump_372ae
		cmpb   $0x1,0x18(%esp)
		jne    jump_372ae
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x1,%edx
		mov    data_19ac7f(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac82(%ebx)
		mov    $0x1,%ebx
	jump_37277:
		mov    %esi,%eax
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		add    (%esp),%eax
		xor    %dl,%dl
		mov    %dl,data_15fcc8(%eax)
		mov    (%esp),%eax
		sub    $0x64,%eax
		jmp    jump_3721a
	jump_372ae:
		mov    0x8(%esp),%edx
		mov    %edx,%ebx
		shl    $0x4,%ebx
		add    %edx,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac83(%ebx)
		jne    jump_36d07
		cmpb   $0x1,0x18(%esp)
		jne    jump_36d07
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x1,%edx
		mov    data_19ac7f(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac83(%ebx)
		mov    $0x1,%ebx
	jump_37309:
		mov    %esi,%eax
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%ebp
		sub    %edx,%eax
		add    %ebp,%eax
		xor    %ch,%ch
		mov    %ch,data_15fcc8(%eax)
		lea    -0x64(%ebp),%eax
		jmp    jump_3721a


/*----------------------------------------------------------------*/
func_3733f:
/*----------------------------------------------------------------*/
		mov    data_19ac7e(%eax),%cl
		test   %cl,%cl
		jne    jump_3738d
		cmpb   $0x1,0x19(%esp)
		jne    jump_3738d
		mov    0x2(%esp),%edx
		mov    %ebx,%eax
		mov    $0x2,%ebx
		sar    $0x10,%edx
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%edi
		sub    %edx,%eax
		add    %edi,%eax
		mov    %cl,data_15fcc8(%eax)
		jmp    jump_37218
	jump_3738d:
		mov    0x8(%esp),%eax
		mov    %eax,%ebx
		shl    $0x4,%ebx
		add    %eax,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac82(%ebx)
		jne    jump_37416
		cmpb   $0x1,0x19(%esp)
		jne    jump_37416
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x2,%edx
		mov    data_19ac7e(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac82(%ebx)
		mov    $0x2,%ebx
		mov    %esi,%eax
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%esi
		sub    %edx,%eax
		add    %esi,%eax
		xor    %bh,%bh
		mov    %bh,data_15fcc8(%eax)
		lea    -0x64(%esi),%eax
		jmp    jump_3721a
	jump_37416:
		mov    0x8(%esp),%edx
		mov    %edx,%ebx
		shl    $0x4,%ebx
		add    %edx,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac83(%ebx)
		jne    jump_36d07
		cmpb   $0x1,0x19(%esp)
		jne    jump_36d07
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x2,%edx
		mov    data_19ac7e(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac83(%ebx)
		mov    $0x2,%ebx
		mov    %esi,%eax
		call   func_37db2
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%ecx
		sub    %edx,%eax
		add    %ecx,%eax
		xor    %bl,%bl
		mov    %bl,data_15fcc8(%eax)
		lea    -0x64(%ecx),%eax
		jmp    jump_3721a


/*----------------------------------------------------------------*/
func_374a7:
/*----------------------------------------------------------------*/
		mov    data_19ac81(%eax),%ch
		test   %ch,%ch
		jne    jump_374c8
		cmpb   $0x1,0x1a(%esp)
		jne    jump_374c8
		mov    0x2(%esp),%edx
		mov    %ebx,%eax
		mov    $0x3,%ebx
		jmp    jump_371eb
	jump_374c8:
		mov    0x8(%esp),%edx
		mov    %edx,%ebx
		shl    $0x4,%ebx
		add    %edx,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac82(%ebx)
		jne    jump_37520
		cmpb   $0x1,0x1a(%esp)
		jne    jump_37520
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x3,%edx
		mov    data_19ac81(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac82(%ebx)
		mov    $0x3,%ebx
		jmp    jump_37277
	jump_37520:
		mov    0x8(%esp),%eax
		mov    %eax,%ebx
		shl    $0x4,%ebx
		add    %eax,%ebx
		shl    $0x3,%ebx
		cmpb   $0x0,data_19ac83(%ebx)
		jne    jump_36d07
		cmpb   $0x1,0x1a(%esp)
		jne    jump_36d07
		mov    $data_19ac24,%esi
		xor    %eax,%eax
		mov    $0x3,%edx
		mov    data_19ac81(%ebx),%al
		add    %ebx,%esi
		mov    %eax,0x2c(%esp)
		mov    %esi,%eax
		call   func_37e5e
		mov    0x2(%esp),%edx
		mov    0x2c(%esp),%al
		sar    $0x10,%edx
		mov    %al,data_19ac83(%ebx)
		mov    $0x3,%ebx
		jmp    jump_37309


/*----------------------------------------------------------------*/
func_37580:
/*----------------------------------------------------------------*/
		mov    data_19ac82(%eax),%bl
		test   %bl,%bl
		jne    jump_36d07
		cmpb   $0x1,0x1b(%esp)
		jne    jump_36d07
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %cl,data_19ac82(%eax)
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%edi
		sub    %edx,%eax
		add    %edi,%eax
		mov    %bl,data_15fcc8(%eax)
		jmp    jump_37218


/*----------------------------------------------------------------*/
func_375c9:
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_19ac83(%eax)
		jne    jump_36d07
		cmpb   $0x1,0x1c(%esp)
		jne    jump_36d07
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %cl,data_19ac83(%eax)
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%ecx
		sub    %edx,%eax
		add    %ecx,%eax
		xor    %dh,%dh
		mov    %dh,data_15fcc8(%eax)
		jmp    jump_37218


/*----------------------------------------------------------------*/
func_37613:
/*----------------------------------------------------------------*/
		mov    $0x1,%edx
	jump_37618:
		call   func_37e5e
		jmp    jump_3763f


/*----------------------------------------------------------------*/
func_3761f:
/*----------------------------------------------------------------*/
		mov    $0x2,%edx
		jmp    jump_37618


/*----------------------------------------------------------------*/
func_37626:
/*----------------------------------------------------------------*/
		mov    $0x3,%edx
		jmp    jump_37618


/*----------------------------------------------------------------*/
func_3762d:
/*----------------------------------------------------------------*/
		xor    %al,%al
		mov    %al,data_19ac82(%ebx)
		jmp    jump_3763f


/*----------------------------------------------------------------*/
func_37637:
/*----------------------------------------------------------------*/
		xor    %ch,%ch
		mov    %ch,data_19ac83(%ebx)
	jump_3763f:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		mov    (%esp),%ebp
		sub    %edx,%eax
		add    %ebp,%eax
		xor    %dl,%dl
		mov    %dl,data_15fcc8(%eax)
		lea    -0x64(%ebp),%eax
		call   func_3767b
	jump_3766e:
		call   func_19b67
		add    $0x30,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3767b:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		jmp    jump_37690
	jump_37683:
		mov    data_15fd2d(%eax),%dl
		inc    %ebx
		mov    %dl,data_15fd2c(%eax)
	jump_37690:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		lea    (%edx,%edx,1),%ecx
		mov    %eax,%edx
		shl    $0x4,%eax
		xor    %esi,%esi
		sub    %edx,%eax
		mov    data_19763c(%ecx),%si
		add    %ebx,%eax
		cmp    %esi,%ebx
		jl     jump_37683
		xor    %dl,%dl
		mov    %dl,data_15fd2c(%eax)
		test   %si,%si
		jbe    jump_376d3
		mov    %esi,%ebx
		dec    %ebx
		mov    %bx,data_19763c(%ecx)
	jump_376d3:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_376d8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    data_1a00ca,%eax
		sar    $0x10,%eax
		add    %eax,%eax
		mov    data_19763c(%eax),%dx
		cmp    $0x258,%dx
		jb     jump_37706
		mov    $data_521cb,%eax
		mov    $0xffffffff,%edx
		call   func_34fbe
		jmp    jump_37776
	jump_37706:
		xor    %ebx,%ebx
		mov    %dx,%bx
		dec    %ebx
		jmp    jump_37737
	jump_3770e:
		mov    data_1a00ca,%edx
		sar    $0x10,%edx
		mov    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		dec    %ebx
		sub    %edx,%eax
		mov    data_15fd2d(%ebx,%eax,1),%dl
		mov    %dl,data_15fd2e(%ebx,%eax,1)
	jump_37737:
		test   %ebx,%ebx
		jge    jump_3770e
		mov    data_1a00ca,%ebx
		sar    $0x10,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		shl    $0x3,%eax
		mov    %eax,%edx
		shl    $0x4,%eax
		sub    %edx,%eax
		inc    %cl
		mov    $0x1,%edx
		mov    %cl,data_15fd2c(%eax)
		mov    %ebx,%eax
		mov    data_19763c(,%ebx,2),%bx
		add    %edx,%ebx
		mov    %bx,data_19763c(,%eax,2)
	jump_37776:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3777c:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edx
		dec    %edx
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cc(%eax),%al
		and    $0xff,%eax
		mov    %eax,(%esp)
		cmp    $0x80,%eax
		jl     jump_377bc
		mov    $0x100,%eax
		mov    (%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,(%esp)
		neg    %esi
		mov    %esi,(%esp)
	jump_377bc:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cd(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x4(%esp)
		cmp    $0x80,%eax
		jl     jump_377f3
		mov    $0x100,%eax
		mov    0x4(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0x4(%esp)
		neg    %eax
		mov    %eax,0x4(%esp)
	jump_377f3:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10ce(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x8(%esp)
		cmp    $0x80,%eax
		jl     jump_3782c
		mov    $0x100,%eax
		mov    0x8(%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,0x8(%esp)
		neg    %esi
		mov    %esi,0x8(%esp)
	jump_3782c:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cf(%eax),%al
		and    $0xff,%eax
		mov    %eax,0xc(%esp)
		cmp    $0x80,%eax
		jl     jump_37863
		mov    $0x100,%eax
		mov    0xc(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0xc(%esp)
		neg    %eax
		mov    %eax,0xc(%esp)
	jump_37863:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d0(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x10(%esp)
		cmp    $0x80,%eax
		jl     jump_3789c
		mov    $0x100,%eax
		mov    0x10(%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,0x10(%esp)
		neg    %esi
		mov    %esi,0x10(%esp)
	jump_3789c:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d1(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x14(%esp)
		cmp    $0x80,%eax
		jl     jump_378d3
		mov    $0x100,%eax
		mov    0x14(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0x14(%esp)
		neg    %eax
		mov    %eax,0x14(%esp)
	jump_378d3:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d2(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x18(%esp)
		cmp    $0x80,%eax
		jl     jump_3790c
		mov    $0x100,%eax
		mov    0x18(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,%ecx
		mov    %eax,0x18(%esp)
		neg    %ecx
		mov    %ecx,0x18(%esp)
	jump_3790c:
		mov    $0x46,%eax
		mov    $0x55,%edx
		mov    $data_70a30,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0x78,%eax
		mov    $0x55,%edx
		mov    $data_70d8c,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0xaa,%eax
		mov    $0x55,%edx
		mov    $data_710e8,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0xdc,%eax
		mov    $0x55,%edx
		mov    $data_71444,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    data_99256,%eax
		mov    $0x69,%edx
		mov    data_15b9cc,%ecx
		mov    0xa(%eax),%ebx
		mov    $0x46,%eax
		call   func_2b240
		mov    $0x78,%eax
		mov    data_99382,%ebx
		mov    $0x69,%edx
		mov    data_15b9cc,%ecx
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $0xaa,%eax
		mov    $0x69,%edx
		mov    $data_71afc,%ebx
		mov    data_15b9cc,%ecx
		call   func_2b240
		mov    $0x5f,%eax
		mov    $0x5a,%edx
		mov    (%esp),%ebx
		call   func_1822d
		mov    $0x91,%eax
		mov    $0x5a,%edx
		mov    0x4(%esp),%ebx
		call   func_1822d
		mov    $0xc3,%eax
		mov    $0x5a,%edx
		mov    0x8(%esp),%ebx
		call   func_1822d
		mov    $0xf5,%eax
		mov    $0x5a,%edx
		mov    0xc(%esp),%ebx
		call   func_1822d
		mov    $0x5f,%eax
		mov    $0x6e,%edx
		mov    0x10(%esp),%ebx
		call   func_1822d
		mov    $0x91,%eax
		mov    $0x6e,%edx
		mov    0x14(%esp),%ebx
		call   func_1822d
		mov    $0xc3,%eax
		mov    $0x6e,%edx
		mov    0x18(%esp),%ebx
		call   func_1822d
		add    $0x1c,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_37a56:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x1c,%esp
		mov    %eax,%edx
		dec    %edx
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cc(%eax),%al
		and    $0xff,%eax
		mov    %eax,(%esp)
		cmp    $0x80,%eax
		jl     jump_37a97
		mov    $0x100,%eax
		mov    (%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,(%esp)
		neg    %esi
		mov    %esi,(%esp)
	jump_37a97:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cd(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x4(%esp)
		cmp    $0x80,%eax
		jl     jump_37ace
		mov    $0x100,%eax
		mov    0x4(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0x4(%esp)
		neg    %eax
		mov    %eax,0x4(%esp)
	jump_37ace:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10ce(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x8(%esp)
		cmp    $0x80,%eax
		jl     jump_37b07
		mov    $0x100,%eax
		mov    0x8(%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,0x8(%esp)
		neg    %esi
		mov    %esi,0x8(%esp)
	jump_37b07:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10cf(%eax),%al
		and    $0xff,%eax
		mov    %eax,0xc(%esp)
		cmp    $0x80,%eax
		jl     jump_37b3e
		mov    $0x100,%eax
		mov    0xc(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0xc(%esp)
		neg    %eax
		mov    %eax,0xc(%esp)
	jump_37b3e:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d0(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x10(%esp)
		cmp    $0x80,%eax
		jl     jump_37b77
		mov    $0x100,%eax
		mov    0x10(%esp),%ecx
		sub    %ecx,%eax
		mov    %eax,%esi
		mov    %eax,0x10(%esp)
		neg    %esi
		mov    %esi,0x10(%esp)
	jump_37b77:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d1(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x14(%esp)
		cmp    $0x80,%eax
		jl     jump_37bae
		mov    $0x100,%eax
		mov    0x14(%esp),%ebp
		sub    %ebp,%eax
		mov    %eax,0x14(%esp)
		neg    %eax
		mov    %eax,0x14(%esp)
	jump_37bae:
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x5,%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    data_f10d2(%eax),%al
		and    $0xff,%eax
		mov    %eax,0x18(%esp)
		cmp    $0x80,%eax
		jl     jump_37be7
		mov    $0x100,%eax
		mov    0x18(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,%ecx
		mov    %eax,0x18(%esp)
		neg    %ecx
		mov    %ecx,0x18(%esp)
	jump_37be7:
		mov    $0x46,%eax
		mov    data_15b9cc,%esi
		mov    $0x55,%edx
		push   %esi
		mov    $0x5a,%ebx
		mov    $0x62,%ecx
		call   func_1843d
		mov    $0x48,%eax
		mov    $0x5a,%edx
		mov    $data_521f0,%ebx
		mov    $0x62,%ecx
		call   func_18274
		mov    data_15b9cc,%edi
		mov    $0x78,%eax
		push   %edi
		mov    $0x55,%edx
		mov    $0x8c,%ebx
		call   func_1843d
		mov    $0x7c,%eax
		mov    $0x5a,%edx
		mov    $data_521f4,%ebx
		mov    $0x62,%ecx
		call   func_18274
		mov    data_15b9cc,%ebp
		mov    $0xaa,%eax
		push   %ebp
		mov    $0x55,%edx
		mov    $0xbe,%ebx
		call   func_1843d
		mov    $0xac,%eax
		mov    $0x5a,%edx
		mov    $data_521f8,%ebx
		mov    $0x62,%ecx
		call   func_18274
		mov    data_15b9cc,%eax
		mov    $0x55,%edx
		push   %eax
		mov    $0xf0,%ebx
		mov    $0xdc,%eax
		call   func_1843d
		mov    $0xde,%eax
		mov    $0x5a,%edx
		mov    $data_521fc,%ebx
		mov    $0x76,%ecx
		call   func_18274
		mov    data_15b9cc,%edx
		mov    $0xaa,%eax
		push   %edx
		mov    $0xbe,%ebx
		mov    $0x69,%edx
		call   func_1843d
		mov    $0xae,%eax
		mov    $0x6e,%edx
		mov    $data_52200,%ebx
		call   func_18274
		mov    $0x46,%eax
		mov    data_99256,%ebx
		mov    $0x69,%edx
		mov    data_15b9cc,%ecx
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $0x78,%eax
		mov    data_99382,%ebx
		mov    $0x69,%edx
		mov    data_15b9cc,%ecx
		mov    0xa(%ebx),%ebx
		call   func_2b240
		mov    $0x5f,%eax
		mov    $0x5a,%edx
		mov    (%esp),%ebx
		call   func_1822d
		mov    $0x91,%eax
		mov    $0x5a,%edx
		mov    0x4(%esp),%ebx
		call   func_1822d
		mov    $0xc3,%eax
		mov    $0x5a,%edx
		mov    0x8(%esp),%ebx
		call   func_1822d
		mov    $0xf5,%eax
		mov    $0x5a,%edx
		mov    0xc(%esp),%ebx
		call   func_1822d
		mov    $0x5f,%eax
		mov    $0x6e,%edx
		mov    0x10(%esp),%ebx
		call   func_1822d
		mov    $0x91,%eax
		mov    $0x6e,%edx
		mov    0x14(%esp),%ebx
		call   func_1822d
		mov    $0xc3,%eax
		mov    $0x6e,%edx
		mov    0x18(%esp),%ebx
		call   func_1822d
		add    $0x1c,%esp
		jmp    jump_36097


/*----------------------------------------------------------------*/
func_37db2:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmp    $0x2,%bx
		jb     jump_37dc9
		jbe    jump_37dd6
		cmp    $0x3,%bx
		je     jump_37ddd
		jmp    jump_37de2
	jump_37dc9:
		cmp    $0x1,%bx
		jne    jump_37de2
		inc    %dl
		mov    %dl,0x5b(%eax)
		jmp    jump_37de2
	jump_37dd6:
		inc    %dl
		mov    %dl,0x5a(%eax)
		jmp    jump_37de2
	jump_37ddd:
		inc    %dl
		mov    %dl,0x5d(%eax)
	jump_37de2:
		movswl %cx,%ebx
		mov    %ebx,%edx
		shl    $0x5,%edx
		add    %ebx,%edx
		add    %edx,%edx
		mov    0x40(%eax),%bh
		mov    data_f10cc(%edx),%bl
		add    %bl,%bh
		mov    %bh,0x40(%eax)
		mov    data_f10cd(%edx),%bl
		add    %bl,0x41(%eax)
		mov    data_f10ce(%edx),%bl
		add    %bl,0x42(%eax)
		mov    data_f10cf(%edx),%bl
		add    %bl,0x43(%eax)
		xor    %ebx,%ebx
		mov    0x44(%eax),%di
		mov    data_f10d0(%edx),%bl
		add    %ebx,%edi
		mov    %di,0x44(%eax)
		cmp    $0x2,%si
		je     jump_37e41
		mov    data_f10d1(%edx),%dl
		mov    0x46(%eax),%bx
		xor    %dh,%dh
		add    %edx,%ebx
		mov    %bx,0x46(%eax)
	jump_37e41:
		movswl %cx,%ebx
		mov    %ebx,%edx
		shl    $0x5,%edx
		add    %ebx,%edx
		mov    0x59(%eax),%cl
		mov    data_f10d3(,%edx,2),%dl
		add    %dl,%cl
		mov    %cl,0x59(%eax)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_37e5e:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebx
		cmp    $0x2,%dx
		jb     jump_37e74
		jbe    jump_37e87
		cmp    $0x3,%dx
		je     jump_37e93
		jmp    jump_37e9d
	jump_37e74:
		cmp    $0x1,%dx
		jne    jump_37e9d
		movzbw 0x5b(%eax),%si
		movb   $0x0,0x5b(%eax)
		sub    %edx,%esi
		jmp    jump_37e9d
	jump_37e87:
		movzbw 0x5a(%eax),%si
		dec    %esi
		movb   $0x0,0x5a(%eax)
		jmp    jump_37e9d
	jump_37e93:
		movzbw 0x5d(%eax),%si
		dec    %esi
		movb   $0x0,0x5d(%eax)
	jump_37e9d:
		movswl %si,%ecx
		mov    %ecx,%edx
		shl    $0x5,%edx
		add    %ecx,%edx
		add    %edx,%edx
		mov    0x40(%eax),%ch
		mov    data_f10cc(%edx),%cl
		sub    %cl,%ch
		mov    %ch,0x40(%eax)
		mov    data_f10cd(%edx),%cl
		sub    %cl,0x41(%eax)
		mov    data_f10ce(%edx),%cl
		sub    %cl,0x42(%eax)
		mov    data_f10cf(%edx),%cl
		sub    %cl,0x43(%eax)
		xor    %ecx,%ecx
		mov    0x44(%eax),%di
		mov    data_f10d0(%edx),%cl
		sub    %ecx,%edi
		mov    %di,0x44(%eax)
		cmp    $0x2,%bx
		je     jump_37efc
		mov    data_f10d1(%edx),%dl
		mov    0x46(%eax),%bx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    %bx,0x46(%eax)
	jump_37efc:
		movswl %si,%ecx
		mov    %ecx,%edx
		shl    $0x5,%edx
		add    %ecx,%edx
		mov    data_f10d3(,%edx,2),%dl
		sub    %dl,0x59(%eax)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_37f18:
/*----------------------------------------------------------------*/
		push   %ebp
		mov    %esp,%ebp
		add    $0xfffffff4,%esp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %eax,%esi
		mov    $0x140,%eax
		sub    %ebx,%eax
		mov    %eax,-0xc(%ebp)
		mov    %ebx,-0x4(%ebp)
		shrl   $0x2,-0x4(%ebp)
		mov    %ecx,-0x8(%ebp)
		mov    -0x8(%ebp),%ebx
	jump_37f3b:
		mov    -0x4(%ebp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    -0xc(%ebp),%esi
		add    -0xc(%ebp),%edi
		dec    %ebx
		jne    jump_37f3b
		pop    %esi
		pop    %edi
		leave
		ret
.data
data_37f4d:
		.ascii  "\x87\x00\x00\x00\x83\x00\x00\x00"
		.ascii  "\x81\x00\x00\x00\x82\x00\x00\x00"
.text


/*----------------------------------------------------------------*/
func_37f5d:
/*----------------------------------------------------------------*/
		push   $0x28
		call   func___CHK
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		mov    %eax,%ebp
		mov    %edx,0x10(%esp)
		mov    %esp,%edi
		mov    $data_37f4d,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %eax,%edx
		sar    $0x10,%edx
		mov    (%esp,%ebx,4),%eax
#if 0
		call   func_outp_
#endif
		mov    $0xc,%eax
		xor    %edx,%edx
#if 0
		call   func_outp_
#endif
		mov    %ebp,%edx
		and    $0xff,%edx
		lea    (%ebx,%ebx,1),%ecx
		mov    %ecx,%eax
#if 0
		call   func_outp_
#endif
		mov    %ebp,%edx
		sar    $0x8,%edx
		and    $0xff,%edx
		mov    %ecx,%eax
#if 0
		call   func_outp_
#endif
		mov    0x10(%esp),%ebp
		dec    %ebp
		mov    %ebp,%edx
		and    $0xff,%edx
		inc    %ecx
		mov    %ecx,%eax
#if 0
		call   func_outp_
#endif
		mov    %ebp,%edx
		sar    $0x8,%edx
		and    $0xff,%edx
		mov    %ecx,%eax
#if 0
		call   func_outp_
#endif
		mov    %ebx,%edx
		or     $0x58,%dl
		mov    $0xb,%eax
#if 0
		call   func_outp_
#endif
		mov    $0xa,%eax
		mov    %ebx,%edx
#if 0
		call   func_outp_
#endif
		add    $0x14,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_38026:
/*----------------------------------------------------------------*/
#if 0
		push   $0x8
		call   func___CHK
		push   %edx
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		mov    $0x1,%edx
		call   func_outp_
		xor    %edx,%edx
	jump_38045:
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		call   func_inp_
		inc    %edx
		cmp    $0x64,%edx
		jl     jump_38045
		mov    soundblaster_adr,%eax
		add    $0x6,%eax
		xor    %edx,%edx
		call   func_outp_
		xor    %edx,%edx
	jump_38069:
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		test   $0x80,%al
		je     jump_380a2
		xor    %edx,%edx
	jump_3807c:
		mov    soundblaster_adr,%eax
		add    $0xa,%eax
		call   func_inp_
		cmp    $0xaa,%eax
		jne    jump_38097
		mov    $0x1,%eax
		pop    %edx
		ret
	jump_38097:
		inc    %edx
		cmp    $0x400,%edx
		jl     jump_3807c
		jmp    jump_380ab
	jump_380a2:
		inc    %edx
		cmp    $0x400,%edx
		jl     jump_38069
	jump_380ab:
		mov    $0xffffffff,%eax
		pop    %edx
#endif
		ret


/*----------------------------------------------------------------*/
func_380e9:
/*----------------------------------------------------------------*/
#if 0
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
		jmp    jump_380fe
	jump_380fd:
		inc    %edx
	jump_380fe:
		lea    0xc(%ebx),%eax
		call   func_inp_
		test   $0x80,%al
		je     jump_38112
		cmp    $0x10000,%edx
		jb     jump_380fd
	jump_38112:
		cmp    $0x10000,%edx
		je     jump_38126
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0xc(%ebx),%eax
		call   func_outp_
	jump_38126:
		pop    %ecx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
func_38129:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		movl   $0x2,soundblaster_irq
	jump_38154:
		mov    $0x20,%eax
		mov    %eax,%edx
		call   func_outp_
		call   func_3c253
	jump_38165:
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa
#if 1
    ret
#else
		iret
#endif


/*----------------------------------------------------------------*/
func_3816d:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		movl   $0x3,soundblaster_irq
		jmp    jump_38154


/*----------------------------------------------------------------*/
func_3819a:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		movl   $0x5,soundblaster_irq
		jmp    jump_38154


/*----------------------------------------------------------------*/
func_381c7:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		movl   $0x7,soundblaster_irq
		jmp    jump_38154


/*----------------------------------------------------------------*/
func_381f7:
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		movl   $0xa,soundblaster_irq
		jmp    jump_38154
	jump_3850b:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_38541: /* soundblaster ISR */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld
		call   func___GETDS
		call   func_3c251
		mov    soundblaster_adr,%eax
		add    $0xe,%eax
		call   func_inp_
		mov    soundblaster_adr,%eax
		mov    $0x14,%edx
		call   func_380e9
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_380e9
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_380e9
		jmp    jump_38154


/*----------------------------------------------------------------*/
GLOBAL (pit_isr) /* 38594 */
/*----------------------------------------------------------------*/
		pusha
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		sub    $0x4,%esp
		cld
#if 1
    /* I do not know %eax in PIT ISR.
     * I just give 0 to %eax.
     */
    xor    %eax,%eax
#endif
#if 0
		call   func___GETDS
#endif
		call   func_3c251
#if 0
		out    %al,$0xc
#endif
		mov    soundblaster_dma,%dl
		xor    %dh,%dh
		add    %dl,%dl
		inc    %dl
#if 0
		in     (%dx),%al
#endif
		mov    %al,%ah
#if 0
		in     (%dx),%al
#endif
		xchg   %al,%ah
	jump_385bf:
		mov    %ax,%cx
#if 0
		in     (%dx),%al
#endif
		mov    %al,%ah
#if 0
		in     (%dx),%al
#endif
		xchg   %al,%ah
		sub    %ax,%cx
		cmp    $0x10,%cx
		jg     jump_385bf
		cmp    $0xfff0,%cx
		jl     jump_385bf
		movzwl %ax,%eax
		neg    %eax
		add    $0x400,%eax
		cmp    $0x200,%eax
		jl     jump_38922
		cmpl   $0x0,data_1b61b8
		jne    jump_38c5d
		mov    data_1b61c4,%edi
		mov    $data_1b5cd0,%esi
		mov    $0x200,%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		shr    $0x2,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		cmpl   $0x1,data_1b60e0
		jne    jump_3865c
		mov    data_1b60e4,%ecx
		add    data_1b60e8,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_38631:
		mov    data_1b60dc,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		mov    data_1a4f50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38631
		addl   $0x200,data_1b60e8
	jump_3865c:
		cmpl   $0x0,data_1b60e0
		jne    jump_38691
		movb   $0x7f,-0x4(%ebp)
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_38670:
		mov    data_1b60dc,%ecx
		shl    $0x8,%ecx
		xor    %edx,%edx
		mov    -0x4(%ebp),%dl
		mov    data_1a4f50(%ecx,%edx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38670
	jump_38691:
		cmpl   $0x1,data_1b60fc
		jne    jump_386ef
		mov    data_1b6100,%ecx
		add    data_1b6104,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_386ad:
		mov    data_1b60f8,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_386ad
		addl   $0x200,data_1b6104
	jump_386ef:
		cmpl   $0x1,data_1b6118
		jne    jump_38747
		mov    data_1b611c,%ecx
		add    data_1b6120,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_3870b:
		mov    data_1b6114,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    data_1a4f50(%edx),%bl
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_3870b
		addl   $0x200,data_1b6120
	jump_38747:
		cmpl   $0x1,data_1b6134
		jne    jump_387a3
		mov    data_1b6138,%ecx
		add    data_1b613c,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_38763:
		mov    data_1b6130,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38763
		addl   $0x200,data_1b613c
	jump_387a3:
		cmpl   $0x1,data_1b6150
		jne    jump_387ff
		mov    data_1b6154,%ecx
		add    data_1b6158,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_387bf:
		mov    data_1b614c,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_387bf
		addl   $0x200,data_1b6158
	jump_387ff:
		cmpl   $0x1,data_1b616c
		jne    jump_3885b
		mov    data_1b6170,%ecx
		add    data_1b6174,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_3881b:
		mov    data_1b6168,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_3881b
		addl   $0x200,data_1b6174
	jump_3885b:
		cmpl   $0x1,data_1b6188
		jne    jump_388b7
		mov    data_1b618c,%ecx
		add    data_1b6190,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_38877:
		mov    data_1b6184,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38877
		addl   $0x200,data_1b6190
	jump_388b7:
		cmpl   $0x1,data_1b61a4
		jne    jump_38913
		mov    data_1b61a8,%ecx
		add    data_1b61ac,%ecx
		mov    $data_1b5cd0,%eax
		xor    %esi,%esi
	jump_388d3:
		mov    data_1b61a0,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_388d3
		addl   $0x200,data_1b61ac
	jump_38913:
		movl   $0x200,data_1b61b8
		jmp    jump_38c5d
	jump_38922:
		mov    data_1b61b8,%edx
		cmp    $0x200,%edx
		jne    jump_38c5d
		mov    data_1b61c4,%edi
		add    %edx,%edi
		mov    $data_1b5ed0,%esi
		mov    %edx,%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		shr    $0x2,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		cmpl   $0x1,data_1b60e0
		jne    jump_38996
		mov    data_1b60e4,%ecx
		add    data_1b60e8,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_3896b:
		mov    data_1b60dc,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		mov    data_1a4f50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_3896b
		addl   $0x200,data_1b60e8
	jump_38996:
		cmpl   $0x0,data_1b60e0
		jne    jump_389cb
		movb   $0x7f,-0x4(%ebp)
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_389aa:
		mov    data_1b60dc,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    -0x4(%ebp),%bl
		mov    data_1a4f50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_389aa
	jump_389cb:
		cmpl   $0x1,data_1b60fc
		jne    jump_38a27
		mov    data_1b6100,%ecx
		add    data_1b6104,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_389e7:
		mov    data_1b60f8,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		and    $0xff,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_389e7
		addl   $0x200,data_1b6104
	jump_38a27:
		cmpl   $0x1,data_1b6118
		jne    jump_38a85
		mov    data_1b611c,%ecx
		add    data_1b6120,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38a43:
		mov    data_1b6114,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38a43
		addl   $0x200,data_1b6120
	jump_38a85:
		cmpl   $0x1,data_1b6134
		jne    jump_38ae3
		mov    data_1b6138,%ecx
		add    data_1b613c,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38aa1:
		mov    data_1b6130,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38aa1
		addl   $0x200,data_1b613c
	jump_38ae3:
		cmpl   $0x1,data_1b6150
		jne    jump_38b3b
		mov    data_1b6154,%ecx
		add    data_1b6158,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38aff:
		mov    data_1b614c,%edx
		shl    $0x8,%edx
		xor    %ebx,%ebx
		mov    (%ecx),%bl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    data_1a4f50(%edx),%bl
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38aff
		addl   $0x200,data_1b6158
	jump_38b3b:
		cmpl   $0x1,data_1b616c
		jne    jump_38b99
		mov    data_1b6170,%ecx
		add    data_1b6174,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38b57:
		mov    data_1b6168,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38b57
		addl   $0x200,data_1b6174
	jump_38b99:
		cmpl   $0x1,data_1b6188
		jne    jump_38bf7
		mov    data_1b618c,%ecx
		add    data_1b6190,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38bb5:
		mov    data_1b6184,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38bb5
		addl   $0x200,data_1b6190
	jump_38bf7:
		cmpl   $0x1,data_1b61a4
		jne    jump_38c55
		mov    data_1b61a8,%ecx
		add    data_1b61ac,%ecx
		mov    $data_1b5ed0,%eax
		xor    %esi,%esi
	jump_38c13:
		mov    data_1b61a0,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%ecx),%dl
		add    %ebx,%edx
		mov    data_1a4f50(%edx),%dl
		mov    %edx,%ebx
		and    $0xff,%ebx
		shl    $0x8,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    data_1a5a50(%edx,%ebx,1),%dl
		mov    %dl,(%eax)
		inc    %eax
		inc    %ecx
		inc    %esi
		cmp    $0x200,%esi
		jl     jump_38c13
		addl   $0x200,data_1b61ac
	jump_38c55:
		xor    %edx,%edx
		mov    %edx,data_1b61b8
	jump_38c5d:
		mov    data_1b60d4,%eax
		sub    $0x400,%eax
		cmp    data_1b60e8,%eax
		jge    jump_38c92
		mov    data_1b60d8,%ecx
		dec    %ecx
		mov    %ecx,data_1b60d8
		cmp    $0x1,%ecx
		jl     jump_38c8a
		xor    %eax,%eax
		mov    %eax,data_1b60e8
		jmp    jump_38c92
	jump_38c8a:
		xor    %edi,%edi
		mov    %edi,data_1b60e0
	jump_38c92:
		mov    data_1b60f0,%eax
		sub    $0x400,%eax
		cmp    data_1b6104,%eax
		jge    jump_38cc8
		mov    data_1b60f4,%ebx
		dec    %ebx
		mov    %ebx,data_1b60f4
		cmp    $0x1,%ebx
		jl     jump_38cc0
		xor    %edi,%edi
		mov    %edi,data_1b6104
		jmp    jump_38cc8
	jump_38cc0:
		xor    %esi,%esi
		mov    %esi,data_1b60fc
	jump_38cc8:
		mov    data_1b610c,%eax
		sub    $0x400,%eax
		cmp    data_1b6120,%eax
		jge    jump_38cfe
		mov    data_1b6110,%ebx
		dec    %ebx
		mov    %ebx,data_1b6110
		cmp    $0x1,%ebx
		jl     jump_38cf6
		xor    %edi,%edi
		mov    %edi,data_1b6120
		jmp    jump_38cfe
	jump_38cf6:
		xor    %esi,%esi
		mov    %esi,data_1b6118
	jump_38cfe:
		mov    data_1b6128,%eax
		sub    $0x400,%eax
		cmp    data_1b613c,%eax
		jge    jump_38d34
		mov    data_1b612c,%ebx
		dec    %ebx
		mov    %ebx,data_1b612c
		cmp    $0x1,%ebx
		jl     jump_38d2c
		xor    %edi,%edi
		mov    %edi,data_1b613c
		jmp    jump_38d34
	jump_38d2c:
		xor    %esi,%esi
		mov    %esi,data_1b6134
	jump_38d34:
		mov    data_1b6144,%eax
		sub    $0x400,%eax
		cmp    data_1b6158,%eax
		jge    jump_38d6a
		mov    data_1b6148,%ebx
		dec    %ebx
		mov    %ebx,data_1b6148
		cmp    $0x1,%ebx
		jl     jump_38d62
		xor    %edi,%edi
		mov    %edi,data_1b6158
		jmp    jump_38d6a
	jump_38d62:
		xor    %esi,%esi
		mov    %esi,data_1b6150
	jump_38d6a:
		mov    data_1b6160,%eax
		sub    $0x400,%eax
		cmp    data_1b6174,%eax
		jge    jump_38da0
		mov    data_1b6164,%ebx
		dec    %ebx
		mov    %ebx,data_1b6164
		cmp    $0x1,%ebx
		jl     jump_38d98
		xor    %edi,%edi
		mov    %edi,data_1b6174
		jmp    jump_38da0
	jump_38d98:
		xor    %esi,%esi
		mov    %esi,data_1b616c
	jump_38da0:
		mov    data_1b617c,%eax
		sub    $0x400,%eax
		cmp    data_1b6190,%eax
		jge    jump_38dd6
		mov    data_1b6180,%ebx
		dec    %ebx
		mov    %ebx,data_1b6180
		cmp    $0x1,%ebx
		jl     jump_38dce
		xor    %edi,%edi
		mov    %edi,data_1b6190
		jmp    jump_38dd6
	jump_38dce:
		xor    %esi,%esi
		mov    %esi,data_1b6188
	jump_38dd6:
		mov    data_1b6198,%eax
		sub    $0x400,%eax
		cmp    data_1b61ac,%eax
		jge    jump_38e0c
		mov    data_1b619c,%ebx
		dec    %ebx
		mov    %ebx,data_1b619c
		cmp    $0x1,%ebx
		jl     jump_38e04
		xor    %edi,%edi
		mov    %edi,data_1b61ac
		jmp    jump_38e0c
	jump_38e04:
		xor    %esi,%esi
		mov    %esi,data_1b61a4
	jump_38e0c:
		cmpl   $0xffff,data_1b61d8
		jbe    jump_38e22
		xor    %ebx,%ebx
		mov    %ebx,data_1b61d0
		jmp    jump_38e28
	jump_38e22:
		incl   data_1b61d0
	jump_38e28:
		mov    data_1b61d8,%ecx
		test   %ecx,%ecx
		ja     jump_38e3c
		xor    %edi,%edi
		mov    %edi,data_1b61d8
		jmp    jump_38e45
	jump_38e3c:
		lea    -0x1(%ecx),%esi
		mov    %esi,data_1b61d8
	jump_38e45:
		mov    data_1b61b4,%eax
		add    $0x4268,%eax
		mov    %eax,data_1b61b4
		cmp    $0xffff,%eax
		jbe    jump_38e6a
		xor    %ebx,%ebx
		mov    %ebx,data_1b61b4
#if 0
		pushf
		lcall  *data_1b61e0
#endif
	jump_38e6a:
		mov    $0x20,%eax
		mov    %eax,%edx
#if 0
		call   func_outp_
#endif
		call   func_3c253
		mov    %ebp,%esp
		jmp    jump_38165


/*----------------------------------------------------------------*/
func_38f29:
/*----------------------------------------------------------------*/
		push   $0x44
		call   func___CHK
		push   %ecx
		push   %esi
		sub    $0x38,%esp
		mov    %edx,%ecx
		mov    %ebx,%esi
		movw   $0x100,0x1c(%esp)
		mov    %ax,0x20(%esp)
		mov    $0x31,%eax
		lea    0x1c(%esp),%edx
		mov    %esp,%ebx
		call   w_dos_int386
		mov    (%esp),%eax
		mov    %ax,(%esi)
		xor    %eax,%eax
		mov    0xc(%esp),%ax
		mov    %eax,(%ecx)
		add    $0x38,%esp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_38f6d:
/*----------------------------------------------------------------*/
		push   $0x44
		call   func___CHK
		push   %ebx
		push   %edx
		sub    $0x38,%esp
		movw   $0x101,0x1c(%esp)
		mov    %ax,0x28(%esp)
		mov    $0x31,%eax
		lea    0x1c(%esp),%edx
		mov    %esp,%ebx
		call   w_dos_int386
		add    $0x38,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_38f9e:
/*----------------------------------------------------------------*/
		push   $0x48
		call   func___CHK
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x38,%esp
		mov    %eax,%edi
		mov    $0x4268,%ebp
		mov    %edx,soundblaster_adr_is_not_zero
		mov    %ebx,soundblaster_adr
		mov    %ecx,soundblaster_irq
		mov    0x48(%esp),%eax
		mov    %eax,soundblaster_dma
		movw   $0x400,0x1c(%esp)
		mov    $0x31,%eax
		lea    0x1c(%esp),%edx
		mov    %esp,%ebx
#if 1
    movb   $0x08,0xd(%esp)
    movb   $0x70,0xc(%esp)
#else
		call   w_dos_int386 /* get DPMI version */
#endif
		xor    %eax,%eax
    /* curr value of virtual master interrupt controller base interrupt */
		mov    0xd(%esp),%al
		xor    %edx,%edx
    /* curr value of virtual slave interrupt controller base interrupt */
		mov    0xc(%esp),%dl
		mov    soundblaster_irq,%ebx
		cmp    $0x8,%ebx
		jge    jump_39002
		add    %ebx,%eax
		jmp    jump_39006
	jump_39002:
		lea    -0x8(%ebx,%edx,1),%eax
	jump_39006:
		mov    %eax,soundblaster_interrupt_number
		xor    %ecx,%ecx
		mov    $0xa,%ebx
	jump_39012:
		mov    %ecx,%edx
		mov    %ecx,%eax
		shl    $0x3,%eax
		sub    %ecx,%eax
		xor    %esi,%esi
		mov    %esi,data_1b60e4(,%eax,4)
		xor    %ecx,%edx
		mov    %edx,data_1b60d4(,%eax,4)
		mov    %ebx,data_1b60dc(,%eax,4)
		mov    %esi,data_1b60e0(,%eax,4)
		mov    %esi,data_1b60e8(,%eax,4)
		inc    %ecx
		cmp    $0x8,%ecx
		jl     jump_39012
		xor    %ecx,%ecx
	jump_3904a:
		xor    %ebx,%ebx
		mov    %ebx,data_1b5a54(,%ecx,8)
		mov    %ebx,data_1b5a50(,%ecx,8)
		inc    %ecx
		cmp    $0x50,%ecx
		jl     jump_3904a
		xor    %ecx,%ecx
	jump_39062:
		xor    %ebx,%ebx
	jump_39064:
		mov    %ecx,%eax
		add    %ebx,%eax
		sub    $0x80,%eax
		cmp    $0xff,%ax
		jle    jump_3907b
		mov    $0xff,%eax
		jmp    jump_39082
	jump_3907b:
		test   %ax,%ax
		jge    jump_39082
		xor    %eax,%eax
	jump_39082:
		mov    %ecx,%edx
		shl    $0x8,%edx
		mov    %al,data_1a5a50(%edx,%ebx,1)
		inc    %ebx
		cmp    $0x100,%ebx
		jl     jump_39064
		inc    %ecx
		cmp    $0x100,%ecx
		jl     jump_39062
		xor    %ecx,%ecx
	jump_390a2:
		xor    %ebx,%ebx
		jmp    jump_390ae
	jump_390a6:
		cmp    $0x80,%ebx
		jge    jump_390de
	jump_390ae:
		mov    $0x7f,%edx
		sub    %ebx,%edx
		imul   %ecx,%edx
		mov    $0xa,%esi
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		mov    $0x7f,%edx
		sub    %eax,%edx
		mov    %ecx,%eax
		shl    $0x8,%eax
		mov    %dl,data_1a4f50(%ebx,%eax,1)
		mov    $0xa,%esi
		jmp    jump_390fa
	jump_390de:
		lea    -0x7f(%ebx),%edx
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x1f,%edx
		idiv   %esi
		add    $0x7f,%eax
		mov    %ecx,%edx
		shl    $0x8,%edx
		mov    %al,data_1a4f50(%edx,%ebx,1)
	jump_390fa:
		inc    %ebx
		cmp    $0x100,%ebx
		jl     jump_390a6
		inc    %ecx
		cmp    $0xb,%ecx
		jl     jump_390a2
		mov    $0x41,%eax
		mov    $data_1b61bc,%edx
		mov    $data_1b61ec,%ebx
#if 0
		call   func_38f29 /* allocate dos memory block */
#endif
		mov    data_1b61ea,%eax
		sar    $0x10,%eax
		shl    $0x4,%eax
#if 1
    movl   $1040,%eax
    call   w_dos_malloc
#endif
		mov    %eax,data_1b61c4
		xor    %eax,%eax
		mov    %eax,data_1b61b8
		xor    %ecx,%ecx
	jump_39136:
		mov    data_1b61c4,%eax
		movb   $0x7f,(%ecx,%eax,1)
		movb   $0x7f,data_1b5cd0(%ecx)
		inc    %ecx
		cmp    $0x400,%ecx
		jl     jump_39136
		mov    $0x21,%eax
#if 0
		call   func_inp_ /* read PIC masks */
#endif
		mov    %eax,pic_masks
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_39207
		call   func_38026
		mov    soundblaster_interrupt_number,%eax
#if 0
		call   func__dos_getvect_
#endif
		mov    %dx,data_1b61ea
		mov    %eax,data_1b61e6
		mov    soundblaster_interrupt_number,%eax
		mov    %cs,%ecx
		mov    $func_38541,%ebx
#if 0
		call   func__dos_setvect_
#endif
		mov    soundblaster_irq,%cl
		mov    $0xfe,%edx
		shl    %cl,%edx
		and    pic_masks,%edx
		mov    $0x21,%eax
#if 0
		call   func_outp_
#endif
		mov    $0x1,%eax
		call   func_3975c
		mov    %edi,%eax
		call   func_39271
		mov    soundblaster_dma,%ebx
		mov    data_1b61c4,%eax
		mov    $0x400,%edx
		call   func_37f5d
		mov    soundblaster_adr,%eax
		mov    $0x14,%edx
		call   func_380e9
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_380e9
		mov    soundblaster_adr,%eax
		mov    $0xff,%edx
		call   func_380e9
	jump_39207:
		mov    $0x8,%eax
#if 0
		call   func__dos_getvect_
#endif
		mov    %dx,data_1b61e4
		mov    %eax,data_1b61e0
		mov    $0x8,%eax
		mov    %cs,%ecx
		mov    $pit_isr,%ebx
#if 1
    call   w_game_install_pit_isr
#else
		call   func__dos_setvect_
#endif
		call   func_3c251
		mov    $0x43,%eax
		mov    $0x36,%edx
#if 0
		call   func_outp_
#endif
		mov    %ebp,%edx
		and    $0xff,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		mov    %ebp,%edx
		sar    $0x8,%edx
		mov    $0x40,%eax
#if 0
		call   func_outp_
#endif
		call   func_3c253
		add    $0x38,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func_39271:
/*----------------------------------------------------------------*/
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    soundblaster_adr,%eax
		mov    $0x40,%edx
		call   func_380e9
		mov    $0xf4240,%eax
		mov    %eax,%edx
		sar    $0x1f,%edx
		idiv   %ebx
		mov    $0x100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    %al,%dl
		mov    soundblaster_adr,%eax
		call   func_380e9
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_392b4:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		call   func_3c251
		mov    pic_masks,%edx
		mov    $0x21,%eax
#if 0
		call   func_outp_
#endif
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_39307
		call   func_38026
		xor    %eax,%eax
		call   func_3975c
		call   func_39793
		mov    data_1b61ea,%cx
		mov    data_1b61e6,%ebx
		mov    soundblaster_interrupt_number,%eax
#if 0
		call   func__dos_setvect_
#endif
	jump_39307:
		mov    data_1b61e4,%cx
		mov    data_1b61e0,%ebx
		mov    $0x8,%eax
#if 1
    call   w_game_uninstall_pit_isr
#else
		call   func__dos_setvect_
#endif
		mov    $0x43,%eax
		mov    $0x36,%edx
#if 0
		call   func_outp_
#endif
		mov    $0x40,%eax
		xor    %edx,%edx
#if 0
		call   func_outp_
#endif
		mov    $0x40,%eax
		xor    %edx,%edx
#if 0
		call   func_outp_
#endif
		call   func_3c253
		mov    data_1b61bc,%eax
#if 1
    movl   data_1b61c4,%eax
    call   w_dos_free
#else
		call   func_38f6d
#endif
		call   func_3970f
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3935d:
/*----------------------------------------------------------------*/
		push   $0x18
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   w_dos_ftell
		mov    %eax,%esi
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x2,%ebx
		call   w_dos_fseek
		mov    %ecx,%eax
		call   w_dos_ftell
		mov    %eax,%edi
		mov    %ecx,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   w_dos_fseek
		mov    %edi,%eax
		jmp    jump_3850b


/*----------------------------------------------------------------*/
func_39431:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cmp    $0x50,%edx
		jl     jump_3944e
	jump_39445:
		mov    $0xffffffff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_3944e:
		mov    $data_52204,%edx
		call   w_dos_fopen
		mov    %eax,%esi
		xor    %edx,%edx
	jump_3945c:
		mov    %edx,%eax
		call   func_39647
		inc    %edx
		cmp    $0x8,%edx
		jl     jump_3945c
		mov    %ecx,%eax
		shl    $0x3,%eax
		mov    data_1b5a54(%eax),%edx
		test   %edx,%edx
		je     jump_3947f
		mov    %edx,%eax
		call   w_dos_free
	jump_3947f:
		mov    %esi,%eax
		call   func_3935d
		shl    $0x3,%ecx
		mov    %eax,data_1b5a50(%ecx)
		call   w_dos_malloc
		mov    %eax,data_1b5a54(%ecx)
		test   %eax,%eax
		je     jump_39445
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		call   w_dos_fseek
		mov    data_1b5a50(%ecx),%ebx
		mov    data_1b5a54(%ecx),%eax
		mov    $0x1,%edx
		mov    %esi,%ecx
		call   w_dos_fread
		mov    %esi,%eax
		call   w_dos_fclose
		mov    $0x1,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_394d1:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_39556
		cmp    $0x50,%ecx
		jge    jump_39556
		mov    $0x2,%edx
#if 1
    push   %eax
    pushl  $0
    pushl  data_1b5a50(,%ecx,8)
    pushl  data_1b5a54(,%ecx,8)
    call   w_audio_sound_play
    add    $12,%esp
    pop    %eax
#endif
	jump_394f7:
		mov    %edx,%eax
		shl    $0x3,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		cmpl   $0x0,data_1b60e0(%eax)
		jne    jump_39550
		movl   $0x5622,data_1b60d0(%eax)
		mov    data_1b5a50(,%ecx,8),%ebx
		mov    %ebx,data_1b60d4(%eax)
		mov    %edi,data_1b60d8(%eax)
		mov    data_1b5a54(,%ecx,8),%edx
		mov    %edx,data_1b60e4(%eax)
		xor    %edx,%edx
		mov    %edx,data_1b60e8(%eax)
		mov    %esi,data_1b60dc(%eax)
		movl   $0x1,data_1b60e0(%eax)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_39550:
		inc    %edx
		cmp    $0x8,%edx
		jl     jump_394f7
	jump_39556:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_39647:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		cmp    $0x7,%eax
		jle    jump_3965e
		mov    $0xffffffff,%eax
		pop    %edx
		ret
	jump_3965e:
		mov    %eax,%edx
		shl    $0x3,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %edx,data_1b60e0(,%eax,4)
		mov    $0x1,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_3970f:
/*----------------------------------------------------------------*/
		push   $0x14
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
	jump_3971f:
		mov    %edx,%eax
		call   func_39647
		inc    %edx
		cmp    $0x8,%edx
		jl     jump_3971f
		xor    %edx,%edx
	jump_3972e:
		mov    %edx,%ebx
		shl    $0x3,%ebx
		mov    data_1b5a54(%ebx),%ecx
		test   %ecx,%ecx
		je     jump_3974c
		mov    %ecx,%eax
		call   w_dos_free
		xor    %esi,%esi
		mov    %esi,data_1b5a54(%ebx)
	jump_3974c:
		inc    %edx
		cmp    $0x50,%edx
		jl     jump_3972e
		mov    $0x1,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3975c:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		mov    soundblaster_adr_is_not_zero,%edx
		cmp    $0x1,%edx
		jne    jump_39791
		cmp    %edx,%eax
		jne    jump_39782
		mov    soundblaster_adr,%eax
		mov    $0xd1,%edx
		jmp    jump_3978c
	jump_39782:
		mov    soundblaster_adr,%eax
		mov    $0xd3,%edx
	jump_3978c:
		call   func_380e9
	jump_39791:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_39793:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		cmpl   $0x1,soundblaster_adr_is_not_zero
		jne    jump_397b6
		mov    soundblaster_adr,%eax
		mov    $0xd0,%edx
		call   func_380e9
	jump_397b6:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_397dd:
/*----------------------------------------------------------------*/
		push   $0x3c
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x28,%esp
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %esi,data_1b62f0
		mov    $dpmi_real_mode_call_structure,%eax
		mov    $0x32,%ebx
		call   w_dos_memset
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $0xc,%ebx
		call   w_dos_memset
		movl   $0x1500,dpmi_real_mode_call_structure_eax
		mov    %esi,dpmi_real_mode_call_structure_ebx
		movw   $0x300,(%esp)
		movb   $0x2f,0x4(%esp)
		xor    %dl,%dl
		mov    %dl,0x5(%esp)
		xor    %ebx,%ebx
		mov    %bx,0x8(%esp)
		mov    %ds,%edx
		mov    $dpmi_real_mode_call_structure,%eax
		mov    %dx,0x1c(%esp)
		movl   $dpmi_real_mode_call_structure,0x14(%esp)
		mov    $0x31,%eax
		mov    %esp,%edx
		mov    %esp,%ebx
		lea    0x1c(%esp),%ecx
#if 1
    movw   $0x0001,dpmi_real_mode_call_structure_ebx
    movw   $0x0000,dpmi_real_mode_call_structure_ecx
#else
		call   w_dos_int386x
#endif
		mov    dpmi_real_mode_call_structure_ebx,%dx
		mov    %dx,data_8276c
		mov    dpmi_real_mode_call_structure_ecx,%al
		mov    %al,data_8276e
		and    $0xff,%eax
		mov    %eax,cdrom_starting_letter
		test   %dx,%dx
		jne    jump_39893
	jump_3988c:
		xor    %eax,%eax
		jmp    jump_39955
	jump_39893:
		call   cdrom_get_mscdex_version
		cmpl   $0x2,cdrom_mscdex_major_version
		jge    jump_398aa
		cmpl   $0x1,cdrom_mscdex_minor_version
		jl     jump_3988c
	jump_398aa:
		call   cdrom_get_audio_disc_info
		inc    %esi
		cmpw   $0x8102,cdrom_device_driver_request_return_status
		jne    jump_398c3
		cmp    $0x1f4,%esi
		jl     jump_398aa
	jump_398c3:
		cmp    $0x1f4,%esi
		je     jump_3988c
		cmpw   $0x8000,cdrom_device_driver_request_return_status
		jae    jump_3988c
		movl   $0x1,data_1b62f0
		mov    $0x2,%eax
		mov    $data_1b6354,%edx
		mov    $data_1b6352,%ebx
#if 0
		call   allocate_dos_memory_block
		xor    %eax,%eax
		mov    data_1b6354,%gs
		mov    %gs,data_82796
		xor    %ebx,%ebx
		mov    %eax,data_82792
		movb   $0x0,%gs:0x1(%eax)
		lgs    data_82792,%eax
		movb   $0x1,%gs:0x3(%eax)
		lgs    data_82792,%eax
		movb   $0x2,%gs:0x5(%eax)
		lgs    data_82792,%eax
		movb   $0x3,%gs:0x7(%eax)
#endif
		call   cdrom_get_audio_channel_info
		xor    %ecx,%ecx
		mov    %ecx,data_54038
		mov    %ebx,data_54030
		mov    %ebx,data_5402c
		call   func_39dec
		mov    $0x1,%eax
	jump_39955:
		add    $0x28,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
	jump_3995c:
		ret


/*----------------------------------------------------------------*/
func_3995d:
/*----------------------------------------------------------------*/
		push   $0x4
		call   func___CHK
		cmpl   $0x0,data_1b62f0
		je     jump_3995c
		call   func_39ed7
		mov    data_1b6352,%eax
		sar    $0x10,%eax


/*----------------------------------------------------------------*/
free_dos_memory_block: /* 3997d */
/*----------------------------------------------------------------*/
#if 0
		push   $0x28
		call   func___CHK
		push   %ebx
		push   %edx
		sub    $0x1c,%esp
		movl   $0x101,(%esp)
		cwtl
		mov    %eax,0xc(%esp)
		mov    $0x31,%eax
		mov    %esp,%edx
		mov    %esp,%ebx
		call   w_dos_int386
		add    $0x1c,%esp
		pop    %edx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
func_399ac:
/*----------------------------------------------------------------*/
		push   $0x10
		call   func___CHK
		push   %ebx
		push   %edx
		push   %edi
		cmpl   $0x0,data_1b62f0
		je     jump_39a3c
		call   func_3a581
		mov    data_7cae4,%ebx
		cmp    $0x1,%ebx
		jne    jump_39a1f
		mov    data_7cae0,%edi
		add    %ebx,%edi
		mov    %edi,data_7cae0
		cmp    %ebx,%edi
		jne    jump_399f9
		mov    data_5402a,%eax
		sar    $0x10,%eax
		call   cdrom_get_audio_track_info
		pop    %edi
		pop    %edx
		pop    %ebx
		ret
	jump_399f9:
		cmp    $0x2,%edi
		jne    jump_39a3c
		mov    data_5402a,%eax
		sar    $0x10,%eax
		mov    %ebx,%edx
		call   func_39e5e
		xor    %edx,%edx
		mov    %edx,data_7cae4
		mov    %edx,data_7cae0
		pop    %edi
		pop    %edx
		pop    %ebx
		ret
	jump_39a1f:
		xor    %eax,%eax
		mov    cdrom_device_driver_request_return_status,%ax
		sar    $0x8,%eax
		cmp    $0x1,%eax
		jne    jump_39a3c
		cmp    data_54030,%eax
		jne    jump_39a3c
		mov    %eax,data_7cae4
	jump_39a3c:
		pop    %edi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_39dec:
/*----------------------------------------------------------------*/
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %edx
		cmpl   $0x0,data_1b62f0
		je     jump_39e5b
		mov    $0x1,%edx
		jmp    jump_39e50
	jump_39e08:
		movswl %dx,%eax
		call   cdrom_get_audio_track_info
#if 1
    cmp    $0x1,%edx /* because track 1 is data track */
#else
		cmpb   $0x40,cdrom_track_control_information_related_var
#endif
		je     jump_39e4f /* jump if it is data track */
		mov    %edx,%ebx
		shl    $0x2,%ebx
		mov    cdrom_something_related_with_starting_point_of_the_track,%eax
		mov    %eax,data_1b61f0(%ebx)
		xor    %eax,%eax
		mov    cdrom_highest_track_number,%al
		cmp    %eax,%edx
		jne    jump_39e3b
		mov    cdrom_something_related_with_starting_point_of_the_lead_out_track,%eax
		jmp    jump_39e49
	jump_39e3b:
		mov    %edx,%eax
		inc    %eax
		cwtl
		call   cdrom_get_audio_track_info
		mov    cdrom_something_related_with_starting_point_of_the_track,%eax
	jump_39e49:
		mov    %eax,data_1b6268(%ebx)
	jump_39e4f:
		inc    %edx
	jump_39e50:
		xor    %eax,%eax
		mov    cdrom_highest_track_number,%al
		cmp    %eax,%edx
		jle    jump_39e08
	jump_39e5b:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_39e5e:
/*----------------------------------------------------------------*/
		push   $0xc
		call   func___CHK
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpl   $0x0,data_1b62f0
		jne    jump_39e7a
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_39e7a:
		movswl %ax,%ecx
		mov    data_1b6268(,%ecx,4),%edx
		mov    data_1b61f0(,%ecx,4),%eax
#if 1
    push   %ecx
    dec    %ecx
    push   %ecx
    call   audio_music_play
    add    $4,%esp
    pop    %ecx
#else
		call   cdrom_play_audio
#endif
		mov    %ebx,data_54030
		mov    %ebx,data_54034
		movl   $0x1,data_54038
		mov    %ecx,data_5402c
		mov    $0x1,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_39eb4:
/*----------------------------------------------------------------*/
		push   $0x4
		call   func___CHK
		call   func_3a581
		xor    %eax,%eax
		mov    cdrom_device_driver_request_return_status,%ax
		sar    $0x8,%eax
		cmp    $0x1,%eax
		sete   %al
		xor    %ah,%ah
		ret


/*----------------------------------------------------------------*/
func_39ed7:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		push   %edx
		cmpl   $0x0,data_1b62f0
		je     jump_39f06
		call   cdrom_stop_audio
		xor    %edx,%edx
	jump_39ef2:
		call   func_39eb4
		cmp    $0x1,%ax
		je     jump_39f06
		inc    %edx
		cmp    $0x3e8,%edx
		jl     jump_39ef2
	jump_39f06:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
cdrom_stop_audio: /* 39f08 */
/*----------------------------------------------------------------*/
#if 1
    call   w_audio_music_stop
#else
		push   $0x14
		call   func___CHK
		push   %ebx
		push   %edx
		sub    $0x8,%esp
		cmpl   $0x0,data_1b62f0
		je     jump_3a00b
		cmpl   $0x1,data_54038
		jne    jump_3a00b
		mov    $0x2,%eax
		mov    %esp,%edx
		lea    0x4(%esp),%ebx
		call   allocate_dos_memory_block
		xor    %edx,%edx
		mov    (%esp),%ebx
		mov    %ebx,%gs
		movb   $0xd,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x85,%gs:0x2(%edx) /* stop audio */
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %ebx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    %edx,data_54038
		mov    %edx,data_54030
		jmp    jump_3a00b
	jump_3a00b:
		add    $0x8,%esp
		pop    %edx
		pop    %ebx
#endif
		ret


/*----------------------------------------------------------------*/
cdrom_send_device_driver_request: /* 3a011 */
/*----------------------------------------------------------------*/
		push   $0x38
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x28,%esp
		mov    %eax,%ecx
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %edx,%edx
		mov    $0x32,%ebx
		call   w_dos_memset
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $0xc,%ebx
		call   w_dos_memset
		movl   $0x1510,dpmi_real_mode_call_structure_eax
		mov    cdrom_starting_letter,%eax
		mov    %eax,dpmi_real_mode_call_structure_ecx
		xor    %ebx,%ebx
		mov    %ebx,dpmi_real_mode_call_structure_ebx
		mov    %cx,dpmi_real_mode_call_structure_es
		movl   $0x300,(%esp)
		mov    %ebx,0x4(%esp)
		movb   $0x2f,0x4(%esp)
		mov    %ebx,0x8(%esp)
		mov    %ds,%edx
		mov    $dpmi_real_mode_call_structure,%eax
		mov    %dx,0x1c(%esp)
		movl   $dpmi_real_mode_call_structure,0x14(%esp)
		mov    $0x31,%eax
		mov    %esp,%edx
		mov    %esp,%ebx
		lea    0x1c(%esp),%ecx
		call   w_dos_int386x
	jump_3a0a1:
		add    $0x28,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_mscdex_version: /* 3a0a8 */
/*----------------------------------------------------------------*/
		push   $0x38
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x28,%esp
		mov    $dpmi_real_mode_call_structure,%eax
		xor    %edx,%edx
		mov    $0x32,%ebx
		call   w_dos_memset
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $0xc,%ebx
		call   w_dos_memset
		movl   $0x150c,dpmi_real_mode_call_structure_eax
		xor    %ebx,%ebx
		mov    %ebx,dpmi_real_mode_call_structure_ebx
		movw   $0x300,(%esp)
		movb   $0x2f,0x4(%esp)
		xor    %dl,%dl
		mov    %dl,0x5(%esp)
		xor    %ebx,%ebx
		mov    %bx,0x8(%esp)
		mov    %ds,%edx
		mov    $dpmi_real_mode_call_structure,%eax
		mov    %dx,0x1c(%esp)
		movl   $dpmi_real_mode_call_structure,0x14(%esp)
		mov    $0x31,%eax
		mov    %esp,%edx
		mov    %esp,%ebx
		lea    0x1c(%esp),%ecx
#if 1
    movw   $0x0102,dpmi_real_mode_call_structure_ebx
#else
		call   w_dos_int386x
#endif
		mov    dpmi_real_mode_call_structure_ebx,%eax
		sar    $0x8,%eax
		and    $0xff,%eax
		mov    %eax,cdrom_mscdex_major_version
		mov    dpmi_real_mode_call_structure_ebx,%eax
		and    $0xff,%eax
		mov    %eax,cdrom_mscdex_minor_version
		jmp    jump_3a0a1


/*----------------------------------------------------------------*/
cdrom_get_audio_disc_info: /* 3a14f */
/*----------------------------------------------------------------*/
		push   $0x34
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x18,%esp
		mov    $0x2,%eax
		lea    0x10(%esp),%edx
		lea    0x8(%esp),%ebx
#if 1
    movb   $19,cdrom_highest_track_number
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		call   allocate_dos_memory_block
		mov    $0x1,%eax
		lea    0xc(%esp),%edx
		mov    %esp,%ebx
		call   allocate_dos_memory_block
		xor    %esi,%esi
		mov    0x10(%esp),%eax
		mov    %eax,0x4(%esp)
		xor    %edi,%edi
		mov    0xc(%esp),%eax
		mov    %eax,0x14(%esp)
		mov    0x4(%esp),%gs
		movb   $0x1a,%gs:(%esi)
		movb   $0x0,%gs:0x1(%esi)
		movb   $0x3,%gs:0x2(%esi)
		movb   $0x0,%gs:0xd(%esi)
		movw   $0x0,%gs:0x14(%esi)
		mov    %esi,%gs:0x16(%esi)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%esi)
		movw   $0x7,%gs:0x12(%esi)
		mov    0x14(%esp),%gs
		movb   $0xa,%gs:(%edi) /* audio disc info */
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		push   $0x6
		mov    %ds,%edx
		mov    $data_82786,%eax
		mov    0x18(%esp),%ecx
		mov    $0x1,%ebx
		call   func__fmemcpy_
		mov    0x14(%esp),%gs
		mov    %gs:0x1(%edi),%al
		mov    %al,data_82776 /* lowest track number */
		mov    %gs:0x2(%edi),%al
		mov    %al,cdrom_highest_track_number /* highest track number */
		mov    %gs:0x3(%edi),%eax
		mov    $data_82778,%edx
		mov    $data_82779,%ebx
		mov    $data_8277a,%ecx
		call   func_3a2d2
		mov    0x14(%esp),%gs
		mov    %gs:0x3(%edi),%eax
		call   func_3a269
		mov    %eax,cdrom_something_related_with_starting_point_of_the_lead_out_track
		mov    0x4(%esp),%gs
		mov    %gs:0x3(%esi),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
#endif
		add    $0x18,%esp
	jump_3a263:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3a269:
/*----------------------------------------------------------------*/
		push   $0x1c
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0xc,%esp
		mov    %eax,%edx
		lea    0x4(%esp),%edx
		mov    %esp,%ebx
		lea    0x8(%esp),%ecx
		call   func_3a2d2
		xor    %edx,%edx
		mov    0x4(%esp),%dl
		mov    %edx,%eax
		shl    $0x5,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		shl    $0x2,%eax
		mov    %eax,%edx
		shl    $0x3,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%esp),%al
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x2,%eax
		add    %ebx,%eax
		mov    %eax,%ebx
		shl    $0x4,%eax
		sub    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x8(%esp),%al
		sub    $0x96,%eax
		add    %edx,%eax
		add    $0xc,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3a2d2:
/*----------------------------------------------------------------*/
		push   $0x8
		call   func___CHK
		sub    $0x4,%esp
		mov    %al,(%ecx)
		mov    %eax,%ecx
		and    $0xff00,%ecx
		shr    $0x8,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%ebx)
		and    $0xff0000,%eax
		shr    $0x10,%eax
		mov    %al,(%edx)
		add    $0x4,%esp
		ret


/*----------------------------------------------------------------*/
cdrom_get_audio_track_info: /* 3a3ae */
/*----------------------------------------------------------------*/
		push   $0x2c
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x14,%esp
		mov    %eax,%ecx
		mov    $0x2,%eax
		lea    0x4(%esp),%edx
		lea    0x10(%esp),%ebx
#if 0
		call   allocate_dos_memory_block
		mov    $0x1,%eax
		mov    %esp,%edx
		lea    0xc(%esp),%ebx
		call   allocate_dos_memory_block
		xor    %edx,%edx
		mov    0x4(%esp),%esi
		xor    %ebx,%ebx
		mov    (%esp),%edi
		mov    %esi,%gs
		movb   $0x1a,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %edx,%gs:0x16(%edx)
		mov    %dx,%gs:0x14(%edx)
		mov    %dx,0x8(%esp)
		mov    0x8(%esp),%al
		mov    %al,%gs:0xd(%edx)
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%edx)
		movw   $0x7,%gs:0x12(%edx)
		mov    %edi,%gs
		movb   $0xb,%gs:(%ebx) /* audio track info */
		mov    %cl,%gs:0x1(%ebx) /* track number */
		mov    0xe(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %esi,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    %edi,%gs
		mov    %gs:0x2(%ebx),%eax /* starting point of the track */
		call   func_3a269
		mov    %eax,cdrom_something_related_with_starting_point_of_the_track
		mov    %cx,data_8276f
		mov    %edi,%gs
		mov    %gs:0x6(%ebx),%al
		and    $0xd0,%al
		mov    %al,cdrom_track_control_information_related_var
#endif
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x14,%esp
		jmp    jump_3a263
	jump_3a4fe:
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x8,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_play_audio: /* 3a50d */
/*----------------------------------------------------------------*/
		push   $0x18
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x8,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x2,%eax
		mov    %esp,%edx
		lea    0x4(%esp),%ebx
		call   allocate_dos_memory_block
		xor    %edx,%edx
		mov    (%esp),%ebx
		mov    %ebx,%gs
		movb   $0x16,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x84,%gs:0x2(%edx) /* play audio */
		movb   $0x0,%gs:0xd(%edx)
		mov    %ecx,%gs:0xe(%edx)
		sub    %ecx,%esi
		mov    %esi,%gs:0x12(%edx)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %ebx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		add    $0x8,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3a581:
/*----------------------------------------------------------------*/
		push   $0x24
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x10,%esp
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		mov    $0x2,%eax
		mov    %esp,%edx
		lea    0xc(%esp),%ebx
		call   allocate_dos_memory_block
		mov    $0x1,%eax
		lea    0x8(%esp),%edx
		lea    0x4(%esp),%ebx
		call   allocate_dos_memory_block
		xor    %edx,%edx
		mov    (%esp),%ecx
		xor    %ebx,%ebx
		mov    0x8(%esp),%esi
		mov    %ecx,%gs
		movb   $0x6,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %edx,%gs:0x16(%edx)
		mov    %dx,%gs:0x14(%edx)
		mov    %dl,%gs:0xd(%edx)
		mov    0x2(%esp),%eax
		sar    $0x10,%eax
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%edx)
		movw   $0x5,%gs:0x12(%edx)
		mov    %esi,%gs
		movb   $0x6,%gs:(%ebx) /* device status */
		mov    0xa(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %esi,%gs
		mov    %gs:0x1(%ebx),%eax
		mov    %eax,data_8278c
		mov    %ecx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
		mov    0x6(%esp),%eax
		sar    $0x10,%eax
		call   free_dos_memory_block
#endif
		add    $0x10,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
cdrom_get_audio_channel_info: /* 3a6bd */
/*----------------------------------------------------------------*/
		push   $0x18
		call   func___CHK
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x8,%esp
		mov    $0x2,%eax
		lea    0x4(%esp),%edx
		mov    %esp,%ebx
#if 1
    movw   $0x0100,cdrom_device_driver_request_return_status
#else
		call   allocate_dos_memory_block
		xor    %edx,%edx
		mov    0x4(%esp),%ecx
		mov    %ecx,%gs
		movb   $0x1a,%gs:(%edx)
		movb   $0x0,%gs:0x1(%edx)
		movb   $0x3,%gs:0x2(%edx)
		movb   $0x0,%gs:0xd(%edx)
		mov    %edx,%gs:0x16(%edx)
		mov    %dx,%gs:0x14(%edx)
		mov    %dl,%gs:0xd(%edx)
		mov    data_1b6350,%eax
		sar    $0x10,%eax
		shl    $0x10,%eax
		mov    %eax,%gs:0xe(%edx)
		movw   $0x9,%gs:0x12(%edx)
		lgs    data_82792,%ebx
		movb   $0x4,%gs:(%ebx)
		mov    -0x2(%esp),%eax
		sar    $0x10,%eax
		call   cdrom_send_device_driver_request
		mov    %ecx,%gs
		mov    %gs:0x3(%edx),%ax
		mov    %ax,cdrom_device_driver_request_return_status
#endif
		mov    0x2(%esp),%eax
		jmp    jump_3a4fe

vtable_3a84d:
		.long   func_3a8d2
		.long   func_3a8e0
		.long   func_3a8e7
		.long   func_3a8ee
		.long   func_3a8f5
		.long   func_3a8fc
		.long   func_3a903
		.long   func_3a90a
		.long   func_3a911
		.long   func_3a918
		.long   func_3a91f
		.long   func_3a926
		.long   func_3a92d
		.long   func_3a934
		.long   func_3a93b
		.long   func_3a942


/*----------------------------------------------------------------*/
func_3a8d2:
/*----------------------------------------------------------------*/
		push   $data_52392
	jump_3a8d7:
		call   w_printf
		add    $0x4,%esp
		ret


/*----------------------------------------------------------------*/
func_3a8e0:
/*----------------------------------------------------------------*/
		push   $data_523b0
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a8e7:
/*----------------------------------------------------------------*/
		push   $data_523c3
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a8ee:
/*----------------------------------------------------------------*/
		push   $data_523d9
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a8f5:
/*----------------------------------------------------------------*/
		push   $data_523ef
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a8fc:
/*----------------------------------------------------------------*/
		push   $data_523ff
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a903:
/*----------------------------------------------------------------*/
		push   $data_52428
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a90a:
/*----------------------------------------------------------------*/
		push   $data_52439
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a911:
/*----------------------------------------------------------------*/
		push   $data_5244d
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a918:
/*----------------------------------------------------------------*/
		push   $data_52464
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a91f:
/*----------------------------------------------------------------*/
		push   $data_5247f
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a926:
/*----------------------------------------------------------------*/
		push   $data_52491
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a92d:
/*----------------------------------------------------------------*/
		push   $data_524a2
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a934:
/*----------------------------------------------------------------*/
		push   $data_524b8
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a93b:
/*----------------------------------------------------------------*/
		push   $data_524c7
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
func_3a942:
/*----------------------------------------------------------------*/
		push   $data_524d6
		jmp    jump_3a8d7


/*----------------------------------------------------------------*/
allocate_dos_memory_block: /* 3a995 */
/*----------------------------------------------------------------*/
		push   $0x38
		call   func___CHK
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x28,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		lea    0x1c(%esp),%eax
		xor    %edx,%edx
		mov    $0xc,%ebx
		call   w_dos_memset
		movl   $0x100,(%esp)
		movswl %cx,%eax
		mov    %eax,0x4(%esp)
		mov    $0x31,%eax
		mov    %esp,%edx
		mov    %esp,%ebx
		lea    0x1c(%esp),%ecx
		call   w_dos_int386x
		mov    (%esp),%eax
		mov    %ax,(%esi)
		mov    0xc(%esp),%eax
		mov    %ax,(%edi)
		add    $0x28,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func__nmalloc_:	/* 0x3aa36 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3aa4f
		cmp    $0xffffffd4,%eax
		jbe    jump_3aa56
	jump_3aa4f:
		xor    %eax,%eax
		jmp    jump_3ab0a
	jump_3aa56:
		mov    $data_7cae8,%ebp
		lea    0x3(%esi),%edi
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,(%esp)
		and    $0xfffc,%di
	jump_3aa69:
		mov    %edi,%eax
		cmp    $0xc,%edi
		jae    jump_3aa75
		mov    $0xc,%eax
	jump_3aa75:
		cmp    data_7caf0,%eax
		jbe    jump_3aa95
		mov    data_7caec,%ecx
		test   %ecx,%ecx
		jne    jump_3aacd
	jump_3aa87:
		mov    %ecx,data_7caf0
		mov    data_7cae8,%ecx
		jmp    jump_3aacd
	jump_3aa95:
		xor    %ecx,%ecx
		jmp    jump_3aa87
	jump_3aa99:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,data_7caec
		and    $0xffff,%edx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   func___MemAllocator
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_3ab00
		mov    data_7caf0,%eax
		mov    0x14(%ecx),%edx
		cmp    %eax,%edx
		jbe    jump_3aaca
		mov    %edx,data_7caf0
	jump_3aaca:
		mov    0x8(%ecx),%ecx
	jump_3aacd:
		test   %ecx,%ecx
		jne    jump_3aa99
		cmpb   $0x0,(%esp)
		jne    jump_3aae2
		mov    %esi,%eax
		call   func___ExpandDGROUP_
		test   %eax,%eax
		jne    jump_3aaf7
	jump_3aae2:
		mov    %esi,%eax
		call   func_3c9e7
		test   %eax,%eax
		je     jump_3ab00
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    jump_3aa69
	jump_3aaf7:
		movb   $0x1,(%esp)
		jmp    jump_3aa69
	jump_3ab00:
		xor    %ch,%ch
		mov    %ebx,%eax
		mov    %ch,data_1b6359
	jump_3ab0a:
		add    $0x4,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
.data
data_3ab19:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"
.text


/*----------------------------------------------------------------*/
func_utoa_:	/* 0x3ab3e */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x28,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x1(%esp),%ecx
		mov    %dl,(%esp)
	jump_3ab54:
		lea    0x24(%esp),%ebx
		mov    %edi,0x24(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    data_3ab19(%edx),%al
		mov    %al,(%ecx)
		mov    0x24(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    jump_3ab54
	jump_3ab74:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    jump_3ab74
		mov    %ebp,%eax
		add    $0x28,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_itoa_:	/* 0x3ab88 */
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		cmp    $0xa,%ebx
		jne    jump_3ab9a
		test   %eax,%eax
		jge    jump_3ab9a
		neg    %eax
		movb   $0x2d,(%edx)
		inc    %edx
	jump_3ab9a:
		call   func_utoa_
		mov    %ecx,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_open_:	/* 0x3aba3 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		lea    0x14(%esp),%eax
		add    $0x4,%eax
		mov    -0x4(%eax),%eax
		push   %eax
		push   $0x0
		mov    0x18(%esp),%edx
		push   %edx
		mov    0x18(%esp),%ebx
		push   %ebx
		call   func_sopen_
		add    $0x10,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_sopen_:	/* 0x3abc7 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0xc,%esp
		mov    0x24(%esp),%esi
	jump_3abd3:
		cmpb   $0x20,(%esi)
		jne    jump_3abdb
		inc    %esi
		jmp    jump_3abd3
	jump_3abdb:
		mov    0x28(%esp),%eax
		and    $0x83,%eax
		mov    %eax,(%esp)
		mov    0x2c(%esp),%dl
		mov    (%esp),%al
		or     %dl,%al
		mov    %esi,%edx
		mov    $0xffffffff,%edi
		mov    $0x3d,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_3ac0e
		xor    %edi,%edi
		mov    0x4(%esp),%di
	jump_3ac0e:
		mov    0x28(%esp),%dh
		test   $0x3,%dh
		je     jump_3ac88
		cmp    $0xffffffff,%edi
		je     jump_3ac88
		mov    %edi,%eax
		call   func_isatty_
		test   %eax,%eax
		jne    jump_3ac88
		testb  $0x4,0x29(%esp)
		je     jump_3ac50
		mov    %edi,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    $0x7,%eax
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_3ad83
	jump_3ac50:
		test   $0x40,%dh
		je     jump_3ac88
		lea    0x8(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jge    jump_3ac88
		mov    %edi,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
	jump_3ac77:
		xor    %eax,%eax
		mov    0x4(%esp),%ax
		call   func___set_errno_dos_
		jmp    jump_3ad83
	jump_3ac88:
		cmp    $0xffffffff,%edi
		jne    jump_3ad16
		testb  $0x20,0x28(%esp)
		je     jump_3ac77
		cmpw   $0x2,0x4(%esp)
		jne    jump_3ac77
		lea    0x30(%esp),%eax
		add    $0x4,%eax
		mov    -0x4(%eax),%eax
		test   %eax,%eax
		jne    jump_3acb3
		mov    $0x180,%eax
	jump_3acb3:
		xor    data_7cb40,%eax
		xor    %ecx,%ecx
		test   $0x80,%al
		jne    jump_3acc4
		mov    $0x1,%ecx
	jump_3acc4:
		mov    %esi,%edx
		and    $0xff,%ecx
		mov    $0x3c,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_3ac77
		mov    0x4(%esp),%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_3ac77
		mov    (%esp),%al
		mov    0x2c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x3d,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,0x4(%esp)
		test   %eax,%eax
		jl     jump_3ac77
		xor    %edi,%edi
		mov    0x4(%esp),%di
	jump_3ad16:
		mov    %edi,%eax
		call   func___IOMode_
		and    $0x3c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_3ad2f
		or     $0x20,%dh
	jump_3ad2f:
		andb   $0x7f,(%esp)
		cmpl   $0x2,(%esp)
		jne    jump_3ad3c
		or     $0x3,%dl
	jump_3ad3c:
		cmpl   $0x0,(%esp)
		jne    jump_3ad45
		or     $0x1,%dl
	jump_3ad45:
		cmpl   $0x1,(%esp)
		jne    jump_3ad4e
		or     $0x2,%dl
	jump_3ad4e:
		testb  $0x10,0x28(%esp)
		je     jump_3ad58
		or     $0x80,%dl
	jump_3ad58:
		mov    %edx,%eax
		mov    0x29(%esp),%bl
		or     $0x40,%al
		test   $0x3,%bl
		je     jump_3ad6c
		test   $0x2,%bl
		je     jump_3ad7a
		jmp    jump_3ad78
	jump_3ad6c:
		cmpl   $0x200,data_7cda5
		jne    jump_3ad7a
	jump_3ad78:
		mov    %eax,%edx
	jump_3ad7a:
		mov    %edi,%eax
		call   func___SetIOMode_
		mov    %edi,%eax
	jump_3ad83:
		add    $0xc,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_printf_:	/* 0x3adf1 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x4,%esp
		lea    0x14(%esp),%ebx
		mov    $data_7cbb6,%eax
		mov    0x10(%esp),%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		call   func___fprtf_
		add    $0x4,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___null_int23_exit_:	/* 0x3ae13 */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func_exit_:	/* 0x3ae14 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   *data_7caf4
		call   *data_7caf8
		mov    %edx,%eax
		call   func__exit_
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func__exit_:	/* 0x3ae2c */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   *data_7caf8
		call   *data_7cafc
		mov    %edx,%eax
		jmp    func___exit_


/*----------------------------------------------------------------*/
func_read_:	/* 0x3ae42 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x14,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%ecx
		call   func___IOMode_
		mov    %eax,%edx
		mov    %eax,0xc(%esp)
		test   %eax,%eax
		jne    jump_3ae71
		mov    $0x4,%eax
	jump_3ae62:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_3af4d
	jump_3ae71:
		test   $0x1,%al
		jne    jump_3ae7c
		mov    $0x6,%eax
		jmp    jump_3ae62
	jump_3ae7c:
		test   $0x40,%al
		je     jump_3aeaa
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x3f,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,0x8(%esp)
		test   %eax,%eax
		jge    jump_3af49
		xor    %eax,%eax
		mov    %si,%ax
	jump_3aea0:
		call   func___set_errno_dos_
		jmp    jump_3af4d
	jump_3aeaa:
		xor    %eax,%edx
		mov    %ebx,0x4(%esp)
		mov    %edx,0x8(%esp)
	jump_3aeb4:
		mov    (%esp),%ebx
		mov    0x4(%esp),%ecx
		mov    %ebp,%edx
		mov    $0x3f,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%esi
		mov    %eax,0x10(%esp)
		test   %eax,%eax
		jge    jump_3aed8
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    jump_3aea0
	jump_3aed8:
		je     jump_3af49
		mov    0x8(%esp),%esi
		mov    %ebp,%eax
		xor    %edi,%edi
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x14(%esp)
		jmp    jump_3af22
	jump_3aef1:
		mov    (%eax),%bl
		cmp    $0x1a,%bl
		jne    jump_3af12
		mov    0x10(%esp),%ebp
		mov    %edi,%edx
		mov    (%esp),%eax
		sub    %ebp,%edx
		mov    $0x1,%ebx
		inc    %edx
		call   w_dos_lseek
		mov    %esi,%eax
		jmp    jump_3af4d
	jump_3af12:
		cmp    $0xd,%bl
		je     jump_3af20
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)
	jump_3af20:
		inc    %eax
		inc    %edi
	jump_3af22:
		cmp    0x14(%esp),%eax
		jb     jump_3aef1
		mov    0x4(%esp),%ecx
		mov    0xd(%esp),%ah
		mov    %esi,0x8(%esp)
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x4(%esp)
		test   $0x20,%ah
		jne    jump_3af49
		test   %ecx,%ecx
		jne    jump_3aeb4
	jump_3af49:
		mov    0x8(%esp),%eax
	jump_3af4d:
		add    $0x18,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_j___close_:	/* 0x3af55 */
/*----------------------------------------------------------------*/
		jmp    func___close_


/*----------------------------------------------------------------*/
func_creat_:	/* 0x3af5a */
/*----------------------------------------------------------------*/
		push   %edx
		push   $0x62
		push   %eax
		call   w_dos_open
		add    $0xc,%esp
		ret


/*----------------------------------------------------------------*/
func_write_:	/* 0x3af67 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x18,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   func___IOMode_
		mov    %eax,%edx
		mov    %eax,-0x18(%ebp)
		test   %eax,%eax
		jne    jump_3af95
		mov    $0x4,%eax
	jump_3af86:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		jmp    jump_3b131
	jump_3af95:
		test   $0x2,%al
		jne    jump_3afa0
		mov    $0x6,%eax
		jmp    jump_3af86
	jump_3afa0:
		test   $0x80,%al
		je     jump_3afd7
		mov    -0x1c(%ebp),%ebx
		xor    %eax,%edx
		mov    $0x2,%al
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		rcl    %dx
		ror    %dx
		shl    $0x10,%edx
		mov    %ax,%dx
		mov    %edx,-0x10(%ebp)
		test   %edx,%edx
		jge    jump_3afd7
	jump_3afc7:
		xor    %eax,%eax
		mov    -0x10(%ebp),%ax
		call   func___set_errno_dos_
		jmp    jump_3b131
	jump_3afd7:
		testb  $0x40,-0x18(%ebp)
		je     jump_3b012
		mov    -0x1c(%ebp),%ebx
		mov    -0x20(%ebp),%edx
		mov    -0x24(%ebp),%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_3afc7
		cmp    -0x24(%ebp),%eax
		je     jump_3b12e
		mov    $0xc,%eax
		call   func___set_errno_
		mov    %edx,-0x24(%ebp)
		jmp    jump_3b12e
	jump_3b012:
		call   func_3cbe7
		mov    %eax,%edx
		cmp    $0xb0,%eax
		jae    jump_3b025
		call   func___STKOVERFLOW_
	jump_3b025:
		mov    $0x200,%edi
		cmp    $0x230,%edx
		jae    jump_3b037
		mov    $0x80,%edi
	jump_3b037:
		lea    0x3(%edi),%eax
		xor    %edx,%edx
		and    $0xfc,%al
		xor    %esi,%esi
		sub    %eax,%esp
		mov    %edx,-0x4(%ebp)
		mov    %edx,-0x14(%ebp)
		mov    -0x20(%ebp),%eax
		mov    %esp,-0x8(%ebp)
		mov    %eax,-0xc(%ebp)
	jump_3b051:
		mov    -0x4(%ebp),%eax
		cmp    -0x24(%ebp),%eax
		jae    jump_3b0f8
		mov    -0xc(%ebp),%eax
		cmpb   $0xa,(%eax)
		jne    jump_3b0ad
		mov    -0x8(%ebp),%eax
		movb   $0xd,(%esi,%eax,1)
		inc    %esi
		cmp    %edi,%esi
		jne    jump_3b0ad
		mov    -0x1c(%ebp),%ebx
		mov    %eax,%edx
		mov    %edi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_3afc7
		cmp    %edi,%eax
		je     jump_3b0a5
	jump_3b091:
		mov    $0xc,%eax
		call   func___set_errno_
		mov    -0x14(%ebp),%eax
		add    %esi,%eax
		jmp    jump_3b131
	jump_3b0a5:
		mov    -0x4(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x14(%ebp)
	jump_3b0ad:
		mov    -0x8(%ebp),%eax
		mov    -0xc(%ebp),%edx
		mov    -0xc(%ebp),%ebx
		mov    -0x4(%ebp),%ecx
		inc    %ebx
		inc    %ecx
		mov    (%edx),%dl
		mov    %ebx,-0xc(%ebp)
		mov    %dl,(%esi,%eax,1)
		inc    %esi
		mov    %ecx,-0x4(%ebp)
		cmp    %edi,%esi
		jne    jump_3b051
		mov    -0x1c(%ebp),%ebx
		mov    %eax,%edx
		mov    %edi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_3afc7
		cmp    %edi,%eax
		jne    jump_3b091
		mov    -0x4(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x14(%ebp)
		jmp    jump_3b051
	jump_3b0f8:
		test   %esi,%esi
		je     jump_3b12e
		mov    -0x1c(%ebp),%ebx
		mov    -0x8(%ebp),%edx
		mov    %esi,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		mov    %eax,-0x10(%ebp)
		test   %eax,%eax
		jl     jump_3afc7
		cmp    %esi,%eax
		je     jump_3b12e
		mov    $0xc,%eax
		call   func___set_errno_
		mov    -0x14(%ebp),%eax
		add    %edx,%eax
		jmp    jump_3b131
	jump_3b12e:
		mov    -0x24(%ebp),%eax
	jump_3b131:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_getch_:	/* 0x3b138 */
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    data_7cdd4,%eax
		mov    %edx,data_7cdd4
		test   %eax,%eax
		jne    jump_3b153
		mov    $0x8,%ah
		int    $0x21
		and    $0xff,%eax
	jump_3b153:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_3b155:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
	jump_3b158:
		mov    (%eax),%dl
		inc    %dl
		and    $0xff,%edx
		testb  $0x2,data_52580(%edx)
		je     jump_3b16e
		inc    %eax
		jmp    jump_3b158
	jump_3b16e:
		mov    (%eax),%cl
		cmp    $0x2b,%cl
		je     jump_3b17a
		cmp    $0x2d,%cl
		jne    jump_3b17b
	jump_3b17a:
		inc    %eax
	jump_3b17b:
		xor    %ebx,%ebx
	jump_3b17d:
		mov    (%eax),%dl
		inc    %dl
		and    $0xff,%edx
		testb  $0x20,data_52580(%edx)
		je     jump_3b19f
		imul   $0xa,%ebx,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		add    %edx,%ebx
		inc    %eax
		sub    $0x30,%ebx
		jmp    jump_3b17d
	jump_3b19f:
		cmp    $0x2d,%cl
		jne    jump_3b1a6
		neg    %ebx
	jump_3b1a6:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_strcmp_:	/* 0x3b1b0 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     jump_3b224
	jump_3b1b8:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_3b229
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_3b224
		mov    0x4(%ebx),%eax
		mov    0x4(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_3b229
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_3b224
		mov    0x8(%ebx),%eax
		mov    0x8(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_3b229
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    jump_3b224
		mov    0xc(%ebx),%eax
		mov    0xc(%edx),%ecx
		cmp    %eax,%ecx
		jne    jump_3b229
		add    $0x10,%ebx
		add    $0x10,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     jump_3b1b8
	jump_3b224:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_3b229:
		cmp    %cl,%al
		jne    jump_3b24a
		cmp    $0x0,%al
		je     jump_3b224
		cmp    %ch,%ah
		jne    jump_3b24a
		cmp    $0x0,%ah
		je     jump_3b224
		shr    $0x10,%eax
		shr    $0x10,%ecx
		cmp    %cl,%al
		jne    jump_3b24a
		cmp    $0x0,%al
		je     jump_3b224
		cmp    %ch,%ah
	jump_3b24a:
		sbb    %eax,%eax
		or     $0x1,%al
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_strrchr_:	/* 0x3b251 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%cl
		xor    %ebx,%ebx
	jump_3b257:
		cmp    (%eax),%cl
		jne    jump_3b25d
		mov    %eax,%ebx
	jump_3b25d:
		mov    %eax,%edx
		mov    (%edx),%ch
		inc    %eax
		test   %ch,%ch
		jne    jump_3b257
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___STOSB:	/* 0x3b270 */
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		je     jump_3b2a0
		cmp    %dl,(%eax)
	jump_3b276:
		test   $0x3,%al
		je     jump_3b283
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x8,%edx
		dec    %ecx
		jne    jump_3b276
	jump_3b283:
		push   %ecx
		shr    $0x2,%ecx
		call   func___STOSD
		pop    %ecx
		and    $0x3,%ecx
		je     jump_3b2a0
		mov    %dl,(%eax)
		dec    %ecx
		je     jump_3b2a0
		mov    %dh,0x1(%eax)
		dec    %ecx
		je     jump_3b2a0
		mov    %dl,0x2(%eax)
	jump_3b2a0:
		ret


/*----------------------------------------------------------------*/
func___STOSD:	/* 0x3b2a7 */
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		je     jump_3b312
	jump_3b2ab:
		test   $0x1f,%al
		je     jump_3b2b7
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		jne    jump_3b2ab
	jump_3b2b7:
		push   %ecx
		shr    $0x2,%ecx
		je     jump_3b2f7
		dec    %ecx
		je     jump_3b2e9
	jump_3b2c0:
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		dec    %ecx
		mov    %edx,0x8(%eax)
		mov    %edx,0xc(%eax)
		je     jump_3b2e6
		cmp    %dl,0x20(%eax)
		mov    %edx,0x10(%eax)
		mov    %edx,0x14(%eax)
		dec    %ecx
		mov    %edx,0x18(%eax)
		mov    %edx,0x1c(%eax)
		lea    0x20(%eax),%eax
		jne    jump_3b2c0
		lea    -0x10(%eax),%eax
	jump_3b2e6:
		lea    0x10(%eax),%eax
	jump_3b2e9:
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		mov    %edx,0x8(%eax)
		mov    %edx,0xc(%eax)
		lea    0x10(%eax),%eax
	jump_3b2f7:
		pop    %ecx
		and    $0x3,%ecx
		je     jump_3b312
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		je     jump_3b312
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
		dec    %ecx
		je     jump_3b312
		mov    %edx,(%eax)
		lea    0x4(%eax),%eax
	jump_3b312:
		ret


/*----------------------------------------------------------------*/
func_abs_:	/* 0x3b313 */
/*----------------------------------------------------------------*/
		test   %eax,%eax
		jge    jump_3b319
		neg    %eax
	jump_3b319:
		ret


/*----------------------------------------------------------------*/
func_memset_:	/* 0x3b320 */
/*----------------------------------------------------------------*/
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x8,%edx
		mov    %dh,%dl
		shl    $0x8,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   func___STOSB
		pop    %ecx
		pop    %eax
		ret


/*----------------------------------------------------------------*/
func_int386x_:	/* 0x3b338 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebp,%edx
		call   func___int386x_
		mov    0x0(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___open_flags_:	/* 0x3b351 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%al
		xor    %ebx,%ebx
		call   func_tolower_
		mov    %al,(%esp)
		cmp    $0x72,%al
		je     jump_3b384
		cmp    $0x77,%al
		je     jump_3b384
		cmp    $0x61,%al
		je     jump_3b384
		mov    $0x9,%eax
		call   func___set_errno_
		xor    %eax,%eax
		jmp    jump_3b3fe
	jump_3b384:
		mov    %ebx,%eax
		mov    0x1(%edx),%cl
		or     $0x3,%al
		cmp    $0x2b,%cl
		jne    jump_3b3b1
		mov    %eax,%ebx
		mov    0x2(%edx),%cl
		or     $0x40,%al
		cmp    $0x62,%cl
		je     jump_3b3ad
		cmp    $0x74,%cl
		je     jump_3b3e4
		cmpl   $0x200,data_7cda5
	jump_3b3ab:
		jne    jump_3b3e4
	jump_3b3ad:
		mov    %eax,%ebx
		jmp    jump_3b3e4
	jump_3b3b1:
		mov    %ebx,%ecx
		or     $0x40,%cl
		cmpb   $0x62,0x1(%edx)
		jne    jump_3b3ca
		mov    0x2(%edx),%al
		mov    %ecx,%ebx
		cmp    $0x2b,%al
		jne    jump_3b3e4
		or     $0x3,%cl
		jmp    jump_3b3e2
	jump_3b3ca:
		cmpb   $0x74,0x1(%edx)
		jne    jump_3b3d6
		cmpb   $0x2b,0x2(%edx)
		jmp    jump_3b3ab
	jump_3b3d6:
		cmpl   $0x200,data_7cda5
		jne    jump_3b3e4
	jump_3b3e2:
		mov    %ecx,%ebx
	jump_3b3e4:
		mov    (%esp),%al
		cmp    $0x77,%al
		jne    jump_3b3f0
		or     $0x2,%bl
		jmp    jump_3b3fc
	jump_3b3f0:
		cmp    $0x61,%al
		jne    jump_3b3f9
		or     $0x82,%bl
		jmp    jump_3b3fc
	jump_3b3f9:
		or     $0x1,%bl
	jump_3b3fc:
		mov    %ebx,%eax
	jump_3b3fe:
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___doopen_:	/* 0x3b405 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%esi
		andb   $0xfc,0xc(%ecx)
		mov    %edx,%eax
		call   func___open_flags_
		mov    0xc(%ecx),%edi
		or     %eax,%edi
		xor    %eax,%eax
		mov    %edi,0xc(%ecx)
		mov    (%edx),%al
		call   func_tolower_
		mov    %al,%dl
		cmp    $0x72,%al
		jne    jump_3b44c
		mov    0xc(%ecx),%dh
		xor    %eax,%eax
		test   $0x2,%dh
		je     jump_3b43a
		mov    $0x2,%eax
	jump_3b43a:
		testb  $0x40,0xc(%ecx)
		je     jump_3b445
		or     $0x2,%ah
		jmp    jump_3b448
	jump_3b445:
		or     $0x1,%ah
	jump_3b448:
		push   $0x0
		jmp    jump_3b479
	jump_3b44c:
		testb  $0x1,0xc(%ecx)
		setne  %al
		and    $0xff,%eax
		add    $0x21,%eax
		cmp    $0x61,%dl
		jne    jump_3b464
		or     $0x10,%al
		jmp    jump_3b466
	jump_3b464:
		or     $0x40,%al
	jump_3b466:
		testb  $0x40,0xc(%ecx)
		je     jump_3b471
		or     $0x2,%ah
		jmp    jump_3b474
	jump_3b471:
		or     $0x1,%ah
	jump_3b474:
		push   $0x180
	jump_3b479:
		push   %ebx
		push   %eax
		push   %esi
		call   func_sopen_
		add    $0x10,%esp
		mov    %eax,0x10(%ecx)
		cmpl   $0xffffffff,0x10(%ecx)
		jne    jump_3b499
		mov    %ecx,%eax
		call   func___freefp_
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret
	jump_3b499:
		movl   $0x0,0x4(%ecx)
		movl   $0x0,0x8(%ecx)
		movl   $0x0,0x14(%ecx)
		cmp    $0x61,%dl
		jne    jump_3b4c1
		mov    $0x2,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_fseek
	jump_3b4c1:
		mov    %ecx,%eax
		call   func___chktty_
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func__fsopen_:	/* 0x3b4cd */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		call   func___allocfp_
		mov    %eax,%ecx
		test   %eax,%eax
		je     jump_3b4e5
		mov    %esi,%eax
		call   func___doopen_
	jump_3b4e5:
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_fopen_:	/* 0x3b4e8 */
/*----------------------------------------------------------------*/
		push   %ebx
		xor    %ebx,%ebx
		call   func__fsopen_
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_fprintf_:	/* 0x3b57e */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		sub    $0x4,%esp
		lea    0x18(%esp),%ebx
		mov    0x10(%esp),%eax
		mov    0x14(%esp),%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		call   func___fprtf_
		add    $0x4,%esp
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_fclose_:	/* 0x3b59f */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    data_1b6360,%eax
	jump_3b5a8:
		test   %eax,%eax
		jne    jump_3b5b4
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_3b5b4:
		mov    0x4(%eax),%ebx
		cmp    %ebx,%edx
		je     jump_3b5bf
		mov    (%eax),%eax
		jmp    jump_3b5a8
	jump_3b5bf:
		mov    $0x1,%edx
		mov    %ebx,%eax
		call   func___shutdown_stream_
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___shutdown_stream_:	/* 0x3b5ce */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		call   func___doclose_
		mov    %eax,%edx
		mov    %ebx,%eax
		call   func___freefp_
		mov    %edx,%eax
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___hex_:	/* 0x3b5e3 */
/*----------------------------------------------------------------*/
		add    $0x30,%eax
		cmp    $0x39,%eax
		jle    jump_3b5ee
		add    $0x27,%eax
	jump_3b5ee:
		ret


/*----------------------------------------------------------------*/
func___MkTmpFile_:	/* 0x3b5ef */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   func_3d10e
		mov    $0x4,%edx
		mov    %eax,%ebx
		mov    %ecx,%esi
		movb   $0x74,(%ecx)
		add    %ecx,%edx
	jump_3b60a:
		mov    %ebx,%eax
		and    $0xf,%eax
		call   func___hex_
		mov    %al,(%edx)
		dec    %edx
		shr    $0x4,%ebx
		cmp    %esi,%edx
		jne    jump_3b60a
		mov    %edi,%eax
		sar    $0x4,%eax
		and    $0xf,%eax
		movb   $0x5f,0x5(%ecx)
		call   func___hex_
		mov    %al,0x6(%ecx)
		mov    %edi,%eax
		and    $0xf,%eax
		call   func___hex_
		movb   $0x2e,0x8(%ecx)
		movb   $0x74,0x9(%ecx)
		movb   $0x6d,0xa(%ecx)
		movb   $0x70,0xb(%ecx)
		movb   $0x0,0xc(%ecx)
		mov    %al,0x7(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___doclose_:	/* 0x3b658 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x10,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x0,0xc(%eax)
		jne    jump_3b670
		mov    $0xffffffff,%esi
		jmp    jump_3b6d7
	jump_3b670:
		mov    0xd(%eax),%ah
		xor    %esi,%esi
		test   $0x10,%ah
		je     jump_3b683
		mov    %ecx,%eax
		call   func___flush_
		mov    %eax,%esi
	jump_3b683:
		mov    %ecx,%eax
		call   w_dos_ftell
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     jump_3b69b
		mov    0x10(%ecx),%eax
		xor    %ebx,%ebx
		call   w_dos_lseek
	jump_3b69b:
		test   %edi,%edi
		je     jump_3b6a9
		mov    0x10(%ecx),%eax
		call   func___close_
		or     %eax,%esi
	jump_3b6a9:
		testb  $0x8,0xc(%ecx)
		je     jump_3b6be
		mov    0x8(%ecx),%eax
		call   w_dos_free
		movl   $0x0,0x8(%ecx)
	jump_3b6be:
		testb  $0x8,0xd(%ecx)
		je     jump_3b6d7
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x19(%ecx),%dl
		call   func___MkTmpFile_
		mov    %esp,%eax
		call   func_j_unlink_
	jump_3b6d7:
		mov    %esi,%eax
		add    $0x10,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
_start:	/* 0x3b6e4 */
/*----------------------------------------------------------------*/
		jmp    jump_3b75e
.data
		.ascii   "WATCOM C/C++32 Run-Time system. (c) Copyright by WATCOM International Corp. 1988-1994. All rights reserved."
		.ascii  "\x8d\x40\x00"
		.long   func____begtext
data_3b758:
		.ascii  "\x00\x00"
data_3b75a:
		.ascii  "\x63\x6f\x6e\x00"
.text
	jump_3b75e:
		sti
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,data_7cdc8
		mov    %ebx,data_7cdb4
		mov    $0x24,%ax
		mov    %ax,data_7cdc0
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x30,%ah
		int    $0x21
		mov    %al,data_7cdeb
		mov    %ah,data_7cdec
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x81,%edi
		shr    $0x10,%eax
		cmp    $0x4458,%ax
		jne    jump_3b7e0
		sub    $0x30,%bl
		mov    %bl,%al
		mov    $0x0,%ah
		push   %eax
		data16 		mov    data_7cdc0,%es
		mov    %es:0x5c,%ebx
		add    $0xfff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,data_7cdb4
		shr    $0xc,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x4a,%ah
		int    $0x21
		pop    %eax
		mov    %ds,%bx
		mov    $0x2c,%cx
		jmp    jump_3b818
	jump_3b7e0:
		cmp    $0x4243,%ax
		jne    jump_3b81a
		mov    %edx,data_7cb00
		mov    %edx,%esi
		mov    0x1c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x4a,%ah
		int    $0x21
		mov    %ds,%bx
		data16 		mov    %ds,data_7cdc0
		mov    0x10(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x2c(%eax),%si
		shl    $0x4,%esi
		mov    %ds,%cx
		mov    $0x9,%al
		mov    $0x0,%ah
	jump_3b818:
		jmp    jump_3b873
	jump_3b81a:
		mov    $0x78,%dx
		mov    $0xff00,%ax
		int    $0x21
		cmp    $0x0,%al
		je     jump_3b85c
		mov    %gs,%ax
		cmp    $0x0,%ax
		je     jump_3b837
		mov    %ax,data_7cb04
	jump_3b837:
		mov    $0x6,%ax
		mov    %ds,%bx
		int    $0x31
		mov    $0x1,%al
		mov    $0x0,%ah
		or     %cx,%dx
		je     jump_3b84b
		mov    $0x1,%ah
	jump_3b84b:
		data16 		mov    %es,data_7cdc0
		mov    %es:0x2c,%cx
		jmp    jump_3b873
	jump_3b85c:
		mov    %ds,%dx
		mov    $0x24,%cx
		mov    %ecx,%ds
		mov    $0x2c,%cx
		mov    %edx,%ds
		mov    $0x17,%bx
		mov    $0x0,%al
		mov    $0x0,%ah
	jump_3b873:
		mov    %al,data_7cde2
		mov    %ah,data_7cde3
		mov    %ebx,%es
		data16 		mov    %ds,%es:data_3b758
		mov    %esi,data_7cde5
		mov    %cx,data_7cde9
		push   %esi
		data16 		mov    data_7cdc0,%es
		ds
		mov    $data_1b63fc,%edx
		add    $0xf,%edx
		and    $0xf0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x1(%edi),%cl
		cld
		mov    $0x20,%al
		repz scas %es:(%edi),%al
		lea    -0x1(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     jump_3b8c8
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)
	jump_3b8c8:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		es
		data16 		mov    data_7cde9,%ds
		sub    %ebp,%ebp
	jump_3b8da:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    jump_3b8ef
		cmpb   $0x3d,0x4(%esi)
		jne    jump_3b8ef
		inc    %ebp
	jump_3b8ef:
		cmpb   $0x0,(%esi)
		lods   %ds:(%esi),%al
		jne    jump_3b8ef
		cmpb   $0x0,(%esi)
		jne    jump_3b8da
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi
	jump_3b8fd:
		cmpb   $0x0,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    jump_3b8fd
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,data_7cde0
		mov    %edi,data_7cdc4
		mov    %ebx,data_7cdb0
		ds
		mov    $data_1b63fc,%ecx
		ds
		mov    $data_7cf10,%edi
		sub    %edi,%ecx
		cmpb   $0x1,data_7cde2
		jne    jump_3b93e
		cmp    $0x1000,%ecx
		jbe    jump_3b93e
		mov    $0x1000,%ecx
	jump_3b93e:
		mov    %cl,%dl
		shr    $0x2,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x3,%cl
		rep stos %al,%es:(%edi)
		ds
		mov    $data_1b63fc,%eax
		add    $0xf,%eax
		and    $0xf0,%al
		mov    %eax,data_7cdb8
		mov    %esi,data_7cdbc
		mov    $0xff,%eax
		call   func___InitRtns
		sub    %ebp,%ebp
		call   func___CMain


/*----------------------------------------------------------------*/
func___exit_:	/* 0x3b975 */
/*----------------------------------------------------------------*/
		jmp    jump_3b99a


/*----------------------------------------------------------------*/
func___do_exit_with_msg__:	/* 0x3b977 */
/*----------------------------------------------------------------*/
		push   %edx
		push   %eax
		mov    $data_3b75a,%edx
		mov    $0x3d01,%ax
		int    $0x21
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld
	jump_3b98b:
		lods   %ds:(%esi),%al
		cmp    $0x0,%al
		jne    jump_3b98b
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x40,%ah
		int    $0x21
		pop    %eax
	jump_3b99a:
		push   %eax
		mov    $0x0,%eax
		mov    $0xff,%edx
		call   func___FiniRtns
		pop    %eax
		mov    $0x4c,%ah
		int    $0x21
		nop


/*----------------------------------------------------------------*/
func___GETDS:	/* 0x3b9b0 */
/*----------------------------------------------------------------*/
		data16 		mov    data_3b758,%ds
		ret


/*----------------------------------------------------------------*/
func_3b9ba:
/*----------------------------------------------------------------*/
		data16 		mov    %ss,data_7cb10
		ret


/*----------------------------------------------------------------*/
func___CHK:	/* 0x3b9c2 */
/*----------------------------------------------------------------*/
		xchg   %eax,0x4(%esp)
		call   func___STK
		mov    0x4(%esp),%eax
		ret    $0x4


/*----------------------------------------------------------------*/
func___STK:	/* 0x3b9d5 */
/*----------------------------------------------------------------*/
		cmp    %esp,%eax
		jae    jump_3b9e6
		sub    %esp,%eax
		neg    %eax
		cmp    data_7cdc4,%eax
		jbe    jump_3b9e6
		ret
	jump_3b9e6:
		mov    %ss,%ax
		cmp    data_7cb10,%ax
		je     func___STKOVERFLOW_
		ret


/*----------------------------------------------------------------*/
func___STKOVERFLOW_:	/* 0x3b9f3 */
/*----------------------------------------------------------------*/
		mov    $data_7cb12,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_


/*----------------------------------------------------------------*/
func_segread_:	/* 0x3ba02 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x2(%edx)
		mov    %ds,%eax
		mov    %ax,0x6(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x4(%edx)
		mov    %fs,%eax
		mov    %ax,0x8(%edx)
		mov    %gs,%eax
		mov    %ax,0xa(%edx)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_int386_:	/* 0x3ba2a */
/*----------------------------------------------------------------*/
		push   %ecx
		sub    $0xc,%esp
		mov    %eax,%ecx
		mov    %esp,%eax
		call   func_segread_
		mov    %ecx,%eax
		mov    %esp,%ecx
		call   w_dos_int386x
		add    $0xc,%esp
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_lseek_:	/* 0x3ba45 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %ebx,%eax
		mov    %esp,%edi
		mov    %ecx,%ebx
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x2(%edi)
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_3ba7d
		and    $0xffff,%eax
		call   func___set_errno_dos_
		mov    $0xffffffff,%eax
		jmp    jump_3ba80
	jump_3ba7d:
		mov    (%esp),%eax
	jump_3ba80:
		add    $0x4,%esp
		pop    %edi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_puts_:	/* 0x3ba86 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $data_7cbb6,%edx
		call   func_fputs_
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     jump_3bab0
		mov    $0xa,%eax
		mov    $data_7cbb6,%edx
		call   func_fputc_
		cmp    $0xa,%eax
		jne    jump_3bab0
		lea    0x1(%ebx),%eax
	jump_3bab0:
		pop    %edx
		pop    %ebx
		ret
.data
data_3bab3:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"
.text


/*----------------------------------------------------------------*/
func_ultoa_:	/* 0x3bad8 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %ebp
		sub    $0x28,%esp
		push   %edx
		mov    %ebx,%ebp
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x5(%esp),%ecx
		mov    %dl,0x4(%esp)
	jump_3baed:
		lea    0x28(%esp),%ebx
		mov    %ebp,0x28(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x28(%esp),%edx
		mov    data_3bab3(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    jump_3baed
	jump_3bb0d:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    jump_3bb0d
		mov    (%esp),%eax
		add    $0x2c,%esp
		pop    %ebp
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_ltoa_:	/* 0x3bb21 */
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		cmp    $0xa,%ebx
		jne    jump_3bb33
		test   %eax,%eax
		jge    jump_3bb33
		neg    %eax
		movb   $0x2d,(%edx)
		inc    %edx
	jump_3bb33:
		call   func_ultoa_
		mov    %ecx,%eax
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_fread_:	/* 0x3bb3c */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x1,0xc(%ecx)
		jne    jump_3bb66
		mov    $0x4,%eax
		call   func___set_errno_
		mov    0xc(%ecx),%dh
		or     $0x20,%dh
		xor    %eax,%eax
		mov    %dh,0xc(%ecx)
		jmp    jump_3bcff
	jump_3bb66:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    jump_3bb74
		mov    %ebx,%eax
		jmp    jump_3bcff
	jump_3bb74:
		cmpl   $0x0,0x8(%ecx)
		jne    jump_3bb81
		mov    %ebp,%eax
		call   func___ioalloc_
	jump_3bb81:
		xor    %esi,%esi
		mov    0xc(%ebp),%dl
		mov    %esi,0xc(%esp)
		test   $0x40,%dl
		je     jump_3bc80
		mov    %ebx,0x8(%esp)
	jump_3bb97:
		mov    0x4(%ebp),%edx
		test   %edx,%edx
		je     jump_3bbf2
		mov    0x8(%esp),%ebx
		cmp    %ebx,%edx
		jbe    jump_3bba8
		mov    %ebx,%edx
	jump_3bba8:
		mov    0x4(%esp),%edi
		mov    %edx,%ecx
		mov    0x0(%ebp),%esi
		mov    0xc(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x8(%esp),%eax
		mov    0x0(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x4(%esp)
		mov    %ebx,0xc(%esp)
		mov    0x4(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x0(%ebp)
		mov    %eax,0x8(%esp)
		mov    %edi,0x4(%ebp)
	jump_3bbf2:
		mov    0x8(%esp),%ecx
		test   %ecx,%ecx
		je     jump_3bcf4
		cmp    0x14(%ebp),%ecx
		jae    jump_3bc09
		testb  $0x4,0xd(%ebp)
		je     jump_3bc6c
	jump_3bc09:
		mov    0xd(%ebp),%cl
		mov    0x8(%esp),%ebx
		test   $0x4,%cl
		jne    jump_3bc22
		cmp    $0x200,%ebx
		jbe    jump_3bc22
		and    $0xfe,%bh
		xor    %bl,%bl
	jump_3bc22:
		mov    0x4(%esp),%edx
		mov    0x10(%ebp),%eax
		call   func___qread_
		cmp    $0xffffffff,%eax
		jne    jump_3bc3c
		orb    $0x20,0xc(%ebp)
		jmp    jump_3bcf4
	jump_3bc3c:
		test   %eax,%eax
		jne    jump_3bc49
	jump_3bc40:
		orb    $0x10,0xc(%ebp)
		jmp    jump_3bcf4
	jump_3bc49:
		mov    0x4(%esp),%edx
		mov    0x8(%esp),%ebx
		mov    0xc(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x4(%esp)
		mov    %ebx,0x8(%esp)
		mov    %ecx,0xc(%esp)
		jmp    jump_3bb97
	jump_3bc6c:
		mov    %ebp,%eax
		call   func___fill_buffer_
		test   %eax,%eax
		je     jump_3bcf4
		jmp    jump_3bb97
	jump_3bc80:
		mov    0x4(%esp),%edx
		add    %edx,%ebx
	jump_3bc86:
		cmpl   $0x0,0x4(%ebp)
		jne    jump_3bc97
		mov    %ebp,%eax
		call   func___fill_buffer_
		test   %eax,%eax
		je     jump_3bcf4
	jump_3bc97:
		mov    0x4(%ebp),%ecx
		mov    0x0(%ebp),%eax
		dec    %ecx
		lea    0x1(%eax),%esi
		mov    %ecx,0x4(%ebp)
		mov    %esi,0x0(%ebp)
		mov    (%eax),%al
		and    $0xff,%eax
		cmp    $0xd,%eax
		jne    jump_3bcdb
		cmpl   $0x0,0x4(%ebp)
		jne    jump_3bcc4
		mov    %ebp,%eax
		call   func___fill_buffer_
		test   %eax,%eax
		je     jump_3bcf4
	jump_3bcc4:
		mov    0x4(%ebp),%edi
		mov    0x0(%ebp),%eax
		dec    %edi
		lea    0x1(%eax),%esi
		mov    %edi,0x4(%ebp)
		mov    %esi,0x0(%ebp)
		mov    (%eax),%al
		and    $0xff,%eax
	jump_3bcdb:
		cmp    $0x1a,%eax
		je     jump_3bc40
		mov    %al,(%edx)
		mov    0xc(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0xc(%esp)
		cmp    %ebx,%edx
		jne    jump_3bc86
	jump_3bcf4:
		mov    0xc(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi
	jump_3bcff:
		add    $0x10,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_unlink_:	/* 0x3bd0b */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    $0x41,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_3bd26
		and    $0xffff,%eax
		call   func___set_errno_dos_
		pop    %edx
		ret
	jump_3bd26:
		xor    %eax,%eax
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_fgetc_:	/* 0x3bd2a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		testb  $0x1,0xc(%eax)
		jne    jump_3bd50
		mov    $0x4,%eax
		call   func___set_errno_
		mov    0xc(%edx),%bl
		or     $0x20,%bl
		mov    $0xffffffff,%eax
		mov    %bl,0xc(%edx)
		jmp    jump_3bd70
	jump_3bd50:
		mov    0x4(%edx),%ebx
		dec    %ebx
		mov    %ebx,0x4(%edx)
		test   %ebx,%ebx
		jge    jump_3bd64
		mov    %edx,%eax
		call   func___filbuf_
		jmp    jump_3bd70
	jump_3bd64:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0xff,%eax
		mov    %ebx,(%edx)
	jump_3bd70:
		testb  $0x40,0xc(%edx)
		jne    jump_3bdae
		cmp    $0xd,%eax
		jne    jump_3bd9b
		mov    0x4(%edx),%esi
		dec    %esi
		mov    %esi,0x4(%edx)
		test   %esi,%esi
		jge    jump_3bd8f
		mov    %edx,%eax
		call   func___filbuf_
		jmp    jump_3bd9b
	jump_3bd8f:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0xff,%eax
		mov    %ebx,(%edx)
	jump_3bd9b:
		cmp    $0x1a,%eax
		jne    jump_3bdae
		mov    0xc(%edx),%cl
		or     $0x10,%cl
		mov    $0xffffffff,%eax
		mov    %cl,0xc(%edx)
	jump_3bdae:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___filbuf_:	/* 0x3bdb3 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   func___fill_buffer_
		test   %eax,%eax
		jne    jump_3bdca
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3bdca:
		mov    0x4(%edx),%ebx
		mov    (%edx),%ecx
		dec    %ebx
		inc    %ecx
		mov    %ebx,0x4(%edx)
		mov    %ecx,(%edx)
		mov    -0x1(%ecx),%al
		and    $0xff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___fill_buffer_:	/* 0x3bde2 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x0,0x8(%eax)
		jne    jump_3bdf3
		call   func___ioalloc_
	jump_3bdf3:
		mov    0xd(%ecx),%ah
		test   $0x20,%ah
		je     jump_3be0a
		test   $0x6,%ah
		je     jump_3be0a
		mov    $0x2000,%eax
		call   func___flushall_
	jump_3be0a:
		mov    0xc(%ecx),%edx
		mov    0xc(%ecx),%bl
		mov    0x8(%ecx),%eax
		and    $0xfb,%bl
		mov    %eax,(%ecx)
		and    $0x2400,%edx
		mov    %bl,0xc(%ecx)
		cmp    $0x2400,%edx
		jne    jump_3be4a
		mov    0x10(%ecx),%ebx
		test   %ebx,%ebx
		jne    jump_3be4a
		mov    %ebx,0x4(%ecx)
		call   func_getche_
		cmp    $0xffffffff,%eax
		je     jump_3be67
		mov    (%ecx),%ebx
		mov    %al,(%ebx)
		movl   $0x1,0x4(%ecx)
		jmp    jump_3be67
	jump_3be4a:
		testb  $0x4,0xd(%ecx)
		je     jump_3be57
		mov    $0x1,%ebx
		jmp    jump_3be5a
	jump_3be57:
		mov    0x14(%ecx),%ebx
	jump_3be5a:
		mov    (%ecx),%edx
		mov    0x10(%ecx),%eax
		call   func___qread_
		mov    %eax,0x4(%ecx)
	jump_3be67:
		mov    0x4(%ecx),%esi
		test   %esi,%esi
		jg     jump_3be85
		jne    jump_3be76
		orb    $0x10,0xc(%ecx)
		jmp    jump_3be85
	jump_3be76:
		mov    0xc(%ecx),%al
		movl   $0x0,0x4(%ecx)
		or     $0x20,%al
		mov    %al,0xc(%ecx)
	jump_3be85:
		mov    0x4(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__dos_getvect_:	/* 0x3be8d */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    data_7cde2,%ah
		cmp    $0x2,%ah
		jb     jump_3beaa
		cmp    $0x8,%ah
		ja     jump_3beaa
		mov    $0x2502,%eax
		mov    %bl,%cl
		jmp    jump_3beb6
	jump_3beaa:
		mov    %ebx,%eax
		and    $0xff,%eax
		xor    %cl,%cl
		or     $0x35,%ah
	jump_3beb6:
		push   %es
		int    $0x21
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__dos_setvect_:	/* 0x3bec1 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %ebx,%edx
		mov    data_7cde2,%bl
		cmp    $0x2,%bl
		jb     jump_3bee2
		cmp    $0x8,%bl
		ja     jump_3bee2
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x4,%al
		mov    $0x25,%ah
		int    $0x21
		pop    %ds
		pop    %edx
		ret
	jump_3bee2:
		push   %ds
		mov    %ecx,%ds
		mov    $0x25,%ah
		int    $0x21
		pop    %ds
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func__nfree_:	/* 0x3beec */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		mov    %eax,%ebx
		mov    data_7cae8,%ecx
		jmp    jump_3bf05
	jump_3befa:
		cmp    %ebx,%ecx
		ja     jump_3bf02
		cmp    %edx,%ebx
		jb     jump_3bf0c
	jump_3bf02:
		mov    0x8(%ecx),%ecx
	jump_3bf05:
		mov    0x8(%ecx),%edx
		test   %edx,%edx
		jne    jump_3befa
	jump_3bf0c:
		mov    $data_7cae8,%eax
		mov    %ds,%edx
		and    $0xffff,%edx
		mov    %ebx,%eax
		mov    %ecx,%ebx
		call   func___MemFree
		cmp    data_7caec,%ecx
		je     jump_3bf3d
		mov    data_7caf0,%ebp
		mov    0x14(%ecx),%edx
		cmp    %ebp,%edx
		jbe    jump_3bf3d
		mov    %edx,data_7caf0
	jump_3bf3d:
		xor    %ah,%ah
		mov    %ah,data_1b6359
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3bf4a:
/*----------------------------------------------------------------*/
		mov    $data_7cb24,%eax
		ret


/*----------------------------------------------------------------*/
func_rand_:	/* 0x3bf50 */
/*----------------------------------------------------------------*/
		push   %edx
		call   func_3bf4a
		test   %eax,%eax
		je     jump_3bf72
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x3039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x10,%eax
		and    $0x7fff,%eax
	jump_3bf72:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_memmove_:	/* 0x3bf84 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     jump_3bfcc
		jae    jump_3bfb8
		add    %ebx,%edx
		cmp    %eax,%edx
		jbe    jump_3bfb8
		lea    (%eax,%ebx,1),%edi
		lea    -0x1(%edx),%esi
		dec    %edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		std
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3bfb8:
		mov    %ds,%edx
		mov    %eax,%edi
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x2,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x3,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
	jump_3bfcc:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_mem_putc_:	/* 0x3bfd0 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x1(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x10(%eax)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_vsprintf_:	/* 0x3bfe3 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    $func_mem_putc_,%ecx
		call   func___prtf_
		movb   $0x0,(%esi,%eax,1)
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_outp_:	/* 0x3bff8 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %cl,%al
		out    %al,(%dx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___update_buffer_:	/* 0x3c006 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0xef,0xc(%edx)
		cmp    0x4(%edx),%eax
		jg     jump_3c032
		mov    0x8(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     jump_3c032
		mov    0x4(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x4(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret
	jump_3c032:
		mov    0x8(%edx),%eax
		movl   $0x0,0x4(%edx)
		mov    %eax,(%edx)
		mov    $0x1,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_fseek_:	/* 0x3c048 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x6,0xc(%eax)
		je     jump_3c0b0
		testb  $0x10,0xd(%ecx)
		je     jump_3c081
		mov    %ecx,%eax
		call   func___flush_
		test   %eax,%eax
		je     jump_3c095
		test   %ebx,%ebx
		jne    jump_3c078
		test   %esi,%esi
		jge    jump_3c078
	jump_3c06e:
		mov    $0x9,%eax
		call   func___set_errno_
	jump_3c078:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3c081:
		cmp    $0x1,%ebx
		jne    jump_3c089
		sub    0x4(%ecx),%esi
	jump_3c089:
		mov    0x8(%ecx),%eax
		movl   $0x0,0x4(%ecx)
		mov    %eax,(%ecx)
	jump_3c095:
		andb   $0xeb,0xc(%ecx)
		mov    %esi,%edx
		mov    0x10(%ecx),%eax
		call   w_dos_lseek
		cmp    $0xffffffff,%eax
		jne    jump_3c13e
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3c0b0:
		cmp    $0x1,%ebx
		jb     jump_3c0be
		jbe    jump_3c0c4
		cmp    $0x2,%ebx
		je     jump_3c11a
		jmp    jump_3c06e
	jump_3c0be:
		test   %ebx,%ebx
		je     jump_3c0e9
		jmp    jump_3c06e
	jump_3c0c4:
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x4(%ecx),%edi
		call   func___update_buffer_
		test   %eax,%eax
		je     jump_3c13e
		mov    %esi,%edx
		mov    0x10(%ecx),%eax
		sub    %edi,%edx
		call   w_dos_lseek
		cmp    $0xffffffff,%eax
		jne    jump_3c13e
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3c0e9:
		mov    0x10(%ecx),%eax
		call   func_tell_
		mov    0x4(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   func___update_buffer_
		test   %eax,%eax
		je     jump_3c13e
		mov    %esi,%edx
		mov    0x10(%ecx),%eax
		call   w_dos_lseek
		cmp    $0xffffffff,%eax
		jne    jump_3c13e
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3c11a:
		mov    0x8(%ecx),%eax
		mov    0xc(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0xef,%dl
		mov    0x10(%ecx),%eax
		mov    %dl,0xc(%ecx)
		mov    %esi,%edx
		movl   $0x0,0x4(%ecx)
		call   w_dos_lseek
		cmp    $0xffffffff,%eax
		je     jump_3c140
	jump_3c13e:
		xor    %eax,%eax
	jump_3c140:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___CHP:	/* 0x3c144 */
/*----------------------------------------------------------------*/
		push   %eax
		fstcw  (%esp)
		fwait
		pushl  (%esp)
		movb   $0x1f,0x1(%esp)
		fldcw  (%esp)
		frndint
		fldcw  0x4(%esp)
		fwait
		lea    0x8(%esp),%esp
		ret


/*----------------------------------------------------------------*/
func_j___sys_init_387_emulator:	/* 0x3c162 */
/*----------------------------------------------------------------*/
		jmp    func___sys_init_387_emulator


/*----------------------------------------------------------------*/
func_j___sys_fini_387_emulator:	/* 0x3c167 */
/*----------------------------------------------------------------*/
		jmp    func___sys_fini_387_emulator


/*----------------------------------------------------------------*/
func_3c16c:
/*----------------------------------------------------------------*/
		cmpl   $0x0,data_7cdd4
		je     jump_3c17b
		mov    $0x1,%eax
		ret
	jump_3c17b:
		mov    $0xb,%ah
		int    $0x21
		cbtw
		cwtl
		ret


/*----------------------------------------------------------------*/
func_3c184: /* 3c184 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %eax
		push   %edx
		mov    %ebx,%edx
		mov    $0x1a,%ah
		int    $0x21
		pop    %ecx
		pop    %edx
		mov    $0x4e,%ah
		int    $0x21
		call   func___doserror_
		mov    %ebx,%edx
		call   func_3c1c0
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3c1a1: /* 3c1a1 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		mov    $0x1a,%ah
		int    $0x21
		call   func_3c1e3
		mov    $0x4f,%ah
		int    $0x21
		call   func___doserror_
		call   func_3c1c0
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_3c1c0:
/*----------------------------------------------------------------*/
		cmpb   $0x9,data_7cde2
		jne    jump_3c1e2
		push   %eax
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x2f,%ah
		int    $0x21
		mov    %ebx,%esi
		mov    %edx,%edi
		mov    $0x2b,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %eax
	jump_3c1e2:
		ret


/*----------------------------------------------------------------*/
func_3c1e3:
/*----------------------------------------------------------------*/
		cmpb   $0x9,data_7cde2
		jne    jump_3c205
		push   %eax
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x2f,%ah
		int    $0x21
		mov    %ebx,%edi
		mov    %edx,%esi
		mov    $0x2b,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %eax
	jump_3c205:
		ret


/*----------------------------------------------------------------*/
func_mem_putc__0:	/* 0x3c206 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x1(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x10(%eax)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_sprintf_:	/* 0x3c219 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x4,%esp
		lea    0x1c(%esp),%eax
		mov    0x18(%esp),%edx
		mov    %esp,%ebx
		mov    $func_mem_putc__0,%ecx
		mov    %eax,(%esp)
		mov    0x14(%esp),%eax
		call   func___prtf_
		mov    0x14(%esp),%edx
		movb   $0x0,(%edx,%eax,1)
		add    $0x4,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_inp_:	/* 0x3c249 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		sub    %eax,%eax
		in     (%dx),%al
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_3c251:
/*----------------------------------------------------------------*/
#if 0
		cli
#endif
		ret


/*----------------------------------------------------------------*/
func_3c253:
/*----------------------------------------------------------------*/
#if 0
		sti
#endif
		ret


/*----------------------------------------------------------------*/
func_ftell_:	/* 0x3c255 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x10(%eax),%eax
		call   func_tell_
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     jump_3c281
		mov    0x4(%edx),%ecx
		test   %ecx,%ecx
		je     jump_3c281
		testb  $0x10,0xd(%edx)
		je     jump_3c27d
		lea    (%ecx,%ebx,1),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3c27d:
		mov    %ebx,%eax
		sub    %ecx,%eax
	jump_3c281:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__fmemcpy_:	/* 0x3c285 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    0xc(%esp),%eax
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x4


/*----------------------------------------------------------------*/
func___MemAllocator:	/* 0x3c2ae */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     jump_3c2fd
		add    $0x7,%eax
		jb     jump_3c2fd
		and    $0xfc,%al
		mov    $0xc,%edx
		sub    %edx,%eax
		cmc
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x14(%ebx),%eax
		ja     jump_3c2fd
		mov    0xc(%ebx),%esi
		mov    0x10(%ebx),%edi
		cmp    %edi,%eax
		ja     jump_3c2e1
		mov    0x28(%ebx),%esi
		sub    %edi,%edi
	jump_3c2e1:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    jump_3c301
		sub    %edx,%edi
		cmc
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x20(%ebx),%edx
		mov    0x8(%esi),%esi
		cmp    %edx,%esi
		jne    jump_3c2e1
		mov    %edi,0x14(%ebx)
	jump_3c2fd:
		sub    %eax,%eax
		jmp    jump_3c34c
	jump_3c301:
		sub    %eax,%edx
		mov    %edi,0x10(%ebx)
		incl   0x18(%ebx)
		mov    0x8(%esi),%ecx
		cmp    $0xc,%edx
		jb     jump_3c32f
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0xc(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x4(%esi),%ebx
		mov    %ebx,0x4(%edi)
		mov    %ecx,0x8(%edi)
		mov    %edi,0x8(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x4(%ebx)
		jmp    jump_3c344
	jump_3c32f:
		decl   0x1c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x4(%esi),%esi
		mov    %edi,0x8(%esi)
		mov    %esi,0x4(%edi)
		mov    %esi,0xc(%ebx)
		mov    %eax,%esi
	jump_3c344:
		orl    $0x1,(%esi)
		mov    %esi,%eax
		add    $0x4,%eax
	jump_3c34c:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret
	jump_3c351:
		jmp    jump_3c45c


/*----------------------------------------------------------------*/
func___MemFree:	/* 0x3c356 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     jump_3c351
		mov    %eax,%esi
		sub    $0x4,%esi
		mov    (%esi),%eax
		test   $0x1,%al
		je     jump_3c351
		and    $0xfe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x1,(%edi)
		jne    jump_3c398
		cmp    0xc(%ebx),%edi
		jne    jump_3c381
		mov    %esi,0xc(%ebx)
	jump_3c381:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x4(%edi),%ebx
		mov    0x8(%edi),%edi
		mov    %edi,0x8(%ebx)
		mov    %ebx,0x4(%edi)
		pop    %ebx
		decl   0x1c(%ebx)
		jmp    jump_3c414
	jump_3c398:
		mov    %eax,(%esi)
		mov    0xc(%ebx),%edi
		cmp    %edi,%esi
		jae    jump_3c3af
		cmp    0x4(%edi),%esi
		ja     jump_3c414
		mov    0x28(%ebx),%edi
		cmp    %edi,%esi
		jb     jump_3c414
		jmp    jump_3c3be
	jump_3c3af:
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_3c414
		lea    0x20(%ebx),%edi
		cmp    0x24(%ebx),%esi
		ja     jump_3c414
	jump_3c3be:
		sub    %edx,%edx
		mov    0x18(%ebx),%eax
		mov    0x1c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    jump_3c3f3
		mov    0x18(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     jump_3c3db
		sub    %eax,%eax
	jump_3c3db:
		mov    %esi,%edi
		add    (%esi),%edi
	jump_3c3df:
		mov    (%edi),%edx
		test   $0x1,%dl
		je     jump_3c414
		cmp    $0xffffffff,%edx
		je     jump_3c3f3
		and    $0xfe,%dl
		add    %edx,%edi
		dec    %eax
		jne    jump_3c3df
	jump_3c3f3:
		mov    0xc(%ebx),%edi
		cmp    %edi,%esi
		jae    jump_3c3fd
		mov    0x28(%ebx),%edi
	jump_3c3fd:
		cmp    %edi,%esi
		jb     jump_3c414
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_3c414
		mov    0x8(%edi),%edi
		cmp    %edi,%esi
		jb     jump_3c414
		mov    0x8(%edi),%edi
		jmp    jump_3c3fd
	jump_3c414:
		mov    0x4(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    jump_3c433
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0xc(%ebx),%esi
		jne    jump_3c42f
		mov    %edi,0xc(%ebx)
	jump_3c42f:
		mov    %edi,%esi
		jmp    jump_3c444
	jump_3c433:
		incl   0x1c(%ebx)
		mov    %edx,0x8(%esi)
		mov    %edi,0x4(%esi)
		mov    %esi,0x8(%edi)
		mov    %edx,%edi
		mov    %esi,0x4(%edi)
	jump_3c444:
		decl   0x18(%ebx)
		cmp    0xc(%ebx),%esi
		jae    jump_3c454
		cmp    0x10(%ebx),%ecx
		jbe    jump_3c454
		mov    %ecx,0x10(%ebx)
	jump_3c454:
		cmp    0x14(%ebx),%ecx
		jbe    jump_3c45c
		mov    %ecx,0x14(%ebx)
	jump_3c45c:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___unlink_:	/* 0x3c461 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_7caec,%edx
		cmp    %edx,%eax
		jne    jump_3c476
		mov    0x8(%edx),%edx
		mov    %edx,data_7caec
	jump_3c476:
		mov    data_7cae8,%ebx
		cmp    %ebx,%eax
		jne    jump_3c489
		mov    0x8(%ebx),%edx
		mov    %edx,data_7cae8
	jump_3c489:
		mov    0x4(%eax),%edx
		mov    0x8(%eax),%eax
		test   %edx,%edx
		je     jump_3c496
		mov    %eax,0x8(%edx)
	jump_3c496:
		test   %eax,%eax
		je     jump_3c49d
		mov    %edx,0x4(%eax)
	jump_3c49d:
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___FreeDPMIBlocks_:	/* 0x3c4a0 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_7cae8,%edx
	jump_3c4ab:
		test   %edx,%edx
		je     jump_3c777
		mov    0x24(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x2c,%eax
		cmp    %ebx,%eax
		jne    jump_3c4f9
		lea    -0x8(%edx),%ebx
		mov    %edx,%eax
		mov    0x8(%edx),%ecx
		call   func___unlink_
		mov    %ecx,%edx
		mov    0x4(%ebx),%ecx
		test   %ecx,%ecx
		jne    jump_3c4e9
		mov    (%ebx),%eax
		shr    $0x10,%eax
		mov    (%ebx),%di
		mov    %eax,%esi
		mov    $0x5,%ah
		mov    $0x2,%al
		int    $0x31
		jmp    jump_3c4ab
	jump_3c4e9:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x49,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    jump_3c4ab
	jump_3c4f9:
		mov    0x8(%edx),%edx
		jmp    jump_3c4ab


/*----------------------------------------------------------------*/
func___LinkUpNewMHeap_:	/* 0x3c5e8 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    data_7cae8,%eax
		xor    %ebx,%ebx
		jmp    jump_3c5fe
	jump_3c5f5:
		cmp    %eax,%edx
		jb     jump_3c602
		mov    %eax,%ebx
		mov    0x8(%eax),%eax
	jump_3c5fe:
		test   %eax,%eax
		jne    jump_3c5f5
	jump_3c602:
		mov    %ebx,0x4(%edx)
		mov    %eax,0x8(%edx)
		test   %ebx,%ebx
		je     jump_3c611
		mov    %edx,0x8(%ebx)
		jmp    jump_3c617
	jump_3c611:
		mov    %edx,data_7cae8
	jump_3c617:
		test   %eax,%eax
		je     jump_3c61e
		mov    %edx,0x4(%eax)
	jump_3c61e:
		lea    0x20(%edx),%ebx
		mov    (%edx),%eax
		add    $0x2c,%edx
		movl   $0x0,-0xc(%edx)
		movl   $0x0,-0x1c(%edx)
		movl   $0x0,-0x14(%edx)
		movl   $0x0,-0x10(%edx)
		mov    %ebx,-0x8(%edx)
		mov    %ebx,-0x4(%edx)
		sub    $0x2c,%eax
		mov    %ebx,-0x20(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___LastFree_:	/* 0x3c65c */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    data_7cae8,%edx
		test   %edx,%edx
		je     jump_3c6a5
		mov    0x24(%edx),%edx
		mov    (%edx),%ebx
		add    %edx,%ebx
		mov    data_7cde2,%ah
		add    $0x4,%ebx
		cmp    $0x2,%ah
		jb     jump_3c698
		cmp    $0x8,%ah
		ja     jump_3c698
		cmpb   $0x0,data_7cde4
		jne    jump_3c698
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,data_7cdb4
	jump_3c698:
		cmp    data_7cdb4,%ebx
		jne    jump_3c6a5
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret
	jump_3c6a5:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_RationalAlloc_:	/* 0x3c6aa */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		call   func___FreeDPMIBlocks_
		mov    (%esp),%eax
		shr    $0x10,%eax
		mov    (%esp),%ecx
		mov    %eax,%ebx
		mov    $0x5,%ah
		mov    $0x1,%al
		int    $0x31
		sbb    %eax,%eax
		inc    %eax
		je     jump_3c6db
		mov    %bx,%ax
		shl    $0x10,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x2(%eax)
	jump_3c6db:
		test   %eax,%eax
		je     jump_3c6f8
		mov    (%esp),%ebx
		lea    0x8(%eax),%edx
		sub    $0x8,%ebx
		mov    %ebx,(%edx)
		movl   $0x0,0x4(%eax)
		mov    %edx,%eax
		jmp    jump_3c774
	jump_3c6f8:
		testw  $0xfff0,data_1b636a
		je     jump_3c70d
		movl   $0xfffff,data_1b6368
	jump_3c70d:
		cmpl   $0x10000,(%esp)
		ja     jump_3c772
		mov    data_1b6368,%ebx
		shr    $0x4,%ebx
		or     $0x1,%bl
		mov    $0x48,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     jump_3c772
		mov    (%esp),%ebx
		shr    $0x4,%ebx
		mov    $0x48,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x49,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     jump_3c772
		mov    $0x0,%ah
		mov    $0x6,%al
		int    $0x31
		mov    %ecx,%eax
		shl    $0x10,%eax
		mov    %dx,%ax
		add    $0x8,%eax
		mov    (%esp),%edx
		mov    %esi,-0x4(%eax)
		sub    $0x8,%edx
		mov    %edx,(%eax)
		jmp    jump_3c774
	jump_3c772:
		xor    %eax,%eax
	jump_3c774:
		add    $0x4,%esp
	jump_3c777:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___CreateNewNHeap_:	/* 0x3c77d */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x0,data_7ce40
		jne    jump_3c790
	jump_3c78c:
		xor    %eax,%eax
		jmp    jump_3c774
	jump_3c790:
		cmpl   $0xfffffffe,data_7cdb4
		je     jump_3c78c
		mov    %esp,%eax
		call   func___AdjustAmount_
		test   %eax,%eax
		je     jump_3c774
		cmpb   $0x1,data_7cde2
		jne    jump_3c7c4
		mov    (%esp),%eax
		call   func_RationalAlloc_
		mov    %eax,%ebx
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_3c7df
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    jump_3c7df
	jump_3c7c4:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x21
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x4,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)
	jump_3c7df:
		test   %edx,%edx
		je     jump_3c78c
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x4,%eax
		cmp    %esi,%eax
		ja     jump_3c78c
		mov    %eax,(%esp)
		cmp    $0x38,%eax
		jb     jump_3c78c
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   func___LinkUpNewMHeap_
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x1,%al
		mov    %eax,(%ebx)
		mov    0x18(%edx),%edi
		movl   $0xffffffff,0x14(%edx)
		inc    %edi
		lea    0x4(%ebx),%eax
		mov    %edi,0x18(%edx)
		call   w_dos_free
		mov    $0x1,%eax
		jmp    jump_3c774


/*----------------------------------------------------------------*/
func___ExpandDGROUP_:	/* 0x3c82c */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		cmpb   $0x1,data_7cde2
		jne    jump_3c844
		cmpb   $0x0,data_7cde3
		je     jump_3c84d
	jump_3c844:
		cmpb   $0x9,data_7cde2
		jne    jump_3c85a
	jump_3c84d:
		mov    (%esp),%eax
		call   func___CreateNewNHeap_
		jmp    jump_3c967
	jump_3c85a:
		cmpl   $0x0,data_7ce40
		jne    jump_3c86a
	jump_3c863:
		xor    %eax,%eax
		jmp    jump_3c967
	jump_3c86a:
		cmpl   $0xfffffffe,data_7cdb4
		je     jump_3c863
		mov    %esp,%eax
		call   func___AdjustAmount_
		test   %eax,%eax
		je     jump_3c967
		mov    data_7cde2,%bl
		cmp    $0x2,%bl
		jb     jump_3c8a8
		cmp    $0x8,%bl
		ja     jump_3c8a8
		cmpb   $0x0,data_7cde4
		jne    jump_3c8a8
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,data_7cdb4
	jump_3c8a8:
		mov    (%esp),%edx
		mov    data_7cdb4,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    jump_3c8bc
		mov    $0xfffffffe,%edx
	jump_3c8bc:
		mov    %edx,%eax
		call   func___brk_
		cmp    $0xffffffff,%eax
		je     jump_3c863
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     jump_3c863
		cmp    %eax,%edx
		jbe    jump_3c863
		sub    %eax,%edx
		lea    -0x4(%edx),%eax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		ja     jump_3c863
		mov    data_7cae8,%edx
		mov    %eax,(%esp)
		jmp    jump_3c8fc
	jump_3c8ea:
		mov    0x8(%edx),%ebp
		test   %ebp,%ebp
		je     jump_3c900
		cmp    %ebx,%edx
		ja     jump_3c8f9
		cmp    %ebp,%ebx
		jb     jump_3c900
	jump_3c8f9:
		mov    0x8(%edx),%edx
	jump_3c8fc:
		test   %edx,%edx
		jne    jump_3c8ea
	jump_3c900:
		test   %edx,%edx
		je     jump_3c92a
		mov    (%edx),%eax
		lea    -0x4(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    jump_3c92a
		mov    (%esp),%esi
		add    $0x4,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		lea    (%eax,%ebp,1),%ecx
		mov    %eax,%ebx
		movl   $0xffffffff,(%ecx)
		jmp    jump_3c949
	jump_3c92a:
		cmpl   $0x38,(%esp)
		jb     jump_3c863
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   func___LinkUpNewMHeap_
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
	jump_3c949:
		mov    (%esp),%eax
		or     $0x1,%al
		mov    %eax,(%ebx)
		incl   0x18(%edx)
		lea    0x4(%ebx),%eax
		movl   $0xffffffff,0x14(%edx)
		call   w_dos_free
		mov    $0x1,%eax
	jump_3c967:
		add    $0x4,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___AdjustAmount_:	/* 0x3c970 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x3,%edx
		and    $0xfc,%dl
		test   %edx,%edx
		jne    jump_3c987
	jump_3c981:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret
	jump_3c987:
		cmpb   $0x1,data_7cde2
		jne    jump_3c999
		cmpb   $0x0,data_7cde3
		je     jump_3c9a2
	jump_3c999:
		cmpb   $0x9,data_7cde2
		jne    jump_3c9a7
	jump_3c9a2:
		add    $0x8,%edx
		jmp    jump_3c9ae
	jump_3c9a7:
		call   func___LastFree_
		sub    %eax,%edx
	jump_3c9ae:
		mov    %edx,(%ebx)
		add    $0x3c,%edx
		cmp    (%ebx),%edx
		jb     jump_3c981
		mov    data_7ce44,%esi
		cmp    %esi,%edx
		jae    jump_3c9c6
		mov    %esi,%edx
		and    $0xfe,%dl
	jump_3c9c6:
		mov    %edx,(%ebx)
		add    $0xfff,%edx
		cmp    (%ebx),%edx
		jb     jump_3c981
		and    $0xf0,%dh
		xor    %dl,%dl
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0xff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3c9e7:
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_isatty_:	/* 0x3c9ea */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x0,%al
		mov    $0x44,%ah
		int    $0x21
		rcl    %edx
		ror    %edx
		test   $0x80,%dl
		setne  %al
		and    $0xff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___set_errno_:	/* 0x3ca0d */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_3e590
		mov    %edx,(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___set_doserrno_:	/* 0x3ca30 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
		call   func_3e596
		mov    %edx,(%eax)
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___set_errno_dos_:	/* 0x3ca4f */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		call   func___set_doserrno_
		cmp    $0x100,%edx
		jae    jump_3ca9e
		cmpb   $0x3,data_7cdeb
		jb     jump_3ca88
		cmp    $0x50,%dl
		jne    jump_3ca78
		mov    $0xe,%bl
		jmp    jump_3ca88
	jump_3ca78:
		cmp    $0x22,%dl
		jb     jump_3ca81
		mov    $0x13,%bl
		jmp    jump_3ca88
	jump_3ca81:
		cmp    $0x20,%dl
		jb     jump_3ca88
		mov    $0x5,%bl
	jump_3ca88:
		cmp    $0x13,%bl
		jbe    jump_3ca8f
		mov    $0x13,%bl
	jump_3ca8f:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    data_7cb29(%edx),%eax
		sar    $0x18,%eax
		jmp    jump_3caa8
	jump_3ca9e:
		mov    %edx,%eax
		shr    $0x8,%eax
		and    $0xff,%eax
	jump_3caa8:
		call   func___set_errno_
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___IOMode_:	/* 0x3cab5 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    data_7cb44,%eax
		jb     jump_3cac8
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret
	jump_3cac8:
		cmp    $0x5,%eax
		jg     jump_3cafe
		mov    %eax,%ebx
		mov    data_7cb98,%eax
		shl    $0x2,%ebx
		add    %ebx,%eax
		mov    0x1(%eax),%cl
		test   $0x40,%cl
		jne    jump_3cafe
		mov    %cl,%ch
		or     $0x40,%ch
		mov    %ch,0x1(%eax)
		mov    %edx,%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_3cafe
		mov    data_7cb98,%eax
		orb    $0x20,0x1(%ebx,%eax,1)
	jump_3cafe:
		mov    data_7cb98,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___SetIOMode_:	/* 0x3cb0a */
/*----------------------------------------------------------------*/
		push   %ebx
		or     $0x40,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    data_7cb98,%eax
		shl    $0x2,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_file_putc_:	/* 0x3cb1f */
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   func_fputc_
		incl   0x10(%ebx)
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___fprtf_:	/* 0x3cb30 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0xc(%eax),%ebp
		mov    0xc(%eax),%ah
		mov    0x8(%esi),%ecx
		and    $0xcf,%ah
		and    $0x30,%ebp
		mov    %ah,0xc(%esi)
		test   %ecx,%ecx
		jne    jump_3cb53
		mov    %esi,%eax
		call   func___ioalloc_
	jump_3cb53:
		mov    0xd(%esi),%cl
		xor    %edi,%edi
		test   $0x4,%cl
		je     jump_3cb71
		mov    %cl,%ch
		and    $0xfa,%ch
		mov    %ch,%al
		mov    %ch,0xd(%esi)
		or     $0x1,%al
		mov    $0x1,%edi
		mov    %al,0xd(%esi)
	jump_3cb71:
		mov    $func_file_putc_,%ecx
		mov    %esi,%eax
		call   func___prtf_
		mov    %eax,%edx
		test   %edi,%edi
		je     jump_3cb9b
		mov    0xd(%esi),%ah
		and    $0xfa,%ah
		mov    %ah,%bl
		mov    %ah,0xd(%esi)
		or     $0x4,%bl
		mov    %esi,%eax
		mov    %bl,0xd(%esi)
		call   func___flush_
	jump_3cb9b:
		testb  $0x20,0xc(%esi)
		je     jump_3cba6
		mov    $0xffffffff,%edx
	jump_3cba6:
		mov    0xc(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0xc(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___close_:	/* 0x3cbb5 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x3e,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     jump_3cbd5
		mov    %edx,%eax
		xor    %edx,%edx
		call   func___SetIOMode_
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret
	jump_3cbd5:
		mov    $0x4,%eax
		call   func___set_errno_
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3cbe7:
/*----------------------------------------------------------------*/
		mov    %esp,%eax
		sub    data_7cdc4,%eax
		ret


/*----------------------------------------------------------------*/
func_nullsub_4:	/* 0x3cbf0 */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func___int386x_:	/* 0x3cbf2 */
/*----------------------------------------------------------------*/
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   func_3cc2a
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x8(%ebp),%edi
		mov    0xc(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x4(%edi)
		mov    %ecx,0x8(%edi)
		mov    %edx,0xc(%edi)
		mov    %esi,0x10(%edi)
		popl   0x14(%edi)
		sbb    %eax,%eax
		mov    %eax,0x18(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x6(%ebx)
		data16 		mov    %es,(%ebx)
		pop    %es
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_3cc2a:
/*----------------------------------------------------------------*/
		lea    (%esi,%esi,2),%esi
#if 1
		lea    data_3ccd0(%esi),%eax
#else
		lea    data_3ccd0(%esi),%eax
#endif
		push   %eax
		mov    (%ebx),%es
		mov    0x6(%ebx),%bp
		mov    (%edi),%eax
		mov    0x4(%edi),%ebx
		mov    0x8(%edi),%ecx
		mov    0xc(%edi),%edx
		mov    0x10(%edi),%esi
		mov    0x14(%edi),%edi
		mov    %ebp,%ds
		ret
.data
data_3ccd0:
		.ascii  "\xcd\x00\xc3\xcd\x01\xc3\xcd\x02"
		.ascii  "\xc3\xcc\x90\xc3\xcd\x04\xc3\xcd"
		.ascii  "\x05\xc3\xcd\x06\xc3\xcd\x07\xc3"
		.ascii  "\xcd\x08\xc3\xcd\x09\xc3\xcd\x0a"
		.ascii  "\xc3\xcd\x0b\xc3\xcd\x0c\xc3\xcd"
		.ascii  "\x0d\xc3\xcd\x0e\xc3\xcd\x0f\xc3"
		.ascii  "\xcd\x10\xc3\xcd\x11\xc3\xcd\x12"
		.ascii  "\xc3\xcd\x13\xc3\xcd\x14\xc3\xcd"
		.ascii  "\x15\xc3\xcd\x16\xc3\xcd\x17\xc3"
		.ascii  "\xcd\x18\xc3\xcd\x19\xc3\xcd\x1a"
		.ascii  "\xc3\xcd\x1b\xc3\xcd\x1c\xc3\xcd"
		.ascii  "\x1d\xc3\xcd\x1e\xc3\xcd\x1f\xc3"
		.ascii  "\xcd\x20\xc3\xcd\x21\xc3\xcd\x22"
		.ascii  "\xc3\xcd\x23\xc3\xcd\x24\xc3\xcd"
		.ascii  "\x25\xc3\xcd\x26\xc3\xcd\x27\xc3"
		.ascii  "\xcd\x28\xc3\xcd\x29\xc3\xcd\x2a"
		.ascii  "\xc3\xcd\x2b\xc3\xcd\x2c\xc3\xcd"
		.ascii  "\x2d\xc3\xcd\x2e\xc3\xcd\x2f\xc3"
		.ascii  "\xcd\x30\xc3\xcd\x31\xc3\xcd\x32"
		.ascii  "\xc3\xcd\x33\xc3\xcd\x34\xc3\xcd"
		.ascii  "\x35\xc3\xcd\x36\xc3\xcd\x37\xc3"
		.ascii  "\xcd\x38\xc3\xcd\x39\xc3\xcd\x3a"
		.ascii  "\xc3\xcd\x3b\xc3\xcd\x3c\xc3\xcd"
		.ascii  "\x3d\xc3\xcd\x3e\xc3\xcd\x3f\xc3"
		.ascii  "\xcd\x40\xc3\xcd\x41\xc3\xcd\x42"
		.ascii  "\xc3\xcd\x43\xc3\xcd\x44\xc3\xcd"
		.ascii  "\x45\xc3\xcd\x46\xc3\xcd\x47\xc3"
		.ascii  "\xcd\x48\xc3\xcd\x49\xc3\xcd\x4a"
		.ascii  "\xc3\xcd\x4b\xc3\xcd\x4c\xc3\xcd"
		.ascii  "\x4d\xc3\xcd\x4e\xc3\xcd\x4f\xc3"
		.ascii  "\xcd\x50\xc3\xcd\x51\xc3\xcd\x52"
		.ascii  "\xc3\xcd\x53\xc3\xcd\x54\xc3\xcd"
		.ascii  "\x55\xc3\xcd\x56\xc3\xcd\x57\xc3"
		.ascii  "\xcd\x58\xc3\xcd\x59\xc3\xcd\x5a"
		.ascii  "\xc3\xcd\x5b\xc3\xcd\x5c\xc3\xcd"
		.ascii  "\x5d\xc3\xcd\x5e\xc3\xcd\x5f\xc3"
		.ascii  "\xcd\x60\xc3\xcd\x61\xc3\xcd\x62"
		.ascii  "\xc3\xcd\x63\xc3\xcd\x64\xc3\xcd"
		.ascii  "\x65\xc3\xcd\x66\xc3\xcd\x67\xc3"
		.ascii  "\xcd\x68\xc3\xcd\x69\xc3\xcd\x6a"
		.ascii  "\xc3\xcd\x6b\xc3\xcd\x6c\xc3\xcd"
		.ascii  "\x6d\xc3\xcd\x6e\xc3\xcd\x6f\xc3"
		.ascii  "\xcd\x70\xc3\xcd\x71\xc3\xcd\x72"
		.ascii  "\xc3\xcd\x73\xc3\xcd\x74\xc3\xcd"
		.ascii  "\x75\xc3\xcd\x76\xc3\xcd\x77\xc3"
		.ascii  "\xcd\x78\xc3\xcd\x79\xc3\xcd\x7a"
		.ascii  "\xc3\xcd\x7b\xc3\xcd\x7c\xc3\xcd"
		.ascii  "\x7d\xc3\xcd\x7e\xc3\xcd\x7f\xc3"
		.ascii  "\xcd\x80\xc3\xcd\x81\xc3\xcd\x82"
		.ascii  "\xc3\xcd\x83\xc3\xcd\x84\xc3\xcd"
		.ascii  "\x85\xc3\xcd\x86\xc3\xcd\x87\xc3"
		.ascii  "\xcd\x88\xc3\xcd\x89\xc3\xcd\x8a"
		.ascii  "\xc3\xcd\x8b\xc3\xcd\x8c\xc3\xcd"
		.ascii  "\x8d\xc3\xcd\x8e\xc3\xcd\x8f\xc3"
		.ascii  "\xcd\x90\xc3\xcd\x91\xc3\xcd\x92"
		.ascii  "\xc3\xcd\x93\xc3\xcd\x94\xc3\xcd"
		.ascii  "\x95\xc3\xcd\x96\xc3\xcd\x97\xc3"
		.ascii  "\xcd\x98\xc3\xcd\x99\xc3\xcd\x9a"
		.ascii  "\xc3\xcd\x9b\xc3\xcd\x9c\xc3\xcd"
		.ascii  "\x9d\xc3\xcd\x9e\xc3\xcd\x9f\xc3"
		.ascii  "\xcd\xa0\xc3\xcd\xa1\xc3\xcd\xa2"
		.ascii  "\xc3\xcd\xa3\xc3\xcd\xa4\xc3\xcd"
		.ascii  "\xa5\xc3\xcd\xa6\xc3\xcd\xa7\xc3"
		.ascii  "\xcd\xa8\xc3\xcd\xa9\xc3\xcd\xaa"
		.ascii  "\xc3\xcd\xab\xc3\xcd\xac\xc3\xcd"
		.ascii  "\xad\xc3\xcd\xae\xc3\xcd\xaf\xc3"
		.ascii  "\xcd\xb0\xc3\xcd\xb1\xc3\xcd\xb2"
		.ascii  "\xc3\xcd\xb3\xc3\xcd\xb4\xc3\xcd"
		.ascii  "\xb5\xc3\xcd\xb6\xc3\xcd\xb7\xc3"
		.ascii  "\xcd\xb8\xc3\xcd\xb9\xc3\xcd\xba"
		.ascii  "\xc3\xcd\xbb\xc3\xcd\xbc\xc3\xcd"
		.ascii  "\xbd\xc3\xcd\xbe\xc3\xcd\xbf\xc3"
		.ascii  "\xcd\xc0\xc3\xcd\xc1\xc3\xcd\xc2"
		.ascii  "\xc3\xcd\xc3\xc3\xcd\xc4\xc3\xcd"
		.ascii  "\xc5\xc3\xcd\xc6\xc3\xcd\xc7\xc3"
		.ascii  "\xcd\xc8\xc3\xcd\xc9\xc3\xcd\xca"
		.ascii  "\xc3\xcd\xcb\xc3\xcd\xcc\xc3\xcd"
		.ascii  "\xcd\xc3\xcd\xce\xc3\xcd\xcf\xc3"
		.ascii  "\xcd\xd0\xc3\xcd\xd1\xc3\xcd\xd2"
		.ascii  "\xc3\xcd\xd3\xc3\xcd\xd4\xc3\xcd"
		.ascii  "\xd5\xc3\xcd\xd6\xc3\xcd\xd7\xc3"
		.ascii  "\xcd\xd8\xc3\xcd\xd9\xc3\xcd\xda"
		.ascii  "\xc3\xcd\xdb\xc3\xcd\xdc\xc3\xcd"
		.ascii  "\xdd\xc3\xcd\xde\xc3\xcd\xdf\xc3"
		.ascii  "\xcd\xe0\xc3\xcd\xe1\xc3\xcd\xe2"
		.ascii  "\xc3\xcd\xe3\xc3\xcd\xe4\xc3\xcd"
		.ascii  "\xe5\xc3\xcd\xe6\xc3\xcd\xe7\xc3"
		.ascii  "\xcd\xe8\xc3\xcd\xe9\xc3\xcd\xea"
		.ascii  "\xc3\xcd\xeb\xc3\xcd\xec\xc3\xcd"
		.ascii  "\xed\xc3\xcd\xee\xc3\xcd\xef\xc3"
		.ascii  "\xcd\xf0\xc3\xcd\xf1\xc3\xcd\xf2"
		.ascii  "\xc3\xcd\xf3\xc3\xcd\xf4\xc3\xcd"
		.ascii  "\xf5\xc3\xcd\xf6\xc3\xcd\xf7\xc3"
		.ascii  "\xcd\xf8\xc3\xcd\xf9\xc3\xcd\xfa"
		.ascii  "\xc3\xcd\xfb\xc3\xcd\xfc\xc3\xcd"
		.ascii  "\xfd\xc3\xcd\xfe\xc3\xcd\xff\xc3"
.text


/*----------------------------------------------------------------*/
func_tolower_:	/* 0x3cfd0 */
/*----------------------------------------------------------------*/
		cmp    $0x41,%eax
		jl     jump_3cfdd
		cmp    $0x5a,%eax
		jg     jump_3cfdd
		add    $0x20,%eax
	jump_3cfdd:
		ret


/*----------------------------------------------------------------*/
func___allocfp_:	/* 0x3cfde */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    data_1b635c,%esi
		test   %esi,%esi
		je     jump_3d006
		mov    0x4(%esi),%ecx
		mov    0xc(%ecx),%edi
		mov    (%esi),%eax
		and    $0x4003,%edi
		mov    %eax,data_1b635c
		or     $0x3,%di
		jmp    jump_3d04f
	jump_3d006:
		mov    $data_7cb9c,%ecx
		jmp    jump_3d02d
	jump_3d00d:
		testb  $0x3,0xc(%ecx)
		jne    jump_3d02a
		mov    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3d074
		mov    $0x3,%edi
		jmp    jump_3d04f
	jump_3d02a:
		add    $0x1a,%ecx
	jump_3d02d:
		cmp    $data_7cda4,%ecx
		jb     jump_3d00d
		mov    $0x22,%eax
		mov    $0x4003,%edi
		call   w_dos_malloc
		mov    %eax,%ecx
		mov    %eax,%esi
		test   %eax,%eax
		je     jump_3d074
		lea    0x8(%eax),%ecx
	jump_3d04f:
		mov    $0x1a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   w_dos_memset
		mov    %edi,0xc(%ecx)
		mov    data_1b6360,%eax
		mov    %ecx,0x4(%esi)
		mov    %esi,data_1b6360
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    jump_3d080
	jump_3d074:
		mov    $0x5,%eax
		call   func___set_errno_
		xor    %eax,%eax
	jump_3d080:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___freefp_:	/* 0x3d086 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $data_1b6360,%edx
	jump_3d090:
		mov    (%edx),%eax
		test   %eax,%eax
		je     jump_3d0bb
		mov    0x4(%eax),%ecx
		cmp    %ecx,%ebx
		je     jump_3d0a1
		mov    %eax,%edx
		jmp    jump_3d090
	jump_3d0a1:
		mov    0xc(%ecx),%cl
		or     $0x3,%cl
		mov    %cl,0xc(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    data_1b635c,%edx
		mov    %eax,data_1b635c
		mov    %edx,(%eax)
	jump_3d0bb:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___purgefp_:	/* 0x3d0bf */
/*----------------------------------------------------------------*/
		push   %edx
	jump_3d0c0:
		mov    data_1b635c,%edx
		test   %edx,%edx
		je     jump_3d0db
		mov    %edx,%eax
		mov    (%edx),%edx
		call   w_dos_free
		mov    %edx,data_1b635c
		jmp    jump_3d0c0
	jump_3d0db:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___chktty_:	/* 0x3d0dd */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x20,0xd(%eax)
		jne    jump_3d10a
		mov    0x10(%edx),%eax
		call   func_isatty_
		test   %eax,%eax
		je     jump_3d10a
		mov    0xd(%edx),%bl
		or     $0x20,%bl
		mov    %bl,0xd(%edx)
		test   $0x7,%bl
		jne    jump_3d10a
		mov    %bl,%cl
		or     $0x2,%cl
		mov    %cl,0xd(%edx)
	jump_3d10a:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_3d10e:
/*----------------------------------------------------------------*/
		mov    data_7cdc0,%eax
		ret


/*----------------------------------------------------------------*/
func___flush_:	/* 0x3d114 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0xd(%eax),%ah
		xor    %esi,%esi
		test   $0x10,%ah
		je     jump_3d181
		mov    0xd(%ecx),%bh
		and    $0xef,%bh
		mov    0xc(%ecx),%al
		mov    %bh,0xd(%ecx)
		test   $0x2,%al
		je     jump_3d1c0
		cmpl   $0x0,0x8(%ecx)
		je     jump_3d1c0
		mov    0x4(%ecx),%ebx
		mov    0x8(%ecx),%edx
		mov    0x10(%ecx),%eax
		call   func___qwrite_
		cmp    $0xffffffff,%eax
		jne    jump_3d162
		mov    0xc(%ecx),%dl
		or     $0x20,%dl
		mov    %eax,%esi
		mov    %dl,0xc(%ecx)
		jmp    jump_3d1c0
	jump_3d162:
		cmp    0x4(%ecx),%eax
		je     jump_3d1c0
		mov    $0xc,%eax
		call   func___set_errno_
		mov    0xc(%ecx),%ah
		or     $0x20,%ah
		mov    $0xffffffff,%esi
		mov    %ah,0xc(%ecx)
		jmp    jump_3d1c0
	jump_3d181:
		cmpl   $0x0,0x8(%ecx)
		je     jump_3d1c0
		mov    0xc(%ecx),%dl
		and    $0xef,%dl
		mov    0xd(%ecx),%dh
		mov    %dl,0xc(%ecx)
		test   $0x20,%dh
		jne    jump_3d1c0
		mov    0x4(%ecx),%eax
		test   %eax,%eax
		je     jump_3d1b0
		mov    %eax,%edx
		mov    $0x1,%ebx
		neg    %edx
		mov    0x10(%ecx),%eax
		call   w_dos_lseek
	jump_3d1b0:
		cmp    $0xffffffff,%eax
		jne    jump_3d1c0
		mov    0xc(%ecx),%bl
		or     $0x20,%bl
		mov    %eax,%esi
		mov    %bl,0xc(%ecx)
	jump_3d1c0:
		mov    0x8(%ecx),%eax
		movl   $0x0,0x4(%ecx)
		mov    %eax,(%ecx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_j_unlink_:	/* 0x3d1d3 */
/*----------------------------------------------------------------*/
		jmp    w_dos_unlink


/*----------------------------------------------------------------*/
func___CMain:	/* 0x3d1d8 */
/*----------------------------------------------------------------*/
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    data_7cdcc,%edx
		add    $0x3,%edx
		and    $0xfc,%dl
		call   func_3cbe7
		cmp    %eax,%edx
		jae    jump_3d1f9
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    jump_3d1fb
	jump_3d1f9:
		xor    %eax,%eax
	jump_3d1fb:
		mov    data_7cdcc,%edx
		add    %edx,%eax
		mov    %eax,data_7cdd0
		call   func_3e6f3
		mov    data_1b6378,%edx
		mov    data_1b6374,%eax
		call   pack
		call   w_dos_exit
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___InitRtns:	/* 0x3d228 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx
	jump_3d22f:
		ds
		mov    $data_7cee0,%esi
		ds
		mov    $data_7cf04,%edi
		mov    %edi,%ebx
		mov    %dl,%al
	jump_3d23f:
		cmp    %edi,%esi
		jae    jump_3d257
		cmpb   $0x2,(%esi)
		je     jump_3d252
		cmp    %al,0x1(%esi)
		ja     jump_3d252
		mov    %esi,%ebx
		mov    0x1(%esi),%al
	jump_3d252:
		add    $0x6,%esi
		jmp    jump_3d23f
	jump_3d257:
		cmp    %edi,%ebx
		je     jump_3d26d
		mov    0x2(%ebx),%eax
		or     %eax,%eax
		je     jump_3d268
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx
	jump_3d268:
		movb   $0x2,(%ebx)
		jmp    jump_3d22f
	jump_3d26d:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___FiniRtns:	/* 0x3d273 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl
	jump_3d27b:
		ds
		mov    $data_7cf04,%esi
		ds
		mov    $data_7cf10,%edi
		mov    %edi,%ebx
		mov    %dl,%al
	jump_3d28b:
		cmp    %edi,%esi
		jae    jump_3d2a3
		cmpb   $0x2,(%esi)
		je     jump_3d29e
		cmp    0x1(%esi),%al
		ja     jump_3d29e
		mov    %esi,%ebx
		mov    0x1(%esi),%al
	jump_3d29e:
		add    $0x6,%esi
		jmp    jump_3d28b
	jump_3d2a3:
		cmp    %edi,%ebx
		je     jump_3d2bd
		cmp    %dh,%al
		ja     jump_3d2b8
		mov    0x2(%ebx),%eax
		or     %eax,%eax
		je     jump_3d2b8
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx
	jump_3d2b8:
		movb   $0x2,(%ebx)
		jmp    jump_3d27b
	jump_3d2bd:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func___Init_Argv_:	/* 0x3d2c2 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %esp,%ebx
		mov    data_7cdb8,%eax
		xor    %edx,%edx
		call   func__SplitParms_
		mov    (%esp),%ecx
		lea    0x1(%eax),%ebp
		mov    data_7cdb8,%edx
		mov    %ebp,%eax
		sub    %edx,%ecx
		shl    $0x2,%eax
		inc    %ecx
		mov    %eax,0x4(%esp)
		add    $0x4,%eax
		add    %ecx,%eax
		call   w_dos_malloc
		mov    %eax,%edx
		test   %eax,%eax
		je     jump_3d35b
		mov    data_7cdb8,%esi
		add    %ecx,%eax
		mov    %edx,%edi
		mov    %eax,data_7cb0c
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x2,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x3,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    data_7cb0c,%ecx
		mov    data_7cdbc,%eax
		mov    %esp,%ebx
		mov    %eax,(%ecx)
		add    $0x4,%ecx
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x4(%esp),%esi
		call   func__SplitParms_
		mov    data_7cb0c,%edx
		add    %esi,%edx
		mov    %ebp,data_7cb08
		movl   $0x0,(%edx)
		jmp    jump_3d365
	jump_3d35b:
		mov    %eax,data_7cb0c
		mov    %eax,data_7cb08
	jump_3d365:
		mov    data_7cb0c,%eax
		mov    %ebp,data_1b6374
		mov    %eax,data_1b6378
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func__SplitParms_:	/* 0x3d37f */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x8,%esp
		mov    %edx,%esi
		mov    %ebx,0x4(%esp)
		xor    %ecx,%ecx
	jump_3d38e:
		mov    (%eax),%dl
		cmp    $0x20,%dl
		je     jump_3d39a
		cmp    $0x9,%dl
		jne    jump_3d39d
	jump_3d39a:
		inc    %eax
		jmp    jump_3d38e
	jump_3d39d:
		test   %dl,%dl
		je     jump_3d458
		cmp    $0x22,%dl
		jne    jump_3d3e9
		inc    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
	jump_3d3b0:
		mov    (%eax),%bh
		cmp    $0x22,%bh
		je     jump_3d41e
		test   %bh,%bh
		je     jump_3d41e
		cmp    $0x5c,%bh
		jne    jump_3d3d5
		mov    0x1(%eax),%bl
		cmp    $0x22,%bl
		je     jump_3d3d4
		cmp    %bh,%bl
		jne    jump_3d3d5
	jump_3d3d4:
		inc    %eax
	jump_3d3d5:
		lea    0x1(%eax),%ebx
		test   %esi,%esi
		je     jump_3d3e5
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    jump_3d3b0
	jump_3d3e5:
		mov    %ebx,%eax
		jmp    jump_3d3b0
	jump_3d3e9:
		mov    %eax,(%esp)
		mov    %eax,%edx
	jump_3d3ee:
		mov    (%eax),%bl
		test   %bl,%bl
		je     jump_3d41e
		cmp    $0x20,%bl
		je     jump_3d41e
		cmp    $0x9,%bl
		je     jump_3d41e
		cmp    $0x5c,%bl
		jne    jump_3d40a
		cmpb   $0x22,0x1(%eax)
		jne    jump_3d40a
		inc    %eax
	jump_3d40a:
		lea    0x1(%eax),%ebx
		test   %esi,%esi
		je     jump_3d41a
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    jump_3d3ee
	jump_3d41a:
		mov    %ebx,%eax
		jmp    jump_3d3ee
	jump_3d41e:
		lea    0x1(%eax),%ebp
		lea    0x1(%ecx),%edi
		test   %esi,%esi
		je     jump_3d449
		shl    $0x2,%ecx
		lea    (%esi,%ecx,1),%ebx
		mov    (%esp),%ecx
		mov    %ecx,(%ebx)
		mov    (%eax),%bl
		mov    %edi,%ecx
		test   %bl,%bl
		jne    jump_3d43f
		mov    %bl,(%edx)
		jmp    jump_3d458
	jump_3d43f:
		mov    %ebp,%eax
		movb   $0x0,(%edx)
		jmp    jump_3d38e
	jump_3d449:
		mov    (%eax),%dl
		mov    %edi,%ecx
		test   %dl,%dl
		je     jump_3d458
		mov    %ebp,%eax
		jmp    jump_3d38e
	jump_3d458:
		mov    0x4(%esp),%edx
		mov    %eax,(%edx)
		mov    %ecx,%eax
		add    $0x8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___fatal_runtime_error_:	/* 0x3d46d */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   func___EnterWVIDEO_
		test   %eax,%eax
		jne    jump_3d487
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   func___do_exit_with_msg__
	jump_3d487:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_fputs_:	/* 0x3d48a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x0,0x8(%edx)
		jne    jump_3d4a0
		mov    %ebx,%eax
		call   func___ioalloc_
	jump_3d4a0:
		mov    0xd(%ebx),%ah
		xor    %edi,%edi
		test   $0x4,%ah
		je     jump_3d4bf
		mov    %ah,%dl
		and    $0xf9,%dl
		mov    %dl,%dh
		mov    %dl,0xd(%ebx)
		or     $0x2,%dh
		mov    $0x1,%edi
		mov    %dh,0xd(%ebx)
	jump_3d4bf:
		mov    %ecx,%ebp
		xor    %esi,%esi
	jump_3d4c3:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     jump_3d4da
		mov    %ebx,%edx
		inc    %ecx
		call   func_fputc_
		cmp    $0xffffffff,%eax
		jne    jump_3d4c3
		mov    %eax,%esi
	jump_3d4da:
		test   %edi,%edi
		je     jump_3d4fb
		mov    0xd(%ebx),%al
		and    $0xf9,%al
		mov    %al,%ah
		mov    %al,0xd(%ebx)
		or     $0x4,%ah
		mov    %ah,0xd(%ebx)
		test   %esi,%esi
		jne    jump_3d4fb
		mov    %ebx,%eax
		call   func___flush_
		mov    %eax,%esi
	jump_3d4fb:
		test   %esi,%esi
		jne    jump_3d503
		mov    %ecx,%esi
		sub    %ebp,%esi
	jump_3d503:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_fputc_:	/* 0x3d50b */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x2,0xc(%edx)
		jne    jump_3d530
		mov    $0x4,%eax
		call   func___set_errno_
		orb    $0x20,0xc(%edx)
	jump_3d526:
		mov    $0xffffffff,%eax
		jmp    jump_3d5a9
	jump_3d530:
		cmpl   $0x0,0x8(%edx)
		jne    jump_3d53d
		mov    %edx,%eax
		call   func___ioalloc_
	jump_3d53d:
		mov    $0x400,%ecx
		cmp    $0xa,%ebx
		jne    jump_3d57a
		mov    0xc(%edx),%al
		mov    $0x600,%ecx
		test   $0x40,%al
		jne    jump_3d57a
		orb    $0x10,0xd(%edx)
		mov    (%edx),%eax
		movb   $0xd,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x4(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x14(%edx),%ebp
		mov    %edi,0x4(%edx)
		cmp    %ebp,%edi
		jne    jump_3d57a
		mov    %edx,%eax
		call   func___flush_
		test   %eax,%eax
		jne    jump_3d526
	jump_3d57a:
		orb    $0x10,0xd(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x4(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0xc(%edx),%edi
		mov    %esi,0x4(%edx)
		test   %edi,%ecx
		jne    jump_3d59a
		cmp    0x14(%edx),%esi
		jne    jump_3d5a5
	jump_3d59a:
		mov    %edx,%eax
		call   func___flush_
		test   %eax,%eax
		jne    jump_3d526
	jump_3d5a5:
		xor    %eax,%eax
		mov    %bl,%al
	jump_3d5a9:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___ioalloc_:	/* 0x3d5af */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   func___chktty_
		cmpl   $0x0,0x14(%edx)
		jne    jump_3d5e4
		mov    0xd(%edx),%ah
		test   $0x2,%ah
		je     jump_3d5cf
		movl   $0x86,0x14(%edx)
		jmp    jump_3d5e4
	jump_3d5cf:
		test   $0x4,%ah
		je     jump_3d5dd
		movl   $0x1,0x14(%edx)
		jmp    jump_3d5e4
	jump_3d5dd:
		movl   $0x1000,0x14(%edx)
	jump_3d5e4:
		mov    0x14(%edx),%eax
		call   w_dos_malloc
		mov    %eax,0x8(%edx)
		test   %eax,%eax
		jne    jump_3d613
		lea    0x18(%edx),%eax
		mov    0xd(%edx),%cl
		movl   $0x1,0x14(%edx)
		and    $0xf8,%cl
		mov    %eax,0x8(%edx)
		mov    %cl,%ch
		mov    %cl,0xd(%edx)
		or     $0x4,%ch
		mov    %ch,0xd(%edx)
		jmp    jump_3d617
	jump_3d613:
		orb    $0x8,0xc(%edx)
	jump_3d617:
		mov    0x8(%edx),%eax
		movl   $0x0,0x4(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___qread_:	/* 0x3d626 */
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x3f,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    jump_3d643
		and    $0xffff,%eax
		call   func___set_errno_dos_
	jump_3d643:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func___delay_init_:	/* 0x3d645 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x2c,%ah
		int    $0x21
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx
	jump_3d653:
		mov    $0x2c,%ah
		int    $0x21
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     jump_3d653
		xor    %esi,%esi
		mov    %al,%bl
	jump_3d663:
		mov    $0x2c,%ah
		int    $0x21
		inc    %esi
		cmp    %dh,%bl
		je     jump_3d663
		mov    %esi,data_1b6364
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___flushall_:	/* 0x3d6b4 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    data_1b6360,%edx
		xor    %ebx,%ebx
		jmp    jump_3d6d9
	jump_3d6c3:
		mov    0x4(%edx),%eax
		test   %ecx,0xc(%eax)
		je     jump_3d6d7
		inc    %ebx
		testb  $0x10,0xd(%eax)
		je     jump_3d6d7
		call   func___flush_
	jump_3d6d7:
		mov    (%edx),%edx
	jump_3d6d9:
		test   %edx,%edx
		jne    jump_3d6c3
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_getche_:	/* 0x3d6e3 */
/*----------------------------------------------------------------*/
		push   %edx
		xor    %edx,%edx
		mov    data_7cdd4,%eax
		mov    %edx,data_7cdd4
		test   %eax,%eax
		jne    jump_3d6fe
		mov    $0x1,%ah
		int    $0x21
		and    $0xff,%eax
	jump_3d6fe:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___prtf_:	/* 0x3d700 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x4c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x44(%esp)
		xor    %bl,%bl
		mov    %eax,0x28(%esp)
		mov    %bl,0x48(%esp)
		mov    %bl,0x3c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x38(%esp)
		mov    $0x4,%ebp
		jmp    jump_3d783
	jump_3d72a:
		lea    0x28(%esp),%ebx
		mov    %esi,%edx
		call   func_getprintspecs_
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x3d(%esp)
		test   %al,%al
		je     jump_3d975
		cmp    $0x6e,%al
		jne    jump_3d825
		mov    0x3c(%esp),%bl
		test   $0x20,%bl
		je     jump_3d7b0
		test   $0x80,%bl
		je     jump_3d76f
		mov    (%esi),%ecx
		add    $0x8,%ecx
		mov    %ecx,(%esi)
		les    -0x8(%ecx),%edx
	jump_3d766:
		mov    0x38(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    jump_3d783
	jump_3d76f:
		test   $0x40,%bl
		je     jump_3d7a5
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x4(%ebx),%edx
	jump_3d77d:
		mov    0x38(%esp),%eax
		mov    %eax,(%edx)
	jump_3d783:
		mov    (%edi),%cl
		test   %cl,%cl
		je     jump_3d975
		lea    0x1(%edi),%eax
		cmp    $0x25,%cl
		je     jump_3d72a
		mov    %eax,%edi
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %cl,%dl
		call   *0x44(%esp)
		jmp    jump_3d783
	jump_3d7a5:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		jmp    jump_3d77d
	jump_3d7b0:
		test   $0x10,%bl
		je     jump_3d7f0
		test   $0x80,%bl
		je     jump_3d7ce
		mov    (%esi),%eax
		add    $0x8,%eax
		mov    %eax,(%esi)
		les    -0x8(%eax),%edx
		mov    0x38(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    jump_3d783
	jump_3d7ce:
		test   $0x40,%bl
		je     jump_3d7e5
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x4(%ecx),%edx
	jump_3d7dc:
		mov    0x38(%esp),%eax
		mov    %ax,(%edx)
		jmp    jump_3d783
	jump_3d7e5:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x4(%ebx),%edx
		jmp    jump_3d7dc
	jump_3d7f0:
		test   $0x80,%bl
		je     jump_3d804
		mov    (%esi),%edx
		add    $0x8,%edx
		mov    %edx,(%esi)
		les    -0x8(%edx),%edx
		jmp    jump_3d766
	jump_3d804:
		test   $0x40,%bl
		je     jump_3d817
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x4(%eax),%edx
		jmp    jump_3d77d
	jump_3d817:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x4(%ecx),%edx
		jmp    jump_3d77d
	jump_3d825:
		mov    %esp,%eax
		lea    0x28(%esp),%ebx
		lea    0x48(%esp),%ecx
		mov    %esi,%edx
		call   func_formstring_
		mov    %edx,%es
		mov    0x3c(%esp),%dl
		mov    %eax,%ebx
		test   $0x8,%dl
		jne    jump_3d867
		cmpb   $0x20,0x3e(%esp)
		jne    jump_3d867
	jump_3d84a:
		mov    0x2c(%esp),%eax
		dec    %eax
		mov    %eax,0x2c(%esp)
		test   %eax,%eax
		jl     jump_3d867
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    0x3e(%esp),%dl
		call   *0x44(%esp)
		jmp    jump_3d84a
	jump_3d867:
		lea    0x3f(%esp),%ecx
	jump_3d86b:
		mov    (%ecx),%al
		test   %al,%al
		je     jump_3d880
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x28(%esp),%eax
		inc    %ecx
		call   *0x44(%esp)
		jmp    jump_3d86b
	jump_3d880:
		mov    0x34(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x34(%esp)
		test   %eax,%eax
		je     jump_3d89e
		lea    0x28(%esp),%eax
		mov    $0x30,%edx
		call   *0x44(%esp)
		jmp    jump_3d880
	jump_3d89e:
		testb  $0x8,0x3c(%esp)
		jne    jump_3d8c9
		cmpb   $0x20,0x3e(%esp)
		je     jump_3d8c9
	jump_3d8ac:
		mov    0x2c(%esp),%eax
		dec    %eax
		mov    %eax,0x2c(%esp)
		test   %eax,%eax
		jl     jump_3d8c9
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    0x3e(%esp),%dl
		call   *0x44(%esp)
		jmp    jump_3d8ac
	jump_3d8c9:
		mov    0x3d(%esp),%dh
		cmp    $0x73,%dh
		je     jump_3d8d7
		cmp    $0x53,%dh
		jne    jump_3d91e
	jump_3d8d7:
		testb  $0x20,0x3c(%esp)
		je     jump_3d8ff
	jump_3d8de:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x30(%esp)
		test   %eax,%eax
		je     jump_3d93d
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		add    $0x2,%ebx
		jmp    jump_3d8de
	jump_3d8ff:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%edx
		mov    %edx,0x30(%esp)
		test   %eax,%eax
		je     jump_3d93d
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		inc    %ebx
		jmp    jump_3d8ff
	jump_3d91e:
		mov    0x30(%esp),%eax
		lea    -0x1(%eax),%ecx
		mov    %ecx,0x30(%esp)
		test   %eax,%eax
		je     jump_3d93d
		xor    %edx,%edx
		lea    0x28(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x44(%esp)
		inc    %ebx
		jmp    jump_3d91e
	jump_3d93d:
		testb  $0x8,0x3c(%esp)
		je     jump_3d783
		cmpl   $0x0,0x2c(%esp)
		jle    jump_3d783
	jump_3d953:
		mov    0x2c(%esp),%eax
		lea    -0x1(%eax),%edx
		mov    %edx,0x2c(%esp)
		test   %eax,%eax
		je     jump_3d783
		lea    0x28(%esp),%eax
		mov    $0x20,%edx
		call   *0x44(%esp)
		jmp    jump_3d953
	jump_3d975:
		mov    0x38(%esp),%eax
		add    $0x4c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_getprintspecs_:	/* 0x3d981 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x0,0x17(%ebx)
		mov    %ebx,%edx
		movb   $0x20,0x16(%ebx)
		call   func_evalflags_
		movl   $0x0,0x4(%ebx)
		mov    (%eax),%cl
		mov    %eax,%edx
		cmp    $0x30,%cl
		jb     jump_3d9c9
		cmp    $0x39,%cl
		ja     jump_3d9c9
	jump_3d9aa:
		imul   $0xa,0x4(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x30,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x4(%ebx)
		mov    (%eax),%cl
		cmp    $0x30,%cl
		jb     jump_3d9f0
		cmp    $0x39,%cl
		jbe    jump_3d9aa
		jmp    jump_3d9f0
	jump_3d9c9:
		cmpb   $0x2a,(%eax)
		jne    jump_3d9f0
		mov    (%esi),%edx
		add    $0x4,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		mov    %edx,0x4(%ebx)
		test   %edx,%edx
		jge    jump_3d9ef
		mov    %edx,%edi
		mov    0x14(%ebx),%dh
		neg    %edi
		or     $0x8,%dh
		mov    %edi,0x4(%ebx)
		mov    %dh,0x14(%ebx)
	jump_3d9ef:
		inc    %eax
	jump_3d9f0:
		movl   $0xffffffff,0x8(%ebx)
		cmpb   $0x2e,(%eax)
		jne    jump_3da43
		inc    %eax
		movl   $0x0,0x8(%ebx)
		cmpb   $0x2a,(%eax)
		jne    jump_3da24
		mov    (%esi),%edx
		add    $0x4,%edx
		mov    %edx,(%esi)
		mov    -0x4(%edx),%edx
		mov    %edx,0x8(%ebx)
		test   %edx,%edx
		jge    jump_3da21
		movl   $0xffffffff,0x8(%ebx)
	jump_3da21:
		inc    %eax
		jmp    jump_3da43
	jump_3da24:
		mov    (%eax),%cl
		cmp    $0x30,%cl
		jb     jump_3da43
		cmp    $0x39,%cl
		ja     jump_3da43
		imul   $0xa,0x8(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x30,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x8(%ebx)
		jmp    jump_3da24
	jump_3da43:
		mov    (%eax),%cl
		lea    0x1(%eax),%edx
		cmp    $0x4e,%cl
		jb     jump_3da68
		jbe    jump_3daa5
		cmp    $0x6c,%cl
		jb     jump_3da5f
		jbe    jump_3da78
		cmp    $0x77,%cl
		je     jump_3da78
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da5f:
		cmp    $0x68,%cl
		je     jump_3da86
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da68:
		cmp    $0x46,%cl
		jb     jump_3dab0
		jbe    jump_3da9f
		cmp    $0x4c,%cl
		je     jump_3da95
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da78:
		mov    0x14(%ebx),%dl
		or     $0x20,%dl
		inc    %eax
		mov    %dl,0x14(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da86:
		mov    0x14(%ebx),%cl
		or     $0x10,%cl
		mov    %edx,%eax
		mov    %cl,0x14(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da95:
		orb    $0x40,0x14(%ebx)
	jump_3da99:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret
	jump_3da9f:
		orb    $0x80,0x14(%ebx)
		jmp    jump_3da99
	jump_3daa5:
		mov    0x14(%ebx),%ch
		or     $0x40,%ch
		mov    %edx,%eax
		mov    %ch,0x14(%ebx)
	jump_3dab0:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_evalflags_:	/* 0x3dab4 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		movb   $0x0,0x14(%edx)
	jump_3daba:
		mov    (%eax),%bl
		cmp    $0x2d,%bl
		jne    jump_3dac7
		orb    $0x8,0x14(%edx)
		jmp    jump_3db09
	jump_3dac7:
		cmp    $0x23,%bl
		jne    jump_3dad2
		orb    $0x1,0x14(%edx)
		jmp    jump_3db09
	jump_3dad2:
		cmp    $0x2b,%bl
		jne    jump_3daea
		mov    0x14(%edx),%ch
		or     $0x4,%ch
		mov    %ch,%bl
		mov    %ch,0x14(%edx)
		and    $0xfd,%bl
		mov    %bl,0x14(%edx)
		jmp    jump_3db09
	jump_3daea:
		cmp    $0x20,%bl
		jne    jump_3db01
		mov    0x14(%edx),%bh
		test   $0x4,%bh
		jne    jump_3db09
		mov    %bh,%cl
		or     $0x2,%cl
		mov    %cl,0x14(%edx)
		jmp    jump_3db09
	jump_3db01:
		cmp    $0x30,%bl
		jne    jump_3db0c
		mov    %bl,0x16(%edx)
	jump_3db09:
		inc    %eax
		jmp    jump_3daba
	jump_3db0c:
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_far_strlen_:	/* 0x3db0f */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %eax,%edx
		xor    %eax,%eax
	jump_3db1b:
		mov    %esi,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%cl
		inc    %edx
		test   %cl,%cl
		je     jump_3db2e
		cmp    %edi,%eax
		je     jump_3db2e
		inc    %eax
		jmp    jump_3db1b
	jump_3db2e:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_far_other_strlen_:	/* 0x3db33 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%esi
		mov    %eax,%edx
		xor    %eax,%eax
	jump_3db3f:
		mov    %ecx,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%di
		add    $0x2,%edx
		test   %di,%di
		je     jump_3db2e
		cmp    %esi,%eax
		je     jump_3db2e
		inc    %eax
		jmp    jump_3db3f


/*----------------------------------------------------------------*/
func_fmt4hex_:	/* 0x3db56 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x10,%ebx
		mov    %ebp,%edi
		call   func_itoa_
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ecx,%esi
		mov    %ebp,%edi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    jump_3db96
	jump_3db8e:
		dec    %edx
		dec    %esi
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx
	jump_3db96:
		cmp    %edi,%edx
		jne    jump_3db8e
		lea    (%eax,%ebp,1),%edx
	jump_3db9d:
		test   %eax,%eax
		jl     jump_3dba8
		dec    %eax
		movb   $0x30,(%edx)
		dec    %edx
		jmp    jump_3db9d
	jump_3dba8:
		add    (%esp),%ebp
		movb   $0x0,0x0(%ebp)
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_FixedPoint_Format_:	/* 0x3dbb7 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x4,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    jump_3dbd3
		neg    %edx
		lea    0x1(%eax),%ecx
		movb   $0x2d,(%eax)
		mov    %edx,(%esp)
	jump_3dbd3:
		cmpl   $0xffffffff,0x8(%esi)
		jne    jump_3dbe0
		movl   $0x4,0x8(%esi)
	jump_3dbe0:
		mov    $0xa,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x2(%esp),%ax
		call   func_itoa_
		mov    %ecx,%ebx
	jump_3dbf5:
		mov    (%ecx),%ah
		lea    0x1(%ecx),%edx
		test   %ah,%ah
		je     jump_3dc02
		mov    %edx,%ecx
		jmp    jump_3dbf5
	jump_3dc02:
		cmpl   $0x0,0x8(%esi)
		je     jump_3dc34
		movb   $0x2e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    jump_3dc2c
	jump_3dc11:
		xor    %edx,%edx
		mov    %dx,0x2(%esp)
		mov    (%esp),%edi
		imul   $0xa,%edi,%edx
		mov    %edx,(%esp)
		mov    0x2(%esp),%dl
		add    $0x30,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx
	jump_3dc2c:
		cmp    0x8(%esi),%eax
		jl     jump_3dc11
		movb   $0x0,(%ecx)
	jump_3dc34:
		testb  $0x80,0x1(%esp)
		je     jump_3dc8b
	jump_3dc3b:
		cmp    %ebx,%ecx
		jne    jump_3dc71
		lea    0x1(%ebx),%ecx
		movb   $0x31,(%ebx)
	jump_3dc45:
		mov    (%ecx),%dl
		lea    0x1(%ecx),%eax
		cmp    $0x30,%dl
		jne    jump_3dc53
		mov    %eax,%ecx
		jmp    jump_3dc45
	jump_3dc53:
		cmp    $0x2e,%dl
		jne    jump_3dc68
		movb   $0x30,(%ecx)
		lea    0x1(%eax),%ecx
		mov    %dl,(%eax)
	jump_3dc60:
		cmpb   $0x30,(%ecx)
		jne    jump_3dc68
		inc    %ecx
		jmp    jump_3dc60
	jump_3dc68:
		movb   $0x30,(%ecx)
		inc    %ecx
		movb   $0x0,(%ecx)
		jmp    jump_3dc8b
	jump_3dc71:
		dec    %ecx
		cmpb   $0x2e,(%ecx)
		jne    jump_3dc78
		dec    %ecx
	jump_3dc78:
		mov    (%ecx),%al
		cmp    $0x39,%al
		je     jump_3dc86
		mov    %al,%ah
		inc    %ah
		mov    %ah,(%ecx)
		jmp    jump_3dc8b
	jump_3dc86:
		movb   $0x30,(%ecx)
		jmp    jump_3dc3b
	jump_3dc8b:
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_float_format_:	/* 0x3dc92 */
/*----------------------------------------------------------------*/
		call   *data_7ce4c
		ret


/*----------------------------------------------------------------*/
func_formstring_:	/* 0x3dc99 */
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x8,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    $0x1,%ebx
		mov    %ds,%eax
		mov    %edi,%ecx
		mov    %ebx,0x4(%esp)
		mov    %eax,%es
		mov    0x15(%esi),%al
		movl   $0x0,0xc(%esi)
		cmp    $0x69,%al
		jb     jump_3dcda
		jbe    jump_3dd1a
		cmp    $0x75,%al
		jb     jump_3dcd6
		jbe    jump_3dce6
		cmp    $0x78,%al
	jump_3dcd2:
		je     jump_3dce6
		jmp    jump_3dd24
	jump_3dcd6:
		cmp    $0x6f,%al
		jmp    jump_3dcd2
	jump_3dcda:
		cmp    $0x58,%al
		jb     jump_3dd24
		jbe    jump_3dce6
		cmp    $0x64,%al
		je     jump_3dd1a
		jmp    jump_3dd24
	jump_3dce6:
		mov    0x14(%esi),%ah
		test   $0x20,%ah
		je     jump_3dcfa
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%ebp
		jmp    jump_3dd16
	jump_3dcfa:
		test   $0x10,%ah
		je     jump_3dd0c
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		movzwl -0x4(%eax),%ebp
		jmp    jump_3dd16
	jump_3dd0c:
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    -0x4(%ebp),%ebp
	jump_3dd16:
		andb   $0xf9,0x14(%esi)
	jump_3dd1a:
		cmpl   $0xffffffff,0x8(%esi)
		je     jump_3dd24
		movb   $0x20,0x16(%esi)
	jump_3dd24:
		mov    0x15(%esi),%al
		mov    $0xa,%ebx
		cmp    $0x65,%al
		jb     jump_3dd89
		jbe    jump_3ddfa
		cmp    $0x6f,%al
		jb     jump_3dd72
		jbe    jump_3de0e
		cmp    $0x73,%al
		jb     jump_3dd65
		jbe    jump_3de89
		cmp    $0x75,%al
		jb     jump_3e01d
		jbe    jump_3df52
		cmp    $0x78,%al
		je     jump_3df35
		jmp    jump_3e01d
	jump_3dd65:
		cmp    $0x70,%al
		je     jump_3df71
		jmp    jump_3e01d
	jump_3dd72:
		cmp    $0x67,%al
		jb     jump_3ddd0
		jbe    jump_3ddfa
		cmp    $0x69,%al
		je     jump_3de49
		jmp    jump_3e01d
	jump_3dd89:
		cmp    $0x50,%al
		jb     jump_3ddbd
		jbe    jump_3df71
		cmp    $0x58,%al
		jb     jump_3ddb0
		jbe    jump_3df35
		cmp    $0x63,%al
		jb     jump_3e01d
		jbe    jump_3dff0
		jmp    jump_3de49
	jump_3ddb0:
		cmp    $0x53,%al
		je     jump_3de89
		jmp    jump_3e01d
	jump_3ddbd:
		cmp    $0x46,%al
		jb     jump_3ddcc
		jbe    jump_3ddd0
		cmp    $0x47,%al
	jump_3ddc5:
		je     jump_3ddfa
		jmp    jump_3e01d
	jump_3ddcc:
		cmp    $0x45,%al
		jmp    jump_3ddc5
	jump_3ddd0:
		testb  $0x10,0x14(%esi)
		je     jump_3ddfa
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    %edi,%eax
		mov    -0x4(%ebx),%edx
		mov    %esi,%ebx
		call   func_FixedPoint_Format_
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    jump_3de3f
	jump_3ddfa:
		mov    %edi,%eax
		mov    %esi,%ebx
		call   func_float_format_
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    jump_3de3f
	jump_3de0e:
		mov    0x14(%esi),%al
		mov    $0x8,%ebx
		test   $0x1,%al
		je     jump_3de1e
		movb   $0x30,(%edi)
		inc    %edi
	jump_3de1e:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   func_ltoa_
	jump_3de27:
		cmpl   $0x0,0x8(%esi)
		jne    jump_3de36
		cmpb   $0x30,(%edi)
		jne    jump_3de36
		movb   $0x0,%es:(%ecx)
	jump_3de36:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax
	jump_3de3f:
		call   func_far_strlen_
		jmp    jump_3e047
	jump_3de49:
		mov    0x14(%esi),%al
		test   $0x20,%al
		je     jump_3de63
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x4(%ebp),%eax
	jump_3de5c:
		call   func_ltoa_
		jmp    jump_3de27
	jump_3de63:
		test   $0x10,%al
		je     jump_3de76
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    %edi,%edx
		movswl -0x4(%eax),%eax
		jmp    jump_3de5c
	jump_3de76:
		mov    (%edx),%ebp
		add    $0x4,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x4(%ebp),%eax
		call   func_itoa_
		jmp    jump_3de27
	jump_3de89:
		mov    0x14(%esi),%ah
		test   $0x80,%ah
		je     jump_3deb3
		mov    (%edx),%ecx
		add    $0x8,%ecx
		mov    %ecx,(%edx)
		mov    -0x4(%ecx),%dx
		mov    -0x8(%ecx),%ecx
		test   %ecx,%ecx
		jne    jump_3dea8
		test   %dx,%dx
		je     jump_3deac
	jump_3dea8:
		mov    %edx,%es
		jmp    jump_3dedf
	jump_3deac:
		mov    %ds,%eax
		mov    (%esp),%ecx
		jmp    jump_3dedd
	jump_3deb3:
		test   $0x40,%ah
		je     jump_3deca
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%ecx
		test   %ecx,%ecx
		je     jump_3deac
	jump_3dec6:
		mov    %ds,%eax
		jmp    jump_3dedd
	jump_3deca:
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    -0x4(%eax),%ecx
		test   %ecx,%ecx
		jne    jump_3dec6
		mov    %ds,%eax
		mov    (%esp),%ecx
	jump_3dedd:
		mov    %eax,%es
	jump_3dedf:
		mov    0x14(%esi),%bh
		mov    0x15(%esi),%al
		xor    %edi,%edi
		and    $0xf9,%bh
		mov    %edi,0x4(%esp)
		mov    %bh,0x14(%esi)
		cmp    $0x53,%al
		jne    jump_3df13
		test   $0x20,%bh
		je     jump_3df08
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x2,%ecx
		jmp    jump_3e047
	jump_3df08:
		xor    %eax,%eax
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    jump_3e047
	jump_3df13:
		test   $0x20,%bh
		je     jump_3df29
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x8(%esi),%ebx
		call   func_far_other_strlen_
		jmp    jump_3e047
	jump_3df29:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x8(%esi),%ebx
		jmp    jump_3de3f
	jump_3df35:
		testb  $0x1,0x14(%esi)
		je     jump_3df4d
		test   %ebp,%ebp
		je     jump_3df4d
		movb   $0x30,0x17(%esi)
		mov    0x15(%esi),%al
		movb   $0x0,0x19(%esi)
		mov    %al,0x18(%esi)
	jump_3df4d:
		mov    $0x10,%ebx
	jump_3df52:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   func_ultoa_
		cmpb   $0x58,0x15(%esi)
		jne    jump_3de27
		mov    %edi,%eax
		call   func_zupstr_
		jmp    jump_3de27
	jump_3df71:
		cmpl   $0x0,0x4(%esi)
		jne    jump_3df8d
		testb  $0x80,0x14(%esi)
		je     jump_3df86
		movl   $0xd,0x4(%esi)
		jmp    jump_3df8d
	jump_3df86:
		movl   $0x8,0x4(%esi)
	jump_3df8d:
		andb   $0xf9,0x14(%esi)
		mov    (%edx),%eax
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    0x14(%esi),%bl
		mov    -0x4(%eax),%ebp
		test   $0x80,%bl
		je     jump_3dfcc
		add    $0x4,%eax
		mov    %eax,(%edx)
		mov    $0x4,%ebx
		mov    -0x4(%eax),%eax
		mov    %edi,%edx
		and    $0xffff,%eax
		call   func_fmt4hex_
		mov    $0x8,%ebx
		lea    0x5(%edi),%edx
		mov    %ebp,%eax
		movb   $0x3a,0x4(%edi)
		jmp    jump_3dfd5
	jump_3dfcc:
		mov    $0x8,%ebx
		mov    %ebp,%eax
		mov    %edi,%edx
	jump_3dfd5:
		call   func_fmt4hex_
		cmpb   $0x50,0x15(%esi)
		jne    jump_3de36
		mov    %edi,%eax
		call   func_zupstr_
		jmp    jump_3de36
	jump_3dff0:
		mov    (%edx),%ebx
		add    $0x4,%ebx
		mov    %ebx,(%edx)
		mov    -0x4(%ebx),%al
		movb   $0x0,0x1(%edi)
		mov    %al,(%edi)
		movl   $0x1,0x8(%esi)
		mov    $0x1,%eax
		mov    0x14(%esi),%dh
		xor    %edi,%edi
		and    $0xf9,%dh
		mov    %edi,0x4(%esp)
		mov    %dh,0x14(%esi)
		jmp    jump_3e047
	jump_3e01d:
		movl   $0x0,0x4(%esi)
		mov    0x15(%esi),%al
		movb   $0x0,0x1(%edi)
		mov    %al,(%edi)
		movl   $0x1,0x8(%esi)
		mov    0x14(%esi),%al
		xor    %edi,%edi
		and    $0xf9,%al
		mov    %edi,0x4(%esp)
		mov    %al,0x14(%esi)
		mov    $0x1,%eax
	jump_3e047:
		cmpl   $0x0,0x4(%esp)
		je     jump_3e08d
		mov    %es:(%ecx),%dl
		cmp    $0x2d,%dl
		jne    jump_3e061
		inc    %ecx
		movb   $0x0,0x18(%esi)
		dec    %eax
		mov    %dl,0x17(%esi)
		jmp    jump_3e07c
	jump_3e061:
		mov    0x14(%esi),%dh
		test   $0x2,%dh
		je     jump_3e06f
		movb   $0x20,0x17(%esi)
		jmp    jump_3e078
	jump_3e06f:
		test   $0x4,%dh
		je     jump_3e07c
		movb   $0x2b,0x17(%esi)
	jump_3e078:
		movb   $0x0,0x18(%esi)
	jump_3e07c:
		mov    0x8(%esi),%edx
		cmp    %edx,%eax
		jle    jump_3e088
		mov    %eax,0x8(%esi)
		jmp    jump_3e08d
	jump_3e088:
		sub    %eax,%edx
		mov    %edx,0xc(%esi)
	jump_3e08d:
		cmpb   $0x2a,0x16(%esi)
		jne    jump_3e0a0
		mov    0x14(%esi),%dl
		movb   $0x0,0x17(%esi)
		and    $0xf9,%dl
		mov    %dl,0x14(%esi)
	jump_3e0a0:
		mov    0x8(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     jump_3e0ac
		cmp    %ebx,%eax
		jge    jump_3e0b5
	jump_3e0ac:
		cmpb   $0x63,0x15(%esi)
		je     jump_3e0b5
		mov    %eax,0x8(%esi)
	jump_3e0b5:
		mov    $0xffffffff,%ebx
		lea    0x17(%esi),%eax
		mov    %ds,%edx
		call   func_far_strlen_
		mov    0x8(%esi),%ebp
		mov    0xc(%esi),%edx
		add    %ebp,%eax
		mov    0x4(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x4(%esi)
		add    $0x8,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_zupstr_:	/* 0x3e0e2 */
/*----------------------------------------------------------------*/
		push   %edx
		mov    %eax,%edx
	jump_3e0e5:
		cmpb   $0x0,(%edx)
		je     jump_3e0f8
		xor    %eax,%eax
		mov    (%edx),%al
		call   func_toupper_
		mov    %al,(%edx)
		inc    %edx
		jmp    jump_3e0e5
	jump_3e0f8:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_tell_:	/* 0x3e0fa */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    $0x1,%ebx
		xor    %edx,%edx
		call   w_dos_lseek
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___sys_init_387_emulator:	/* 0x3e10c */
/*----------------------------------------------------------------*/
		push   %es
		push   %ecx
		push   %ebx
		push   %edx
		fninit
		push   %eax
		fnstcw (%esp)
		pop    %eax
		cmp    $0x3,%ah
		je     jump_3e11d
		inc    %ebp
	jump_3e11d:
		or     %ebp,%ebp
		je     jump_3e126
		call   func_3e13c
	jump_3e126:
		finit
		fldcw  data_7ced4
		fldz
		fldz
		fldz
		fldz
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %es
		ret


/*----------------------------------------------------------------*/
func_3e13c:
/*----------------------------------------------------------------*/
		movb   $0x3,data_7cb28
		movb   $0x1,data_7ce3c
		data16 		smsw   data_7ce3a
		andw   $0x6,data_7ce3a
		sub    $0x8,%esp
		sidtl  (%esp)
		mov    0x2(%esp),%ebx
		add    $0x38,%ebx
		add    $0x8,%esp
		cmpb   $0x0,data_7cde4
		je     jump_3e18e
		call   func_3e207
		data16 		mov    data_7cb06,%es
		mov    %edx,%es:(%ebx)
		mov    %ecx,%es:0x4(%ebx)
		call   func_3e271
		jmp    jump_3e206
	jump_3e18e:
		cmpb   $0x0,data_7cde2
		jne    jump_3e1b2
		mov    $0x2507,%ax
		push   %ds
		mov    %cs,%cx
		mov    %ecx,%ds
		lea    func___int7,%edx
		int    $0x21
		pop    %ds
		mov    $0x4,%al
		mov    $0xf3,%ah
		int    $0x21
		jmp    jump_3e206
	jump_3e1b2:
		cmpb   $0x9,data_7cde2
		jne    jump_3e1da
		call   func_3e207
		mov    %edx,(%ebx)
		mov    %ecx,0x4(%ebx)
		mov    $0xe02,%eax
		mov    $0x4,%ebx
		mov    data_7cb00,%ecx
		call   *0x30(%ecx)
		jmp    jump_3e206
	jump_3e1da:
		cmpb   $0x1,data_7cde2
		jne    jump_3e1f3
		mov    data_7cb04,%dx
		sub    %eax,%eax
		call   func___hook387
		jmp    jump_3e206
	jump_3e1f3:
		sub    %dx,%dx
		sub    %eax,%eax
		call   func___hook387
		cmp    $0x1,%al
		je     jump_3e206
		call   func_3e224
	jump_3e206:
		ret


/*----------------------------------------------------------------*/
func_3e207:
/*----------------------------------------------------------------*/
		lea    func___int7,%ecx
		mov    %cs,%dx
		shl    $0x10,%edx
		mov    %cx,%dx
		mov    %cs,%cx
		and    $0x3,%cl
		shl    $0xd,%cx
		or     $0x8e,%ch
		ret


/*----------------------------------------------------------------*/
func_3e224:
/*----------------------------------------------------------------*/
		mov    $0x7,%cl
		mov    $0x2502,%ax
		int    $0x21
		mov    %ebx,data_7ce34
		data16 		mov    %es,data_7ce38
		cmpb   $0x3,data_7cde2
		mov    $0x7,%cl
		mov    $0x2504,%ax
		push   %ds
		push   %cs
		pop    %ds
		jl     jump_3e25b
		lea    func___int7_pl3,%edx
		int    $0x21
		pop    %ds
		call   func_3e271
		jmp    jump_3e270
	jump_3e25b:
		lea    func___int7,%edx
		int    $0x21
		pop    %ds
		mov    %cr0,%ecx
		or     $0x4,%ecx
		and    $0xfffffffd,%ecx
		mov    %ecx,%cr0
	jump_3e270:
		ret


/*----------------------------------------------------------------*/
func_3e271:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		lea    data_7cdf4,%edx
		mov    $0x2535,%ax
		int    $0x21
		orl    $0x4,data_7cdf4
		andl   $0xfffffffd,data_7cdf4
		inc    %ebx
		int    $0x21
		ret


/*----------------------------------------------------------------*/
func___sys_fini_387_emulator:	/* 0x3e291 */
/*----------------------------------------------------------------*/
		cmpb   $0x1,data_7ce3c
		je     jump_3e29b
		ret
	jump_3e29b:
		push   %ecx
		push   %ebx
		push   %edx
		mov    data_7cde2,%al
		cmpb   $0x0,data_7cde4
		je     jump_3e2b3
		call   func_3e346
		jmp    jump_3e300
	jump_3e2b3:
		cmp    $0x9,%al
		jne    jump_3e2cc
		mov    $0xe02,%eax
		mov    $0x0,%ebx
		mov    data_7cb00,%ecx
		call   *0x30(%ecx)
		jmp    jump_3e300
	jump_3e2cc:
		cmp    $0x0,%al
		jne    jump_3e2dc
		mov    data_7ce3a,%ax
		mov    $0xf3,%ah
		int    $0x21
		jmp    jump_3e300
	jump_3e2dc:
		cmp    $0x1,%al
		jne    jump_3e2f0
		mov    data_7cb04,%dx
		sub    %eax,%eax
		call   func___unhook387
		jmp    jump_3e300
	jump_3e2f0:
		sub    %edx,%edx
		call   func___unhook387
		cmp    $0x1,%al
		je     jump_3e300
		call   func_3e30b
	jump_3e300:
		movb   $0x0,data_7ce3c
		pop    %edx
		pop    %ebx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3e30b:
/*----------------------------------------------------------------*/
		mov    $0x7,%cl
		mov    $0x2504,%ax
		mov    data_7ce34,%edx
		push   %ds
		data16 		mov    data_7ce38,%ds
		int    $0x21
		pop    %ds
		cmpb   $0x3,data_7cde2
		jl     jump_3e332
		call   func_3e346
		jmp    jump_3e345
	jump_3e332:
		mov    %cr0,%ecx
		and    $0xfffffff9,%ecx
		mov    data_7ce3a,%dx
		or     %dx,%cx
		mov    %ecx,%cr0
	jump_3e345:
		ret


/*----------------------------------------------------------------*/
func_3e346:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		lea    data_7cdf4,%edx
		mov    $0x2535,%ax
		int    $0x21
		xor    %ecx,%ecx
		mov    data_7ce3a,%cx
		mov    %ecx,data_7cdf4
		inc    %ebx
		int    $0x21
		ret


/*----------------------------------------------------------------*/
func___save_8087_:	/* 0x3e367 */
/*----------------------------------------------------------------*/
		fsave  (%eax)
		fwait
		ret


/*----------------------------------------------------------------*/
func___rest_8087_:	/* 0x3e36c */
/*----------------------------------------------------------------*/
		frstor (%eax)
		fwait
		ret


/*----------------------------------------------------------------*/
func___init_8087_:	/* 0x3e370 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		cmpb   $0x0,data_7cb29
		je     jump_3e391
		mov    $func___save_8087_,%edx
		mov    $func___rest_8087_,%ebx
		mov    %edx,data_7ced8
		mov    %ebx,data_7cedc
	jump_3e391:
		xor    %eax,%eax
		mov    data_7ced4,%ax
		call   func___init_80x87
		pop    %edx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___chk8087_:	/* 0x3e3ab */
/*----------------------------------------------------------------*/
		push   %edx
		mov    data_7cb28,%ah
		test   %ah,%ah
		jne    jump_3e3e9
		mov    %ah,data_7cb29
		sub    %eax,%eax
		push   %eax
		fninit
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		cmp    $0x3,%al
		jne    jump_3e3d4
		call   func___init_8087_
		mov    %al,%dl
	jump_3e3d4:
		cmpb   $0x0,data_7cde0
		jne    jump_3e3e9
		mov    %dl,data_7cb28
		mov    %dl,data_7cb29
	jump_3e3e9:
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func___doserror_:	/* 0x3e3ec */
/*----------------------------------------------------------------*/
		jae    jump_3e3fc
		and    $0xffff,%eax
		push   %eax
		call   func___set_errno_dos_
		pop    %eax
		jmp    jump_3e3fe
	jump_3e3fc:
		sub    %eax,%eax
	jump_3e3fe:
		ret
	jump_3e4c8:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___brk_:	/* 0x3e4ce */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    data_7cdc8,%eax
		jb     jump_3e535
		cmpb   $0x0,data_7cde2
		jne    jump_3e547
		mov    (%esp),%ebp
		add    $0xf,%ebp
		shr    $0x4,%ebp
		test   %ebp,%ebp
		jne    jump_3e4f9
		mov    $0xfffffff,%ebp
	jump_3e4f9:
		xor    %ebx,%ebx
		mov    %ds,%eax
		mov    %ax,%bx
		mov    $0xed,%ah
		int    $0x21
		shl    $0x1f,%eax
		and    $0xffff,%edi
		or     %eax,%edi
		test   %edi,%edi
		jge    jump_3e523
		mov    %edi,%es
		mov    %ebp,%ebx
		mov    $0x4a,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     jump_3e535
	jump_3e523:
		mov    %ds,%eax
		mov    %eax,%es
		mov    %ebp,%ebx
	jump_3e529:
		mov    $0x4a,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    jump_3e578
	jump_3e535:
		call   func_3e590
		movl   $0x5,(%eax)
		mov    $0xffffffff,%eax
		jmp    jump_3e586
	jump_3e547:
		mov    (%esp),%ebx
		add    $0xfff,%ebx
		shr    $0xc,%ebx
		test   %ebx,%ebx
		jne    jump_3e55c
		mov    $0xfffff,%ebx
	jump_3e55c:
		mov    data_7cde2,%dl
		cmp    $0x1,%dl
		jne    jump_3e572
		cmp    data_7cde3,%dl
		jne    jump_3e572
		shl    $0x8,%ebx
	jump_3e572:
		mov    %ds,%eax
		mov    %eax,%es
		jmp    jump_3e529
	jump_3e578:
		mov    (%esp),%ebx
		mov    data_7cdb4,%eax
		mov    %ebx,data_7cdb4
	jump_3e586:
		add    $0x4,%esp
		pop    %ebp
		pop    %es
		jmp    jump_3e4c8


/*----------------------------------------------------------------*/
func_3e590:
/*----------------------------------------------------------------*/
		mov    $data_1b6370,%eax
		ret


/*----------------------------------------------------------------*/
func_3e596:
/*----------------------------------------------------------------*/
		mov    $data_1b636c,%eax
		ret


/*----------------------------------------------------------------*/
func___InitFiles_:	/* 0x3e59c */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		mov    data_7cbdd,%ah
		and    $0xf8,%ah
		mov    %ah,%dl
		mov    %ah,data_7cbdd
		or     $0x4,%dl
		mov    $data_7cb9c,%ecx
		mov    %dl,data_7cbdd
		jmp    jump_3e603
	jump_3e5c0:
		mov    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_3e5ef
		mov    $0x8,%eax
		call   w_dos_malloc
		mov    %eax,%ebx
		test   %eax,%eax
		jne    jump_3e5ef
		mov    $data_5251c,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_
	jump_3e5ef:
		mov    data_1b6360,%edx
		mov    %ecx,0x4(%ebx)
		mov    %ebx,data_1b6360
		add    $0x1a,%ecx
		mov    %edx,(%ebx)
	jump_3e603:
		mov    0xc(%ecx),%edx
		test   %edx,%edx
		jne    jump_3e5c0
		mov    %edx,data_1b635c
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___full_io_exit_:	/* 0x3e614 */
/*----------------------------------------------------------------*/
		xor    %eax,%eax
		call   func_docloseall_
		jmp    func___purgefp_


/*----------------------------------------------------------------*/
func_docloseall_:	/* 0x3e625 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x2,%eax
		sub    %edx,%eax
		shl    $0x2,%eax
		add    %edx,%eax
		mov    $data_7cb9c,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    data_1b6360,%eax
		jmp    jump_3e66c
	jump_3e647:
		mov    (%eax),%ecx
		mov    0x4(%eax),%eax
		mov    $0x1,%edx
		testb  $0x40,0xd(%eax)
		jne    jump_3e664
		cmp    %esi,%eax
		jb     jump_3e66a
		cmp    $data_7cc1e,%eax
		jae    jump_3e664
		xor    %edx,%edx
	jump_3e664:
		call   func___shutdown_stream_
		inc    %ebx
	jump_3e66a:
		mov    %ecx,%eax
	jump_3e66c:
		test   %eax,%eax
		jne    jump_3e647
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___qwrite_:	/* 0x3e677 */
/*----------------------------------------------------------------*/
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x4,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		call   func___IOMode_
		test   $0x80,%al
		je     jump_3e6bb
		mov    $0x2,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x42,%ah
		mov    %edx,%ecx
		shr    $0x10,%ecx
		int    $0x21
		rcl    %dx
		ror    %dx
		shl    $0x10,%edx
		mov    %ax,%dx
		mov    %edx,%edi
		test   %edx,%edx
		jge    jump_3e6bb
		xor    %eax,%eax
		mov    %dx,%ax
	jump_3e6b4:
		call   func___set_errno_dos_
		jmp    jump_3e6eb
	jump_3e6bb:
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		mov    $0x40,%ah
		int    $0x21
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %eax,%edx
		test   %eax,%eax
		jge    jump_3e6db
		xor    %eax,%eax
		mov    %si,%ax
		jmp    jump_3e6b4
	jump_3e6db:
		cmp    %ebp,%eax
		je     jump_3e6e9
		mov    $0xc,%eax
		call   func___set_errno_
	jump_3e6e9:
		mov    %edx,%eax
	jump_3e6eb:
		add    $0x4,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3e6f3:
/*----------------------------------------------------------------*/
		movl   $0x8000,data_7ce44
		ret


/*----------------------------------------------------------------*/
func___EnterWVIDEO_:	/* 0x3e6fe */
/*----------------------------------------------------------------*/
		cmpb   $0x0,data_7ce48
		je     jump_3e721
		and    $0xffff,%edx
		push   %edx
		push   %eax
		int3
		jmp    jump_3e718
	jump_3e718:
		mov    $0x1,%eax
		add    $0x8,%esp
		ret
	jump_3e721:
		xor    %eax,%eax
		ret


/*----------------------------------------------------------------*/
func_3e724:
/*----------------------------------------------------------------*/
		push   %edx
		mov    $data_5254c,%eax
		mov    $0x1,%edx
		call   func___fatal_runtime_error_
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_toupper_:	/* 0x3e736 */
/*----------------------------------------------------------------*/
		cmp    $0x61,%eax
		jl     jump_3e743
		cmp    $0x7a,%eax
		jg     jump_3e743
		sub    $0x20,%eax
	jump_3e743:
		ret
.data
data_3e744:
		.fill   0x4
data_3e748:
		.fill   0x4
data_3e74c:
		.ascii  "\x00\x00"
data_3e74e:
		.ascii  "\x0a\x00"
data_3e750:
		.ascii  "\x46\x00"
data_3e752:
		.fill   0x6
		.ascii  "\x14"
		.fill   0x4
		.ascii  "\x08\x01\x00\x00\x00\x1e\x00\x0a"
		.ascii  "\x00\x00\x10\x02\x00\x00\x00\x28"
		.ascii  "\x00\x14\x00\x00\x18\x03\x00\x00"
		.ascii  "\x00\x32\x00\x1e\x00\x00\x20\x04"
		.ascii  "\x00\x00\x00\x3c\x00\x28\x00\x00"
		.ascii  "\x28\x05\x00\x00\x00\x46\x00\x32"
		.ascii  "\x00\x00\x30\x06"
		.fill   0x5
		.ascii  "\x3c\x00\x00\x38\x07\x00\x00\x00"
data_3e79e:
		.ascii  "\xfc\xff"
data_3e7a0:
		.ascii  "\x01\x00\x00\x00"
data_3e7a4:
		.ascii  "\x02\x00"
data_3e7a6:
		.ascii  "\x03\x00\xf3\xff\x04\x00\x00\x00"
		.ascii  "\x08\x00\x0c\x00\xcf\xff\x10\x00"
		.ascii  "\x00\x00\x20\x00\x30\x00\x3f\xff"
		.ascii  "\x40\x00\x00\x00\x80\x00\xc0\x00"
		.ascii  "\xff\xfc\x00\x01\x00\x00\x00\x02"
		.ascii  "\x00\x03\xff\xf3\x00\x04\x00\x00"
		.ascii  "\x00\x08\x00\x0c\xff\xcf\x00\x10"
		.ascii  "\x00\x00\x00\x20\x00\x30\xff\x3f"
		.ascii  "\x00\x40\x00\x00\x00\x80\x00\xc0"
data_3e7ee:
		.ascii  "\x01\x40\x00\x45"
data_3e7f2:
		.ascii  "\x00\x02\x40\x42\x01\x03\x41\x43"
		.ascii  "\x87\xdb"
.text

vtable_3e7fc:
		.long   func_3edae
		.long   func_3edb4
		.long   func_3edba
		.long   func_3edc0
		.long   func_3ee70
		.long   func_3edce
		.long   func_3edd4
		.long   func_3edda
		.long   func_3ede0
		.long   func_3ede8
		.long   func_3edf0
		.long   func_3edf8
		.long   func_3ee70
		.long   func_3ee0a
		.long   func_3ee14
		.long   func_3ee1c
		.long   func_3ee24
		.long   func_3ee2d
		.long   func_3ee36
		.long   func_3ee3f
		.long   func_3ee70
		.long   func_3ee53
		.long   func_3ee5e
		.long   func_3ee67

vtable_3e85c:
		.long   func_3edae
		.long   func_3edb4
		.long   func_3edba
		.long   func_3edc0
		.long   func_3edc6
		.long   func_3edce
		.long   func_3edd4
		.long   func_3edda
		.long   func_3ede0
		.long   func_3ede8
		.long   func_3edf0
		.long   func_3edf8
		.long   func_3ee00
		.long   func_3ee0a
		.long   func_3ee14
		.long   func_3ee1c
		.long   func_3ee24
		.long   func_3ee2d
		.long   func_3ee36
		.long   func_3ee3f
		.long   func_3ee48
		.long   func_3ee53
		.long   func_3ee5e
		.long   func_3ee67

vtable_3e8bc:
		.long   func_3eead
		.long   func_3ef9f
		.long   func_3f07b
		.long   func_3f16d
		.long   func_3f207
		.long   func_3f360
		.long   func_3f466
		.long   func_3f568
		.long   func_3eecc
		.long   func_3eea8
		.long   func_3f09a
		.long   func_3eea8
		.long   func_3f22a
		.long   func_3eea8
		.long   func_3f487
		.long   func_3eea8
		.long   func_3eeeb
		.long   func_3efd9
		.long   func_3f0b9
		.long   func_3f1a7
		.long   func_3f24d
		.long   func_3f39e
		.long   func_3f4a8
		.long   func_3f5a4
		.long   func_3ef07
		.long   func_3efea
		.long   func_3f0d5
		.long   func_3f1e3
		.long   func_3f26d
		.long   func_3f3d1
		.long   func_3f4c6
		.long   func_3f5ec
		.long   func_3ef23
		.long   func_3effb
		.long   func_3f0f1
		.long   func_3eea8
		.long   func_3f28d
		.long   func_3f3e6
		.long   func_3f4e4
		.long   func_3f61c
		.long   func_3ef42
		.long   func_3f019
		.long   func_3f110
		.long   func_3f319
		.long   func_3f2b0
		.long   func_3eea8
		.long   func_3f505
		.long   func_3f621
		.long   func_3ef61
		.long   func_3f059
		.long   func_3f12f
		.long   func_3eea8
		.long   func_3f2d3
		.long   func_3f42d
		.long   func_3f526
		.long   func_3f65b
		.long   func_3ef80
		.long   func_3f06d
		.long   func_3f14e
		.long   func_3f3b3
		.long   func_3f2f6
		.long   func_3f458
		.long   func_3f547
		.long   func_3f660

vtable_3e9bc:
		.long   func_3f6b6
		.long   func_3f758
		.long   func_3f684
		.long   func_3f684
		.long   func_3fd69
		.long   func_3fde7
		.long   func_3fe82
		.long   func_3fde7
		.long   func_3f6cb
		.long   func_3f7a0
		.long   func_3f684
		.long   func_3f684
		.long   func_3fd7e
		.long   func_3f7a0
		.long   func_3fecd
		.long   func_3f7a0
		.long   func_3f6e0
		.long   func_3f689
		.long   func_3f684
		.long   func_3f684
		.long   func_3f6e0
		.long   func_3fe06
		.long   func_3f684
		.long   func_3fe06
		.long   func_3f6f2
		.long   func_3fe56
		.long   func_3f684
		.long   func_3f684
		.long   func_3f6f2
		.long   func_3fe56
		.long   func_3ff18
		.long   func_3fe56
		.long   func_3f704
		.long   func_3f7c8
		.long   func_3f684
		.long   func_3fd0f
		.long   func_3fd93
		.long   func_3fe32
		.long   func_3ffa1
		.long   func_400cd
		.long   func_3f719
		.long   func_3f849
		.long   func_3fc86
		.long   func_3f684
		.long   func_3fda8
		.long   func_3fe44
		.long   func_3ffec
		.long   func_3f684
		.long   func_3f72e
		.long   func_3fa64
		.long   func_3f684
		.long   func_3f684
		.long   func_3fdbd
		.long   func_3f684
		.long   func_40037
		.long   func_3f684
		.long   func_3f743
		.long   func_3fb6e
		.long   func_3f684
		.long   func_3f684
		.long   func_3fdd2
		.long   func_3f684
		.long   func_40082
		.long   func_3f684


/*----------------------------------------------------------------*/
func___int7_pl3:	/* 0x3eabc */
/*----------------------------------------------------------------*/
		sti
		pusha
		mov    %esp,%ebp
		pushl  0x40(%ebp)
		pushl  0x44(%ebp)
		mov    0x3c(%ebp),%cx
		mov    %cx,-0x6(%ebp)
		mov    0x38(%ebp),%ecx
		mov    %ecx,0xc(%ebp)
		call   func_3eb50
		pop    %ds
		pop    %es
		popa
		iret


/*----------------------------------------------------------------*/
func___int7:	/* 0x3eb2c */
/*----------------------------------------------------------------*/
		sti
		sub    $0xc,%esp
		push   %eax
		mov    %esp,%eax
		add    $0x1c,%eax
		push   %ecx
		push   %edx
		push   %ebx
		push   %eax
		push   %ebp
		push   %esi
		push   %edi
		push   %es
		push   %ds
		mov    %ss,0x2(%esp)
		call   func_3eb50
		pop    %ds
		pop    %es
		popa
		add    $0xc,%esp
		iret


/*----------------------------------------------------------------*/
func_3eb50:
/*----------------------------------------------------------------*/
		mov    %esp,%ebp
		mov    0x38(%ebp),%esi
		mov    0x3c(%ebp),%ds
		mov    0x4(%ebp),%cx
		mov    0x6(%ebp),%dx
		mov    (%esi),%al
		cmp    $0x9b,%al
		jbe    jump_3ebdc
	jump_3eb6a:
		mov    %al,%bl
		and    $0xf8,%bl
		cmp    $0xd8,%bl
		jne    jump_3ec83
		mov    0x1(%esi),%ah
		add    $0x2,%esi
		and    $0x7,%al
		cmp    $0xc0,%ah
		jae    jump_3ec39
		mov    %ah,%bl
		mov    %ah,%bh
		shr    $0x3,%bh
		and    $0x1807,%ebx
		or     %bh,%bl
		mov    $0x0,%bh
		call   *vtable_3e7fc(,%ebx,4)
		mov    %cx,%es
		mov    %esi,0x38(%ebp)
		mov    %ebx,%esi
		mov    %ah,%bl
		and    $0x38,%ebx
		or     %al,%bl
		call   func___GETDS
		lea    data_7ce54,%ebp
		mov    %ds:0x4(%ebp),%edi
		and    $0x3800,%edi
		shr    $0xb,%edi
		lea    (%edi,%edi,4),%edi
		add    %edi,%edi
		jmp    *vtable_3e8bc(,%ebx,4)
	jump_3ebd6:
		mov    (%esi),%al
		cmp    $0x9b,%al
		ja     jump_3eb6a
	jump_3ebdc:
		je     jump_3ec02
		cmp    $0x26,%al
		je     jump_3ec20
		cmp    $0x2e,%al
		je     jump_3ec05
		cmp    $0x36,%al
		je     jump_3ec17
		cmp    $0x3e,%al
		je     jump_3ec0e
		cmp    $0x64,%al
		je     jump_3ec29
		cmp    $0x65,%al
		je     jump_3ec31
		cmp    $0x66,%al
		je     jump_3ec02
		cmp    $0x67,%al
		jne    jump_3eb6a
	jump_3ec02:
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec05:
		mov    0x3c(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec0e:
		mov    0x4(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec17:
		mov    0x6(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec20:
		mov    0x8(%ebp),%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec29:
		mov    %fs,%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec31:
		mov    %gs,%cx
		mov    %ecx,%edx
		inc    %esi
		jmp    jump_3ebd6
	jump_3ec39:
		mov    %esi,0x38(%ebp)
		call   func___GETDS
		lea    data_7ce54,%ebp
		mov    %ah,%dl
		and    $0x38,%edx
		or     %al,%dl
		mov    %ds:0x4(%ebp),%edi
		and    $0x3800,%edi
		shr    $0xb,%edi
		mov    %ah,%bl
		and    $0x7,%ebx
		mov    %ebx,%esi
		cmp    $0xf801,%ax
		jne    jump_3ec6c
		mov    $0x1,%si
	jump_3ec6c:
		add    %edi,%esi
		and    $0x7,%esi
		lea    (%edi,%edi,4),%edi
		add    %edi,%edi
		lea    (%esi,%esi,4),%esi
		add    %esi,%esi
		jmp    *vtable_3e9bc(,%edx,4)
	jump_3ec83:
		ret


/*----------------------------------------------------------------*/
func_3ec84:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    $0xffffff00,%edx
		mov    0x4(%ebx),%eax
		shl    $0x19,%eax
		jae    jump_3ecb2
		jne    jump_3ec9e
		cmpl   $0x0,(%ebx)
		jne    jump_3ec9e
		add    %edx,%edx
	jump_3ec9e:
		addl   $0x100,0x4(%ebx)
		jae    jump_3ecb2
		movl   $0x80000000,0x4(%ebx)
		incw   0x8(%ebx)
	jump_3ecb2:
		and    %edx,0x4(%ebx)
		movl   $0x0,(%ebx)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3ecc0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    $0xfffff800,%edx
		mov    (%ebx),%eax
		shl    $0x16,%eax
		jae    jump_3eceb
		jne    jump_3ecd4
		add    %edx,%edx
	jump_3ecd4:
		addl   $0x800,(%ebx)
		adcl   $0x0,0x4(%ebx)
		jae    jump_3eceb
		movl   $0x80000000,0x4(%ebx)
		incw   0x8(%ebx)
	jump_3eceb:
		and    %edx,(%ebx)
		jmp    func_3eb50
	jump_3ecf2:
		inc    %eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_3e7ee(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
	jump_3ed09:
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_3eb50
	jump_3ed44:
		inc    %eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_3e7ee(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3ed60:
/*----------------------------------------------------------------*/
		or     %al,%ds:0x4(%ebp)
		test   %al,%ds:0x0(%ebp)
		jne    jump_3edad
		push   %esi
		push   %edi
		push   %ecx
		push   %es
		push   %ds
		sub    $0x6c,%esp
		mov    %ss,%cx
		mov    %cx,%es
		mov    %ebp,%esi
		mov    %esp,%edi
		mov    $0x1b,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		movzbl %ah,%eax
		call   *data_7cded
		mov    %ds,%cx
		mov    %cx,%es
		mov    %ss,%cx
		mov    %cx,%ds
		mov    %ebp,%edi
		mov    %esp,%esi
		mov    $0x1b,%ecx
		cld
		rep movsl %ds:(%esi),%es:(%edi)
		add    $0x6c,%esp
		pop    %ds
		pop    %es
		pop    %ecx
		pop    %edi
		pop    %esi
	jump_3edad:
		ret


/*----------------------------------------------------------------*/
func_3edae:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edb4:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edba:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edc0:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edc6:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_3edce:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		ret


/*----------------------------------------------------------------*/
func_3edd4:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edda:
/*----------------------------------------------------------------*/
		xor    %ebx,%ebx
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ede0:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ede8:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edf0:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3edf8:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee00:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_3ee0a:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x14(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_3ee14:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee1c:
/*----------------------------------------------------------------*/
		movsbl (%esi),%ebx
		inc    %esi
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee24:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x28(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee2d:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x24(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee36:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x20(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee3f:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x1c(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee48:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x18(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_3ee53:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x14(%ebp),%ebx
		mov    %edx,%ecx
		ret


/*----------------------------------------------------------------*/
func_3ee5e:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0x10(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee67:
/*----------------------------------------------------------------*/
		mov    (%esi),%ebx
		add    $0x4,%esi
		add    0xc(%ebp),%ebx
		ret


/*----------------------------------------------------------------*/
func_3ee70:
/*----------------------------------------------------------------*/
		mov    (%esi),%bl
		inc    %esi
		push   %ebx
		and    $0x7,%bl
		mov    %ah,%bh
		shr    $0x3,%bh
		and    $0x18,%bh
		or     %bh,%bl
		mov    $0x0,%bh
		call   *vtable_3e85c(,%ebx,4)
		pop    %edx
		push   %ecx
		mov    %edx,%ecx
		and    $0x38,%dl
		cmp    $0x20,%dl
		je     jump_3eea6
		shr    %edx
		neg    %edx
		mov    0x28(%ebp,%edx,1),%edx
		shr    $0x6,%cl
		shl    %cl,%edx
		add    %edx,%ebx
	jump_3eea6:
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_3eea8:
/*----------------------------------------------------------------*/
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3eead:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3eecc:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3eeeb:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3ef07:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3ef23:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ef42:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ef61:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ef80:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40a9e
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ef9f:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_40a9e
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3efd9:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40958
		mov    %eax,%es:(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3efea:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40958
		mov    %eax,%es:(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3effb:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		push   %ds
		push   %es
		mov    %es,%ax
		mov    %ds,%dx
		mov    %dx,%es
		mov    %ax,%ds
		mov    %ebp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %es
		pop    %ds
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f019:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		mov    %ax,%ds:0x0(%ebp)
		and    $0x300,%ax
		cmp    $0x300,%ax
		jne    jump_3f038
		lea    func_3eb50,%edx
		mov    %edx,%ds:0x76(%ebp)
		jmp    jump_3f054
	jump_3f038:
		cmp    $0x200,%ax
		jne    jump_3f04a
		lea    func_3ecc0,%edx
		mov    %edx,%ds:0x76(%ebp)
		jmp    jump_3f054
	jump_3f04a:
		lea    func_3ec84,%edx
		mov    %edx,%ds:0x76(%ebp)
	jump_3f054:
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f059:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		mov    %edi,%ebx
		mov    %esi,%edi
		mov    %ebp,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ebx,%edi
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f06d:
/*----------------------------------------------------------------*/
		mov    %ds:0x0(%ebp),%ax
		mov    %ax,%es:(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f07b:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f09a:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f0b9:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3f0d5:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3f0f1:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f110:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f12f:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f14e:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f16d:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_40892
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f1a7:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40823
		mov    %eax,%es:(%esi)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f1e3:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40823
		mov    %eax,%es:(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f207:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f22a:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f24d:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3f26d:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3f28d:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f2b0:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f2d3:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f2f6:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x6c(%ebp),%ebx
		call   func_408d8
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f319:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		mov    %eax,0x1c(%edi,%ebp,1)
		mov    %es:0x4(%esi),%eax
		mov    %eax,0x20(%edi,%ebp,1)
		mov    %es:0x8(%esi),%ax
		mov    %ax,0x24(%edi,%ebp,1)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f360:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		mov    %es:0x4(%esi),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_408d8
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f39e:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_409d7
		mov    %eax,%es:(%esi)
		mov    %edx,%es:0x4(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f3b3:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%es:(%esi)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%es:0x4(%esi)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%es:0x8(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f3d1:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_409d7
		mov    %eax,%es:(%esi)
		mov    %edx,%es:0x4(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f3e6:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		push   %ds
		push   %es
		mov    %es,%ax
		mov    %ds,%dx
		mov    %dx,%es
		mov    %ax,%ds
		mov    %ebp,%edi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %es:0x4(%ebp),%ebx
		and    $0x3800,%ebx
		shr    $0xb,%ebx
		lea    (%ebx,%ebx,4),%ebx
		add    %ebx,%ebx
		mov    $0x8,%ecx
	jump_3f414:
		lea    0x1c(%ebp,%ebx,1),%edi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movzwl data_3e74e(%ebx),%ebx
		loop   jump_3f414
		pop    %es
		pop    %ds
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f42d:
/*----------------------------------------------------------------*/
		mov    $0x7,%ecx
		mov    %edi,%ebx
		mov    %esi,%edi
		mov    %ebp,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x8,%ecx
	jump_3f43f:
		lea    0x1c(%ebx,%ebp,1),%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movzwl data_3e74e(%ebx),%ebx
		loop   jump_3f43f
		mov    %ebx,%edi
		jmp    func_3fd43


/*----------------------------------------------------------------*/
func_3f458:
/*----------------------------------------------------------------*/
		mov    %ds:0x4(%ebp),%ax
		mov    %ax,%es:(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f466:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f487:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f4a8:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3f4c6:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3f4e4:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f505:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f526:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f547:
/*----------------------------------------------------------------*/
		mov    %es:(%esi),%ax
		cwtl
		lea    0x6c(%ebp),%edx
		call   func_40892
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f568:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%ax
		cwtl
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_40892
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f5a4:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40823
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_3f5d7
		mov    $0x8000,%ax
	jump_3f5d7:
		mov    %ax,%es:(%esi)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f5ec:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40823
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_3f613
		mov    $0x8000,%ax
	jump_3f613:
		mov    %ax,%es:(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f61c:
/*----------------------------------------------------------------*/
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f621:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    %es:(%esi),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_408a3
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f65b:
/*----------------------------------------------------------------*/
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f660:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40828
		mov    %eax,%es:(%esi)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3f684:
/*----------------------------------------------------------------*/
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f689:
/*----------------------------------------------------------------*/
		jmp    *vtable_3f691(,%ebx,4)

vtable_3f691:
		.long   func_3f6b1
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3f6b1:
/*----------------------------------------------------------------*/
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f6b6:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f6cb:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f6e0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3f6f2:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3f704:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f719:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f72e:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f743:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%edi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3f758:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    0x1c(%esi,%ebp,1),%eax
		mov    %eax,0x1c(%edi,%ebp,1)
		mov    0x20(%esi,%ebp,1),%eax
		mov    %eax,0x20(%edi,%ebp,1)
		mov    0x24(%esi,%ebp,1),%ax
		mov    %ax,0x24(%edi,%ebp,1)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f7a0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		lea    0x1c(%esi,%ebp,1),%esi
		mov    (%esi),%eax
		xchg   %eax,(%ebx)
		mov    %eax,(%esi)
		mov    0x4(%esi),%eax
		xchg   %eax,0x4(%ebx)
		mov    %eax,0x4(%esi)
		mov    0x8(%esi),%ax
		xchg   %ax,0x8(%ebx)
		mov    %ax,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f7c8:
/*----------------------------------------------------------------*/
		jmp    *vtable_3f7d0(,%ebx,4)

vtable_3f7d0:
		.long   func_3f7f0
		.long   func_3f7fd
		.long   func_3f684
		.long   func_3f684
		.long   func_3f80a
		.long   func_3f83b
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3f7f0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		xorb   $0x80,0x9(%eax)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f7fd:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		andb   $0x7f,0x9(%eax)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f80a:
/*----------------------------------------------------------------*/
		mov    data_3e744,%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    data_3e748,%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    data_3e74c,%ax
		mov    %ax,%ds:0x74(%ebp)
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x6c(%ebp),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3f83b:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_40fea
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f849:
/*----------------------------------------------------------------*/
		jmp    *vtable_3f851(,%ebx,4)

vtable_3f851:
		.long   func_3f871
		.long   func_3f8b4
		.long   func_3f8f9
		.long   func_3f93e
		.long   func_3f983
		.long   func_3f9c8
		.long   func_3fa0d
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3f871:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		movl   $0x80000000,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f8b4:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xcd1b8afe,(%esi)
		movl   $0xd49a784b,0x4(%esi)
		movw   $0x4000,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f8f9:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0x5c17f0bc,(%esi)
		movl   $0xb8aa3b29,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f93e:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0x2168c235,(%esi)
		movl   $0xc900daa2,0x4(%esi)
		movw   $0x4000,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f983:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xfbcff799,(%esi)
		movl   $0x9a209a84,0x4(%esi)
		movw   $0x3ffd,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3f9c8:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		movl   $0xd1cf79ac,(%esi)
		movl   $0xb17217f7,0x4(%esi)
		movw   $0x3ffe,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fa0d:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		mov    %eax,0x4(%esi)
		mov    %ax,0x8(%esi)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a0(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fa64:
/*----------------------------------------------------------------*/
		jmp    *vtable_3fa6c(,%ebx,4)

vtable_3fa6c:
		.long   func_3fa8c
		.long   func_3fa99
		.long   func_3fae0
		.long   func_400f5
		.long   func_4013e
		.long   func_401a3
		.long   func_3fb2c
		.long   func_3fb4d


/*----------------------------------------------------------------*/
func_3fa8c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_41610
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fa99:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_410f1
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fae0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_415da
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%esi
		sub    %eax,%eax
		mov    %eax,(%esi)
		movl   $0x80000000,0x4(%esi)
		movw   $0x3fff,0x8(%esi)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fb2c:
/*----------------------------------------------------------------*/
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fb4d:
/*----------------------------------------------------------------*/
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fb6e:
/*----------------------------------------------------------------*/
		jmp    *vtable_3fb76(,%ebx,4)

vtable_3fb76:
		.long   func_3fb96
		.long   func_3fbc0
		.long   func_3fc07
		.long   func_3fc14
		.long   func_401cd
		.long   func_401e5
		.long   func_3fc6c
		.long   func_3fc79


/*----------------------------------------------------------------*/
func_3fb96:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_40f09
		and    $0x7,%eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_3e7f2(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fbc0:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_410d8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fc07:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_417e4
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fc14:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%ebx
		pushl  (%ebx)
		pushl  0x4(%ebx)
		pushl  0x6(%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_415c3
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%ebx
		popl   0x6(%ebx)
		popl   0x4(%ebx)
		popl   (%ebx)
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_415cd
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fc6c:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_415c3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fc79:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		call   func_415cd
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fc86:
/*----------------------------------------------------------------*/
		jmp    *vtable_3fc8e(,%ebx,4)

vtable_3fc8e:
		.long   func_3f684
		.long   func_3fcae
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3fcae:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%ds:0x74(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3fd0f:
/*----------------------------------------------------------------*/
		jmp    *vtable_3fd17(,%ebx,4)

vtable_3fd17:
		.long   func_3f684
		.long   func_3f684
		.long   func_3fd37
		.long   func_3fd43
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3fd37:
/*----------------------------------------------------------------*/
		andw   $0x7f00,%ds:0x4(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fd43:
/*----------------------------------------------------------------*/
		movw   $0x33f,%ds:0x0(%ebp)
		movw   $0x0,%ds:0x4(%ebp)
		movw   $0xffff,%ds:0x8(%ebp)
		lea    func_3eb50,%edx
		mov    %edx,%ds:0x76(%ebp)
		sub    %edi,%edi
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fd69:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40274
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fd7e:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_406a8
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fd93:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fda8:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40266
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fdbd:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fdd2:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_404d3
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fde7:
/*----------------------------------------------------------------*/
		mov    data_3e79e(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%esi),%bx
		or     %bx,%ds:0x8(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fe06:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,0x1c(%esi,%ebp,1)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,0x20(%esi,%ebp,1)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,0x24(%esi,%ebp,1)
		mov    data_3e79e(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_3fe32:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ed44


/*----------------------------------------------------------------*/
func_3fe44:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3fe56:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,0x1c(%esi,%ebp,1)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,0x20(%esi,%ebp,1)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,0x24(%esi,%ebp,1)
		mov    data_3e79e(%esi),%bx
		and    %bx,%ds:0x8(%ebp)
		jmp    jump_3ed09


/*----------------------------------------------------------------*/
func_3fe82:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40274
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3fecd:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_406a8
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ff18:
/*----------------------------------------------------------------*/
		jmp    *vtable_3ff20(,%ebx,4)

vtable_3ff20:
		.long   func_3f684
		.long   func_3ff40
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_3ff40:
/*----------------------------------------------------------------*/
		mov    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x6c(%ebp)
		mov    0x20(%edi,%ebp,1),%eax
		mov    %eax,%ds:0x70(%ebp)
		mov    0x24(%edi,%ebp,1),%ax
		mov    %ax,%ds:0x74(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x6c(%ebp),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		call   func_4043a
		jmp    jump_3ecf2


/*----------------------------------------------------------------*/
func_3ffa1:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40266
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_3ffec:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_40266
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_40037:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_404d3
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_40082:
/*----------------------------------------------------------------*/
		lea    0x1c(%esi,%ebp,1),%eax
		lea    0x1c(%edi,%ebp,1),%edx
		lea    0x1c(%esi,%ebp,1),%ebx
		call   func_404d3
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_400cd:
/*----------------------------------------------------------------*/
		jmp    *vtable_400d5(,%ebx,4)

vtable_400d5:
		.long   func_40256
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684
		.long   func_3f684


/*----------------------------------------------------------------*/
func_400f5:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%edx
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		mov    data_3e7a6(%edi),%bx
		or     %bx,%ds:0x8(%ebp)
		movzwl data_3e74e(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %eax,%ebx
		call   func_40cf0
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_4013e:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%esi
		movzwl data_3e750(%edi),%edi
		mov    data_3e752(%edi),%bx
		andw   $0xc7ff,%ds:0x4(%ebp)
		or     %bx,%ds:0x4(%ebp)
		mov    data_3e79e(%edi),%bx
		and    %bx,%ds:0x8(%ebp)
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    (%esi),%eax
		mov    %eax,(%ebx)
		mov    0x4(%esi),%eax
		mov    %eax,0x4(%ebx)
		mov    0x8(%esi),%ax
		mov    %ax,%dx
		and    $0x8000,%dx
		or     $0x3fff,%dx
		mov    %dx,0x8(%ebx)
		and    $0x7fff,%ax
		sub    $0x3fff,%ax
		cwtl
		mov    %esi,%edx
		call   func_40823
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_401a3:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		lea    0x1c(%esi,%ebp,1),%edx
		call   func_40f09
		and    $0x7,%eax
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     data_3e7f2(%eax),%dh
		mov    %dx,%ds:0x4(%ebp)
		jmp    *%ds:0x76(%ebp)


/*----------------------------------------------------------------*/
func_401cd:
/*----------------------------------------------------------------*/
		lea    0x1c(%edi,%ebp,1),%eax
		mov    %ds:0x0(%ebp),%dx
		and    $0xc00,%dx
		call   func_40b63
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_401e5:
/*----------------------------------------------------------------*/
		mov    %edi,%esi
		movzwl data_3e74e(%edi),%edi
		lea    0x1c(%edi,%ebp,1),%eax
		mov    0x8(%eax),%cx
		call   func_40823
		mov    %esi,%edi
		lea    0x1c(%edi,%ebp,1),%ebx
		mov    %eax,%edx
		cwtl
		cmp    %edx,%eax
		je     jump_40224
		or     %ch,%ch
		jns    jump_40215
		sub    %dx,%dx
		sub    %cx,%cx
		jmp    jump_40222
	jump_40215:
		mov    $0x7fff,%dx
		mov    0x8(%ebx),%cx
		and    $0x8000,%cx
	jump_40222:
		jmp    jump_4024a
	jump_40224:
		mov    0x8(%ebx),%dx
		mov    %dx,%cx
		and    $0x8000,%cx
		and    $0x7fff,%dx
		add    %ax,%dx
		jns    jump_4024a
		or     %ah,%ah
		jns    jump_40246
		sub    %dx,%dx
		sub    %cx,%cx
		jmp    jump_4024a
	jump_40246:
		mov    $0x7fff,%dx
	jump_4024a:
		or     %cx,%dx
		mov    %dx,0x8(%ebx)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_40256:
/*----------------------------------------------------------------*/
		mov    %ds:0x4(%ebp),%ax
		mov    %esp,%ebp
		mov    %ax,0x28(%ebp)
		jmp    func_3eb50


/*----------------------------------------------------------------*/
func_40266:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		xor    $0x8000,%si
		jmp    jump_4027b


/*----------------------------------------------------------------*/
func_40274:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
	jump_4027b:
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_402ce
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_4029e:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x18(%esp),%si
		mov    0x14(%esp),%ecx
		mov    0x10(%esp),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_402ce
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret    $0xc


/*----------------------------------------------------------------*/
func_402ce:
/*----------------------------------------------------------------*/
		or     %eax,%eax
		jne    jump_402f1
		or     %edx,%edx
		jne    jump_402f1
		add    %si,%si
		jne    jump_402ee
		shr    $0x10,%esi
		mov    %ebx,%eax
		mov    %ecx,%edx
		add    %esi,%esi
		or     %si,%bx
		or     %edx,%ebx
		je     jump_402ed
		shr    %esi
	jump_402ed:
		ret
	jump_402ee:
		rcr    %si
	jump_402f1:
		or     %ecx,%ecx
		jne    jump_40302
		or     %ebx,%ebx
		jne    jump_40302
		test   $0x7fff0000,%esi
		jne    jump_40302
		ret
	jump_40302:
		push   %ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		mov    %ecx,%ebp
		rol    $0x10,%edi
		rol    $0x10,%ecx
		add    %di,%cx
		rol    $0x10,%edi
		rol    $0x10,%ecx
		sub    %di,%cx
		je     jump_40351
		jae    jump_4033d
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %edx,%esi
	jump_4033d:
		cmp    $0x40,%cx
		jbe    jump_40351
		add    %ebp,%ebp
		rcr    %bp
		mov    %ebx,%eax
		mov    %esi,%edx
		mov    %ebp,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_40351:
		mov    $0x0,%ch
		or     %ecx,%ecx
		jns    jump_40366
		mov    $0xff,%ch
		neg    %esi
		neg    %ebx
		sbb    $0x0,%esi
		xor    $0x80000000,%ebp
	jump_40366:
		sub    %edi,%edi
		cmp    $0x0,%cl
		je     jump_40399
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x20,%cl
		jb     jump_4038b
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		cmp    $0x40,%cl
		jne    jump_40387
		or     %edx,%edi
		sub    %edx,%edx
	jump_40387:
		mov    %edx,%eax
		sub    %edx,%edx
	jump_4038b:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx
	jump_40399:
		add    %ebx,%eax
		adc    %esi,%edx
		adc    $0x0,%ch
		jns    jump_403ca
		cmp    $0x40,%cl
		jne    jump_403bb
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x0,%eax
		adc    $0x0,%edx
		adc    $0x0,%ch
	jump_403bb:
		neg    %edx
		neg    %eax
		sbb    $0x0,%edx
		mov    $0x0,%ch
		xor    $0x80000000,%ebp
	jump_403ca:
		mov    %eax,%ebx
		or     %ch,%bl
		or     %edx,%ebx
		je     jump_40421
		or     %bp,%bp
		je     jump_40423
		cmp    $0x0,%ch
		jne    jump_403ea
		rol    %edi
		ror    %edi
	jump_403e0:
		dec    %bp
		je     jump_40423
		adc    %eax,%eax
		adc    %edx,%edx
		jae    jump_403e0
	jump_403ea:
		inc    %bp
		cmp    $0x7fff,%bp
		je     jump_4042d
		stc
		rcr    %edx
		rcr    %eax
		jae    jump_4041f
		add    %edi,%edi
		jne    jump_40406
		ror    %eax
		rol    %eax
	jump_40406:
		adc    $0x0,%eax
		adc    $0x0,%edx
		jae    jump_4041f
		rcr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x7fff,%bp
		je     jump_4042d
	jump_4041f:
		jmp    jump_40423
	jump_40421:
		mov    %ebx,%ebp
	jump_40423:
		add    %ebp,%ebp
		rcr    %bp
		mov    %ebp,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_4042d:
		mov    $0x7fff,%bp
		sub    %eax,%eax
		mov    $0x80000000,%edx
		jmp    jump_40423


/*----------------------------------------------------------------*/
func_4043a:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		mov    0x8(%eax),%si
		or     $0x8000,%si
		inc    %si
		jne    jump_40452
		mov    0x4(%eax),%esi
		add    %esi,%esi
		or     (%eax),%esi
		jne    jump_404a5
	jump_40452:
		mov    0x8(%edx),%si
		or     $0x8000,%si
		inc    %si
		jne    jump_40468
		mov    0x4(%edx),%esi
		add    %esi,%esi
		or     (%edx),%esi
		jne    jump_404a5
	jump_40468:
		mov    0x6(%eax),%esi
		mov    0x6(%edx),%edi
		xor    %esi,%edi
		mov    $0x0,%edi
		js     jump_404ad
		mov    0x8(%eax),%si
		cmp    0x8(%edx),%si
		jne    jump_4048d
		mov    0x4(%eax),%edi
		cmp    0x4(%edx),%edi
		jne    jump_4048d
		mov    (%eax),%edi
		cmp    (%edx),%edi
	jump_4048d:
		mov    $0x0,%edi
		je     jump_404a0
		rcr    %eax
		xor    %eax,%esi
	jump_40498:
		add    %esi,%esi
		sbb    $0x0,%edi
		add    %edi,%edi
		inc    %edi
	jump_404a0:
		mov    %edi,%eax
		pop    %esi
		pop    %edi
		ret
	jump_404a5:
		mov    $0x2,%eax
		pop    %esi
		pop    %edi
		ret
	jump_404ad:
		or     (%eax),%edi
		or     (%edx),%edi
		or     0x4(%eax),%edi
		or     0x4(%edx),%edi
		mov    0x8(%eax),%ax
		shl    $0x10,%eax
		mov    0x8(%edx),%ax
		and    $0x7fff7fff,%eax
		or     %edi,%eax
		mov    $0x0,%edi
		jne    jump_40498
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_404d3:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_404fd
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_404fd:
/*----------------------------------------------------------------*/
		or     %ecx,%ecx
		jne    jump_40548
		or     %ebx,%ebx
		jne    jump_40548
		test   $0x7fff0000,%esi
		jne    jump_40548
		or     %eax,%eax
		jne    jump_40532
		or     %edx,%edx
		jne    jump_40532
		mov    %esi,%eax
		add    %ax,%ax
		jne    jump_40532
		mov    $0x1,%al
		mov    $0x81,%ah
		call   func_3ed60
		mov    $0xc0000000,%edx
		sub    %eax,%eax
		mov    $0xffff,%si
		jmp    jump_40547
	jump_40532:
		mov    $0x4,%al
		mov    $0x83,%ah
		call   func_3ed60
		mov    $0x80000000,%edx
		sub    %eax,%eax
		or     $0x7fff,%si
	jump_40547:
		ret
	jump_40548:
		or     %eax,%eax
		jne    jump_40559
		or     %edx,%edx
		jne    jump_40559
		add    %si,%si
		jne    jump_40556
		ret
	jump_40556:
		rcr    %si
	jump_40559:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		rol    $0x10,%edi
		rol    $0x10,%ecx
		add    %cx,%di
		rol    $0x10,%edi
		rol    $0x10,%ecx
		or     %di,%di
		jne    jump_40594
	jump_4058a:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		or     %edx,%edx
		jns    jump_4058a
	jump_40594:
		or     %cx,%cx
		jne    jump_405a3
	jump_40599:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		or     %esi,%esi
		jns    jump_40599
	jump_405a3:
		sub    %cx,%di
		add    $0x3fff,%di
		js     jump_405c6
		cmp    $0x7fff,%di
		jb     jump_405c6
		mov    %ecx,%edi
		mov    $0x7fff,%di
		mov    $0x80000000,%edx
		sub    %eax,%eax
		jmp    jump_4069e
	jump_405c6:
		cmp    $0xffc0,%di
		jge    jump_405d7
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %edi,%edi
		jmp    jump_4069e
	jump_405d7:
		push   %edi
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edi,%ecx
		ja     jump_405e9
		sub    %ecx,%edx
		inc    %eax
	jump_405e9:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %ebx,%edx
		mul    %edx
		add    %ebx,%eax
		adc    $0x0,%edx
		mov    -0x10(%ebp),%ebx
		testb  $0x1,-0x14(%ebp)
		je     jump_4060a
		add    %ebx,%eax
		adc    -0xc(%ebp),%edx
	jump_4060a:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     jump_40624
	jump_40612:
		subl   $0x1,-0x18(%ebp)
		sbbl   $0x0,-0x14(%ebp)
		add    %ebx,%ecx
		adc    -0xc(%ebp),%esi
		adc    $0x0,%edi
		jne    jump_40612
	jump_40624:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0xc(%ebp),%ecx
		cmp    %edi,%ecx
		ja     jump_40639
		sub    %ecx,%edi
		addl   $0x1,-0x18(%ebp)
		adcl   $0x0,-0x14(%ebp)
	jump_40639:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     jump_40670
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %ebx,%edx
		mul    %edx
		add    %ebx,%eax
		adc    $0x0,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     jump_40670
	jump_40659:
		subl   $0x1,-0x1c(%ebp)
		sbbl   $0x0,-0x18(%ebp)
		sbbl   $0x0,-0x14(%ebp)
		add    -0x10(%ebp),%ecx
		adc    -0xc(%ebp),%esi
		adc    $0x0,%edi
		jne    jump_40659
	jump_40670:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x8,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    jump_40682
		rcr    %edx
		rcr    %eax
		inc    %edi
	jump_40682:
		or     %di,%di
		jg     jump_4069e
		jne    jump_4068d
		mov    $0x1,%cl
		jmp    jump_40693
	jump_4068d:
		neg    %di
		mov    %di,%cx
	jump_40693:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di
	jump_4069e:
		add    %edi,%edi
		rcr    %di
		mov    %edi,%esi
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_406a8:
/*----------------------------------------------------------------*/
		push   %esi
		push   %ecx
		push   %ebx
		mov    0x8(%edx),%si
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		shl    $0x10,%esi
		mov    0x8(%eax),%si
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_406d2
		pop    %ebx
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %si,0x8(%ebx)
		pop    %ecx
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_406d2:
/*----------------------------------------------------------------*/
		or     %eax,%eax
		jne    jump_406e3
		or     %edx,%edx
		jne    jump_406e3
		add    %si,%si
		jne    jump_406e0
		ret
	jump_406e0:
		rcr    %si
	jump_406e3:
		or     %ecx,%ecx
		jne    jump_406fa
		or     %ebx,%ebx
		jne    jump_406fa
		test   $0x7fff0000,%esi
		jne    jump_406fa
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %esi,%esi
		ret
	jump_406fa:
		push   %ebp
		push   %edi
		xchg   %ecx,%esi
		mov    %ecx,%edi
		rol    $0x10,%edi
		sar    $0x10,%edi
		sar    $0x10,%ecx
		and    $0x80007fff,%edi
		and    $0x80007fff,%ecx
		add    %edi,%ecx
		sub    $0x3ffe,%cx
		jb     jump_4072a
		cmp    $0x7fff,%cx
		jb     jump_4072a
		jmp    jump_407c1
	jump_4072a:
		cmp    $0xffc0,%cx
		jge    jump_4073b
		sub    %eax,%eax
		sub    %edx,%edx
		sub    %ecx,%ecx
		jmp    jump_407b7
	jump_4073b:
		push   %ecx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x0,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		mov    %ecx,%ebx
		pop    %ecx
		js     jump_40772
		add    %ebx,%ebx
		adc    %eax,%eax
		adc    %edx,%edx
		dec    %cx
	jump_40772:
		add    %ebx,%ebx
		jae    jump_4079e
		jne    jump_40785
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     jump_40785
		mov    %eax,%esi
		shr    %esi
	jump_40785:
		adc    $0x0,%eax
		adc    $0x0,%edx
		jae    jump_4079e
		rcr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x7fff,%cx
		je     jump_407c1
	jump_4079e:
		or     %cx,%cx
		jg     jump_407b7
		jne    jump_407a9
		mov    $0x1,%cl
		jmp    jump_407ac
	jump_407a9:
		neg    %cx
	jump_407ac:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx
	jump_407b7:
		add    %ecx,%ecx
		rcr    %cx
		mov    %ecx,%esi
		pop    %edi
		pop    %ebp
		ret
	jump_407c1:
		mov    $0x7fff,%cx
		mov    $0x80000000,%edx
		sub    %eax,%eax
		jmp    jump_407b7


/*----------------------------------------------------------------*/
func_40823:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x1f,%bl
		jmp    jump_4082b


/*----------------------------------------------------------------*/
func_40828:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    $0x20,%bl
	jump_4082b:
		mov    0x9(%eax),%bh
		shr    %bh
		or     %bl,%bh
		push   %ecx
		mov    0x8(%eax),%cx
		and    $0x7fff,%cx
		sub    $0x3ffe,%cx
		jl     jump_4088d
		cmp    $0x20,%cx
		jg     jump_40885
		and    $0x3f,%bl
		cmp    %bl,%cl
		jg     jump_40885
		mov    %bh,%ch
		mov    (%eax),%ebx
		mov    0x4(%eax),%eax
		add    %ebx,%ebx
		rcr    %ch
		cmp    $0x20,%cl
		jne    jump_40864
		add    %ch,%ch
		jmp    jump_40871
	jump_40864:
		sub    %ebx,%ebx
		shld   %cl,%eax,%ebx
		shl    %cl,%eax
		add    %ch,%ch
		add    %eax,%eax
		mov    %ebx,%eax
	jump_40871:
		mov    $0xff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x0,%eax
		add    %ch,%ch
		jae    jump_40882
		neg    %eax
	jump_40882:
		pop    %ecx
		pop    %ebx
		ret
	jump_40885:
		mov    $0x80000000,%eax
		pop    %ecx
		pop    %ebx
		ret
	jump_4088d:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_40892:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		or     %eax,%eax
		jns    jump_408a2
		neg    %eax
		mov    $0xbfff,%edx
		jmp    jump_408ab
	jump_408a2:
		pop    %ebx


/*----------------------------------------------------------------*/
func_408a3:
/*----------------------------------------------------------------*/
		push   %ebx
		mov    %edx,%ebx
		mov    $0x3fff,%edx
	jump_408ab:
		push   %ecx
		or     %eax,%eax
		je     jump_408c6
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x1f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		jmp    jump_408ca
	jump_408c6:
		sub    %edx,%edx
		sub    %ecx,%ecx
	jump_408ca:
		sub    %eax,%eax
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		mov    %cx,0x8(%ebx)
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_408d8:
/*----------------------------------------------------------------*/
		push   %ecx
		mov    %edx,%ecx
		shld   $0xb,%eax,%edx
		shl    $0xb,%eax
		sar    $0x14,%ecx
		and    $0x7ff,%cx
		je     jump_40923
		cmp    $0x7ff,%cx
		je     jump_408fa
		add    $0x3c00,%cx
		jmp    jump_4091b
	jump_408fa:
		mov    $0x7fff,%cx
		test   $0x7fffffff,%edx
		jne    jump_40908
		or     %eax,%eax
	jump_40908:
		je     jump_4091b
		push   %eax
		mov    $0x1,%al
		mov    $0x81,%ah
		call   func_3ed60
		pop    %eax
		or     $0x40000000,%edx
	jump_4091b:
		or     $0x80000000,%edx
		jmp    jump_40948
	jump_40923:
		or     %edx,%edx
		jne    jump_4092f
		or     %eax,%eax
		jne    jump_4092f
		sub    %ecx,%ecx
		jmp    jump_40948
	jump_4092f:
		mov    $0x3c01,%cx
		or     %edx,%edx
		jne    jump_4093c
		xchg   %eax,%edx
		sub    $0x20,%cx
	jump_4093c:
		or     %edx,%edx
		js     jump_40948
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    jump_4093c
	jump_40948:
		mov    %eax,(%ebx)
		mov    %edx,0x4(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x8(%ebx)
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_40958:
/*----------------------------------------------------------------*/
		push   %edx
		push   %ecx
		push   %ebx
		mov    %eax,%ebx
		mov    $0xffffff00,%edx
		mov    0x4(%ebx),%eax
		mov    %eax,%ecx
		shl    $0x19,%ecx
		mov    0x8(%ebx),%cx
		jae    jump_40987
		jne    jump_40979
		cmpl   $0x0,(%ebx)
		jne    jump_40979
		add    %edx,%edx
	jump_40979:
		add    $0x100,%eax
		jae    jump_40987
		mov    $0x80000000,%eax
		inc    %cx
	jump_40987:
		and    %edx,%eax
		mov    %ecx,%ebx
		and    $0x7fff,%cx
		je     jump_409d3
		cmp    $0x7fff,%cx
		jne    jump_409aa
		add    %eax,%eax
		shr    $0x8,%eax
		or     $0xff000000,%eax
		add    %bx,%bx
		rcr    %eax
		jmp    jump_409d3
	jump_409aa:
		add    $0xc080,%cx
		jns    jump_409b5
		sub    %eax,%eax
		jmp    jump_409d3
	jump_409b5:
		cmp    $0xff,%cx
		jl     jump_409c8
		mov    $0xff000000,%eax
		add    %bx,%bx
		rcr    %eax
		jmp    jump_409d3
	jump_409c8:
		add    %eax,%eax
		shrd   $0x8,%ecx,%eax
		add    %bx,%bx
		rcr    %eax
	jump_409d3:
		pop    %ebx
		pop    %ecx
		pop    %edx
		ret


/*----------------------------------------------------------------*/
func_409d7:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x8(%eax),%cx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x16,%ebx
		jae    jump_40a04
		jne    jump_409f3
		add    %esi,%esi
	jump_409f3:
		add    $0x800,%eax
		adc    $0x0,%edx
		jae    jump_40a04
		mov    $0x80000000,%edx
		inc    %cx
	jump_40a04:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x7fff,%cx
		add    $0xc400,%cx
		cmp    $0x7ff,%cx
		jae    jump_40a3a
		or     %cx,%cx
		jne    jump_40a29
		shrd   $0xc,%edx,%eax
		add    %edx,%edx
		shr    $0xc,%edx
		jmp    jump_40a33
	jump_40a29:
		shrd   $0xb,%edx,%eax
		add    %edx,%edx
		shrd   $0xb,%ecx,%edx
	jump_40a33:
		add    %bx,%bx
		rcr    %edx
		jmp    jump_40a9a
	jump_40a3a:
		cmp    $0xc400,%cx
		jb     jump_40a74
		cmp    $0xffcc,%cx
		jl     jump_40a6e
		sub    $0xc,%cx
		neg    %cx
		cmp    $0x20,%cl
		jb     jump_40a5c
		sub    $0x20,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx
	jump_40a5c:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x0,%eax
		adc    $0x0,%edx
		jmp    jump_40a72
	jump_40a6e:
		sub    %eax,%eax
		sub    %edx,%edx
	jump_40a72:
		jmp    jump_40a9a
	jump_40a74:
		shrd   $0xb,%edx,%eax
		add    %edx,%edx
		shr    $0xb,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x43ff,%cx
		je     jump_40a9a
		push   %eax
		mov    $0x8,%al
		mov    $0x84,%ah
		call   func_3ed60
		pop    %eax
	jump_40a9a:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
func_40a9e:
/*----------------------------------------------------------------*/
		push   %ecx
		push   %ebx
		mov    %edx,%ebx
		sub    %edx,%edx
		mov    %eax,%ecx
		sar    $0x17,%ecx
		and    $0xff,%cx
		je     jump_40ad7
		shl    $0x8,%eax
		cmp    $0xff,%cl
		je     jump_40abf
		add    $0x3f80,%cx
		jmp    jump_40acd
	jump_40abf:
		mov    $0xff,%ch
		and    $0x7fffffff,%eax
		je     jump_40acd
		or     $0x40000000,%eax
	jump_40acd:
		add    %ecx,%ecx
		rcr    %cx
		or     $0x80000000,%eax
	jump_40ad7:
		mov    %edx,(%ebx)
		mov    %eax,0x4(%ebx)
		mov    %cx,0x8(%ebx)
		pop    %ebx
		pop    %ecx
		ret
.data
data_40ae3:
		.ascii  "\xff\xff\xff\x7f\xff\xff\xff\x3f"
		.ascii  "\xff\xff\xff\x1f\xff\xff\xff\x0f"
		.ascii  "\xff\xff\xff\x07\xff\xff\xff\x03"
		.ascii  "\xff\xff\xff\x01\xff\xff\xff\x00"
		.ascii  "\xff\xff\x7f\x00\xff\xff\x3f\x00"
		.ascii  "\xff\xff\x1f\x00\xff\xff\x0f\x00"
		.ascii  "\xff\xff\x07\x00\xff\xff\x03\x00"
		.ascii  "\xff\xff\x01\x00\xff\xff\x00\x00"
		.ascii  "\xff\x7f\x00\x00\xff\x3f\x00\x00"
		.ascii  "\xff\x1f\x00\x00\xff\x0f\x00\x00"
		.ascii  "\xff\x07\x00\x00\xff\x03\x00\x00"
		.ascii  "\xff\x01\x00\x00\xff\x00\x00\x00"
		.ascii  "\x7f\x00\x00\x00\x3f\x00\x00\x00"
		.ascii  "\x1f\x00\x00\x00\x0f\x00\x00\x00"
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x01"
		.fill   0x7
.text


/*----------------------------------------------------------------*/
func_40b63:
/*----------------------------------------------------------------*/
		push   %edi
		mov    %eax,%edi
		sub    %ebx,%ebx
		mov    0x8(%edi),%bx
		cmp    $0x400,%dx
		je     jump_40b78
		cmp    $0x800,%dx
	jump_40b78:
		jne    jump_40b83
		or     %bh,%bh
		jns    jump_40b83
		xor    $0xc00,%dx
	jump_40b83:
		cmp    $0xc00,%dx
		jne    jump_40b8e
		mov    $0x400,%dx
	jump_40b8e:
		and    $0x7fff,%bx
		sub    $0x403f,%bx
		jl     jump_40b9c
		pop    %edi
		ret
	jump_40b9c:
		mov    (%edi),%ecx
		add    $0x20,%bx
		jl     jump_40bf2
		mov    data_40ae3(,%ebx,4),%eax
		and    %eax,%ecx
		xor    %ecx,(%edi)
		inc    %eax
		cmp    $0x400,%dx
		je     jump_40bf0
		cmp    $0x0,%dx
		jne    jump_40bdd
		add    %ecx,%ecx
		cmp    %ecx,%eax
		ja     jump_40bf0
		jne    jump_40bdd
		rol    %eax
		jae    jump_40bd3
		test   %eax,0x4(%edi)
		jmp    jump_40bd5
	jump_40bd3:
		test   %eax,(%edi)
	jump_40bd5:
		je     jump_40bf0
		ror    %eax
	jump_40bdd:
		or     %ecx,%ecx
		je     jump_40bf0
		add    %eax,(%edi)
		adcl   $0x0,0x4(%edi)
		jae    jump_40bf0
		rcrl   0x4(%edi)
		incw   0x8(%edi)
	jump_40bf0:
		pop    %edi
		ret
	jump_40bf2:
		push   %esi
		movl   $0x0,(%edi)
		mov    0x4(%edi),%esi
		add    $0x20,%bx
		jl     jump_40c55
		mov    data_40ae3(,%ebx,4),%eax
		and    %eax,%esi
		xor    %esi,0x4(%edi)
		inc    %eax
		cmp    $0x400,%dx
		je     jump_40c52
		cmp    $0x0,%dx
		jne    jump_40c42
		rol    %ecx
		adc    %esi,%esi
		cmp    %esi,%eax
		ja     jump_40c52
		jne    jump_40c42
		or     %ecx,%ecx
		jne    jump_40c46
		add    %eax,%eax
		jb     jump_40c3a
		test   %eax,0x4(%edi)
	jump_40c3a:
		je     jump_40c52
		shr    %eax
	jump_40c42:
		or     %esi,%ecx
		je     jump_40c52
	jump_40c46:
		add    %eax,0x4(%edi)
		jae    jump_40c52
		rcrl   0x4(%edi)
		incw   0x8(%edi)
	jump_40c52:
		pop    %esi
		pop    %edi
		ret
	jump_40c55:
		cmp    $0x400,%dx
		je     jump_40c8a
		cmp    $0x0,%dx
		jne    jump_40c7a
		inc    %bx
		jne    jump_40c8a
		cmp    $0x80000000,%esi
		jne    jump_40c7a
		or     %ecx,%ecx
		je     jump_40c8a
	jump_40c7a:
		movl   $0x80000000,0x4(%edi)
		orw    $0x3fff,0x8(%edi)
		pop    %esi
		pop    %edi
		ret
	jump_40c8a:
		sub    %eax,%eax
		mov    %eax,0x4(%edi)
		mov    %ax,0x8(%edi)
		pop    %esi
		pop    %edi
		ret
.data
data_40c96:
		.ascii  "\x4e\x18\xe6\xc0\xe4\xc7\xd1\xb5"
		.ascii  "\xfa\x3f\x29\x0b\x01\x08\x08\x9b"
		.ascii  "\xc6\x84\xfb\xbf\x1a\x26\xc5\x6c"
		.ascii  "\x2e\x02\x46\x9d\xfb\x3f\x2a\x98"
		.ascii  "\x6b\x0a\x9d\xb9\x2b\xba\xfb\xbf"
		.ascii  "\x71\x01\x2b\x95\x27\x27\x8e\xe3"
		.ascii  "\xfb\x3f\xfc\x68\x9c\xdd\x72\x24"
		.ascii  "\x49\x92\xfc\xbf\xc1\xad\xeb\x94"
		.ascii  "\xcc\xcc\xcc\xcc\xfc\x3f\xf2\x81"
		.ascii  "\x97\xaa\xaa\xaa\xaa\xaa\xfd\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
.text


/*----------------------------------------------------------------*/
func_40cf0:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		mov    %eax,%edi
		mov    0x8(%edi),%cx
		shl    %cx
		jne    jump_40d2e
		testb  $0x80,0x9(%edx)
		je     jump_40d19
		movw   $0x4000,0x8(%ebx)
		movl   $0xc90fdaa2,0x4(%ebx)
		movl   $0x2168c235,(%ebx)
		jmp    jump_40d2c
	jump_40d19:
		movw   $0x0,0x8(%ebx)
		movl   $0x0,0x4(%ebx)
		movl   $0x0,(%ebx)
	jump_40d2c:
		jmp    jump_40da2
	jump_40d2e:
		mov    0x8(%edx),%cx
		shl    %cx
		jne    jump_40d56
		mov    0x8(%edi),%ax
		and    $0x8000,%ax
		or     $0x3fff,%ax
		mov    %ax,0x8(%ebx)
		movl   $0xc90fdaa2,0x4(%ebx)
		movl   $0x2168c235,(%ebx)
		jmp    jump_40da2
	jump_40d56:
		mov    0x9(%edi),%ch
		call   func_404d3
		mov    %ebx,%eax
		call   func_40da6
		mov    0x9(%ebx),%dl
		or     %ch,%ch
		js     jump_40d88
		or     %dl,%dl
		jns    jump_40d86
		mov    %ebx,%eax
		push   $0x4000
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_4029e
	jump_40d86:
		jmp    jump_40da2
	jump_40d88:
		or     %dl,%dl
		jle    jump_40da2
		mov    %ebx,%eax
		push   $0xc000
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_4029e
	jump_40da2:
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_40da6:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		mov    %eax,%edi
		mov    $0x0,%ch
		mov    0x9(%edi),%cl
		andb   $0x7f,0x9(%edi)
		cmpw   $0x3fff,0x8(%edi)
		jne    jump_40de8
		cmpl   $0x80000000,0x4(%edi)
		jne    jump_40de8
		cmpl   $0x0,(%edi)
		jne    jump_40de8
		movl   $0x2168c235,(%edi)
		movl   $0xc90fdaa2,0x4(%edi)
		mov    $0x3ffe,%ax
		and    $0x80,%cl
		or     %cl,%ah
		mov    %ax,0x8(%edi)
		pop    %ecx
		pop    %esi
		pop    %edi
		ret
	jump_40de8:
		push   %edx
		push   %ebx
		cmpw   $0x3fff,0x8(%edi)
		jl     jump_40e1e
		push   %ecx
		mov    0x8(%edi),%si
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%esi
		mov    $0x3fff,%si
		mov    $0x80000000,%edx
		mov    $0x0,%eax
		call   func_404fd
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		mov    $0x2,%ch
	jump_40e1e:
		mov    0x8(%edi),%ax
		cmp    $0x3ffd,%ax
		jne    jump_40e39
		mov    0x4(%edi),%eax
		cmp    $0x8930a2f4,%eax
		jne    jump_40e39
		mov    (%edi),%eax
		cmp    $0xf66ab09b,%eax
	jump_40e39:
		jbe    jump_40eac
		push   %ecx
		mov    $0xc265539e,%ebx
		mov    $0xddb3d742,%ecx
		mov    $0x3fff0000,%esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		call   func_402ce
		push   %eax
		push   %edx
		push   %esi
		mov    $0xc265539e,%ebx
		mov    $0xddb3d742,%ecx
		mov    $0x3fff0000,%esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		call   func_406d2
		sub    %ebx,%ebx
		mov    $0x80000000,%ecx
		rol    $0x10,%esi
		mov    $0xbfff,%si
		rol    $0x10,%esi
		call   func_402ce
		pop    %ebx
		shl    $0x10,%ebx
		mov    %si,%bx
		mov    %ebx,%esi
		pop    %ecx
		pop    %ebx
		call   func_404fd
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		or     $0x1,%ch
	jump_40eac:
		mov    %edi,%eax
		lea    data_40c96,%edx
		mov    $0x8,%ebx
		call   func_41922
		shr    %ch
		jae    jump_40eda
		mov    %edi,%eax
		push   $0x3ffe
		push   $0x860a91c1
		push   $0x6b9b2c23
		mov    %edi,%ebx
		call   func_4029e
	jump_40eda:
		shr    %ch
		jae    jump_40efa
		push   $0xbfff
		push   $0xc90fdaa2
		push   $0x2168c235
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_4029e
		xorb   $0x80,0x9(%ebx)
	jump_40efa:
		cmp    $0x0,%cl
		jns    jump_40f03
		xorb   $0x80,0x9(%edi)
	jump_40f03:
		pop    %ebx
		pop    %edx
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_40f09:
/*----------------------------------------------------------------*/
		cmpw   $0x0,0x8(%eax)
		jne    jump_40f1e
		cmpl   $0x0,0x4(%eax)
		jne    jump_40f1e
		cmpl   $0x0,(%eax)
		jne    jump_40f1e
		sub    %eax,%eax
		ret
	jump_40f1e:
		cmpw   $0x0,0x8(%edx)
		jne    jump_40f3e
		cmpl   $0x0,0x4(%edx)
		jne    jump_40f3e
		cmpl   $0x0,(%edx)
		jne    jump_40f3e
		sub    %edx,%edx
		mov    %edx,(%eax)
		mov    %edx,0x4(%eax)
		mov    %dx,0x8(%eax)
		sub    %eax,%eax
		ret
	jump_40f3e:
		push   %ebp
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x8(%eax),%si
		mov    0x8(%edx),%di
		mov    0x4(%edx),%ecx
		mov    (%edx),%ebx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_40f6f
		pop    %ecx
		mov    %eax,(%ecx)
		mov    %edx,0x4(%ecx)
		mov    %si,0x8(%ecx)
		mov    %edi,%eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_40f6f:
/*----------------------------------------------------------------*/
		push   %esi
		push   %edi
		and    $0x7fff,%esi
		and    $0x7fff,%edi
		sub    %edi,%esi
		jl     jump_40fce
		sub    %edi,%edi
	jump_40f83:
		cmp    %edx,%ecx
		jne    jump_40f8f
		cmp    %eax,%ebx
		je     jump_40f91
	jump_40f8f:
		jae    jump_40f96
	jump_40f91:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc
	jump_40f96:
		adc    %edi,%edi
		dec    %esi
		jl     jump_40fab
		add    %eax,%eax
		adc    %edx,%edx
		jb     jump_40f91
		or     %edx,%edx
		js     jump_40f83
		jmp    jump_40f96
	jump_40fab:
		sub    %esi,%esi
		or     %eax,%eax
		jne    jump_40fb7
		or     %edx,%edx
		jne    jump_40fb7
		jmp    jump_40fcc
	jump_40fb7:
		or     %edx,%edx
		js     jump_40fc2
		adc    %eax,%eax
		adc    %edx,%edx
		dec    %esi
		jmp    jump_40fb7
	jump_40fc2:
		pop    %ecx
		push   %ecx
		and    $0x7fff,%ecx
		add    %ecx,%esi
	jump_40fcc:
		jmp    jump_40fd2
	jump_40fce:
		add    %edi,%esi
		sub    %edi,%edi
	jump_40fd2:
		pop    %ecx
		pop    %ebx
		and    $0x8000,%ebx
		or     %ebx,%esi
		or     %edx,%edx
		jne    jump_40fe2
		sub    %esi,%esi
	jump_40fe2:
		xor    %cx,%bx
		jns    jump_40fe9
		neg    %edi
	jump_40fe9:
		ret


/*----------------------------------------------------------------*/
func_40fea:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    data_3e7a6(%edi),%ax
		mov    %eax,%edx
		and    %ds:0x8(%ebp),%ax
		cmp    %dx,%ax
		jne    jump_41008
		mov    $0x41,%al
		mov    $0x0,%dh
		jmp    jump_4107b
	jump_41008:
		not    %edx
		and    %dx,%ds:0x8(%ebp)
		mov    0x8(%ebx),%ax
		mov    %eax,%edx
		and    $0x80,%dh
		rol    %dh
		shl    %dh
		and    $0x7fff,%ax
		jne    jump_4103c
		mov    0x4(%ebx),%eax
		or     (%ebx),%eax
		mov    $0x44,%al
		jne    jump_4103a
		mov    data_3e7a0(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		mov    $0x40,%al
	jump_4103a:
		jmp    jump_4107b
	jump_4103c:
		cmp    $0x7fff,%ax
		jne    jump_41064
		mov    data_3e7a4(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		cmpl   $0x0,(%ebx)
		jne    jump_4105c
		mov    0x4(%ebx),%eax
		cmp    $0x80000000,%eax
	jump_4105c:
		mov    $0x1,%al
		jne    jump_41062
		mov    $0x5,%al
	jump_41062:
		jmp    jump_4107b
	jump_41064:
		testb  $0x80,0x7(%ebx)
		mov    $0x4,%al
		jne    jump_4107b
		mov    data_3e7a4(%edi),%ax
		or     %ax,%ds:0x8(%ebp)
		mov    $0x44,%al
	jump_4107b:
		or     %dh,%al
		mov    %ds:0x4(%ebp),%dx
		and    $0xb8ff,%dx
		or     %al,%dh
		mov    %dx,%ds:0x4(%ebp)
		pop    %edx
		pop    %ebx
		ret
.data
data_41092:
		.ascii  "\xe9\x46\xe9\xb5\x9a\xad\x20\xca"
		.ascii  "\xfe\xbf\x09\x65\x7f\xb5\x00\x51"
		.ascii  "\x12\x83\x03\x40\x28\xd2\xac\x9d"
		.ascii  "\x95\xf8\x3f\x80\x05\xc0"
data_410b0:
		.fill   0x7
		.ascii  "\x80\xff\x3f\xbb"
		.ascii   "vp>["
		.ascii  "\x02\xac\x8e\x04\xc0\x60\xef\x33"
		.ascii  "\xa9\xd0\x1f\x04\x9c\x07\x40\x96"
		.ascii  "\xbb\x83\x6c\xe0\xf4\x5f\xc0\x08"
		.ascii  "\xc0"
.text


/*----------------------------------------------------------------*/
func_410d8:
/*----------------------------------------------------------------*/
		push   %ebx
		push   %edx
		push   %eax
		push   $0x3fff
		push   $0x80000000
		push   $0x0
		mov    %eax,%ebx
		call   func_4029e
		pop    %eax
		pop    %edx
		pop    %ebx


/*----------------------------------------------------------------*/
func_410f1:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		call   func_41134
		pop    %eax
		mov    %edx,%ebx
		push   %edx
		call   func_406a8
		pop    %edi
		mov    0x8(%edi),%si
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%esi
		mov    $0x3fff,%si
		mov    $0xb8aa3b29,%edx
		mov    $0x5c17f0bd,%eax
		call   func_406d2
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_41134:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		sub    %ecx,%ecx
		mov    0x8(%eax),%cx
		or     %cx,%cx
		js     jump_41146
		jmp    jump_41146
	jump_41146:
		mov    %eax,%edi
		mov    $0x3ffe,%edx
		sub    $0x3ffe,%ecx
		push   %ecx
		mov    %dx,0x8(%edi)
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    $0xbffe3ffe,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_402ce
		cmpw   $0x3ffe,0x8(%edi)
		jne    jump_41185
		cmpl   $0xb504f333,0x4(%edi)
		jne    jump_41185
		cmpl   $0xf9de6484,(%edi)
	jump_41185:
		jbe    jump_411a1
		and    $0xffff,%esi
		or     $0xbffe0000,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_402ce
		jmp    jump_411ad
	jump_411a1:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		decl   (%esp)
	jump_411ad:
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		dec    %si
		and    $0xffff,%esi
		or     $0x3ffe0000,%esi
		mov    $0x80000000,%ecx
		sub    %ebx,%ebx
		call   func_402ce
		shl    $0x10,%esi
		mov    %edx,%ecx
		mov    %eax,%ebx
		pop    %eax
		mov    %ax,%si
		pop    %edx
		pop    %eax
		call   func_404fd
		push   %eax
		push   %edx
		push   %esi
		mov    %esi,%ecx
		shl    $0x10,%esi
		mov    %cx,%si
		mov    %edx,%ecx
		mov    %eax,%ebx
		call   func_406d2
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		mov    $0x3,%ebx
		lea    data_410b0,%ecx
		call   func_418d0
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		lea    data_41092,%ecx
		mov    $0x2,%ebx
		call   func_418d0
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_404fd
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_406d2
		rol    $0x10,%esi
		mov    (%esp),%si
		rol    $0x10,%esi
		mov    0x4(%esp),%ecx
		mov    0x8(%esp),%ebx
		call   func_406d2
		rol    $0x10,%esi
		pop    %ecx
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_402ce
		pop    %ecx
		or     %ecx,%ecx
		je     jump_412f6
		push   %eax
		push   %edx
		push   %esi
		mov    %edi,%edx
		mov    %ecx,%eax
		call   func_40892
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		and    $0xffff,%esi
		or     $0xbff20000,%esi
		mov    $0xde8082e3,%ecx
		mov    $0x865435c,%ebx
		call   func_406d2
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_402ce
		push   %eax
		push   %edx
		push   %esi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		and    $0xffff,%esi
		or     $0x3ffe0000,%esi
		mov    $0xb1800000,%ecx
		sub    %ebx,%ebx
		call   func_406d2
		pop    %ecx
		rol    $0x10,%esi
		mov    %cx,%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ebx
		call   func_402ce
	jump_412f6:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret
.data
data_41306:
		.ascii  "\x59\x53\x6a\x85\x81\x3b\x96\xca"
		.ascii  "\xce\x3f\x8f\xf8\xc0\x9d\x39\x9f"
		.ascii  "\x3f\xd7\xd6\xbf\xe5\x4b\x68\x43"
		.ascii  "\x9d\x30\x92\xb0\xde\x3f\x7f\x1c"
		.ascii  "\x27\xaa\x3f\x2b\x32\xd7\xe5\xbf"
		.ascii  "\x7d\x9c\x39\xb6\x2a\x1d\xef\xb8"
		.ascii  "\xec\x3f\x0c\xd0\x00\x0d\xd0\x00"
		.ascii  "\x0d\xd0\xf2\xbf\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\xf8\x3f\xaa\xaa"
		.ascii  "\xaa\xaa\xaa\xaa\xaa\xaa\xfc\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
data_41360:
		.ascii  "\x8f\xf8\xc0\x9d\x39\x9f\x3f\xd7"
		.ascii  "\xd2\x3f\x05\xe9\xe4\x03\x46\xa5"
		.ascii  "\xcb\xc9\xda\xbf\xaa\xbd\xc4\xc6"
		.ascii  "\x7f\xc7\x76\x8f\xe2\x3f\x97\xe3"
		.ascii  "\xfa\xc4\xbb\x7d\xf2\x93\xe9\xbf"
		.ascii  "\x0d\xd0\x00\x0d\xd0\x00\x0d\xd0"
		.ascii  "\xef\x3f\x0b\xb6\x60\x0b\xb6\x60"
		.ascii  "\x0b\xb6\xf5\xbf\xaa\xaa\xaa\xaa"
		.ascii  "\xaa\xaa\xaa\xaa\xfa\x3f"
		.fill   0x7
		.ascii  "\x80\xfe\xbf"
		.fill   0x7
		.ascii  "\x80\xff\x3f"
data_413ba:
		.ascii  "\x00\x00\x01\x00\x02\x00\x03\x00"
		.ascii  "\x04\x00\x04\x00\x05\x00\x05\x00"
		.ascii  "\x06\x00"
.text


/*----------------------------------------------------------------*/
func_413cc:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %edx
		push   %ecx
		push   %ebx
		mov    %esp,%ebp
		sub    $0xc,%esp
		mov    %eax,%edi
		sub    %ecx,%ecx
		mov    0x8(%eax),%cx
		and    $0x7fff,%cx
		sub    $0x3ffe,%cx
		cmp    $0x20,%cx
		jl     jump_413ee
	jump_413ee:
		push   %ecx
		push   %esi
		push   %edi
		mov    0x8(%eax),%si
		mov    $0x3ffe,%di
		mov    $0xc90fdaa2,%ecx
		mov    $0x2168c235,%ebx
		mov    0x4(%eax),%edx
		mov    (%eax),%eax
		call   func_40f6f
		pop    %ecx
		mov    %eax,(%ecx)
		mov    %edx,0x4(%ecx)
		mov    %si,0x8(%ecx)
		mov    %edi,%eax
		mov    %ecx,%edi
		pop    %esi
		testb  $0x80,0x9(%edi)
		je     jump_4143d
		push   %eax
		mov    %edi,%ebx
		mov    %edi,%eax
		push   $0x3ffe
		push   $0xc90fdaa2
		push   $0x2168c235
		call   func_4029e
		pop    %eax
		dec    %eax
	jump_4143d:
		mov    %esi,%ebx
		mov    %bl,%ah
		and    $0x2,%bl
		add    %bl,%al
		and    $0x7,%al
		push   %eax
		test   $0x1,%al
		je     jump_41469
		push   $0xbffe
		push   $0xc90fdaa2
		push   $0x2168c235
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_4029e
		xorb   $0x80,0x9(%ebx)
	jump_41469:
		sub    %ecx,%ecx
		mov    0x8(%edi),%cx
		sub    $0x3ffe,%cx
		cmp    $0xffe0,%cx
		jge    jump_41493
		movl   $0x0,-0xc(%ebp)
		movl   $0x80000000,-0x8(%ebp)
		movw   $0x3fff,-0x4(%ebp)
		jmp    jump_4152a
	jump_41493:
		or     %cx,%cx
		js     jump_4149c
		mov    $0x0,%cx
	jump_4149c:
		neg    %cx
		cmp    $0x8,%cx
		jle    jump_414a9
		mov    $0x8,%cx
	jump_414a9:
		mov    data_413ba(,%ecx,2),%cx
		push   %ecx
		mov    -0x14(%ebp),%eax
		inc    %al
		and    $0x2,%al
		jne    jump_414c3
		cmp    $0x1,%ah
		je     jump_414c3
		jmp    jump_41501
	jump_414c3:
		push   %eax
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_406d2
		mov    -0x18(%ebp),%ecx
		mov    $0x8,%ebx
		sub    %ecx,%ebx
		lea    (%ecx,%ecx,4),%ecx
		lea    data_41360(,%ecx,2),%ecx
		call   func_418d0
		mov    %eax,-0xc(%ebp)
		mov    %edx,-0x8(%ebp)
		mov    %si,-0x4(%ebp)
		pop    %eax
	jump_41501:
		cmp    $0x0,%al
		je     jump_4150c
		cmp    $0x1,%ah
		je     jump_4150c
		jmp    jump_4152a
	jump_4150c:
		mov    %edi,%eax
		mov    -0x18(%ebp),%ecx
		mov    $0x8,%ebx
		sub    %ecx,%ebx
		lea    (%ecx,%ecx,4),%ecx
		add    %ecx,%ecx
		lea    data_41306,%edx
		add    %ecx,%edx
		call   func_41922
	jump_4152a:
		mov    -0x14(%ebp),%eax
		inc    %al
		and    $0x2,%al
		je     jump_4153f
		mov    -0xc(%ebp),%eax
		mov    -0x8(%ebp),%edx
		mov    -0x4(%ebp),%si
		jmp    jump_41548
	jump_4153f:
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
	jump_41548:
		mov    -0x14(%ebp),%ecx
		test   $0x4,%cl
		je     jump_41555
		xor    $0x8000,%si
	jump_41555:
		cmp    $0x1,%ch
		jne    jump_415b2
		rol    $0x10,%esi
		add    $0x2,%cl
		mov    %cl,%bl
		inc    %bl
		and    $0x2,%bl
		je     jump_41578
		and    $0x4,%cl
		mov    -0xc(%ebp),%ebx
		mov    -0x8(%ebp),%ecx
		mov    -0x4(%ebp),%si
		jmp    jump_41584
	jump_41578:
		and    $0x4,%cl
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		mov    0x8(%edi),%si
	jump_41584:
		je     jump_4158c
		xor    $0x8000,%esi
	jump_4158c:
		rol    $0x10,%esi
		or     %ebx,%ebx
		jne    jump_415ad
		or     %ecx,%ecx
		jne    jump_415ad
		test   $0x7fff0000,%esi
		jne    jump_415ad
		sub    %eax,%eax
		mov    $0x80000000,%edx
		or     $0x7fff,%si
		jmp    jump_415b2
	jump_415ad:
		call   func_404fd
	jump_415b2:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		mov    %ebp,%esp
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_415c3:
/*----------------------------------------------------------------*/
		push   %esi
		sub    %esi,%esi
		call   func_413cc
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_415cd:
/*----------------------------------------------------------------*/
		push   %esi
		mov    $0x2,%esi
		call   func_413cc
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_415da:
/*----------------------------------------------------------------*/
		push   %esi
		mov    $0x1,%esi
		call   func_413cc
		pop    %esi
		ret


/*----------------------------------------------------------------*/
func_415e8:
/*----------------------------------------------------------------*/
		adc    $0x67cc487b,%eax
		ret


/*----------------------------------------------------------------*/
func_41610:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    %eax,%edi
		sub    %esi,%esi
		mov    0x8(%edi),%cx
		andb   $0x7f,0x9(%edi)
		cmpw   $0x0,0x8(%edi)
		jne    jump_41632
		cmpl   $0x0,0x4(%edi)
		jne    jump_41632
		cmpl   $0x0,(%edi)
	jump_41632:
		je     jump_4169a
		or     %cx,%cx
		jns    jump_41653
		dec    %esi
		push   $0xbfff
		push   $0x80000000
		push   $0x0
		mov    %edi,%eax
		mov    %edi,%ebx
		call   func_4029e
		xorb   $0x80,0x9(%ebx)
	jump_41653:
		mov    0x8(%edi),%bx
		add    $0x4,%bx
		sub    %ecx,%ecx
		mov    0x4(%edi),%edx
		mov    (%edi),%eax
	jump_41662:
		cmp    $0x3fff,%bx
		jb     jump_41673
		add    %eax,%eax
		adc    %edx,%edx
		adc    %ecx,%ecx
		dec    %bx
		jmp    jump_41662
	jump_41673:
		or     %edx,%edx
		jne    jump_41679
		or     %eax,%eax
	jump_41679:
		jne    jump_4167f
		sub    %ebx,%ebx
		jmp    jump_4168f
	jump_4167f:
		or     %edx,%edx
		js     jump_4168b
		add    %eax,%eax
		adc    %edx,%edx
		dec    %bx
		jmp    jump_4167f
	jump_4168b:
		sub    $0x4,%bx
	jump_4168f:
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %bx,0x8(%edi)
		jmp    jump_4169c
	jump_4169a:
		sub    %ecx,%ecx
	jump_4169c:
		push   %esi
		push   %ecx
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_406d2
		push   %eax
		push   %edx
		push   %esi
		mov    $0xa6829a79,%ecx
		mov    $0x1bf21f8c,%ebx
		and    $0xffff,%esi
		or     $0x40030000,%esi
		call   func_402ce
		mov    %esp,%ebp
		xchg   %eax,0x8(%ebp)
		xchg   %edx,0x4(%ebp)
		xchg   %esi,0x0(%ebp)
		mov    $0xec96f0d6,%ecx
		mov    $0x9d7bfdb,%ebx
		and    $0xffff,%esi
		or     $0x3ffa0000,%esi
		call   func_406d2
		mov    $0xe6d5051a,%ecx
		mov    $0xe536e187,%ebx
		and    $0xffff,%esi
		or     $0x40010000,%esi
		call   func_402ce
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_406d2
		push   %eax
		push   %edx
		push   %esi
		xor    $0x8000,%esi
		rol    $0x10,%esi
		mov    0x0(%ebp),%si
		rol    $0x10,%esi
		mov    0x8(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_402ce
		xchg   %eax,-0x4(%ebp)
		xchg   %edx,-0x8(%ebp)
		xchg   %esi,-0xc(%ebp)
		rol    $0x10,%esi
		mov    0x0(%ebp),%si
		rol    $0x10,%esi
		mov    0x8(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_402ce
		rol    $0x10,%esi
		mov    -0xc(%ebp),%si
		rol    $0x10,%esi
		pop    %ecx
		pop    %ecx
		pop    %ebx
		call   func_404fd
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		add    $0xc,%esp
		pop    %ecx
		lea    func_415e8,%esi
	jump_4178b:
		or     %ecx,%ecx
		je     jump_417c3
		shr    %ecx
		jae    jump_417be
		push   %ecx
		push   %esi
		mov    0x8(%edi),%ax
		mov    0x4(%edi),%ecx
		mov    (%edi),%ebx
		shl    $0x10,%eax
		mov    %cs:0x8(%esi),%ax
		mov    %cs:0x4(%esi),%edx
		mov    %cs:(%esi),%esi
		xchg   %eax,%esi
		call   func_406d2
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %esi
		pop    %ecx
	jump_417be:
		lea    0xa(%esi),%esi
		jmp    jump_4178b
	jump_417c3:
		pop    %esi
		add    %si,0x8(%edi)
		mov    %edi,%eax
		push   $0xbfff
		push   $0x80000000
		push   $0x0
		mov    %edi,%ebx
		call   func_4029e
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_417e4:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x8(%eax),%cx
		mov    0x4(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    jump_4182a
		or     %edx,%edx
		jne    jump_4181f
		add    %cx,%cx
		je     jump_418aa
	jump_41803:
		movw   $0xffff,0x8(%eax)
		movl   $0x0,0x4(%eax)
		movl   $0x0,(%eax)
	jump_41816:
		orb    $0xc0,0x7(%eax)
		jmp    jump_418aa
	jump_4181f:
		cmp    $0x7fff,%cx
		je     jump_418aa
	jump_4182a:
		mov    %ecx,%edx
		and    $0x7f,%dh
		cmp    $0x7fff,%dx
		je     jump_41816
		add    %cx,%cx
		jb     jump_41816
		shr    %cx
		je     jump_41847
		mov    0x4(%eax),%edx
		add    %edx,%edx
		jae    jump_41803
	jump_41847:
		mov    0x4(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x3fff,%cx
		sar    %cx
		jb     jump_4185d
		shr    %edx
		rcr    %ebx
		rcr    %edi
	jump_4185d:
		add    $0x3fff,%cx
		mov    %cx,0x8(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc
		rcr    %esi
		inc    %edx
		je     jump_41890
		dec    %edx
	jump_41873:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    jump_41885
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    jump_41873
	jump_41885:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    jump_41899
	jump_41890:
		cmp    %esi,%eax
		je     jump_418a2
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi
	jump_41899:
		sub    %edx,%edx
		stc
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax
	jump_418a2:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x4(%esi)
	jump_418aa:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func_418d0:
/*----------------------------------------------------------------*/
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		push   %esi
		push   %edx
		push   %eax
		mov    %esp,%ebp
		mov    %ecx,%edi
		mov    %cs:(%edi),%eax
		mov    %cs:0x4(%edi),%edx
		mov    %cs:0x8(%edi),%si
	jump_418e7:
		rol    $0x10,%esi
		mov    0x8(%ebp),%si
		rol    $0x10,%esi
		mov    0x0(%ebp),%ebx
		mov    0x4(%ebp),%ecx
		call   func_406d2
		lea    0xa(%edi),%edi
		mov    %cs:(%edi),%ebx
		mov    %cs:0x4(%edi),%ecx
		rol    $0x10,%esi
		mov    %cs:0x8(%edi),%si
		rol    $0x10,%esi
		call   func_402ce
		decl   0xc(%ebp)
		jne    jump_418e7
		add    $0x10,%esp
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret


/*----------------------------------------------------------------*/
func_41922:
/*----------------------------------------------------------------*/
		push   %edi
		push   %esi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%edi
		mov    (%edi),%eax
		mov    0x4(%edi),%edx
		mov    0x8(%edi),%si
		shl    $0x10,%esi
		mov    0x8(%edi),%si
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   func_406d2
		pop    %ecx
		pop    %ebx
		call   func_418d0
		rol    $0x10,%esi
		mov    (%edi),%ebx
		mov    0x4(%edi),%ecx
		mov    0x8(%edi),%si
		rol    $0x10,%esi
		call   func_406d2
		mov    %eax,(%edi)
		mov    %edx,0x4(%edi)
		mov    %si,0x8(%edi)
		pop    %ecx
		pop    %esi
		pop    %edi
		ret


/*----------------------------------------------------------------*/
func___hook387:	/* 0x4196a */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %edx
		mov    %eax,%ebp
		mov    $0x1600,%ax
		int    $0x2f
		test   %al,%al
		je     jump_419d0
		cmp    $0x80,%al
		je     jump_419d0
		xor    %al,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		cmp    $0x666,%ax
		jne    jump_419d0
		mov    $0x22,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		test   %ax,%ax
		jne    jump_419d0
		mov    $0x1,%dh
		mov    $0x1e,%al
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    %dh,data_7ced1
		xor    %edx,%edx
		mov    $0xfa,%ah
		int    $0x2f
		mov    %cs,%eax
		mov    $data_1b637c,%ebx
		mov    %eax,%edx
		mov    %ebx,%ecx
		mov    $0x20,%al
		shr    $0x10,%ecx
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1,%al
		jmp    jump_41a2a
	jump_419d0:
		mov    (%esp),%edx
		test   %ebp,%ebp
		jne    jump_419dc
		test   %dx,%dx
		je     jump_41a28
	jump_419dc:
		mov    $data_52570,%esi
		mov    $0xa00,%eax
		push   %es
		int    $0x31
		sbb    %eax,%eax
		pop    %es
		test   %eax,%eax
		jne    jump_41a28
		mov    $0x7,%eax
		mov    $func___int7,%ebx
		mov    %cs,%ecx
		call   func__dos_setvect_
		mov    (%esp),%es
		mov    %es:0x40(%ebp),%ah
		movb   $0x1,%es:0x3e(%ebp)
		or     $0x4,%ah
		mov    %ah,%es:0x40(%ebp)
		mov    %cr0,%eax
		or     $0x4,%al
		mov    $0x1,%dl
		mov    %eax,%cr0
		mov    $0x30,%ah
		int    $0x21
		mov    %dl,data_7ced0
	jump_41a28:
		xor    %al,%al
	jump_41a2a:
		add    $0x4,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func___unhook387:	/* 0x41a34 */
/*----------------------------------------------------------------*/
		push   %ebx
		push   %ecx
		push   %es
		mov    %edx,%es
		mov    data_7ced1,%dl
		test   %dl,%dl
		je     jump_41a63
		mov    %cs,%eax
		mov    %eax,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0x21,%al
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1f,%al
		xor    %edx,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    $0xfa,%ah
		int    $0x2f
		mov    $0x1,%al
		pop    %es
		pop    %ecx
		pop    %ebx
		ret
	jump_41a63:
		cmpb   $0x0,data_7ced0
		je     jump_41a87
		mov    %es:0x40(%eax),%bl
		mov    %dl,%es:0x3e(%eax)
		and    $0xfb,%bl
		mov    %bl,%es:0x40(%eax)
		mov    %cr0,%eax
		and    $0xfb,%al
		mov    %eax,%cr0
		mov    $0x30,%ah
		int    $0x21
	jump_41a87:
		xor    %al,%al
		pop    %es
		pop    %ecx
		pop    %ebx
		ret


/*----------------------------------------------------------------*/
func_nullsub_5:	/* 0x41a8d */
/*----------------------------------------------------------------*/
		ret


/*----------------------------------------------------------------*/
func___init_80x87:	/* 0x41a8e */
/*----------------------------------------------------------------*/
		push   %ax
		finit
		fld1
		fldz
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs
		fcompp
		fnstsw %ax
		mov    $0x2,%al
		sahf
		je     jump_41aa8
		mov    $0x3,%al
	jump_41aa8:
		finit
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret
.data
data_50000:
		.ascii  "\x01\x01\x01\x00"
data_50004:
		.string ".\\CSTLDATA\\"
data_50010:
		.string ".eve"
data_50015:
		.string "%s read error!\n"
data_50025:
		.ascii  "\x94\xfc\xb4\xe1\x20\xb3\x69\x9c"
		.ascii  "\x81\x3f\x00"
data_50030:
		.ascii  "\xb5\x81\x21\x00"
data_50034:
		.ascii  "\xb4\x61\x92\x61\x21\x00"
data_5003a:
		.string "%s write error!\n"
data_5004b:
		.string "%d %d\n"
data_50052:
		.string ".\\characte\\"
data_5005e:
		.ascii  "\x00"
data_5005f:
		.ascii  "\xa0\x61\xb7\x69\x20\xb9\xb7\x9e"
		.ascii  "\x61\x21\x00"
data_5006a:
		.ascii  "\xb4\x61\xb7\xa1\xc9\x51\x20\xb8"
		.ascii  "\xe1\xb8\x77\x20\x89\xb7\x88\x65"
		.ascii  "\xb7\xa1\x20\xa6\x81\xb9\xa2\xd0"
		.ascii  "\x73\x93\xa1\x94\x61\x2e\x00"
data_50089:
		.ascii  "\x20\xc2\xe1\x97\x62\x00"
data_5008f:
		.string "SPRITE"
data_50096:
		.ascii  "\xa0\x93"
		.ascii   " X,Y"
		.ascii  "\xb6\xe1\xc3\xa1\x00"
data_500a1:
		.ascii  "\x20\xb7\xa1\x20\x20\x9f\x71\x00"
data_500a9:
		.ascii  "\x20\xb4\xe9\x20\x20\x8a\x89\x00"
data_500b1:
		.string "  O  K"
data_500b8:
		.ascii  "\x58\x20\xb6\xe1\xc3\xa1\x3a\x20"
		.ascii  "\x00"
data_500c1:
		.ascii  "\x59\x20\xb6\xe1\xc3\xa1\x3a\x20"
		.ascii  "\x00"
data_500ca:
		.ascii   "SPR "
		.ascii  "\xcc\x81\xc8\xe5\x3a\x20\x00"
data_500d5:
		.ascii  "\xb7\xa1\x9f\x71\x3a\x20\x00"
data_500dc:
		.ascii  "\xb7\xa1\x9f\x71\x20\xb7\xb3\x9d"
		.ascii  "\x62\x00"
data_500e6:
		.ascii   "SPR "
		.ascii  "\xac\xe5\xc8\x82\x00"
data_500ef:
		.ascii  "\xb4\xe9\x8a\x89\x20\xac\xe5\xc8"
		.ascii  "\x82\x00"
data_500f9:
		.ascii  "\x94\x81\xd1\xc1\x20\xa4\xe5\xd1"
		.ascii  "\xa1\x00"
data_50103:
		.ascii  "\xb7\xa1\x95\xb7\x20\xa4\xf1\xb6"
		.ascii  "\xe1\x00"
data_5010d:
		.ascii  "\xb7\xa1\x95\xb7\x20\xad\xa2\x95"
		.ascii  "\xa1\x00"
data_50117:
		.string "O  K"
data_5011c:
		.ascii  "\xad\xa2\x95\xa1\x3a\x20\x00"
data_50123:
		.ascii  "\xb7\xa1\x95\xb7\xa4\xf1\xb6\xe1"
		.ascii  "\x3a\x20\x00"
data_5012e:
		.ascii  "\x94\x81\xd1\xc1\xa4\xe5\xd1\xa1"
		.ascii  "\x3a\x20\x00"
data_50139:
		.string "TOWN MAN FULL!!!!!!!\n"
data_5014f:
		.ascii  "\xb7\xa1\x20\x9f\x71\x00"
data_50155:
		.ascii  "\x5b\xa2\x81\xa1\x77\x5d\x00"
data_5015c:
		.string "Name"
data_50161:
		.ascii   "Event"
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x00"
data_5016d:
		.ascii  "\xa0\x61\xb7\x69\x20\xb9\xb7\x9e"
		.ascii  "\x61\x00"
data_50177:
		.ascii  "\xa0\x93\x20\xa4\x61\x8e\x81\x8b"
		.ascii  "\xa1\x00"
data_50181:
		.ascii  "\x94\x81\xd1\xc1\x20\xa4\x61\x8e"
		.ascii  "\x81\x8b\xa1\x00"
data_5018d:
		.ascii  "\xa0\x93\x20\xb7\xa1\x95\xb7\x00"
data_50195:
		.ascii  "\x97\x77\xb8\x77\xb7\xa5\xa2\x89"
		.string " ON/OFF"
data_501a5:
		.ascii  "\xb7\xa5\xa2\x89"
		.ascii   " Party"
		.ascii  "\xb7\xa1\x95\xb7\x00"
data_501b4:
		.ascii  "\xa4\x81\x89\x77\x20\xaf\x61\xc7"
		.ascii  "\x61\x9d\xa9\x00"
data_501c0:
		.ascii  "\x90\x61\x9c\x81\xb7\xa1\xad\x65"
		.ascii  "\x00"
data_501c9:
		.ascii   "ITEM "
		.ascii  "\xc2\xe1\x97\x62\x2f\xad\xa1\xaf"
		.ascii  "\xa9\x00"
data_501d8:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x20\xa4"
		.ascii  "\xe5\xd1\xa1\x00"
data_501e4:
		.string "ON(1)/OFF(0)"
data_501f1:
		.ascii  "\xa0\x93\x20\xa4\xe5\xd1\xa1\x00"
data_501f9:
		.ascii  "\xc4\x81\x9f\xa2\xc8\xe1\x20\xa4"
		.ascii  "\xe5\xd1\xa1\x00"
data_50205:
		.ascii  "\x39\x39\x3a\x94\x61\x88\x69\xac"
		.ascii  "\xf7\x00"
data_5020f:
		.ascii  "\x90\x61\x9c\x81\xb7\xa1\xad"
		.ascii   "e TALK "
		.ascii  "\xc9\x41\xb7\xa1\xa7\x69\x20\xa4"
		.ascii  "\xe5\xd1\xa1\x00"
data_50229:
		.ascii   "ITEM "
		.ascii  "\xc2\xe1\x97\x62\x00"
data_50233:
		.ascii   "ITEM "
		.ascii  "\xad\xa5\xaf\xa9\x00"
data_5023d:
		.ascii   "ITEM "
		.ascii  "\x89\xa1\xb7\x41\x20\xa4\xe5\xd1"
		.ascii  "\xa1"
		.string "(1~)"
data_50250:
		.ascii  "\x94\x81\xd1\xc1\xa4\xe5\xd1\xa1"
		.ascii  "\x00"
data_50259:
		.ascii  "\x97\x77\xb8\x77\xb7\xa5\xa2\x89"
		.ascii  "\x20\xac\x97\xac\xf7\x00"
data_50267:
		.ascii  "\x97\x77\xb8\x77\xb7\xa5\xa2\x89"
		.ascii  "\x20\xad\xa1\xa1\x69\x00"
data_50275:
		.ascii  "\xaf\x61\xc7\x61\x9d\xa9\x20\xaf"
		.ascii  "\xa1\x88\x65\x3a\x00"
data_50282:
		.ascii  "\x58\xad\xa2\x95\xa1\x3a\x00"
data_50289:
		.ascii  "\x59\xad\xa2\x95\xa1\x3a\x00"
data_50290:
		.ascii  "\x4f\x20\x4b\x00"
data_50294:
		.ascii  "\xaf\x61\xc7\x61\x9d\xa9\x20\xaf"
		.ascii  "\xa1\x88\x65\x00"
data_502a0:
		.ascii  "\x58\xad\xa2\x95\xa1\x00"
data_502a6:
		.ascii  "\x59\xad\xa2\x95\xa1\x00"
data_502ac:
		.ascii  "\xb6\x91\xbb\xa2\xb7\xb1\x20\xad"
		.ascii  "\xa2\x95\xa1\x3f\x00"
data_502b9:
		.ascii  "\xa5\xa1\xc9\xb7\xad\xa2\x95\xa1"
		.ascii  "\x00"
data_502c2:
		.ascii  "\xa8\x61\x9f\x65\xad\xa2\x95\xa1"
		.ascii  "\x00"
data_502cb:
		.ascii  "\x43\x44\x20\xb7\x71\xb4\x62\xb5"
		.ascii  "\x65\xba\x81\x00"
data_502d7:
		.ascii  "\xd2\x61\x89\xc1\xb7\x71\x20\xc2"
		.ascii  "\x89\x9d\x62\x00"
data_502e3:
		.ascii   "TRACK "
		.ascii  "\xa4\xe5\xd1\xa1\x00"
data_502ee:
		.ascii  "\xac\x61\xb6\x85\x97\x61\x20\xcc"
		.ascii  "\x61\xb7\xa9\xb7\xa1\x9f\x71\x00"
data_502fe:
		.ascii  "\xa4\x65\xa5\xa2\xd2\x55\xae\x81"
		.ascii  "\x00"
data_50307:
		.ascii  "\xb7\xa1\x20\xb7\xa1\xa5\x45\xcb"
		.ascii  "\x61\xb5\xa1\xa7\x61\xb9\x42\xcb"
		.ascii  "\x61\x93\x65\x20\x94\xe1\x20\xb7"
		.ascii  "\xa1\xac\x77\x20\xb5\x41\x97\xa1"
		.ascii  "\xcb\x61\xa6\x89\x88\x61\x21\x00"
data_5032f:
		.string "UP_WALK"
data_50337:
		.string "DOWN_WALK"
data_50341:
		.string "LEFT_WALK"
data_5034b:
		.string "RIGHT_WALK"
data_50356:
		.string "UP_MOVE"
data_5035e:
		.string "DOWN_MOVE"
data_50368:
		.string "LEFT_MOVE"
data_50372:
		.string "RIGHT_MOVE"
data_5037d:
		.string "LOCATE"
data_50384:
		.string "BGM&SOUND"
data_5038e:
		.string "CONVERSATION"
data_5039b:
		.string "ETC..."
data_503a2:
		.string "ACT_OBJ"
data_503aa:
		.string "DEACT_OBJ"
data_503b4:
		.string "CHG_MOVESPD"
data_503c0:
		.string "CHG_MOTION"
data_503cb:
		.string "LOAD"
data_503d0:
		.string "FAST_LOAD"
data_503da:
		.string "SAVE"
data_503df:
		.string "QUIT"
data_503e4:
		.string "COUNT:"
data_503eb:
		.string "PLAY"
data_503f0:
		.string "walkBlock"
data_503fa:
		.string "moveBlock"
data_50404:
		.string "*.eve"
data_5040a:
		.string "EVENT NUMBER"
data_50417:
		.string ".\\cstldata\\"
data_50423:
		.ascii  "\x8b\x61\xa0\x65\x96\x89\x9c\x81"
		.ascii  "\x3f\x00"
data_5042d:
		.ascii  "\x55\x50\x00"
data_50430:
		.ascii  "\x43\x00"
data_50432:
		.string "DOWN"
		.ascii  "\x00"
data_50438:
		.string "KNIGHT1.NC2"
data_50444:
		.string "KNIGHT2.NC2"
data_50450:
		.string "KNIGHTW.NC2"
data_5045c:
		.string "PARADIN.NC2"
data_50468:
		.string "IMPEPARA.NC2"
data_50475:
		.string "PARADINW.NC2"
data_50482:
		.string "FIGHTER.NC2"
data_5048e:
		.string "FIGHTER2.NC2"
data_5049b:
		.string "FIGHTERW.NC2"
data_504a8:
		.string "ASSASIN.NC2"
data_504b4:
		.string "GRDIATER.NC2"
data_504c1:
		.string "GRADIAW.NC2"
data_504cd:
		.string "THIEF.NC2"
data_504d7:
		.string "THIEFW.NC2"
data_504e2:
		.string "RANGER.NC2"
data_504ed:
		.string "RANGW.NC2"
data_504f7:
		.string "SCOUT.NC2"
data_50501:
		.string "SCOUTW.NC2"
data_5050c:
		.string "ARCHAEO.NC2"
data_50518:
		.string "ARCHEOW.NC2"
data_50524:
		.string "SOLDIER1.NC2"
data_50531:
		.string "SOLDIER2.NC2"
data_5053e:
		.string "SOLDIERW.NC2"
data_5054b:
		.string "LANCER1.NC2"
data_50557:
		.string "LANCER2.NC2"
data_50563:
		.string "LANCERW.NC2"
data_5056f:
		.string "GENERA.NC2"
data_5057a:
		.string "GENERAL2.NC2"
data_50587:
		.string "GENERAW.NC2"
data_50593:
		.string "GUARD.NC2"
data_5059d:
		.string "GUARDW.NC2"
data_505a8:
		.string "ROYALG.NC2"
data_505b3:
		.string "ROYALGW.NC2"
data_505bf:
		.string "EARTHQ.NC2"
data_505ca:
		.string "EARTHQW.NC2"
data_505d6:
		.string "ARCHER1.NC2"
data_505e2:
		.string "ARCHER2.NC2"
data_505ee:
		.string "ARCHERW.NC2"
data_505fa:
		.string "HUNTER.NC2"
data_50605:
		.string "HUNTER2.NC2"
data_50611:
		.string "HUNTERW.NC2"
data_5061d:
		.string "EAGLE.NC2"
data_50627:
		.string "EAGLED.NC2"
data_50632:
		.string "EAGLEW.NC2"
data_5063d:
		.string "SNIPER.NC2"
data_50648:
		.string "SNIPERW.NC2"
data_50654:
		.string "MAGE1.NC2"
data_5065e:
		.string "MAGE2.NC2"
data_50668:
		.string "MAGICIA1.NC2"
data_50675:
		.string "MAGICIA2.NC2"
data_50682:
		.string "ALCHEMI1.NC2"
data_5068f:
		.string "ALCHEMI0.NC2"
data_5069c:
		.string "M_FIRE1.NC2"
data_506a8:
		.string "M_FIRE2.NC2"
data_506b4:
		.string "M_THUN1.NC2"
data_506c0:
		.string "M_THUN2.NC2"
data_506cc:
		.string "M_ICE1.NC2"
data_506d7:
		.string "M_ICE2.NC2"
data_506e2:
		.string "WIZARD1.NC2"
data_506ee:
		.string "WIZARD2.NC2"
data_506fa:
		.string "MONK.NC2"
data_50703:
		.string "SISTER.NC2"
data_5070e:
		.string "CLERIC.NC2"
data_50719:
		.string "CLERICKW.NC2"
data_50726:
		.string "PRIEST2.NC2"
data_50732:
		.string "PRIEST1.NC2"
data_5073e:
		.string "DRUID.NC2"
data_50748:
		.string "BISHOP.NC2"
data_50753:
		.string "WARLOCK1.NC2"
data_50760:
		.string "WARLOCK2.NC2"
data_5076d:
		.string "WITCH1G.NC2"
data_50779:
		.string "WITCH1F.NC2"
data_50785:
		.string "WITCH2G.NC2"
data_50791:
		.string "WITCH2F.NC2"
data_5079d:
		.string "NECROMAN.NC2"
data_507aa:
		.string "LICH.NC2"
data_507b3:
		.string "WARRIOR1.NC2"
data_507c0:
		.string "WARRIOR2.NC2"
data_507cd:
		.string "BERSERKE.NC2"
data_507da:
		.string "GENOCID.NC2"
data_507e6:
		.string "SORCERER.NC2"
data_507f3:
		.string "SHARMAN.NC2"
data_507ff:
		.string "EXORCIST.NC2"
data_5080c:
		.string "VALTANSG.NC2"
data_50819:
		.string "nullman.nc2"
data_50825:
		.string "VALTANAG.NC2"
data_50832:
		.string "bottle.nc2"
data_5083d:
		.string "VALTANLG.NC2"
data_5084a:
		.string "e_alcia.nc2"
data_50856:
		.string "E_VAL_AG.NC2"
data_50863:
		.string "e_boy.nc2"
data_5086d:
		.string "E_VAL_LG.NC2"
data_5087a:
		.string "e_cameo.nc2"
data_50886:
		.string "MARMANAS.NC2"
data_50893:
		.string "MERMANL.NC2"
data_5089f:
		.string "MARMANA.NC2"
data_508ab:
		.string "BRIGAND.NC2"
data_508b7:
		.string "e_drau.nc2"
data_508c2:
		.string "PIRATE.NC2"
data_508cd:
		.string "e_dre.nc2"
data_508d7:
		.string "e_duran.nc2"
data_508e3:
		.string "ORIENTAL.NC2"
data_508f0:
		.string "NORMADIC.NC2"
data_508fd:
		.string "e_erich.nc2"
data_50909:
		.string "e_gs.nc2"
data_50912:
		.string "e_gsdan.nc2"
data_5091e:
		.string "CAPTAIN.NC2"
data_5092a:
		.string "SAVANT1.NC2"
data_50936:
		.string "SAVANT2.NC2"
data_50942:
		.string "e_higen.nc2"
data_5094e:
		.string "e_iyolin.nc2"
data_5095b:
		.string "e_iydan.nc2"
data_50967:
		.string "e_lacid.nc2"
data_50973:
		.string "e_larwi.nc2"
data_5097f:
		.string "e_loca.nc2"
data_5098a:
		.string "e_plus.nc2"
data_50995:
		.string "e_ser3.nc2"
data_509a0:
		.string "e_shuri.nc2"
data_509ac:
		.string "BAT4.NC2"
data_509b5:
		.string "VAMPIRE.NC2"
data_509c1:
		.string "VAMPIREW.NC2"
data_509ce:
		.string "e_coboy.nc2"
data_509da:
		.string "e_coiy01.nc2"
data_509e7:
		.string "e_coiy02.nc2"
data_509f4:
		.string "e_last.nc2"
data_509ff:
		.string "Z_GHOUL1.NC2"
data_50a0c:
		.string "Z_GHOUL2.NC2"
data_50a19:
		.string "Z_GHOUL3.NC2"
data_50a26:
		.string "SLIME1.NC2"
data_50a31:
		.string "SLIME2.NC2"
data_50a3c:
		.string "SLIME3.NC2"
data_50a47:
		.string "SLIME4.NC2"
data_50a52:
		.string "SKELETON.NC2"
data_50a5f:
		.string "DTOOTH01.NC2"
data_50a6c:
		.string "DTOOTHW1.NC2"
data_50a79:
		.string "BP.NC2"
data_50a80:
		.string "S_GS.NC2"
data_50a89:
		.string "L_GS.NC2"
data_50a92:
		.string "B_GS.NC2"
data_50a9b:
		.string "M_GS.NC2"
data_50aa4:
		.string "STYNER.NC2"
data_50aaf:
		.string "NS_GS.NC2"
data_50ab9:
		.string "NL_GS.NC2"
data_50ac3:
		.string "NB_GS.NC2"
data_50acd:
		.string "NM_GS.NC2"
data_50ad7:
		.string "BERADIN.NC2"
data_50ae3:
		.string "S_LACIDE.NC2"
data_50af0:
		.string "L_LACIDE.NC2"
data_50afd:
		.string "B_LACIDE.NC2"
data_50b0a:
		.string "M_LACIDE.NC2"
data_50b17:
		.string "HLACID.NC2"
data_50b22:
		.string "NS_LACIDE.NC2"
data_50b30:
		.string "NL_LACIDE.NC2"
data_50b3e:
		.string "NB_LACIDE.NC2"
data_50b4c:
		.string "NM_LACIDE.NC2"
data_50b5a:
		.string "S_IYOLIN.NC2"
data_50b67:
		.string "L_IYOLIN.NC2"
data_50b74:
		.string "B_IYOLIN.NC2"
data_50b81:
		.string "M_IYOLIN.NC2"
data_50b8e:
		.string "S_ROBIN.NC2"
data_50b9a:
		.string "L_ROBIN.NC2"
data_50ba6:
		.string "B_ROBIN.NC2"
data_50bb2:
		.string "M_ROBIN.NC2"
data_50bbe:
		.string "S_KAJA.NC2"
data_50bc9:
		.string "L_KAJA.NC2"
data_50bd4:
		.string "B_KAJA.NC2"
data_50bdf:
		.string "M_KAJA.NC2"
data_50bea:
		.string "S_GISHNE.NC2"
data_50bf7:
		.string "L_GISHNE.NC2"
data_50c04:
		.string "B_GISHNE.NC2"
data_50c11:
		.string "M_GISHNE.NC2"
data_50c1e:
		.string "S_SHURI.NC2"
data_50c2a:
		.string "L_SHURI.NC2"
data_50c36:
		.string "B_SHURI.NC2"
data_50c42:
		.string "M_SHURI.NC2"
data_50c4e:
		.string "S_CROW.NC2"
data_50c59:
		.string "L_CROW.NC2"
data_50c64:
		.string "B_CROW.NC2"
data_50c6f:
		.string "M_CROW.NC2"
data_50c7a:
		.string "S_ARCION.NC2"
data_50c87:
		.string "L_ARCION.NC2"
data_50c94:
		.string "B_ARCION.NC2"
data_50ca1:
		.string "M_ARCION.NC2"
data_50cae:
		.string "S_ROVEL.NC2"
data_50cba:
		.string "L_ROVEL.NC2"
data_50cc6:
		.string "B_ROVEL.NC2"
data_50cd2:
		.string "M_ROVEL.NC2"
data_50cde:
		.string "AKIRA.NC2"
data_50ce8:
		.string "AGACYG.NC2"
data_50cf3:
		.string "AGACYF.NC2"
data_50cfe:
		.string "ALCIA.NC2"
data_50d08:
		.string "ARIANA.NC2"
data_50d13:
		.string "CAMEO.NC2"
data_50d1d:
		.string "DBLADE.NC2"
data_50d28:
		.string "DIABLRO.NC2"
data_50d34:
		.string "DICUS.NC2"
data_50d3e:
		.string "DURAN.NC2"
data_50d48:
		.string "ERICH.NC2"
data_50d52:
		.string "GRIUM.NC2"
data_50d5c:
		.string "HANJO.NC2"
data_50d66:
		.string "ILJIMEA.NC2"
data_50d72:
		.string "IRUS.NC2"
data_50d7b:
		.string "KARLS.NC2"
data_50d85:
		.string "KASHIM.NC2"
data_50d90:
		.string "KASHUTAR.NC2"
data_50d9d:
		.string "KOON.NC2"
data_50da6:
		.string "LANDAM.NC2"
data_50db1:
		.string "NANGCHUN.NC2"
data_50dbe:
		.string "PALTAMIL.NC2"
data_50dcb:
		.string "ROCARNO.NC2"
data_50dd7:
		.string "SAAD-G.NC2"
data_50de2:
		.string "SAAD_F.NC2"
data_50ded:
		.string "SARA.NC2"
data_50df6:
		.string "SIREN.NC2"
data_50e00:
		.string "VUNSTAIN.NC2"
data_50e0d:
		.string "DRAUPNIR.NC2"
data_50e1a:
		.string "SGRAY.NC2"
data_50e24:
		.string "LGRAY.NC2"
data_50e2e:
		.string "BGRAY.NC2"
data_50e38:
		.string "MGRAY.NC2"
data_50e42:
		.string "VANDYKE.NC2"
data_50e4e:
		.string "KIM.NC2"
		.ascii  "\x00\x00"
data_50e58:
		.string "Largest available block (in bytes): %lu\n"
data_50e81:
		.string "Maximum unlocked page allocation: %lu\n"
data_50ea8:
		.string "Pages that can be allocated and locked: %lu\n"
data_50ed5:
		.string "Total linear address space including allocated pages: %lu\n"
data_50f10:
		.string "Number of free pages available: %lu\n"
data_50f35:
		.string "Number of physical pages not in use: %lu\n"
data_50f5f:
		.string "Total physical pages managed by host: %lu\n"
data_50f8a:
		.string "Free linear address space (pages): %lu\n"
data_50fb2:
		.string "Size of paging/file partition (pages): %lu\n"
data_50fde:
		.string "item.spr"
data_50fe7:
		.string ".\\cstldata\\citizen1.spr"
data_50fff:
		.string ".\\cstldata\\citizen2.spr"
data_51017:
		.string ".\\cstldata\\itembox.spr"
data_5102e:
		.string "menu.VOC"
data_51037:
		.string "sell.VOC"
data_51040:
		.string "hired2"
data_51047:
		.string "hired3"
data_5104e:
		.string "hired1"
data_51055:
		.string "hired20"
data_5105d:
		.string "hired4"
data_51064:
		.string "hired8"
data_5106b:
		.string "hired10"
data_51073:
		.string "hired11"
data_5107b:
		.string "hired18"
data_51083:
		.string "hired7"
data_5108a:
		.string "hired22"
data_51092:
		.string "hired23"
data_5109a:
		.ascii  "\xac\xe5\xb8\x77\x00"
data_5109f:
		.string "hired12"
data_510a7:
		.string "EXIT"
data_510ac:
		.ascii  "\x77\x74\x00"
data_510af:
		.ascii  "\x24\x00"
data_510b1:
		.ascii  "\x25\x73\x00"
data_510b4:
		.ascii  "\x53\x4d\x00"
data_510b7:
		.string "TOOL"
data_510bc:
		.string "newascii.fnt"
data_510c9:
		.string "newhan.fnt"
data_510d4:
		.string "Mouse not installed...\n"
data_510ec:
		.string "%s read error!\n"
data_510fc:
		.string "nowload.pcx"
data_51108:
		.string "%s Load Failure!"
data_51119:
		.string "Image Count Error! %d\n"
data_51130:
		.ascii  "\x25\x73\x0a\x00"
data_51134:
		.string "item.dat"
data_5113d:
		.string "item.dat read error!\n"
data_51153:
		.string "EXIT"
data_51158:
		.ascii  "\xb6\x61\x8b\x71\xb7\x65\x00"
data_5115f:
		.ascii  "\x32\x30\x30\x00"
data_51163:
		.ascii   "ELD "
		.ascii  "\xb7\xb3\x93\xa1\x94\x61\x2e\x00"
data_5116f:
		.ascii  "\xb5\x61\x8b\xa1\xac\xe1\x20\xca"
		.ascii  "\x81\xae\x82\xd0\x61\xaf\xa1\x9d"
		.ascii  "\x73\x93\xa1\x8c\x61\x3f\x00"
data_51186:
		.ascii   "                "
		.ascii  "\xb5\x81\x20\x20\x20\xb4\x61\x93"
		.ascii  "\xa1\xb6\x61\x00"
data_511a2:
		.ascii  "\xb5\x81\x00"
data_511a5:
		.ascii  "\xb4\x61\x93\xa1\xb6\x61\x00"
data_511ac:
		.ascii  "\x88\x61\xbb\xa5\x95\xa5\xb7\xa1"
		.ascii  "\x20\xa6\x81\xb9\xa2\xd0\x73\x93"
		.ascii  "\xa1\x94\x61\x21\x00"
data_511c1:
		.ascii  "\x20\xc2\xe1\x97\x62\x00"
data_511c7:
		.string " ELD"
data_511cc:
		.ascii  "\xac\x61\x89\x56\xaf\x73\x93\xa1"
		.ascii  "\x8c"
		.ascii   "a?     "
		.ascii  "\xb5\x81\x20\x20\x20\xb4\x61\x93"
		.ascii  "\xa1\xb6\x61\x00"
data_511e8:
		.ascii  "\xb7\xa1\x20\xb4\x61\xb7\xa1\xc9"
		.ascii  "\x51\xb7\x65\x20\xcc\x69\x20\xae"
		.ascii  "\x81\x20\xb4\xf4\xaf\x73\x93\xa1"
		.ascii  "\x94\x61\x21\x00"
data_51204:
		.ascii  "\xcc\x69\x89\x56\xaf\x73\x93\xa1"
		.ascii  "\x8c"
		.ascii   "a?     "
		.ascii  "\xb5\x81\x20\x20\x20\xb4\x61\x93"
		.ascii  "\xa1\xb6\x61\x00"
data_51220:
		.ascii  "\xb7\xa1\xb6\x77\xa5\x77\xb7\x69"
		.ascii  "\x20\x89\xa1\xb6\x77\xd0\x61\x89"
		.ascii  "\x56\xaf\x73\x93\xa1\x8c\x61\x3f"
		.ascii  "\x00"
data_51239:
		.ascii  "\xd1\x65\xb8\x81\x20\xb4\x61\x8a"
		.ascii  "\x85\xb7\xa5\xb6\xa5\xb7\xa1\x20"
		.ascii  "\x94\x61\x20\xc0\x76\xaf\x73\x93"
		.ascii  "\xa1\x94\x61\x21\x00"
data_51256:
		.ascii  "\x00"
data_51257:
		.ascii  "\x94\x77\xaf\xa5\xb7\x69\x20\x89"
		.ascii  "\xa1\xb6\x77\xd0\x61\x89\xa1\x20"
		.ascii  "\xaf\xbc\xad\xa1\x2e\x00"
data_5126d:
		.ascii  "\xac\x61\xb4\xb7\xd0\x61\x89\x56"
		.ascii  "\xaf\x73\x93\xa1\x94"
		.string "a////"
data_51280:
		.ascii  "\xb9\x41\xb7\x81\x93\x65\x20\x89"
		.ascii  "\xa1\xa0\x73\xbb\xa1\xa0\x65\x00"
data_51290:
		.ascii  "\x20\x20\x8b\x61\x9c\xf1\x20\x88"
		.ascii  "\x7b\xb7\xa1\x20\x88\x61\xba\x61"
		.ascii  "\x2e\x00"
data_512a2:
		.ascii  "\x20\x20\xa5\xa1\xae\x81\x93\x65"
		.ascii  "\x20\xcf\xa9\xb6\x61\xb4\xf4\xaf"
		.ascii  "\x73\x93\xa1\x94\x61\x2e\x00"
data_512b9:
		.ascii  "\x20\x20\xb8\xe1\x9f\x69\x20\xa4"
		.ascii  "\x68\xb4\x61\xba\x81\xaf\xa5\x94"
		.ascii  "\x61\xa1\x65\x2c\x00"
data_512ce:
		.ascii  "\xb9\xbd\xad\xa1\x2e\x20\x90\x61"
		.ascii  "\xb7\x81\x20\x89\x81\xb4\xa2\x8b"
		.ascii  "\x71\xb7"
		.string "e///"
data_512e5:
		.ascii  "\xbb\xa2\xb4\xf3\x3a\x00"
data_512eb:
		.ascii  "\xac\xf7\xa5\x69\x3a\x00"
data_512f1:
		.ascii  "\x9d\x41\xa5\x49\x3a\x00"
data_512f7:
		.ascii  "\x89\x81\xb4\xa2\x8b\x71\x3a\x00"
data_512ff:
		.string "Female"
data_51306:
		.string "Male"
data_5130b:
		.ascii  "\x89\xa1\xb6\x77\xd0\x61\x89\x56"
		.ascii  "\xaf\x73\x93\xa1\x8c"
		.ascii   "a?   "
		.ascii  "\xb5\x81\x20\x20\x20\xb4\x61\x93"
		.ascii  "\xa1\xb6\x61\x00"
data_51329:
		.ascii  "\xcb\xb1\xb5\x41\x20\xd0\x73\x9f"
		.ascii  "\x41\xaf\xa1\xc7\xa9\x8c\x61\xb6"
		.ascii  "\x61\x3f\x00"
data_5133c:
		.ascii  "\x94"
		.string "a////"
data_51343:
		.ascii  "\x20\x20\xb8\xe1\x93\x65\x20\xb5"
		.ascii  "\x61\x8b\xa1\xb5\x41\x20\x90\x71"
		.ascii  "\xb4\x61\xb7\xb6\x89\x56\xaf\x73"
		.ascii  "\x93\xa1\x00"
data_5135e:
		.ascii  "\x20\x20\xba\x41\xad\xb7\xd0\x73"
		.ascii  "\x93\xa1\x94\x61\x2e\x00"
data_5136c:
		.ascii  "\x47\x53\x9c\x61\xa1\x65\x20\xa1"
		.ascii  "\xa9\x9c\x61\x95\xa1\x2f\x2f\x2f"
		.ascii  "\x00"
data_5137d:
		.ascii  "\xac\x61\xb4\xb7\xd0\x61\x89\x56"
		.ascii  "\xaf\x73\x93\xa1\x94\x61\x2e\x00"
data_5138d:
		.ascii  "\xba\x41\xad\xb7\xd0\x73\x93\xa1"
		.ascii  "\x94\x61\x2e\x00"
data_51399:
		.ascii  "\x98\x61\x9f\x61\x89\x56\xad\xa1"
		.string "!/////"
data_513a8:
		.ascii  "\xaf\xb0\xad\xa1\x21\x20\xb5\xa1"
		.ascii  "\xbb\xa2\x20\xb7\xa1\xb5\xa9\x9f"
		.ascii  "\xa5\x93\xb1\xa0\x65\x00"
data_513be:
		.ascii  "\x20\x20\xb8\xe1\xb7\x81\x20\xa5"
		.ascii  "\xa1\xae\x81\x93"
		.string "e //////"
data_513d3:
		.ascii  "\x20\x20\xb7\xa1\xa4\xe5\x20\xb7"
		.ascii  "\xb1\xa2\x81\xb5\x41\x20\x94\x81"
		.ascii  "\xd0\x65\x00"
data_513e6:
		.ascii  "\x8b\x73\x9e\x61\x3a\x00"
data_513ec:
		.ascii  "\x72\x62\x00"
data_513ef:
		.string "%s read error!\n"
		.ascii  "\x00"
data_51400:
		.ascii  "\x00"
data_51401:
		.string ".\\CSTLDATA\\"
data_5140d:
		.string ".twn"
data_51412:
		.string "%s read error!\n"
data_51422:
		.string "genesis.pal"
data_5142e:
		.string "genesis.pal read error!\n"
data_51447:
		.string "OVER MAX BOTTOM TILES!"
data_5145e:
		.string "START"
data_51464:
		.string "EXIT"
		.ascii  "\x00\x00\x00"
data_5146c:
		.string "player.dat"
data_51477:
		.string "player.dat read error!"
data_5148e:
		.string "EXIT"
data_51493:
		.ascii  "\xb5\x61\xa6\x85\x20\xb4\x61\xb7"
		.ascii  "\xa1\xc9\x51\x20\xb8\xe1\xb8\x77"
		.ascii  "\x89\xb7\x88\x65\xb7\xa1\x20\xb4"
		.ascii  "\xf4\xaf\x73\x93\xa1\x94\x61\x21"
		.ascii  "\x00"
data_514b4:
		.string "blackbox.dat"
data_514c1:
		.string "blackbox.dat write error!"
data_514db:
		.ascii  "\x77\x74\x00"
data_514de:
		.string "huhuhuhu.txt"
data_514eb:
		.string "%s : %d\n"
data_514f4:
		.string "blackbox.dat read error!"
data_5150d:
		.string "blackbox.itm"
data_5151a:
		.string "blackbox.itm write error!"
data_51534:
		.string "game.cfg"
data_5153d:
		.string "game.cfg open error!"
data_51552:
		.string "game.cfg write error!"
data_51568:
		.ascii  "\x8b\xa1\xac\x61\x20\x90\x71\x20"
		.ascii  "\x00"
data_51571:
		.ascii  "\x8b\xa1\xac\x61\x20\xb5\x61\x20"
		.ascii  "\x00"
data_5157a:
		.ascii  "\xb9\x41\x8a\x82\x8b\xa1\xac\x61"
		.ascii  "\x00"
data_51583:
		.ascii  "\xb6\x77\xa5\x77\x20\x90\x71\x20"
		.ascii  "\x00"
data_5158c:
		.ascii  "\xb6\x77\xa5\x77\x20\xb5\x61\x20"
		.ascii  "\x00"
data_51595:
		.ascii  "\xb4\xe1\xb0\x81\xaf\xa5\x20\x20"
		.ascii  "\x00"
data_5159e:
		.ascii  "\x95\xa1\x96\x82\x20\x90\x71\x20"
		.ascii  "\x00"
data_515a7:
		.ascii  "\x95\xa1\x96\x82\x20\xb5\x61\x20"
		.ascii  "\x00"
data_515b0:
		.ascii  "\xa5\x77\xac\x61\x20\x90\x71\x20"
		.ascii  "\x00"
data_515b9:
		.ascii  "\xa5\x77\xac\x61\x20\xb5\x61\x20"
		.ascii  "\x00"
data_515c2:
		.ascii  "\xb9\x41\x8a\x82\xa5\x77\x20\x20"
		.ascii  "\x00"
data_515cb:
		.ascii  "\xac\x77\x8b\x73\xa5\x77\xac\x61"
		.ascii  "\x00"
data_515d4:
		.ascii  "\xb9\x41\x8a\x82\xac\x77\x8b\x73"
		.ascii  "\x00"
data_515dd:
		.ascii  "\x88\x61\x97"
		.string "a    "
data_515e6:
		.ascii  "\x8a\x97\xae\x81"
		.string "    "
data_515ef:
		.ascii  "\xb5\x61\x8a\x97\xae\x81\x20\x20"
		.ascii  "\x00"
data_515f8:
		.ascii  "\xa0\x61\xa4\xf3\xac\x61\x20\x20"
		.ascii  "\x00"
data_51601:
		.ascii  "\xb5\x61\xa0\x61\xa4\xf3\xac\x61"
		.ascii  "\x00"
data_5160a:
		.ascii  "\xaf\x77\x9d"
		.string "a    "
data_51613:
		.ascii  "\xae\x81\x91"
		.string "a    "
data_5161c:
		.ascii  "\x9f\xa1\xc3\xa1"
		.string "    "
data_51625:
		.ascii  "\x97\x61\xb6\xa1\xcf\x61\x20\x20"
		.ascii  "\x00"
data_5162e:
		.ascii  "\x8a\xa5\xa4\xf3\x88\x61\x20\x20"
		.ascii  "\x00"
data_51637:
		.ascii  "\xb4\x71\xac\x69\xb8\x61\x20\x20"
		.ascii  "\x00"
data_51640:
		.ascii  "\xa4\x69\xc8"
		.string "e    "
data_51649:
		.ascii  "\xa0\xe1\xa0\x85"
		.string "    "
data_51652:
		.ascii  "\x89\xa1\xa7\x69\x9f\xa5\x20\x20"
		.ascii  "\x00"
data_5165b:
		.ascii  "\xb5\xa1\xc7"
		.string "a    "
data_51664:
		.ascii  "\xb5\xa1\x88\xe1"
		.string "    "
data_5166d:
		.ascii  "\x97\x61\x9c\x81\x89\xa5\x20\x20"
		.ascii  "\x00"
data_51676:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 1  "
data_5167f:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 2  "
data_51688:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 3  "
data_51691:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 4  "
data_5169a:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 5  "
data_516a3:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 6  "
data_516ac:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 7  "
data_516b5:
		.ascii  "\xb7\xa1\xb5\xa9\x9f\xa5\x20\x20"
		.ascii  "\x00"
data_516be:
		.ascii  "\x9c\x61\xaf\xa1\x97\x61\x20\x20"
		.ascii  "\x00"
data_516c7:
		.ascii  "\x9c\x61\xaf\xa1\x97\x61\x32\x20"
		.ascii  "\x00"
data_516d0:
		.ascii  "\x9c\x61\xaf\xa1\x97\x61\x33\x20"
		.ascii  "\x00"
data_516d9:
		.ascii  "\x97\x41\x9c"
		.string "e    "
data_516e2:
		.ascii  "\x9d\xa1\xc4\x61\x9f\x61\x91\xa1"
		.ascii  "\x00"
data_516eb:
		.ascii  "\xa3\xa1\xc4\x61\xb5\x49\x20\x20"
		.ascii  "\x00"
data_516f4:
		.ascii  "\xb7\xa9\xbb\xa1\xa0\x81\x20\x20"
		.ascii  "\x00"
data_516fd:
		.string "GS      "
data_51706:
		.string "GS2     "
data_5170f:
		.string "GS3     "
data_51718:
		.ascii  "\xd3\x62\xc8\x81\xb8\x61\x20\x20"
		.ascii  "\x00"
data_51721:
		.ascii  "\x97\x61\x9c\x61\xb6\x81\xcf\x61"
		.ascii  "\x00"
data_5172a:
		.ascii  "\x9c\x85\x94"
		.string "q    "
data_51733:
		.ascii  "\xb4\x69\xaf\xa1\xb5\xa5\x20\x20"
		.ascii  "\x00"
data_5173c:
		.ascii  "\xc7\x61\x9d\xa1\xb6\x81\x20\x20"
		.ascii  "\x00"
data_51745:
		.ascii  "\xb4\x61\xb7\xa1\xaf\x61\x20\x20"
		.ascii  "\x00"
data_5174e:
		.ascii  "\x9d\xa1\xa7\xa5"
		.string "    "
data_51757:
		.ascii  "\xa4\x82\xb5\xa2\x94\x77\x20\x20"
		.ascii  "\x00"
data_51760:
		.ascii  "\x90\x77\xc0\xe5"
		.string "    "
data_51769:
		.ascii  "\xb4\x61\x9f\x61\xaf\xa1\xb4\x61"
		.ascii  "\x00"
data_51772:
		.ascii  "\xb4\x61\x9f\xa1\xb4\x61\x90\x61"
		.ascii  "\x00"
data_5177b:
		.ascii  "\xd0\x61\xb9\x45\xa4\xe1\x8b\x61"
		.ascii  "\x00"
data_51784:
		.ascii  "\xa4\x65\x94\x61\xb7\xa1\xc7\x61"
		.ascii  "\x00"
data_5178d:
		.ascii  "\xb5\x41\x9f\xa1\xd3\xa1\x20\x20"
		.ascii  "\x00"
data_51796:
		.ascii  "\xaf\x41\x9f\xa1"
		.string "    "
data_5179f:
		.ascii  "\xa5\x41\x9c\x61\x97\xa5\x20\x20"
		.ascii  "\x00"
data_517a8:
		.ascii  "\xc4\x69\xaf"
		.string "a    "
data_517b1:
		.ascii  "\xb7\xa1\x9e\x81\xaf\x61\x20\x20"
		.ascii  "\x00"
data_517ba:
		.ascii  "\x97\xa1\xb4\x61\xa7\x69\x9d\xa1"
		.ascii  "\x00"
data_517c3:
		.ascii  "\xc6\x85"
		.string "      "
data_517cc:
		.ascii  "\xc4\x61\xa1\x41\xb5\xa1\x20\x20"
		.ascii  "\x00"
data_517d5:
		.ascii  "\x8b\xa1\xae\xe1\x91\x41\x20\x20"
		.ascii  "\x00"
data_517de:
		.ascii  "\xc4\x61\xaf\x41\xc8\x61\x9f\x61"
		.ascii  "\x00"
data_517e7:
		.ascii  "\xd0\x65\xb9\xa1"
		.string "    "
data_517f0:
		.ascii  "\xa4\xe5\xaf\x61\xc8\x61\xb7\xa5"
		.ascii  "\x00"
data_517f9:
		.ascii  "\xcc\x69\xc8\x61\xa3\xa9\x9c\x61"
		.ascii  "\x00"
data_51802:
		.ascii  "\xc4\x61\xaf\xb1"
		.string "    "
data_5180b:
		.ascii  "\xaf\x61\xcb\x61\x9c\x61\xb7\xa1"
		.ascii  "\x00"
data_51814:
		.ascii  "\xac\x61\x9c"
		.string "a    "
data_5181d:
		.ascii  "\xa1\xa1\xb9"
		.string "I    "
data_51826:
		.ascii  "\xa4\x61\xb8"
		.string "a    "
data_5182f:
		.ascii  "\xc4\x61\xb8"
		.string "a    "
data_51838:
		.ascii  "\xc4\x61\x9f\xb1"
		.string "    "
data_51841:
		.ascii  "\x94\x61\xb7\xa1\xc4\xe1\xaf\x61"
		.ascii  "\x00"
data_5184a:
		.ascii  "\x9d\xa1\xa5"
		.string "I    "
data_51853:
		.ascii  "\xb5\x81\xb4\xa2"
		.string " 10 "
data_5185c:
		.ascii  "\x5b\xb4\xe9\x8a\x89\xb4\xf4\xb7"
		.ascii  "\x71\x5d\x00"
data_51867:
		.ascii  "\xa0\x61\xb7\x69\x20\x95\x41\xb7"
		.ascii  "\xa1\xc8\x61\x88\x61\x20\xb4\xf4"
		.ascii  "\xb7\x61\xa3\x61\x9d\xa1\x20\xac"
		.ascii  "\x81\x9d\xa1\xb6\x85\x20\xc1\xa1"
		.ascii  "\x8b\xa1\x20\x95\x41\xb7\xa1\xc8"
		.ascii  "\x61\x9f\x69\x20\xac\x97\xac\xf7"
		.ascii  "\xd0\x73\x93\xa1\x94\x61\x2e\x00"
data_5189f:
		.string "*.map"
data_518a5:
		.string "EVENT_COND SAVE"
data_518b5:
		.string ".\\cstldata\\"
data_518c1:
		.string "%s read error!\n"
data_518d1:
		.string ".\\CSTLDATA\\"
data_518dd:
		.string ".twn"
data_518e2:
		.string ".nul"
data_518e7:
		.string "%s write error!\n"
data_518f8:
		.string "blackbox.dat"
data_51905:
		.string ".tec"
data_5190a:
		.string "genesis.pal"
data_51916:
		.string "genesis.pal read error!\n"
data_5192f:
		.ascii  "\x25\x64\x0a\x00"
data_51933:
		.string "portrait.syf"
data_51940:
		.string "portrait.syf read error!\n"
data_5195a:
		.string "portsmal.syf"
data_51967:
		.string "portsmal.syf read error!\n"
data_51981:
		.ascii  "\x72\x74\x00"
data_51984:
		.string "talk.tbl"
data_5198d:
		.string "TALK.TBL read error!"
data_519a2:
		.string "hired"
data_519a8:
		.ascii  "\xac\x77\xb8\xf1\xba\x81\xb7\xa5"
		.ascii  "\x00"
data_519b1:
		.ascii  "\x00"
data_519b2:
		.ascii  "\xcc\x69\x20\xa2\x89\x88\xe5\xb7"
		.ascii  "\x69\x20\xa5\xa1\xb5\x61\xba\x81"
		.ascii  "\xaf\xa1\xb5\xa1\x2e\x00"
data_519c8:
		.ascii  "\xb5\x61\x89\xc5\xba\x81\xb7\xa5"
		.ascii  "\x00"
data_519d1:
		.string "hire"
		.ascii  "\x00\x00"
data_519d8:
		.ascii  "\xc2\xe1\x97"
		.string "bOBJECT"
data_519e3:
		.ascii  "\xa5\xa1\xa2\x89\xac\x77\xb8\x61"
		.ascii  "\x00"
data_519ec:
		.ascii  "\xb7\xa9\xa4"
		.string "eTILE"
data_519f5:
		.ascii  "\xb4\x61\xb7\xa1\xc9\x51\x20\xc2"
		.ascii  "\xe1\x97\x62\x20\xb7\xa1\xa5\x45"
		.ascii  "\xcb\x61\x20\xaf\x61\xb6\xe1\xc3"
		.ascii  "\xa1"
		.string "(0~59)"
data_51a15:
		.ascii  "\xb7\xa1\x9f\x71\x20\xb7\xb3\x9d"
		.ascii  "\x62\x00"
data_51a1f:
		.ascii   "SPR "
		.ascii  "\xac\xe5\xc8\x82\x00"
data_51a28:
		.ascii  "\xb4\xe9\x8a\x89\x20\xac\xe5\xc8"
		.ascii  "\x82\x00"
data_51a32:
		.ascii  "\x94\x81\xd1\xc1\x20\xa4\xe5\xd1"
		.ascii  "\xa1\x00"
data_51a3c:
		.ascii  "\xb7\xa1\x95\xb7\x20\xa4\xf1\xb6"
		.ascii  "\xe1\x00"
data_51a46:
		.ascii  "\xb7\xa1\x95\xb7\x20\xad\xa2\x95"
		.ascii  "\xa1\x00"
data_51a50:
		.string "O  K"
data_51a55:
		.ascii  "\xad\xa2\x95\xa1\x3a\x20\x00"
data_51a5c:
		.ascii  "\xb7\xa1\x95\xb7\xa4\xf1\xb6\xe1"
		.ascii  "\x3a\x20\x00"
data_51a67:
		.ascii  "\x94\x81\xd1\xc1\xa4\xe5\xd1\xa1"
		.ascii  "\x3a\x20\x00"
data_51a72:
		.ascii  "\xa0\x61\xb7\x69\xac\x61\x9c\x71"
		.ascii  "\x00"
data_51a7b:
		.ascii  "\xb6\x77\xa5\x77\xa4\x81\xc3\xa1"
		.ascii  "\x00"
data_51a84:
		.string "HIREDMAN FULL!!!!!!!"
data_51a99:
		.string "hired"
data_51a9f:
		.string "TOWN MAN FULL!!!!!!!\n"
data_51ab5:
		.ascii  "\xb7\xa1\x20\x9f\x71\x00"
data_51abb:
		.ascii  "\x20\x00"
data_51abd:
		.ascii  "\xa0\x93\xa4\xe5\xd1\xa1\x20\x3a"
		.ascii  "\x20\x00"
data_51ac7:
		.string "start"
data_51acd:
		.string "START"
data_51ad3:
		.string "exit"
data_51ad8:
		.string "EXIT"
data_51add:
		.ascii  "\x97\x77\xb8\x77\xb7\xa5\xa2\x89"
		.ascii  "\x00"
data_51ae6:
		.ascii  "\x8b\x71\xbb\xa1\x20\xc8\x61\xb7"
		.ascii  "\xa9\x00"
data_51af0:
		.ascii  "\xb4\x61\xb7\xa1\xc9\x51\x00"
data_51af7:
		.ascii  "\xa0\x93\x20\xa4\x61\x8e\x81\x8b"
		.ascii  "\xa1\x00"
data_51b01:
		.ascii  "\xac\x77\xb8\xf1\x00"
data_51b06:
		.string "TWN Save"
data_51b0f:
		.ascii  "\xb9\xa1\x88\xe5"
		.string " Save"
data_51b19:
		.string "Event"
data_51b1f:
		.ascii  "\xc1\xa1\x8b\xa1"
		.string " Save"
data_51b29:
		.ascii  "\x89\x41\xb7\xb1\xb7\x61\x9d\xa1"
		.ascii  "\x00"
data_51b32:
		.string ".TWN"
data_51b37:
		.string "*.twn"
data_51b3d:
		.string "TOWN SAVE"
data_51b47:
		.string ".\\cstldata\\"
data_51b53:
		.string ".twn"
data_51b58:
		.ascii   "SAVE"
		.ascii  "\xd0\x69\x9c\x81\x3f\x00"
data_51b62:
		.ascii  "\xb5\x81\x21\x00"
data_51b66:
		.ascii  "\xb4\x61\x92\x61\x21\x00"
data_51b6c:
		.ascii  "\x94\xfc\xb4\xe1\x20\xb3\x69\x9c"
		.ascii  "\x81\x3f\x00"
data_51b77:
		.string "%s write error!\n"
data_51b88:
		.string ".TEC"
data_51b8d:
		.string "*.tec"
data_51b93:
		.string "EVENT_COND SAVE"
data_51ba3:
		.string ".tec"
data_51ba8:
		.ascii  "\x2a\x00"
data_51baa:
		.string "EVENT 1"
data_51bb2:
		.string "EVENT 2"
data_51bba:
		.string "EVENT 3"
data_51bc2:
		.string "EVENT 4"
data_51bca:
		.string "EVENT 5"
data_51bd2:
		.string "EVENT 6"
data_51bda:
		.string "EVENT 7"
data_51be2:
		.string "EVENT 8"
data_51bea:
		.string "EVENT 9"
data_51bf2:
		.string "EVENT 10"
data_51bfb:
		.string "EVENT 11"
data_51c04:
		.string "EVENT 12"
data_51c0d:
		.string "EVENT 13"
data_51c16:
		.string "EVENT 14"
data_51c1f:
		.string "EVENT 15"
data_51c28:
		.string "EVENT 16"
data_51c31:
		.string "EVENT 17"
data_51c3a:
		.string "EVENT 18"
data_51c43:
		.string "EVENT 19"
data_51c4c:
		.string "EVENT 20"
data_51c55:
		.string "EVENT 21"
data_51c5e:
		.string "EVENT 22"
data_51c67:
		.string "EVENT 23"
data_51c70:
		.string "EVENT 24"
data_51c79:
		.string "EVENT 25"
data_51c82:
		.string "EVENT 26"
data_51c8b:
		.string "EVENT 27"
data_51c94:
		.string "EVENT 28"
data_51c9d:
		.string "EVENT 29"
data_51ca6:
		.string "EVENT 30"
data_51caf:
		.string "EVENT 31"
data_51cb8:
		.string "EVENT 32"
data_51cc1:
		.string "EVENT 33"
data_51cca:
		.string "EVENT 34"
data_51cd3:
		.string "EVENT 35"
data_51cdc:
		.string "EVENT 36"
data_51ce5:
		.string "EVENT 37"
data_51cee:
		.string "EVENT 38"
data_51cf7:
		.string "EVENT 39"
data_51d00:
		.string "EVENT 40"
data_51d09:
		.ascii  "\xb9\xa1\x88\xe5"
		.string " Clear:"
data_51d15:
		.ascii  "\xb5\xa1\x9f\x65\xbd\xa2\x20\xa4"
		.ascii  "\xe1\xcb\x65\x00"
data_51d21:
		.ascii  "\xb9\xa1\x88\xe5\x20\xb7\xb3\x9d"
		.ascii  "\x62\x8f\x7b\x00"
data_51d2d:
		.ascii   "X,Y "
		.ascii  "\xb6\xe1\xc3\xa1\x20\x3a\x00"
data_51d38:
		.ascii  "\x92\x81\x8a\x81\xb5\xc1\x20\x94"
		.ascii  "\x81\xd1\xc1\x3a\x00"
data_51d45:
		.ascii  "\xb4\xe1\xa6\x61\xb7\xa1\x00"
data_51d4c:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x31\xa4"
		.ascii  "\xe5\xd1\xa1\x3a\x00"
data_51d59:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x31\x88"
		.string "t  :"
data_51d66:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x32\xa4"
		.ascii  "\xe5\xd1\xa1\x3a\x00"
data_51d73:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x32\x88"
		.string "t  :"
data_51d80:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x33\xa4"
		.ascii  "\xe5\xd1\xa1\x3a\x00"
data_51d8d:
		.ascii  "\xaf\x61\xb6\xe1\xc3\xa1\x33\x88"
		.string "t  :"
data_51d9a:
		.ascii  "\x94\x81\xd1\xc1"
		.string " RETURN:"
data_51da7:
		.ascii  "\xd1\xa1\xc2\x89"
		.string " Event :"
data_51db4:
		.ascii  "\x4f\x20\x4b\x00"
data_51db8:
		.ascii   "Event Switch1"
		.ascii  "\xa4\xe5\xd1\xa1\x00"
data_51dca:
		.ascii   "Event Switch1"
		.ascii  "\x88\x74\x00"
data_51dda:
		.ascii   "Event Switch2"
		.ascii  "\xa4\xe5\xd1\xa1\x00"
data_51dec:
		.ascii   "Event Switch2"
		.ascii  "\x88\x74\x00"
data_51dfc:
		.ascii   "Event Switch3"
		.ascii  "\xa4\xe5\xd1\xa1\x00"
data_51e0e:
		.ascii   "Event Switch3"
		.ascii  "\x88\x74\x00"
data_51e1e:
		.ascii  "\x94\x81\xd1\xc1"
		.string " Return"
data_51e2a:
		.ascii  "\xd1\xa1\xc2\x89"
		.string " Event"
data_51e35:
		.ascii  "\xb7\xa1\xa5\x45\xcb\x61\xb9\xa1"
		.ascii  "\x88\xe5\x00"
data_51e40:
		.ascii  "\xb7\xa1\xa5\x45\xcb"
		.string "aEDIT"
data_51e4b:
		.ascii  "\xc1\xa1\x8b\xa1\xd1\xc1\xd0\x69"
		.ascii  "\x9c\x81\x3f\x00\x00"
data_51e58:
		.string "Failed memory allocation...\n"
data_51e75:
		.string "Memory allocation error!"
data_51e8e:
		.string "Largest available block (in bytes): %lu\n"
data_51eb7:
		.string "Maximum unlocked page allocation: %lu\n"
data_51ede:
		.string "Pages that can be allocated and locked: %lu\n"
data_51f0b:
		.string "Total linear address space including allocated pages: %lu\n"
data_51f46:
		.string "Number of free pages available: %lu\n"
data_51f6b:
		.string "Number of physical pages not in use: %lu\n"
data_51f95:
		.string "Total physical pages managed by host: %lu\n"
data_51fc0:
		.string "Free linear address space (pages): %lu\n"
data_51fe8:
		.string "Size of paging/file partition (pages): %lu\n"
data_52014:
		.string "    "
data_52019:
		.ascii  "\x20\x20\x20"
		.fill   0x4
data_52020:
		.string "player.dat"
data_5202b:
		.string "player.dat read error!"
data_52042:
		.string "EXIT"
		.ascii  "\x00"
data_52048:
		.ascii  "\x55\x50\x00"
data_5204b:
		.string "DOWN"
data_52050:
		.ascii  "\x72\x62\x00\x00"
data_52054:
		.string "cc.pcx"
data_5205b:
		.string "cc.PCX read error!"
data_5206e:
		.string "EXIT"
data_52073:
		.ascii  "\xb7\xa1\x20\xb7\xa5\xa2\x89\xb7"
		.ascii  "\x65\x20\xb8\xe5\xbb\xa2\x20\xa6"
		.ascii  "\x89\x88\x61\x21\x00"
data_52088:
		.ascii  "\x00\x00\xc0\x40"
data_5208c:
		.ascii  "\x00\x00\xf6\x42"
data_52090:
		.ascii  "\x00\x00\xf6\xc2"
data_52094:
		.ascii  "\x2a\x2e\x2a\x00"
data_52098:
		.string ".\\cstldata\\"
data_520a4:
		.ascii  "\x48\x50\x3a\x00"
data_520a8:
		.ascii  "\x4d\x50\x3a\x00"
data_520ac:
		.string "LV:     EXP:"
data_520b9:
		.string "%d / %d"
data_520c1:
		.string "%d      %d"
data_520cc:
		.string "status.pcx"
data_520d7:
		.string "STATUS.PCX read error!"
data_520ee:
		.string "EXIT"
data_520f3:
		.ascii  "\xb7\xa1\x20\xb7\xa5\xa2\x89\xb7"
		.ascii  "\x65\x20\xb8\xe5\xbb\xa2\x20\xa6"
		.ascii  "\x89\x88\x61\x21\x00"
data_52108:
		.ascii  "\x00\x00\xc0\x40"
data_5210c:
		.ascii  "\x00\x00\xf6\x42"
data_52110:
		.ascii  "\x00\x00\xf6\xc2"
data_52114:
		.ascii  "\xcc\x69\x20\x94\x61\x00"
data_5211a:
		.ascii  "\xc2\xe1\x20\xad\xa1\x00"
data_52120:
		.ascii  "\x00\x00\xc0\x40"
data_52124:
		.ascii  "\x00\x00\xf6\x42"
data_52128:
		.ascii  "\x00\x00\xf6\xc2"
data_5212c:
		.ascii  "\xa4\xe1\x9f\xa1\x94\x61\x00"
data_52133:
		.ascii  "\x00\x00\xc0\x40"
data_52137:
		.ascii  "\x00\x00\xf6\x42"
data_5213b:
		.ascii  "\x00\x00\xf6\xc2"
data_5213f:
		.string "option.pcx"
data_5214a:
		.ascii  "\x8f\x7b\x90\x89\x8c\x61\xb6\x61"
		.ascii  "\x3f\x00"
data_52154:
		.string ".\\cstldata\\MENU"
data_52164:
		.ascii  "\x48\x50\x3a\x00"
data_52168:
		.ascii  "\x4d\x50\x3a\x00"
data_5216c:
		.string "LV:     EXP:"
data_52179:
		.string "%d / %d"
data_52181:
		.string "%d      %d"
data_5218c:
		.string "equment.pcx"
data_52198:
		.string "equment.PCX read error!"
data_521b0:
		.string "EXIT"
data_521b5:
		.ascii  "\x00\x00\xc0\x40"
data_521b9:
		.ascii  "\x00\x00\xf6\x42"
data_521bd:
		.ascii  "\x00\x00\xf6\xc2"
data_521c1:
		.string "2HAND"
data_521c7:
		.ascii  "\x4a\x4f\x42\x00"
data_521cb:
		.ascii  "\x94\xe1\x20\xb7\xa1\xac\x77\x20"
		.ascii  "\xb4\x61\xb7\xa1\xc9\x51\xb7\x69"
		.ascii  "\x20\xb8\xe1\xb8\x77\xd0\x69\x20"
		.ascii  "\xae\x81\x20\xb4\xf4\xaf\x73\x93"
		.ascii  "\xa1\x94\x61\x21\x00"
data_521f0:
		.ascii  "\x53\x54\x52\x00"
data_521f4:
		.ascii  "\x49\x4e\x54\x00"
data_521f8:
		.ascii  "\x44\x45\x58\x00"
data_521fc:
		.ascii  "\x43\x48\x52\x00"
data_52200:
		.ascii  "\x4d\x50\x00\x00"
data_52204:
		.ascii  "\x72\x62\x00\x00"
data_52208:
		.string "\n drives : %d"
data_52216:
		.string "\n first_drive : %d"
data_52229:
		.string "\n current_track : %d"
data_5223e:
		.string "\n track_position : %d"
data_52254:
		.string "\n track_type : %d"
data_52266:
		.string "\n low_audio : %d"
data_52277:
		.string "\n high_audio : %d"
data_52289:
		.string "\n disk_length_min : %d"
data_522a0:
		.string "\n disk_length_sec : %d"
data_522b7:
		.string "\n disk_length_frames : %d"
data_522d1:
		.string "\n endofdisk : %d"
data_522e2:
		.string "\n upc[7] : %s"
data_522f0:
		.string "\n diskid[6] : %s"
data_52301:
		.string "\n status : %d"
data_5230f:
		.string "\n error : %d"
data_5231c:
		.string "MSCDEX Version %d.%d\n"
data_52332:
		.string "Number of CD drive = %d\n"
data_5234b:
		.string "First CD drive = %c:\n"
data_52361:
		.string "%d     %i:%i:%i     "
data_52376:
		.string "DATA\n"
data_5237c:
		.string "AUDIO\n"
data_52383:
		.string "Error Occured\n"
data_52392:
		.string "Write Protect violation (#0)\n"
data_523b0:
		.string "Unknown unit (#1)\n"
data_523c3:
		.string "Drive not Ready (#2)\n"
data_523d9:
		.string "Unknown Command (#3)\n"
data_523ef:
		.string "CRC error (#4)\n"
data_523ff:
		.string "Bad drive request structure length (#5)\n"
data_52428:
		.string "Seek error (#6)\n"
data_52439:
		.string "Unknown media (#7)\n"
data_5244d:
		.string "Sector not found (#8)\n"
data_52464:
		.string "Printer out of paper (#9)\n"
data_5247f:
		.string "Write fault (#a)\n"
data_52491:
		.string "Read fault (#b)\n"
data_524a2:
		.string "General failure (#c)\n"
data_524b8:
		.string "Reserved (#d)\n"
data_524c7:
		.string "Reserved (#e)\n"
data_524d6:
		.string "Invalid disk change (#f)\n"
data_524f0:
		.string "No error occured\n"
data_52502:
		.string "Done\n"
data_52508:
		.string "Busy\n"
data_5250e:
		.string "Done & Busy\n"
		.ascii  "\x00"
data_5251c:
		.string "Not enough memory to allocate file structures\r\n"
data_5254c:
		.string "Floating-point support not loaded\r\n"
data_52570:
		.string "RATIONAL DOS/4G"
data_52580:
		.ascii  "\x00\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x03\x03\x03\x03\x03\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x0a\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c"
		.ascii   "8888888888"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii   "XXXXXXHHHHHHHHHHHHHHHHHHHH"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x98\x98"
		.ascii  "\x98\x98\x98\x98\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x0c\x0c\x0c\x0c\x01"
		.fill   0x7b
data_5267c:
		.fill   0x8
data_52684:
		.ascii  "\x00\x00"
data_52686:
		.ascii  "\x00\x00"
data_52688:
		.fill   0x4
data_5268c:
		.ascii  "\x00"
data_5268d:
		.fill   0xb
data_52698:
		.fill   0x4
data_5269c:
		.ascii  "\x06\x02\x03\x06\x06\x06\x06\x03"
		.ascii  "\x03\x03\x04\x04\x03\x04\x02\x04"
		.ascii  "\x06\x03\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x02\x03\x04\x04\x04\x05"
		.ascii  "\x06\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x02\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x03\x06\x03\x06\x06"
		.ascii  "\x03\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x02\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x03\x02\x03\x06\x00"
data_526fc:
		.fill   0x8
		.ascii  "\x80\x80\x80\x00\x80\x00\x00\x00"
		.ascii  "\xa0\xa0"
		.fill   0x6
		.ascii  "\x50\xf8\x50\xf8\x50\x00\x00\x00"
		.ascii  "\x78\xa0\x70\x28\xf0\x00\x00\x00"
		.ascii  "\x88\x10\x20\x40\x88\x00\x00\x00"
		.ascii  "\x40\xa0\x48\x90\x68\x00\x00\x00"
		.ascii  "\x40\x80"
		.fill   0x6
		.ascii  "\x40\x80\x80\x80\x40\x00\x00\x00"
		.ascii  "\x80\x40\x40\x40\x80"
		.fill   0x4
		.ascii  "\xa0\x40\xa0"
		.fill   0x5
		.ascii  "\x40\xe0\x40"
		.fill   0x7
		.ascii  "\x40\x80"
		.fill   0x5
		.ascii  "\xe0"
		.fill   0x9
		.ascii  "\x80"
		.fill   0x4
		.ascii  "\x20\x40\x80"
		.fill   0x4
		.ascii  "\x70\x98\x88\xc8\x70\x00\x00\x00"
		.ascii  "\x40\xc0\x40\x40\x40\x00\x00\x00"
		.ascii  "\xf0\x08\x70\x80\xf8\x00\x00\x00"
		.ascii  "\xf0\x08\x70\x08\xf0\x00\x00\x00"
		.ascii  "\x38\x48\x88\xf8\x08\x00\x00\x00"
		.ascii  "\xf0\x80\xf0\x08\xf0\x00\x00\x00"
		.ascii  "\x30\x40\xf0\x88\x70\x00\x00\x00"
		.ascii  "\xf8\x10\x20\x40\x80\x00\x00\x00"
		.ascii  "\x70\x88\x70\x88\x70\x00\x00\x00"
		.ascii  "\x70\x88\x78\x08\x70"
		.fill   0x4
		.ascii  "\x80\x00\x80"
		.fill   0x5
		.ascii  "\x40\x00\x40\x80\x00\x00\x00\x20"
		.ascii  "\x40\x80\x40\x20"
		.fill   0x4
		.ascii  "\xe0\x00\xe0"
		.fill   0x4
		.ascii  "\x80\x40\x20\x40\x80\x00\x00\x00"
		.ascii  "\xe0\x10\x60\x00\x40\x00\x00\x00"
		.ascii  "\x70\x88\xb8\x80\x70\x00\x00\x00"
		.ascii  "\x70\x88\x88\xf8\x88\x00\x00\x00"
		.ascii  "\xf0\x88\xf0\x88\xf0\x00\x00\x00"
		.ascii  "\x78\x80\x80\x80\x78\x00\x00\x00"
		.ascii  "\xf0\x88\x88\x88\xf0\x00\x00\x00"
		.ascii  "\xf8\x80\xf0\x80\xf8\x00\x00\x00"
		.ascii  "\xf8\x80\xf0\x80\x80\x00\x00\x00"
		.ascii  "\x78\x80\x88\x88\x78\x00\x00\x00"
		.ascii  "\x88\x88\xf8\x88\x88\x00\x00\x00"
		.ascii  "\x80\x80\x80\x80\x80\x00\x00\x00"
		.ascii  "\x08\x08\x08\x08\xf0\x00\x00\x00"
		.ascii  "\x90\xa0\xf0\x88\x88\x00\x00\x00"
		.ascii  "\x80\x80\x80\x80\xf8\x00\x00\x00"
		.ascii  "\x88\xd8\xa8\x88\x88\x00\x00\x00"
		.ascii  "\x88\xc8\xa8\x98\x88\x00\x00\x00"
		.ascii  "\x70\x88\x88\x88\x70\x00\x00\x00"
		.ascii  "\xf0\x88\x88\xf0\x80\x00\x00\x00"
		.ascii  "\x70\x88\x88\x90\x68\x00\x00\x00"
		.ascii  "\xf0\x88\xf0\x88\x88\x00\x00\x00"
		.ascii  "\x78\x80\x70\x08\xf0\x00\x00\x00"
		.ascii  "\xf8"
		.string "    "
		.ascii  "\x00\x00\x88\x88\x88\x88\x70\x00"
		.ascii  "\x00\x00\x88\x90\xa0\xc0\x80\x00"
		.ascii  "\x00\x00\x88\x88\xa8\xd8\x88\x00"
		.ascii  "\x00\x00\x88\x50\x20\x50\x88\x00"
		.ascii  "\x00\x00\x88"
		.string "P   "
		.ascii  "\x00\x00\xf8\x10\x20\x40\xf8\x00"
		.ascii  "\x00\x00\xc0\x80\x80\x80\xc0\x00"
		.ascii  "\x00\x00\x80\x40\x20\x10\x08\x00"
		.ascii  "\x00\x00\xc0\x40\x40\x40\xc0"
		.fill   0x4
		.ascii  "\x20\x50\x88"
		.fill   0x8
		.ascii  "\xf8\x00\x00\x00\x80\x40"
		.fill   0x6
		.ascii  "\x70\x88\x88\xf8\x88\x00\x00\x00"
		.ascii  "\xf0\x88\xf0\x88\xf0\x00\x00\x00"
		.ascii  "\x78\x80\x80\x80\x78\x00\x00\x00"
		.ascii  "\xf0\x88\x88\x88\xf0\x00\x00\x00"
		.ascii  "\xf8\x80\xf0\x80\xf8\x00\x00\x00"
		.ascii  "\xf8\x80\xf0\x80\x80\x00\x00\x00"
		.ascii  "\x78\x80\x88\x88\x78\x00\x00\x00"
		.ascii  "\x88\x88\xf8\x88\x88\x00\x00\x00"
		.ascii  "\x80\x80\x80\x80\x80\x00\x00\x00"
		.ascii  "\x08\x08\x08\x08\xf0\x00\x00\x00"
		.ascii  "\x90\xa0\xf0\x88\x88\x00\x00\x00"
		.ascii  "\x80\x80\x80\x80\xf8\x00\x00\x00"
		.ascii  "\x88\xd8\xa8\x88\x88\x00\x00\x00"
		.ascii  "\x88\xc8\xa8\x98\x88\x00\x00\x00"
		.ascii  "\x70\x88\x88\x88\x70\x00\x00\x00"
		.ascii  "\xf0\x88\x88\xf0\x80\x00\x00\x00"
		.ascii  "\x70\x88\x88\x90\x68\x00\x00\x00"
		.ascii  "\xf0\x88\xf0\x88\x88\x00\x00\x00"
		.ascii  "\x78\x80\x70\x08\xf0\x00\x00\x00"
		.ascii  "\xf8"
		.string "    "
		.ascii  "\x00\x00\x88\x88\x88\x88\x70\x00"
		.ascii  "\x00\x00\x88\x90\xa0\xc0\x80\x00"
		.ascii  "\x00\x00\x88\x88\xa8\xd8\x88\x00"
		.ascii  "\x00\x00\x88\x50\x20\x50\x88\x00"
		.ascii  "\x00\x00\x88"
		.string "P   "
		.ascii  "\x00\x00\xf8\x10\x20\x40\xf8\x00"
		.ascii  "\x00\x00\x40\x40\x80\x40\x40\x00"
		.ascii  "\x00\x00\x80\x80\x00\x80\x80\x00"
		.ascii  "\x00\x00\x80\x80\x40\x80\x80"
		.fill   0x4
		.ascii  "\x40\xa8\x10"
		.fill   0xc
data_529fc:
		.ascii  "\x00"
data_529fd:
		.ascii  "\x01\x00\x00"
data_52a00:
		.string "Knight"
		.fill   0x9
		.string "Paladin"
		.fill   0x8
		.string "Death lord"
		.fill   0x5
		.string "Dragon knight"
		.ascii  "\x00\x00"
		.string "King"
		.fill   0xb
		.string "Dragon slayer"
		.ascii  "\x00\x00"
		.string "Fighter"
		.fill   0x8
		.string "Assassin"
		.fill   0x7
		.string "Gradiater"
		.fill   0x6
		.string "Valkyrie"
		.fill   0x7
		.string "Thief"
		.fill   0xa
		.string "Ranger"
		.fill   0x9
		.string "Scout"
		.fill   0xa
		.string "Archeaogist"
		.fill   0x4
		.string "Soldier"
		.fill   0x8
		.string "Lancer"
		.fill   0x9
		.string "General"
		.fill   0x8
		.string "Dark General"
		.ascii  "\x00\x00\x00"
		.string "Guard"
		.fill   0xa
		.string "Royal Guard "
		.ascii  "\x00\x00\x00"
		.string "Earthquaker"
		.fill   0x4
		.string "Archer"
		.fill   0x9
		.string "Hunter"
		.fill   0x9
		.string "Eagle"
		.fill   0xa
		.string "Sniper"
		.fill   0x9
		.string "Mage"
		.fill   0xb
		.string "Magician"
		.fill   0x7
		.string "Alchemist"
		.fill   0x6
		.string "Fire Master"
		.fill   0x4
		.string "Ice Master"
		.fill   0x5
		.string "Thunder Master"
		.ascii  "\x00"
		.string "Wizard"
		.fill   0x9
		.string "Dark Wizard"
		.fill   0x4
		.string "Monk"
		.fill   0xb
		.string "Cleric"
		.fill   0x9
		.string "Priest"
		.fill   0x9
		.string "Druid"
		.fill   0xa
		.string "Bishop"
		.fill   0x9
		.string "Warlock"
		.fill   0x8
		.string "Necromancer"
		.fill   0x4
		.string "Lich"
		.fill   0xb
		.string "Sorcerer"
		.fill   0x7
		.string "Sharman"
		.fill   0x8
		.string "Exorcist"
		.fill   0x7
		.string "Warrior"
		.fill   0x8
		.string "Berserker"
		.fill   0x6
		.string "Genoicider"
		.fill   0x5
		.string "Tusa"
		.fill   0xb
		.string "Martial Arts"
		.ascii  "\x00\x00\x00"
		.string "Musa"
		.fill   0xb
		.string "Sword Master"
		.ascii  "\x00\x00\x00"
		.string "Tamer"
		.fill   0xa
		.string "Savant"
		.fill   0x9
		.string "Killer"
		.fill   0x9
		.string "Cleaner"
		.fill   0x8
		.string "Shadow Killer"
		.ascii  "\x00\x00"
		.string "Shadow Master"
		.ascii  "\x00\x00"
		.string "Merman Soldier"
		.ascii  "\x00"
		.string "Merman Armor"
		.ascii  "\x00\x00\x00"
		.string "Merman Lord"
		.fill   0x4
		.string "Valtan Soldier"
		.ascii  "\x00"
		.string "Asult Valtan"
		.ascii  "\x00\x00\x00"
		.string "Valtan Lord"
		.fill   0x4
		.string "Goblin"
		.fill   0x9
		.string "Goblin Lord"
		.fill   0x4
		.ascii  "\x4f\x72\x63"
		.fill   0xd
		.string "Orc Lord"
		.fill   0x7
		.string "Ogre"
		.fill   0xb
		.string "Ogre Lord"
		.fill   0x6
		.string "Skeleton"
		.fill   0x7
		.string "Dark Skeleton"
		.ascii  "\x00\x00"
		.string "DTWarrior"
		.fill   0x6
		.string "Slime"
		.fill   0xa
		.string "Dark Slime"
		.fill   0x5
		.string "Ghoul"
		.fill   0xa
		.string "Zombi"
		.fill   0xa
		.ascii  "\x42\x61\x74"
		.fill   0xd
		.string "Bamp"
		.fill   0xb
		.string "Vampire"
		.fill   0x8
		.string "Vampire Lord"
		.ascii  "\x00\x00\x00"
		.string "Scorpion"
		.fill   0x7
		.string "Wyvern"
		.fill   0x9
		.string "Gargoyle"
		.fill   0x7
		.string "Fire Golem"
		.fill   0x5
		.string "Ice Golem"
		.fill   0x6
		.string "Thunder Golem"
		.ascii  "\x00\x00"
		.string "Dark Golem"
		.fill   0x5
		.ascii  "\x44\x61\x6f"
		.fill   0xd
		.string "Djinni"
		.fill   0x9
		.string "Marid"
		.fill   0xa
		.string "Salamanda"
		.fill   0x6
		.string "Kraken"
		.fill   0x9
		.string "Fire Dragon"
		.fill   0x4
		.string "Dark Dragon"
		.fill   0x4
		.string "Harpy"
		.fill   0xa
		.string "Grima"
		.fill   0xa
		.string "Brown Horse"
		.fill   0x4
		.string "White Horse"
		.fill   0x4
		.string "Green Horse"
		.fill   0x4
		.string "Black Horse"
		.fill   0x4
		.string "Blue Drake"
		.fill   0x5
		.string "Dark Drake"
		.fill   0x5
		.string "Cannon M. A."
		.ascii  "\x00\x00\x00"
		.string "I. Cannon M. A."
		.string "Arrow M. A."
		.fill   0x4
		.string "I. Arrow M. A."
		.ascii  "\x00"
		.string "Shaft M. A. "
		.ascii  "\x00\x00\x00"
		.string "I. Shaft M.A."
		.ascii  "\x00\x00"
		.string "Aero M.A."
		.fill   0x6
		.string "I. Aero M.A."
		.ascii  "\x00\x00\x00"
		.string "Abarest"
		.fill   0x8
		.string "Arondight"
		.fill   0x6
		.string "Asura"
		.fill   0xa
		.string "Dun Grnid"
		.fill   0x6
		.string "ElGenaro"
		.fill   0x7
		.string "Garius"
		.fill   0x9
		.ascii  "\x52\x61"
		.fill   0xe
		.string "Yanus"
		.fill   0xa
		.string "CarrierAbarest"
		.ascii  "\x00"
		.string "Arondight"
		.fill   0x6
		.string "Asura"
		.fill   0xa
		.string "Dun Grnid"
		.fill   0x6
		.string "ElGenaro"
		.fill   0x7
		.string "Garius"
		.fill   0x9
		.ascii  "\x52\x61"
		.fill   0xe
		.string "Yanus"
		.fill   0xa
		.string "Blue Drake"
		.fill   0x5
		.string "Dark Drake"
		.fill   0x5
		.string "F.Arondight"
		.fill   0x4
		.string "F.Asura"
		.fill   0x8
		.string "F.Dun Grnid"
		.fill   0x4
		.string "F.Ra"
		.fill   0xb
		.string "Asmodeus"
		.fill   0x7
		.string "Infantry"
		.fill   0x7
		.string "I. Infantry"
		.fill   0x4
		.string "Cavalry"
		.fill   0x8
		.string "I. Cavalry"
		.fill   0x5
		.string "Spear"
		.fill   0xa
		.string "I. Spear"
		.fill   0x7
		.ascii  "\x42\x6f\x77"
		.fill   0xd
		.string "I. Bow"
		.fill   0x9
		.string "Magic"
		.fill   0xa
		.string "I. Magic"
		.fill   0x7
		.string "Canon"
		.fill   0xa
		.string "I. Canon"
		.fill   0x7
		.string "Galley Ship"
		.fill   0x4
		.string "I. Galley"
		.fill   0x6
		.string "Sailer"
		.fill   0x9
		.string "I. Sailer"
		.fill   0x6
		.string "Ironclad Ship"
		.ascii  "\x00\x00"
		.string "BattleShip"
		.fill   0x5
		.string "I. BattleShip"
		.ascii  "\x00\x00"
		.string "Air Fighter"
		.fill   0x4
		.string "I. Air Fighter"
		.ascii  "\x00"
		.string "Air Advanced"
		.ascii  "\x00\x00\x00"
		.string "I. Air Advanced"
		.string "Air Battler"
		.fill   0x4
		.string "I, Air Battler"
		.ascii  "\x00"
		.string "Air Pirate"
		.fill   0x5
		.string "Ace Pirate"
		.fill   0x5
		.string "Canon"
		.fill   0xa
		.string "Gate"
		.fill   0xb
		.string "Oddy Guardian"
		.ascii  "\x00\x00\x47\x6f\x64"
		.fill   0x2d
data_53460:
		.long   data_50438
		.long   data_50444
		.long   data_50450
		.long   data_5045c
		.long   data_50468
		.long   data_50475
		.long   data_50482
		.long   data_5048e
		.long   data_5049b
		.long   data_504a8
		.long   data_504b4
		.long   data_504c1
		.long   data_504cd
		.long   data_504d7
		.long   data_504e2
		.long   data_504ed
		.long   data_504f7
		.long   data_50501
		.long   data_5050c
		.long   data_50518
		.long   data_50524
		.long   data_50531
		.long   data_5053e
		.long   data_5054b
		.long   data_50557
		.long   data_50563
		.long   data_5056f
		.long   data_5057a
		.long   data_50587
		.long   data_50593
		.long   data_5059d
		.long   data_505a8
		.long   data_505b3
		.long   data_505bf
		.long   data_505ca
		.long   data_505d6
		.long   data_505e2
		.long   data_505ee
		.long   data_505fa
		.long   data_50605
		.long   data_50611
		.long   data_5061d
		.long   data_50627
		.long   data_50632
		.long   data_5063d
		.long   data_50648
		.long   data_50654
		.long   data_5065e
		.long   data_50668
		.long   data_50675
		.long   data_50682
		.long   data_5068f
		.long   data_5069c
		.long   data_506a8
		.long   data_506b4
		.long   data_506c0
		.long   data_506cc
		.long   data_506d7
		.long   data_506e2
		.long   data_506ee
		.long   data_506fa
		.long   data_50703
		.long   data_5070e
		.long   data_50719
		.long   data_50726
		.long   data_50732
		.long   data_5073e
		.long   data_50748
		.long   data_50753
		.long   data_50760
		.long   data_5076d
		.long   data_50779
		.long   data_50785
		.long   data_50791
		.long   data_5079d
		.long   data_507aa
		.long   data_507b3
		.long   data_507c0
		.long   data_507cd
		.long   data_507da
		.long   data_507e6
		.long   data_507f3
		.long   data_507ff
		.long   data_5080c
		.long   data_50819
		.long   data_50825
		.long   data_50832
		.long   data_5083d
		.long   data_5084a
		.long   data_50856
		.long   data_50863
		.long   data_5086d
		.long   data_5087a
		.long   data_50886
		.long   data_50893
		.long   data_5089f
		.long   data_508ab
		.long   data_508b7
		.long   data_508c2
		.long   data_508cd
		.long   data_508d7
		.long   data_508e3
		.long   data_508f0
		.long   data_508fd
		.long   data_50909
		.long   data_50912
		.long   data_5091e
		.long   data_5092a
		.long   data_50936
		.long   data_50942
		.long   data_5094e
		.long   data_5095b
		.long   data_50967
		.long   data_50973
		.long   data_5097f
		.long   data_5098a
		.long   data_50995
		.long   data_509a0
		.long   data_509ac
		.long   data_509b5
		.long   data_509c1
		.long   data_509ce
		.long   data_509da
		.long   data_509e7
		.long   data_509f4
		.long   data_509ff
		.long   data_50a0c
		.long   data_50a19
		.long   data_50a26
		.long   data_50a31
		.long   data_50a3c
		.long   data_50a47
		.long   data_50a52
		.long   data_50a5f
		.long   data_50a6c
		.long   data_50a79
		.long   data_50a80
		.long   data_50a89
		.long   data_50a92
		.long   data_50a9b
		.long   data_50aa4
		.long   data_50aaf
		.long   data_50ab9
		.long   data_50ac3
		.long   data_50acd
		.long   data_50ad7
		.long   data_50ae3
		.long   data_50af0
		.long   data_50afd
		.long   data_50b0a
		.long   data_50b17
		.long   data_50b22
		.long   data_50b30
		.long   data_50b3e
		.long   data_50b4c
		.long   data_50b5a
		.long   data_50b67
		.long   data_50b74
		.long   data_50b81
		.long   data_50b8e
		.long   data_50b9a
		.long   data_50ba6
		.long   data_50bb2
		.long   data_50bbe
		.long   data_50bc9
		.long   data_50bd4
		.long   data_50bdf
		.long   data_50bea
		.long   data_50bf7
		.long   data_50c04
		.long   data_50c11
		.long   data_50c1e
		.long   data_50c2a
		.long   data_50c36
		.long   data_50c42
		.long   data_50c4e
		.long   data_50c59
		.long   data_50c64
		.long   data_50c6f
		.long   data_50c7a
		.long   data_50c87
		.long   data_50c94
		.long   data_50ca1
		.long   data_50cae
		.long   data_50cba
		.long   data_50cc6
		.long   data_50cd2
		.long   data_50cde
		.long   data_50ce8
		.long   data_50cf3
		.long   data_50cfe
		.long   data_50d08
		.long   data_50d13
		.long   data_50d1d
		.long   data_50d28
		.long   data_50d34
		.long   data_50d3e
		.long   data_50d48
		.long   data_50d52
		.long   data_50d5c
		.long   data_50d66
		.long   data_50d72
		.long   data_50d7b
		.long   data_50d85
		.long   data_50d90
		.long   data_50d9d
		.long   data_50da6
		.long   data_50db1
		.long   data_50dbe
		.long   data_50dcb
		.long   data_50dd7
		.long   data_50de2
		.long   data_50ded
		.long   data_50df6
		.long   data_50e00
		.long   data_50e0d
		.long   data_50e1a
		.long   data_50e24
		.long   data_50e2e
		.long   data_50e38
		.long   data_50e42
		.long   data_50e4e
data_537d8:
		.ascii  "\x3c\x00"
data_537da:
		.ascii  "\x28\x00"
data_537dc:
		.ascii  "\x46\x00\x0b\x00\x50\x00\x3c\x00"
		.ascii  "\x55\x00\x0c\x00\x64\x00\x3c\x00"
		.ascii  "\x5a\x00\x0a\x00\x4b\x00\x46\x00"
		.ascii  "\x5f\x00\x0a\x00\x5a\x00\x3c\x00"
		.ascii  "\x55\x00\x0b\x00\x55\x00\x64\x00"
		.ascii  "\x64\x00\x0c\x00\x1e\x00\x00\x00"
		.ascii  "\x28\x00\x08\x00\x28\x00\x00\x00"
		.ascii  "\x32\x00\x09\x00\x28\x00\x00\x00"
		.ascii  "\x37\x00\x08\x00\x32\x00\x1e\x00"
		.ascii  "\x3c\x00\x08"
		.fill   0x5
		.ascii  "\x14\x00\x05\x00\x0a\x00\x00\x00"
		.ascii  "\x1e\x00\x06\x00\x14\x00\x00\x00"
		.ascii  "\x28\x00\x06\x00\x1e\x00\x0a\x00"
		.ascii  "\x2d\x00\x06\x00\x28\x00\x00\x00"
		.ascii  "\x32\x00\x0b\x00\x37\x00\x00\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x0d\x00\x64\x00\x00\x00"
		.ascii  "\x50\x00\x0d\x00\x1e\x00\x32\x00"
		.ascii  "\x23\x00\x09\x00\x28\x00\x3c\x00"
		.ascii  "\x32\x00\x0a\x00\x32\x00\x4b\x00"
		.ascii  "\x37\x00\x0a\x00\x0a\x00\x00\x00"
		.ascii  "\x14\x00\x07\x00\x0f\x00\x00\x00"
		.ascii  "\x1e\x00\x08\x00\x19\x00\x00\x00"
		.ascii  "\x28\x00\x08\x00\x1e\x00\x00\x00"
		.ascii  "\x28\x00\x07\x00\x00\x00\x46\x00"
		.ascii  "\x14\x00\x06\x00\x00\x00\x4b\x00"
		.ascii  "\x14\x00\x05\x00\x0a\x00\x50\x00"
		.ascii  "\x19\x00\x05\x00\x00\x00\x3c\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x3c\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x3c\x00"
		.ascii  "\x19\x00\x06\x00\x00\x00\x5a\x00"
		.ascii  "\x1e\x00\x05\x00\x0a\x00\x64\x00"
		.ascii  "\x32\x00\x07\x00\x0f\x00\x50\x00"
		.ascii  "\x14\x00\x06\x00\x14\x00\x55\x00"
		.ascii  "\x14\x00\x05\x00\x1e\x00\x5a\x00"
		.ascii  "\x19\x00\x05\x00\x14\x00\x50\x00"
		.ascii  "\x1e\x00\x06\x00\x28\x00\x64\x00"
		.ascii  "\x1e\x00\x05\x00\x00\x00\x3c\x00"
		.ascii  "\x23\x00\x05\x00\x00\x00\x46\x00"
		.ascii  "\x2d\x00\x06\x00\x00\x00\x5a\x00"
		.ascii  "\x37\x00\x06\x00\x00\x00\x32\x00"
		.ascii  "\x14\x00\x05\x00\x00\x00\x37\x00"
		.ascii  "\x19\x00\x05\x00\x00\x00\x41\x00"
		.ascii  "\x23\x00\x06\x00\x32\x00\x3c\x00"
		.ascii  "\x32\x00\x0d\x00\x3c\x00\x41\x00"
		.ascii  "\x3c\x00\x0e\x00\x46\x00\x46\x00"
		.ascii  "\x4b\x00\x0f\x00\x23\x00\x00\x00"
		.ascii  "\x46\x00\x0d\x00\x37\x00\x00\x00"
		.ascii  "\x50\x00\x0c\x00\x14\x00\x00\x00"
		.ascii  "\x1e\x00\x07\x00\x2d\x00\x00\x00"
		.ascii  "\x3c\x00\x08\x00\x14\x00\x00\x00"
		.ascii  "\x41\x00\x0c\x00\x00\x00\x64\x00"
		.ascii  "\x23\x00\x05"
		.fill   0x5
		.ascii  "\x19\x00\x05\x00\x0a\x00\x0a\x00"
		.ascii  "\x1e\x00\x05\x00\x1e\x00\x14\x00"
		.ascii  "\x23\x00\x05\x00\x32\x00\x32\x00"
		.ascii  "\x28\x00\x05\x00\x23\x00\x28\x00"
		.ascii  "\x37\x00\x0c\x00\x28\x00\x28\x00"
		.ascii  "\x41\x00\x0d\x00\x32\x00\x28\x00"
		.ascii  "\x4b\x00\x0d\x00\x14\x00\x00\x00"
		.ascii  "\x23\x00\x06\x00\x19\x00\x00\x00"
		.ascii  "\x2d\x00\x06\x00\x23\x00\x00\x00"
		.ascii  "\x37\x00\x07\x00\x14\x00\x00\x00"
		.ascii  "\x32\x00\x0a\x00\x23\x00\x1e\x00"
		.ascii  "\x32\x00\x0a\x00\x28\x00\x00\x00"
		.ascii  "\x28\x00\x0b\x00\x37\x00\x1e\x00"
		.ascii  "\x3c\x00\x0b\x00\x46\x00\x00\x00"
		.ascii  "\x28\x00\x0c\x00\x5f\x00\x1e\x00"
		.ascii  "\x28\x00\x0c\x00\x28\x00\x32\x00"
		.ascii  "\x2d\x00\x09\x00\x32\x00\x32\x00"
		.ascii  "\x37\x00\x09\x00\x5a\x00\x32\x00"
		.ascii  "\x46\x00\x0a\x00\x50\x00\x00\x00"
		.ascii  "\x1e\x00\x0f\x00\x64\x00\x00\x00"
		.ascii  "\x32\x00\x0f"
		.fill   0x5
		.ascii  "\x2d\x00\x0c\x00\x1e\x00\x1e\x00"
		.ascii  "\x28\x00\x0d\x00\x0a\x00\x00\x00"
		.ascii  "\x14\x00\x06\x00\x0f\x00\x00\x00"
		.ascii  "\x1e\x00\x06\x00\x1e\x00\x3c\x00"
		.ascii  "\x2d\x00\x0b\x00\x32\x00\x3c\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x00\x00"
		.ascii  "\x41\x00\x0c\x00\x55\x00\x00\x00"
		.ascii  "\x50\x00\x0d\x00\x28\x00\x28\x00"
		.ascii  "\x2d\x00\x08\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x32\x00"
		.ascii  "\x2d\x00\x0e\x00\x64\x00\x50\x00"
		.ascii  "\x32\x00\x0e\x00\x64\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x28\x00\x3c\x00"
		.ascii  "\x37\x00\x08\x00\x23\x00\x3c\x00"
		.ascii  "\x41\x00\x0a\x00\x46\x00\x3c\x00"
		.ascii  "\x2d\x00\x0b\x00\x32\x00\x32\x00"
		.ascii  "\x28\x00\x0f\x00\x64\x00\x32\x00"
		.ascii  "\x3c\x00\x0f\x00\x64\x00\x32\x00"
		.ascii  "\x3c\x00\x11\x00\x1e\x00\x14\x00"
		.ascii  "\x28\x00\x0b\x00\x64\x00\x64\x00"
		.ascii  "\x64\x00\x06\x00\x32\x00\x00\x00"
		.ascii  "\x1e\x00\x0b\x00\x46\x00\x1e\x00"
		.ascii  "\x32\x00\x0b\x00\x32\x00\x00\x00"
		.ascii  "\x1e\x00\x0b\x00\x46\x00\x1e\x00"
		.ascii  "\x32\x00\x0b\x00\x28\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0e\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0e\x00\x28\x00\x64\x00"
		.ascii  "\x28\x00\x0d\x00\x28\x00\x64\x00"
		.ascii  "\x28\x00\x0d\x00\x32\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x32\x00\x64\x00"
		.ascii  "\x14\x00\x0f\x00\x1e\x00\x64\x00"
		.ascii  "\x46\x00\x0b\x00\x1e\x00\x64\x00"
		.ascii  "\x46\x00\x0b\x00\xaa\x00\x64\x00"
		.ascii  "\x46\x00\x0c\x00\xc8\x00\x64\x00"
		.ascii  "\x3c\x00\x0f\x00\xb4\x00\x64\x00"
		.ascii  "\x37\x00\x0e\x00\x6e\x00\x64\x00"
		.ascii  "\x41\x00\x0d\x00\x78\x00\x64\x00"
		.ascii  "\x32\x00\x0d\x00\xa0\x00\x64\x00"
		.ascii  "\x46\x00\x0e\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0e\x00\x96\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\x46\x00\x64\x00"
		.ascii  "\x1e\x00\x0f\x00\xaa\x00\x64\x00"
		.ascii  "\x46\x00\x0c\x00\xc8\x00\x64\x00"
		.ascii  "\x3c\x00\x0f\x00\xb4\x00\x64\x00"
		.ascii  "\x37\x00\x0e\x00\x6e\x00\x64\x00"
		.ascii  "\x41\x00\x0d\x00\x78\x00\x64\x00"
		.ascii  "\x32\x00\x0d\x00\xa0\x00\x64\x00"
		.ascii  "\x46\x00\x0e\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0e\x00\x96\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\x28\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\x3c\x00\x1e\x00"
		.ascii  "\x28\x00\x09\x00\xc8\x00\x64\x00"
		.ascii  "\x50\x00\x0f\x00\xaa\x00\x64\x00"
		.ascii  "\x4b\x00\x0d\x00\x8c\x00\x64\x00"
		.ascii  "\x3c\x00\x0c\x00\xaa\x00\x64\x00"
		.ascii  "\x50\x00\x0f\x00\xc8\x00\x64\x00"
		.ascii  "\x64\x00\x0d\x00\x37"
		.fill   0x5
		.ascii  "\x0c\x00\x2d"
		.fill   0x5
		.ascii  "\x0c\x00\x46\x00\x1e\x00\x00\x00"
		.ascii  "\x0a\x00\x4b\x00\x1e\x00\x00\x00"
		.ascii  "\x09\x00\x28\x00\x0a\x00\x00\x00"
		.ascii  "\x0d\x00\x28\x00\x0a\x00\x00\x00"
		.ascii  "\x0d\x00\x1e"
		.fill   0x5
		.ascii  "\x08\x00\x23"
		.fill   0x5
		.ascii  "\x08\x00\x0a\x00\x32\x00\x00\x00"
		.ascii  "\x07\x00\x0f\x00\x32\x00\x00\x00"
		.ascii  "\x07\x00\x14\x00\x32\x00\x00\x00"
		.ascii  "\x0f\x00\x1e\x00\x32\x00\x00\x00"
		.ascii  "\x0f\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x2d\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x37\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x64\x00\x64\x00\x00\x00"
		.ascii  "\x0c\x00\x50\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x5a\x00\x64\x00\x00\x00"
		.ascii  "\x0e\x00\x14\x00\x64\x00\x00\x00"
		.ascii  "\x07\x00\x1e\x00\x64\x00\x00\x00"
		.ascii  "\x08\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0a\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x09\x00\x32\x00\x64\x00\x00\x00"
		.ascii  "\x0e\x00\x3c\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x0a\x00\x64\x00\x00\x00"
		.ascii  "\x05\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0d\x00\x28\x00\x64\x00\x00\x00"
		.ascii  "\x0f\x00\x37\x00\x64\x00\x00\x00"
		.ascii  "\x0f\x00\xc8\x00\x64\x00\x64\x00"
		.ascii  "\x0f\x00\xc8\x00\x64\x00\x64\x00"
		.ascii  "\x0a"
		.fill   0x9
		.ascii  "\x0f"
data_53d09:
		.ascii  "\x02"
data_53d0a:
		.ascii  "\x00"
data_53d0b:
		.ascii  "\x0d"
data_53d0c:
		.ascii  "\x09\x00\x08\x00\xff\xff\xff\xff"
		.ascii  "\x01\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x01\x10\x12\xff\xff\xff\xff\xff"
		.ascii  "\x01\x10\x10\x10\x12\xff\xff\xff"
		.ascii  "\x01\x01\x10\x10\x10\x10\x12\xff"
		.ascii  "\x01\x10\x10\x10\x10\x10\x10\x10"
		.ascii  "\x12\xff\x01\x10\x10\x10\x10\x10"
		.ascii  "\x12\xff\xff\x01\x10\x10\x10\x10"
		.ascii  "\x10\x12\xff\xff\x01\x10\x10\x10"
		.ascii  "\x10\x10\x12\xff"
		.fill   0x18
		.ascii  "\x09\x00\x08\x00\xff\xff\xff\xff"
		.ascii  "\x13\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x13\x15\x16\xff\xff\xff\xff\xff"
		.ascii  "\x13\x15\x15\x15\x16\xff\xff\xff"
		.ascii  "\x13\x15\x15\x15\x15\x15\x16\xff"
		.ascii  "\x13\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x16\xff\x13\x15\x15\x15\x15\x15"
		.ascii  "\x16\xff\xff\x13\x15\x15\x15\x15"
		.ascii  "\x15\x16\xff\xff\x13\x15\x15\x15"
		.ascii  "\x15\x15\x16\xff"
		.fill   0x18
		.ascii  "\x09\x00\x08\x00\xff\x01\x10\x10"
		.ascii  "\x10\x10\x10\x12\xff\xff\x01\x10"
		.ascii  "\x10\x10\x10\x10\x12\xff\xff\x01"
		.ascii  "\x10\x10\x10\x10\x10\x12\xff\x01"
		.ascii  "\x10\x10\x10\x10\x10\x10\x10\x12"
		.ascii  "\xff\x01\x01\x10\x10\x10\x10\x12"
		.ascii  "\xff\xff\xff\x01\x10\x10\x10\x12"
		.ascii  "\xff\xff\xff\xff\xff\x01\x10\x12"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x01"
		.ascii  "\xff\xff\xff\xff"
		.fill   0x18
		.ascii  "\x09\x00\x08\x00\xff\x13\x15\x15"
		.ascii  "\x15\x15\x15\x16\xff\xff\x13\x15"
		.ascii  "\x15\x15\x15\x15\x16\xff\xff\x13"
		.ascii  "\x15\x15\x15\x15\x15\x16\xff\x13"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x16"
		.ascii  "\xff\x13\x15\x15\x15\x15\x15\x16"
		.ascii  "\xff\xff\xff\x13\x15\x15\x15\x16"
		.ascii  "\xff\xff\xff\xff\xff\x13\x15\x16"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x13"
		.ascii  "\xff\xff\xff\xff"
		.fill   0x18
		.ascii  "\x08\x00\x09\x00\xff\xff\xff\xff"
		.ascii  "\x01\xff\xff\xff\xff\xff\xff\x01"
		.ascii  "\x10\x01\x01\x01\xff\xff\x01\x01"
		.ascii  "\x10\x10\x10\x10\xff\x01\x10\x10"
		.ascii  "\x10\x10\x10\x10\x01\x10\x10\x10"
		.ascii  "\x10\x10\x10\x10\xff\x12\x10\x10"
		.ascii  "\x10\x10\x10\x10\xff\xff\x12\x10"
		.ascii  "\x10\x10\x10\x10\xff\xff\xff\x12"
		.ascii  "\x10\x12\x12\x12\xff\xff\xff\xff"
		.ascii  "\x12\xff\xff\xff"
		.fill   0x18
		.ascii  "\x08\x00\x09\x00\xff\xff\xff\xff"
		.ascii  "\x13\xff\xff\xff\xff\xff\xff\x13"
		.ascii  "\x15\x13\x13\x13\xff\xff\x13\x15"
		.ascii  "\x15\x15\x15\x15\xff\x13\x15\x15"
		.ascii  "\x15\x15\x15\x15\x13\x15\x15\x15"
		.ascii  "\x15\x15\x15\x15\xff\x16\x15\x15"
		.ascii  "\x15\x15\x15\x15\xff\xff\x16\x15"
		.ascii  "\x15\x15\x15\x15\xff\xff\xff\x16"
		.ascii  "\x15\x16\x16\x16\xff\xff\xff\xff"
		.ascii  "\x16\xff\xff\xff"
		.fill   0x18
		.ascii  "\x08\x00\x09\x00\xff\xff\xff\x01"
		.ascii  "\xff\xff\xff\xff\x01\x01\x01\x10"
		.ascii  "\x01\xff\xff\xff\x10\x10\x10\x10"
		.ascii  "\x01\x01\xff\xff\x10\x10\x10\x10"
		.ascii  "\x10\x10\x01\xff\x10\x10\x10\x10"
		.ascii  "\x10\x10\x10\x01\x10\x10\x10\x10"
		.ascii  "\x10\x10\x12\xff\x10\x10\x10\x10"
		.ascii  "\x10\x12\xff\xff\x12\x12\x12\x10"
		.ascii  "\x12\xff\xff\xff\xff\xff\xff\x12"
		.ascii  "\xff\xff\xff\xff"
		.fill   0x18
		.ascii  "\x08\x00\x09\x00\xff\xff\xff\x13"
		.ascii  "\xff\xff\xff\xff\x13\x13\x13\x15"
		.ascii  "\x13\xff\xff\xff\x15\x15\x15\x15"
		.ascii  "\x15\x13\xff\xff\x15\x15\x15\x15"
		.ascii  "\x15\x15\x13\xff\x15\x15\x15\x15"
		.ascii  "\x15\x15\x15\x13\x15\x15\x15\x15"
		.ascii  "\x15\x15\x16\xff\x15\x15\x15\x15"
		.ascii  "\x15\x16\xff\xff\x16\x16\x16\x15"
		.ascii  "\x16\xff\xff\xff\xff\xff\xff\x16"
		.ascii  "\xff\xff\xff\xff"
		.fill   0x16
data_5402a:
		.ascii  "\x00\x00"
data_5402c:
		.fill   0x4
data_54030:
		.fill   0x4
data_54034:
		.fill   0x4
data_54038:
		.fill   0x4
cdrom_starting_letter: /* 5403c */
		.fill   0x4
data_54040:
		.ascii  "\x00"
data_54041:
		.ascii  "\x00"
data_54042:
		.fill   0x7
		.ascii  "\x6c\x00\x40\x00"
data_5404d:
		.ascii  "\x00\x00"
data_5404f:
		.ascii  "\x00\x00"
data_54051:
		.ascii  "\x96\x00"
data_54053:
		.ascii  "\x64\x00"
data_54055:
		.ascii  "\x96\x00"
data_54057:
		.ascii  "\x64\x00"
data_54059:
		.ascii  "\x00\x00"
data_5405b:
		.ascii  "\x0e\x00\x0e\x00\x07\x06\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x01\x06\xff\xff\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x04\x02\x06\x07\x05\x04\x06"
		.ascii  "\x06\xff\xff\xff\xff\xff\xff\x07"
		.ascii  "\x05\x03\x06\x03\x05\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x05"
		.ascii  "\x02\x05\x02\x03\x04\x07\xff\xff"
		.ascii  "\xff\xff\xff\xff\x07\x07\x04\x06"
		.ascii  "\x01\x02\x05\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x07\x04\x07\x06\x04\x05"
		.ascii  "\x04\x06\x07\xff\xff\xff\xff\xff"
		.ascii  "\x07\x03\x04\x07\x07\x04\x03\x03"
		.ascii  "\x04\x07\x07\xff\xff\xff\xff\x07"
		.ascii  "\x07\x07\x06\x04\x02\x01\x01\x03"
		.ascii  "\x05\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x05\x02\x03\x05\x00\x07\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x06"
		.ascii  "\x04\x05\x00\x07\x06\x07\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x07\x05\x00"
		.ascii  "\x07\x06\x05\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x00\x06\x00\x07\x07"
		.ascii  "\x00\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff"
		.fill   0x4
		.ascii  "\xff\xff"
data_54123:
		.ascii  "\x0e\x00\x0c\x00\xff\x06\x06\xff"
		.ascii  "\xff\x07\x06\x07\xff\xff\xff\xff"
		.ascii  "\xff\xff\x06\x04\x03\x06\x07\x05"
		.ascii  "\x04\x06\x06\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x05\x02\x06\x03\x05\x02"
		.ascii  "\x03\x06\xff\xff\xff\xff\xff\xff"
		.ascii  "\x07\x06\x03\x05\x02\x02\x03\x06"
		.ascii  "\xff\xff\xff\xff\xff\xff\x07\x07"
		.ascii  "\x06\x05\x02\x04\x05\x04\x06\x07"
		.ascii  "\xff\xff\xff\xff\x07\x04\x07\x07"
		.ascii  "\x06\x06\x03\x01\x03\x04\x06\x07"
		.ascii  "\xff\xff\x07\x03\x04\x06\x07\x05"
		.ascii  "\x01\x03\x05\x07\x00\x00\xff\xff"
		.ascii  "\xff\x07\x07\x07\x07\x06\x02\x06"
		.ascii  "\x00\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x07\x04\x00\x00\x07"
		.ascii  "\x06\x07\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\x06\x00\x07\x06\x05\x00"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x00\x00\x07\x07\x00\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x00"
		.ascii  "\x00\x00\xff\xff"
data_541cf:
		.fill   0x1f6
		.ascii  "\x0a\x00"
data_543c7:
		.ascii  "\x00\x00\x0a"
data_543ca:
		.ascii  "\x00"
data_543cb:
		.ascii  "\x01"
data_543cc:
		.ascii  "\x00\x00"
data_543ce:
		.ascii  "\x00\x00"
data_543d0:
		.ascii  "\x48\x00\x00\x00\x4b\x00\x00\x00"
		.ascii  "\x4d\x00\x00\x00\x50"
		.fill   0x5
data_543e2:
		.ascii  "\x00\x00"
data_543e4:
		.ascii  "\x4b\x00\x00\x00\x48\x00\x00\x00"
		.ascii  "\x50\x00\x00\x00\x4d"
		.fill   0x5
data_543f6:
		.ascii  "\x00\x00"
data_543f8:
		.ascii  "\x4d\x00\x00\x00\x48\x00\x00\x00"
		.ascii  "\x50\x00\x00\x00\x4b"
		.fill   0x5
data_5440a:
		.ascii  "\x00\x00"
data_5440c:
		.ascii  "\x50\x00\x00\x00\x4d\x00\x00\x00"
		.ascii  "\x4b\x00\x00\x00\x48"
		.fill   0x5
data_5441e:
		.ascii  "\x00\x00"
data_54420:
		.fill   0xaa
data_544ca:
		.ascii  "\xff\xff"
data_544cc:
		.ascii  "\xff\xff"
data_544ce:
		.ascii  "\x00"
data_544cf:
		.fill   0x155
data_54624:
		.ascii  "\x00\x00"
data_54626:
		.ascii  "\x00\x00"
data_54628:
		.ascii  "\x00\x00"
data_5462a:
		.ascii  "\x00\x00"
data_5462c:
		.ascii  "\x00\x00"
data_5462e:
		.ascii  "\x00\x00"
data_54630:
		.ascii  "\xa4\x01\x00\x00\x05\x00\x03\x0e"
		.ascii  "\x0d\x0b\x0e\x07\x05\x03\x06\x07"
		.ascii  "\x06\x05\x0e\x0d\x0e\x0c\x0b\x0d"
		.ascii  "\x0e\x0c\x05\x00\x00\x00\x27\x01"
		.ascii  "\x05\x01\x03\x0e\x0d\x0c\x0d\x07"
		.ascii  "\x05\x03\x06\x07\x0e\x0e\x0d\x0c"
		.ascii  "\x0e\x0c\x0d\x0c\x0d\x0e\x0e\x04"
		.ascii  "\x00\x00\x00\x27\x01\x05\x01\x03"
		.ascii  "\x0c\x0e\x0d\x0c\x07\x05\x03\x06"
		.ascii  "\x07\x0d\x0b\x0c\x0e\x0d\x0b\x0e"
		.ascii  "\x0c\x0c\x0d\x0e\x04\x00\x00\x00"
		.ascii  "\x27\x01\x05\x00\x03\x05\x0c\x0d"
		.ascii  "\x0e\x07\x05\x04\x06\x07\x0d\x0d"
		.ascii  "\x0e\x0e\x0c\x0b\x0d\x0e\x0e\x0e"
		.ascii  "\x05\x00\x00\x00\x27\x01\x04\x01"
		.ascii  "\x03\x04\x0e\x0d\x0c\x07\x05\x04"
		.ascii  "\x06\x07\x0e\x0e\x06\x0e\x0c\x0d"
		.ascii  "\x0e\x08\x00\x00\x00\x27\x01\x04"
		.ascii  "\x00\x03\x0d\x0d\x0c\x0d\x07\x05"
		.ascii  "\x03\x06\x07\x06\x06\x0d\x0d\x0b"
		.ascii  "\x0e\x09\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x03\x0e\x0b\x0d\x06\x07\x05"
		.ascii  "\x03\x06\x07\x06\x05\x0e\x0d\x0b"
		.ascii  "\x0d\x0e\x0e\x07\x00\x00\x00\x27"
		.ascii  "\x01\x04\x03\x0d\x0c\x0d\x06\x05"
		.ascii  "\x07\x05\x03\x06\x07\x06\x05\x0e"
		.ascii  "\x0c\x0a\x0b\x0c\x0d\x0e\x06\x00"
		.ascii  "\x00\x00\x27\x01\x04\x03\x0e\x0b"
		.ascii  "\x0e\x05\x05\x07\x05\x03\x06\x07"
		.ascii  "\x06\x05\x0e\x0d\x0c\x0a\x0b\x0c"
		.ascii  "\x0e\x06\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x0d\x0c\x0d\x0e\x04\x07\x05"
		.ascii  "\x03\x06\x07\x06\x05\x05\x0e\x0d"
		.ascii  "\x0c\x0d\x0e\x07\x00\x00\x00\x27"
		.ascii  "\x01\x04\x01\x03\x0d\x0c\x0e\x0d"
		.ascii  "\x07\x05\x03\x06\x07\x06\x05\x05"
		.ascii  "\x06\x0e\x0e\x0e\x08\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x0e\x0b\x0d"
		.ascii  "\x0e\x0e\x05\x04\x06\x07\x06\x0e"
		.ascii  "\x0e\x0e\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x0e\x0c\x0a\x0c\x0d"
		.ascii  "\x0e\x0e\x0e\x06\x07\x0e\x0e\x0d"
		.ascii  "\x0e\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x0b\x0a\x0b\x0e\x0c\x0b"
		.ascii  "\x0c\x0d\x0e\x0e\x0d\x0c\x0b\x0d"
		.ascii  "\x0e\x01\x00\x00\x02\x0e\x0e\x07"
		.ascii  "\x00\x00\x00\x27\x01\x04\x03\x0c"
		.ascii  "\x0c\x0d\x0e\x0e\x0c\x0b\x0a\x0a"
		.ascii  "\x0a\x0b\x0a\x0c\x0e\x0c\x0e\x0d"
		.ascii  "\x0c\x0e\x06\x00\x00\x00\x27\x01"
		.ascii  "\x04\x03\x0e\x0e\x0c\x05\x05\x0e"
		.ascii  "\x0e\x0d\x0d\x0b\x0a\x0b\x0d\x0e"
		.ascii  "\x0d\x0d\x0b\x0c\x0e\x06\x00\x00"
		.ascii  "\x00\x27\x01\x04\x03\x04\x05\x05"
		.ascii  "\x05\x05\x07\x06\x0e\x0e\x0d\x0c"
		.ascii  "\x0a\x0a\x0b\x0b\x0b\x0c\x0d\x0e"
		.ascii  "\x06\x00\x00\x00\x27\x01\x04\x02"
		.ascii  "\x04\x05\x05\x05\x04\x07\x06\x06"
		.ascii  "\x07\x0e\x0e\x0d\x0c\x0a\x0e\x0d"
		.ascii  "\x0c\x0e\x07\x00\x00\x00\x27\x01"
		.ascii  "\x04\x01\x03\x04\x04\x04\x04\x07"
		.ascii  "\x06\x05\x07\x07\x06\x0e\x0d\x0b"
		.ascii  "\x0c\x0e\x0e\x08\x00\x00\x00\x27"
		.ascii  "\x01\x04\x01\x03\x04\x04\x04\x04"
		.ascii  "\x07\x05\x05\x07\x07\x05\x06\x0e"
		.ascii  "\x0c\x0b\x0d\x0e\x08\x00\x00\x00"
		.ascii  "\x27\x01\x04\x02\x0e\x0e\x05\x04"
		.ascii  "\x04\x07\x05\x04\x06\x07\x05\x05"
		.ascii  "\x0e\x0d\x0a\x0c\x0d\x0e\x07\x00"
		.ascii  "\x00\x00\x27\x01\x04\x03\x0d\x0d"
		.ascii  "\x0e\x04\x04\x07\x05\x04\x06\x07"
		.ascii  "\x05\x05\x0e\x0d\x0b\x0c\x0c\x0d"
		.ascii  "\x0e\x06\x00\x00\x00\x27\x01\x04"
		.ascii  "\x03\x0c\x0d\x0d\x0e\x05\x07\x05"
		.ascii  "\x03\x06\x07\x05\x06\x0e\x0d\x0c"
		.ascii  "\x0e\x0b\x0c\x0e\x06\x00\x00\x00"
		.ascii  "\x27\x01\x04\x03\x0b\x0c\x0d\x0e"
		.ascii  "\x05\x07\x05\x03\x06\x07\x06\x0e"
		.ascii  "\x0e\x0c\x0b\x0c\x0b\x0d\x0e\x06"
		.ascii  "\x00\x00\x00\x27\x01\x04\x02\x0c"
		.ascii  "\x0d\x0e\x06\x05\x07\x05\x03\x06"
		.ascii  "\x07\x0e\x0e\x0d\x0c\x0e\x0d\x0d"
		.ascii  "\x0e\x07\x00\x00\x00\x27\x01\x04"
		.ascii  "\x01\x0d\x0e\x06\x05\x05\x07\x05"
		.ascii  "\x04\x06\x07\x0e\x0d\x0c\x0e\x0e"
		.ascii  "\x0e\x0d\x08\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x0d\x0e\x05\x05\x05\x07"
		.ascii  "\x05\x04\x06\x07\x0d\x0c\x0d\x0e"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x0c\x0d\x0e\x05\x0e\x07\x05"
		.ascii  "\x03\x06\x07\x0d\x0c\x0e\x06\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x0c\x0c\x0d\x0e\x0e\x07\x05\x03"
		.ascii  "\x06\x07\x0c\x0d\x0e\x06\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x0d"
		.ascii  "\x0c\x0c\x0b\x0c\x07\x05\x03\x06"
		.ascii  "\x07\x0b\x0d\x0e\x06\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x0e\x0d"
		.ascii  "\x0b\x0c\x0d\x07\x05\x03\x06\x07"
		.ascii  "\x0c\x0d\x0e\x0e\x07\x01\x00\x01"
		.ascii  "\x00\x0e\x0e\x0e\x0e\x05\x00\x00"
		.ascii  "\x00\x27\x01\x05\x01\x0d\x0c\x0b"
		.ascii  "\x0d\x0e\x07\x05\x03\x06\x07\x0d"
		.ascii  "\x0c\x0d\x0e\x0e\x0e\x0d\x0c\x0d"
		.ascii  "\x0d\x0e\x04\x00\x00\x00\x27\x01"
		.ascii  "\x05\x01\x0c\x0b\x0c\x0e\x06\x07"
		.ascii  "\x05\x03\x06\x07\x0d\x0b\x0c\x0c"
		.ascii  "\x0c\x0b\x0a\x0b\x0c\x0d\x0e\x04"
		.ascii  "\x00\x00\x00\x27\x01\x05\x00\x0b"
		.ascii  "\x0b\x0d\x0e\x05\x07\x05\x04\x06"
		.ascii  "\x07\x0e\x0c\x0b\x0a\x0a\x0a\x0b"
		.ascii  "\x0c\x0d\x0e\x05\x00\x00\x00\x27"
		.ascii  "\x01\x04\x03\x0c\x0b\x0c\x0e\x05"
		.ascii  "\x07\x05\x04\x06\x07\x0e\x0d\x0c"
		.ascii  "\x0b\x0c\x0b\x0c\x0d\x0e\x06\x00"
		.ascii  "\x00\x00\x27\x01\x05\x00\x0b\x0d"
		.ascii  "\x0b\x0d\x0e\x0e\x06\x04\x06\x07"
		.ascii  "\x06\x0e\x0c\x0a\x0d\x0c\x0a\x0c"
		.ascii  "\x0d\x0e\x05\x00\x00\x00\x27\x01"
		.ascii  "\x05\x00\x0c\x0e\x0c\x0b\x0d\x0e"
		.ascii  "\x0e\x0e\x06\x07\x05\x0e\x0d\x0b"
		.ascii  "\x0e\x0d\x0c\x0b\x0c\x0e\x05\x00"
		.ascii  "\x00\x00\x27\x01\x05\x00\x0d\x0c"
		.ascii  "\x0e\x0d\x0b\x0c\x0d\x0e\x0e\x0e"
		.ascii  "\x05\x0e\x0d\x0c\x0e\x0e\x0d\x0c"
		.ascii  "\x0e\x0e\x05\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x0e\x0d\x0d\x0e\x0e\x0d"
		.ascii  "\x0c\x0b\x0c\x0d\x0e\x0e\x0e\x0d"
		.ascii  "\x0e\x01\x00\x00\x03\x0e\x0e\x0e"
		.ascii  "\x06\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x0e\x0e\x0c\x0e\x0c\x0e\x0e\x0d"
		.ascii  "\x0c\x0c\x0c\x0d\x0e\x0e\x0e\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x04"
		.ascii  "\x0e\x0b\x0d\x0e\x07\x06\x0e\x0d"
		.ascii  "\x0c\x0b\x0b\x0c\x0d\x0e\x05\x00"
		.ascii  "\x00\x03\x0e\x0e\x0e\x02\x00\x00"
		.ascii  "\x00\x27\x01\x04\x01\x04\x0e\x0b"
		.ascii  "\x0c\x0e\x07\x06\x06\x0e\x0d\x0c"
		.ascii  "\x0a\x0a\x0b\x0d\x0e\x0c\x02\x00"
		.ascii  "\x01\x01\x0e\x0d\x0c\x0e\x0e\x01"
		.ascii  "\x00\x00\x00\x27\x01\x06\x00\x0e"
		.ascii  "\x0d\x0c\x0d\x0e\x07\x05\x06\x06"
		.ascii  "\x0e\x0d\x0b\x0a\x0a\x0a\x0c\x0d"
		.ascii  "\x0e\x0d\x0d\x0b\x0b\x0d\x0e\x01"
		.ascii  "\x00\x00\x00\x27\x01\x06\x00\x0e"
		.ascii  "\x0c\x0d\x0e\x06\x07\x05\x05\x06"
		.ascii  "\x0e\x0c\x0b\x0c\x0b\x0b\x0a\x0a"
		.ascii  "\x0b\x0c\x0b\x0a\x0b\x0c\x0e\x01"
		.ascii  "\x00\x00\x00\x27\x01\x05\x03\x04"
		.ascii  "\x0e\x0e\x0e\x05\x07\x05\x0e\x0e"
		.ascii  "\x0d\x0b\x0a\x0d\x0c\x0b\x0b\x0c"
		.ascii  "\x0d\x0d\x0c\x0c\x0d\x0e\x02\x00"
		.ascii  "\x00\x00\x27\x01\x05\x02\x04\x05"
		.ascii  "\x05\x05\x05\x07\x05\x0e\x0d\x0b"
		.ascii  "\x0a\x0b\x0e\x0c\x0a\x0b\x0b\x0c"
		.ascii  "\x0e\x0e\x0e\x0e\x03\x00\x00\x00"
		.ascii  "\x27\x01\x05\x00\x04\x05\x05\x05"
		.ascii  "\x06\x07\x0e\x0d\x0b\x0a\x0a\x0c"
		.ascii  "\x0e\x0b\x0a\x0c\x0b\x0b\x0d\x0e"
		.ascii  "\x05\x00\x00\x00\x27\x01\x05\x00"
		.ascii  "\x03\x04\x0c\x0e\x0e\x07\x0e\x0c"
		.ascii  "\x0b\x0a\x0c\x0e\x0d\x0a\x0b\x0e"
		.ascii  "\x0c\x0a\x0b\x0e\x05\x00\x00\x00"
		.ascii  "\x27\x01\x05\x00\x03\x04\x0e\x0d"
		.ascii  "\x0c\x07\x0e\x0d\x0b\x0b\x0d\x0e"
		.ascii  "\x0c\x0b\x0c\x0e\x0d\x0c\x0d\x0e"
		.ascii  "\x05\x00\x00\x00\x27\x01\x05\x00"
		.ascii  "\x03\x0e\x0d\x0c\x0b\x07\x06\x0e"
		.ascii  "\x0c\x0d\x0e\x0d\x0c\x0c\x0d\x0e"
		.ascii  "\x0e\x0d\x0e\x0e\x05\x00\x00\x00"
		.ascii  "\x27\x01\x05\x02\x04\x0e\x0c\x0b"
		.ascii  "\x0c\x07\x06\x06\x0e\x0e\x04\x0e"
		.ascii  "\x0d\x0c\x0e\x0e\x0d\x0e\x0e\x0d"
		.ascii  "\x0e\x0e\x03\x00\x00\x00\x27\x01"
		.ascii  "\x05\x03\x0e\x0e\x0b\x0a\x0d\x07"
		.ascii  "\x05\x06\x07\x07\x04\x0e\x0e\x0e"
		.ascii  "\x0d\x0d\x0c\x0c\x0c\x0c\x0d\x0d"
		.ascii  "\x0e\x02\x00\x00\x00\x27\x01\x06"
		.ascii  "\x00\x0d\x0c\x0b\x0a\x0c\x07\x05"
		.ascii  "\x04\x06\x0e\x0e\x0d\x0c\x0b\x0b"
		.ascii  "\x0b\x0a\x0a\x0a\x0b\x0b\x0c\x0e"
		.ascii  "\x0e\x01\x00\x00\x00\x27\x01\x06"
		.ascii  "\x00\x0c\x0b\x0a\x0b\x0c\x07\x05"
		.ascii  "\x0e\x0e\x0d\x0c\x0b\x0b\x0a\x0a"
		.ascii  "\x0b\x0c\x0c\x0c\x0b\x0a\x0b\x0d"
		.ascii  "\x0e\x01\x00\x00\x00\x27\x01\x06"
		.ascii  "\x00\x0b\x0a\x0b\x0d\x0e\x0e\x0e"
		.ascii  "\x0d\x0c\x0b\x0a\x0a\x0b\x0c\x0d"
		.ascii  "\x0d\x0e\x0e\x0e\x0d\x0b\x0a\x0c"
		.ascii  "\x0e\x01\x00\x00\x00\x27\x01\x04"
		.ascii  "\x00\x0b\x0a\x0c\x0e\x05\x0e\x0d"
		.ascii  "\x0c\x0b\x0a\x0b\x0c\x0c\x0d\x0e"
		.ascii  "\x0e\x03\x00\x01\x00\x0e\x0c\x0c"
		.ascii  "\x0e\x02\x00\x00\x00\x27\x01\x04"
		.ascii  "\x01\x0a\x0a\x0d\x05\x0e\x0d\x0c"
		.ascii  "\x0b\x0b\x0c\x0c\x0b\x0b\x0c\x0c"
		.ascii  "\x0d\x0e\x02\x00\x00\x03\x0c\x0e"
		.ascii  "\x0e\x03\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x0a\x0b\x0e\x05\x0d\x0c\x0b"
		.ascii  "\x0c\x0d\x0e\x0e\x0e\x0e\x0d\x0b"
		.ascii  "\x0b\x0d\x0e\x07\x00\x00\x00\x27"
		.ascii  "\x01\x04\x02\x0a\x0b\x0e\x0e\x0c"
		.ascii  "\x0b\x0d\x0e\x0e\x07\x06\x06\x05"
		.ascii  "\x0e\x0e\x0d\x0c\x0e\x07\x00\x00"
		.ascii  "\x00\x27\x01\x04\x02\x0a\x0c\x0e"
		.ascii  "\x0d\x0c\x0d\x0e\x0e\x07\x07\x05"
		.ascii  "\x05\x05\x0e\x0c\x0c\x0e\x0e\x07"
		.ascii  "\x00\x00\x00\x27\x01\x04\x01\x0a"
		.ascii  "\x0c\x0e\x0c\x0d\x0e\x07\x06\x07"
		.ascii  "\x07\x05\x05\x05\x0e\x0e\x0e\x0e"
		.ascii  "\x08\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x0a\x0c\x0d\x0d\x0e\x0e\x06\x05"
		.ascii  "\x07\x07\x05\x04\x04\x05\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x0b"
		.ascii  "\x0c\x0c\x0e\x06\x07\x06\x05\x06"
		.ascii  "\x07\x04\x04\x04\x05\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x0b\x0c"
		.ascii  "\x0d\x0e\x05\x07\x06\x04\x06\x07"
		.ascii  "\x04\x04\x04\x05\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x0a\x0c\x0e"
		.ascii  "\x06\x05\x07\x06\x03\x06\x07\x04"
		.ascii  "\x04\x04\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x04\x00\x0a\x0c\x0e\x05"
		.ascii  "\x05\x07\x05\x04\x06\x07\x04\x04"
		.ascii  "\x04\x05\x07\x0e\x09\x00\x00\x00"
		.ascii  "\x27\x01\x04\x01\x0b\x0c\x0e\x05"
		.ascii  "\x05\x07\x05\x03\x06\x07\x04\x04"
		.ascii  "\x04\x05\x07\x0c\x0e\x08\x00\x00"
		.ascii  "\x00\x27\x01\x04\x02\x0b\x0b\x0e"
		.ascii  "\x05\x05\x07\x05\x03\x06\x07\x04"
		.ascii  "\x04\x04\x05\x07\x0a\x0c\x0e\x07"
		.ascii  "\x00\x00\x00\x27\x01\x04\x03\x0d"
		.ascii  "\x0b\x0e\x05\x05\x07\x05\x03\x06"
		.ascii  "\x07\x04\x04\x04\x05\x07\x0c\x0a"
		.ascii  "\x0c\x0e\x06\x00\x00\x00\x27\x01"
		.ascii  "\x05\x00\x0e\x0c\x0d\x0e\x05\x07"
		.ascii  "\x05\x03\x06\x07\x04\x04\x04\x05"
		.ascii  "\x07\x0e\x0c\x0a\x0e\x0d\x05\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x0e\x0d"
		.ascii  "\x0c\x0e\x05\x07\x05\x03\x06\x07"
		.ascii  "\x05\x05\x04\x05\x07\x01\x00\x01"
		.ascii  "\x00\x0e\x0c\x0c\x0e\x05\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x0e\x0e\x0d"
		.ascii  "\x0c\x0e\x07\x05\x04\x06\x07\x05"
		.ascii  "\x05\x05\x05\x07\x01\x00\x01\x01"
		.ascii  "\x0e\x0d\x0b\x0d\x0e\x04\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x03\x0e\x0e"
		.ascii  "\x0d\x0c\x07\x05\x04\x06\x07\x05"
		.ascii  "\x05\x05\x06\x07\x02\x00\x01\x00"
		.ascii  "\x0e\x0b\x0d\x0e\x04\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x04\x0e"
		.ascii  "\x0e\x07\x05\x03\x06\x07\x0e\x0c"
		.ascii  "\x05\x06\x07\x02\x00\x01\x00\x0e"
		.ascii  "\x0a\x0d\x0e\x04\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x03\x04\x04\x04\x04"
		.ascii  "\x07\x05\x03\x06\x07\x0d\x0d\x0e"
		.ascii  "\x06\x07\x01\x00\x01\x00\x0e\x0d"
		.ascii  "\x0c\x0e\x05\x00\x00\x00\x27\x01"
		.ascii  "\x05\x00\x03\x04\x04\x04\x04\x07"
		.ascii  "\x05\x03\x06\x07\x0d\x0c\x0d\x0e"
		.ascii  "\x07\x0e\x0c\x0a\x0d\x0e\x05\x00"
		.ascii  "\x00\x00\x27\x01\x04\x03\x02\x04"
		.ascii  "\x04\x04\x03\x07\x05\x03\x06\x07"
		.ascii  "\x0e\x0d\x0c\x0d\x0e\x0e\x0d\x0c"
		.ascii  "\x0e\x06\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x02\x04\x04\x03\x03\x07\x05"
		.ascii  "\x04\x06\x07\x05\x0e\x0d\x0b\x0d"
		.ascii  "\x0e\x0e\x0e\x07\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x02\x04\x03\x03\x02"
		.ascii  "\x07\x05\x04\x06\x07\x05\x05\x0e"
		.ascii  "\x0c\x0c\x0e\x09\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x02\x03\x03\x02\x04"
		.ascii  "\x07\x05\x03\x06\x07\x05\x05\x04"
		.ascii  "\x0d\x0b\x0e\x09\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x02\x03\x02\x04\x04"
		.ascii  "\x07\x05\x04\x06\x07\x05\x05\x04"
		.ascii  "\x0e\x0a\x0e\x09\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x02\x02\x04\x04\x03"
		.ascii  "\x0e\x0e\x04\x0e\x0e\x05\x05\x04"
		.ascii  "\x0d\x0b\x0e\x09\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x02\x04\x04\x03\x0e"
		.ascii  "\x0e\x0c\x0e\x0c\x0e\x0e\x05\x0e"
		.ascii  "\x0c\x0c\x0e\x09\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x03\x04\x02\x04\x0e"
		.ascii  "\x0d\x0b\x0e\x0b\x0d\x0e\x05\x0d"
		.ascii  "\x0b\x0e\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x03\x02\x04\x04\x0e\x0c"
		.ascii  "\x0e\x0d\x0e\x0c\x0e\x0d\x0c\x0e"
		.ascii  "\x0e\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x04\x0e\x0e\x0d"
		.ascii  "\x0c\x0c\x0e\x0e\x0c\x0e\x0e\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x04\x0e\x0d\x0c\x0d"
		.ascii  "\x0b\x0d\x0e\x0e\x05\x06\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x03"
		.ascii  "\x04\x04\x0e\x0d\x0c\x0a\x0e\x0a"
		.ascii  "\x0c\x0d\x0e\x05\x06\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x03\x04"
		.ascii  "\x04\x0e\x0d\x0e\x0c\x0d\x0c\x0e"
		.ascii  "\x0d\x0e\x05\x06\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x03\x04\x0e"
		.ascii  "\x0b\x0a\x0c\x0e\x0c\x0e\x0b\x0a"
		.ascii  "\x0c\x0e\x06\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x0e\x0a"
		.ascii  "\x0e\x0b\x0e\x0b\x0e\x0a\x0e\x0b"
		.ascii  "\x0e\x06\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x02\x04\x04\x0e\x0e"
		.ascii  "\x0e\x0b\x0e\x0b\x0e\x0e\x0e\x05"
		.ascii  "\x06\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x04\x04\x04\x04\x0e"
		.ascii  "\x0d\x0e\x0d\x0e\x05\x05\x05\x06"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x04\x0e\x0c\x0e"
		.ascii  "\x0c\x0e\x0c\x0e\x05\x05\x06\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x03\x0e\x0e\x0e\x0e"
		.ascii  "\x0e\x0e\x0e\x05\x05\x06\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x02"
		.ascii  "\x04\x03\x03\x0e\x0c\x0c\x0c\x0c"
		.ascii  "\x0c\x0e\x05\x05\x06\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x02\x03"
		.ascii  "\x03\x04\x04\x0d\x0e\x0d\x0e\x0e"
		.ascii  "\x05\x05\x05\x06\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x02\x03\x04"
		.ascii  "\x04\x03\x0e\x0b\x0d\x0c\x0e\x05"
		.ascii  "\x05\x04\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x02\x04\x04\x03"
		.ascii  "\x04\x0e\x0a\x0e\x0a\x0e\x05\x05"
		.ascii  "\x04\x05\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x02\x04\x03\x04\x06"
		.ascii  "\x0e\x0d\x0d\x0d\x0e\x06\x05\x04"
		.ascii  "\x05\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x03\x04\x04\x0e\x0d"
		.ascii  "\x0c\x0c\x0d\x0d\x0e\x05\x05\x05"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x0e\x0d\x0c\x0a"
		.ascii  "\x0c\x0d\x0e\x0d\x0e\x05\x06\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x0e\x0c\x0a\x0c\x0c"
		.ascii  "\x0d\x0e\x0e\x0e\x05\x06\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x02"
		.ascii  "\x04"
		.ascii   "\r\r\r\r"
		.ascii  "\x0e\x0e\x0e\x0e\x0e\x0e\x0e\x06"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x0d\x0c\x0e"
		.ascii   "\n\t\r\n"
		.ascii  "\x0b\x0e\x0d\x0f\x06\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x02\x04"
		.ascii  "\x0e\x0d\x0f\x0d\x0d\x0f\x0e\x0e"
		.ascii  "\x0f\x0e\x0f\x06\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x02\x04\x04"
		.ascii  "\x07\x06\x04\x03\x06\x07\x07\x07"
		.ascii  "\x07\x05\x06\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x04\x07"
		.ascii  "\x06\x05\x01\x04\x06\x07\x06\x07"
		.ascii  "\x05\x06\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x03\x04\x04\x04\x07"
		.ascii  "\x06\x05\x03\x05\x06\x07\x05\x05"
		.ascii  "\x06\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x04\x04\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x05\x05\x05\x06"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x03\x03\x04\x04\x0e"
		.ascii  "\x0d\x0e\x05\x05\x05\x05\x05\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x03\x03\x04\x04\x0e\x0d\x0b"
		.ascii  "\x0d\x0e\x05\x05\x04\x05\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x02"
		.ascii  "\x03\x04\x04\x0e\x0e\x0d\x0c\x0d"
		.ascii  "\x0e\x0e\x04\x04\x05\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x02\x04"
		.ascii  "\x04\x0e\x0d\x0c\x0e\x0e\x0e\x0d"
		.ascii  "\x0d\x0e\x04\x05\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x02\x04\x0e"
		.ascii  "\x0e\x0b\x0a\x0d\x0e\x0d\x0a\x0c"
		.ascii  "\x0d\x0e\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x02\x04\x0e\x0c"
		.ascii  "\x0a\x0c\x0e\x0b\x0e\x0c\x0a\x0c"
		.ascii  "\x0e\x05\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x02\x04\x0e\x0d\x0d"
		.ascii  "\x0e\x0e\x0d\x0e\x0e\x0d\x0d\x0e"
		.ascii  "\x05\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x04\x04\x0e\x0e\x0e"
		.ascii  "\x0c\x0e\x0c\x0e\x0e\x0e\x04\x05"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x04\x0e\x0d\x0b"
		.ascii  "\x0e\x0b\x0d\x0e\x04\x04\x05\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x0d\x0d\x0b\x0c\x0e"
		.ascii  "\x0c\x0a\x0d\x0e\x04\x05\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x03"
		.ascii  "\x04\x0d\x0b\x09\x0c\x0e\x0e\x0e"
		.ascii  "\x0c\x0a\x0c\x0e\x05\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x03\x04"
		.ascii  "\x0d\x0a\x0b\x0d\x0e\x0d\x0e\x0d"
		.ascii  "\x0c\x0b\x0e\x05\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x03\x04\x04"
		.ascii  "\x0d\x0e\x0e\x0d\x0c\x0d\x0e\x0e"
		.ascii  "\x0e\x06\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x04\x04"
		.ascii  "\x0f\x0d\x0b\x0c\x0c\x0d\x0f\x06"
		.ascii  "\x05\x05\x07\x01\x00\x00\x03\x0c"
		.ascii  "\x0e\x0e\x06\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x03\x04\x04\x0e\x0f\x0e"
		.ascii  "\x09\x0b\x0d\x0e\x0f\x05\x05\x0d"
		.ascii  "\x0d\x01\x00\x01\x00\x0e\x0d\x0c"
		.ascii  "\x0e\x05\x00\x00\x00\x27\x01\x05"
		.ascii  "\x01\x03\x04\x0e\x0d\x0e\x0f\x0e"
		.ascii  "\x09\x0e\x0f\x05\x05\x0d\x0c\x0c"
		.ascii  "\x0d\x0e\x0b\x0b\x0d\x0e\x04\x00"
		.ascii  "\x00\x00\x27\x01\x05\x01\x03\x0e"
		.ascii  "\x0c\x0e\x05\x05\x0f\x0d\x0f\x06"
		.ascii  "\x05\x0e\x0d\x0b\x0a\x0c\x0d\x0b"
		.ascii  "\x0a\x0c\x0e\x04\x00\x00\x00\x27"
		.ascii  "\x01\x05\x01\x0e\x0c\x0d\x06\x05"
		.ascii  "\x05\x0d\x0f\x0d\x05\x05\x05\x04"
		.ascii  "\x0d\x0c\x0a\x0d\x0b\x0a\x0c\x0e"
		.ascii  "\x04\x00\x00\x00\x27\x01\x05\x01"
		.ascii  "\x0e\x0b\x0e\x05\x05\x05\x04\x05"
		.ascii  "\x05\x05\x05\x05\x04\x04\x0d\x0a"
		.ascii  "\x0b\x0a\x0a\x0c\x0e\x04\x00\x00"
		.ascii  "\x00\x27\x01\x05\x01\x0c\x0a\x0d"
		.ascii  "\x06\x05\x05\x04\x05\x05\x05\x05"
		.ascii  "\x04\x04\x04\x0e\x0b\x0b\x0a\x0b"
		.ascii  "\x0e\x0e\x04\x00\x00\x00\x27\x01"
		.ascii  "\x05\x02\x0b\x0a\x0c\x0d\x0d\x05"
		.ascii  "\x05\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x0e\x0b\x0a\x0a\x0c\x0e\x0d\x0e"
		.ascii  "\x03\x00\x00\x00\x27\x01\x05\x02"
		.ascii  "\x0c\x0d\x0b\x0c\x0d\x05\x05\x05"
		.ascii  "\x0d\x0d\x0d\x04\x04\x05\x0d\x0b"
		.ascii  "\x0a\x0b\x0d\x0c\x0c\x0e\x03\x00"
		.ascii  "\x00\x00\x27\x01\x05\x02\x0e\x0c"
		.ascii  "\x0d\x0d\x06\x05\x05\x05\x0d\x0c"
		.ascii  "\x0c\x0d\x05\x0e\x0d\x0a\x0a\x0b"
		.ascii  "\x0c\x0d\x0e\x0e\x03\x00\x00\x00"
		.ascii  "\x27\x01\x05\x00\x0e\x0b\x0e\x0d"
		.ascii  "\x07\x05\x05\x0d\x0c\x0b\x0b\x0e"
		.ascii  "\x0d\x0d\x0b\x0b\x0b\x0c\x0d\x0e"
		.ascii  "\x05\x00\x00\x00\x27\x01\x04\x03"
		.ascii  "\x0e\x0c\x0b\x0e\x0d\x0d\x0d\x0c"
		.ascii  "\x0b\x0a\x0c\x0e\x0c\x0b\x0c\x0d"
		.ascii  "\x0d\x0e\x0e\x06\x00\x00\x00\x27"
		.ascii  "\x01\x04\x00\x03\x0d\x0a\x0b\x0c"
		.ascii  "\x0c\x0b\x0a\x0b\x0c\x0d\x0c\x0e"
		.ascii  "\x0e\x0e\x0d\x09\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x03\x0d\x0c\x0a\x0a"
		.ascii  "\x0a\x0b\x0c\x0c\x0d\x0d\x0d\x05"
		.ascii  "\x06\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x04\x0d\x0c\x0c\x0c"
		.ascii  "\x0b\x0a\x0a\x0b\x0c\x0e\x0d\x06"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x0d\x0d\x0d\x0c"
		.ascii  "\x0c\x0c\x0c\x0d\x0d\x05\x06\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x04\x04\x04"
		.ascii   "\r\r\r\r\r"
		.ascii  "\x05\x05\x06\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x02\x04\x04\x04"
		.ascii  "\x04\x04\x03\x0e\x0d\x0b\x0d\x0e"
		.ascii  "\x05\x06\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x03\x04\x04\x04\x04"
		.ascii  "\x03\x03\x03\x04\x0d\x0a\x0d\x0e"
		.ascii  "\x06\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x03\x04\x04\x04\x03\x03"
		.ascii  "\x03\x04\x04\x03\x0d\x0b\x0e\x06"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x03\x04\x04\x03\x03\x03\x04"
		.ascii  "\x04\x03\x04\x0d\x0c\x0d\x0e\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x03\x04\x03\x03\x03\x04\x04\x03"
		.ascii  "\x04\x04\x04\x0d\x0b\x0e\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x02"
		.ascii  "\x03\x03\x03\x04\x04\x03\x04\x04"
		.ascii  "\x04\x04\x0d\x0a\x0e\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x02\x03"
		.ascii  "\x03\x04\x04\x03\x04\x04\x04\x04"
		.ascii  "\x04\x0d\x0b\x0e\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x02\x03\x04"
		.ascii  "\x04\x03\x04\x04\x04\x04\x04\x0c"
		.ascii  "\x0c\x0c\x0e\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x02\x04\x04\x03"
		.ascii  "\x04\x04\x04\x04\x0e\x0e\x0e\x0c"
		.ascii  "\x0e\x05\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x02\x04\x03\x04\x04"
		.ascii  "\x04\x0e\x0e\x0e\x0c\x0e\x0e\x0e"
		.ascii  "\x05\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x02\x03\x04\x04\x04\x0e"
		.ascii  "\x0d\x0d\x0d\x0b\x0c\x0d\x0e\x0e"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x02\x04\x04\x04\x04\x0e\x0d"
		.ascii  "\x0b\x0c\x0d\x0e\x0c\x0d\x0e\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x02\x04\x04\x04\x04\x04\x0e\x0e"
		.ascii  "\x0c\x0b\x0c\x0e\x0e\x05\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x03"
		.ascii  "\x04\x04\x04\x04\x0e\x0e\x0b\x0d"
		.ascii  "\x0e\x0c\x0c\x0e\x05\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x03\x04"
		.ascii  "\x04\x04\x0e\x0d\x0c\x0e\x0e\x0e"
		.ascii  "\x0d\x0b\x0e\x05\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x03\x04\x0e"
		.ascii  "\x0e\x0d\x0c\x0e\x06\x06\x06\x0e"
		.ascii  "\x0e\x05\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x04\x0e\x0c\x0b"
		.ascii  "\x0d\x0e\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x0e\x0c\x0b\x0d\x0e"
		.ascii  "\x06\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x07\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x0e\x0c\x0b\x0e\x06\x05"
		.ascii  "\x05\x05\x04\x05\x05\x04\x04\x05"
		.ascii  "\x07\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x0c\x0b\x0c\x0e\x06\x05\x0e"
		.ascii  "\x04\x04\x04\x04\x04\x04\x05\x07"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x0c\x0b\x0c\x0d\x0e\x0e\x0d\x0e"
		.ascii  "\x05\x05\x04\x04\x04\x05\x07\x0a"
		.ascii  "\x00\x00\x00\x27\x01\x03\x03\x0c"
		.ascii  "\x0a\x0c\x0c\x0c\x0d\x0c\x0e\x05"
		.ascii  "\x05\x04\x04\x04\x05\x07\x0a\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x0c\x0a"
		.ascii  "\x0c\x0e\x0e\x0c\x0d\x0e\x05\x05"
		.ascii  "\x0e\x0e\x04\x05\x07\x0a\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x0c\x0a\x0b"
		.ascii  "\x0d\x0e\x0e\x0e\x05\x05\x05\x0e"
		.ascii  "\x0d\x0e\x05\x07\x0a\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x0c\x0b\x0b\x0c"
		.ascii  "\x0c\x0d\x0e\x0e\x0e\x0e\x0c\x0c"
		.ascii  "\x0e\x05\x07\x0a\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x0e\x0b\x0c\x0e\x0c"
		.ascii  "\x0c\x0b\x0b\x0b\x0c\x0c\x0d\x0e"
		.ascii  "\x0e\x0e\x0a\x00\x00\x00\x27\x01"
		.ascii  "\x04\x00\x0d\x0c\x0e\x05\x0d\x0d"
		.ascii  "\x0c\x0b\x0c\x0d\x0e\x0e\x0e\x0d"
		.ascii  "\x0c\x0e\x09\x00\x00\x00\x27\x01"
		.ascii  "\x04\x00\x0e\x0e\x05\x05\x05\x0d"
		.ascii  "\x0d\x0c\x0b\x0b\x0b\x0b\x0b\x0b"
		.ascii  "\x0c\x0e\x09\x00\x00\x00\x27\x01"
		.ascii  "\x04\x00\x04\x05\x05\x05\x05\x04"
		.ascii  "\x0d\x0d\x0c\x0c\x0b\x0b\x0b\x0c"
		.ascii  "\x0d\x0e\x09\x00\x00\x00\x27\x01"
		.ascii  "\x03\x03\x04\x05\x05\x05\x05\x04"
		.ascii  "\x03\x03\x0d\x0d\x0d\x0c\x0c\x0d"
		.ascii  "\x0e\x0a\x00\x00\x00\x27\x01\x03"
		.ascii  "\x03\x03\x05\x05\x04\x04\x03\x03"
		.ascii  "\x04\x04\x03\x0e\x0e\x0e\x0e\x0e"
		.ascii  "\x0a\x00\x00\x00\x27\x01\x04\x00"
		.ascii  "\x02\x04\x04\x04\x03\x03\x04\x04"
		.ascii  "\x03\x04\x04\x0d\x0b\x0b\x0e\x0e"
		.ascii  "\x09\x00\x00\x00\x27\x01\x04\x01"
		.ascii  "\x02\x04\x04\x03\x03\x04\x04\x03"
		.ascii  "\x04\x04\x04\x04\x0e\x0d\x0b\x0c"
		.ascii  "\x0e\x08\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x02\x04\x03\x03\x04\x04\x03"
		.ascii  "\x04\x04\x04\x04\x04\x0e\x0e\x0d"
		.ascii  "\x0b\x0c\x0e\x07\x00\x00\x00\x27"
		.ascii  "\x01\x04\x03\x02\x03\x03\x04\x04"
		.ascii  "\x0e\x0d\x0d\x04\x04\x04\x04\x0e"
		.ascii  "\x0d\x0e\x0c\x0b\x0d\x0e\x02\x00"
		.ascii  "\x00\x03\x0e\x0e\x0e\x01\x00\x00"
		.ascii  "\x00\x27\x01\x05\x00\x02\x03\x04"
		.ascii  "\x04\x0d\x0c\x0b\x0d\x0e\x04\x04"
		.ascii  "\x0e\x0d\x0c\x0e\x0d\x0b\x0c\x0e"
		.ascii  "\x0e\x02\x00\x00\x03\x0e\x0d\x0e"
		.ascii  "\x27\x01\x06\x01\x02\x04\x04\x0d"
		.ascii  "\x0c\x0b\x0c\x0e\x04\x04\x0e\x0e"
		.ascii  "\x0c\x0d\x0e\x0e\x0c\x0b\x0d\x0e"
		.ascii  "\x0e\x0e\x0d\x0c\x0e\x27\x01\x06"
		.ascii  "\x01\x02\x04\x03\x0d\x0b\x0a\x0b"
		.ascii  "\x0c\x0e\x0e\x0d\x0b\x0c\x0e\x0e"
		.ascii  "\x0e\x0c\x0b\x0b\x0a\x0a\x0b\x0c"
		.ascii  "\x0d\x0e\x27\x01\x06\x01\x02\x03"
		.ascii  "\x04\x0d\x0c\x0a\x0a\x0b\x0c\x0c"
		.ascii  "\x0b\x0c\x0d\x0e\x07\x0e\x0d\x0a"
		.ascii  "\x0c\x0b\x0c\x0c\x0d\x0e\x0e\x27"
		.ascii  "\x01\x06\x00\x02\x04\x04\x04\x0d"
		.ascii  "\x0c\x0a\x0a\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x06\x07\x0e\x0e\x0a\x0e\x0d\x0d"
		.ascii  "\x0e\x0e\x0e\x01\x00\x00\x00\x27"
		.ascii  "\x01\x03\x03\x02\x04\x04\x04\x04"
		.ascii  "\x0d\x0e\x0d\x0c\x0d\x0e\x0e\x0d"
		.ascii  "\x06\x07\x01\x00\x01\x02\x0e\x0a"
		.ascii  "\x0c\x0e\x0e\x0e\x03\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x04\x04"
		.ascii  "\x04\x04\x0c\x0e\x0e\x0e\x0d\x0e"
		.ascii  "\x05\x06\x07\x01\x00\x01\x01\x0e"
		.ascii  "\x0b\x0b\x0d\x0e\x04\x00\x00\x00"
		.ascii  "\x27\x01\x03\x03\x03\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x0e\x0d\x0e\x05"
		.ascii  "\x05\x06\x07\x01\x00\x01\x02\x0e"
		.ascii  "\x0c\x0a\x0c\x0d\x0e\x03\x00\x00"
		.ascii  "\x00\x27\x01\x03\x03\x03\x04\x04"
		.ascii  "\x04\x04\x04\x04\x0d\x0d\x0c\x0d"
		.ascii  "\x0e\x0e\x06\x07\x01\x00\x01\x02"
		.ascii  "\x0e\x0c\x0a\x0b\x0c\x0e\x03\x00"
		.ascii  "\x00\x00\x27\x01\x03\x03\x02\x04"
		.ascii  "\x04\x04\x04\x04\x04\x0d\x0c\x0b"
		.ascii  "\x0d\x0e\x05\x06\x07\x01\x00\x01"
		.ascii  "\x03\x0e\x0c\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x02\x00\x00\x00\x27\x01\x05\x03"
		.ascii  "\x02\x04\x04\x04\x04\x04\x04\x05"
		.ascii  "\x0d\x0d\x0e\x05\x05\x06\x07\x0e"
		.ascii  "\x0e\x0c\x0a\x0a\x0b\x0c\x0e\x02"
		.ascii  "\x00\x00\x00\x27\x01\x05\x03\x02"
		.ascii  "\x04\x04\x0e\x0e\x04\x04\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x07\x0e\x0d"
		.ascii  "\x0c\x0a\x0a\x0a\x0b\x0e\x02\x00"
		.ascii  "\x00\x00\x27\x01\x05\x03\x02\x04"
		.ascii  "\x0e\x0d\x0e\x04\x04\x04\x05\x05"
		.ascii  "\x05\x05\x04\x05\x0e\x0d\x0b\x0a"
		.ascii  "\x0b\x0c\x0c\x0b\x0e\x02\x00\x00"
		.ascii  "\x00\x27\x01\x05\x03\x03\x0e\x0d"
		.ascii  "\x0c\x0e\x0e\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x0e\x0e\x0c\x0a\x0a\x0c"
		.ascii  "\x0d\x0d\x0c\x0e\x02\x00\x00\x00"
		.ascii  "\x27\x01\x05\x03\x03\x0e\x0d\x0b"
		.ascii  "\x0d\x0e\x0e\x04\x04\x04\x04\x0e"
		.ascii  "\x0e\x0d\x0c\x0a\x0a\x0c\x0e\x0e"
		.ascii  "\x0e\x0d\x0e\x02\x00\x00\x00\x27"
		.ascii  "\x01\x04\x02\x0e\x0d\x0c\x0b\x0c"
		.ascii  "\x0c\x0d\x0e\x0e\x0e\x0e\x0d\x0d"
		.ascii  "\x0c\x0a\x0a\x0c\x0e\x02\x00\x00"
		.ascii  "\x02\x0e\x0e\x03\x00\x00\x00\x27"
		.ascii  "\x01\x04\x01\x0e\x0d\x0c\x0a\x0a"
		.ascii  "\x0b\x0c\x0c\x0d\x0d\x0d\x0c\x0b"
		.ascii  "\x0a\x0a\x0a\x0e\x04\x00\x00\x01"
		.ascii  "\x0e\x03\x00\x00\x00\x27\x01\x04"
		.ascii  "\x02\x0e\x0c\x0c\x0a\x0a\x0a\x0b"
		.ascii  "\x0b\x0b\x0b\x0b"
		.ascii   "\n\n\n\n"
		.ascii  "\x0b\x0c\x0e\x02\x00\x00\x01\x0e"
		.ascii  "\x04\x00\x00\x00\x27\x01\x05\x01"
		.ascii  "\x0e\x0d\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0d\x0e\x0e\x0e\x04\x00"
		.ascii  "\x00\x00\x27\x01\x05\x01\x03\x0e"
		.ascii  "\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0c\x0e\x0e\x04\x00\x00"
		.ascii  "\x00\x27\x01\x05\x00\x03\x0d\x0d"
		.ascii  "\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0d\x0e\x05\x00\x00\x00"
		.ascii  "\x27\x01\x04\x03\x03\x05\x0e\x0d"
		.ascii  "\x0c\x0b\x0b"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0b\x0c\x0d\x0e\x06\x00\x00"
		.ascii  "\x00\x27\x01\x04\x02\x03\x05\x05"
		.ascii  "\x0e\x0e\x0d\x0c\x0c\x0b\x0b\x0b"
		.ascii  "\x0b\x0b\x0b\x0c\x0c\x0d\x0e\x07"
		.ascii  "\x00\x00\x00\x27\x01\x04\x01\x03"
		.ascii  "\x04\x05\x05\x05\x0e\x0e\x0d\x0c"
		.ascii  "\x0c\x0c\x0c\x0c\x0d\x0e\x0e\x0e"
		.ascii  "\x08\x00\x00\x00\x27\x01\x03\x03"
		.ascii  "\x55\x04\x04\x05\x05\x05\x05\x0e"
		.ascii  "\x0e\x0e\x0e\x0e\x0e\x0e\x0c\x0a"
		.ascii  "\x00\x00\x00"
data_55a99:
		.ascii  "\xe0\x00\x05\x00\x05\x00\x0c\x0e"
		.ascii  "\x0d\x0b\x0c\x0e\x0d\x0e\x05\x06"
		.ascii  "\x07\x06\x03\x05\x07\x0e\x0b\x0d"
		.ascii  "\x0e\x03\x2b\x01\x05\x01\x0e\x0e"
		.ascii  "\x0d\x0c\x0d\x0c\x0e\x0c\x0d\x0e"
		.ascii  "\x0e\x07\x06\x03\x05\x07\x0d\x0c"
		.ascii  "\x0d\x0e\x03\x2b\x01\x05\x01\x0e"
		.ascii  "\x0d\x0c\x0c\x0e\x0b\x0d\x0e\x0c"
		.ascii  "\x0b\x0d\x07\x06\x03\x05\x07\x0c"
		.ascii  "\x0d\x0e\x0c\x03\x2c\x01\x05\x00"
		.ascii  "\x0e\x0e\x0e\x0d\x0b\x0c\x0e\x0e"
		.ascii  "\x0d\x0d\x07\x06\x04\x05\x07\x0e"
		.ascii  "\x0d\x0c\x05\x03\x2f\x01\x04\x01"
		.ascii  "\x0e\x0d\x0c\x0e\x06\x0e\x0e\x07"
		.ascii  "\x06\x04\x05\x07\x0c\x0d\x0e\x04"
		.ascii  "\x03\x30\x01\x04\x00\x0e\x0b\x0d"
		.ascii  "\x0d\x06\x06\x07\x06\x03\x05\x07"
		.ascii  "\x0d\x0c\x0d\x0d\x03\x2e\x01\x04"
		.ascii  "\x02\x0e\x0e\x0d\x0b\x0d\x0e\x05"
		.ascii  "\x06\x07\x06\x03\x05\x07\x06\x0d"
		.ascii  "\x0b\x0e\x03\x2d\x01\x04\x03\x0e"
		.ascii  "\x0d\x0c\x0b\x0a\x0c\x0e\x05\x06"
		.ascii  "\x07\x06\x03\x05\x07\x05\x06\x0d"
		.ascii  "\x0c\x0d\x2d\x01\x04\x03\x0e\x0c"
		.ascii  "\x0b\x0a\x0c\x0d\x0e\x05\x06\x07"
		.ascii  "\x06\x03\x05\x07\x05\x05\x0e\x0b"
		.ascii  "\x0e\x2e\x01\x04\x02\x0e\x0d\x0c"
		.ascii  "\x0d\x0e\x05\x05\x06\x07\x06\x03"
		.ascii  "\x05\x07\x04\x0e\x0d\x0c\x0d\x2f"
		.ascii  "\x01\x04\x01\x0e\x0e\x0e\x06\x05"
		.ascii  "\x05\x06\x07\x06\x03\x05\x07\x0d"
		.ascii  "\x0e\x0c\x0d\x03\x31\x01\x03\x03"
		.ascii  "\x07\x0e\x0e\x0e\x06\x07\x06\x04"
		.ascii  "\x05\x0e\x0e\x0d\x0b\x0e\x03\x31"
		.ascii  "\x01\x03\x03\x07\x0e\x0d\x0e\x0e"
		.ascii  "\x07\x06\x0e\x0e\x0e\x0d\x0c\x0a"
		.ascii  "\x0c\x0e\x2e\x01\x00\x02\x0e\x0e"
		.ascii  "\x01\x00\x03\x03\x0e\x0d\x0b\x0c"
		.ascii  "\x0d\x0e\x0e\x0d\x0c\x0b\x0c\x0e"
		.ascii  "\x0b\x0a\x0b\x2d\x01\x04\x03\x0e"
		.ascii  "\x0c\x0d\x0e\x0c\x0e\x0c\x0a\x0b"
		.ascii  "\x0a\x0a\x0a\x0b\x0c\x0e\x0e\x0d"
		.ascii  "\x0c\x0c\x2d\x01\x04\x03\x0e\x0c"
		.ascii  "\x0b\x0d\x0d\x0e\x0d\x0b\x0a\x0b"
		.ascii  "\x0d\x0d\x0e\x0e\x05\x05\x0c\x0e"
		.ascii  "\x0e\x2d\x01\x04\x03\x0e\x0d\x0c"
		.ascii  "\x0b\x0b\x0b\x0a\x0a\x0c\x0d\x0e"
		.ascii  "\x0e\x06\x07\x05\x05\x05\x05\x04"
		.ascii  "\x2e\x01\x04\x02\x0e\x0c\x0d\x0e"
		.ascii  "\x0a\x0c\x0d\x0e\x0e\x07\x06\x06"
		.ascii  "\x07\x04\x05\x05\x05\x04\x2f\x01"
		.ascii  "\x04\x01\x0e\x0e\x0c\x0b\x0d\x0e"
		.ascii  "\x06\x07\x07\x05\x06\x07\x04\x04"
		.ascii  "\x04\x04\x03\x2f\x01\x04\x01\x0e"
		.ascii  "\x0d\x0b\x0c\x0e\x06\x05\x07\x07"
		.ascii  "\x05\x05\x07\x04\x04\x04\x04\x03"
		.ascii  "\x2e\x01\x04\x02\x0e\x0d\x0c\x0a"
		.ascii  "\x0d\x0e\x05\x05\x07\x06\x04\x05"
		.ascii  "\x07\x04\x04\x05\x0e\x0e\x2d\x01"
		.ascii  "\x04\x03\x0e\x0d\x0c\x0c\x0b\x0d"
		.ascii  "\x0e\x05\x05\x07\x06\x04\x05\x07"
		.ascii  "\x04\x04\x0e\x0d\x0d\x2d\x01\x04"
		.ascii  "\x03\x0e\x0c\x0b\x0e\x0c\x0d\x0e"
		.ascii  "\x06\x05\x07\x06\x03\x05\x07\x05"
		.ascii  "\x0e\x0d\x0d\x0c\x2d\x01\x04\x03"
		.ascii  "\x0e\x0d\x0b\x0c\x0b\x0c\x0e\x0e"
		.ascii  "\x06\x07\x06\x03\x05\x07\x05\x0e"
		.ascii  "\x0d\x0c\x0b\x2e\x01\x04\x02\x0e"
		.ascii  "\x0d\x0d\x0e\x0c\x0d\x0e\x0e\x07"
		.ascii  "\x06\x03\x05\x07\x05\x06\x0e\x0d"
		.ascii  "\x0c\x2f\x01\x04\x01\x0d\x0e\x0e"
		.ascii  "\x0e\x0c\x0d\x0e\x07\x06\x04\x05"
		.ascii  "\x07\x05\x05\x06\x0e\x0d\x31\x01"
		.ascii  "\x03\x03\x07\x0e\x0d\x0c\x0d\x07"
		.ascii  "\x06\x04\x05\x07\x05\x05\x05\x0e"
		.ascii  "\x0d\x31\x01\x03\x03\x07\x06\x0e"
		.ascii  "\x0c\x0d\x07\x06\x03\x05\x07\x0e"
		.ascii  "\x05\x0e\x0d\x0c\x31\x01\x03\x03"
		.ascii  "\x07\x06\x0e\x0d\x0c\x07\x06\x03"
		.ascii  "\x05\x07\x0e\x0e\x0d\x0c\x0c\x31"
		.ascii  "\x01\x03\x03\x07\x06\x0e\x0d\x0b"
		.ascii  "\x07\x06\x03\x05\x07\x0c\x0b\x0c"
		.ascii  "\x0c\x0d\x2c\x01\x01\x00\x0e\x0e"
		.ascii  "\x0e\x0e\x01\x00\x03\x03\x07\x0e"
		.ascii  "\x0e\x0d\x0c\x07\x06\x03\x05\x07"
		.ascii  "\x0d\x0c\x0b\x0d\x0e\x2b\x01\x05"
		.ascii  "\x01\x0e\x0d\x0d\x0c\x0d\x0e\x0e"
		.ascii  "\x0e\x0d\x0c\x0d\x07\x06\x03\x05"
		.ascii  "\x07\x0e\x0d\x0b\x0c\x0d\x2b\x01"
		.ascii  "\x05\x01\x0e\x0d\x0c\x0b\x0a\x0b"
		.ascii  "\x0c\x0c\x0c\x0b\x0d\x07\x06\x03"
		.ascii  "\x05\x07\x06\x0e\x0c\x0b\x0c\x2c"
		.ascii  "\x01\x05\x00\x0e\x0d\x0c\x0b\x0a"
		.ascii  "\x0a\x0a\x0b\x0c\x0e\x07\x06\x04"
		.ascii  "\x05\x07\x05\x0e\x0d\x0b\x0b\x2d"
		.ascii  "\x01\x04\x03\x0e\x0d\x0c\x0b\x0c"
		.ascii  "\x0b\x0c\x0d\x0e\x07\x06\x04\x05"
		.ascii  "\x07\x05\x0e\x0c\x0b\x0c\x2c\x01"
		.ascii  "\x05\x00\x0e\x0d\x0c\x0a\x0c\x0d"
		.ascii  "\x0a\x0c\x0e\x06\x07\x06\x04\x06"
		.ascii  "\x0e\x0e\x0d\x0b\x0d\x0b\x2c\x01"
		.ascii  "\x05\x00\x0e\x0c\x0b\x0c\x0d\x0e"
		.ascii  "\x0b\x0d\x0e\x05\x07\x06\x0e\x0e"
		.ascii  "\x0e\x0d\x0b\x0c\x0e\x0c\x2c\x01"
		.ascii  "\x05\x00\x0e\x0e\x0c\x0d\x0e\x0e"
		.ascii  "\x0c\x0d\x0e\x05\x0e\x0e\x0e\x0d"
		.ascii  "\x0c\x0b\x0d\x0e\x0c\x0d\x2d\x01"
		.ascii  "\x00\x03\x0e\x0e\x0e\x01\x00\x03"
		.ascii  "\x03\x0e\x0d\x0e\x0e\x0e\x0d\x0c"
		.ascii  "\x0b\x0c\x0d\x0e\x0e\x0d\x0d\x0e"
		.ascii  "\x31\x01\x03\x03\x0e\x0e\x0e\x0d"
		.ascii  "\x0c\x0c\x0c\x0d\x0e\x0e\x0c\x0e"
		.ascii  "\x0c\x0e\x0e\x29\x01\x00\x03\x0e"
		.ascii  "\x0e\x0e\x05\x00\x03\x03\x0e\x0d"
		.ascii  "\x0c\x0b\x0b\x0c\x0d\x0e\x06\x07"
		.ascii  "\x0e\x0d\x0b\x0e\x04\x28\x01\x01"
		.ascii  "\x01\x0e\x0e\x0c\x0d\x0e\x02\x00"
		.ascii  "\x04\x01\x0c\x0e\x0d\x0b\x0a\x0a"
		.ascii  "\x0c\x0d\x0e\x06\x06\x07\x0e\x0c"
		.ascii  "\x0b\x0e\x04\x28\x01\x06\x00\x0e"
		.ascii  "\x0d\x0b\x0b\x0d\x0d\x0e\x0d\x0c"
		.ascii  "\x0a\x0a\x0a\x0b\x0d\x0e\x06\x06"
		.ascii  "\x05\x07\x0e\x0d\x0c\x0d\x0e\x28"
		.ascii  "\x01\x06\x00\x0e\x0c\x0b\x0a\x0b"
		.ascii  "\x0c\x0b\x0a\x0a\x0b\x0b\x0c\x0b"
		.ascii  "\x0c\x0e\x06\x05\x05\x07\x06\x0e"
		.ascii  "\x0d\x0c\x0e\x29\x01\x05\x03\x0e"
		.ascii  "\x0d\x0c\x0c\x0d\x0d\x0c\x0b\x0b"
		.ascii  "\x0c\x0d\x0a\x0b\x0d\x0e\x0e\x05"
		.ascii  "\x07\x05\x0e\x0e\x0e\x04\x2a\x01"
		.ascii  "\x05\x02\x0e\x0e\x0e\x0e\x0c\x0b"
		.ascii  "\x0b\x0a\x0c\x0e\x0b\x0a\x0b\x0d"
		.ascii  "\x0e\x05\x07\x05\x05\x05\x05\x04"
		.ascii  "\x2c\x01\x05\x00\x0e\x0d\x0b\x0b"
		.ascii  "\x0c\x0a\x0b\x0e\x0c\x0a\x0a\x0b"
		.ascii  "\x0d\x0e\x07\x06\x05\x05\x05\x04"
		.ascii  "\x2c\x01\x05\x00\x0e\x0b\x0a\x0c"
		.ascii  "\x0e\x0b\x0a\x0d\x0e\x0c\x0a\x0b"
		.ascii  "\x0c\x0e\x07\x0e\x0e\x0c\x04\x03"
		.ascii  "\x2c\x01\x05\x00\x0e\x0d\x0c\x0d"
		.ascii  "\x0e\x0c\x0b\x0c\x0e\x0d\x0b\x0b"
		.ascii  "\x0d\x0e\x07\x0c\x0d\x0e\x04\x03"
		.ascii  "\x2c\x01\x05\x00\x0e\x0e\x0d\x0e"
		.ascii  "\x0e\x0d\x0c\x0c\x0d\x0e\x0d\x0c"
		.ascii  "\x0e\x06\x07\x0b\x0c\x0d\x0e\x03"
		.ascii  "\x2a\x01\x05\x02\x0e\x0e\x0d\x0e"
		.ascii  "\x0e\x0d\x0e\x0e\x0c\x0d\x0e\x04"
		.ascii  "\x0e\x0e\x06\x06\x07\x0c\x0b\x0c"
		.ascii  "\x0e\x04\x29\x01\x05\x03\x0e\x0d"
		.ascii  "\x0d\x0c\x0c\x0c\x0c\x0d\x0d\x0e"
		.ascii  "\x0e\x0e\x04\x07\x07\x06\x05\x07"
		.ascii  "\x0d\x0a\x0b\x0e\x0e\x28\x01\x06"
		.ascii  "\x00\x0e\x0e\x0c\x0b\x0b\x0a\x0a"
		.ascii  "\x0a\x0b\x0b\x0b\x0c\x0d\x0e\x0e"
		.ascii  "\x06\x04\x05\x07\x0c\x0a\x0b\x0c"
		.ascii  "\x0d\x28\x01\x06\x00\x0e\x0d\x0b"
		.ascii  "\x0a\x0b\x0c\x0c\x0c\x0b\x0a\x0a"
		.ascii  "\x0b\x0b\x0c\x0d\x0e\x0e\x05\x07"
		.ascii  "\x0c\x0b\x0a\x0b\x0c\x28\x01\x06"
		.ascii  "\x00\x0e\x0c\x0a\x0b\x0d\x0e\x0e"
		.ascii  "\x0e\x0d\x0d\x0c\x0b\x0a\x0a\x0b"
		.ascii  "\x0c\x0d\x0e\x0e\x0e\x0d\x0b\x0a"
		.ascii  "\x0b\x29\x01\x01\x00\x0e\x0c\x0c"
		.ascii  "\x0e\x03\x00\x04\x00\x0e\x0e\x0d"
		.ascii  "\x0c\x0c\x0b\x0a\x0b\x0c\x0d\x0e"
		.ascii  "\x05\x0e\x0c\x0a\x0b\x2a\x01\x00"
		.ascii  "\x03\x0e\x0e\x0c\x02\x00\x04\x01"
		.ascii  "\x0e\x0d\x0c\x0c\x0b\x0b\x0c\x0c"
		.ascii  "\x0b\x0b\x0c\x0d\x0e\x05"
		.ascii   "\r\n\n."
		.ascii  "\x01\x04\x02\x0e\x0d\x0b\x0b\x0d"
		.ascii  "\x0e\x0e\x0e\x0e\x0d\x0c\x0b\x0c"
		.ascii  "\x0d\x05\x0e\x0b\x0a\x2e\x01\x04"
		.ascii  "\x02\x0e\x0c\x0d\x0e\x0e\x05\x06"
		.ascii  "\x06\x07\x0e\x0e\x0d\x0b\x0c\x0e"
		.ascii  "\x0e\x0b\x0a\x2e\x01\x04\x02\x0e"
		.ascii  "\x0e\x0c\x0c\x0e\x05\x05\x05\x07"
		.ascii  "\x07\x0e\x0e\x0d\x0c\x0d\x0e\x0c"
		.ascii  "\x0a\x2f\x01\x04\x01\x0e\x0e\x0e"
		.ascii  "\x0e\x05\x05\x05\x07\x07\x06\x07"
		.ascii  "\x0e\x0d\x0c\x0e\x0c\x0a\x31\x01"
		.ascii  "\x03\x03\x07\x05\x04\x04\x05\x07"
		.ascii  "\x07\x05\x06\x0e\x0e\x0d\x0d\x0c"
		.ascii  "\x0a\x31\x01\x03\x03\x07\x05\x04"
		.ascii  "\x04\x04\x07\x06\x05\x06\x07\x06"
		.ascii  "\x0e\x0c\x0c\x0b\x31\x01\x03\x03"
		.ascii  "\x07\x05\x04\x04\x04\x07\x06\x04"
		.ascii  "\x06\x07\x05\x0e\x0d\x0c\x0b\x31"
		.ascii  "\x01\x03\x03\x07\x05\x04\x04\x04"
		.ascii  "\x07\x06\x03\x06\x07\x05\x06\x0e"
		.ascii  "\x0c\x0a\x30\x01\x04\x00\x0e\x07"
		.ascii  "\x05\x04\x04\x04\x07\x06\x04\x05"
		.ascii  "\x07\x05\x05\x0e\x0c\x0a\x2f\x01"
		.ascii  "\x04\x01\x0e\x0c\x07\x05\x04\x04"
		.ascii  "\x04\x07\x06\x03\x05\x07\x05\x05"
		.ascii  "\x0e\x0c\x0b\x2e\x01\x04\x02\x0e"
		.ascii  "\x0c\x0a\x07\x05\x04\x04\x04\x07"
		.ascii  "\x06\x03\x05\x07\x05\x05\x0e\x0b"
		.ascii  "\x0b\x2d\x01\x04\x03\x0e\x0c\x0a"
		.ascii  "\x0c\x07\x05\x04\x04\x04\x07\x06"
		.ascii  "\x03\x05\x07\x05\x05\x0e\x0b\x0d"
		.ascii  "\x2c\x01\x05\x00\x0d\x0e\x0a\x0c"
		.ascii  "\x0e\x07\x05\x04\x04\x04\x07\x06"
		.ascii  "\x03\x05\x07\x05\x0e\x0d\x0c\x0e"
		.ascii  "\x2c\x01\x01\x00\x0e\x0c\x0c\x0e"
		.ascii  "\x01\x00\x03\x03\x07\x05\x04\x05"
		.ascii  "\x05\x07\x06\x03\x05\x07\x05\x0e"
		.ascii  "\x0c\x0d\x0e\x2b\x01\x01\x01\x0e"
		.ascii  "\x0d\x0b\x0d\x0e\x01\x00\x03\x03"
		.ascii  "\x07\x05\x05\x05\x05\x07\x06\x04"
		.ascii  "\x05\x07\x0e\x0c\x0d\x0e\x0e\x2b"
		.ascii  "\x01\x01\x00\x0e\x0d\x0b\x0e\x02"
		.ascii  "\x00\x03\x03\x07\x06\x05\x05\x05"
		.ascii  "\x07\x06\x04\x05\x07\x0c\x0d\x0e"
		.ascii  "\x0e\x03\x2b\x01\x01\x00\x0e\x0d"
		.ascii  "\x0a\x0e\x02\x00\x03\x03\x07\x06"
		.ascii  "\x05\x0c\x0e\x07\x06\x03\x05\x07"
		.ascii  "\x0e\x0e\x04\x04\x03\x2c\x01\x01"
		.ascii  "\x00\x0e\x0c\x0d\x0e\x01\x00\x03"
		.ascii  "\x03\x07\x06\x0e\x0d\x0d\x07\x06"
		.ascii  "\x03\x05\x07\x04\x04\x04\x04\x03"
		.ascii  "\x2c\x01\x05\x00\x0e\x0d\x0a\x0c"
		.ascii  "\x0e\x07\x0e\x0d\x0c\x0d\x07\x06"
		.ascii  "\x03\x05\x07\x04\x04\x04\x04\x03"
		.ascii  "\x2d\x01\x04\x03\x0e\x0c\x0d\x0e"
		.ascii  "\x0e\x0d\x0c\x0d\x0e\x07\x06\x03"
		.ascii  "\x05\x07\x03\x04\x04\x04\x02\x2e"
		.ascii  "\x01\x04\x02\x0e\x0e\x0e\x0d\x0b"
		.ascii  "\x0d\x0e\x05\x07\x06\x04\x05\x07"
		.ascii  "\x03\x03\x04\x04\x02\x30\x01\x04"
		.ascii  "\x00\x0e\x0c\x0c\x0e\x05\x05\x07"
		.ascii  "\x06\x04\x05\x07\x02\x03\x03\x04"
		.ascii  "\x02\x30\x01\x04\x00\x0e\x0b\x0d"
		.ascii  "\x04\x05\x05\x07\x06\x03\x05\x07"
		.ascii  "\x04\x02\x03\x03\x02\x30\x01\x04"
		.ascii  "\x00\x0e\x0a\x0e\x04\x05\x05\x07"
		.ascii  "\x06\x04\x05\x07\x04\x04\x02\x03"
		.ascii  "\x02\x30\x01\x04\x00\x0e\x0b\x0d"
		.ascii  "\x04\x05\x05\x0e\x0e\x04\x0e\x0e"
		.ascii  "\x03\x04\x04\x02\x02\x30\x01\x04"
		.ascii  "\x00\x0e\x0c\x0c\x0e\x05\x0e\x0e"
		.ascii  "\x0c\x0e\x0c\x0e\x0e\x03\x04\x04"
		.ascii  "\x02\x31\x01\x03\x03\x0e\x0b\x0d"
		.ascii  "\x05\x0e\x0d\x0b\x0e\x0b\x0d\x0e"
		.ascii  "\x04\x02\x04\x03\x31\x01\x03\x03"
		.ascii  "\x0e\x0e\x0c\x0d\x0e\x0c\x0e\x0d"
		.ascii  "\x0e\x0c\x0e\x04\x04\x02\x03\x31"
		.ascii  "\x01\x03\x03\x07\x0e\x0e\x0c\x0e"
		.ascii  "\x0e\x0c\x0c\x0d\x0e\x0e\x04\x04"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x06"
		.ascii  "\x05\x0e\x0e\x0d\x0b\x0d\x0c\x0d"
		.ascii  "\x0e\x04\x04\x04\x02\x31\x01\x03"
		.ascii  "\x03\x07\x06\x05\x0e\x0d\x0c\x0a"
		.ascii  "\x0e\x0a\x0c\x0d\x0e\x04\x04\x03"
		.ascii  "\x31\x01\x03\x03\x07\x06\x05\x0e"
		.ascii  "\x0d\x0e\x0c\x0d\x0c\x0e\x0d\x0e"
		.ascii  "\x04\x04\x03\x31\x01\x03\x03\x07"
		.ascii  "\x06\x0e\x0c\x0a\x0b\x0e\x0c\x0e"
		.ascii  "\x0c\x0a\x0b\x0e\x04\x03\x31\x01"
		.ascii  "\x03\x03\x07\x06\x0e\x0b\x0e\x0a"
		.ascii  "\x0e\x0b\x0e\x0b\x0e\x0a\x0e\x04"
		.ascii  "\x03\x31\x01\x03\x03\x07\x06\x05"
		.ascii  "\x0e\x0e\x0e\x0b\x0e\x0b\x0e\x0e"
		.ascii  "\x0e\x04\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x06\x05\x05\x05\x0e\x0d\x0e"
		.ascii  "\x0d\x0e\x04\x04\x04\x04\x02\x31"
		.ascii  "\x01\x03\x03\x07\x06\x05\x05\x0e"
		.ascii  "\x0c\x0e\x0c\x0e\x0c\x0e\x04\x04"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x06"
		.ascii  "\x05\x05\x0e\x0e\x0e\x0e\x0e\x0e"
		.ascii  "\x0e\x03\x04\x04\x02\x31\x01\x03"
		.ascii  "\x03\x07\x06\x05\x05\x0e\x0c\x0c"
		.ascii  "\x0c\x0c\x0c\x0e\x03\x03\x04\x02"
		.ascii  "\x31\x01\x03\x03\x07\x06\x05\x05"
		.ascii  "\x05\x0e\x0e\x0d\x0e\x0d\x04\x04"
		.ascii  "\x03\x03\x02\x31\x01\x03\x03\x07"
		.ascii  "\x05\x04\x05\x05\x0e\x0c\x0d\x0b"
		.ascii  "\x0e\x03\x04\x04\x03\x02\x31\x01"
		.ascii  "\x03\x03\x07\x05\x04\x05\x05\x0e"
		.ascii  "\x0a\x0e\x0a\x0e\x04\x03\x04\x04"
		.ascii  "\x02\x31\x01\x03\x03\x07\x05\x04"
		.ascii  "\x05\x06\x0e\x0d\x0d\x0d\x0e\x06"
		.ascii  "\x04\x03\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x05\x05\x05\x0e\x0d\x0d\x0c"
		.ascii  "\x0c\x0d\x0e\x04\x04\x03\x02\x31"
		.ascii  "\x01\x03\x03\x07\x06\x05\x0e\x0d"
		.ascii  "\x0e\x0d\x0c\x0a\x0c\x0d\x0e\x04"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x06"
		.ascii  "\x05\x0e\x0e\x0e\x0d\x0c\x0c\x0a"
		.ascii  "\x0c\x0e\x04\x04\x02\x31\x01\x03"
		.ascii  "\x03\x07\x06\x0e\x0e\x0e\x0e\x0e"
		.ascii  "\x0e\x0e"
		.ascii   "\r\r\r\r"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x06"
		.ascii  "\x0f\x0d\x0e\x0b"
		.ascii   "\n\r\t\n"
		.ascii  "\x0e\x0c\x0d\x04\x02\x31\x01\x03"
		.ascii  "\x03\x07\x06\x0f\x0e\x0f\x0e\x0e"
		.ascii  "\x0f\x0d\x0d\x0f\x0d\x0e\x04\x02"
		.ascii  "\x31\x01\x03\x03\x07\x06\x05\x07"
		.ascii  "\x07\x07\x07\x06\x03\x04\x06\x07"
		.ascii  "\x04\x04\x02\x31\x01\x03\x03\x07"
		.ascii  "\x06\x05\x07\x06\x07\x06\x04\x01"
		.ascii  "\x05\x06\x07\x04\x04\x03\x31\x01"
		.ascii  "\x03\x03\x07\x06\x05\x05\x07\x06"
		.ascii  "\x05\x03\x05\x06\x07\x04\x04\x04"
		.ascii  "\x03\x31\x01\x03\x03\x07\x06\x05"
		.ascii  "\x05\x05\x07\x07\x07\x07\x07\x03"
		.ascii  "\x03\x04\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x05\x05\x05\x05\x05\x0e\x0d"
		.ascii  "\x0e\x04\x04\x03\x03\x04\x02\x31"
		.ascii  "\x01\x03\x03\x07\x05\x04\x05\x05"
		.ascii  "\x0e\x0d\x0b\x0d\x0e\x04\x04\x03"
		.ascii  "\x03\x02\x31\x01\x03\x03\x07\x05"
		.ascii  "\x04\x04\x0e\x0e\x0d\x0c\x0d\x0e"
		.ascii  "\x0e\x04\x04\x03\x02\x31\x01\x03"
		.ascii  "\x03\x07\x05\x04\x0e\x0d\x0d\x0e"
		.ascii  "\x0e\x0e\x0c\x0d\x0e\x04\x04\x02"
		.ascii  "\x31\x01\x03\x03\x07\x05\x0e\x0d"
		.ascii  "\x0c\x0a\x0d\x0e\x0d\x0a\x0b\x0e"
		.ascii  "\x0e\x04\x02\x31\x01\x03\x03\x07"
		.ascii  "\x05\x0e\x0c\x0a\x0c\x0e\x0b\x0e"
		.ascii  "\x0c\x0a\x0c\x0e\x04\x02\x31\x01"
		.ascii  "\x03\x03\x07\x05\x0e\x0d\x0d\x0e"
		.ascii  "\x0e\x0d\x0e\x0e\x0d\x0d\x0e\x04"
		.ascii  "\x02\x31\x01\x03\x03\x07\x05\x04"
		.ascii  "\x0e\x0e\x0e\x0c\x0e\x0c\x0e\x0e"
		.ascii  "\x0e\x04\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x05\x04\x04\x0e\x0d\x0b\x0e"
		.ascii  "\x0b\x0d\x0e\x04\x04\x04\x02\x31"
		.ascii  "\x01\x03\x03\x07\x05\x04\x0e\x0d"
		.ascii  "\x0a\x0c\x0e\x0c\x0b\x0d\x0d\x04"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x05"
		.ascii  "\x0e\x0c\x0a\x0c\x0e\x0e\x0e\x0c"
		.ascii  "\x09\x0b\x0d\x04\x03\x31\x01\x03"
		.ascii  "\x03\x07\x05\x0e\x0b\x0c\x0d\x0e"
		.ascii  "\x0d\x0e\x0d\x0b\x0a\x0d\x04\x03"
		.ascii  "\x31\x01\x03\x03\x07\x05\x06\x0e"
		.ascii  "\x0e\x0e\x0d\x0c\x0d\x0e\x0e\x0d"
		.ascii  "\x04\x04\x03\x2d\x01\x00\x03\x0e"
		.ascii  "\x0e\x0c\x01\x00\x03\x03\x07\x05"
		.ascii  "\x05\x06\x0f\x0d\x0c\x0c\x0b\x0d"
		.ascii  "\x0f\x04\x04\x04\x03\x2c\x01\x01"
		.ascii  "\x00\x0e\x0c\x0d\x0e\x01\x00\x03"
		.ascii  "\x03\x0d\x0d\x05\x05\x0f\x0e\x0d"
		.ascii  "\x0b\x09\x0e\x0f\x0e\x04\x04\x03"
		.ascii  "\x2b\x01\x05\x01\x0e\x0d\x0b\x0b"
		.ascii  "\x0e\x0d\x0c\x0c\x0d\x05\x05\x0f"
		.ascii  "\x0e\x09\x0e\x0f\x0e\x0d\x0e\x04"
		.ascii  "\x03\x2b\x01\x05\x01\x0e\x0c\x0a"
		.ascii  "\x0b\x0d\x0c\x0a\x0b\x0d\x0e\x05"
		.ascii  "\x06\x0f\x0d\x0f\x05\x05\x0e\x0c"
		.ascii  "\x0e\x03\x2b\x01\x05\x01\x0e\x0c"
		.ascii  "\x0a\x0b\x0d\x0a\x0c\x0d\x04\x05"
		.ascii  "\x05\x05\x0d\x0f\x0d\x05\x05\x06"
		.ascii  "\x0d\x0c\x0e\x2b\x01\x05\x01\x0e"
		.ascii  "\x0c\x0a\x0a\x0b\x0a\x0d\x04\x04"
		.ascii  "\x05\x05\x05\x05\x05\x04\x05\x05"
		.ascii  "\x05\x0e\x0b\x0e\x2b\x01\x05\x01"
		.ascii  "\x0e\x0e\x0b\x0a\x0b\x0b\x0e\x04"
		.ascii  "\x04\x04\x05\x05\x05\x05\x04\x05"
		.ascii  "\x05\x06\x0d\x0a\x0c\x2a\x01\x05"
		.ascii  "\x02\x0e\x0d\x0e\x0c\x0a\x0a\x0b"
		.ascii  "\x0e\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x05\x05\x0d\x0d\x0c\x0a\x0b\x2a"
		.ascii  "\x01\x05\x02\x0e\x0c\x0c\x0d\x0b"
		.ascii  "\x0a\x0b\x0d\x05\x04\x04\x0d\x0d"
		.ascii  "\x0d\x05\x05\x05\x0d\x0c\x0b\x0d"
		.ascii  "\x0c\x2a\x01\x05\x02\x0e\x0e\x0d"
		.ascii  "\x0c\x0b\x0a\x0a\x0d\x0e\x05\x0d"
		.ascii  "\x0c\x0c\x0d\x05\x05\x05\x06\x0d"
		.ascii  "\x0d\x0c\x0e\x2c\x01\x05\x00\x0e"
		.ascii  "\x0d\x0c\x0b\x0b\x0b\x0d\x0d\x0e"
		.ascii  "\x0b\x0b\x0c\x0d\x05\x05\x07\x0d"
		.ascii  "\x0e\x0b\x0e\x2d\x01\x04\x03\x0e"
		.ascii  "\x0e\x0d\x0d\x0c\x0b\x0c\x0e\x0c"
		.ascii  "\x0a\x0b\x0c\x0d\x0d\x0d\x0e\x0b"
		.ascii  "\x0c\x0e\x30\x01\x04\x00\x0d\x0e"
		.ascii  "\x0e\x0e\x0c\x0d\x0c\x0b\x0a\x0b"
		.ascii  "\x0c\x0c\x0b\x0a\x0d\x03\x31\x01"
		.ascii  "\x03\x03\x07\x06\x05\x0d\x0d\x0d"
		.ascii  "\x0c\x0c\x0b\x0a\x0a\x0a\x0c\x0d"
		.ascii  "\x03\x31\x01\x03\x03\x07\x06\x0d"
		.ascii  "\x0e\x0c\x0b\x0a\x0a\x0b\x0c\x0c"
		.ascii  "\x0c\x0d\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x06\x05\x0d\x0d\x0c\x0c\x0c"
		.ascii  "\x0c\x0d\x0d\x0d\x04\x04\x02\x31"
		.ascii  "\x01\x03\x03\x07\x06\x05\x05"
		.ascii   "\r\r\r\r\r"
		.ascii  "\x04\x04\x04\x04\x04\x02\x31\x01"
		.ascii  "\x03\x03\x07\x06\x05\x0e\x0d\x0b"
		.ascii  "\x0d\x0e\x03\x04\x04\x04\x04\x04"
		.ascii  "\x02\x31\x01\x03\x03\x07\x06\x0e"
		.ascii  "\x0d\x0a\x0d\x04\x03\x03\x03\x04"
		.ascii  "\x04\x04\x04\x03\x31\x01\x03\x03"
		.ascii  "\x07\x06\x0e\x0b\x0d\x03\x04\x04"
		.ascii  "\x03\x03\x03\x04\x04\x04\x03\x31"
		.ascii  "\x01\x03\x03\x07\x0e\x0d\x0c\x0d"
		.ascii  "\x04\x03\x04\x04\x03\x03\x03\x04"
		.ascii  "\x04\x03\x31\x01\x03\x03\x07\x0e"
		.ascii  "\x0b\x0d\x04\x04\x04\x03\x04\x04"
		.ascii  "\x03\x03\x03\x04\x03\x31\x01\x03"
		.ascii  "\x03\x07\x0e\x0a\x0d\x04\x04\x04"
		.ascii  "\x04\x03\x04\x04\x03\x03\x03\x02"
		.ascii  "\x31\x01\x03\x03\x07\x0e\x0b\x0d"
		.ascii  "\x04\x04\x04\x04\x04\x03\x04\x04"
		.ascii  "\x03\x03\x02\x31\x01\x03\x03\x07"
		.ascii  "\x0e\x0c\x0c\x0c\x04\x04\x04\x04"
		.ascii  "\x04\x03\x04\x04\x03\x02\x31\x01"
		.ascii  "\x03\x03\x07\x05\x0e\x0c\x0e\x0e"
		.ascii  "\x0e\x04\x04\x04\x04\x03\x04\x04"
		.ascii  "\x02\x31\x01\x03\x03\x07\x05\x0e"
		.ascii  "\x0e\x0e\x0c\x0e\x0e\x0e\x04\x04"
		.ascii  "\x04\x03\x04\x02\x31\x01\x03\x03"
		.ascii  "\x07\x0e\x0e\x0d\x0c\x0b\x0d\x0d"
		.ascii  "\x0d\x0e\x04\x04\x04\x03\x02\x31"
		.ascii  "\x01\x03\x03\x07\x0e\x0d\x0c\x0e"
		.ascii  "\x0d\x0c\x0b\x0d\x0e\x04\x04\x04"
		.ascii  "\x04\x02\x31\x01\x03\x03\x07\x05"
		.ascii  "\x0e\x0e\x0c\x0b\x0c\x0e\x0e\x04"
		.ascii  "\x04\x04\x04\x04\x02\x31\x01\x03"
		.ascii  "\x03\x07\x05\x0e\x0c\x0c\x0e\x0d"
		.ascii  "\x0b\x0e\x0e\x04\x04\x04\x04\x03"
		.ascii  "\x31\x01\x03\x03\x07\x05\x0e\x0b"
		.ascii  "\x0d\x0e\x0e\x0e\x0c\x0d\x0e\x04"
		.ascii  "\x04\x04\x03\x31\x01\x03\x03\x07"
		.ascii  "\x05\x05\x0e\x0e\x06\x06\x06\x0e"
		.ascii  "\x0c\x0d\x0e\x0e\x04\x03\x31\x01"
		.ascii  "\x03\x03\x07\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x06\x0e\x0d\x0b\x0c\x0e"
		.ascii  "\x04\x31\x01\x03\x03\x07\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x06\x0e"
		.ascii  "\x0d\x0b\x0c\x0e\x31\x01\x03\x03"
		.ascii  "\x07\x05\x04\x04\x05\x05\x04\x05"
		.ascii  "\x05\x05\x06\x0e\x0b\x0c\x0e\x31"
		.ascii  "\x01\x03\x03\x07\x05\x04\x04\x04"
		.ascii  "\x04\x04\x04\x0e\x05\x06\x0e\x0c"
		.ascii  "\x0b\x0c\x31\x01\x03\x03\x07\x05"
		.ascii  "\x04\x04\x04\x05\x05\x0e\x0d\x0e"
		.ascii  "\x0e\x0d\x0c\x0b\x0c\x31\x01\x03"
		.ascii  "\x03\x07\x05\x04\x04\x04\x05\x05"
		.ascii  "\x0e\x0c\x0d\x0c\x0c\x0c\x0a\x0c"
		.ascii  "\x31\x01\x03\x03\x07\x05\x04\x0e"
		.ascii  "\x0e\x05\x05\x0e\x0d\x0c\x0e\x0e"
		.ascii  "\x0c\x0a\x0c\x31\x01\x03\x03\x07"
		.ascii  "\x05\x0e\x0d\x0e\x05\x05\x05\x0e"
		.ascii  "\x0e\x0e\x0d\x0b\x0a\x0c\x31\x01"
		.ascii  "\x03\x03\x07\x05\x0e\x0c\x0c\x0e"
		.ascii  "\x0e\x0e\x0e\x0d\x0c\x0c\x0b\x0b"
		.ascii  "\x0c\x31\x01\x03\x03\x0e\x0e\x0e"
		.ascii  "\x0d\x0c\x0c\x0b\x0b\x0b\x0c\x0c"
		.ascii  "\x0e\x0c\x0b\x0e\x30\x01\x04\x00"
		.ascii  "\x0e\x0c\x0d\x0e\x0e\x0e\x0d\x0c"
		.ascii  "\x0b\x0c\x0d\x0d\x05\x0e\x0c\x0d"
		.ascii  "\x30\x01\x04\x00\x0e\x0c\x0b\x0b"
		.ascii  "\x0b\x0b\x0b\x0b\x0c\x0d\x0d\x05"
		.ascii  "\x05\x05\x0e\x0e\x30\x01\x04\x00"
		.ascii  "\x0e\x0d\x0c\x0b\x0b\x0b\x0c\x0c"
		.ascii  "\x0d\x0d\x04\x05\x05\x05\x05\x04"
		.ascii  "\x31\x01\x03\x03\x0e\x0d\x0c\x0c"
		.ascii  "\x0d\x0d\x0d\x03\x03\x04\x05\x05"
		.ascii  "\x05\x05\x04\x31\x01\x03\x03\x0e"
		.ascii  "\x0e\x0e\x0e\x0e\x03\x04\x04\x03"
		.ascii  "\x03\x04\x04\x05\x05\x03\x30\x01"
		.ascii  "\x04\x00\x0e\x0e\x0b\x0b\x0d\x04"
		.ascii  "\x04\x03\x04\x04\x03\x03\x04\x04"
		.ascii  "\x04\x02\x2f\x01\x04\x01\x0e\x0c"
		.ascii  "\x0b\x0d\x0e\x04\x04\x04\x04\x03"
		.ascii  "\x04\x04\x03\x03\x04\x04\x02\x2e"
		.ascii  "\x01\x04\x02\x0e\x0c\x0b\x0d\x0e"
		.ascii  "\x0e\x04\x04\x04\x04\x04\x03\x04"
		.ascii  "\x04\x03\x03\x04\x02\x28\x01\x00"
		.ascii  "\x03\x0e\x0e\x0e\x02\x00\x04\x03"
		.ascii  "\x0e\x0d\x0b\x0c\x0e\x0d\x0e\x04"
		.ascii  "\x04\x04\x04\x0d\x0d\x0e\x04\x04"
		.ascii  "\x03\x03\x02\x27\x01\x00\x03\x0e"
		.ascii  "\x0d\x0e\x02\x00\x05\x00\x0e\x0e"
		.ascii  "\x0c\x0b\x0d\x0e\x0c\x0d\x0e\x04"
		.ascii  "\x04\x0e\x0d\x0b\x0c\x0d\x04\x04"
		.ascii  "\x03\x02\x27\x01\x06\x01\x0e\x0c"
		.ascii  "\x0d\x0e\x0e\x0e\x0d\x0b\x0c\x0e"
		.ascii  "\x0e\x0d\x0c\x0e\x0e\x04\x04\x0e"
		.ascii  "\x0c\x0b\x0c\x0d\x04\x04\x02\x27"
		.ascii  "\x01\x06\x01\x0e\x0d\x0c\x0b\x0a"
		.ascii  "\x0a\x0b\x0b\x0c\x0e\x0e\x0e\x0c"
		.ascii  "\x0b\x0d\x0e\x0e\x0c\x0b\x0a\x0b"
		.ascii  "\x0d\x03\x04\x02\x27\x01\x06\x01"
		.ascii  "\x0e\x0e\x0d\x0c\x0c\x0b\x0c\x0a"
		.ascii  "\x0d\x0e\x07\x0e\x0d\x0c\x0b\x0c"
		.ascii  "\x0c\x0b\x0a\x0a\x0c\x0d\x04\x03"
		.ascii  "\x02\x28\x01\x06\x00\x0e\x0e\x0e"
		.ascii  "\x0d\x0d\x0e\x0a\x0e\x0e\x07\x06"
		.ascii  "\x0e\x0d\x0c\x0b\x0a\x0a\x0a\x0c"
		.ascii  "\x0d\x04\x04\x04\x02\x2a\x01\x01"
		.ascii  "\x02\x0e\x0e\x0e\x0c\x0a\x0e\x01"
		.ascii  "\x00\x03\x03\x07\x06\x0d\x0e\x0e"
		.ascii  "\x0d\x0c\x0d\x0e\x0d\x04\x04\x04"
		.ascii  "\x04\x02\x2b\x01\x01\x01\x0e\x0d"
		.ascii  "\x0b\x0b\x0e\x01\x00\x03\x03\x07"
		.ascii  "\x06\x05\x0e\x0d\x0e\x0e\x0e\x0c"
		.ascii  "\x04\x04\x04\x04\x04\x03\x2a\x01"
		.ascii  "\x01\x02\x0e\x0d\x0c\x0a\x0c\x0e"
		.ascii  "\x01\x00\x03\x03\x07\x06\x05\x05"
		.ascii  "\x0e\x0d\x0e\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x03\x2a\x01\x01\x02\x0e"
		.ascii  "\x0c\x0b\x0a\x0c\x0e\x01\x00\x03"
		.ascii  "\x03\x07\x06\x0e\x0e\x0d\x0c\x0d"
		.ascii  "\x0d\x04\x04\x04\x04\x04\x04\x03"
		.ascii  "\x29\x01\x01\x03\x0e\x0d\x0c\x0b"
		.ascii  "\x0a\x0c\x0e\x01\x00\x03\x03\x07"
		.ascii  "\x06\x05\x0e\x0d\x0b\x0c\x0d\x04"
		.ascii  "\x04\x04\x04\x04\x04\x02\x29\x01"
		.ascii  "\x05\x03\x0e\x0c\x0b\x0a\x0a\x0c"
		.ascii  "\x0e\x0e\x07\x06\x05\x05\x0e\x0d"
		.ascii  "\x0d\x05\x04\x04\x04\x04\x04\x04"
		.ascii  "\x02\x29\x01\x05\x03\x0e\x0b\x0a"
		.ascii  "\x0a\x0a\x0c\x0d\x0e\x07\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x04\x04\x0e"
		.ascii  "\x0e\x04\x04\x02\x29\x01\x05\x03"
		.ascii  "\x0e\x0b\x0c\x0c\x0b\x0a\x0b\x0d"
		.ascii  "\x0e\x05\x04\x05\x05\x05\x05\x04"
		.ascii  "\x04\x04\x0e\x0d\x0e\x04\x02\x29"
		.ascii  "\x01\x05\x03\x0e\x0c\x0d\x0d\x0c"
		.ascii  "\x0a\x0a\x0c\x0e\x0e\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x0e\x0e\x0c\x0d"
		.ascii  "\x0e\x03\x29\x01\x05\x03\x0e\x0d"
		.ascii  "\x0e\x0e\x0e\x0c\x0a\x0a\x0c\x0d"
		.ascii  "\x0e\x0e\x04\x04\x04\x04\x0e\x0e"
		.ascii  "\x0d\x0b\x0d\x0e\x03\x2a\x01\x00"
		.ascii  "\x02\x0e\x0e\x02\x00\x04\x02\x0e"
		.ascii  "\x0c\x0a\x0a\x0c\x0d\x0d\x0e\x0e"
		.ascii  "\x0e\x0e\x0d\x0c\x0c\x0b\x0c\x0d"
		.ascii  "\x0e\x2a\x01\x00\x01\x0e\x04\x00"
		.ascii  "\x04\x01\x0e\x0a\x0a\x0a\x0b\x0c"
		.ascii  "\x0d\x0d\x0d\x0c\x0c\x0b\x0a\x0a"
		.ascii  "\x0c\x0d\x0e\x2b\x01\x00\x01\x0e"
		.ascii  "\x02\x00\x04\x02\x0e\x0c\x0b"
		.ascii   "\n\n\n\n"
		.ascii  "\x0b\x0b\x0b\x0b\x0b\x0a\x0a\x0a"
		.ascii  "\x0c\x0c\x0e\x2b\x01\x05\x01\x0e"
		.ascii  "\x0e\x0e\x0d\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0d\x0e\x2b\x01\x05\x01"
		.ascii  "\x0e\x0e\x0c\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0e\x03\x2c\x01\x05\x00"
		.ascii  "\x0e\x0d\x0c\x0b"
		.ascii   "\n\n\n\n\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0c\x0d\x0d\x03\x2d\x01\x04"
		.ascii  "\x03\x0e\x0d\x0c\x0b\x0b"
		.ascii   "\n\n\n\n\n\n\n"
		.ascii  "\x0b\x0b\x0c\x0d\x0e\x05\x03\x2e"
		.ascii  "\x01\x04\x02\x0e\x0d\x0c\x0c\x0b"
		.ascii  "\x0b\x0b\x0b\x0b\x0b\x0c\x0c\x0d"
		.ascii  "\x0e\x0e\x05\x05\x03\x2f\x01\x04"
		.ascii  "\x01\x0e\x0e\x0e\x0d\x0c\x0c\x0c"
		.ascii  "\x0c\x0c\x0d\x0e\x0e\x05\x05\x05"
		.ascii  "\x04\x03\x31\x01\x03\x03\x0c\x0e"
		.ascii  "\x0e\x0e\x0e\x0e\x0e\x0e\x05\x05"
		.ascii  "\x05\x05\x04\x04\x55\x00\x00"
data_56bf4:
		.ascii  "\x0a\x00"
data_56bf6:
		.ascii  "\x00\x00"
data_56bf8:
		.ascii  "\x00\x00"
data_56bfa:
		.ascii  "\x05\x00"
data_56bfc:
		.ascii  "\x05\x00"
data_56bfe:
		.ascii  "\x00\x00"
data_56c00:
		.ascii  "\x13\x00\x07\x00\xff\xff\xff\xff"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\xff\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\xff\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\xff\xff\xff"
		.ascii  "\xff"
		.fill   0x4
data_56c8d:
		.fill   0x1fc
data_56e89:
		.fill   0x1fc
data_57085:
		.ascii  "\x38"
data_57086:
		.ascii  "\x37"
data_57087:
		.ascii  "\x37"
data_57088:
		.ascii  "\x27"
data_57089:
		.ascii  "\x35"
data_5708a:
		.ascii  "\x35"
data_5708b:
		.ascii  "\x21"
data_5708c:
		.ascii  "\x30"
data_5708d:
		.ascii   "3'55!03877!03877'55877'55!03'55!03877!03877'55877'55!03'55!03877"
data_570cd:
		.ascii  "\x00"
data_570ce:
		.ascii  "\x00"
data_570cf:
		.fill   0x1c20
data_58cef:
		.fill   0x5
data_58cf4:
		.ascii  "\x55\x01\x0c\x00\x01\x01\x4c\x12"
		.ascii  "\x11\x12\x14\xf4\x00\x00\x00\x3c"
		.ascii  "\x00\x00\x02\x4d\x4c\x07\x00\x02"
		.ascii  "\x01\x4b\x12\x11\x14\x16\x16\x14"
		.ascii  "\x12\x13\xf2\x00\x00\x00\x3c\x00"
		.ascii  "\x01\x00\x17\x13\x4c\x4c\x04\x00"
		.ascii  "\x01\x00\x14\x12\x11\x4b\x06\x00"
		.ascii  "\x00\x01\x13\xf1\x00\x00\x00\x3d"
		.ascii  "\x00\x01\x00\x4c\x12\x13\x4c\x02"
		.ascii  "\x00\x01\x01\x15\x13\x12\x4c\x15"
		.ascii  "\xf8\x00\x00\x00\x3d\x00\x01\x02"
		.ascii  "\x17\x13\x11\x12\x4c\x4c\x01\x00"
		.ascii  "\x00\x03\x17\x4b\x4b\xf9\x00\x00"
		.ascii  "\x00\x3e\x00\x01\x02\x17\x12\x11"
		.ascii  "\x12\x12\x4c\x01\x00\x00\x03\x17"
		.ascii  "\x14\x16\xf3\x00\x00\x01\x17\x04"
		.ascii  "\x00\x00\x00\x3f\x00\x01\x02\x4c"
		.ascii  "\x12\x10\x11\x12\x4c\x01\x00\x00"
		.ascii  "\x03\x17\x14\x16\xf1\x00\x00\x02"
		.ascii  "\x17\x4b\x04\x00\x00\x00\x3f\x00"
		.ascii  "\x01\x03\x17\x4c\x11\x10\x11\x12"
		.ascii  "\x4c\x01\x00\x01\x01\x17\x4b\x11"
		.ascii  "\x13\x15\xec\x00\x00\x03\x17\x4c"
		.ascii  "\x12\x05\x00\x00\x00\x40\x00\x01"
		.ascii  "\x03\x17\x4c\x11\x10\x12\x4d\x4c"
		.ascii  "\x03\x00\x00\x03\x17\x13\x4b\xe0"
		.ascii  "\x00\x00\x03\x4f\x4f\x4f\x05\x00"
		.ascii  "\x01\x01\x17\x4c\x13\x12\x4d\x06"
		.ascii  "\x00\x00\x00\x41\x00\x01\x02\x17"
		.ascii  "\x4c\x12\x12\x4c\x4c\x01\x00\x00"
		.ascii  "\x02\x4d\x4c\x02\x00\x00\x01\x17"
		.ascii  "\x02\x00\x01\x00\x4b\x11\x12\x4c"
		.ascii  "\x05\x00\x38\x01"
		.ascii   "NMMMMM"
		.ascii  "\x16\x16\x16\x16\x16\x16\x15\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x15\x16"
		.ascii  "\x16\x16\x16\x16\x16"
		.ascii   "MMMMMNOOOOOOOOOOOOOOOOOOOOMMKMLLL"
		.ascii  "\x13\x11\x11\x11\x11\x07\x00\x00"
		.ascii  "\x00\x42\x00\x02\x01\x17\x4d\x4c"
		.ascii  "\x12\x4c\x4d\x11\x4b\x4d\x02\x00"
		.ascii  "\x00\x03\x4c\x4a\x17\x01\x00\x00"
		.ascii  "\x03\x17\x4a\x4c\x03\x00\x38\x03"
		.ascii  "\x17\x4c\x13\x14\x14\x14\x14\x14"
		.ascii  "\x13\x13\x13\x13\x13\x13\x13\x13"
		.ascii  "\x13\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x13\x13"
		.ascii  "\x13\x13\x13\x13\x13\x13\x13\x14"
		.ascii  "\x15\x15\x16\x16\x16\x17\x17\x17"
		.ascii  "\x4d\x4c\x17\x17"
		.ascii   "MKJI"
		.ascii  "\x11\x4c\x17\x4b\x12\x4c\x4c\x13"
		.ascii  "\x11\x11\x17\x06\x00\x00\x00\x43"
		.ascii  "\x00\x01\x01\x17\x4d\x4b\x11\x4b"
		.ascii  "\x01\x00\x00\x02\x17\x17\x09\x00"
		.ascii  "\x36\x03\x16\x13\x17\x4c\x12\x12"
		.ascii   "KLLMMMNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONMMMMM"
		.ascii  "\x16\x16\x16\x16\x16\x16\x15\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x16\x16"
		.ascii  "\x16\x16\x16\x16\x16\x16\x16\x16"
		.ascii  "\x16\x16\x16\x16\x16\x16"
		.ascii   "LKKLLM"
		.ascii  "\x02\x00\x02\x01\x17\x17\x4c\x11"
		.ascii  "\x13\x17\x49\x14\x11\x06\x00\x00"
		.ascii  "\x00\x45\x00\x00\x03\x17\x4b\x4c"
		.ascii  "\x07\x00\x00\x01\x15\x05\x00\x00"
		.ascii  "\x01\x16\x01\x00\x01\x00\x13\x13"
		.ascii  "\x4c\x17\xcf\x00\x00\x02\x17\x17"
		.ascii  "\x07\x00\x01\x02\x17\x17\x12\x4c"
		.ascii  "\x17\x17\x07\x00\x00\x00\x44\x00"
		.ascii  "\x00\x02\x12\x14\x0a\x00\x00\x02"
		.ascii  "\x17\x13\x02\x00\x01\x01\x15\x12"
		.ascii  "\x12\x13\x4d\xdc\x00\x00\x03\x17"
		.ascii  "\x4d\x4b\x08\x00\x00\x00\x43\x00"
		.ascii  "\x01\x00\x16\x13\x10\x14\x0a\x00"
		.ascii  "\x01\x02\x17\x13\x49\x13\x4d\x17"
		.ascii  "\xdf\x00\x00\x02\x4d\x4a\x08\x00"
		.ascii  "\x00\x00\x3e\x00\x00\x02\x14\x13"
		.ascii  "\x04\x00\x00\x03\x16\x14\x13\x0c"
		.ascii  "\x00\x00\x02\x16\x16\xe0\x00\x00"
		.ascii  "\x03\x17\x4c\x17\x08\x00\x00\x00"
		.ascii  "\x3f\x00\x01\x00\x16\x14\x11\x13"
		.ascii  "\x02\x00\x00\x01\x15\xee\x00\x00"
		.ascii  "\x03\x17\x4c\x4b\x09\x00\x00\x00"
		.ascii  "\x41\x00\x01\x01\x14\x12\x13\x14"
		.ascii  "\x16\xef\x00\x00\x03\x4c\x11\x4a"
		.ascii  "\x08\x00\x00\x00\x3e\x00\x00\x03"
		.ascii  "\x13\x11\x13\xf4\x00\x01\x00\x4f"
		.ascii  "\x4c\x11\x17\x07\x00\x00\x00\x3c"
		.ascii  "\x00\x02\x00\x13\x11\x12\x14\x13"
		.ascii  "\x11\x11\x12\xf1\x00\x01\x00\x4f"
		.ascii  "\x17\x4b\x17\x07\x00\x00\x00\x3b"
		.ascii  "\x00\x02\x02\x12\x16\x16\x16\x15"
		.ascii  "\x14\x15\x17\x13\x11\xf0\x00\x00"
		.ascii  "\x03\x4f\x12\x17\x08\x00\x00\x00"
		.ascii  "\x3e\x00\x00\x03\x11\x13\x16\x02"
		.ascii  "\x00\x00\x03\x15\x16\x12\xef\x00"
		.ascii  "\x00\x03\x4f\x14\x17\x08\x00\x00"
		.ascii  "\x00\x3d\x00\x00\x02\x13\x16\x03"
		.ascii  "\x00\x00\x02\x17\x14\x01\x00\x00"
		.ascii  "\x01\x16\xef\x00\x00\x03\x4f\x14"
		.ascii  "\x16\x08\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x01\x14\x06\x00\x00\x02\x13\x17"
		.ascii  "\xf0\x00\x00\x03\x17\x14\x16\x08"
		.ascii  "\x00\x00\x00\x43\x00\x01\x01\x17"
		.ascii  "\x11\x13\x12\x17\xed\x00\x00\x03"
		.ascii  "\x4f\x14\x16\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x17\x13\x15\xee\x00"
		.ascii  "\x00\x03\x4f\x13\x15\x08\x00\x00"
		.ascii  "\x00\x46\x00\x00\x02\x15\x4d\xed"
		.ascii  "\x00\x00\x03\x4f\x14\x15\x08\x00"
		.ascii  "\x00\x00\x44\x00\x00\x01\x14\x02"
		.ascii  "\x00\x00\x01\x4a\xed\x00\x00\x03"
		.ascii  "\x4f\x13\x15\x08\x00\x00\x00\x43"
		.ascii  "\x00\x00\x02\x13\x15\x02\x00\x00"
		.ascii  "\x02\x12\x4c\xec\x00\x00\x03\x4f"
		.ascii  "\x13\x15\x08\x00\x00\x00\x42\x00"
		.ascii  "\x00\x02\x13\x11\x02\x00\x00\x03"
		.ascii  "\x17\x4b\x14\xec\x00\x00\x03\x4f"
		.ascii  "\x13\x15\x08\x00\x00\x00\x41\x00"
		.ascii  "\x00\x03\x15\x11\x13\x02\x00\x00"
		.ascii  "\x03\x4c\x4a\x17\xec\x00\x00\x03"
		.ascii  "\x4f\x13\x15\x08\x00\x00\x00\x41"
		.ascii  "\x00\x00\x03\x13\x11\x17\x02\x00"
		.ascii  "\x00\x02\x4a\x17\xed\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x41"
		.ascii  "\x00\x00\x02\x15\x13\x02\x00\x00"
		.ascii  "\x01\x4c\xef\x00\x00\x03\x4f\x13"
		.ascii  "\x14\x08\x00\x00\x00\x42\x00\x00"
		.ascii  "\x03\x17\x13\x17\xf0\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x43"
		.ascii  "\x00\x01\x00\x17\x14\x13\x14\xee"
		.ascii  "\x00\x00\x03\x4f\x13\x14\x08\x00"
		.ascii  "\x00\x00\x44\x00\x01\x00\x17\x15"
		.ascii  "\x11\x14\xed\x00\x00\x03\x4f\x13"
		.ascii  "\x14\x08\x00\x00\x00\x45\x00\x00"
		.ascii  "\x03\x13\x11\x14\xed\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x15\x12\x15\xee\x00"
		.ascii  "\x00\x03\x4f\x13\x14\x08\x00\x00"
		.ascii  "\x00\x43\x00\x00\x03\x17\x13\x15"
		.ascii  "\xef\x00\x00\x03\x4f\x13\x14\x08"
		.ascii  "\x00\x00\x00\x43\x00\x00\x03\x17"
		.ascii  "\x14\x17\xef\x00\x00\x03\x4f\x13"
		.ascii  "\x14\x08\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x17\x11\x4f\xee\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x12\x4f\xee\x00"
		.ascii  "\x00\x03\x4f\x13\x14\x08\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x12\x4f"
		.ascii  "\xee\x00\x00\x03\x4f\x13\x14\x08"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x14"
		.ascii  "\x12\x4f\xee\x00\x00\x03\x4f\x13"
		.ascii  "\x14\x08\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x14\x12\x4f\xee\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xee\x00"
		.ascii  "\x00\x03\x4f\x13\x14\x08\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x13\x4f"
		.ascii  "\xee\x00\x00\x03\x4f\x13\x14\x08"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x14"
		.ascii  "\x13\x4f\xee\x00\x00\x03\x4f\x13"
		.ascii  "\x14\x08\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x14\x13\x4f\xee\x00\x00\x03"
		.ascii  "\x4f\x13\x14\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xee\x00"
		.ascii  "\x00\x03\x4f\x12\x14\x08\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x13\x4f"
		.ascii  "\xee\x00\x00\x03\x4f\x12\x14\x08"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x14"
		.ascii  "\x13\x4f\xee\x00\x00\x03\x4f\x12"
		.ascii  "\x14\x08\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x14\x13\x4f\xee\x00\x00\x03"
		.ascii  "\x4f\x12\x14\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xee\x00"
		.ascii  "\x00\x03\x4f\x11\x17\x08\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x13\x4f"
		.ascii  "\xef\x00\x00\x03\x17\x14\x17\x07"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x14"
		.ascii  "\x13\x4f\xef\x00\x00\x03\x15\x13"
		.ascii  "\x17\x07\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x14\x13\x4f\xee\x00\x00\x03"
		.ascii  "\x15\x12\x15\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xed\x00"
		.ascii  "\x00\x03\x14\x11\x13\x09\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x13\x4f"
		.ascii  "\xed\x00\x01\x00\x14\x11\x15\x17"
		.ascii  "\x08\x00\x00\x00\x44\x00\x00\x03"
		.ascii  "\x14\x13\x4f\xee\x00\x01\x00\x14"
		.ascii  "\x13\x14\x17\x07\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xf0\x00"
		.ascii  "\x00\x03\x17\x13\x17\x06\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x14\x13\x4f"
		.ascii  "\xef\x00\x00\x01\x4c\x02\x00\x00"
		.ascii  "\x02\x13\x15\x05\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x14\x13\x4f\xed\x00"
		.ascii  "\x00\x02\x17\x4a\x02\x00\x00\x03"
		.ascii  "\x17\x11\x13\x05\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x15\x13\x4f\xec\x00"
		.ascii  "\x00\x03\x17\x4a\x4c\x02\x00\x00"
		.ascii  "\x03\x13\x11\x15\x05\x00\x00\x00"
		.ascii  "\x44\x00\x00\x03\x15\x13\x4f\xec"
		.ascii  "\x00\x00\x03\x14\x4b\x17\x02\x00"
		.ascii  "\x00\x02\x11\x13\x06\x00\x00\x00"
		.ascii  "\x44\x00\x00\x03\x15\x13\x4f\xec"
		.ascii  "\x00\x00\x02\x4c\x12\x02\x00\x00"
		.ascii  "\x02\x15\x13\x07\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x15\x13\x4f\xed\x00"
		.ascii  "\x00\x01\x4a\x02\x00\x00\x01\x14"
		.ascii  "\x08\x00\x00\x00\x44\x00\x00\x03"
		.ascii  "\x15\x14\x4f\xed\x00\x00\x02\x4d"
		.ascii  "\x15\x0a\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x15\x13\x4f\xee\x00\x00\x03"
		.ascii  "\x15\x13\x17\x08\x00\x00\x00\x44"
		.ascii  "\x00\x00\x03\x16\x14\x4f\xed\x00"
		.ascii  "\x01\x01\x17\x12\x13\x11\x17\x07"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x16"
		.ascii  "\x14\x17\xf0\x00\x00\x02\x17\x13"
		.ascii  "\x06\x00\x00\x01\x14\x44\x00\x00"
		.ascii  "\x03\x16\x14\x4f\xef\x00\x00\x01"
		.ascii  "\x16\x01\x00\x00\x02\x14\x17\x03"
		.ascii  "\x00\x00\x02\x16\x13\x01\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x17\x14\x4f"
		.ascii  "\xef\x00\x00\x03\x12\x16\x15\x02"
		.ascii  "\x00\x00\x03\x16\x13\x11\x02\x00"
		.ascii  "\x00\x00\x44\x00\x00\x03\x17\x12"
		.ascii  "\x4f\xf0\x00\x02\x01\x11\x13\x17"
		.ascii  "\x15\x14\x15\x16\x16\x16\x43\x00"
		.ascii  "\x01\x00\x17\x4b\x17\x4f\xf1\x00"
		.ascii  "\x02\x00\x12\x11\x11\x13\x14\x12"
		.ascii  "\x11\x13\x43\x00\x01\x00\x17\x11"
		.ascii  "\x4c\x4f\xf4\x00\x00\x03\x13\x11"
		.ascii  "\x13\x02\x00\x00\x00\x44\x00\x00"
		.ascii  "\x03\x4a\x11\x4c\xef\x00\x01\x01"
		.ascii  "\x16\x14\x13\x12\x14\x05\x00\x00"
		.ascii  "\x00\x45\x00\x00\x03\x4b\x4c\x17"
		.ascii  "\xee\x00\x00\x01\x15\x02\x00\x01"
		.ascii  "\x00\x13\x11\x14\x16\x03\x00\x00"
		.ascii  "\x00\x44\x00\x00\x03\x17\x4c\x17"
		.ascii  "\xe0\x00\x00\x02\x16\x16\x0c\x00"
		.ascii  "\x00\x03\x13\x14\x16\x04\x00\x00"
		.ascii  "\x02\x13\x14\x02\x00\x00\x00\x44"
		.ascii  "\x00\x00\x02\x4a\x4d\xdf\x00\x01"
		.ascii  "\x02\x17\x4d\x13\x49\x13\x17\x0a"
		.ascii  "\x00\x01\x00\x14\x10\x13\x16\x07"
		.ascii  "\x00\x00\x00\x44\x00\x00\x03\x4b"
		.ascii  "\x4d\x17\xdc\x00\x01\x01\x4d\x13"
		.ascii  "\x12\x12\x15\x02\x00\x00\x02\x13"
		.ascii  "\x17\x0a\x00\x00\x02\x14\x12\x08"
		.ascii  "\x00\x00\x00\x43\x00\x01\x02\x17"
		.ascii  "\x17\x4c\x12\x17\x17\x07\x00\x00"
		.ascii  "\x02\x17\x17\xcf\x00\x01\x00\x17"
		.ascii  "\x4c\x13\x13\x01\x00\x00\x01\x16"
		.ascii  "\x05\x00\x00\x01\x15\x07\x00\x00"
		.ascii  "\x03\x4c\x4b\x17\x09\x00\x00\x00"
		.ascii  "\x42\x00\x02\x01\x11\x14\x49\x17"
		.ascii  "\x13\x11\x4c\x17\x17\x02\x00\x36"
		.ascii  "\x03"
		.ascii   "MLLKKL"
		.ascii  "\x16\x16\x16\x16\x16\x16\x16\x16"
		.ascii  "\x16\x16\x16\x16\x16\x16\x16\x16"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x15\x15\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x14\x14\x14"
		.ascii  "\x14\x14\x14\x14\x14\x15\x16\x16"
		.ascii   "NOOOONNNNMMMLLK"
		.ascii  "\x12\x12\x4c\x17\x13\x16\x09\x00"
		.ascii  "\x00\x02\x17\x17\x01\x00\x01\x01"
		.ascii  "\x4b\x11\x4b\x4d\x17\x07\x00\x00"
		.ascii  "\x00\x42\x00\x38\x03\x17\x11\x11"
		.ascii  "\x13\x4c\x4c\x12\x4b\x17\x4c\x11"
		.ascii   "IJKM"
		.ascii  "\x17\x17\x4c\x4d\x17\x17\x17\x16"
		.ascii  "\x16\x16\x15\x15\x14\x13\x13\x13"
		.ascii  "\x13\x13\x13\x13\x13\x13\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x13\x13\x13\x13\x13"
		.ascii  "\x13\x13\x13\x13\x14\x14\x14\x14"
		.ascii  "\x14\x13\x4c\x17\x03\x00\x00\x03"
		.ascii  "\x4c\x4a\x17\x01\x00\x00\x03\x17"
		.ascii  "\x4a\x4c\x02\x00\x02\x01\x4d\x4b"
		.ascii  "\x11\x4d\x4c\x12\x4c\x4d\x17\x06"
		.ascii  "\x00\x00\x00\x43\x00\x38\x01\x11"
		.ascii  "\x11\x11\x11\x13"
		.ascii   "LLLMKMMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONMMMMM"
		.ascii  "\x16\x16\x16\x16\x16\x16\x15\x15"
		.ascii  "\x15\x15\x15\x16\x16\x16\x16\x16"
		.ascii  "\x16"
		.ascii   "MMMMMN"
		.ascii  "\x05\x00\x01\x00\x4c\x12\x11\x4b"
		.ascii  "\x02\x00\x00\x01\x17\x02\x00\x00"
		.ascii  "\x02\x4c\x4d\x01\x00\x01\x02\x4c"
		.ascii  "\x4c\x12\x12\x4c\x17\x05\x00\x00"
		.ascii  "\x00\x42\x00\x01\x01\x4d\x12\x13"
		.ascii  "\x4c\x17\x05\x00\x00\x03\x4f\x4f"
		.ascii  "\x4f\xe0\x00\x00\x03\x4b\x13\x17"
		.ascii  "\x03\x00\x01\x03\x4c\x4d\x12\x10"
		.ascii  "\x11\x4c\x17\x04\x00\x00\x00\x41"
		.ascii  "\x00\x00\x03\x12\x4c\x17\xec\x00"
		.ascii  "\x01\x01\x15\x13\x11\x4b\x17\x01"
		.ascii  "\x00\x01\x03\x4c\x12\x11\x10\x11"
		.ascii  "\x4c\x17\x03\x00\x00\x00\x40\x00"
		.ascii  "\x00\x02\x4b\x17\xf1\x00\x00\x03"
		.ascii  "\x16\x14\x17\x01\x00\x01\x02\x4c"
		.ascii  "\x12\x11\x10\x12\x4c\x03\x00\x00"
		.ascii  "\x00\x40\x00\x00\x01\x17\xf3\x00"
		.ascii  "\x00\x03\x16\x14\x17\x01\x00\x01"
		.ascii  "\x02\x4c\x12\x12\x11\x12\x17\x02"
		.ascii  "\x00\x00\x00\x35\x01\x00\x03\x4b"
		.ascii  "\x4b\x17\x01\x00\x01\x02\x4c\x4c"
		.ascii  "\x12\x11\x13\x17\x01\x00\x00\x00"
		.ascii  "\x34\x01\x01\x01\x15\x4c\x12\x13"
		.ascii  "\x15\x02\x00\x01\x00\x4c\x13\x12"
		.ascii  "\x4c\x01\x00\x00\x00\x2d\x01\x00"
		.ascii  "\x01\x13\x06\x00\x01\x00\x4b\x11"
		.ascii  "\x12\x14\x04\x00\x01\x00\x4c\x4c"
		.ascii  "\x13\x17\x2e\x01\x02\x01\x13\x12"
		.ascii  "\x14\x16\x16\x14\x11\x12\x4b\x07"
		.ascii  "\x00\x00\x02\x4c\x4d\x30\x01\x01"
		.ascii  "\x01\x14\x12\x11\x12\x4c\x0b\x00"
		.ascii  "\x00\x00"
data_59abd:
		.ascii  "\xfa\x00\x4c\x00\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\xff\xff\xff\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\x04\x04\x04\x04\xff"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\x04\x04\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\xff\xff"
		.ascii  "\x04\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\x04\xff\xff\xff\x04\x04"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\x04\x04\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff"
data_5e4f9:
		.ascii  "\x11\x00\x04\x00\x01\x02\x03\x02"
		.ascii  "\x02\x02\x02\x03\x04\x00\x00\x00"
		.ascii  "\x34\x01\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x02\x02\x02\x00"
		.ascii  "\x00\x00\x33\x01\x03\x00\x02\x01"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x01\x02\x01\x00\x00"
		.ascii  "\x00\x32\x01\x03\x02\x02\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x02\x32\x01\x03\x02\x02"
		.ascii  "\x01\x01\x00\x00\x01"
		.fill   0x4
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x00\x01\x01\x02\x01\x00"
		.ascii  "\x00\x00\x34\x01\x02\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x02\x00\x00\x00\x35\x01\x01\x03"
		.ascii  "\x02\x01\x01\x02\x02\x02\x03\x04"
		.ascii  "\x00\x00\x00\x34\x01\x00\x03\x02"
		.ascii  "\x01\x02\x09"
		.fill   0x1f
		.ascii  "\x11\x00\x04\x00\x01\x02\x03\x02"
		.ascii  "\x02\x02\x02\x03\x04\x00\x00\x00"
		.ascii  "\x34\x01\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x02\x02\x02\x00"
		.ascii  "\x00\x00\x33\x01\x03\x00\x02\x01"
		.ascii  "\x01\x00\x01\x01\x00\x00\x01\x01"
		.ascii  "\x01\x02\x01\x00\x00\x00\x32\x01"
		.ascii  "\x03\x02\x02\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x32\x01\x03\x02\x02\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x00\x01\x01\x02\x32"
		.ascii  "\x01\x03\x02\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x33\x01\x03\x00\x02\x01\x01"
		.ascii  "\x00\x01\x00\x01\x00\x00\x01\x01"
		.ascii  "\x02\x01\x00\x00\x00\x34\x01\x02"
		.ascii  "\x02\x02\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x02\x02\x00\x00\x00\x35"
		.ascii  "\x01\x01\x03\x02\x01\x01\x02\x02"
		.ascii  "\x02\x03\x04\x00\x00\x00\x34\x01"
		.ascii  "\x00\x03\x02\x01\x02\x09"
		.fill   0x1f
		.ascii  "\x11\x00\x04\x00\x01\x02\x03\x02"
		.ascii  "\x02\x02\x02\x03\x04\x00\x00\x00"
		.ascii  "\x34\x01\x02\x02\x02\x02\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x02\x00"
		.ascii  "\x00\x00\x33\x01\x03\x00\x02\x01"
		.ascii  "\x01\x00\x01"
		.fill   0x4
		.ascii  "\x01\x01\x02\x01\x00\x00\x00\x32"
		.ascii  "\x01\x03\x02\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x32\x01\x03\x02\x02\x01\x01"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x00\x00\x01\x01\x02\x32\x01"
		.ascii  "\x03\x02\x02\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x33\x01\x03\x00\x02\x01\x01\x00"
		.ascii  "\x01\x01\x00\x00\x01\x01\x01\x02"
		.ascii  "\x01\x00\x00\x00\x34\x01\x02\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x00\x00\x00\x36\x01"
		.ascii  "\x01\x03\x03\x02\x02\x02\x01\x01"
		.ascii  "\x02\x03\x00\x00\x00\x3b\x01\x00"
		.ascii  "\x03\x02\x01\x02\x02"
		.fill   0x1f
		.ascii  "\x11\x00\x04\x00\x01\x02\x03\x02"
		.ascii  "\x02\x02\x02\x03\x04\x00\x00\x00"
		.ascii  "\x34\x01\x02\x02\x02\x02\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x02\x00"
		.ascii  "\x00\x00\x33\x01\x03\x00\x02\x01"
		.ascii  "\x01\x01\x00\x00\x01\x01\x00\x01"
		.ascii  "\x01\x02\x01\x00\x00\x00\x32\x01"
		.ascii  "\x03\x02\x02\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x32\x01\x03\x02\x02\x01\x01\x00"
		.ascii  "\x00\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x02\x32\x01\x03\x02\x02"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x02\x33\x01\x03"
		.ascii  "\x00\x02\x01\x01\x00\x00\x01\x00"
		.ascii  "\x01\x00\x01\x01\x02\x01\x00\x00"
		.ascii  "\x00\x34\x01\x02\x02\x02\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x02\x02"
		.ascii  "\x00\x00\x00\x36\x01\x01\x03\x03"
		.ascii  "\x02\x02\x02\x01\x01\x02\x03\x00"
		.ascii  "\x00\x00\x3b\x01\x00\x03\x02\x01"
		.ascii  "\x02\x02"
		.fill   0x1f
		.ascii  "\x11\x00\x02\x00\x00\x03\x02\x01"
		.ascii  "\x02\x09\x00\x00\x00\x35\x01\x01"
		.ascii  "\x03\x02\x01\x01\x02\x02\x02\x03"
		.ascii  "\x04\x00\x00\x00\x34\x01\x02\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x00\x00\x00\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x00\x01\x01\x02\x01\x00"
		.ascii  "\x00\x00\x32\x01\x03\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01\x00\x00\x01"
		.fill   0x4
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x01\x02\x01\x00\x00"
		.ascii  "\x00\x34\x01\x02\x02\x02\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x02\x02"
		.ascii  "\x00\x00\x00\x36\x01\x01\x02\x03"
		.ascii  "\x02\x02\x02\x02\x03\x04"
		.fill   0x1f
		.ascii  "\x11\x00\x02\x00\x00\x03\x02\x01"
		.ascii  "\x02\x09\x00\x00\x00\x35\x01\x01"
		.ascii  "\x03\x02\x01\x01\x02\x02\x02\x03"
		.ascii  "\x04\x00\x00\x00\x34\x01\x02\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x00\x00\x00\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01\x00\x01\x00"
		.ascii  "\x01\x00\x00\x01\x01\x02\x01\x00"
		.ascii  "\x00\x00\x32\x01\x03\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x00\x01\x01\x02\x32"
		.ascii  "\x01\x03\x02\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x33\x01\x03\x00\x02\x01\x01"
		.ascii  "\x00\x01\x01\x00\x00\x01\x01\x01"
		.ascii  "\x02\x01\x00\x00\x00\x34\x01\x02"
		.ascii  "\x02\x02\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x02\x00\x00\x00\x36"
		.ascii  "\x01\x01\x02\x03\x02\x02\x02\x02"
		.ascii  "\x03\x04"
		.fill   0x1f
		.ascii  "\x11\x00\x09\x00\x00\x03\x02\x01"
		.ascii  "\x02\x02\x00\x00\x00\x36\x01\x01"
		.ascii  "\x03\x03\x02\x02\x02\x01\x01\x02"
		.ascii  "\x03\x00\x00\x00\x34\x01\x02\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x00\x00\x00\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01\x00\x00\x01"
		.ascii  "\x00\x01\x00\x01\x01\x02\x01\x00"
		.ascii  "\x00\x00\x32\x01\x03\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01\x00\x00\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x02\x32\x01\x03\x02\x02"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x02\x33\x01\x03"
		.ascii  "\x00\x02\x01\x01\x01\x00\x00\x01"
		.ascii  "\x01\x00\x01\x01\x02\x01\x00\x00"
		.ascii  "\x00\x34\x01\x02\x02\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x02\x02"
		.ascii  "\x00\x00\x00\x36\x01\x01\x02\x03"
		.ascii  "\x02\x02\x02\x02\x03\x04"
		.fill   0x1f
		.ascii  "\x11\x00\x09\x00\x00\x03\x02\x01"
		.ascii  "\x02\x02\x00\x00\x00\x36\x01\x01"
		.ascii  "\x03\x03\x02\x02\x02\x01\x01\x02"
		.ascii  "\x03\x00\x00\x00\x34\x01\x02\x02"
		.ascii  "\x02\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x02\x00\x00\x00\x33\x01"
		.ascii  "\x03\x00\x02\x01\x01\x00\x01\x01"
		.ascii  "\x00\x00\x01\x01\x01\x02\x01\x00"
		.ascii  "\x00\x00\x32\x01\x03\x02\x02\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x32\x01\x03\x02"
		.ascii  "\x02\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x00\x01\x01\x02\x32\x01"
		.ascii  "\x03\x02\x02\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x33\x01\x03\x00\x02\x01\x01\x00"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x01\x02\x01\x00\x00\x00\x34"
		.ascii  "\x01\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x02\x02\x00\x00"
		.ascii  "\x00\x36\x01\x01\x02\x03\x02\x02"
		.ascii  "\x02\x02\x03\x04"
		.fill   0x1f
data_5eb39:
		.long   data_51568
		.long   data_51571
		.long   data_5157a
		.long   data_51583
		.long   data_5158c
		.long   data_51595
		.long   data_5159e
		.long   data_515a7
		.long   data_515b0
		.long   data_515b9
		.long   data_515c2
		.long   data_515cb
		.long   data_515d4
		.long   data_515dd
		.long   data_515e6
		.long   data_515ef
		.long   data_515f8
		.long   data_51601
		.long   data_5160a
		.long   data_51613
		.long   data_5161c
		.long   data_51625
		.long   data_5162e
		.long   data_51637
		.long   data_51640
		.long   data_51649
		.long   data_51652
		.long   data_5165b
		.long   data_51664
		.long   data_5166d
		.long   data_51676
		.long   data_5167f
		.long   data_51688
		.long   data_51691
		.long   data_5169a
		.long   data_516a3
		.long   data_516ac
		.long   data_516b5
		.long   data_516be
		.long   data_516c7
		.long   data_516d0
		.long   data_516d9
		.long   data_516e2
		.long   data_516eb
		.long   data_516f4
		.long   data_516fd
		.long   data_51706
		.long   data_5170f
		.long   data_51718
		.long   data_51721
		.long   data_5172a
		.long   data_51733
		.long   data_5173c
		.long   data_51745
		.long   data_5174e
		.long   data_51757
		.long   data_51760
		.long   data_51769
		.long   data_51772
		.long   data_5177b
		.long   data_51784
		.long   data_5178d
		.long   data_51796
		.long   data_5179f
		.long   data_517a8
		.long   data_517b1
		.long   data_517ba
		.long   data_517c3
		.long   data_517cc
		.long   data_517d5
		.long   data_517de
		.long   data_517e7
		.long   data_517f0
		.long   data_517f9
		.long   data_51802
		.long   data_5180b
		.long   data_51814
		.long   data_5181d
		.long   data_51826
		.long   data_5182f
		.long   data_51838
		.long   data_51841
		.long   data_5184a
		.long   data_51853
		.long   data_5185c
data_5ec8d:
		.ascii  "\x00\x00\x00\x0a\x00\x0a\x00"
data_5ec94:
		.fill   0x8
data_5ec9c:
		.ascii  "\x1c\x04\x00\x00"
data_5eca0:
		.ascii  "\x1a\x04\x00\x00"
data_5eca4:
		.fill   0x4
data_5eca8:
		.ascii  "\x0f\x00"
data_5ecaa:
		.fill   0x4
data_5ecae:
		.ascii  "\x40\x01\x00\x00"
data_5ecb2:
		.fill   0x4
data_5ecb6:
		.fill   0x4
data_5ecba:
		.ascii  "\x00\x00"
data_5ecbc:
		.ascii  "\x10\x00"
data_5ecbe:
		.ascii  "\x10\x00"
data_5ecc0:
		.ascii  "\x01"
		.fill   0x7
data_5ecc8:
		.ascii  "\x3e\x00\x58\x00\x00\x02\x4d\x4d"
		.ascii  "\x1e\x00\x00\x02\x4d\x4d\x56\x00"
		.ascii  "\x00\x00\xc6\x00\x01\x01\x4d\x4d"
		.ascii  "\x12\x12\x4d\x0c\x00\x01\x00"
		.ascii   "LLLL"
		.ascii  "\x0c\x00\x01\x01\x4d\x12\x12\x4d"
		.ascii  "\x4d\x54\x00\x00\x00\x76\x00\x00"
		.ascii  "\x02\x4d\x4d\x4d\x00\x02\x02\x4d"
		.ascii  "\x4d\x4c\x13"
		.ascii   "LLLLMM"
		.ascii  "\x07\x00\x01\x02\x4d\x4b\x12\x12"
		.ascii  "\x4b\x4d\x07\x00\x02\x02"
		.ascii   "MMLLLL"
		.ascii  "\x13"
		.string "LMMK"
		.ascii  "\x00\x02\x4d\x4d\x06\x00\x00\x00"
		.ascii  "\x74\x00\x01\x01\x4d\x4d\x12\x12"
		.ascii  "\x4d\x4a\x00\x0b\x00\x4c\x4c\x13"
		.ascii  "\x12\x10\x11\x12\x12\x4b\x4b\x12"
		.ascii  "\x12"
		.ascii   "LMLKKM"
		.ascii  "\x12\x12\x11\x11\x11\x11\x12\x12"
		.ascii   "MKKLML"
		.ascii  "\x12\x12\x4b\x4b\x12\x12\x11\x10"
		.ascii  "\x12\x13\x4c\x4c\x48\x00\x01\x01"
		.ascii  "\x4d\x12\x12\x4d\x4d\x04\x00\x00"
		.ascii  "\x00\x73\x00\x32\x02\x4d\x4d\x4c"
		.ascii  "\x13"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
		.ascii  "\x12\x13\x12\x11\x12\x4b\x4c\x4c"
		.ascii  "\x12\x12"
		.ascii   "LLKMOOOOMK"
		.ascii  "\x12\x12\x12\x12"
		.ascii   "KMOOOOMKLL"
		.ascii  "\x12\x12\x4c\x4c\x4b\x12\x11\x12"
		.ascii  "\x13\x12"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
		.ascii  "\x13\x4c\x4d\x4d\x03\x00\x00\x00"
		.ascii  "\x71\x00\x33\x02\x4d\x4c\x13\x12"
		.ascii  "\x10\x11\x12\x12\x4b\x4b\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x13"
		.ascii   "KLMNNOOOOOONMKKLMMOMLLLLMOMMLKKMNOOOOOONNMLK"
		.ascii  "\x13\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x4b\x4b"
		.ascii  "\x12\x12\x11\x10\x12\x13\x4c\x4d"
		.ascii  "\x01\x00\x00\x00\x70\x00\x34\x00"
		.ascii  "\x4d\x11\x13\x12\x11\x12\x4b\x4c"
		.ascii  "\x4c\x12\x12"
		.ascii   "LLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "OOOOO"
		.ascii  "\x1c\x1c"
		.ascii   "OOOOOO"
		.ascii  "\x1c\x1c"
		.ascii   "OOOOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "OONNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLL"
		.ascii  "\x12\x12\x4c\x4c\x4b\x12\x11\x12"
		.ascii  "\x13\x11\x4d\x70\x00\x34\x00\x4d"
		.ascii  "\x4b\x12\x12"
		.ascii   "KLOOOOOOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "OOOOOOOLK"
		.ascii  "\x12\x12\x4b\x4d\x70\x00\x34\x00"
		.ascii   "MMJLOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c"
		.string "OOLJMMq"
		.ascii  "\x33\x02\x4c\x4b\x4f\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x4f\x4b\x4c"
		.ascii  "\x01\x00\x00\x00\x70\x00\x34\x00"
		.ascii  "\x4c\x12\x4b\x4f\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x4f\x4b\x12\x4c"
		.ascii  "\x70\x00\x34\x00\x4c\x4b\x12\x4f"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x4f\x12\x4b\x4c\x71\x00\x33\x02"
		.ascii  "\x4c\x12\x4f\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x4f\x12\x4c\x01\x00"
		.ascii  "\x00\x00\x71\x00\x33\x02\x16\x13"
		.ascii  "\x4c\x4f\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x4f\x4c\x13\x16\x01\x00\x00\x00"
		.ascii  "\x71\x00\x33\x02\x17\x14\x13\x15"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x15\x13"
		.ascii  "\x14\x17\x01\x00\x00\x00\x71\x00"
		.ascii  "\x33\x02\x17\x14\x13\x15\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x15\x13\x14\x17"
		.ascii  "\x01\x00\x00\x00\x71\x00\x33\x02"
		.ascii  "\x17\x14\x13\x15\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x15\x13\x14\x17\x01\x00"
		.ascii  "\x00\x00\x71\x00\x33\x02\x17\x14"
		.ascii  "\x12\x15\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x15\x12\x14\x17\x01\x00\x00\x00"
		.ascii  "\x71\x00\x33\x02\x16\x13\x4c\x4f"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x4f\x4c"
		.ascii  "\x13\x16\x01\x00\x00\x00\x71\x00"
		.ascii  "\x33\x02\x4c\x12\x4f\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x4f\x12\x4c"
		.ascii  "\x01\x00\x00\x00\x70\x00\x34\x00"
		.ascii  "\x4c\x4b\x12\x4f\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x4f\x12\x4b\x4c"
		.ascii  "\x70\x00\x34\x00\x4c\x12\x4b\x4f"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x4f\x4b\x12\x4c\x71\x00\x33\x02"
		.ascii  "\x4c\x4b\x4f\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x4f\x4b\x4c\x01\x00"
		.ascii  "\x00\x00\x70\x00\x34\x00"
		.ascii   "MMJLOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c"
		.string "OOLJMMp"
		.ascii  "\x34\x00\x4d\x4b\x12\x12\x4b\x4c"
		.ascii  "\x16\x16\x16\x16\x16\x16\x16\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c"
		.ascii   "LLLL"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x16\x16\x16\x16\x16\x16\x16\x4c"
		.ascii  "\x4b\x12\x12\x4b\x4d\x70\x00\x34"
		.ascii  "\x00\x4d\x11\x13\x12\x11\x12\x4b"
		.ascii  "\x4c\x4c\x12\x12"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMK"
		.ascii  "\x12\x12"
		.ascii   "KMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
		.ascii  "\x12\x12\x4c\x4c\x4b\x12\x11\x12"
		.ascii  "\x13\x11\x4d\x71\x00\x33\x02\x4d"
		.ascii  "\x4c\x13\x12\x10\x11\x12\x12\x4b"
		.ascii  "\x4b\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x4b\x12"
		.ascii   "KKKM"
		.ascii  "\x12\x12\x11\x11\x11\x11\x12\x12"
		.ascii   "MKKK"
		.ascii  "\x12\x4b\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x4b\x4b\x12\x12"
		.ascii  "\x11\x10\x12\x13\x4c\x4d\x01\x00"
		.ascii  "\x00\x00\x73\x00\x32\x03"
		.ascii   "MMLMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMK"
		.ascii  "\x12\x12\x12\x12"
		.ascii   "KMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMLMMO"
		.ascii  "\x02\x00\x00\x00\x74\x00\x01\x01"
		.string "OOMMO]"
		.ascii  "\x01\x02"
		.string "MLLLLM["
		.ascii  "\x01\x01"
		.ascii   "OMMOO"
		.ascii  "\x04\x00\x00\x00\x76\x00\x00\x02"
		.ascii  "\x4f\x4f\xc0\x00\x00\x02\x4f\x4f"
		.ascii  "\x06\x00\x00\x00"
data_60199:
		.ascii  "\x20\x00\x06\x00\x00\x02\x4d\x4d"
		.ascii  "\x3e\x00\x00\x00\xfe\x00\x01\x01"
		.ascii  "\x4d\x4d\x12\x12\x4d\x15\x00\x00"
		.ascii  "\x03"
		.string "UUW%"
		.ascii  "\x00\x00\xfd\x00\x10\x00\x4d\x4d"
		.ascii  "\x4c\x13"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLLUTTTWLLLLLLLLLLLLLLLUWLLLLLLLLLLLLLLLL"
		.ascii  "\x03\x00\x00\x00\xfb\x00\x10\x03"
		.ascii  "\x4d\x4c\x13\x12\x10\x11\x12\x12"
		.ascii  "\x4b\x4b\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12"
		.ascii   "TTTTUW"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x55\x12\x55\x57\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x4c\x02\x00\x00\x00\xfa\x00\x11"
		.ascii  "\x01\x4d\x11\x13\x12\x11\x12\x4b"
		.ascii  "\x4c\x4c\x12\x12"
		.ascii   "LLOOOOOOOOOOOOOOOUTTTTWWOOOOOOOOUTWUWOOOOOOOOOOOOOOOOOO"
		.ascii  "\x12\x12\x4c\x01\x00\x00\x00\xfa"
		.ascii  "\x00\x11\x01\x4d\x4b\x12\x12"
		.ascii   "KLOOOOOOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTTUW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x55\x55"
		.ascii  "\x1c\x54\x55\x57\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x4c\x12\x4f\x01\x00\x00\x00\xfa"
		.ascii  "\x00\x11\x02"
		.ascii   "MMJLOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTTVW"
		.ascii  "\x1c\x1c\x1c\x1c"
		.ascii   "UUWTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x4c"
		.ascii  "\x12\x4f\xfb\x00\x11\x01\x4c\x4b"
		.ascii  "\x4f\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c"
		.ascii   "UTTTW"
		.ascii  "\x1c\x1c\x1c\x1c"
		.ascii   "UTWTUW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x4c\x12\x4f\xfa\x00\x11\x02\x4c"
		.ascii  "\x12\x4b\x4f\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c"
		.ascii   "UTTW"
		.ascii  "\x1c\x1c"
		.ascii   "UUTTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x4c\x12\x4f\xfa\x00\x11"
		.ascii  "\x02\x4c\x12\x4b\x4f\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTV"
		.ascii  "\x1c"
		.ascii   "UTTTSW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x4c\x12\x4f\xfb\x00"
		.ascii  "\x11\x01\x4c\x4b\x4f\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTUTTTTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x4c\x12\x4f\xfa"
		.ascii  "\x00\x11\x02"
		.ascii   "MMJLOO"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTTTTSW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x4c\x12\x4f"
		.ascii  "\xfa\x00\x11\x01\x4d\x4b\x12\x12"
		.ascii  "\x4b\x4c\x16\x16\x16\x16\x16\x16"
		.ascii  "\x16\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c"
		.ascii   "UTTTRW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x4c\x12\x4f"
		.ascii  "\x01\x00\x00\x00\xfa\x00\x11\x01"
		.ascii  "\x4d\x11\x13\x12\x11\x12\x4b\x4c"
		.ascii  "\x4c\x12\x12"
		.ascii   "LLLLLLLLLLLLLLLLLLLLUSTRWLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
		.ascii  "\x12\x12\x4f\x01\x00\x00\x00\xfb"
		.ascii  "\x00\x10\x03\x4d\x4c\x13\x12\x10"
		.ascii  "\x11\x12\x12\x4b\x4b\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x55\x51\x57\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x4f\x02\x00"
		.ascii  "\x00\x00\xfd\x00\x10\x00"
		.ascii   "MMLMOOOOOOOOOOOOOOOOOOOOOOOOOOUOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO"
		.ascii  "\x03\x00\x00\x00\xfe\x00\x01\x01"
		.ascii   "OOMMO"
		.ascii  "\x18\x00\x00\x01\x57\x24"
		.fill   0x4
		.ascii  "\x01\x00\x02\x4f\x4f\x3e\x00\x00"
		.ascii  "\x00"
data_605e9:
		.ascii  "\x20\x00\x3e\x00\x00\x02\x4d\x4d"
		.ascii  "\x06\x00\x00\x00\x14\x01\x01\x00"
		.string "UUUW\n"
		.ascii  "\x00\x03\x55\x55\x57\x12\x00\x01"
		.ascii  "\x01\x4d\x12\x12\x4d\x4d\x04\x00"
		.ascii  "\x00\x00\xfd\x00\x10\x00"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLLUTTTUWLLLLLLLUUTTTUWLLLLLLLLLLLLLLLLLL"
		.ascii  "\x13\x4c\x4d\x4d\x03\x00\x00\x00"
		.ascii  "\xfc\x00\x10\x03\x4c\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12"
		.ascii   "UTTTTW"
		.ascii  "\x12\x12\x12\x12\x12\x12"
		.ascii   "UTTTTTTW"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x4b\x4b"
		.ascii  "\x12\x12\x11\x10\x12\x13\x4c\x4d"
		.ascii  "\x01\x00\x00\x00\xfb\x00\x11\x01"
		.ascii  "\x4c\x12\x12"
		.ascii   "OOOOOOOOOOOOOOOOOOOOOOUTTTWOOOOUUTTTTTSWOOOOOOOOOOOOOLL"
		.ascii  "\x12\x12\x4c\x4c\x4b\x12\x11\x12"
		.ascii  "\x13\x11\x4d\xfb\x00\x11\x01\x4c"
		.ascii  "\x12\x4f\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTTUW"
		.ascii  "\x1c\x1c"
		.ascii   "UTTTTSSWW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "OOOOOOOLK"
		.ascii  "\x12\x12\x4b\x4d\xfa\x00\x11\x02"
		.ascii  "\x4c\x12\x4f\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c"
		.ascii   "UTTTW"
		.ascii  "\x1c"
		.ascii   "UTTTSSWW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "OOLJMM"
		.ascii  "\xfa\x00\x11\x01\x4c\x12\x4f\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii   "UTTTTTTSSWW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x4f\x4b\x4c\x01\x00"
		.ascii  "\x00\x00\xfa\x00\x11\x02\x4c\x12"
		.ascii  "\x4f\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c"
		.ascii   "UTTTTSWW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x4f\x4b\x12"
		.ascii  "\x4c\xfa\x00\x11\x02\x4c\x12\x4f"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c"
		.ascii   "UTTTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x4f"
		.ascii  "\x4b\x12\x4c\xfa\x00\x11\x01\x4c"
		.ascii  "\x12\x4f\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c"
		.ascii   "UTTSTTUW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x4f\x4b"
		.ascii  "\x4c\x01\x00\x00\x00\xfa\x00\x11"
		.ascii  "\x02\x4c\x12\x4f\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c"
		.ascii   "UTSWWUTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c"
		.ascii   "OOLJMM"
		.ascii  "\xfb\x00\x11\x01\x4c\x12\x4f\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c"
		.ascii   "URWW"
		.ascii  "\x1c\x1c\x1c"
		.ascii   "UTTW"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c"
		.ascii  "\x1c\x1c\x1c\x1c\x16\x16\x16\x16"
		.ascii  "\x16\x16\x16\x4c\x4b\x12\x12\x4b"
		.ascii  "\x4d\xfb\x00\x11\x01\x4c\x12\x12"
		.ascii   "LLLLLLLLLLLLLLLLLLLLLUQWLLLLLLUWTWLLLLLLLLLLLLLLLLLLLLL"
		.ascii  "\x12\x12\x4c\x4c\x4b\x12\x11\x12"
		.ascii  "\x13\x11\x4d\xfc\x00\x10\x03\x4c"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x55\x57\x57"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x55\x57\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x12\x12\x12\x12\x12\x12\x12\x12"
		.ascii  "\x4b\x4b\x12\x12\x11\x10\x12\x13"
		.ascii  "\x4c\x4d\x01\x00\x00\x00\xfd\x00"
		.ascii  "\x10\x00"
		.ascii   "OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMLMM"
		.ascii  "\x03\x00\x00\x00\x10\x01\x00\x02"
		.ascii  "\x54\x57\x0e\x00\x00\x02\x54\x57"
		.ascii  "\x15\x00\x01\x01"
		.ascii   "OMMOO"
		.ascii  "\x04\x00\x00\x00\x38\x01\x00\x02"
		.ascii  "\x4f\x4f\x06\x00\x00\x00"
data_60a40:
		.string "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"
		.ascii  "\xff"
		.string "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHM"
		.ascii  "\xff"
		.string "KHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMM"
		.ascii  "\xff"
		.string "KKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMM"
		.ascii  "\xff"
		.string "KKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.ascii   "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKHHHHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMMMM"
		.ascii  "\xff"
		.string "KKKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMMM"
		.ascii  "\xff"
		.string "KKKPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMMMM"
		.ascii  "\xff"
		.string "KPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPMMM"
		.ascii  "\xff"
		.string "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPM"
		.ascii  "\xff"
		.string "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP"
		.fill   0x3e7
data_70828:
		.fill   0x4
data_7082c:
		.fill   0x4
data_70830:
		.ascii  "\x01\x00"
data_70832:
		.ascii  "\x01\x01\x00\x01\x01\x00\x01\x01"
		.ascii  "\x00\x01\x01\x00\x01\x01\x00\x01"
		.ascii  "\x01\x00\x02\x01\x00\x02\x01\x00"
		.ascii  "\x02\x01\x00\x02\x01\x00\x02\x01"
		.ascii  "\x00\x02\x01\x00\x02\x01\x00\x02"
		.ascii  "\x03\x00\x00\x03\x00\x01\x03\x00"
		.ascii  "\x01\x03\x00\x01\x03\x00\x00\x03"
		.ascii  "\x00\x00\x03\x00\x00\x05\x00\x00"
		.ascii  "\x05\x00\x00\x05\x00\x00\x05\x00"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x05\x00\x02\x00\x00\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x00\x00\x02\x00"
		.ascii  "\x00\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x00\x00\x02\x00\x00\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x00\x00\x02\x00"
		.ascii  "\x00\x02\x00\x00\x02\x00\x00\x02"
		.ascii  "\x00\x00\x04\x00\x01\x04\x00\x01"
		.ascii  "\x04\x00\x01\x00\x00\x02\x00\x00"
		.ascii  "\x02\x01\x00\x02\x01\x00\x02\x00"
		.ascii  "\x00\x00\x02\x00\x00\x05\x00\x02"
		.ascii  "\x05\x00\x02\x05\x00\x02\x05\x00"
		.ascii  "\x02\x03\x00\x00\x03\x00\x01\x03"
		.ascii  "\x00\x01\x03\x00\x00\x03\x00\x00"
		.ascii  "\x03"
		.fill   0xe
		.ascii  "\x06\x00\x00\x06\x01\x00\x01\x00"
		.ascii  "\x01\x01\x04\x01\x01\x04\x01"
		.fill   0x4
		.ascii  "\x04\x00\x00\x05\x00\x00\x05\x00"
		.ascii  "\x00\x00\x02\x00\x05\x02\x00\x04"
		.ascii  "\x00\x00\x04\x00\x00\x05\x00\x06"
		.ascii  "\x00\x00\x06\x00\x00\x06\x01\x00"
		.ascii  "\x06\x02\x00\x06\x03\x00\x06\x04"
		.ascii  "\x00\x06\x00\x00\x06\x03\x02\x06"
		.ascii  "\x02\x00\x06\x01\x00\x06\x02\x00"
		.ascii  "\x0e\x01\x00\x0e\x04"
		.fill   0x4
		.ascii  "\x01\x04\x00\x03\x00\x00\x03\x00"
		.ascii  "\x00\x03\x00\x00\x03\x00\x00\x06"
		.ascii  "\x00\x00\x06\x00\x00\x0b\x00\x00"
		.ascii  "\x0b\x00\x02\x0c\x00\x00\x0c\x00"
		.ascii  "\x00\x06\x00\x00\x06\x00\x00\x0b"
		.ascii  "\x00\x00\x0b\x00\x00\x07\x00\x00"
		.ascii  "\x07\x00\x00\x09\x00\x00\x08\x00"
		.ascii  "\x00\x07\x00\x00\x08\x00\x00\x07"
		.ascii  "\x00\x00\x07\x00\x00\x06\x00\x00"
		.ascii  "\x01\x00\x00\x01\x00\x00\x04\x00"
		.ascii  "\x00\x03\x00\x00\x01\x00\x00\x03"
		.ascii  "\x00\x00\x01\x00\x00\x01\x00\x00"
		.ascii  "\x00\x01\x00\x00\x01\x00\x01\x00"
		.ascii  "\x00\x04\x00\x00\x03\x00\x00\x01"
		.ascii  "\x00\x00\x07\x00\x00\x01\x00\x00"
		.ascii  "\x01\x00\x00\x01\x00\x00\x01\x00"
		.ascii  "\x00\x01\x00\x00\x01\x00\x00\x0f"
		.ascii  "\x00\x00\x0f\x00\x00\x0f\x00\x00"
		.ascii  "\x0f\x00\x00\x10\x00\x00\x10\x00"
		.ascii  "\x00\x0f\x00\x00\x0f\x00\x00\x11"
		.ascii  "\x00\x00\x11\x00\x00\x11\x00\x00"
		.ascii  "\x11\x00\x00\x11\x00\x00\x12\x00"
		.ascii  "\x00\x12\x00\x00\x12\x00\x00\x12"
		.ascii  "\x00\x00\x10\x00\x00\x10\x00\x00"
		.ascii  "\x12\x00\x00\x10\x00\x00\x0b"
		.fill   0x5
		.ascii  "\x01\x03"
		.fill   0x7
data_70a22:
		.ascii  "\xff\x01\x05\x03\x02\x04\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff"
data_70a30:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x05\x05\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\x05\x02\x02\x04"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x05\x03"
		.ascii  "\x03\x02\x02\x04\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x03\x02\x03\x03\x03\x03"
		.ascii  "\x07\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x05\x04"
		.ascii  "\x04\x03\x03\x02\x04\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\xfe\x0f"
		.ascii  "\x07\x05\x04\x02\x02\x03\x07\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x05\x04\x04\x05\xfe"
		.ascii  "\x0f\x0f\x0f\x04\x02\x01\x02\x04"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x03\x02\x01\x01\x02"
		.ascii  "\x02\x03\x04\x04\x04\x02\x01\x02"
		.ascii  "\x03\x07\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\x01\x01\x01\x01"
		.ascii  "\x02\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x02\x04\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x01\x01\x01"
		.ascii  "\x02\x02\x02\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x02\x03\x07\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x01\x01"
		.ascii  "\x02\x02\x03\x03\x02\x02\x02\x02"
		.ascii  "\x02\x02\x03\x04\x05\x07\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x02\x02\x02\x03\x03\x04"
		.ascii  "\x03\x03\x04\x04\x05\x05\x07\x07"
		.ascii  "\x07\x07\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x02\x02"
		.ascii  "\x04\x05\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\x03\x04\x05\x07\x07\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\x00"
		.ascii  "\x00\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.fill   0x4
		.ascii  "\xf5\xf4\xf5\xf5\xf6\xf1\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfb\xf3\xf6\xf8\xf8\xf8"
		.fill   0x6
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6"
		.fill   0x6
		.ascii  "\xf6\xf7\xf8\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\xf2\xf6"
		.ascii  "\xf5\xf5\xf8\xf8\xf7\xf5"
		.fill   0x7
		.ascii  "\xf6\xf8\xf8\xf8\xf8\xf4\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf8\xf8\xf6\xfd"
		.ascii  "\xfd\xf6\xf2\xf2"
		.fill   0x5
		.ascii  "\xf7\xf6\xf7\xf8\xf8\xf5\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf8"
		.fill   0x4
		.ascii  "\xf6\xf8\xfe\xf2"
		.fill   0x5
		.ascii  "\xf5\xf7\xf8\xf8\xf6\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6"
		.fill   0xe
		.ascii  "\xf5\xf7\xf8\xf8\xf8\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6"
		.fill   0xf
		.ascii  "\xf5\xf6\xf8\x07\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6"
		.fill   0xf
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6"
		.fill   0xf
		.ascii  "\xf8\xf8\x07\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\xfc\xf6"
		.fill   0xc
		.ascii  "\xf2\xf2\xf2\xf8\x07\x07\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x04\x03\xf1\xf6"
		.fill   0x4
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xf2\xf2\xf2"
		.ascii  "\xf6\xf8\xf8\x07\x07\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xf1\xf6\x00"
		.ascii  "\x00\x00\xf2\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x07\x07\x07\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x05"
		.fill   0x11
data_70d8c:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\x04\x02\x02\x03\x04\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x03\x02\x01\x01"
		.ascii  "\x01\x02\x04\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x02\x04"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x02\x01\x01\x07\x01"
		.ascii  "\x07\x01\x01\x03\x07\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x02\x01\x07\x02"
		.ascii  "\x0f\x02\x0f\x01\x03\x07\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\x03\x01\x07"
		.ascii  "\x02\x01\x02\x07\x01\x03\x07\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x05\x03"
		.ascii  "\x01\xfe\x01\x07\x01\x03\x05\x07"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\xfe"
		.ascii  "\x05\x01\x07\x01\x07\x01\x05\x07"
		.ascii  "\x0f\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\xf6\x05\x02\x0f\x02\x05\x07"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xf6\xfe\x02\x01\x02\xfe"
		.ascii  "\xfe\x0f\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xfe\x07\x07\x07\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\x02\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x07\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6"
		.fill   0x5
		.ascii  "\xf8\xf5\xf4\xf5\xf5\xf6\xf1\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x00\xf2"
		.ascii  "\xf5\xfb\xf3\xf6\xf8"
		.fill   0x7
		.ascii  "\xf8\xf5\xfd\xf5\xf6\xf8\xf3\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x00\xf2"
		.ascii  "\xf5\xfd\xf4\xf6"
		.fill   0x9
		.ascii  "\xf6\xf7\xf8\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\xf2\xf6"
		.ascii  "\xf5\xf5\xf8\x00\x00\x00\xf2\x00"
		.ascii  "\xf2\x00\x00\x00\xf6\xf6\xf8\xf8"
		.ascii  "\xf8\xf8\xf4\x2b\x01\x05\x01\xf2"
		.ascii  "\xf6\xf8\xf8\xf6\x00\x00\xf2\x00"
		.ascii  "\xf2\x00\xf2\x00\x00\xf6\xf7\xf6"
		.ascii  "\xf7\xf8\xf8\xf5\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf8\xf8\xf6\x00\x00\xf6"
		.ascii  "\x00\x00\x00\xf8\x00\x00\xf6\xf7"
		.ascii  "\xf5\xf7\xf8\xf8\xf6\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf8\xf8\xf6\x00\x00"
		.ascii  "\x00\xf2\x00\xf2\x00\x00\x00\xf8"
		.ascii  "\xf8\xf5\xf7\xf8\xf8\xf8\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf5\xf6\xf8\xf2"
		.ascii  "\x00\x00\xf8\x00\xf6\x00\x00\xf2"
		.ascii  "\xfe\xf8\xf7\xf5\xf6\xf8\x07\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5\xf7\xf7"
		.ascii  "\xf4\xf2\x00\x00\xf2\x00\x00\xf2"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf8\x07\x07"
		.ascii  "\x2b\x01\x05\x00\xf1\xf6\xf8\xf8"
		.ascii  "\xf7\xf3\xfd\xf2\x00\x00\x00\xf2"
		.ascii  "\xf6\xf8\xf6\xf6\xf8\xf8\xf8\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xfc\xf6\xf8\xf8\xf5\xfd\xf5\xf5"
		.ascii  "\xf2\xf2\xf2\xf8\xf8\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\x07\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\xf1\xf6\xf8\xf7"
		.ascii  "\xf3\xf5\xf5\xf5\xfd\x00\xf8\xf6"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\x07\x07\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\xf1"
		.ascii  "\xf6\x07\xf6\xf5\xf5\xf5\xf6\xf8"
		.ascii  "\xf2\xf8\xf8\xf8\xf8\xf8\x07\x07"
		.ascii  "\x07\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x05"
		.fill   0x11
data_710e8:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x03\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\x02\x02\x03\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x02\x01\x01\x07"
		.ascii  "\x03\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x02"
		.ascii  "\x01\x01\x07\x02\x02\x07\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x03\x02\x01\x07\x01\x01"
		.ascii  "\x02\x03\x03\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x03\x07\x03\x02"
		.ascii  "\x01\x01\x03\x07\x01\x03\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\x07\xfe"
		.ascii  "\x07\x03\x01\x07\x01\x01\x01\x03"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\x03\x02\x0f\x01\x07\x01\x01\x03"
		.ascii  "\x03\x07\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\xfe"
		.ascii  "\xfe\x02\x01\x01\xfe\x02\x0f\x03"
		.ascii  "\x03\x07\x07\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\xf6\x0f\x07\x07\x01\xfe\x03"
		.ascii  "\x0f\x07\x07\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\x03\x02\x01\x01\x01\x01\x07"
		.ascii  "\xfe\x07\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\x03\x01\x01\x01"
		.ascii  "\x01\x02\x03\x07\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\x03\x03\x03\x03\x03\x03\x07\x07"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\x07\x07\x07\x07"
		.ascii  "\x07\x07\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\x00\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\x00\x00"
		.ascii  "\x00\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\x00\x00\x00\xf2\x00\xf5\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\x00\x00\x00\xf2\x00"
		.ascii  "\x00\xf7\xf8\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\x00\x00"
		.ascii  "\x00\xf2"
		.fill   0x5
		.ascii  "\xf8\xf6\xf6\xf8\xf8\xf8\xf8\xf4"
		.ascii  "\x2b\x01\x05\x01\xf2\xf6\xf8\xf8"
		.ascii  "\xf2\x00\xf2"
		.fill   0x5
		.ascii  "\xf2\x00\x00\xf7\xf6\xf7\xf8\xf8"
		.ascii  "\xf5\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\xf6\xf2\xf5\xf2\xf2\x00\x00"
		.ascii  "\xf2"
		.fill   0x4
		.ascii  "\xf5\xf7\xf8\xf8\xf6\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\x00\x00\xf2\x00\xf8"
		.fill   0x4
		.ascii  "\xf5\xf7\xf8\xf8\xf8\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf5\xf6\xf8\xf7\xf6"
		.ascii  "\x00\x00\x00\xf2\x00\xf2\x00\x00"
		.ascii  "\xf2\xf7\xf5\xf6\xf8\x07\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf5\xf7\xf7\xf4"
		.ascii  "\xf4\xf2\xf2\xf2\x00\xf2\x00\xf2"
		.ascii  "\xf2\xf8\xf8\xf6\xf8\x07\x07\x2b"
		.ascii  "\x01\x05\x00\xf1\xf6\xf8\xf8\xf7"
		.fill   0x6
		.ascii  "\xf6\xf2\xf8\xf6\xf6\xf8\xf8\xf8"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xfc\xf6\xf8\xf8"
		.fill   0x7
		.ascii  "\xf8\xf8\xf6\xf6\xf6\xf8\xf8\x07"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1\xf6\xf8\xf7"
		.fill   0x6
		.ascii  "\xf2\xf6\xf6\xf6\xf6\xf8\xf8\x07"
		.ascii  "\x07\x02\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\xf1\xf6\x07\xf6\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xf2\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\x07\x07\x07\x03\x00\x00\x00\x2c"
		.ascii  "\x01\x03\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x05"
		.fill   0x11
data_71444:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\x02\x04\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x02\x01\x01"
		.ascii  "\x04\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x01\x04\x07\x07\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x05\x03\x02\xf8\x04\x05"
		.ascii  "\x07\x02\x03\x05\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x03\x01\x01\x01\x07\x01"
		.ascii  "\x02\x0f\x01\x01\x02\x04\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x04\x01\x01\x01\x01\x07"
		.ascii  "\x01\x01\x07\x01\x01\x01\x02\x04"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x03\x02\x01\x01\x01"
		.ascii  "\x07\x04\x05\x07\x01\x01\x01\x02"
		.ascii  "\x03\x07\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x05\x04\x03"
		.ascii  "\x03\x07\x01\x04\xfe\x03\x03\x04"
		.ascii  "\x05\x07\x07\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\x07"
		.ascii  "\x07\x07\x01\x01\x01\x04\xfe\x07"
		.ascii  "\x07\x07\x07\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x03"
		.ascii  "\x02\x01\xf6\x02\x01\x02\x05\x07"
		.ascii  "\x02\x03\x04\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\x07\x07\x07\xf8"
		.ascii  "\x04\x05\x07\x07\x0f\x07\x07\x07"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\x07\x07\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\x00"
		.ascii  "\x00\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8"
		.fill   0x4
		.ascii  "\xf5\xf8\xf8\xf5\xfd\xf5\xf6\xf8"
		.ascii  "\xf3\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xf2\xf5\xfd\xf4\xf6\xf8\xf8"
		.ascii  "\xf2\x00\x00\xf2\xf7\xf8\xf8\xf6"
		.ascii  "\xf7\xf8\xf6\xf8\xf3\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x01\xf2\xf6\xf5"
		.ascii  "\xf5\x00\x00\x00\xf5\xf2\xf2\xfe"
		.ascii  "\x00\x00\x00\xf6\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf4\x2b\x01\x05\x01\xf2\xf6"
		.ascii  "\xf8"
		.fill   0x4
		.ascii  "\xf6\x00\x00\xf8"
		.fill   0x4
		.ascii  "\xf7\xf6\xf7\xf8\xf8\xf5\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6"
		.fill   0x5
		.ascii  "\xf6\x00\x00\xf8"
		.fill   0x5
		.ascii  "\xf5\xf7\xf8\xf8\xf6\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6"
		.fill   0x5
		.ascii  "\xf5\xf2\xf2\xfe"
		.fill   0x5
		.ascii  "\xf5\xf7\xf8\xf8\xf8\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf2"
		.fill   0x4
		.ascii  "\xf7\x00\x00\xf6"
		.fill   0x4
		.ascii  "\xf2\xf7\xf5\xf6\xf8\x07\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf5\xf2\xf2\xf2"
		.ascii  "\xf2"
		.fill   0x4
		.ascii  "\xf2\xf2\xf2\xf2\xf8\xf8\xf6\xf8"
		.ascii  "\x07\x07\x2b\x01\x05\x00\xf1\xf6"
		.ascii  "\xf8\x00\x00\x00\xfd"
		.fill   0x4
		.ascii  "\xf6\x00\x00\x00\xf6\xf8\xf8\xf8"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xfc\xf6\xf8\xf2\xf2\xf2\xf5"
		.ascii  "\xf2\x00\x00\xf2\xf8\xf2\xf2\xf2"
		.ascii  "\xf6\xf8\xf8\x07\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03\xf1\xf6\xf8"
		.ascii  "\xf7\xf3\xf5\xf5\xf5\xf2\xf2\xf8"
		.ascii  "\xf6\xf6\xf6\xf6\xf8\xf8\x07\x07"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x04\x02"
		.ascii  "\xf1\xf6\x07\xf6\xf5\xf5\xf5\xf6"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\x07"
		.ascii  "\x07\x07\x03\x00\x00\x00\x2c\x01"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x01\x01\x01\x0f\xfe\xf8\x01\x01"
		.ascii  "\x0f\x01\x01\x01\x01\x01\x01\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x01\x01\x07\xf6\xfe\x01"
		.ascii  "\x07\x07\x0f\x01\x01\x07\x07\x07"
		.ascii  "\x01\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x01\x01\x01\x01\x01"
		.ascii  "\x01\x07\x0f\x0f\x01\x01\x07\xf6"
		.ascii  "\xf6\x01\x07\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x01\x01\x07\x07"
		.ascii  "\x07\x01\x07\x0f\x0f\x01\x01\x01"
		.ascii  "\x01\x01\xf5\x07\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x01\x01\x07"
		.ascii  "\xfe\xfe\x01\x07\xfe\x0f\x01\x01"
		.ascii  "\x07\x07\x07\x07\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x01\x01\x01"
		.ascii  "\x07\xf6\x0f\x01\x01\xfe\x01\x01"
		.ascii  "\x01\x01\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x07"
		.ascii  "\x07\x07\xf6\xfe\x0f\x07\x07\xfe"
		.ascii  "\x07\x07\x07\x07\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf5\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf8\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\x00\x00\x00\xf8"
		.ascii  "\xf7\xf5\x00\x00\xfe"
		.fill   0x6
		.ascii  "\xf8\xf8\xf8\xf4\x2b\x01\x05\x01"
		.ascii  "\xf2\xf6\xf2\x00\x00\xfd\xfd\xf6"
		.ascii  "\x00\xf2\xf8\xf2\x00\x00\xf2\xf2"
		.ascii  "\xf2\x00\xf8\xf8\xf5\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf8"
		.fill   0x6
		.ascii  "\xfe\xf8\xf8\x00\x00\xf6\xf7\xf5"
		.ascii  "\x00\xf8\xf8\xf6\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf8\x00\x00\xf2\xf2\xf2"
		.ascii  "\x00\xf8\xfe\xf8"
		.fill   0x5
		.ascii  "\xf2\xf8\xf8\xf8\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf5\x00\x00\xf7\xf6\xf7"
		.ascii  "\x00\xf8\xf6\xf8\x00\x00\xf2\xf2"
		.ascii  "\xf2\xf5\xf6\xf8\x07\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\x00\x00\x00\xf4\xf4"
		.ascii  "\xf8\x00\x00\xf7"
		.fill   0x4
		.ascii  "\xf8\xf8\xf6\xf8\x07\x07\x2b\x01"
		.ascii  "\x05\x00\xf1\xf6\xf2\xf2\xf2\xf3"
		.ascii  "\xfd\xf7\xf2\xf2\xf8\xf2\xf2\xf2"
		.ascii  "\xf2\xf6\xf8\xf8\xf8\x07\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xfc\xf6"
		.ascii  "\xf8\xf8\xf5\xfd\xf5\xf5\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf6\xf6\xf6\xf8\xf8"
		.ascii  "\x07\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x03\xf1\xf6\xf8\xf7\xf3\xf5"
		.ascii  "\xf5\xf5\xfd\xf6\xf8\xf6\xf6\xf6"
		.ascii  "\xf6\xf8\xf8\x07\x07\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xf1\xf6\x07"
		.ascii  "\xf6\xf5\xf5\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x07\x07\x07\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x05"
		.fill   0x11
data_71afc:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x01\x01\x01\x0f\xfe\xf8\x01\x01"
		.ascii  "\x0f\x01\x01\x01\x01\x01\x01\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x01\x01\x01\xf6\x01\x01"
		.ascii  "\x07\x07\x0f\x01\x01\x07\x07\x07"
		.ascii  "\x01\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x01\x01\x07\x01\xfe"
		.ascii  "\x01\x07\x0f\x0f\x01\x01\x07\xf6"
		.ascii  "\xf6\x01\x07\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x01\x01\x07\x0f"
		.ascii  "\x07\x01\x07\x0f\x0f\x01\x01\x01"
		.ascii  "\x01\x01\xf5\x07\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x01\x01\x07"
		.ascii  "\xfe\xfe\x01\x07\xfe\x0f\x01\x01"
		.ascii  "\x07\x07\x07\x07\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x01\x01\x01"
		.ascii  "\x07\xf6\x0f\x01\x01\xfe\x01\x01"
		.ascii  "\x01\x01\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x07"
		.ascii  "\x07\x07\xf6\xfe\x0f\x07\x07\xfe"
		.ascii  "\x07\x07\x07\x07\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf5\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf8\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\x00\x00\x00\xf8"
		.ascii  "\xf7\xf5\x00\x00\xfe"
		.fill   0x6
		.ascii  "\xf8\xf8\xf8\xf4\x2b\x01\x05\x01"
		.ascii  "\xf2\xf6\xf2\x00\x00\x00\xfd\x00"
		.ascii  "\x00\xf2\xf8\xf2\x00\x00\xf2\xf2"
		.ascii  "\xf2\x00\xf8\xf8\xf5\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf8\x00\x00\xf2\x00"
		.ascii  "\xf2\x00\xfe\xf8\xf8\x00\x00\xf6"
		.ascii  "\xf7\xf5\x00\xf8\xf8\xf6\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf8\x00\x00\xf8"
		.ascii  "\xf2\xf5\x00\xf8\xfe\xf8"
		.fill   0x5
		.ascii  "\xf2\xf8\xf8\xf8\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf5\x00\x00\xf7\xf6\xf7"
		.ascii  "\x00\xf8\xf6\xf8\x00\x00\xf2\xf2"
		.ascii  "\xf2\xf5\xf6\xf8\x07\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\x00\x00\x00\xf4\xf4"
		.ascii  "\xf8\x00\x00\xf7"
		.fill   0x4
		.ascii  "\xf8\xf8\xf6\xf8\x07\x07\x2b\x01"
		.ascii  "\x05\x00\xf1\xf6\xf2\xf2\xf2\xf3"
		.ascii  "\xfd\xf7\xf2\xf2\xf8\xf2\xf2\xf2"
		.ascii  "\xf2\xf6\xf8\xf8\xf8\x07\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xfc\xf6"
		.ascii  "\xf8\xf8\xf5\xfd\xf5\xf5\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf6\xf6\xf6\xf8\xf8"
		.ascii  "\x07\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x03\xf1\xf6\xf8\xf7\xf3\xf5"
		.ascii  "\xf5\xf5\xfd\xf6\xf8\xf6\xf6\xf6"
		.ascii  "\xf6\xf8\xf8\x07\x07\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xf1\xf6\x07"
		.ascii  "\xf6\xf5\xf5\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x07\x07\x07\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x05"
		.fill   0x11
data_71e58:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\x05\x05"
		.ascii  "\x05\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x05"
		.ascii  "\x01\x01\x06\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x05\x01\x02\x01\x06\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x05\x01\x02\x01"
		.ascii  "\x06\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x0f\x05"
		.ascii  "\x02\x03\x02\x06\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\xfe\x05"
		.ascii  "\x03\x04\x02\x07\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\xf8\x05"
		.ascii  "\x02\x04\x02\x07\xfe\x0f\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x0f\x05"
		.ascii  "\x03\x05\x03\x07\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x1b\x1e"
		.ascii  "\x02\x04\x03\x07\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\x1b\x1d\x02\x07\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\x1f\x1a\x1b\x1e\x0f\xfe\x0f\xfe"
		.ascii  "\xfe\x0f\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x1f\x1d\x1f\xf8\x1b"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x1f\x1d"
		.ascii  "\x1f\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\x1b\x1f\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\x07\x07\x07\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\x07\x06\x06\x07\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\x07\x05\x05"
		.ascii  "\x06\x07\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\x07\x05\x05\x06\x07\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\xf8\xf8"
		.ascii  "\xf7\xf5\xf8\x07\x05\x05\x06\x07"
		.ascii  "\xf6\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\xf6"
		.ascii  "\xfd\xfd\xf6\x07\x05\x05\x06\x07"
		.ascii  "\xf8\xf6\xf7\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf5\x07\x06\x05\x06\x07"
		.ascii  "\xf6\xf8\xf6\xf7\xf5\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\xf6\xf8\x07\x06\x05\x06\x07"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf5\xf7\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\xf6\x1e\x1c\x07\x06\x06\x07"
		.ascii  "\xf6\xf8\xf8\xf8\xfe\xf8\xf7\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf7\x1d\x1e\x1c\x07\x07"
		.ascii  "\xf8\xf7\xf7\xf7\xf8\xf8\xf8\xf8"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6\xf8\xf8\x1e\x1c\x1e\x1c"
		.ascii  "\xf8\xf6\xf8\xf6\xf6\xf8\xf6\xf6"
		.ascii  "\xf8\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\xf8\x1d"
		.ascii  "\x1c\x1e\x1d\x1e\x1d\xf8\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\xf8\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\x1e\x1c\x1e\xf5\xf5\xf5"
		.ascii  "\xfd\xf6\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x1d\x1e\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
data_721b4:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\x06\x06\xfe\x4d"
		.ascii  "\x4d\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x06\x03"
		.ascii  "\x06\x4d\x4b\x4e\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\x06\x04\x01\x05\x4d\x4f\x0f"
		.ascii  "\xfe\xfe\x05\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\x06\x03\x01\x05"
		.ascii  "\x4b\x4f\x05\x0f\xfe\x06\x03\x07"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\x06\x06\x05"
		.ascii  "\x4b\x4f\x06\x05\x05\x04\x03\x01"
		.ascii  "\x07\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\xf8\x4d"
		.ascii  "\x4c\x4f\x06\x05\x05\x05\x04\x03"
		.ascii  "\x01\x07\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x0f\x4d"
		.ascii  "\x4c\x4f\x06\x05\x05\x05\x04\x03"
		.ascii  "\x02\x04\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\x4d"
		.ascii  "\x4c\x4f\x0f\x0f\x05\x04\x04\x03"
		.ascii  "\x02\x01\x06\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\x4e"
		.ascii  "\x4c\x4f\x0f\x0f\x05\x03\x03\x02"
		.ascii  "\x01\x01\x05\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x4e"
		.ascii  "\x4c\x4f\xf6\xfe\x05\x03\x01\x01"
		.ascii  "\x01\x04\x06\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x4f\x4d\x4f\xf6\xf8\xf8"
		.ascii  "\xfe\x07\x07\x07\x07\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x4f\x4f"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\x07\x07\xf7\x4e\x4f\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\x07\x06\x06\x07\x4e\x4f"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\x07\x06\x05"
		.ascii  "\x4e\x4d\x4f\xf8\xf6\xf7\x07\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\xf8\xf8"
		.ascii  "\x07\x06\x05\x4e\x4d\x4f\x07\xf8"
		.ascii  "\xf6\x07\x06\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\xf6"
		.ascii  "\xfd\x07\x07\x4e\x4d\x4f\x06\x05"
		.ascii  "\x06\x07\x06\x07\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf5\x4f\x4e\x4f\x06\x05"
		.ascii  "\x05\x05\x05\x06\x07\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\xf6\xf8\x4f\x4d\x4f\x07\x06"
		.ascii  "\x06\x05\x05\x05\x06\x07\xf7\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\xf6\xf8\x4f\x4e\x4f\xf8\xf8"
		.ascii  "\x07\x06\x05\x05\x06\x06\x07\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf7\x4f\x4d\x4f\xf8\xf8"
		.ascii  "\x07\x06\x06\x06\x06\x06\x07\xf8"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6\xf8\x4f\x4e\x4f\xfd\xf7"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\xf6"
		.ascii  "\xf8\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\x4f\x4d"
		.ascii  "\x4f\xfd\xf5\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\xf8\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\x4e\x4f\xf3\xf5\xf5\xf5"
		.ascii  "\xfd\xf6\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x07\xf6\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
data_72510:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\x06\x01\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x06\x01\x02\x06\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x07\x01\x04\x03"
		.ascii  "\xfe\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x07\x05"
		.ascii  "\x03\x04\x03\x06\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\xfe\x0f"
		.ascii  "\x4d\x01\x03\x07\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\xf8\xfe"
		.ascii  "\x4d\x4c\x4f\x05\xfe\x0f\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\x4d\x03\x4f\x0f\x07\x0f\x0f\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\xfe"
		.ascii  "\x4d\x4a\x4f\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\x4d\x4c\x4f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\x4e\x4c\x4f\xfe\x0f\xfe\x0f\xfe"
		.ascii  "\xfe\x0f\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x4e\x4c\x4f\xf8\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x4f\x4b"
		.ascii  "\x4f\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\x4a\x4f\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\xf8\x07\x07\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\x07\x07\x05"
		.ascii  "\x07\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\x07\x06\x05\x07\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\xf8\xf8"
		.ascii  "\xf7\xf5\xf8\x07\x06\x05\x06\x07"
		.ascii  "\xf6\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\xf6"
		.ascii  "\xfd\xfd\xf6\xf8\x07\x06\x07\x07"
		.ascii  "\xf8\xf6\xf7\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf5\xf6\x4f\x4e\x07\x07"
		.ascii  "\xf6\xf8\xf6\xf7\xf5\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\xf6\xf8\xf8\x4f\x06\x4f\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf5\xf7\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\xf6\xf8\xf7\x4f\x4d\x4f\xf8"
		.ascii  "\xf6\xf8\xf8\xf8\xfe\xf8\xf7\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf7\xf7\x4f\x4e\x4f\xf8"
		.ascii  "\xf8\xf7\xf7\xf7\xf8\xf8\xf8\xf8"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6\xf8\xf8\x4f\x4e\x4f\xf7"
		.ascii  "\xf8\xf6\xf8\xf6\xf6\xf8\xf6\xf6"
		.ascii  "\xf8\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\xf8\x4f"
		.ascii  "\x4d\x4f\xf5\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\xf8\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\x4f\x4e\x4f\xf5\xf5\xf5"
		.ascii  "\xfd\xf6\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x4f\x4f\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
data_7286c:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\x4b\x4c"
		.ascii  "\x4f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x04"
		.ascii  "\x4c\x4a\x4f\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x05\x4d\x03\x4d\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x04\xfe\x4e\x4a"
		.ascii  "\x4f\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x0f\x03"
		.ascii  "\x0f\x0f\x4e\x4b\x4f\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\xfe\x04"
		.ascii  "\x0f\x0f\x0f\x4d\x4b\x4f\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\xf8\x05"
		.ascii  "\x0f\x0f\x0f"
		.ascii   "OLLO"
		.ascii  "\xf6\xf6\xf6\xf6\xf6\xf3\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\x0f\x0f\xfe\x0f"
		.ascii  "\x05\xf8\xfe\x0f\x0f\x4e\x4b\x4d"
		.ascii  "\x0f\x0f\xf6\xf5\xf6\xf6\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\x0f"
		.ascii  "\x05\xfe\xfe\x0f\x0f"
		.ascii   "OLKO"
		.ascii  "\x0f\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\x04"
		.ascii  "\xf6\xf6\x0f"
		.ascii   "ONLKM"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x04"
		.ascii   "MONNMLKM"
		.ascii  "\xfe\x0f\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x4d\x4f\x05"
		.ascii   "KLLMNO"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xf4\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\x00\x0f"
		.ascii   "NKOOOOO"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\x0f\xf4\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x02\x00\x0f\x4f\x4f\xf6\xf8"
		.ascii  "\xfe\xf8\xf8\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xfe\x0f\xf3\xf3\x03\x00\x00\x00"
		.ascii  "\x2c\x01\x03\x03\xf4\xf1\xfc\xf3"
		.ascii  "\xfc\xf4\xf3\xfc\xf3\xf4\xf3\xf4"
		.ascii  "\xf3\xf3\xf3\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\x4e\x4d\x4e\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\x07\x06\x4e\x4f\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\x07\x4f\x4d"
		.ascii  "\x07\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\x07\xf7\x4f\x4d\x4e\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\xf8\xf8"
		.ascii  "\xf7\xf5\xf8\x07\xfe\xf8\x4e\x4d"
		.ascii  "\x4e\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\xf6"
		.ascii  "\xfd\xfd\xf6\x07\xf8\xf8\xf8\x4e"
		.ascii  "\x4d\x4e\xf7\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf5\x07\xf8\xfe\xf8"
		.ascii   "OMMO"
		.ascii  "\xf7\xf5\xf7\xf8\xf8\xf6\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf8\xf8\xf6\xf8"
		.ascii  "\x07\xf5\xf7\xf8\xfe\x4e\x4d\x4e"
		.ascii  "\xf8\xf8\xf5\xf7\xf8\xf8\xf8\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5\xf6\xf8"
		.ascii  "\x07\xf6\xf7\xf8\xf8"
		.ascii   "ONMN"
		.ascii  "\xfe\xf8\xf7\xf5\xf6\xf8\x07\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5\xf7\x07"
		.ascii  "\xf4\xf4\xf8"
		.ascii   "ONNMN"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf8\x07\x07"
		.ascii  "\x2b\x01\x05\x00\xf1\xf6\xf8\x07"
		.ascii   "ONNNMMMN"
		.ascii  "\xf6\xf8\xf6\xf6\xf8\xf8\xf8\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xfc\xf6\x4e\x4d\x06"
		.ascii   "MMMMNO"
		.ascii  "\xf8\xf8\xf6\xf6\xf6\xf8\xf8\x07"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1\xf6\x4d\x4f\x07"
		.ascii   "NNOO"
		.ascii  "\xf6\xf8\xf6\xf6\xf6\xf6\xf8\xf8"
		.ascii  "\x07\x07\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x02\xf1\xf6\x4e\x4f\xf5\xf5"
		.ascii  "\xf5\xf6\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\x07\x07\x07\x03\x00\x00\x00"
		.ascii  "\x2c\x01\x03\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x15\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x17\x0f\x14\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x16"
		.ascii  "\x0f\xfe\x0f\x0f\x13\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x16\x13\xfe\xf8\x0f\x15"
		.ascii  "\x16\x0f\x17\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\x14\xf6\x16\xfe\x16"
		.ascii  "\x13\x0f\x12\x16\x15\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\x14\x16\x16"
		.ascii  "\x12\x11\x13\x16\xfe\x13\x16\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\x15\x16\x14"
		.ascii  "\x13\x14\x13\x16\x0f\x16\x0f\x15"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x17\x0f\x14"
		.ascii  "\x13\x13\x14\x14\x15\x14\x0f\x13"
		.ascii  "\x0f\x0f\x01\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\x15\x17"
		.ascii  "\x12\x11\x10\x13\x14\x13\x16\xfe"
		.ascii  "\x0f\x0f\x01\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\x15\x12\x01\x13\x14\x12\x14\xfe"
		.ascii  "\xfe\x0f\xfe\xfe\x01\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\x15\x13\x15"
		.ascii  "\xfe\x16\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\x15"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\x17\xf8\x15"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\x16\xf8\xf6\xf8\xf8"
		.ascii  "\x15\xf7\xf8\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\x16\x15"
		.ascii  "\xf7\xf5\xf8\x15\x16\xf8\x17\xf8"
		.ascii  "\xf6\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\x15"
		.ascii  "\xfd\x16\xf6\x16\x15\xf8\x15\x16"
		.ascii  "\x15\xf6\xf7\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii  "\xf6\x15\x16\x16\x15\x15\x15\x16"
		.ascii  "\xf6\x15\x16\xf7\xf5\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\x15\x16\x15\x15\x15\x15\x16"
		.ascii  "\xf8\x16\xf8\x15\xf8\xf5\xf7\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\x17\xf8\x15\x15\x15\x15\x15"
		.ascii  "\x15\x15\xf8\x15\xfe\xf8\x04\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\x15\x17\x15\x15\x15\x15"
		.ascii  "\x15\x15\x16\xf7\xf8\xf8\x04\x04"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6\xf8\xf8\x15\x15\x15\x15"
		.ascii  "\x15\x15\x15\xf6\xf6\xf8\xf6\xf6"
		.ascii  "\x04\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\xf8\xf8"
		.ascii  "\xf5\x15\x15\x15\xf6\x16\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\x04\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\xf8\xf7\xf3\xf5\xf5\xf5"
		.ascii  "\xfd\xf6\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x07\xf6\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0x5
		.ascii  "\x17"
		.fill   0x8
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x17\x14"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x17\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x14\x17\xf8\xfe\x17\xfe\xfe\x0f"
		.ascii  "\xf8\x16\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\x16\x12\x0f\x0f\x14\x0f"
		.ascii  "\xfe\xf8\x15\x17\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\x17\x14\x13"
		.ascii  "\x15\x12\x14\x0f\x17\x16\x15\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\x15\x12\x14\x12\x13\x12\x14"
		.ascii  "\x15\x14\x14\x15\x17\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x14\x13\x11\x10\x11\x13"
		.ascii  "\x11\x14\x13\x14\x17\xfe\x15\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x15\x13\x12\x10\x10\x13"
		.ascii  "\x11\x13\x13\x11\x17\x0f\x15\x17"
		.ascii  "\x17\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x14\x12\x11\x12\x11"
		.ascii  "\x14\x12\x14\x12\x13\x0f\x15\x16"
		.ascii  "\x17\xf6\xf5\x16\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x17\x13\x11\x10\x11"
		.ascii  "\x13\x15\x13\x15\x13\x17\x15\x17"
		.ascii  "\x16\x01\x01\x16\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x15\x13\x10\x01"
		.ascii  "\x12\x15\x16\x14\x16\x14\x16\x14"
		.ascii  "\x0f\x0f\x15\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x17\x14\x12"
		.ascii  "\x13\x14\x16\x14\x15\x17\x16\x14"
		.ascii  "\x17\x0f\xfe\x01\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x16\x15\x15\x16\x17\x15"
		.ascii  "\x17\x0f\x17\x16\x0f\xfe\x17\x01"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\x17"
		.ascii  "\x16\x17\xf8\xf8\x16\x17\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x17\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\x17\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\x17\x15\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\x17\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\x15\x17\xf5\xf6"
		.ascii  "\x17\xf6\xf7\xf8\xf5\x16\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\x16\x15"
		.ascii  "\xf8\xf8\x15\xf8\xf6\xf5\x15\x17"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\x17\x15\x15\x15\x15\x15\xf8"
		.ascii  "\x17\x16\x15\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\x15\x15\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x17\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\x15\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x17\xf6\x15\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\x15\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x17\xf8\x15\x17\x17\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\x15"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x15\xf8\x15\x16\x17\xf5\xf7\x16"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\x17"
		.ascii  "\x15\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x15\x17\x15\x17\x16\x04\x04\x16"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\x15\x15\x15\x15\x15\x15\x16\x15"
		.ascii  "\x16\x15\x16\x15\xf8\xf8\x15\x04"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\x17\x15\x15\x15\x15\x16\x15"
		.ascii  "\x15\x17\x16\x15\x17\xf8\xf6\x04"
		.ascii  "\xf8\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\x16\x15"
		.ascii  "\x15\x16\x17\x15\x17\xf8\x17\x16"
		.ascii  "\xf8\xf6\x17\x04\x04\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\xf8\x17\x16\x17\xf5\xf5"
		.ascii  "\x16\x17\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x07\xf6\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\x17\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x16\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x04\x00\x00\x00\x2c\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\x1f\x1d\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x02\x00\x00\x00\x2c"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\x1b\x1f\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x01\x00"
		.ascii  "\x00\x00\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\x1f\x1f\x0f\x0f\x0f\x1c"
		.ascii  "\x19\x19\x1f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\x1f\x1b\x1f\x0f\xfe\x19\x01"
		.ascii  "\x01\x1b\x1f\x0f\xfe\xfe\x0f\xf8"
		.ascii  "\xf8\xf8\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\x19\x1f\x0f\xfe\x19\x01\x01"
		.ascii  "\x01\x1c\x1f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xf6\x1b\x01\x01\x01"
		.ascii  "\x1a\x1f\x1f\x0f\x1d\x1b\xfe\xfe"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x1a\x19\x1a\x1d"
		.ascii  "\x1f\x1f\xfe\x1e\x18\x1f\xf6\xf6"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\x1b\x19\x1d\x1f\x1f"
		.ascii  "\x1f\x0f\x0f\x1c\x1f\x0f\xf6\xf5"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\xfe\x1f\x19\x1d\x1b\x19\x1d"
		.ascii  "\x1f\x0f\x0f\x0f\x0f\x0f\x01\xf8"
		.ascii  "\xf6\xfe\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\xfe\x1d\x18\x1b\x1d\x1f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\x0f\x01\x01\x0f"
		.ascii  "\x0f\x0f\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x1f\x18\x1f\x1f\xfe\x0f\xfe"
		.ascii  "\x0f\xfe\x1f\x1f\xfe\xfe\x01\x0f"
		.ascii  "\x0f\xf4\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x1d\x1f\xf6\xf8\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x1d\x1f\xfe\xfe\x01\x0f"
		.ascii  "\x0f\xf4\x2c\x01\x04\x03\x00\x0f"
		.ascii  "\x0f\xfe\xf6\xf8\xf8\xf8\xf6\xfe"
		.ascii  "\x0f\xfe\xfe\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xf4\x01\x00\x00\x00\x2c\x01\x04"
		.ascii  "\x02\x00\x0f\xf8\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\xf8\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\xf3\xf3\x02\x00\x00\x00\x2d"
		.ascii  "\x01\x03\x03\xf4\xf1\xfc\xf3\xfc"
		.ascii  "\xf4\xf3\xfc\xf3\xf4\xf3\xf4\xf3"
		.ascii  "\xf3\xf3\x04"
		.fill   0x27
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\x1f\x2d\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\x2d\x1f"
		.ascii  "\xf6\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\x1f\x1f"
		.ascii  "\xf8\xf8\xf8\x2d\x2d\x2d\x1f\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\x1f\x2d\x1f\xf8\xf6"
		.ascii   "----"
		.ascii  "\x1f\xf8\xf6\xf7\xf8\xf6\xf8\xf3"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x01"
		.ascii  "\xf2\xf6\xf5\x2d\x1f\xf8\xf7"
		.ascii   "-----"
		.ascii  "\x1f\xf8\xf6\xf6\xf8\xf8\xf8\xf8"
		.ascii  "\xf4\x2b\x01\x05\x01\xf2\xf6\xf8"
		.ascii  "\xf8\xf6\xfd"
		.ascii   "-----"
		.ascii  "\x1f\x1f\xf8\x2d\x2d\xf6\xf7\xf8"
		.ascii  "\xf8\xf5\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf8\xf8\xf6\xf7"
		.ascii   "----"
		.ascii  "\x1f\x1f\xf6\x1e\x2d\x1f\xf5\xf7"
		.ascii  "\xf8\xf8\xf6\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf8\xf8\xf6\x2d\x2d\x2d\x1f"
		.ascii  "\x1f\x1f\xf8\xf8\x2d\x1f\xf8\xf5"
		.ascii  "\xf7\xf8\xf8\xf8\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf5\xf6\x1f"
		.ascii   "-----"
		.ascii  "\x1f\xf8\xf8\xf8\xfe\xf8\x04\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf7"
		.ascii   "----"
		.ascii  "\x1f\xf8\xf7\xf7\xf7\xf8\xf8\x04"
		.ascii  "\x04\xf6\xf8\x07\x07\x2b\x01\x05"
		.ascii  "\x00\xf1\xf6\xf8\x1f\x2d\x1f\x1f"
		.ascii  "\xf7\xf8\xf6\xf8\xf6\x1f\x1f\xf6"
		.ascii  "\xf6\x04\xf8\xf8\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\xfc\xf6\xf8"
		.ascii  "\x2d\x1f\xfd\xf5\xf5\xf6\xf8\xf8"
		.ascii  "\xf8\x2d\x1f\xf6\xf6\x04\xf8\x07"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1\xf6\xf8\xf7\xf3\xf5\xf5"
		.ascii  "\xf5\xfd\xf6\xf8\xf6\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\x07\x07\x02\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x02\xf1\xf6\x07\xf6"
		.ascii  "\xf5\xf5\xf5\xf6\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x07\x07\x07\x03\x00"
		.ascii  "\x00\x00\x2c\x01\x03\x03\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\x1e\xfe\xfe\xfe\x1c\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\x1f\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\x1d\x0f\x0f\x1d\x0f\x0f"
		.ascii  "\xfe\xf8\x0f\x0f\xf8\x1f\x1d\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x1e\x1c\x0f\x0f\x1d\xfe\x0f\x1f"
		.ascii  "\x1c\x1b\x1f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\x1d\x1d\x0f\x1f"
		.ascii  "\x1e\x1f\x1d\x1c\x1a\x1f\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x1e\x1b\x1e\x1f"
		.ascii  "\x1d\x1b\x19\x01\x1b\x1f\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x1f\x1f\x0f\x1f\x1d\x1b\x1c"
		.ascii  "\x1b\x19\x01\x01\x1b\x1f\xfe\xf6"
		.ascii  "\x1e\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x1f\x1d\x1f\x1e\x1d\x1b"
		.ascii  "\x19\x01\x01\x19\x1b\x1f\x0f\x1e"
		.ascii  "\x1d\x1f\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x1d\x1f\x1e\x1d\x1a"
		.ascii  "\x1c\x1c\x19\x1c\x1c\x1f\x1e\x1c"
		.ascii  "\x1d\x01\x01\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x1d\x1d\x1e\x1b"
		.ascii  "\x1d\x1c\x1a\x01\x19\x1b\x1c\x1a"
		.ascii  "\x1c\x1f\x0f\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x19\x1b\x1d"
		.ascii  "\x1d\x1c\x1b\x19\x01\x1b\x1c\x1a"
		.ascii  "\x1c\x1f\x1f\x01\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x1a\x1c\x1b\x1d\x1b\x19\x18"
		.ascii  "\x19\x1c\x1d\x1e\x1f\xfe\xfe\x01"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x19\x1c\x1d"
		.ascii  "\x1a\x18\x18\x18\x18\x1b\x1c\x1a"
		.ascii  "\x1b\x1d\x1f\x1f\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\x1e\xf6"
		.ascii  "\xf6\xf6\x2d\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\x1f\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\x2d\xf8"
		.ascii  "\xf8\x2d\xf8\xf8\xf6\xf5\xf8\xf8"
		.ascii  "\xf5\x1f\x2d\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\x1e\x2d\xf8\xf8"
		.ascii  "\x2d\xf7\xf8\x1f\x2d\x2d\x1f\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\xf5\xf8\xf8"
		.ascii  "\x2d\x2d\xf8\x1f\x1e\x1f\x2d\x2d"
		.ascii  "\x2d\x1f\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\xf8\xf6"
		.ascii  "\x1e\x2d\x1e\x1f"
		.ascii   "-----"
		.ascii  "\x1f\xf7\xf6\xf7\xf8\xf8\xf5\x2b"
		.ascii  "\x01\x05\x01\xf1\x1f\x1f\xf8\x1f"
		.ascii   "--------"
		.ascii  "\x1f\xf6\xf7\x1e\xf7\xf8\xf8\xf6"
		.ascii  "\x2b\x01\x05\x01\xf1\x1f\x2d\x1f"
		.ascii  "\x1e"
		.ascii   "-------"
		.ascii  "\x1f\xf8\x1e\x2d\x1f\xf7\xf8\xf8"
		.ascii  "\xf8\x2b\x01\x05\x01\xf1\x2d\x1f"
		.ascii  "\x1e"
		.ascii   "-------"
		.ascii  "\x1f\x1e\x2d\x2d\x04\x04\xf5\xf6"
		.ascii  "\xf8\x07\x2b\x01\x05\x01\xf1\x2d"
		.ascii  "\x2d\x1e"
		.ascii   "----------"
		.ascii  "\x1f\xf8\x04\xf6\xf8\x07\x07\x2b"
		.ascii  "\x01\x05\x00\xf1"
		.ascii   "------------"
		.ascii  "\x1f\x1f\x04\xf8\xf8\xf8\x07\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x00\xfc"
		.ascii   "----------"
		.ascii  "\x1e\x1f\xf6\xf6\x04\x04\xf8\x07"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1"
		.ascii   "-------------"
		.ascii  "\x1f\x1f\xf8\x07\x07\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xf1\xf6\x07"
		.ascii  "\xf6\xf5\xf5\xf5\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x07\x07\x07\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xc
		.ascii  "\x27\x00\x0f\x05\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\x00\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\x0f"
		.string "\"!#%"
		.ascii  "\x00\x03\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\x00\x0f\xf6\xf8\x0f\x0f\xfe"
		.ascii  "\xf8\xfe"
		.ascii   "&$#'#$'"
		.ascii  "\xf8\xfe\x00\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\x00\x0f\xf6\xf6\xfe"
		.ascii  "\x0f\x0f"
		.ascii   "'$%'"
		.ascii  "\xf8\x25\x24\x26\xf6\xf8\xfe\xf8"
		.ascii  "\x0f\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\x00\x0f\xf6\xf6\xfe\x0f\x0f"
		.ascii  "\x22\x27\x0f\xfe\xfe\x23\x25\x27"
		.ascii  "\xfe\x0f\xf8\xf8\xf8\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x01\x00\x0f\xf8"
		.ascii  "\xf8\x0f\x0f\xfe\x24\x0f\x0f\x0f"
		.ascii  "\x25\x22\x27\xfe\xfe\x0f\x0f\xf8"
		.ascii  "\xf8\xf1\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xf6\xf6\x25\x0f\x0f"
		.ascii   "$\"!'"
		.ascii  "\xfe\xf8\xfe\xfe\xf6\xf6\xf3\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x27\xfe"
		.ascii   "'#! \"'"
		.ascii  "\xfe\xf6\xf6\xf6\xf6\xf6\xf3\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x0f\x0f"
		.ascii   "'%$\" "
		.ascii  "\x01\x01\x01\x23\x27\x0f\x0f\xf6"
		.ascii  "\xf5\xf6\xf6\xf1\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\xf8"
		.ascii   "'$\"! "
		.ascii  "\x01\x01\x21\x23\x24\x0f\x0f\x0f"
		.ascii  "\x01\xf8\xf6\xfe\xf1\x2b\x01\x05"
		.ascii  "\x01\x00\x0f"
		.ascii   "'\"##$%%%''"
		.ascii  "\xfe\x0f\x0f\x01\x01\x0f\x0f\x0f"
		.ascii  "\xf3\x2b\x01\x05\x00\x00\x27\x23"
		.ascii  "\x24\xfe\x26\xf6\xfe\x0f\xfe\x0f"
		.ascii  "\xfe\xfe\x0f\xfe\xfe\x01\x0f\x0f"
		.ascii  "\xf4\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\x00\x23\x25\x27\xf8\x24\xf8"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xfe\x01\x0f\x0f\xf4\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03\x00"
		.ascii   "\"'%$&"
		.ascii  "\xf8\xf8\xf6\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xf4\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\x00"
		.ascii   "!$\"&"
		.ascii  "\xf8\xfe\xf8\xf8\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xf3\xf3\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\xf4\xf1\xfc"
		.ascii  "\xf3\xfc\xf4\xf3\xfc\xf3\xf4\xf3"
		.ascii  "\xf4\xf3\xf3\xf3\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\x27\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6"
		.ascii   "%%%%"
		.ascii  "\xf1\xf2\x03\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x03\xf1\xf5\xf3\xf5\xf8\xf8"
		.ascii  "\xf6\xf5\xf6"
		.ascii   "&%%'%%'"
		.ascii  "\xf5\xf6\xf1\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\xf2\xf5\xfb\xf3\xf6"
		.ascii  "\xf8\xf8"
		.ascii   "'%%'"
		.ascii  "\xf5\x25\x25\x26\xfd\xf5\xf6\xf8"
		.ascii  "\xf3\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xf2\xf5\xfd\xf4\xf6\xf8\xf8"
		.ascii  "\x25\x27\xf8\xf6\xf7\x25\x26\x27"
		.ascii  "\xf7\xf8\xf6\xf8\xf3\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x01\xf2\xf6\xf5"
		.ascii  "\xf5\xf8\xf8\xf7\x25\xf8\xf8\xfe"
		.ascii  "\x25\x25\x27\xf6\xf6\xf8\xf8\xf8"
		.ascii  "\xf8\xf4\x2b\x01\x05\x01\xf2\xf6"
		.ascii  "\xf8\xf8\xf6\xfd\xfd\x25\xf8\xf8"
		.ascii   "%%%'"
		.ascii  "\xf6\xf7\xf6\xf7\xf8\xf8\xf5\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf8\xf8\xf6"
		.ascii  "\xf7\x27\xf6"
		.ascii   "'%%%%'"
		.ascii  "\xf6\xf7\xf5\xf7\xf8\xf8\xf6\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf8\xf8"
		.ascii   "'%%%%%%%%'"
		.ascii  "\xf8\xf8\xf5\xf7\xf8\xf8\xf8\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5"
		.ascii   "'%%%%%%%%&"
		.ascii  "\xf8\xfe\xf8\x04\xf5\xf6\xf8\x07"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6"
		.ascii   "'%%%%%%&''"
		.ascii  "\xf7\xf8\xf8\x04\x04\xf6\xf8\x07"
		.ascii  "\x07\x2b\x01\x05\x00\xf1\x27\x25"
		.ascii  "\x25\xf7\x26\xfd\xf7\xf8\xf6\xf8"
		.ascii  "\xf6\xf6\xf8\xf6\xf6\x04\xf8\xf8"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xfc\x25\x25\x27\xf5\x25\xf5"
		.ascii  "\xf5\xf6\xf8\xf8\xf8\xf8\xf6\xf6"
		.ascii  "\xf6\x04\xf8\x07\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03\xf1"
		.ascii   "%'%%&"
		.ascii  "\xf5\xf5\xfd\xf6\xf8\xf6\xf6\xf6"
		.ascii  "\xf6\xf8\xf8\x07\x07\x02\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xf1"
		.ascii   "%%%&"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xa
		.ascii  "\x25\x21\x25\x00\x0f\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\x00\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\x27\x27\x0f\x24"
		.ascii  "\x01\x01"
		.string "%&$$"
		.ascii  "\x03\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\x00\x0f\xf6\xf8\x0f"
		.ascii   "'%\"$%!"
		.ascii  "\x01\x23\x25\x22\x01\x21\x21\x00"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\xf6"
		.ascii   "%#\"$%&%#%'#!"
		.ascii  "\x01\x22\x23\x22\x0f\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\x00\x0f\x23"
		.ascii  "\x24\x26\x0f\x0f"
		.ascii   "''$!\"#!"
		.ascii  "\x01"
		.ascii   "\"\"#$"
		.ascii  "\xf8\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x24\x25\x0f\x0f"
		.ascii   "'''\" !"
		.ascii  "\x01\x01"
		.ascii   "!#$$&"
		.ascii  "\xf8\xf1\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x0f\x0f"
		.ascii   "%'''%\"! "
		.ascii  "\x01\x01"
		.ascii   "\"$&%'"
		.ascii  "\xf6\xf3\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x0f\x25\xfe"
		.ascii   "'&%#\"!#\" $&''&"
		.ascii  "\xf6\xf3\x2b\x01\x05\x01\x00\x0f"
		.ascii   "&#''$#\"\"#$'\"&%"
		.ascii  "\xf6\xf5\x27\xf6\xf1\x2b\x01\x05"
		.ascii  "\x01\x00"
		.ascii   "'$&'#\"!!#$&&$%"
		.ascii  "\x01\x01\x26\xf6\xfe\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x26\xf8\x24\x23\x21"
		.ascii  "\x01"
		.ascii   " \"$&'$&'%"
		.ascii  "\x01\x27\x0f\x0f\xf3\x2b\x01\x05"
		.ascii  "\x00\x00"
		.ascii   "%$\" "
		.ascii  "\x01"
		.ascii   " \"$%%#''%"
		.ascii  "\x01\x27\x0f\x0f\xf4\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\x00"
		.ascii   "&\"!!#$$#\"#$&&'"
		.ascii  "\x01\x01\x0f\x0f\xf4\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03"
		.ascii   "'$\"!  \"\"\"#%''"
		.ascii  "\xfe\xfe\xfe\x0f\x0f\xf4\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x04\x02"
		.ascii   "&$!  \"$%&''"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xf3\xf3\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\xf4"
		.ascii  "\xf1\xfc\xf3\xfc\xf4\xf3\xfc\xf3"
		.ascii  "\xf4\xf3\xf4\xf3\xf3\xf3\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\x25\x25\x25\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\x27\x27\xf6"
		.ascii   "%%%%&%%"
		.ascii  "\xf2\x03\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1\xf5\xf3\xf5\xf8"
		.ascii   "'%%%%%%%%%%%%"
		.ascii  "\xf1\x02\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xf2\xf5\xfb"
		.ascii   "%%%%%&%%%'%%%%%%"
		.ascii  "\xf3\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x00\xf2\xf5\x25\x25\x26\xf8\xf8"
		.ascii   "''%%%%%%%%%%"
		.ascii  "\xf3\x01\x00\x00\x00\x2b\x01\x05"
		.ascii  "\x01\xf2\xf6\x25\x25\xf8\xf8"
		.ascii   "'''%%%%%%%%%&"
		.ascii  "\xf8\xf4\x2b\x01\x05\x01\xf2\xf6"
		.ascii  "\xf8\xf8"
		.ascii   "%'''%%%%%%%%&%'"
		.ascii  "\xf8\xf5\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf8\x25\xf6"
		.ascii   "'&%%%%%%%%&''&"
		.ascii  "\xf8\xf6\x2b\x01\x05\x01\xf1\xf6"
		.ascii   "&%''%%%%%%'%&%"
		.ascii  "\xf5\xf7\x27\xf8\xf8\x2b\x01\x05"
		.ascii  "\x01\xf1"
		.ascii   "'%&'%%%%%%&&%%"
		.ascii  "\x04\x04\x26\xf6\xf8\x07\x2b\x01"
		.ascii  "\x05\x01\xf1\x26\xf5"
		.ascii   "%%%%%%%&'%&'%"
		.ascii  "\x04\x27\xf8\x07\x07\x2b\x01\x05"
		.ascii  "\x00\xf1"
		.ascii   "%%%%%%%%%%%''%"
		.ascii  "\x04\x27\xf8\xf8\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\xfc"
		.ascii   "&%%%%%%%%%%&&'"
		.ascii  "\x04\x04\xf8\x07\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03"
		.ascii   "'%%%%%%%%%%''"
		.ascii  "\xf6\xf6\xf8\xf8\x07\x07\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x04\x02"
		.ascii   "&%%%%%%%&''"
		.ascii  "\xf8\xf8\xf8\xf8\x07\x07\x07\x03"
		.ascii  "\x00\x00\x00\x2c\x01\x03\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0x7
		.ascii  "\x36"
		.fill   0x6
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\x37\x35\x37\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\x37\x33\x37\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe"
		.ascii   "7651567"
		.ascii  "\x0f\x0f\xf8\xf6\xf8\xfe\xf8\x0f"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\xf6\xf6"
		.ascii   "754313567"
		.ascii  "\x0f\xfe\xfe\x0f\xf8\xf8\xf8\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\xf8"
		.ascii   "76420002467"
		.ascii  "\xfe\xfe\x0f\x0f\xf8\xf8\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x0f"
		.ascii   "7530"
		.ascii  "\x01\x01\x01"
		.ascii   "0357"
		.ascii  "\xfe\xf8\xfe\xfe\xf6\xf6\xf3\x2b"
		.ascii  "\x01\x05\x01\x00\x0f"
		.ascii   "64110"
		.ascii  "\x01\x01\x01"
		.ascii   "01145"
		.ascii  "\xf6\xf6\xf6\xf6\xf6\xf3\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\x0f"
		.ascii   "7530"
		.ascii  "\x01\x01\x01"
		.ascii   "0357"
		.ascii  "\x0f\x0f\xf6\xf5\xf6\xf6\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8"
		.ascii   "76420002467"
		.ascii  "\x0f\x0f\x01\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe"
		.ascii   "754313457"
		.ascii  "\x0f\x0f\x01\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe"
		.ascii   "7651567"
		.ascii  "\xfe\x0f\xfe\xfe\x01\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\x37"
		.ascii  "\x33\x37\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\x37\x35\x37\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\x36"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\x36\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\x37\x35\x37\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\x37\x35"
		.ascii  "\x37\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6"
		.ascii   "7655567"
		.ascii  "\xf8\xf8\xf5\xfd\xf5\xf6\xf8\xf3"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xf2\xf5\xfd\xf4"
		.ascii   "755555567"
		.ascii  "\xf8\xf6\xf7\xf8\xf6\xf8\xf3\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x01\xf2"
		.ascii  "\xf6\xf5"
		.ascii   "76555555567"
		.ascii  "\xf6\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8"
		.ascii   "75555555557"
		.ascii  "\xf6\xf7\xf6\xf7\xf8\xf8\xf5\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6"
		.ascii   "6555555555555"
		.ascii  "\xf7\xf5\xf7\xf8\xf8\xf6\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf8"
		.ascii   "75555555557"
		.ascii  "\xf8\xf8\xf5\xf7\xf8\xf8\xf8\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5"
		.ascii   "76555555567"
		.ascii  "\xfe\xf8\x04\xf5\xf6\xf8\x07\x2b"
		.ascii  "\x01\x05\x01\xf1\xf6\xf5\xf7"
		.ascii   "755555557"
		.ascii  "\xf8\xf8\x04\x04\xf6\xf8\x07\x07"
		.ascii  "\x2b\x01\x05\x00\xf1\xf6\xf8\xf8"
		.ascii  "\xf7"
		.ascii   "7655567"
		.ascii  "\xf6\xf8\xf6\xf6\x04\xf8\xf8\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xfc\xf6\xf8\xf8\xf5\xfd\xf5\x37"
		.ascii  "\x35\x37\xf8\xf8\xf8\xf6\xf6\xf6"
		.ascii  "\x04\xf8\x07\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\xf1\xf6\xf8\xf7"
		.ascii  "\xf3\xf5\xf5\x37\x35\x37\xf8\xf6"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\x07\x07\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\xf1"
		.ascii  "\xf6\x07\xf6\xf5\xf5\xf5\xf6\x36"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x07\x07"
		.ascii  "\x07\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0x7
		.ascii  "\x37"
		.fill   0x6
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x37\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x37\x37\xfe\x0f\x37\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\x36\x37"
		.ascii  "\x0f\xfe"
		.ascii   "675777"
		.ascii  "\xf8\x37\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6"
		.ascii   "7575"
		.ascii  "\x0f\x0f\x36\xfe\xf8\x35\x32\xf8"
		.ascii  "\xf6\xf8\xfe\xf8\x0f\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii   "77747"
		.ascii  "\xfe"
		.ascii   "7475"
		.ascii  "\x02\x35\xfe\xfe\x0f\xf8\xf8\xf8"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x01"
		.ascii  "\x00\x37\x37\xf8\x0f"
		.ascii   "72442444"
		.ascii  "\x0f\x36\xfe\x0f\x0f\xf8\xf8\xf1"
		.ascii  "\x2b\x01\x05\x01\x00\x0f\x0f"
		.ascii   "756311"
		.ascii  "\x01\x31\x34\x37\x0f\x37\x37\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x37\x35\x32\x02\x34\x34\x32"
		.ascii  "\x01\x01\x01"
		.ascii   "2456577"
		.ascii  "\xf6\xf6\xf3\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x37\x0f\x36\x0f\x36\x34\x31"
		.ascii  "\x01\x31\x34\x35\x0f\x0f\x37\xf6"
		.ascii  "\xf5\xf6\xf6\xf1\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\xf8"
		.ascii   "7654142433"
		.ascii  "\x0f\x36\x01\x01\xf8\xf6\xfe\xf1"
		.ascii  "\x2b\x01\x05\x01\x00\x0f\xf8\xfe"
		.ascii  "\xfe"
		.ascii   "4357474157"
		.ascii  "\x0f\x01\x0f\x0f\x0f\xf3\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\x0f\x0f\x34\x37"
		.ascii  "\x35\xfe\x0f\x36\x0f\xfe\x34\x02"
		.ascii  "\x35\x01\x0f\x0f\x0f\xf4\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x36\xf8\xf6\xf8"
		.ascii   "67576"
		.ascii  "\x0f\x36\x34\x01\x01\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\x00\x0f\x0f\xfe\xf6\xf8\xf8\x37"
		.ascii  "\xf6\x37\x0f\xfe\x37\xfe\xfe\x36"
		.ascii  "\x0f\x0f\xf4\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\x00\x0f\xf8\xf8\xf6"
		.ascii  "\xf8\xfe\xf8\xf8\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xf3\xf3\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\xf4\xf1\xfc"
		.ascii  "\xf3\xfc\xf4\xf3\xfc\xf3\xf4\xf3"
		.ascii  "\xf4\xf3\xf3\xf3\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\x37\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\x37"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\x37\x37\xf6"
		.ascii  "\xf6\x37\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\x36\x37\xf8\xf6"
		.ascii   "675777"
		.ascii  "\xf5\x37\xf5\xf5\xf6\xf1\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfb"
		.ascii   "7575"
		.ascii  "\xf8\xf8\x36\xf6\xf5\x35\x35\xf5"
		.ascii  "\xfd\xf5\xf6\xf8\xf3\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii   "77757"
		.ascii  "\xf6"
		.ascii   "757555"
		.ascii  "\xf6\xf7\xf8\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\xf2\x37"
		.ascii  "\x37\xf5\xf8"
		.ascii   "75555555"
		.ascii  "\xf8\x36\xf6\xf8\xf8\xf8\xf8\xf4"
		.ascii  "\x2b\x01\x05\x01\xf2\xf6\xf8"
		.ascii   "7565555557"
		.ascii  "\xf8\x37\x37\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1"
		.ascii   "75555555555556577"
		.ascii  "\xf8\xf8\xf6\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\x37\xf8\x36\xf8"
		.ascii   "6555555"
		.ascii  "\xf8\xf8\x37\xf5\xf7\xf8\xf8\xf8"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf5"
		.ascii   "7655555555"
		.ascii  "\xf8\x36\x04\x04\xf5\xf6\xf8\x07"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf5\xf7"
		.ascii  "\xf7"
		.ascii   "5557575557"
		.ascii  "\xf8\x04\xf6\xf8\x07\x07\x2b\x01"
		.ascii  "\x05\x00\xf1\xf6\xf8\xf8\x35\x37"
		.ascii  "\x35\xf7\xf8\x36\xf8\xf6\x35\x35"
		.ascii  "\x35\x04\xf8\xf8\xf8\x07\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xfc\xf6"
		.ascii  "\xf8\x36\xf5\xfd\xf5"
		.ascii   "67576"
		.ascii  "\xf8\x36\x35\x04\x04\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\xf8\xf7\xf3\xf5\xf5\x37"
		.ascii  "\xfd\x37\xf8\xf6\x37\xf6\xf6\x36"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x07\xf6\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xc
		.ascii  "\x37\x00\x0f\x05\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\x00\x0f\x0f\x0f\x0f"
		.ascii  "\x0f"
		.ascii   "7544577"
		.ascii  "\xfe\x37\x0f\x00\x00\x03\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x03\x00\x0f\xf6"
		.ascii  "\x37\x0f"
		.ascii   "642HH247"
		.ascii  "\xf8\x35\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\x36\xf6"
		.ascii   "642HHHHH475"
		.ascii  "\xf6\xf8\xfe\xf8\x0f\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\x00\x37\x34"
		.ascii  "\xf6"
		.ascii   "64II22HH257"
		.ascii  "\xfe\x0f\xf8\xf8\xf8\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x01\x00\x35\x37"
		.ascii  "\xf8"
		.ascii   "7644542H25"
		.ascii  "\xfe\x37\x0f\x0f\xf8\xf8\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x36\x0f\x37\x35"
		.ascii  "\xf6"
		.ascii   "7742HI47"
		.ascii  "\xfe\xf8\xfe\xfe\xf6\xf6\xf3\x2b"
		.ascii  "\x01\x05\x01\x00\x37\x37\x36\xfe"
		.ascii   "75JIHI56"
		.ascii  "\x0f\x37\xf6\xf6\xf6\xf6\xf6\xf3"
		.ascii  "\x2b\x01\x05\x01\x00\x0f\x37\x0f"
		.ascii   "7NKK3457"
		.ascii  "\x0f\x0f\x35\x0f\xf6\xf5\xf6\xf6"
		.ascii  "\xf1\x2b\x01\x05\x01\x00\x0f\xf8"
		.ascii   "NMLL77677"
		.ascii  "\x0f\x36\x0f\x0f\x01\xf8\xf6\xfe"
		.ascii  "\xf1\x2b\x01\x05\x01\x00\x0f\xf8"
		.ascii   "LMN7"
		.ascii  "\x0f\x0f\x37\xfe\xfe\x37\x0f\x0f"
		.ascii  "\x01\x01\x0f\x0f\x0f\xf3\x2b\x01"
		.ascii  "\x05\x00\x00\x0f"
		.ascii   "OMLO"
		.ascii  "\xf6\xfe\x0f\xfe\x0f\xfe\xfe\x0f"
		.ascii  "\xfe\xfe\x01\x0f\x0f\xf4\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00"
		.ascii   "OMOMO"
		.ascii  "\xf8\xf8\xfe\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x01\x0f\x0f\xf4\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x04\x03\x00"
		.ascii   "KLMO"
		.ascii  "\xf8\xf8\xf8\xf6\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\xfe\xfe\x0f\x0f\xf4\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x04\x02\x00\x4e"
		.ascii  "\x4f\xf8\xf6\xf8\xfe\xf8\xf8\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\xf3\xf3"
		.ascii  "\x03\x00\x00\x00\x2c\x01\x03\x03"
		.ascii  "\xf4\xf1\xfc\xf3\xfc\xf4\xf3\xfc"
		.ascii  "\xf3\xf4\xf3\xf4\xf3\xf3\xf3\x05"
		.fill   0x11
		.ascii  "\x16\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\x37\xfc\xf1\x04\x00\x00"
		.ascii  "\x00\x2c\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6"
		.ascii   "7555577"
		.ascii  "\xf6\x37\xf5\xf1\xf2\x02\x00\x00"
		.ascii  "\x00\x2c\x01\x04\x03\xf1\xf5\xf3"
		.ascii  "\x37\xf8"
		.ascii   "65544557"
		.ascii  "\xf5\x35\xf5\xf5\xf6\xf1\x01\x00"
		.ascii  "\x00\x00\x2c\x01\x05\x00\xf2\xf5"
		.ascii  "\x36\xf3"
		.ascii   "65544444575"
		.ascii  "\xfd\xf5\xf6\xf8\xf3\x2c\x01\x05"
		.ascii  "\x00\xf2\x37\x34\xf4"
		.ascii   "65445544557"
		.ascii  "\xf7\xf8\xf6\xf8\xf3\x2c\x01\x05"
		.ascii  "\x00\xf2\x35\x37\xf5"
		.ascii   "7655665455"
		.ascii  "\xf6\x37\xf8\xf8\xf8\xf8\x2c\x01"
		.ascii  "\x05\x00\xf2\x36\xf8\x37\x35\xfd"
		.ascii   "77554457"
		.ascii  "\xf6\xf7\xf6\xf7\xf8\xf8\x2c\x01"
		.ascii  "\x05\x00\xf1\x37\x37\x36\xf6"
		.ascii   "75444456"
		.ascii  "\xf8\x37\xf7\xf5\xf7\xf8\xf8\x2c"
		.ascii  "\x01\x05\x00\xf1\xf6\x37\xf8"
		.ascii   "7NKK5557"
		.ascii  "\xf8\xf8\x35\xf8\xf5\xf7\xf8\xf8"
		.ascii  "\x2c\x01\x05\x00\xf1\xf6\xf5"
		.ascii   "NMLL77677"
		.ascii  "\xf8\x36\xfe\xf8\x04\xf5\xf6\xf8"
		.ascii  "\x2c\x01\x05\x00\xf1\xf6\xf5"
		.ascii   "LMN7"
		.ascii  "\xf8\xf8\x37\xf7\xf7\x37\xf8\xf8"
		.ascii  "\x04\x04\xf6\xf8\x07\x2c\x01\x05"
		.ascii  "\x00\xf1\xf6"
		.ascii   "OMLO"
		.ascii  "\xfd\xf7\xf8\xf6\xf8\xf6\xf6\xf8"
		.ascii  "\xf6\xf6\x04\xf8\xf8\x07\x2c\x01"
		.ascii  "\x05\x00\xfc"
		.ascii   "OMOMO"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf6"
		.ascii  "\xf6\xf6\x04\xf8\x07\x07\x2c\x01"
		.ascii  "\x04\x03\xf1"
		.ascii   "KLMO"
		.ascii  "\xf5\xf5\xf5\xfd\xf6\xf8\xf6\xf6"
		.ascii  "\xf6\xf6\xf8\xf8\x07\x07\x01\x00"
		.ascii  "\x00\x00\x2c\x01\x04\x02\xf1\x4e"
		.ascii  "\x4f\xf6\xf5\xf5\xf5\xf6\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\x07\x07\x07"
		.ascii  "\x02\x00\x00\x00\x2d\x01\x03\x03"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x04"
		.fill   0x27
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0x4
		.ascii  "\x37\x37"
		.fill   0x6
		.ascii  "\x37\x00\x0f\x05\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\x00\x0f\x0f\x0f\x36"
		.ascii  "\x0f\x35\xfe"
		.ascii   "7777647"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6"
		.ascii   "747654212474"
		.ascii  "\xf6\xf8\xfe\x00\x02\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\xf6"
		.ascii   "6377421HH135"
		.ascii  "\xf6\xf8\xfe\xf8\x0f\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii   "7525321H1HH2477"
		.ascii  "\xf8\xf8\xf8\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x01\x00"
		.ascii   "77311111H21HH256"
		.ascii  "\x0f\xf8\xf8\xf1\x2b\x01\x05\x01"
		.ascii  "\x00"
		.ascii   "531H1HH11321HH257"
		.ascii  "\xf6\xf6\xf3\x2b\x01\x05\x01\x00"
		.ascii   "752HHH12321HHH147"
		.ascii  "\xf6\xf6\xf3\x2b\x01\x05\x01\x00"
		.ascii  "\x0f"
		.ascii   "642123211HH11457"
		.ascii  "\xf6\xf6\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f"
		.ascii   "7531HHHHHH134"
		.ascii  "\x01\x01\xf8\xf6\xfe\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8"
		.ascii   "6KHHH1114326"
		.ascii  "\x0f\x01\x0f\x0f\x0f\xf3\x2b\x01"
		.ascii  "\x05\x00\x00\x0f"
		.ascii   "NKII11135473"
		.ascii  "\xfe\x01\x0f\x0f\x0f\xf4\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00"
		.ascii   "OLKKN742575"
		.ascii  "\x0f\x36\x34\x01\x01\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\x00\x4d\x4c\x4e\xf6\xf8\xf8"
		.ascii   "7747"
		.ascii  "\xfe\x36\xfe\x37\xfe\x0f\x0f\xf4"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x04\x02"
		.ascii  "\x00\x4f\xf8\xf8\xf6\xf8\xfe\xf8"
		.ascii  "\xf8\x0f\x36\x35\x37\xfe\xfe\x0f"
		.ascii  "\xf3\xf3\x03\x00\x00\x00\x2c\x01"
		.ascii  "\x03\x03\xf4\xf1\xfc\xf3\xfc\xf4"
		.ascii  "\xf3\xfc\xf3\xf4\xf3\xf4\xf3\xf3"
		.ascii  "\xf3\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\x37\x37\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\x37\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\x36\xf6\x35\xf6"
		.ascii   "7777657"
		.ascii  "\xf5\xf1\xf2\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\xf1\xf5\xf3"
		.ascii   "757655555675"
		.ascii  "\xf5\xf5\xf6\xf1\x02\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xf2\xf5\xfb"
		.ascii   "657755544555"
		.ascii  "\xfd\xf5\xf6\xf8\xf3\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii   "755555535435577"
		.ascii  "\xf6\xf8\xf3\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x01\xf2"
		.ascii   "7755555445543556"
		.ascii  "\xf8\xf8\xf8\xf4\x2b\x01\x05\x01"
		.ascii  "\xf2"
		.ascii   "55545435555534557"
		.ascii  "\xf8\xf8\xf5\x2b\x01\x05\x01\xf1"
		.ascii   "75543455555434557"
		.ascii  "\xf8\xf8\xf6\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6"
		.ascii   "6555555553455557"
		.ascii  "\xf8\xf8\xf8\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6"
		.ascii   "7555433334555"
		.ascii  "\x04\x04\xf5\xf6\xf8\x07\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf5"
		.ascii   "6K4445555556"
		.ascii  "\xf8\x04\xf6\xf8\x07\x07\x2b\x01"
		.ascii  "\x05\x00\xf1\xf6"
		.ascii   "NKII55555575"
		.ascii  "\xf6\x04\xf8\xf8\xf8\x07\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xfc"
		.ascii   "OLKKN755575"
		.ascii  "\xf8\x36\x35\x04\x04\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\x4d\x4c\x4e\xf3\xf5\xf5"
		.ascii   "7757"
		.ascii  "\xf6\x36\xf6\x37\xf8\xf8\x07\x07"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x04\x02"
		.ascii  "\xf1\x4f\x07\xf6\xf5\xf5\xf5\xf6"
		.ascii  "\xf8\xf8\x36\x35\x37\xf8\xf8\x07"
		.ascii  "\x07\x07\x03\x00\x00\x00\x2c\x01"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\x07\x03\x04\x07\x07\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x07\x07\x07\x07\x05"
		.ascii  "\x07\x07\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\x07\x07"
		.ascii  "\x07\x07\x07\x07\x03\x07\x07\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\x07\x07\x07\x07\x06\x06\x04"
		.ascii  "\x07\x07\x07\x07\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x07\x07\x07\x06\x05\x03"
		.ascii  "\x05\x06\x07\x07\x07\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x07\x07\x07\x06\x03"
		.ascii  "\x01\x03\x06\x07\x07\x07\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x07\x07\x07\x06"
		.ascii  "\x05\x03\x05\x04\x05\x07\x07\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x07\x07\x06"
		.ascii  "\x04\x03\x06\x06\x07\x07\x06\x07"
		.ascii  "\x0f\x0f\x01\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\x07"
		.ascii  "\x04\x06\x07\x07\x07\x07\x07\x07"
		.ascii  "\x0f\x0f\x01\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\x02\x07\x07\x07\x07\x07\x07"
		.ascii  "\xfe\x0f\xfe\xfe\x01\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\x07\x07"
		.ascii  "\x07\x07\x07\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\x07\x05\x05"
		.ascii  "\x07\x07\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\x07"
		.ascii  "\x07\x07\x07\x05\x07\x07\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\x07\x07\x07\x07\x07\x07"
		.ascii  "\x05\x07\x07\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\xf5\x07\x07\x07"
		.ascii  "\x07\x06\x06\x05\x07\x07\x07\x07"
		.ascii  "\xf6\xf6\xf8\xf8\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf8\x07\x07"
		.ascii  "\x07\x06\x05\x05\x05\x06\x07\x07"
		.ascii  "\x07\xf6\xf7\xf6\xf7\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\x07"
		.ascii  "\x07\x07\x06\x05\x05\x05\x06\x07"
		.ascii  "\x07\x07\xf6\xf7\xf5\xf7\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\x07\x07\x07\x06\x05\x05\x05\x05"
		.ascii  "\x05\x07\x07\xf8\xf8\xf5\xf7\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\x07\x07\x06\x05\x05\x06\x06"
		.ascii  "\x07\x07\x06\x07\xfe\xf8\x04\xf5"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf7\x07\x05\x06\x07\x07"
		.ascii  "\x07\x07\x07\x07\xf8\xf8\x04\x04"
		.ascii  "\xf6\xf8\x07\x07\x2b\x01\x05\x00"
		.ascii  "\xf1\xf6\xf8\xf8\xf7\x05\x07\x07"
		.ascii  "\x07\x07\x07\x07\xf6\xf8\xf6\xf6"
		.ascii  "\x04\xf8\xf8\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\xfc\xf6\xf8\xf8"
		.ascii  "\xf5\xfd\x07\x07\x07\x07\x07\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\x04\xf8\x07\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\xf6\xf8\xf7\xf3\xf5\xf5\xf5"
		.ascii  "\xfd\xf6\xf8\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\x07\x07\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x02\xf1\xf6\x07\xf6\xf5"
		.ascii  "\xf5\xf5\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x07\x07\x07\x03\x00\x00"
		.ascii  "\x00\x2c\x01\x03\x03\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x06\x05\x06\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x07\xf6\xf8\x06"
		.ascii  "\x04\x03\x05\x07\x07\x07\x07\x07"
		.ascii  "\xf8\x06\x06\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x07"
		.ascii  "\xf6\xf6\xfe\x06\x05\x02\x05\x06"
		.ascii  "\x06\x06\x05\x06\xf8\xf6\x07\xfe"
		.ascii  "\xf8\x0f\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\x06\xf6\x07\x07"
		.ascii  "\x02\x04\x05\x05\x05\x05\x06\x07"
		.ascii  "\xfe\x07\x0f\xf8\xf8\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x07\x06\x07\x07\x03\x02\x04\x03"
		.ascii  "\x04\x05\x06\x07\x07\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x05\x06\x06\x05\x03\x01"
		.ascii  "\x01\x03\x05\x02\x04\x05\x07\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x07\x04\x02\x04\x02"
		.ascii  "\x01\x02\x04\x02\x06\x07\xfe\x05"
		.ascii  "\x05\xf6\x05\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x07\x07\x05\x03"
		.ascii  "\x01\x02\x03\x05\x06\x07\x07\x07"
		.ascii  "\x06\x07\x05\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x07\x06\x06"
		.ascii  "\x04\x03\x04\x05\x06\x07\x07\x07"
		.ascii  "\x06\x01\x01\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\x07\x06"
		.ascii  "\x05\x05\x06\x06\x06\x07\x06\x07"
		.ascii  "\x0f\x0f\x0f\x01\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x06\x04"
		.ascii  "\x05\x06\x06\x06\x07\x07\x07\x07"
		.ascii  "\x06\x0f\xfe\x01\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x05\x06\x07\x07\x07\x07"
		.ascii  "\x07\x07\x04\x0f\x06\xfe\xfe\x01"
		.ascii  "\x01\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x05\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\x07\x0f\x05"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x04\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x18\x00\x00\x00\x04\x02\xfc\xf5"
		.ascii  "\xf5\x06\x05\x06\xf5\xf6\xf6\xf6"
		.ascii  "\xf6\xf6\xf5\xf6\xf6\xf5\xf1\xf2"
		.ascii  "\x03\x00\x00\x00\x2b\x01\x04\x03"
		.ascii  "\xf1\x07\xf3\xf5\x06\x05\x05\x05"
		.ascii  "\x07\x07\x07\x07\x07\xf5\x06\x06"
		.ascii  "\xf5\xf6\xf1\x02\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\xf2\x07\xfb\xf3\xf6"
		.ascii  "\x06\x05\x05\x05\x06\x06\x06\x05"
		.ascii  "\x06\xf5\xfd\x07\xf6\xf8\xf3\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x00\xf2"
		.ascii  "\xf5\x06\xf4\x07\x07\x05\x05\x05"
		.ascii  "\x05\x05\x05\x06\x07\xf6\x07\xf8"
		.ascii  "\xf6\xf8\xf3\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\x07\x06\x07"
		.ascii  "\x07\x05\x05\x05\x05\x05\x05\x06"
		.ascii  "\x07\x07\xf6\xf8\xf8\xf8\xf8\xf4"
		.ascii  "\x2b\x01\x05\x01\xf2\xf6\xf8\x05"
		.ascii  "\x06\x06\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x07\xf6\xf7\xf8\xf8"
		.ascii  "\xf5\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\x07\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x06\x07\xf6\x05\x05\xf7\x05"
		.ascii  "\xf8\xf6\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf8\x07\x07\x05\x05\x05\x05\x05"
		.ascii  "\x05\x06\x07\x07\x07\x06\x07\x05"
		.ascii  "\xf8\xf8\xf8\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\x07\x06\x06\x05\x05\x05"
		.ascii  "\x05\x06\x07\x07\x07\x06\x04\x04"
		.ascii  "\xf5\xf6\xf8\x07\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf5\x07\x06\x05\x05\x06"
		.ascii  "\x06\x06\x07\x06\x07\xf8\xf8\xf8"
		.ascii  "\x04\xf6\xf8\x07\x07\x2b\x01\x05"
		.ascii  "\x00\xf1\xf6\x06\x05\x05\x06\x06"
		.ascii  "\x06\x07\x07\x07\x07\x06\xf8\xf6"
		.ascii  "\x04\xf8\xf8\xf8\x07\x01\x00\x00"
		.ascii  "\x00\x2b\x01\x05\x00\xfc\xf6\x05"
		.ascii  "\x06\x07\x07\x07\x07\x07\x07\x05"
		.ascii  "\xf8\x06\xf6\xf6\x04\x04\xf8\x07"
		.ascii  "\x07\x01\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x03\xf1\x05\xf8\xf7\xf3\xf5\xf5"
		.ascii  "\xf5\xfd\x07\xf8\x05\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\x07\x07\x02\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x02\xf1\x05\x07\xf6"
		.ascii  "\xf5\xf5\xf5\xf6\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x07\x07\x07\x03\x00"
		.ascii  "\x00\x00\x2c\x01\x03\x03\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x05"
		.fill   0x28
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\x01\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x01\x01"
		.ascii  "\x01\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\x01\x01\x01\x01\x01\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x07\x01"
		.ascii  "\x07\x07\x07\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\x01\x01"
		.ascii  "\x01\x01\x01\xfe\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\x01\xfe"
		.ascii  "\x07\x07\x07\x07\x01\x0f\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x01\x0f"
		.ascii  "\x07\xfe\x0f\x0f\x0f\x0f\x01\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\x01"
		.ascii  "\x07\xfe\x0f\x0f\xfe\x0f\x0f\x01"
		.ascii  "\x07\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\x01\x0f\x0f\x0f\xfe\xfe\x01"
		.ascii  "\x0f\x07\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xf6\x01\x01\x01\x01\x01"
		.ascii  "\xfe\x07\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\x07\x07\x07\x07\x07\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\x00\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\x00\x00\x00\xf5\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8"
		.fill   0x5
		.ascii  "\xf8\xf8\xf6\xf7\xf8\xf6\xf8\xf3"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x01"
		.ascii  "\xf2\xf6\xf5\xf5\xf8\xf8\xf7\xf2"
		.ascii  "\xf2\x00\xf2\xf2\xf8\xf8\xf6\xf6"
		.ascii  "\xf8\xf8\xf8\xf8\xf4\x2b\x01\x05"
		.ascii  "\x01\xf2\xf6\xf8\xf8\xf6\xfd\xfd"
		.fill   0x5
		.ascii  "\xf6\xf8\xf6\xf7\xf6\xf7\xf8\xf8"
		.ascii  "\xf5\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\xf8\xf6\xf7\x00\xf2\xf2\xf2\xf2"
		.ascii  "\xf2\x00\xf8\xf6\xf7\xf5\xf7\xf8"
		.ascii  "\xf8\xf6\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf8\xf8\xf6\x00\xf2\xf5\xf7\xf8"
		.ascii  "\xfe\xf8\xf2\x00\xf8\xf8\xf5\xf7"
		.ascii  "\xf8\xf8\xf8\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6\xf5\xf6\xf8\x00\xf6\xf7\xf8"
		.ascii  "\xf8\xf6\xf8\xf8\x00\xfe\xf8\xf7"
		.ascii  "\xf5\xf6\xf8\x07\x2b\x01\x05\x01"
		.ascii  "\xf1\xf6\xf5\xf7\xf7\xf2\x00\xf8"
		.ascii  "\xf8\xf8\xf7\xf7\x00\xf2\xf8\xf8"
		.ascii  "\xf8\xf6\xf8\x07\x07\x2b\x01\x05"
		.ascii  "\x00\xf1\xf6\xf8\xf8\xf7\xf3\xf2"
		.fill   0x5
		.ascii  "\xf2\xf8\xf6\xf6\xf8\xf8\xf8\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xfc\xf6\xf8\xf8\xf5\xfd\xf5\xf2"
		.ascii  "\xf2\xf2\xf2\xf2\xf8\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\x07\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\xf1\xf6\xf8\xf7"
		.ascii  "\xf3\xf5\xf5\xf5\xfd\xf6\xf8\xf6"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\x07\x07\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\xf1"
		.ascii  "\xf6\x07\xf6\xf5\xf5\xf5\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x07\x07"
		.ascii  "\x07\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x05"
		.fill   0x11
data_75774:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\x01\x01\x01\x0f\xfe\xf8\x0f\x0f"
		.ascii  "\x0f\x01\x01\x01\xfe\xfe\x01\x01"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x01\x01\x07\xf6\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x01\x01\x07\xf8\xfe"
		.ascii  "\x01\x07\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x01\x01\x07\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x01\x01\x07\xf6"
		.ascii  "\xf6\x01\x07\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x01\x01\x07\x0f"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x01\x01\x07"
		.ascii  "\x0f\xf6\x01\x07\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\x01\x01\x07"
		.ascii  "\xfe\xfe\x0f\x01\xfe\x0f\x0f\x01"
		.ascii  "\x07\x0f\x01\xf8\x07\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x07\xfe\xfe"
		.ascii  "\x0f\x01\x01\x0f\x07\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\xfe"
		.ascii  "\xfe\x0f\xfe\x07\x07\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
data_75922:
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf6\xf5\xf6"
		.ascii  "\xf6\xf6\xf7\xf8\xf5\xf4\xf5\xf5"
		.ascii  "\xf6\xf1\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\xf2\xf5\xfb\xf3\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf5\xf8\xf8"
		.ascii  "\xf5\xfd\xf5\xf6\xf8\xf3\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\xf2\xf5"
		.ascii  "\xfd\xf4\xf6\xf8\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf7\xf8\xf8\xf6\xf7\xf8\xf6"
		.ascii  "\xf8\xf3\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x01\xf2\xf6\x00\x00\x00\xf8"
		.ascii  "\xf7\xf5\xf8\xf8\xfe\x00\x00\x00"
		.ascii  "\xf6\xf6\x00\x00\xf8\xf8\xf4\x2b"
		.ascii  "\x01\x05\x01\xf2\xf6\xf2\x00\x00"
		.ascii  "\xfd\xfd\xf6\xf8\xf8\xf8\xf2\x00"
		.ascii  "\x00\xf6\xf7\xf2\x00\xf8\xf8\xf5"
		.ascii  "\x2b\x01\x05\x01\xf1\xf6\xf8\x00"
		.ascii  "\x00\xf7\xf5\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x00\x00\xf6\xf7\xf5\x00\xf8\xf8"
		.ascii  "\xf6\x2b\x01\x05\x01\xf1\xf6\xf8"
		.ascii  "\x00\x00\xf8\xf8\xf5\xf7\xf8\xfe"
		.ascii  "\xf8\x00\x00\xf8\xf8\xf5\x00\xf8"
		.ascii  "\xf8\xf8\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\x00\x00\xf7\xf6\xf7\xf8\x00"
		.ascii  "\xf6\xf8\xf2\x00\xfe\xf8\x00\xf2"
		.ascii  "\xf6\xf8\x07\x2b\x01\x05\x01\xf1"
		.ascii  "\xf6"
		.fill   0x8
		.ascii  "\xf7\xf7\xf7\xf2\x00\x00\xf2\xf6"
		.ascii  "\xf8\x07\x07\x2b\x01\x05\x00\xf1"
		.ascii  "\xf6\xf2\xf2\xf2\xf2\xf2\xf2\xf2"
		.ascii  "\xf2\xf8\xf6\xf6\xf8\xf2\xf2\xf8"
		.ascii  "\xf8\xf8\x07\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\xfc\xf6\xf8\xf8\xf5"
		.ascii  "\xfd\xf5\xf5\xf6\xf8\xf8\xf8\xf8"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\x07\x07\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf6\xf8\xf7\xf3\xf5\xf5\xf5\xfd"
		.ascii  "\xf6\xf8\xf6\xf6\xf6\xf6\xf8\xf8"
		.ascii  "\x07\x07\x02\x00\x00\x00\x2b\x01"
		.ascii  "\x04\x02\xf1\xf6\x07\xf6\xf5\xf5"
		.ascii  "\xf5\xf6\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\x07\x07\x07\x03\x00\x00\x00"
		.ascii  "\x2c\x01\x03\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xfe\xfe\x0f\xf8\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\x0f\x01\x01\x01\x01\x01\x0f"
		.ascii  "\x0f\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x01\x07\x07\x07"
		.ascii  "\x07\x07\x01\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x01"
		.ascii  "\x07\xfe\x07\x07\x07\x07\x07\x01"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x01\x0f\x07\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x01\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x01\x07\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x01\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\x07\x01\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x01\x07\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\xfe\x07"
		.ascii  "\x01\x01\x01\x01\x01\x0f\x07\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\xfe"
		.ascii  "\xf6\x0f\xfe\x01\xfe\xfe\x07\x0f"
		.ascii  "\x07\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x07\x07\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xfe\xfe\x07\x01\x07\x07"
		.ascii  "\x07\xfe\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf8\xf8\xf8"
		.ascii  "\x07\x01\x0f\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\x07\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
		.ascii  "\x1a\x00\x01\x00\x03\x03\xf2\xf1"
		.ascii  "\xfc\xfc\xfc\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\xf2\xfc\xfc\xf1\x05\x00\x00"
		.ascii  "\x00\x2b\x01\x04\x02\xfc\xf5\xf5"
		.ascii  "\xf5\xf5\xf6\xf5\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xf5\xf6\xf6\xf5\xf1\xf2\x03"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x03\xf1"
		.ascii  "\xf5\xf3\xf5\xf8\xf8\xf7"
		.fill   0x5
		.ascii  "\xf8\xf8\xf4\xf5\xf5\xf6\xf1\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x00\xf2"
		.ascii  "\xf5\xfb\xf3\xf6\xfd\x00\xf2\xf2"
		.ascii  "\xf2\xf2\xf2\x00\xf8\xf5\xfd\xf5"
		.ascii  "\xf6\xf8\xf3\x01\x00\x00\x00\x2b"
		.ascii  "\x01\x05\x00\xf2\xf5\xfd\xf4\xf6"
		.ascii  "\x00\xf2\xf8\xf8\xf8\xf8\xf8\xf2"
		.ascii  "\x00\xf6\xf7\xf8\xf6\xf8\xf3\x01"
		.ascii  "\x00\x00\x00\x2b\x01\x05\x01\xf2"
		.ascii  "\xf6\xf5\xf5\xf8\x00\xf6\xf5\xf7"
		.ascii  "\xf8\xfe\xf8\xf8\x00\xf6\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf4\x2b\x01\x05\x01"
		.ascii  "\xf2\xf6\xf8\xf8\xf6\x00\xf6\xf7"
		.ascii  "\xf8\xf8\xf6\xf8\xf8\x00\xf6\xf7"
		.ascii  "\xf6\xf7\xf8\xf8\xf5\x2b\x01\x05"
		.ascii  "\x01\xf1\xf6\xf8\xf8\xf6\xf2\x00"
		.ascii  "\xf8\xf8\xf8\xf7\xf7\x00\xf2\xf6"
		.ascii  "\xf7\xf5\xf7\xf8\xf8\xf6\x2b\x01"
		.ascii  "\x05\x01\xf1\xf6\xf8\xf8\xf6\xf3"
		.ascii  "\xf2"
		.fill   0x5
		.ascii  "\xf2\xf8\xf8\xf8\xf5\xf7\xf8\xf8"
		.ascii  "\xf8\x2b\x01\x05\x01\xf1\xf6\xf5"
		.ascii  "\xf6\xf8\xfd\xf5\xf2\xf2\x00\xf2"
		.ascii  "\xf2\xf8\xf6\xfe\xf8\xf7\xf5\xf6"
		.ascii  "\xf8\x07\x2b\x01\x05\x01\xf1\xf6"
		.ascii  "\xf5\xf7\xf7\xf3"
		.fill   0x7
		.ascii  "\xf8\xf8\xf8\xf8\xf6\xf8\x07\x07"
		.ascii  "\x2b\x01\x05\x00\xf1\xf6\xf8\xf8"
		.ascii  "\xf7\xfd\xf2\xf2\xf2\x00\xf2\xf2"
		.ascii  "\xf2\xf6\xf6\xf6\xf8\xf8\xf8\x07"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\xfc\xf6\xf8\xf8\xf5\xf5\xf5\xf5"
		.ascii  "\xfd\x00\xf8\xf6\xf6\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\x07\x07\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\xf1\xf6\xf8\xf7"
		.ascii  "\xf3\xf5\xf5\xf6\xf8\xf2\xf8\xf8"
		.ascii  "\xf8\xf8\xf6\xf8\xf8\x07\x07\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\xf1"
		.ascii  "\xf6\x07\xf6\xf5\xf5\xf5\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x07\x07"
		.ascii  "\x07\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x05"
		.fill   0x11
data_75e2c:
		.ascii  "\x16\x00\x00\x00\x04\x00\xfe"
		.fill   0xe
		.ascii  "\x0f\x04\x00\x00\x00\x2c\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x02\x00\x00\x00\x2c"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x01\x00"
		.ascii  "\x00\x00\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x0f\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xfe\x0f\xf8"
		.ascii  "\xf8\xf8\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xf6\xf6\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\xf8\xfe\xfe"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\xf6\xf6\xf6"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\x0f\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xf6\xf5"
		.ascii  "\xf6\xf6\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\xfe\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\xf8\xf8"
		.ascii  "\xf6\xfe\x2c\x01\x05\x00\x00\x0f"
		.ascii  "\xf8\xfe\xfe\xf6\xf6\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x2c\x01\x04\x03\x00\x0f"
		.ascii  "\x0f\x0f\xfe\xf6\xf6\xfe\x0f\xfe"
		.ascii  "\x0f\xfe\xfe\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x01\x00\x00\x00\x2c\x01\x04"
		.ascii  "\x03\x00\x0f\x0f\x0f\xf8\xf6\xf8"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x01\x00\x00\x00"
		.ascii  "\x2c\x01\x04\x02\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\x02\x00"
		.ascii  "\x00\x00\x2c\x01\x04\x00\x00\x0f"
		.ascii  "\xf8\xf8\xf6\xf8\xfe\xf8\xf8\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\x04"
		.fill   0x3a
data_75fda:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\x14\xfe\xfe\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x0f\x0f\x14\x14"
		.ascii  "\x14\xf8\x0f\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\x14\x14\x14\x14\x14\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x0f\xfe\xf8\x07\x14"
		.ascii  "\x07\x07\x07\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\x14\x14"
		.ascii  "\x14\x14\x14\xfe\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\xfe\x15\xfe"
		.ascii  "\x07\x07\x07\x07\x15\x0f\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\x15\x0f"
		.ascii  "\x07\xfe\x0f\x0f\x0f\x0f\x15\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\x15"
		.ascii  "\x07\xfe\x0f\x0f\xfe\x0f\x0f\x15"
		.ascii  "\x07\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\x15\x0f\x0f\x0f\xfe\xfe\x15"
		.ascii  "\x0f\x07\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xf6\x15\x15\x15\x15\x15"
		.ascii  "\xfe\x07\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\x07\x07\x07\x07\x07\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\xf6\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
data_76188:
		.ascii  "\x1a\x00\x01\x00\x03\x03"
		.fill   0xe
		.ascii  "\x0f\x05\x00\x00\x00\x2b\x01\x04"
		.ascii  "\x02\x00\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xfe\xfe\x0f\xf8\xfe"
		.ascii  "\x0f\x00\x00\x03\x00\x00\x00\x2b"
		.ascii  "\x01\x04\x03\x00\x0f\xf6\xf8\x0f"
		.ascii  "\x0f\x0f\x14\x14\x14\x14\x14\x0f"
		.ascii  "\x0f\xf6\xf6\xf8\xfe\x00\x02\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x00\x00\x0f"
		.ascii  "\xf6\xf6\xfe\x0f\x14\x07\x07\x07"
		.ascii  "\x07\x07\x14\x0f\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\x07\x01\x00\x00\x00\x2b\x01"
		.ascii  "\x05\x00\x00\x0f\xf6\xf6\xfe\x14"
		.ascii  "\x07\xfe\x07\x07\x07\x07\x07\x14"
		.ascii  "\xfe\xfe\x0f\xf8\x07\xf8\x01\x00"
		.ascii  "\x00\x00\x2b\x01\x05\x01\x00\x0f"
		.ascii  "\xf8\xf8\x0f\x14\x0f\x07\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x14\xfe\xfe\x0f\x0f"
		.ascii  "\x07\xf8\xf1\x2b\x01\x05\x01\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x14\x07\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x14\xfe\xf8\xfe"
		.ascii  "\xfe\xf6\xf6\xf3\x2b\x01\x05\x01"
		.ascii  "\x00\x0f\x0f\x0f\xfe\x07\x14\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x14\x07\xfe\xf6"
		.ascii  "\xf6\xf6\xf6\xf6\xf3\x2b\x01\x05"
		.ascii  "\x01\x00\x0f\x0f\x0f\xfe\xfe\x07"
		.ascii  "\x15\x15\x15\x15\x15\x0f\x07\x0f"
		.ascii  "\x0f\xf6\xf5\xf6\xf6\xf1\x2b\x01"
		.ascii  "\x05\x01\x00\x0f\xf8\xfe\x0f\xfe"
		.ascii  "\xf6\x0f\xfe\x15\xfe\xfe\x07\x0f"
		.ascii  "\x07\x0f\xf8\xf8\xf6\xfe\xf1\x2b"
		.ascii  "\x01\x05\x01\x00\x0f\xf8\xfe\xfe"
		.ascii  "\xf6\x15\x15\x15\x15\x15\x15\x15"
		.ascii  "\x07\x07\x0f\x0f\x0f\x0f\x0f\xf3"
		.ascii  "\x2b\x01\x05\x00\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xfe\xfe\x07\x15\x07\x07"
		.ascii  "\x07\xfe\xfe\xfe\x0f\x0f\x0f\xf4"
		.ascii  "\x01\x00\x00\x00\x2b\x01\x05\x00"
		.ascii  "\x00\x0f\x0f\x0f\xf8\xf8\xf8\xf8"
		.ascii  "\x07\x15\x0f\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf4\x01\x00\x00\x00"
		.ascii  "\x2b\x01\x04\x03\x00\x0f\x0f\xfe"
		.ascii  "\xf6\xf8\xf8\xf8\x07\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xf4\x02"
		.ascii  "\x00\x00\x00\x2b\x01\x04\x02\x00"
		.ascii  "\x0f\xf8\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xfe\x0f\xf3"
		.ascii  "\xf3\x03\x00\x00\x00\x2c\x01\x03"
		.ascii  "\x03\xf4\xf1\xfc\xf3\xfc\xf4\xf3"
		.ascii  "\xfc\xf3\xf4\xf3\xf4\xf3\xf3\xf3"
		.ascii  "\x05"
		.fill   0x11
data_76336:
		.ascii  "\x13\x00\x05\x00\x03\x00"
		.ascii   "------------"
		.ascii  "\x05\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "-+******++,,,,,---"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x05\x00"
		.ascii   "-+)(()*+,,----------"
		.ascii  "\x01\x00\x00\x00\x2a\x01\x05\x02"
		.ascii   "--,+))*,--------------*"
		.ascii  "\x01\x05\x02"
		.ascii   "---,++,+--------------*"
		.ascii  "\x01\x05\x02"
		.ascii   "--,,,,+*,+*********+--*"
		.ascii  "\x01\x05\x02"
		.ascii   "-,*+++((+*))))))))))+-*"
		.ascii  "\x01\x05\x02"
		.ascii   "--,,,,+*,++++++++++,--*"
		.ascii  "\x01\x05\x02"
		.ascii   "------,+--------------*"
		.ascii  "\x01\x05\x02"
		.ascii   "-------,------------,-+"
		.ascii  "\x01\x05\x00"
		.ascii   "----------------,,,-"
		.ascii  "\x01\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "---,,,,,,,,,,,,---"
		.ascii  "\x02\x00\x00\x00\x2f\x01\x03\x00"
		.ascii   "------------"
		.ascii  "\x05"
		.fill   0x15
		.ascii  "\x13\x00\x05\x00\x03\x00"
		.ascii   "%%%%%%%%%%%%"
		.ascii  "\x05\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "%#\"\"\"\"\"\"##$$$$$%%%"
		.ascii  "\x02\x00\x00\x00\x2b\x01\x05\x00"
		.ascii   "%#!  !\"#$\"\"%##\"%%%%%"
		.ascii  "\x01\x00\x00\x00\x2a\x01\x05\x02"
		.ascii   "%%$#!!\"!%#  \"\"!#%%%%%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%%$##$% !    \"#%%%%%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%%%%%%#!     \"%%%%%%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%$$##\"!      !\"##$$%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%%%%%%#     !#%%%%%%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%%%%%%\"    ! \"%%%%%%%*"
		.ascii  "\x01\x05\x02"
		.ascii   "%%%%%%#!\"#  #\"!#%%%%$%+"
		.ascii  "\x01\x05\x00"
		.ascii   "%%%%%\"#%%\"\"%%#\"%$$$%"
		.ascii  "\x01\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "%%%$$$$$$$$$$$$%%%"
		.ascii  "\x02\x00\x00\x00\x2f\x01\x03\x00"
		.ascii   "%%%%%%%%%%%%"
		.ascii  "\x05"
		.fill   0x15
		.ascii  "\x13\x00\x05\x00\x03\x00"
		.ascii   "============"
		.ascii  "\x05\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "=;::::::;;<<<<<==="
		.ascii  "\x02\x00\x00\x00\x2b\x01\x05\x00"
		.ascii   "=;9889:;<<=======;:="
		.ascii  "\x01\x00\x00\x00\x2a\x01\x05\x02"
		.ascii   "==<;99:<========<;::<=*"
		.ascii  "\x01\x05\x02"
		.ascii   "===<;;<=<<;;;<=;:<;:<=*"
		.ascii  "\x01\x05\x02"
		.ascii   "=======<;999:;;<:;=;==*"
		.ascii  "\x01\x05\x02"
		.ascii   "======<;999:;;:<;==<==*"
		.ascii  "\x01\x05\x02"
		.ascii   "=====<;:99999:;<<=====*"
		.ascii  "\x01\x05\x02"
		.ascii   "=====<;::9999;;;<=====*"
		.ascii  "\x01\x05\x02"
		.ascii   "======<<;:::;;;<====<=+"
		.ascii  "\x01\x05\x00"
		.ascii   "=======<<<<<<===<<<="
		.ascii  "\x01\x00\x00\x00\x2c\x01\x04\x02"
		.ascii   "===<<<<<<<<<<<<==="
		.ascii  "\x02\x00\x00\x00\x2f\x01\x03\x00"
		.ascii   "============"
		.ascii  "\x05"
		.fill   0x15
data_76750:
		.ascii  "\x13\x00\x05\x00\x03\x00\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x00\x00\x00\x2c\x01"
		.ascii  "\x04\x02\x05\x03\x02\x02\x02\x02"
		.ascii  "\x02\x03\x03\x03\x04\x04\x04\x04"
		.ascii  "\x04\x05\x05\x05\x02\x00\x00\x00"
		.ascii  "\x2b\x01\x05\x00\x05\x03\x02\x01"
		.ascii  "\x01\x02\x03\x03\x04\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x01\x00\x00\x00\x2a\x01\x05\x02"
		.ascii  "\x05\x05\x04\x03\x02\x02\x03\x04"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x2a\x01"
		.ascii  "\x05\x02\x05\x05\x05\x04\x04\x02"
		.ascii  "\x02\x02\x02\x04\x05\x05\x02\x02"
		.ascii  "\x05\x04\x02\x02\x05\x05\x05\x05"
		.ascii  "\x2a\x01\x05\x02\x05\x05\x05\x05"
		.ascii  "\x02\x02\x04\x04\x02\x02\x05\x05"
		.ascii  "\x02\x02\x04\x02\x02\x04\x05\x05"
		.ascii  "\x05\x05\x2a\x01\x05\x02\x05\x05"
		.ascii  "\x05\x05\x02\x02\x05\x05\x02\x02"
		.ascii  "\x05\x05\x02\x02\x02\x02\x04\x05"
		.ascii  "\x05\x05\x05\x05\x2a\x01\x05\x02"
		.ascii  "\x05\x05\x05\x05\x02\x02\x04\x04"
		.ascii  "\x02\x02\x05\x05\x02\x02\x04\x02"
		.ascii  "\x02\x04\x05\x05\x05\x05\x2a\x01"
		.ascii  "\x05\x02\x05\x05\x05\x05\x04\x02"
		.ascii  "\x02\x02\x02\x04\x05\x05\x02\x02"
		.ascii  "\x05\x04\x02\x02\x05\x05\x05\x05"
		.ascii  "\x2a\x01\x05\x02\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x04\x05\x2b\x01\x05\x00\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x05\x01\x00\x00\x00\x2c\x01"
		.ascii  "\x04\x02\x05\x05\x05\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x05\x05\x05\x02\x00\x00\x00"
		.ascii  "\x2f\x01\x03\x00\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05"
		.fill   0x15
data_768ae:
		.ascii  "\x1e"
data_768af:
		.ascii  "\x14"
data_768b0:
		.ascii  "\x1e"
data_768b1:
		.ascii  "\x14"
data_768b2:
		.ascii  "\x64"
data_768b3:
		.ascii  "\x00"
data_768b4:
		.ascii  "\x02"
data_768b5:
		.ascii  "\x00"
data_768b6:
		.ascii  "\x00"
data_768b7:
		.ascii  "\x00"
data_768b8:
		.ascii  "\x00"
data_768b9:
		.ascii  "\x00"
data_768ba:
		.ascii  "\x00"
data_768bb:
		.ascii  "\x00"
data_768bc:
		.ascii  "\x00"
data_768bd:
		.ascii  "\x00"
data_768be:
		.ascii  "\x00"
data_768bf:
		.ascii  "\x00"
		.ascii   "7(2<"
		.ascii  "\xc8\x00\x04"
		.fill   0x64
		.ascii  "\x01"
		.fill   0x10
		.ascii  "\x01\x32\x28\x00\x32\x00\x00\x00"
		.ascii  "\x04"
		.fill   0x2e
		.ascii  "\x01\x00\x00\x23\x00\x28"
		.fill   0xd
		.ascii  "\x1e\x00\x32\x00\x28"
		.fill   0xd
		.ascii  "\x23\x19\x32\x00\x64"
		.fill   0xc
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01\x19\x00\x14"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x9
		.ascii  "\x32\x00\x32\x3c\xc8\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x8
		.ascii  "\x32"
		.fill   0x12
		.ascii  "\x0a\x00\x19\x00\x50"
		.fill   0xd
		.ascii  "\x23\x00\x2d\x00\x64\x00\x00\x00"
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x1e\x2d\x00\x37\x00\xc8\x00\x00"
		.ascii  "\x00\x03"
		.fill   0x8
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01\x0a\x00\x19\x00\x3c"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x8
		.ascii  "\x14\x00\x23\x00\x64"
		.fill   0x4
		.ascii  "\x02"
		.fill   0x8
		.ascii  "\x1e\x00\x3c\x00\x78"
		.fill   0x4
		.ascii  "\x03"
		.fill   0x19
		.ascii  "\x01\x00\x1e\x00\x00\x00\x50"
		.fill   0xd
		.ascii  "\x32\x00\x00\x00\x78"
		.fill   0x4
		.ascii  "\x01\x01\x01"
		.fill   0x6
		.ascii  "\x32\x00\x00\x00\x78"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x5
		.ascii  "\x02\x00\x00\x32\x00\x00\x00\x78"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x00\x00\x32\x00\x00\x00\x78"
		.fill   0x6
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x32"
		.ascii  "\x00\x00\x00\x96"
		.fill   0x4
		.ascii  "\x02\x02\x02"
		.fill   0x28
		.ascii  "\x01\x00\x19"
		.fill   0xb
		.ascii  "\x01"
		.fill   0x5
		.ascii  "\x2d\x00\x00\x00\x64"
		.fill   0x7
		.ascii  "\x01\x01"
		.fill   0x4
		.ascii  "\x32\x00\x00\x00\x64"
		.fill   0x8
		.ascii  "\x01\x00\x00\x32\x00\x3c\x00\x1e"
		.ascii  "\x00\x96"
		.fill   0x7
		.ascii  "\x02\x01\x00\x00\x32"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x35
		.ascii  "\x01"
		.fill   0x11
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x11
		.ascii  "\x46"
		.fill   0x23
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
		.fill   0x23
		.ascii  "\x1e"
		.fill   0x11
		.ascii  "\x32"
data_76d1c:
		.fill   0x4
		.ascii  "\x07"
		.fill   0x7
		.ascii  "\x0f\x00\x13\x00\x00\x00\x01\x00"
		.ascii  "\x10\x00\x14\x00\x09\x00\x02\x00"
		.ascii  "\x11\x00\x15\x00\x1a"
		.fill   0x5
		.ascii  "\x22\x00\x1b\x00\x1d\x00\x00\x00"
		.ascii  "\x23\x00\x1c\x00\x1e\x00\x25\x00"
		.ascii  "\x24\x00\x20\x00\x1f\x00\x00\x00"
		.ascii  "\x26"
		.fill   0x5
		.ascii  "\x0b\x00\x16\x00\x0c"
		.fill   0x5
		.ascii  "\x17\x00\x0d"
		.fill   0x5
		.ascii  "\x18\x00\x0e\x00\x00\x00\x08\x00"
		.ascii  "\x19"
		.fill   0x5
		.ascii  "\x2a"
		.fill   0x7
		.ascii  "\x2b"
		.fill   0x7
		.ascii  "\x2c"
		.fill   0xf
		.ascii  "\x27"
		.fill   0x7
		.ascii  "\x28"
		.fill   0x7
		.ascii  "\x29"
		.fill   0xf
		.ascii  "\x2d"
		.fill   0x7
		.ascii  "\x2e"
		.fill   0x7
		.ascii  "\x2f"
		.fill   0xf
		.ascii  "\x3a"
		.fill   0x7
		.ascii  "\x3b"
		.fill   0x7
		.ascii  "\x3c"
		.fill   0xf
		.ascii  "\x3d"
		.fill   0x7
		.ascii  "\x3e"
		.fill   0x7
		.ascii  "\x3f"
		.fill   0xd
		.ascii  "\x07\x00\x0b"
		.fill   0x7
		.ascii  "\x0c"
		.fill   0x5
		.ascii  "\x01\x00\x0d\x00\x00\x00\x09\x00"
		.ascii  "\x02\x00\x0e\x00\x08"
		.fill   0xd
		.ascii  "\x0f\x00\x13"
		.fill   0x5
		.ascii  "\x10\x00\x14"
		.fill   0x5
		.ascii  "\x11\x00\x15"
		.fill   0x7
		.ascii  "\x16"
		.fill   0x7
		.ascii  "\x17"
		.fill   0x7
		.ascii  "\x18"
		.fill   0x7
		.ascii  "\x19\x00\x1a"
		.fill   0x5
		.ascii  "\x22\x00\x1b\x00\x1d\x00\x00\x00"
		.ascii  "\x23\x00\x1c\x00\x1e\x00\x25\x00"
		.ascii  "\x24\x00\x20\x00\x1f\x00\x00\x00"
		.ascii  "\x26"
		.fill   0x5
		.ascii  "\x30"
		.fill   0x7
		.ascii  "\x31"
		.fill   0x17
		.ascii  "\x32"
		.fill   0x7
		.ascii  "\x33"
		.fill   0x17
		.ascii  "\x36"
		.fill   0x7
		.ascii  "\x37"
		.fill   0x7
		.ascii  "\x38"
		.fill   0x7
		.ascii  "\x39\x00\x00\x00"
data_76efc:
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4c\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x02\x00\x05"
		.fill   0x9
		.ascii  "\x08\x00\x09\x00\x0b\x00\x00\x00"
		.ascii  "\x0d\x00\x0f\x00\x11\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x00\x00"
		.ascii  "\x1e\x00\x20\x00\x22\x00\x25\x00"
		.ascii  "\x28\x00\x2b\x00\x2d\x00\x2f\x00"
		.ascii  "\x31\x00\x33\x00\x34\x00\x38\x00"
		.ascii  "\x36\x00\x3a\x00\x00\x00\x3d\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x46\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x88\x00\x88\x00\x88\x00\x88\x00"
		.ascii  "\x88\x00\x88\x00\x88\x00\x88\x00"
		.ascii  "\x88\x00\x88\x00\x88\x00\x88\x00"
		.ascii  "\x88\x00\x88\x00\x89\x00\x89\x00"
		.ascii  "\x89\x00\x89\x00\x89\x00\x89\x00"
		.ascii  "\x89\x00\x8a\x00\x8a\x00\x8a\x00"
		.ascii  "\x8a\x00\x8b\x00\x8b\x00\x8b\x00"
		.ascii  "\x8b\x00\x8b\x00\x8b\x00\x8b\x00"
		.ascii  "\x8b\x00\x8b\x00\x8b\x00\x8b\x00"
		.ascii  "\x8b\x00\x8b\x00\x8b\x00\x8b\x00"
		.ascii  "\x8b\x00\x8b\x00\x8b\x00\x8b"
		.fill   0x11
		.ascii  "\x8b"
		.fill   0x15
		.ascii  "\x8d\x00\x8d\x00\x8d\x00\x8d\x00"
		.ascii  "\x8d\x00\x8d\x00\x8d\x00\x8d\x00"
		.ascii  "\x8d\x00\x8d\x00\x8d\x00\x8d\x00"
		.ascii  "\x8d\x00\x8d\x00\x8e\x00\x8e\x00"
		.ascii  "\x8e\x00\x8e\x00\x8e\x00\x8e\x00"
		.ascii  "\x8e\x00\x8f\x00\x8f\x00\x8f\x00"
		.ascii  "\x8f\x00\x90\x00\x90\x00\x90\x00"
		.ascii  "\x90\x00\x90\x00\x90\x00\x90\x00"
		.ascii  "\x90\x00\x90\x00\x90\x00\x90\x00"
		.ascii  "\x90\x00\x90\x00\x90\x00\x90\x00"
		.ascii  "\x90\x00\x90\x00\x90\x00\x90"
		.fill   0x11
		.ascii  "\x90"
		.fill   0x15
		.ascii  "\x92\x00\x92\x00\x92\x00\x92\x00"
		.ascii  "\x92\x00\x92\x00\x92\x00\x92\x00"
		.ascii  "\x92\x00\x92\x00\x92\x00\x92\x00"
		.ascii  "\x92\x00\x92\x00\x93\x00\x93\x00"
		.ascii  "\x93\x00\x93\x00\x93\x00\x93\x00"
		.ascii  "\x93\x00\x94\x00\x94\x00\x94\x00"
		.ascii  "\x94\x00\x95\x00\x95\x00\x95\x00"
		.ascii  "\x95\x00\x95\x00\x95\x00\x95\x00"
		.ascii  "\x95\x00\x95\x00\x95\x00\x95\x00"
		.ascii  "\x95\x00\x95\x00\x95\x00\x95\x00"
		.ascii  "\x95\x00\x95\x00\x95\x00\x95"
		.fill   0x11
		.ascii  "\x95"
		.fill   0x15
		.ascii  "\x97\x00\x97\x00\x97\x00\x96\x00"
		.ascii  "\x97\x00\x97\x00\x97\x00\x97\x00"
		.ascii  "\x97\x00\x97\x00\x97\x00\x97\x00"
		.ascii  "\x97\x00\x97\x00\x98\x00\x98\x00"
		.ascii  "\x98\x00\x98\x00\x98\x00\x98\x00"
		.ascii  "\x98\x00\x99\x00\x99\x00\x99\x00"
		.ascii  "\x99\x00\x9a\x00\x9a\x00\x9a\x00"
		.ascii  "\x9a\x00\x9a\x00\x9a\x00\x9a\x00"
		.ascii  "\x9a\x00\x9a\x00\x9a\x00\x9a\x00"
		.ascii  "\x9a\x00\x9a\x00\x9a\x00\x9a\x00"
		.ascii  "\x9a\x00\x9a\x00\x9a\x00\x9a"
		.fill   0x11
		.ascii  "\x9a"
		.fill   0x15
		.ascii  "\x9b\x00\x9b\x00\x9b\x00\x9b\x00"
		.ascii  "\x9b\x00\x9b\x00\x9b\x00\x9b\x00"
		.ascii  "\x9b\x00\x9b\x00\x9b\x00\x9b\x00"
		.ascii  "\x9b\x00\x9b\x00\x9c\x00\x9c\x00"
		.ascii  "\x9c\x00\x9c\x00\x9c\x00\x9c\x00"
		.ascii  "\x9c\x00\x9d\x00\x9d\x00\x9d\x00"
		.ascii  "\x9d\x00\x9e\x00\x9e\x00\x9e\x00"
		.ascii  "\x9e\x00\x9e\x00\x9e\x00\x9e\x00"
		.ascii  "\x9e\x00\x9e\x00\x9e\x00\x9e\x00"
		.ascii  "\x9e\x00\x9e\x00\x9e\x00\x9e\x00"
		.ascii  "\x9e\x00\x9e\x00\x9e\x00\x9e"
		.fill   0x11
		.ascii  "\x9e"
		.fill   0x15
		.ascii  "\x9f\x00\x9f\x00\x9f\x00\x9f\x00"
		.ascii  "\x9f\x00\x9f\x00\x9f\x00\x9f\x00"
		.ascii  "\x9f\x00\x9f\x00\x9f\x00\x9f\x00"
		.ascii  "\x9f\x00\x9f\x00\xa0\x00\xa0\x00"
		.ascii  "\xa0\x00\xa0\x00\xa0\x00\xa0\x00"
		.ascii  "\xa0\x00\xa1\x00\xa1\x00\xa1\x00"
		.ascii  "\xa1\x00\xa2\x00\xa2\x00\xa2\x00"
		.ascii  "\xa2\x00\xa2\x00\xa2\x00\xa2\x00"
		.ascii  "\xa2\x00\xa2\x00\xa2\x00\xa2\x00"
		.ascii  "\xa2\x00\xa2\x00\xa2\x00\xa2\x00"
		.ascii  "\xa2\x00\xa2\x00\xa2\x00\xa2"
		.fill   0x11
		.ascii  "\xa2"
		.fill   0x15
		.ascii  "\xa3\x00\xa3\x00\xa3\x00\xa3\x00"
		.ascii  "\xa3\x00\xa3\x00\xa3\x00\xa3\x00"
		.ascii  "\xa3\x00\xa3\x00\xa3\x00\xa3\x00"
		.ascii  "\xa3\x00\xa3\x00\xa4\x00\xa4\x00"
		.ascii  "\xa4\x00\xa4\x00\xa4\x00\xa4\x00"
		.ascii  "\xa4\x00\xa5\x00\xa5\x00\xa5\x00"
		.ascii  "\xa5\x00\xa6\x00\xa6\x00\xa6\x00"
		.ascii  "\xa6\x00\xa6\x00\xa6\x00\xa6\x00"
		.ascii  "\xa6\x00\xa6\x00\xa6\x00\xa6\x00"
		.ascii  "\xa6\x00\xa6\x00\xa6\x00\xa6\x00"
		.ascii  "\xa6\x00\xa6\x00\xa6\x00\xa6"
		.fill   0x11
		.ascii  "\xa6"
		.fill   0x15
		.ascii  "\xa7\x00\xa7\x00\xa7\x00\xa7\x00"
		.ascii  "\xa7\x00\xa7\x00\xa7\x00\xa7\x00"
		.ascii  "\xa7\x00\xa7\x00\xa7\x00\xa7\x00"
		.ascii  "\xa7\x00\xa7\x00\xa8\x00\xa8\x00"
		.ascii  "\xa8\x00\xa8\x00\xa8\x00\xa8\x00"
		.ascii  "\xa8\x00\xa9\x00\xa9\x00\xa9\x00"
		.ascii  "\xa9\x00\xaa\x00\xaa\x00\xaa\x00"
		.ascii  "\xaa\x00\xaa\x00\xaa\x00\xaa\x00"
		.ascii  "\xaa\x00\xaa\x00\xaa\x00\xaa\x00"
		.ascii  "\xaa\x00\xaa\x00\xaa\x00\xaa\x00"
		.ascii  "\xaa\x00\xaa\x00\xaa\x00\xaa"
		.fill   0x11
		.ascii  "\xaa"
		.fill   0x15
		.ascii  "\xab\x00\xab\x00\xab\x00\xab\x00"
		.ascii  "\xab\x00\xab\x00\xab\x00\xab\x00"
		.ascii  "\xab\x00\xab\x00\xab\x00\xab\x00"
		.ascii  "\xab\x00\xab\x00\xac\x00\xac\x00"
		.ascii  "\xac\x00\xac\x00\xac\x00\xac\x00"
		.ascii  "\xac\x00\xad\x00\xad\x00\xad\x00"
		.ascii  "\xad\x00\xae\x00\xae\x00\xae\x00"
		.ascii  "\xae\x00\xae\x00\xae\x00\xae\x00"
		.ascii  "\xae\x00\xae\x00\xae\x00\xae\x00"
		.ascii  "\xae\x00\xae\x00\xae\x00\xae\x00"
		.ascii  "\xae\x00\xae\x00\xae\x00\xae"
		.fill   0x11
		.ascii  "\xae"
		.fill   0x15
		.ascii  "\xaf\x00\xaf\x00\xaf\x00\xaf\x00"
		.ascii  "\xaf\x00\xaf\x00\xaf\x00\xaf\x00"
		.ascii  "\xaf\x00\xaf\x00\xaf\x00\xaf\x00"
		.ascii  "\xaf\x00\xaf\x00\xb0\x00\xb0\x00"
		.ascii  "\xb0\x00\xb0\x00\xb0\x00\xb0\x00"
		.ascii  "\xb0\x00\xb1\x00\xb1\x00\xb1\x00"
		.ascii  "\xb1\x00\xb2\x00\xb2\x00\xb2\x00"
		.ascii  "\xb2\x00\xb2\x00\xb2\x00\xb2\x00"
		.ascii  "\xb2\x00\xb2\x00\xb2\x00\xb2\x00"
		.ascii  "\xb2\x00\xb2\x00\xb2\x00\xb2\x00"
		.ascii  "\xb2\x00\xb2\x00\xb2\x00\xb2"
		.fill   0x11
		.ascii  "\xb2"
		.fill   0x15
		.ascii  "\xb3\x00\xb3\x00\xb3\x00\xb3\x00"
		.ascii  "\xb3\x00\xb3\x00\xb3\x00\xb3\x00"
		.ascii  "\xb3\x00\xb3\x00\xb3\x00\xb3\x00"
		.ascii  "\xb3\x00\xb3\x00\xb4\x00\xb4\x00"
		.ascii  "\xb4\x00\xb4\x00\xb4\x00\xb4\x00"
		.ascii  "\xb4\x00\xb5\x00\xb5\x00\xb5\x00"
		.ascii  "\xb5\x00\xb6\x00\xb6\x00\xb6\x00"
		.ascii  "\xb6\x00\xb6\x00\xb6\x00\xb6\x00"
		.ascii  "\xb6\x00\xb6\x00\xb6\x00\xb6\x00"
		.ascii  "\xb6\x00\xb6\x00\xb6\x00\xb6\x00"
		.ascii  "\xb6\x00\xb6\x00\xb6\x00\xb6"
		.fill   0x11
		.ascii  "\xb6"
		.fill   0x15
		.ascii  "\xb7\x00\xb7\x00\xb7\x00\xb7\x00"
		.ascii  "\xb7\x00\xb7\x00\xb7\x00\xb7\x00"
		.ascii  "\xb7\x00\xb7\x00\xb7\x00\xb7\x00"
		.ascii  "\xb7\x00\xb7\x00\xb8\x00\xb8\x00"
		.ascii  "\xb8\x00\xb8\x00\xb8\x00\xb8\x00"
		.ascii  "\xb8\x00\xb9\x00\xb9\x00\xb9\x00"
		.ascii  "\xb9\x00\xba\x00\xba\x00\xba\x00"
		.ascii  "\xba\x00\xba\x00\xba\x00\xba\x00"
		.ascii  "\xba\x00\xba\x00\xba\x00\xba\x00"
		.ascii  "\xba\x00\xba\x00\xba\x00\xba\x00"
		.ascii  "\xba\x00\xba\x00\xba\x00\xba"
		.fill   0x11
		.ascii  "\xba"
		.fill   0x17
		.ascii  "\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f\x00\xbb\x00\xbb"
		.fill   0x5
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f\x00\xdd\x00\xdd"
		.fill   0x5
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\xbc\x00\xbc\x00\xbc\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\xbe\x00"
		.ascii  "\xbe\x00\xbe\x00\xbe\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\xbf\x00"
		.ascii  "\xbf\x00\xbf\x00\xbf\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x01\x00\x05"
		.fill   0x9
		.ascii  "\x08\x00\x09\x00\x0b\x00\x00\x00"
		.ascii  "\x0d\x00\x0f\x00\x11\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x00\x00"
		.ascii  "\x1e\x00\x20\x00\x22\x00\x25\x00"
		.ascii  "\x28\x00\x2b\x00\x2d\x00\xc0\x00"
		.ascii  "\xc0\x00\xc0\x00\xc0\x00\xc0\x00"
		.ascii  "\xc0\x00\xc0\x00\xc0\x00\xc0\x00"
		.ascii  "\xc0\x00\xc0\x00\xc0\x00\xc0\x00"
		.ascii  "\xc0\x00\xc0\x00\xc0\x00\xc0\x00"
		.ascii  "\xc0\x00\xc0\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\xc0\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xc1\x00\xc1\x00\xc1\x00\xc1\x00"
		.ascii  "\xc1\x00\xc1\x00\xc1\x00\xc1\x00"
		.ascii  "\xc1\x00\xc1\x00\xc1\x00\xc1\x00"
		.ascii  "\xc1\x00\xc1\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\xc2\x00"
		.ascii  "\xc2\x00\xc2\x00\xc2\x00\xc2\x00"
		.ascii  "\xc2\x00\xc2\x00\xc2\x00\xc2\x00"
		.ascii  "\xc2\x00\xc2\x00\xc2\x00\xc2\x00"
		.ascii  "\xc2\x00\xc2\x00\xc2\x00\xc2\x00"
		.ascii  "\xc2\x00\xc2\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\xc3\x00\xc3\x00"
		.ascii  "\xc3"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xc4\x00\xc4\x00\xc4\x00\xc4\x00"
		.ascii  "\xc4\x00\xc4\x00\xc4\x00\xc4\x00"
		.ascii  "\xc4\x00\xc4\x00\xc4\x00\xc4\x00"
		.ascii  "\xc4\x00\xc4\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\xc5\x00\xc5\x00\xc5\x00\xc5\x00"
		.ascii  "\xc5\x00\xc5\x00\xc5\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xc6\x00\xc6\x00\xc6\x00\xc6\x00"
		.ascii  "\xc6\x00\xc6\x00\xc6\x00\xc6\x00"
		.ascii  "\xc6\x00\xc6\x00\xc6\x00\xc6\x00"
		.ascii  "\xc6\x00\xc6\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\xc7\x00\xc7\x00"
		.ascii  "\xc7\x00\xc7\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\xc8\x00\xc8\x00"
		.ascii  "\xc8\x00\xc8\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xca\x00\xca\x00\xca\x00\xca\x00"
		.ascii  "\xca\x00\xca\x00\xca\x00\xca\x00"
		.ascii  "\xca\x00\xca\x00\xca\x00\xca\x00"
		.ascii  "\xca\x00\xca\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xc9\x00\xc9\x00\xc9\x00\xc9\x00"
		.ascii  "\xc9\x00\xc9\x00\xc9\x00\xc9\x00"
		.ascii  "\xc9\x00\xc9\x00\xc9\x00\xc9\x00"
		.ascii  "\xc9\x00\xc9\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xcb\x00\xcb\x00\xcb\x00\xcb\x00"
		.ascii  "\xcb\x00\xcb\x00\xcb\x00\xcb\x00"
		.ascii  "\xcb\x00\xcb\x00\xcb\x00\xcb\x00"
		.ascii  "\xcb\x00\xcb\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xcc\x00\xcc\x00\xcc\x00\xcc\x00"
		.ascii  "\xcc\x00\xcc\x00\xcc\x00\xcc\x00"
		.ascii  "\xcc\x00\xcc\x00\xcc\x00\xcc\x00"
		.ascii  "\xcc\x00\xcc\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x01\x00\x05"
		.fill   0x9
		.ascii  "\x08\x00\x09\x00\x0b\x00\x00\x00"
		.ascii  "\x0d\x00\x0f\x00\x11\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x00\x00"
		.ascii  "\x1e\x00\x20\x00\x22\x00\x25\x00"
		.ascii  "\x28\x00\x2b\x00\x2d\x00\xcd\x00"
		.ascii  "\xcd\x00\xcd\x00\xcd\x00\xcd\x00"
		.ascii  "\xcd\x00\xcd\x00\xcd\x00\xcd\x00"
		.ascii  "\xcd\x00\xcd\x00\xcd\x00\xcd\x00"
		.ascii  "\xcd\x00\xcd\x00\xcd\x00\xcd\x00"
		.ascii  "\xcd\x00\xcd\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x5
		.ascii  "\xcf\x00\xcf\x00\x63\x00\x6b\x00"
		.ascii  "\x67\x00\x68\x00\x69\x00\x69\x00"
		.ascii  "\x5d\x00\x5e\x00\x5f\x00\x53\x00"
		.ascii  "\x55\x00\x57\x00\xd1\x00\xd1\x00"
		.ascii  "\xd1\x00\xd1\x00\xd1\x00\xd1\x00"
		.ascii  "\xd1\x00\xd1\x00\xd1\x00\xd1\x00"
		.ascii  "\xd1\x00\xd1\x00\xd1\x00\xd1\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\xd2\x00\xd2\x00\xd2\x00"
		.ascii  "\xd4\x00\xd4\x00\xd4\x00\xd4\x00"
		.ascii  "\xd4\x00\xd4\x00\xd4\x00\xd4\x00"
		.ascii  "\xd4\x00\xd4\x00\xd4\x00\xd4\x00"
		.ascii  "\xd4\x00\xd4\x00\x16\x00\x19\x00"
		.ascii  "\x1c\x00\x00\x00\x1e\x00\x20\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2b\x00"
		.ascii  "\x2d\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3d\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x46\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xd5\x00\xd5\x00\xd5\x00\xd5\x00"
		.ascii  "\xd5\x00\xd5\x00\xd5\x00\xd5\x00"
		.ascii  "\xd5\x00\xd5\x00\xd5\x00\xd5\x00"
		.ascii  "\xd5\x00\xd5\x00\x16\x00\x19\x00"
		.ascii  "\x1c\x00\x00\x00\x1e\x00\x20\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2b\x00"
		.ascii  "\x2d\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3d\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x46\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xd6\x00\xd6\x00\xd6\x00\xd6\x00"
		.ascii  "\xd6\x00\xd6\x00\xd6\x00\xd6\x00"
		.ascii  "\xd6\x00\xd6\x00\xd6\x00\xd6\x00"
		.ascii  "\xd6\x00\xd6\x00\x14\x00\x17\x00"
		.ascii  "\x1a\x00\x00\x00\x1d\x00\x1f\x00"
		.ascii  "\x21\x00\x23\x00\x26\x00\x29\x00"
		.ascii  "\x2c\x00\x2e\x00\x30\x00\x32\x00"
		.ascii  "\x34\x00\x36\x00\x38\x00\x3a\x00"
		.ascii  "\x00\x00\x3c\x00\x3e\x00\x40\x00"
		.ascii  "\x42\x00\x43\x00\x44\x00\x4a\x00"
		.ascii  "\x4b\x00\x50\x00\x51\x00\x52\x00"
		.ascii  "\x4d\x00\x4e\x00\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\xd8\x00\xd8\x00\xd8\x00\xd8\x00"
		.ascii  "\xd8\x00\xd8\x00\xd8\x00\xd8\x00"
		.ascii  "\xd8\x00\xd8\x00\xd8\x00\xd8\x00"
		.ascii  "\xd8\x00\xd8\x00\xd9\x00\xd9\x00"
		.ascii  "\xd9\x00\xd9\x00\xd9\x00\xd9\x00"
		.ascii  "\xd9\x00\xda\x00\xda\x00\xda\x00"
		.ascii  "\xda\x00\xdb\x00\xdb\x00\xdb\x00"
		.ascii  "\xdb\x00\xdb\x00\xdb\x00\xdb\x00"
		.ascii  "\xdb\x00\xdb\x00\xdb\x00\xdb\x00"
		.ascii  "\xdb\x00\xdb\x00\xdb\x00\xdb\x00"
		.ascii  "\xdb\x00\xdb\x00\xdb\x00\xdb"
		.fill   0x11
		.ascii  "\xdb"
		.fill   0x17
		.ascii  "\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\xdc\x00"
		.ascii  "\xdc\x00\xdc\x00\xdc\x00\xdc\x00"
		.ascii  "\xdc\x00\xdc\x00\xdc\x00\xdc\x00"
		.ascii  "\xdc\x00\xdc\x00\xdc\x00\xdc\x00"
		.ascii  "\xdc\x00\xdc\x00\xdc\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x5
		.ascii  "\x65\x00\x65\x00\x63\x00\x6b\x00"
		.ascii  "\x67\x00\x68\x00\x69\x00\x69\x00"
		.ascii  "\x5d\x00\x5e\x00\x5f\x00\x53\x00"
		.ascii  "\x55\x00\x57\x00\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\xce\x00\xce\x00\xce\x00\xce\x00"
		.ascii  "\xce\x00\xce\x00\xce\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x07\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4c\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x01\x00\x05"
		.fill   0x9
		.ascii  "\x08\x00\x09\x00\x0b\x00\x00\x00"
		.ascii  "\x0d\x00\x0f\x00\x11\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x00\x00"
		.ascii  "\x1e\x00\x20\x00\x22\x00\x25\x00"
		.ascii  "\x28\x00\x2b\x00\x2d\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3d\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x48\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00\x57\x00"
		.ascii  "\x00\x00\x03"
		.fill   0x9
		.ascii  "\x06\x00\x09\x00\x0a\x00\x00\x00"
		.ascii  "\x0c\x00\x0e\x00\x10\x00\x12\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x59\x00\x5b\x00"
		.ascii  "\x6a\x00\x6a"
		.fill   0x9
		.ascii  "\x6a\x00\x6a\x00\x6a\x00\x6a\x00"
		.ascii  "\x6a\x00\x6a\x00\x6a\x00\x6a\x00"
		.ascii  "\x14\x00\x17\x00\x1a\x00\x00\x00"
		.ascii  "\x1d\x00\x1f\x00\x21\x00\x23\x00"
		.ascii  "\x26\x00\x29\x00\x2c\x00\x2e\x00"
		.ascii  "\x30\x00\x32\x00\x34\x00\x36\x00"
		.ascii  "\x38\x00\x3a\x00\x00\x00\x3c\x00"
		.ascii  "\x3e\x00\x40\x00\x42\x00\x43\x00"
		.ascii  "\x44\x00\x4a\x00\x4b\x00\x50\x00"
		.ascii  "\x51\x00\x52\x00\x4d\x00\x4e\x00"
		.ascii  "\x4f"
		.fill   0x9
		.ascii  "\x63\x00\x6b\x00\x67\x00\x68\x00"
		.ascii  "\x69\x00\x69\x00\x5d\x00\x5e\x00"
		.ascii  "\x5f\x00\x53\x00\x55\x00"
data_7869a:
		.ascii  "\x57"
		.fill   0x5
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.fill   0x6
		.ascii  "\xff\xff\x02\x00\x02\x00\x02\x00"
		.ascii  "\x02"
		.fill   0xf
		.ascii  "\x02\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x01\x00\x01\x00\x01\x00\x01\x00"
		.ascii  "\x01\x00\x01\x00\x01\x00\x01\x00"
		.ascii  "\x01\x00\x01\x00\x01\x00\x01\x00"
		.ascii  "\x04\x00\x04\x00\x04\x00\x03\x00"
		.ascii  "\x03\x00\x03\x00\x05\x00\x05\x00"
		.ascii  "\x05\x00\x0d\x00\x0d\x00\x0c\x00"
		.ascii  "\x0c\x00\xff\xff\xff\xff\x0e\x00"
		.ascii  "\x0e\x00\x0e\x00\x0e\x00\x06\x00"
		.ascii  "\x06\x00\x06\x00\x07\x00\x07\x00"
		.ascii  "\x07\x00"
data_78718:
		.ascii  "\x00"
data_78719:
		.ascii  "\x00"
data_7871a:
		.ascii  "\x00"
data_7871b:
		.ascii  "\x00"
data_7871c:
		.ascii  "\x00"
data_7871d:
		.ascii  "\x00"
data_7871e:
		.ascii  "\x00"
data_7871f:
		.ascii  "\x00"
data_78720:
		.ascii  "\x00"
data_78721:
		.ascii  "\x00"
data_78722:
		.ascii  "\x00"
data_78723:
		.ascii  "\x00"
data_78724:
		.ascii  "\x00"
data_78725:
		.ascii  "\x00"
data_78726:
		.ascii  "\x00"
data_78727:
		.ascii  "\x00"
data_78728:
		.ascii  "\x00"
data_78729:
		.ascii  "\x00"
data_7872a:
		.fill   0x6
		.ascii  "\x63\x3a\x5c\x00\x00"
data_78735:
		.string "*.til"
		.fill   0x4a
data_78785:
		.ascii  "\x00\x00\x00"
data_78788:
		.ascii  "\x45\x00\x3f\x00\x00\x01\x00\x03"
		.ascii  "\x00\x00\x00\x3c\x01\x00\x01\x00"
		.ascii  "\x03\x00\x00\x00\x2b\x01\x00\x02"
		.ascii  "\x00\x00\x0e\x00\x00\x02\x00\x0f"
		.ascii  "\x03\x00\x00\x00\x29\x01\x01\x01"
		.ascii  "\x00\x00\x0f\x0f\x0f\x0d\x00\x00"
		.ascii  "\x02\x00\x0f\x03\x00\x00\x00\x27"
		.ascii  "\x01\x02\x00\x00\x00\x0f\x0f\xf8"
		.ascii  "\xf8\x66\x67\x0b\x00\x00\x03\x00"
		.ascii  "\x67\x67\x03\x00\x00\x00\x25\x01"
		.ascii  "\x02\x03\x00\x00\x67\x0f\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xfe\x0f\x09\x00\x01"
		.ascii  "\x00\x00\x67\xf8\x0f\x03\x00\x00"
		.ascii  "\x00\x22\x01\x04"
		.fill   0x4
		.ascii  "\x0f\x67\xf8\x66\xf8\x66\x66\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x05\x00\x01"
		.ascii  "\x02\x00\x00\x67\xf8\xfe\x0f\x03"
		.ascii  "\x00\x00\x00\x1e\x01\x08"
		.fill   0x5
		.ascii  "\x0f\x0f\xfe\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\x0f\x0f\x0f"
		.ascii   "ggggf"
		.ascii  "\xf8\xfe\xfe\x0f\x02\x00\x00\x00"
		.ascii  "\x10\x01\x0b\x02"
		.fill   0xe
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xf8\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xf8\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\x0f\xfe\x66"
		.ascii  "\x66\xf8\x66\x66\x0f\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\x08\x01\x0d\x02"
		.fill   0x8
		.ascii  "\x0f\x0f\x0f\x67\x0f\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x67\x67\xf8\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\xf8\xfe\xf8\xf8"
		.ascii  "\xf8\x66\xfe\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x66\xf8\xfe\xfe\xfe\x0f\x02\x00"
		.ascii  "\x00\x00\x04\x01\x0e\x02"
		.fill   0x4
		.ascii  "\x67\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\x66\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x66\xf8\xf8\x03\x03"
		.ascii  "\xf8\xf8\xfe\xf8\x66\xf8\xf8\x66"
		.ascii  "\xfe\x0f\x66\x66\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\xfe\xfe\xfe"
		.ascii  "\x66\xf8\x0f\x66\x66\x67\x02\x00"
		.ascii  "\x00\x00\x02\x01\x0f\x01\x00\x00"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\xfe\xf8\x66\xfe"
		.ascii  "\xfe\xf8\x0f\xfe\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x03\x02\x03\x03\xfe\xfe"
		.ascii  "\xf8\x66\x66\xf8\xfe\x0f\xf8\x66"
		.ascii  "\x66\x0f\xf8\xfe\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\x66\x66\xfe"
		.ascii   "fffg"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x10\x00\x00\x00\x67\x0f\x0f"
		.ascii  "\xfe\x66\xf8\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x66\x66\xfe"
		.ascii  "\xf8\xf8\x66\xf8\x66\xf8\xf8\xf8"
		.ascii  "\xf8\x03\x01\x01\x02\x03\x03\x66"
		.ascii  "\x66\x66\xfe\x0f\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x66\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\x66\x67\xff\x00"
		.ascii  "\x10\x01\x00\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\xfe"
		.ascii   "ffffffff"
		.ascii  "\xf8\xf8\xfe\xfe\x66\x03\x01\x01"
		.ascii  "\x01\x01\x02\x03\x03\x66\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x66\xf8\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\xf8\xf8\x0f\xfe"
		.ascii  "\x00\x10\x01\x00\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xf8\x0f\x0f\xf8\x66"
		.ascii  "\x66\x66\xf8\x66\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\x66\x66\x03\x01\x01\x01\x01"
		.ascii  "\x01\x01\x02\x03\x03\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\xf8\x66\x66\xfe\x0f"
		.ascii  "\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\x66\xf8\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xfd\x00\x10\x01\x00\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x66\x66"
		.ascii  "\x03\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x03\x03\xfe\x66\x66\x66"
		.ascii  "\xf8\xfe\xfe\x0f\x0f\x66\x66\xf8"
		.ascii  "\x66\x66\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\xfd\x00\x10\x01"
		.ascii  "\x00\x67\x67\x67\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x0f\x0f\x0f"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\x66\x03\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x04\x04\xfe\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xfe\xfe\x0f\x66\x66\x66\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x02"
		.ascii  "\x00\x00\x00\xfd\x00\x00\x02\x00"
		.ascii  "\x0f\x05\x00\x0e\x01\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xfe\xfe\xfe\xfe\x03"
		.ascii  "\x01\x01\x01\x01\x02\x04\x04\x0f"
		.ascii  "\xfe\xfe\xf8\xf8"
		.ascii   "ffffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x00\x01\x00\x09\x00"
		.ascii  "\x0d\x02\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x03\x01\x01\x02\x04\x04\xfe"
		.ascii  "\xfe\x0f\xfe\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffffff"
		.ascii  "\xf8\x0f\x0f\x0f\x03\x00\x00\x00"
		.ascii  "\x08\x01\x0d\x00\x0f\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x03\x02\x04\x04\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\xfe\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\xfe\xf8\x66\x66\x66\xf8\x0f"
		.ascii  "\x04\x00\x00\x00\x08\x01\x0d\x00"
		.ascii  "\x0f\xf8\xf8\xf8\xf8\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x66\x66\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\x04\x04"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xf8\xfe\x0f\xfe\xfe\xf8"
		.ascii  "\xf8\x0f\x0f\xfe\x66\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x67\x04\x00\x00\x00"
		.ascii  "\x09\x01\x0c\x03\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xfe\x66\x66"
		.ascii  "\x66\xfe\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\x0f\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\x0f\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xf8\xfe\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x0f\x67\x0f\x04"
		.ascii  "\x00\x00\x00\x09\x01\x0c\x00\x00"
		.ascii  "\x0f\x66\xf8\xfe\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\x66\xf8\xf8\xfe\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xf8\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x66\xfe\x0f\x07"
		.ascii  "\x00\x00\x00\x09\x01\x0b\x03\x00"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x66\x66\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x0f\x08\x00"
		.ascii  "\x00\x00\x09\x01\x07\x02\x00\x0f"
		.ascii  "\xfe\xfe\xfe\xf8\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xf8\x66\xf8\xf8\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x04\x00\x03\x01"
		.ascii  "\x67\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x67\x08\x00\x00"
		.ascii  "\x00\x08\x01\x06\x03\x00\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\x66\x0f\x0f\x0f\x0f\x67\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0c\x00\x02\x01\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x67\x08\x00\x00"
		.ascii  "\x00\x07\x01\x03\x02\x00\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x2b\x00\x00\x00\x0a"
		.ascii  "\x01\x02\x00\x0f\x0f\xf8\x66\xf8"
		.ascii  "\xf8\x67\x0f\x2e\x00\x00\x00\x0c"
		.ascii  "\x01\x01\x00\x0f\xf8\x66\x67\x30"
		.ascii  "\x00\x00\x00\x0d\x01\x00\x02\x67"
		.ascii  "\x67\x31\x00\x00\x00\x0e\x01\x00"
		.ascii  "\x01\x67\x31"
		.fill   0x75
data_78d64:
		.ascii  "\x43\x00\x03\x00\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0e\x00\x00"
		.ascii  "\x02\x00\x0f\x2e"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0d\x00\x01"
		.ascii  "\x01\x00\x0f\xfe\x67\x0f\x2c"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\x67\x67\x0b\x00"
		.ascii  "\x02\x00\x00\x67\xf8\xf8\xf8\xf8"
		.ascii  "\x67\x67\x2a"
		.fill   0x4
		.ascii  "\x01\x01\x00\x00\x0f\x66\x0f\x09"
		.ascii  "\x00\x02\x03\x00\x0f\xf8\xf8\x66"
		.ascii  "\xf8\xf8\xf8"
		.string "fgg("
		.ascii  "\x00\x00\x00\x01\x01\x02\x00\x0f"
		.ascii  "\xf8\x66\x67\x67\x05\x00\x04\x00"
		.ascii  "\x00\x00\x0f\x0f\xfe\xf8\x66\x66"
		.ascii  "\xf8\x66\xf8\x66\xf8\x0f\x67\x0f"
		.ascii  "\x25\x00\x00\x00\xff\x00\x08\x00"
		.ascii  "\x00\x0f\xfe\xf8"
		.ascii   "fffgg"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\x0f\x0f\x0f\x0f\x21"
		.ascii  "\x00\x00\x00\xff\x00\x0b\x02\x00"
		.ascii  "\x0f\xfe\x0f\x66\x66\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\xf8\xf8\x0f\x0f"
		.ascii  "\x67\x0f\x67\x0f\x0f\x67\x67\x0f"
		.ascii  "\x67\x0f\x0f\x0f\x0f\x13\x00\x00"
		.ascii  "\x00\xff\x00\x0d\x02\x00\x0f\xfe"
		.ascii  "\xfe\xf8\x66\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xf8\xf8\xfe\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xfe\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8\xf8\xf8\x66\xf8\x66"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x0f\x0f\x0b\x00\x00\x00\xff"
		.ascii  "\x00\x0e\x02\x00\x67\x66\x0f\xf8"
		.ascii  "\x66\xfe\xfe\xfe\x66\xf8\x0f\x05"
		.ascii  "\x05\x0f\x0f\xfe\xf8\x66\x04\x04"
		.ascii  "\xfe\x66\xf8\xf8\x66\x03\x03\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\x66\x66\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x66\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x66\x0f\x0f\x0f\x0f\x07\x00\x00"
		.ascii  "\x00\xfe\x00\x0f\x01\x00\x67\x66"
		.ascii  "\x66\xfe\x66\x66\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x05\x04\x05\x05\x0f\x66"
		.ascii  "\x66\x04\x03\x04\x04\x66\x66\xf8"
		.ascii  "\x03\x02\x03\x03\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\x0f\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xfe\x0f\xfe"
		.ascii  "\x67\x67\x05\x00\x00\x00\xfd\x00"
		.ascii  "\x10\x00\x00\x67\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\xf8\x05\x03\x03\x04\x05"
		.ascii  "\x05\xfe\x04\x02\x02\x03\x04\x04"
		.ascii  "\x66\x03\x01\x01\x02\x03\x03\xf8"
		.ascii  "\xf8\xf8\xf8\x66\xf8\x66\xf8\xf8"
		.ascii  "\xfe\x66\x66\x66\xf8\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\x66\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x10\x01\x00\x0f\xf8"
		.ascii  "\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\x05\x03\x03\x03\x03\x04"
		.ascii  "\x05\x04\x02\x02\x02\x02\x03\x04"
		.ascii  "\x03\x01\x01\x01\x01\x02\x03\x03"
		.ascii  "\xfe\xf8\xf8"
		.ascii   "ffffffff"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x66\xfe\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x02\x00\x00\x00\xfe\x00"
		.ascii  "\x10\x01\x0f\x0f\xf8\x66\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x0f\x05\x03\x03\x03\x03\x03"
		.ascii  "\x03\x04\x02\x02\x02\x02\x02\x02"
		.ascii  "\x03\x01\x01\x01\x01\x01\x01\x02"
		.ascii  "\x03\x03\xfe\xfe\xf8\x66\xf8\x66"
		.ascii  "\x66\x66\xf8\x0f\x0f\xf8\xfe\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xff\x00\x10\x01\x0f\xfe"
		.ascii  "\xfe\xfe\xf8\xfe\x66\x66\xf8\x66"
		.ascii  "\x66\x0f\x05\x03\x03\x03\x03\x03"
		.ascii  "\x03\x04\x02\x02\x02\x02\x02\x02"
		.ascii  "\x03\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x04\x04\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xff\x00\x10"
		.ascii  "\x01\x0f\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\x66\x0f\x05\x03\x03"
		.ascii  "\x03\x03\x03\x03\x04\x02\x02\x02"
		.ascii  "\x02\x02\x02\x03\x01\x01\x01\x01"
		.ascii  "\x01\x01\x02\x04\x04\xf8\xf8\xf8"
		.ascii  "\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x67\x66\x0f\x00\x01\x0e\x01"
		.ascii  "\x0f\x0f\x0f\x0f\xfe"
		.ascii   "fffff"
		.ascii  "\xf8\x05\x03\x03\x03\x03\x04\x06"
		.ascii  "\x04\x02\x02\x02\x02\x03\x05\x03"
		.ascii  "\x01\x01\x01\x01\x02\x04\x04\xfe"
		.ascii  "\xfe\xfe\xf8\xf8\xf8\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x05"
		.ascii  "\x00\x00\x02\x00\x67\x00\x01\x0d"
		.ascii  "\x02\x0f\x0f\x0f\xf8"
		.ascii   "fffffff"
		.ascii  "\x05\x03\x03\x04\x06\x06\x66\x04"
		.ascii  "\x02\x02\x03\x05\x05\xfe\x03\x01"
		.ascii  "\x01\x02\x04\x04\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\x09\x00\x00\x01\x00"
		.ascii  "\x01\x01\x0d\x00\x0f\xf8\x66\x66"
		.ascii  "\x66\xf8\xfe\xf8\xf8\xfe\x05\x04"
		.ascii  "\x06\x06\xf8\xfe\xf8\x04\x03\x05"
		.ascii  "\x05\x0f\xfe\xfe\x03\x02\x04\x04"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\xfe\xf8\x66\xf8\x0f"
		.ascii  "\x0b\x00\x00\x00\x01\x01\x0d\x00"
		.ascii  "\x00\x67\xf8\xf8\xf8\xf8\xfe\x66"
		.ascii  "\xfe\x0f\x06\x06\xf8\xfe\xfe\x0f"
		.ascii  "\xfe\x05\x05\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\x04\x04\xfe\xfe\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\xfe\x66"
		.ascii  "\x66\xfe\x0f\x0f\x0f\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x0f\x0b\x00\x00\x00"
		.ascii  "\x01\x01\x0c\x03\x00\x67\x0f\x67"
		.ascii  "\x66\xf8\xf8\x66\xfe\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xf8\x66\xf8\xf8\xf8"
		.ascii  "\x0f\xfe\x0f\xfe\xfe\xfe\x0f\xfe"
		.ascii  "\x0f\xfe\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\x66\x66\x66\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xfe\x66\xf8\x0f\x0c"
		.ascii  "\x00\x00\x00\x04\x01\x0c\x00\x00"
		.ascii  "\x0f\x66\xf8\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xf8\xf8\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\x66\x66"
		.ascii  "\xf8\xfe\xf8\xf8\x66\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\xfe\xf8\x66\xf8\x0f\x0c"
		.ascii  "\x00\x00\x00\x05\x01\x0b\x03\x0f"
		.ascii  "\x66\xf8\x0f\x0f\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x66\x66\x67\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xf8\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\xfe"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xfe\xfe\x67\x0c\x00\x00"
		.ascii  "\x00\x05\x01\x03\x01\x00\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xf8\x0f\x0f"
		.ascii  "\x0f\x67\x04\x00\x07\x02\x00\x00"
		.ascii  "\x00\x0f\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xf8\x66"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xf8\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x0c\x00\x00\x00"
		.ascii  "\x05\x01\x02\x01\x00\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0c\x00\x06"
		.ascii  "\x03\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x0f\x0f\x0f\x0f\x67"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0b\x00\x00\x00"
		.ascii  "\x28\x01\x03\x02\x00\x00\x00\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0a\x00\x00\x00\x2b\x01"
		.ascii  "\x02\x00\x00\x00\x0f\xf8\x66\xf8"
		.ascii  "\x0f\x0f\x0d\x00\x00\x00\x2d\x01"
		.ascii  "\x01\x00\x00\x67\xf8\x0f\x0f\x00"
		.ascii  "\x00\x00\x2e\x01\x00\x02\x00\x67"
		.ascii  "\x10\x00\x00\x00\x2e\x01\x00\x01"
		.ascii  "\x00\x11"
		.fill   0x7d
data_79340:
		.ascii  "\x45\x00\x3f\x00\x00\x01\x00\x03"
		.ascii  "\x00\x00\x00\x3c\x01\x00\x01\x00"
		.ascii  "\x03\x00\x00\x00\x2b\x01\x00\x02"
		.ascii  "\x00\x00\x0e\x00\x00\x02\x00\x0f"
		.ascii  "\x03\x00\x00\x00\x29\x01\x01\x01"
		.ascii  "\x00\x00\x0f\x0f\x0f\x0d\x00\x00"
		.ascii  "\x02\x00\x0f\x03\x00\x00\x00\x27"
		.ascii  "\x01\x02\x00\x00\x00\x0f\x0f\xf8"
		.ascii  "\xf8\x66\x67\x0b\x00\x00\x03\x00"
		.ascii  "\x67\x67\x03\x00\x00\x00\x25\x01"
		.ascii  "\x02\x03\x00\x00\x67\x0f\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xfe\x0f\x09\x00\x01"
		.ascii  "\x00\x00\x67\xf8\x0f\x03\x00\x00"
		.ascii  "\x00\x22\x01\x04"
		.fill   0x4
		.ascii  "\x0f\x67\xf8\x66\xf8\x66\x66\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x05\x00\x01"
		.ascii  "\x02\x00\x00\x67\xf8\xfe\x0f\x03"
		.ascii  "\x00\x00\x00\x1e\x01\x08"
		.fill   0x5
		.ascii  "\x0f\x0f\xfe\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\x0f\x0f\x0f"
		.ascii   "ggggf"
		.ascii  "\xf8\xfe\xfe\x0f\x02\x00\x00\x00"
		.ascii  "\x10\x01\x0b\x02"
		.fill   0xe
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xf8\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xf8\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\x0f\xfe\x66"
		.ascii  "\x66\xf8\x66\x66\x0f\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\x08\x01\x0d\x02"
		.fill   0x8
		.ascii  "\x0f\x0f\x0f\x67\x0f\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x67\x67\xf8\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\x03\xfe\xf8\xf8"
		.ascii  "\xf8\x66\xfe\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x66\xf8\xfe\xfe\xfe\x0f\x02\x00"
		.ascii  "\x00\x00\x04\x01\x0e\x02"
		.fill   0x4
		.ascii  "\x67\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\x66\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x66\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xfe\x03\x01\xf8\xf8\x66"
		.ascii  "\xfe\x0f\x66\x66\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\xfe\xfe\xfe"
		.ascii  "\x66\xf8\x0f\x66\x66\x67\x02\x00"
		.ascii  "\x00\x00\x02\x01\x0f\x01\x00\x00"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\xfe\xf8\x66\xfe"
		.ascii  "\xfe\xf8\x0f\xfe\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\xf8\xf8\x03\x01"
		.ascii  "\x01\x66\x66\xf8\xfe\x0f\xf8\x66"
		.ascii  "\x66\x0f\xf8\xfe\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\x66\x66\xfe"
		.ascii   "fffg"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x10\x00\x00\x00\x67\x0f\x0f"
		.ascii  "\xfe\x66\xf8\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x66\x66\xfe"
		.ascii  "\xf8\xf8\x66\xf8\x66\xf8\xf8\xf8"
		.ascii  "\xf8\x66\x66\xf8\x03\x01\x01\x01"
		.ascii  "\x66\x66\xfe\x0f\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x66\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\x66\x67\xff\x00"
		.ascii  "\x10\x01\x00\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\xfe"
		.ascii   "ffffffff"
		.ascii  "\xf8\xf8\xfe\xfe\x66\x03\x03\xf8"
		.ascii  "\x01\x01\x01\x01\x66\x66\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x66\xf8\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\xf8\xf8\x0f\xfe"
		.ascii  "\x00\x10\x01\x00\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xf8\x0f\x0f\xf8\x66"
		.ascii  "\x66\x66\xf8\x66\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\x66\x66\x01\x01\xf8\x01\x01"
		.ascii  "\x01\x01\xf8\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\xf8\x66\x66\xfe\x0f"
		.ascii  "\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\x66\xf8\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xfd\x00\x10\x01\x00\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x66\x03"
		.ascii  "\x01\x01\x66\x01\x01\x01\x01\x0f"
		.ascii  "\x01\x0f\x01\x0f\x01\x66\x66\x66"
		.ascii  "\xf8\xfe\xfe\x0f\x0f\x66\x66\xf8"
		.ascii  "\x66\x66\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\xfd\x00\x10\x01"
		.ascii  "\x00\x67\x67\x67\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x0f\x0f\x0f"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\x66\x02\x02\x66\x02\x01\x01\x01"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xfe\xfe\x0f\x66\x66\x66\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x02"
		.ascii  "\x00\x00\x00\xfd\x00\x00\x02\x00"
		.ascii  "\x0f\x05\x00\x0e\x01\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xfe\xfe\xfe\xfe\x04"
		.ascii  "\x04\x66\x03\x02\x02\x01\xfe\x0f"
		.ascii  "\xfe\xfe\xf8\xf8"
		.ascii   "ffffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x00\x01\x00\x09\x00"
		.ascii  "\x0d\x02\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x04\x03\x02\x02"
		.ascii  "\xfe\x0f\xfe\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffffff"
		.ascii  "\xf8\x0f\x0f\x0f\x03\x00\x00\x00"
		.ascii  "\x08\x01\x0d\x00\x0f\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x04\x03"
		.ascii  "\x02\xfe\x0f\xfe\xfe\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\xfe\xf8\x66\x66\x66\xf8\x0f"
		.ascii  "\x04\x00\x00\x00\x08\x01\x0d\x00"
		.ascii  "\x0f\xf8\xf8\xf8\xf8\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x66\x66\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\xfe\x0f"
		.ascii  "\xfe\xfe\x0f\x04\x03\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xf8\xfe\x0f\xfe\xfe\xf8"
		.ascii  "\xf8\x0f\x0f\xfe\x66\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x67\x04\x00\x00\x00"
		.ascii  "\x09\x01\x0c\x03\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xfe\x66\x66"
		.ascii  "\x66\xfe\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\x0f\xfe\x0f\xfe\xfe\x04"
		.ascii  "\x0f\xfe\x0f\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xf8\xfe\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x0f\x67\x0f\x04"
		.ascii  "\x00\x00\x00\x09\x01\x0c\x00\x00"
		.ascii  "\x0f\x66\xf8\xfe\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\x66\xf8\xf8\xfe\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xf8\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x66\xfe\x0f\x07"
		.ascii  "\x00\x00\x00\x09\x01\x0b\x03\x00"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x66\x66\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x0f\x08\x00"
		.ascii  "\x00\x00\x09\x01\x07\x02\x00\x0f"
		.ascii  "\xfe\xfe\xfe\xf8\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xf8\x66\xf8\xf8\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x04\x00\x03\x01"
		.ascii  "\x67\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x67\x08\x00\x00"
		.ascii  "\x00\x08\x01\x06\x03\x00\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\x66\x0f\x0f\x0f\x0f\x67\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0c\x00\x02\x01\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x67\x08\x00\x00"
		.ascii  "\x00\x07\x01\x03\x02\x00\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x2b\x00\x00\x00\x0a"
		.ascii  "\x01\x02\x00\x0f\x0f\xf8\x66\xf8"
		.ascii  "\xf8\x67\x0f\x2e\x00\x00\x00\x0c"
		.ascii  "\x01\x01\x00\x0f\xf8\x66\x67\x30"
		.ascii  "\x00\x00\x00\x0d\x01\x00\x02\x67"
		.ascii  "\x67\x31\x00\x00\x00\x0e\x01\x00"
		.ascii  "\x01\x67\x31"
		.fill   0x75
data_7991c:
		.ascii  "\x43\x00\x03\x00\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0e\x00\x00"
		.ascii  "\x02\x00\x0f\x2e"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0d\x00\x01"
		.ascii  "\x01\x00\x0f\xfe\x67\x0f\x2c"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\x67\x67\x0b\x00"
		.ascii  "\x02\x00\x00\x67\xf8\xf8\xf8\xf8"
		.ascii  "\x67\x67\x2a"
		.fill   0x4
		.ascii  "\x01\x01\x00\x00\x0f\x66\x0f\x09"
		.ascii  "\x00\x02\x03\x00\x0f\xf8\xf8\x66"
		.ascii  "\xf8\xf8\xf8"
		.string "fgg("
		.ascii  "\x00\x00\x00\x01\x01\x02\x00\x0f"
		.ascii  "\xf8\x66\x67\x67\x05\x00\x04\x00"
		.ascii  "\x00\x00\x0f\x0f\xfe\xf8\x66\x66"
		.ascii  "\xf8\x66\xf8\x66\xf8\x0f\x67\x0f"
		.ascii  "\x25\x00\x00\x00\xff\x00\x08\x00"
		.ascii  "\x00\x0f\xfe\xf8"
		.ascii   "fffgg"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\x0f\x0f\x0f\x0f\x21"
		.ascii  "\x00\x00\x00\xff\x00\x0b\x02\x00"
		.ascii  "\x0f\xfe\x0f\x66\x66\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\xf8\xf8\x0f\x0f"
		.ascii  "\x67\x0f\x67\x0f\x0f\x67\x67\x0f"
		.ascii  "\x67\x0f\x0f\x0f\x0f\x13\x00\x00"
		.ascii  "\x00\xff\x00\x0d\x02\x00\x0f\xfe"
		.ascii  "\xfe\xf8\x66\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xf8\xf8\xfe\x03\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\x04\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8\xf8\xf8\x66\xf8\x66"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x0f\x0f\x0b\x00\x00\x00\xff"
		.ascii  "\x00\x0e\x02\x00\x67\x66\x0f\xf8"
		.ascii  "\x66\xfe\xfe\xfe\x66\xf8\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xfe\xf8\x66\x66\x0f"
		.ascii  "\xfe\x66\xf8\x03\x01\xf8\xfe\xf8"
		.ascii  "\xf8\xf8\xf8\x03\xf8\x66\x66\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x66\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x66\x0f\x0f\x0f\x0f\x07\x00\x00"
		.ascii  "\x00\xfe\x00\x0f\x01\x00\x67\x66"
		.ascii  "\x66\xfe\x66\x66\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\xfe\xf8\x0f\x66"
		.ascii  "\x66\xf8\x0f\xfe\xf8\x03\x01\x01"
		.ascii  "\xfe\xfe\x04\xf8\x66\xf8\xf8\x02"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\x0f\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xfe\x0f\xfe"
		.ascii  "\x67\x67\x05\x00\x00\x00\xfd\x00"
		.ascii  "\x10\x00\x00\x67\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\xf8\x66\x66\x66\xf8\xf8"
		.ascii  "\x66\xfe\x0f\x0f\x0f\x03\x01\x01"
		.ascii  "\x01\xf8\xf8\xf8\x03\x66\x66\xf8"
		.ascii  "\x01\xf8\xf8\x66\xf8\x66\xf8\xf8"
		.ascii  "\xfe\x66\x66\x66\xf8\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\x66\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x10\x01\x00\x0f\xf8"
		.ascii  "\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\x66\x66\x66\xf8\xf8\x66"
		.ascii  "\xfe\x03\x03\x0f\x01\x01\x01\x01"
		.ascii  "\x66\x66\xf8\x02\x66\x66\x66\xfe"
		.ascii  "\x01\xf8\xf8"
		.ascii   "ffffffff"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x66\xfe\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x02\x00\x00\x00\xfe\x00"
		.ascii  "\x10\x01\x0f\x0f\xf8\x66\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x0f\xfe\x66\x66\xf8\x66\x66"
		.ascii  "\xfe\x01\x01\x0f\x01\x01\x01\x01"
		.ascii  "\xf8\xf8\xf8\xf8\x01\x66\x66\x66"
		.ascii  "\x01\xf8\xfe\xfe\xf8\x66\xf8\x66"
		.ascii  "\x66\x66\xf8\x0f\x0f\xf8\xfe\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xff\x00\x10\x01\x0f\xfe"
		.ascii  "\xfe\xfe\xf8\xfe\x66\x66\xf8\x66"
		.ascii  "\x66\x0f\x0f\xfe\xfe\xf8\x66\x66"
		.ascii  "\x03\x01\x01\x0f\x01\x01\x01\x01"
		.ascii  "\xf8\x66\xf8\x66\x01\xf8\x66\x66"
		.ascii  "\x01\xf8\xf8\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xff\x00\x10"
		.ascii  "\x01\x0f\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\x66\x0f\xfe\xfe\xf8"
		.ascii   "ffff"
		.ascii  "\x02\x02\xfe\x02\x01\x01\x01\xfe"
		.ascii  "\xf8\x66\x66\x01\x66\x66\xf8\x01"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x67\x66\x0f\x00\x01\x0e\x01"
		.ascii  "\x0f\x0f\x0f\x0f\xfe"
		.ascii   "fffff"
		.ascii  "\xf8\xf8"
		.ascii   "ffffff"
		.ascii  "\x04\x04\xfe\x03\x02\x02\x01\x0f"
		.ascii  "\xfe\x66\x02\xfe\xfe\xfe\xfe\x01"
		.ascii  "\xfe\xfe\xf8\xf8\xf8\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x05"
		.ascii  "\x00\x00\x02\x00\x67\x00\x01\x0d"
		.ascii  "\x02\x0f\x0f\x0f\xf8"
		.ascii   "fffffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\xf8\x04\x03\x02\x02\x0f"
		.ascii  "\x0f\x0f\x03\xfe\x0f\x0f\x01\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x09\x00\x00\x01"
		.ascii  "\x00\x01\x01\x0d\x00\x0f\xf8\x66"
		.ascii  "\x66\x66\xf8\xfe\xf8\xf8\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\xf8\xf8\xf8"
		.ascii  "\xfe\xfe\x04\x03\x02\xfe\x0f\x04"
		.ascii  "\x0f\x0f\x0f\x0f\x02\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\xfe\xf8\x66\xf8"
		.ascii  "\x0f\x0b\x00\x00\x00\x01\x01\x0d"
		.ascii  "\x00\x00\x67\xf8\xf8\xf8\xf8\xfe"
		.ascii  "\x66\xfe\x0f\x0f\xf8\xf8\xfe\xfe"
		.ascii  "\x0f\xfe\xf8\xf8\xfe\x0f\x0f\x04"
		.ascii  "\x03\x0f\x0f\xfe\xfe\x0f\xfe\x03"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\x66\x66\xfe\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x0f\x0b\x00\x00"
		.ascii  "\x00\x01\x01\x0c\x03\x00\x67\x0f"
		.ascii  "\x67\x66\xf8\xf8\x66\xfe\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xf8\x66\xf8\xf8"
		.ascii  "\xf8\x0f\xfe\x0f\x04\xfe\xfe\x0f"
		.ascii  "\xfe\x0f\x04\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\xfe\x66\x66\x66\xfe\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\xfe\x66\xf8\x0f"
		.ascii  "\x0c\x00\x00\x00\x04\x01\x0c\x00"
		.ascii  "\x00\x0f\x66\xf8\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xf8\xf8\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\xfe\x66"
		.ascii  "\x66\xf8\xfe\xf8\xf8\x66\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xf8\x66\xf8\x0f"
		.ascii  "\x0c\x00\x00\x00\x05\x01\x0b\x03"
		.ascii  "\x0f\x66\xf8\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x66\x66\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xfe\xfe\x67\x0c\x00\x00"
		.ascii  "\x00\x05\x01\x03\x01\x00\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xf8\x0f\x0f"
		.ascii  "\x0f\x67\x04\x00\x07\x02\x00\x00"
		.ascii  "\x00\x0f\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xf8\x66"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xf8\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x0c\x00\x00\x00"
		.ascii  "\x05\x01\x02\x01\x00\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0c\x00\x06"
		.ascii  "\x03\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x0f\x0f\x0f\x0f\x67"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0b\x00\x00\x00"
		.ascii  "\x28\x01\x03\x02\x00\x00\x00\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0a\x00\x00\x00\x2b\x01"
		.ascii  "\x02\x00\x00\x00\x0f\xf8\x66\xf8"
		.ascii  "\x0f\x0f\x0d\x00\x00\x00\x2d\x01"
		.ascii  "\x01\x00\x00\x67\xf8\x0f\x0f\x00"
		.ascii  "\x00\x00\x2e\x01\x00\x02\x00\x67"
		.ascii  "\x10\x00\x00\x00\x2e\x01\x00\x01"
		.ascii  "\x00\x11"
		.fill   0x7d
data_79ef8:
		.ascii  "\x45\x00\x3f\x00\x00\x01\x00\x03"
		.ascii  "\x00\x00\x00\x3c\x01\x00\x01\x00"
		.ascii  "\x03\x00\x00\x00\x2b\x01\x00\x02"
		.ascii  "\x00\x00\x0e\x00\x00\x02\x00\x0f"
		.ascii  "\x03\x00\x00\x00\x29\x01\x01\x01"
		.ascii  "\x00\x00\x0f\x0f\x0f\x0d\x00\x00"
		.ascii  "\x02\x00\x0f\x03\x00\x00\x00\x27"
		.ascii  "\x01\x02\x00\x00\x00\x0f\x0f\xf8"
		.ascii  "\xf8\x66\x67\x0b\x00\x00\x03\x00"
		.ascii  "\x67\x67\x03\x00\x00\x00\x25\x01"
		.ascii  "\x02\x03\x00\x00\x67\x0f\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xfe\x0f\x09\x00\x01"
		.ascii  "\x00\x00\x67\xf8\x0f\x03\x00\x00"
		.ascii  "\x00\x22\x01\x04"
		.fill   0x4
		.ascii  "\x0f\x67\xf8\x66\xf8\x66\x66\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x05\x00\x01"
		.ascii  "\x02\x00\x00\x67\xf8\xfe\x0f\x03"
		.ascii  "\x00\x00\x00\x1e\x01\x08"
		.fill   0x5
		.ascii  "\x0f\x0f\xfe\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\x0f\x0f\x0f"
		.ascii   "ggggf"
		.ascii  "\xf8\xfe\xfe\x0f\x02\x00\x00\x00"
		.ascii  "\x10\x01\x0b\x02"
		.fill   0xe
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xf8\xf8\xf8"
		.ascii  "\x66\xf8\xf8\xf8\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\x0f\xfe\x66"
		.ascii  "\x66\xf8\x66\x66\x0f\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\x08\x01\x0d\x02"
		.fill   0x8
		.ascii  "\x0f\x0f\x0f\x67\x0f\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x67\x67\xf8\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\xf8\xfe\xf8\xf8"
		.ascii  "\xf8\x66\xfe\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x66\xf8\xfe\xfe\xfe\x0f\x02\x00"
		.ascii  "\x00\x00\x04\x01\x0e\x02"
		.fill   0x4
		.ascii  "\x67\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\x66\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x66\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\x66\xf8\xf8\x66"
		.ascii  "\xfe\x0f\x66\x66\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\xfe\xfe\xfe"
		.ascii  "\x66\xf8\x0f\x66\x66\x67\x02\x00"
		.ascii  "\x00\x00\x02\x01\x0f\x01\x00\x00"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\xfe\xf8\x66\xfe"
		.ascii  "\xfe\xf8\x0f\xfe\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\xf8\xf8\xfe\xfe"
		.ascii  "\xf8\x66\x66\xf8\xfe\x0f\xf8\x66"
		.ascii  "\x66\x0f\xf8\xfe\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\x66\x66\xfe"
		.ascii   "fffg"
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x01\x10\x00\x00\x00\x67\x0f\x0f"
		.ascii  "\xfe\x66\xf8\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x66\x66\xfe"
		.ascii  "\xf8\xf8\x66\xf8\x66\xf8\xf8\xf8"
		.ascii  "\xf8\x66\x66\xf8\xf8\xf8\xf8\x66"
		.ascii  "\x66\x66\xfe\x0f\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x66\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\x66\x67\xff\x00"
		.ascii  "\x10\x01\x00\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x0f\xfe"
		.ascii   "ffffffff"
		.ascii  "\xf8\xf8\xfe\xfe\x66\x66\x66\xf8"
		.ascii  "\xf8\x03\x03\x03\x66\x66\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x66\xf8\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\xf8\x66\xf8\xf8\x0f\xfe"
		.ascii  "\x00\x10\x01\x00\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\xfe\xf8\x0f\x0f\xf8\x66"
		.ascii  "\x66\x66\xf8\x66\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\x66\x66\x66\xf8\xf8\x03\x02"
		.ascii  "\x01\x02\x03\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\xf8\x66\x66\xfe\x0f"
		.ascii  "\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x66\x66\xf8\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xfd\x00\x10\x01\x00\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\x01\x66\x01"
		.ascii  "\xf8\x01\x66\x03\x01\x01\x01\x03"
		.ascii  "\x0f\x01\x0f\x01\xfe\x01\x66\x66"
		.ascii  "\xf8\xfe\xfe\x0f\x0f\x66\x66\xf8"
		.ascii  "\x66\x66\xfe\xf8\xfe\xfe\xfe\x0f"
		.ascii  "\x02\x00\x00\x00\xfd\x00\x10\x01"
		.ascii  "\x00\x67\x67\x67\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x0f\x0f\x0f"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\x66\x66\xf8\x66\x03\x02\x01\x02"
		.ascii  "\x03\x0f\x0f\xfe\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xfe\xfe\x0f\x66\x66\x66\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x02"
		.ascii  "\x00\x00\x00\xfd\x00\x00\x02\x00"
		.ascii  "\x0f\x05\x00\x0e\x01\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\x0f\xfe\xf8"
		.ascii  "\xf8\xf8\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x66\x66\x03\x03\x03\xfe\x0f"
		.ascii  "\xfe\xfe\xf8\xf8"
		.ascii   "ffffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x00\x01\x00\x09\x00"
		.ascii  "\x0d\x02\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\xfe\xf8\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffffff"
		.ascii  "\xf8\x0f\x0f\x0f\x03\x00\x00\x00"
		.ascii  "\x08\x01\x0d\x00\x0f\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\xfe\xfe\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xf8\xfe\xfe\xf8"
		.ascii  "\xf8\xfe\xf8\x66\x66\x66\xf8\x0f"
		.ascii  "\x04\x00\x00\x00\x08\x01\x0d\x00"
		.ascii  "\x0f\xf8\xf8\xf8\xf8\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x66\x66\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\xfe\x0f"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xf8\xfe\x0f\xfe\xfe\xf8"
		.ascii  "\xf8\x0f\x0f\xfe\x66\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\x66\x67\x04\x00\x00\x00"
		.ascii  "\x09\x01\x0c\x03\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xfe\x66\x66"
		.ascii  "\x66\xfe\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\x0f\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\x0f\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xfe\xfe\xf8\xfe\x0f\x0f\xfe\x66"
		.ascii  "\xf8\xf8\x66\x66\x0f\x67\x0f\x04"
		.ascii  "\x00\x00\x00\x09\x01\x0c\x00\x00"
		.ascii  "\x0f\x66\xf8\xfe\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\x66\xf8\xf8\xfe\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xf8\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x66\xfe\x0f\x07"
		.ascii  "\x00\x00\x00\x09\x01\x0b\x03\x00"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\x0f\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x66\x66\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xf8\x66\x0f\x08\x00"
		.ascii  "\x00\x00\x09\x01\x07\x02\x00\x0f"
		.ascii  "\xfe\xfe\xfe\xf8\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xf8\x66\xf8\xf8\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x04\x00\x03\x01"
		.ascii  "\x67\x0f\x0f\x0f\xf8\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xf8\x67\x08\x00\x00"
		.ascii  "\x00\x08\x01\x06\x03\x00\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\x66\x0f\x0f\x0f\x0f\x67\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0c\x00\x02\x01\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x67\x08\x00\x00"
		.ascii  "\x00\x07\x01\x03\x02\x00\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\x2b\x00\x00\x00\x0a"
		.ascii  "\x01\x02\x00\x0f\x0f\xf8\x66\xf8"
		.ascii  "\xf8\x67\x0f\x2e\x00\x00\x00\x0c"
		.ascii  "\x01\x01\x00\x0f\xf8\x66\x67\x30"
		.ascii  "\x00\x00\x00\x0d\x01\x00\x02\x67"
		.ascii  "\x67\x31\x00\x00\x00\x0e\x01\x00"
		.ascii  "\x01\x67\x31"
		.fill   0x75
data_7a4d4:
		.ascii  "\x43\x00\x03\x00\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x3f"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0e\x00\x00"
		.ascii  "\x02\x00\x0f\x2e"
		.fill   0x4
		.ascii  "\x01\x00\x02\x00\x0f\x0d\x00\x01"
		.ascii  "\x01\x00\x0f\xfe\x67\x0f\x2c"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\x67\x67\x0b\x00"
		.ascii  "\x02\x00\x00\x67\xf8\xf8\xf8\xf8"
		.ascii  "\x67\x67\x2a"
		.fill   0x4
		.ascii  "\x01\x01\x00\x00\x0f\x66\x0f\x09"
		.ascii  "\x00\x02\x03\x00\x0f\xf8\xf8\x66"
		.ascii  "\xf8\xf8\xf8"
		.string "fgg("
		.ascii  "\x00\x00\x00\x01\x01\x02\x00\x0f"
		.ascii  "\xf8\x66\x67\x67\x05\x00\x04\x00"
		.ascii  "\x00\x00\x0f\x0f\xfe\xf8\x66\x66"
		.ascii  "\xf8\x66\xf8\x66\xf8\x0f\x67\x0f"
		.ascii  "\x25\x00\x00\x00\xff\x00\x08\x00"
		.ascii  "\x00\x0f\xfe\xf8"
		.ascii   "fffgg"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\x0f\x0f\x0f\x0f\x21"
		.ascii  "\x00\x00\x00\xff\x00\x0b\x02\x00"
		.ascii  "\x0f\xfe\x0f\x66\x66\xf8\x66\x66"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xf8\xf8\xf8\x66\xf8"
		.ascii  "\xf8\xf8\xfe\xf8\xf8\xf8\x0f\x0f"
		.ascii  "\x67\x0f\x67\x0f\x0f\x67\x67\x0f"
		.ascii  "\x67\x0f\x0f\x0f\x0f\x13\x00\x00"
		.ascii  "\x00\xff\x00\x0d\x02\x00\x0f\xfe"
		.ascii  "\xfe\xf8\x66\xfe\xf8\xfe\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xf8\xf8\xfe\xf8\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xfe\xf8\x66\x66"
		.ascii  "\x66\xf8\xf8\xf8\xf8\x66\xf8\x66"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x0f\x0f\x0b\x00\x00\x00\xff"
		.ascii  "\x00\x0e\x02\x00\x67\x66\x0f\xf8"
		.ascii  "\x66\xfe\xfe\xfe\x66\xf8\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\xfe\xf8\x66\x66\x0f"
		.ascii  "\xfe\x66\xf8\xf8\x66\xf8\xfe\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\x66\x66\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf8\x66\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x66\x0f\x0f\x0f\x0f\x07\x00\x00"
		.ascii  "\x00\xfe\x00\x0f\x01\x00\x67\x66"
		.ascii  "\x66\xfe\x66\x66\x66\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\x66\xfe\xf8\x0f\x66"
		.ascii  "\x66\xf8\x03\xfe\xf8\x66\x66\xf8"
		.ascii  "\xfe\xfe\xf8\xf8\x66\xf8\x03\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\x0f\xf8\xfe"
		.ascii  "\xfe\x66\xf8\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x0f\xf8\xfe\xfe\x0f\xfe"
		.ascii  "\x67\x67\x05\x00\x00\x00\xfd\x00"
		.ascii  "\x10\x00\x00\x67\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\xf8\x66\x66\x66\xf8\xf8"
		.ascii  "\x66\xfe\x03\x0f\x0f\xfe\x66\x66"
		.ascii  "\x66\xf8\xf8\xf8\xf8\x66\x66\xf8"
		.ascii  "\x03\xf8\xf8\x66\xf8\x66\xf8\xf8"
		.ascii  "\xfe\x66\x66\x66\xf8\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\xf8\x66\xfe"
		.ascii  "\x0f\xfe\x66\x0f\x0f\x03\x00\x00"
		.ascii  "\x00\xfd\x00\x10\x01\x00\x0f\xf8"
		.ascii  "\x66\xf8\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\x66\x66\x66\xf8\xf8\x66"
		.ascii  "\x02\xfe\x0f\x0f\x03\x66\x66\x03"
		.ascii  "\x03\x03\xf8\xf8\x03\x66\x66\xfe"
		.ascii  "\x02\xf8\xf8"
		.ascii   "ffffffff"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x66\xfe\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x02\x00\x00\x00\xfe\x00"
		.ascii  "\x10\x01\x0f\x0f\xf8\x66\x66\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x0f\xfe\x66\x66\xf8\x66\x66"
		.ascii  "\x01\xfe\x0f\x02\x0f\xfe\x03\x02"
		.ascii  "\x01\x02\x03\xf8\xf8\x02\x66\x66"
		.ascii  "\x01\xf8\xfe\xfe\xf8\x66\xf8\x66"
		.ascii  "\x66\x66\xf8\x0f\x0f\xf8\xfe\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x01\x00"
		.ascii  "\x00\x00\xff\x00\x10\x01\x0f\xfe"
		.ascii  "\xfe\xfe\xf8\xfe\x66\x66\xf8\x66"
		.ascii  "\x66\x0f\x0f\xfe\xfe\xf8\x66\x66"
		.ascii  "\x01\xfe\x0f\x01\x0f\x0f\x03\x01"
		.ascii  "\x01\x01\x03\x66\xfe\x01\x66\x66"
		.ascii  "\x01\xf8\xf8\xf8\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xff\x00\x10"
		.ascii  "\x01\x0f\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x66\x66\x66\x0f\xfe\xfe\xf8"
		.ascii  "\x66\x66\x66\x01\xf8\xf8\x02\x0f"
		.ascii  "\x0f\x03\x02\x01\x02\x03\x66\xf8"
		.ascii  "\x02\x66\xf8\x01\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8"
		.ascii   "ffff"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x67\x67\x66\x0f\x00\x01\x0e\x01"
		.ascii  "\x0f\x0f\x0f\x0f\xfe"
		.ascii   "fffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\x02\xf8\xf8\xfe\x03\x0f\xfe\x03"
		.ascii  "\x03\x03\x66\x66\x03\xfe\xfe\xfe"
		.ascii  "\x02\xfe\xfe\xf8\xf8\xf8\xfe\x0f"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\x0f\x0f\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x05\x00\x00\x02\x00\x67\x00\x01"
		.ascii  "\x0d\x02\x0f\x0f\x0f\xf8"
		.ascii   "fffffff"
		.ascii  "\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\x03\xf8\xf8\xfe\x0f\xfe\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\x0f\x0f\x03\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x09\x00\x00\x01"
		.ascii  "\x00\x01\x01\x0d\x00\x0f\xf8\x66"
		.ascii  "\x66\x66\xf8\xfe\xf8\xf8\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\xf8\xf8\x03"
		.ascii  "\xfe\xfe\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x03\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\xfe\xf8\x66\xf8"
		.ascii  "\x0f\x0b\x00\x00\x00\x01\x01\x0d"
		.ascii  "\x00\x00\x67\xf8\xf8\xf8\xf8\xfe"
		.ascii  "\x66\xfe\x0f\x0f\xf8\xf8\xfe\xfe"
		.ascii  "\x0f\xfe\xf8\xf8\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\x0f\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\x66\x66\xfe\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x0f\x0b\x00\x00"
		.ascii  "\x00\x01\x01\x0c\x03\x00\x67\x0f"
		.ascii  "\x67\x66\xf8\xf8\x66\xfe\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xf8\x66\xf8\xf8"
		.ascii  "\xf8\x0f\xfe\x0f\xfe\xfe\xfe\x0f"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\xfe\x66\x66\x66\xfe\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\xfe\x66\xf8\x0f"
		.ascii  "\x0c\x00\x00\x00\x04\x01\x0c\x00"
		.ascii  "\x00\x0f\x66\xf8\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xf8\xf8\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\xfe\x66"
		.ascii  "\x66\xf8\xfe\xf8\xf8\x66\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xf8\x66\xf8\x0f"
		.ascii  "\x0c\x00\x00\x00\x05\x01\x0b\x03"
		.ascii  "\x0f\x66\xf8\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x66\x66\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\xfe"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xf8\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xf8\xfe\xfe\x67\x0c\x00\x00"
		.ascii  "\x00\x05\x01\x03\x01\x00\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xf8\x0f\x0f"
		.ascii  "\x0f\x67\x04\x00\x07\x02\x00\x00"
		.ascii  "\x00\x0f\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\xfe\xf8\xf8\x66"
		.ascii  "\xf8\x0f\x0f\x0f\xfe\xfe\xf8\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x0c\x00\x00\x00"
		.ascii  "\x05\x01\x02\x01\x00\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0c\x00\x06"
		.ascii  "\x03\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x67\x0f\x0f\x0f\x0f\x67"
		.ascii  "\x0f\x0f\xfe\x0f\xfe\xfe\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\x0f\x0b\x00\x00\x00"
		.ascii  "\x28\x01\x03\x02\x00\x00\x00\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0a\x00\x00\x00\x2b\x01"
		.ascii  "\x02\x00\x00\x00\x0f\xf8\x66\xf8"
		.ascii  "\x0f\x0f\x0d\x00\x00\x00\x2d\x01"
		.ascii  "\x01\x00\x00\x67\xf8\x0f\x0f\x00"
		.ascii  "\x00\x00\x2e\x01\x00\x02\x00\x67"
		.ascii  "\x10\x00\x00\x00\x2e\x01\x00\x01"
		.ascii  "\x00\x11"
		.fill   0x7d
data_7aab0:
		.ascii  "\x20\x00\x02\x00\x01"
		.fill   0x5
		.ascii  "\x21\x00\x00\x00\x1a\x01\x02\x00"
		.ascii  "\x00\xf8\x67\x67\x67\x00\x00\x00"
		.ascii  "\x0a\x00\x01\x01\x04\x04\x04\x04"
		.ascii  "\x04\x0f\x00\x00\x00\x1a\x01\x02"
		.ascii  "\x03\x00\x67\xf8"
		.ascii   "ffgg"
		.ascii  "\x0f\x00\x00\x00\x07\x00\x01\x02"
		.ascii  "\x04\x03\x03\x03\x03\x04\x0e\x00"
		.ascii  "\x00\x00\x19\x01\x07\x00\x00\x67"
		.ascii  "\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\x0f\x67\x67"
		.fill   0x8
		.ascii  "\x03\x02\x02\x03\x03\x07\x00\x00"
		.ascii  "\x0b\x00\x00\x00\x19\x01\x08\x01"
		.ascii  "\x00\x0f\xf8\xf8"
		.ascii   "ffffffff"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x02\x01\x01\x02\x03\x07\x0f\x0f"
		.fill   0x5
		.ascii  "\x06\x00\x00\x00\x19\x01\x08\x03"
		.ascii  "\x00\x0f\x66\xf8\xf8\x66\xf8\xfe"
		.ascii  "\x66\x66\x66\xfe\x0f\x02\x0f\xfe"
		.ascii  "\xfe\xf8\xfe\x66\x01\x01\x01\x01"
		.ascii  "\x03\x07\x0f\x0f\xfe\x0f\x67\x67"
		.ascii  "\x67\x00\x00\x04\x00\x00\x00\x19"
		.ascii  "\x01\x09\x00\x00\x0f\x66\x66\xfe"
		.ascii  "\x66\xfe\xfe\x66\xf5\xfe\x0f\x02"
		.ascii  "\x03\x07\x66\x66\xf8\x66\x66\x01"
		.ascii  "\x01\x01\x01\x03\x07\x0f\xfe"
		.ascii   "fffff"
		.ascii  "\xf8\x67\x00\x03\x00\x00\x00\x19"
		.ascii  "\x01\x09\x01\x00\x0f\xfe\xfe\x0f"
		.ascii  "\xfe\xfe\x66\x66\xf8\x0f\x02\x01"
		.ascii  "\x03\x07\x66\x66\x66\xf5\xf5\x01"
		.ascii  "\x01\x01\x01\x03\x07\xfe\xf8"
		.ascii   "ffff"
		.ascii  "\xf5\xf5\xfe\x0f\x00\x02\x00\x00"
		.ascii  "\x00\x19\x01\x09\x02\x00\x67\x66"
		.ascii  "\x0f\xf8\xf8\xf8\xf8\xfe\xf8\x02"
		.ascii  "\x01\x01\x03\x07\x66\xf5\xf5\xf5"
		.ascii  "\x02\x01\x01\x01\x01\x03\x07"
		.ascii   "fffffff"
		.ascii  "\xfe\xfe\xfe\x0f\x00\x01\x00\x00"
		.ascii  "\x00\x1a\x01\x09\x01\x0f"
		.ascii   "gfff"
		.ascii  "\xf8\x0f\x0f\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x02\x03\x07"
		.ascii   "ffffgg"
		.ascii  "\xf8\xf8\x66\x66\x0f\x00\x01\x00"
		.ascii  "\x00\x00\x1c\x01\x09\x00"
		.ascii   "gfff"
		.ascii  "\xfe\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x07\x07\x66\x66\xf8\xf8\x0f"
		.ascii  "\x0f\x0f\x67\xf8\x66\x67\xfe\x00"
		.ascii  "\x1d\x01\x06\x02\x0f\x66\xf8\xf8"
		.ascii  "\xf8\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\xfe\x66\xf8\x67\x0f\x04\x00"
		.ascii  "\x01\x01\x0f\x0f\xf8\xfe\x00\x1e"
		.ascii  "\x01\x05\x03\x67\x66\x66\xfe\xf8"
		.ascii  "\xfe"
		.ascii   "ffffffffffff"
		.ascii  "\xfe\xfe\x67\x67\x0f\x08\x00\x00"
		.ascii  "\x03\x0f\x66\x00\x1e\x01\x05\x02"
		.ascii  "\x0f\x67\x67\xf8\x67\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\x67\x67\xf8\xf8"
		.ascii  "\xf8\xf8\x67\x67\x0f\xfe\x0a\x00"
		.ascii  "\x00\x02\x66\x00\x20\x01\x04\x02"
		.ascii  "\x0f\x0f\x67\xf8\x67\x67\x0f\x0f"
		.ascii  "\x0f\x0f\xfe"
		.ascii   "ggggg"
		.ascii  "\x0f\x0f\x0c\x00\x00\x01\x0f\x01"
		.fill   0x3bf
data_7b08c:
		.ascii  "\x1c\x00\x21\x00\x01"
		.fill   0x5
		.ascii  "\x02\x00\x00\x00\x37\x01\x02"
		.fill   0x4
		.string "fffd"
		.ascii  "\x01\x00\x00\x00\x34\x01\x02\x03"
		.ascii  "\x00\x00\x00\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\x66\x00\x01\x00\x00\x00\x24"
		.ascii  "\x01\x07"
		.fill   0x11
		.ascii   "fffffffff"
		.ascii  "\xf8\x66\x00\x1f\x01\x08\x01"
		.fill   0x5
		.ascii  "\x0f\xf6\xf6\x02\x02\x02\xf6\x02"
		.ascii  "\xf6\x02\x02\x02\x0f\x02\xf8\xfe"
		.ascii  "\x66\x02\x02\x02\x66\xf6\x66\x66"
		.ascii  "\xf8\xf8\xf8\x00\x1d\x01\x08\x03"
		.ascii  "\x00\x00\x66\x66\x66\xfe\xfe\x0f"
		.ascii  "\xf8\xf8\xf6\x01\x07\x07\x01\x07"
		.ascii  "\xf8\x01\x07\x07\x01\x07\xf8\xfe"
		.ascii  "\x01\x07\x07\x07\x66\x66\xf8\xf8"
		.ascii  "\xf6\xf8\x00\x1c\x01\x09\x00\x00"
		.ascii  "\x66\xf5"
		.ascii   "ffff"
		.ascii  "\xf6\xfe\xf8\xf6\xf8\x01\x07\x66"
		.ascii  "\x01\x07\x66\x01\x07\x66\x01\x07"
		.ascii  "\xf8\x0f\x01\x07\x66\xf8\x66\x66"
		.ascii  "\xf8\xf6\x66\xfe\x00\x1b\x01\x09"
		.ascii  "\x01\x00\xfe\xfe\xf5\xf5\x66\x66"
		.ascii  "\xf6\x66\xf8\xf8\xf8\xf6\x01\x07"
		.ascii  "\x66\x01\x07\x66\x01\x07\x66\x01"
		.ascii  "\x07\xf6\xf8\x01\x01\x66\x66\xf8"
		.ascii  "\x66\x66\xfe\xfe\x0f\x00\x1a\x01"
		.ascii  "\x09\x02\x00\xfe\xfe\xfe\xfe\x66"
		.ascii  "\x66\x66\xf6\x66\x66\xf6\xf6\xf8"
		.ascii  "\x01\x07\xf6\x01\x07\x66\x01\x07"
		.ascii  "\x66\x01\x07\xf8\xf8\x01\x07\x07"
		.ascii  "\x66\x66\xf8\x66\x0f\x66\x66\x00"
		.ascii  "\x1a\x01\x09\x01\x00\xf8\x66\x66"
		.ascii  "\xf5\xf5"
		.ascii   "ffffff"
		.ascii  "\xf6\xf6\x01\x07\xf5\x01\x07\xf6"
		.ascii  "\x01\x07\x66\x01\x07\xf8\xf6\x01"
		.ascii  "\x07\x66\x66\x66\xf8\x66\x66\x65"
		.ascii  "\x0f\x01\x00\x00\x00\x19\x01\x09"
		.ascii  "\x00\x00\xfe\x66\x66\xf5"
		.ascii   "fggg"
		.ascii  "\xf5\xf5\xf6\xf6\xfe\xf8\x02\x07"
		.ascii  "\x66\x02\x07\xf6\x02\x07\xf8\x02"
		.ascii  "\x02\x02\xf8\x02\x02\x02\xf8"
		.ascii   "ffff"
		.ascii  "\x03\x00\x00\x00\x19\x01\x01\x01"
		.ascii  "\x00\xfe\xf5\x67\x67\x04\x00\x06"
		.ascii  "\x02\x0f\x66\xf5\xf6\xfe\x0f\xf8"
		.ascii  "\x07\xf6\xf8\x07\xf5\xf5\x07\x66"
		.ascii  "\x66\x07\x07\x07\xf8\x07\x07\x07"
		.ascii  "\xf8\x66\x0f\x04\x00\x00\x00\x19"
		.ascii  "\x01\x00\x03\x00\xf6\x67\x08\x00"
		.ascii  "\x05\x03\x0f\x66\x66\xfe\xfe"
		.ascii   "fffffff"
		.ascii  "\xf6"
		.ascii   "ffff"
		.ascii  "\xfe\xf8\xfe\x66\x66\x66\x05\x00"
		.ascii  "\x00\x00\x19\x01\x00\x02\x00\x66"
		.ascii  "\x0a\x00\x05\x02\xfe\x0f\x66\x66"
		.ascii  "\xf8"
		.ascii   "ggggg"
		.ascii  "\xf8\x67\xf8\xf8\x67\x67\x67\xf8"
		.ascii  "\xf8\x66\x66\x0f\x05\x00\x00\x00"
		.ascii  "\x1a\x01\x00\x01\x67\x0c\x00\x04"
		.ascii  "\x02\x0f\x0f"
		.ascii   "gggg"
		.ascii  "\x0f\x0f\x0f\x0f\x67\x67\x67\x0f"
		.ascii  "\x0f\x0f\x67\x0f\x07"
		.fill   0x3da
data_7b668:
		.ascii  "\x34\x00\x00\x00\x02\x02\x00\x0f"
		.ascii  "\x0f\x0f\x0f\x67\x67\x67\x00\x00"
		.ascii  "\x1b\x00\x00\x00\x1b\x01\x02\x03"
		.ascii  "\x00\x0f\xf8\xf8\xf8\x66\x66\xf8"
		.ascii  "\x0f\x0f\x00\x1a\x00\x00\x00\x1b"
		.ascii  "\x01\x03\x01\x00\x0f\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\x67\x00\x00"
		.ascii  "\x18\x00\x00\x00\x1b\x01\x07\x01"
		.ascii  "\x00\x0f\x66\xf8\x66\xf8\xf8\xf8"
		.ascii  "\xf8\x66\x67\x0f\x0f"
		.fill   0x10
		.ascii  "\x08\x00\x00\x00\x1b\x01\x08\x00"
		.ascii  "\x00\x67\x66\x66\xf8\xf8\xfe\xfe"
		.ascii  "\x66\x66\x66\xf8\xf8\x67\x67\x0f"
		.ascii  "\x67\x67\x0f\x0f\x67\x67\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x67\x0f\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x1b\x01\x08\x02"
		.ascii  "\x00\x67\xf8\xfe\xfe\xf8\x01\x66"
		.ascii  "\x66\x66\xf8\x03\x04\x05\x01\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x06"
		.ascii  "\x05\x05\xf6\x66\x66\x0f\x67\x67"
		.ascii  "\x00\x00\x03\x00\x00\x00\x1b\x01"
		.ascii  "\x08\x03\x00\x0f\xf8\xf8\xf8\xf8"
		.ascii  "\x01\x01\x66\xf8\xfe\x05\x00\x00"
		.ascii  "\x04\x04\x04\x04\x04\x04\x07\x07"
		.ascii  "\x04\x00\x00\x06\x00\x66\x66\xf8"
		.ascii  "\xfe\xfe\x0f\x0f\x00\x02\x00\x00"
		.ascii  "\x00\x1b\x01\x08\x03\x00\x0f\x01"
		.ascii  "\xf8\x01\x01\x01\x01\x02\x66\xf8"
		.ascii  "\x05\x00\x00\x04\x03\x03\x03\x03"
		.ascii  "\x03\x07\x06\x03\x00\x00\x06\x00"
		.ascii  "\x66\x66\x66\xf8\xfe\xfe\x0f\x00"
		.ascii  "\x02\x00\x00\x00\x1b\x01\x09\x00"
		.ascii  "\x00\x0f\x01\x06\x01\x01\x01\x01"
		.ascii  "\x02\x02\xfe\x05\x00\x00\x04\x03"
		.ascii  "\x03\x03\x03\x03\x07\x06\x03\x00"
		.ascii  "\x00\x06\x00"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\x67\x00\x01\x00\x00\x00"
		.ascii  "\x1b\x01\x09\x00\x00\x0f\x02\x06"
		.ascii  "\x02\x02\x01\x02\x02\x06\x06\x05"
		.ascii  "\x00\x00\x05\x03\x04\x04\x04\x03"
		.ascii  "\x02\x02\x05\x00\x00\x06\x00"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\x66\x67\x00\x01\x00\x00"
		.ascii  "\x00\x1b\x01\x09\x01\x00\x0f\x0f"
		.ascii  "\x06\xfe\x06\x02\x02\x06\x06\x0f"
		.ascii  "\x05"
		.fill   0xd
		.ascii  "\x06\x00\xfe\xf8\xf8\xf8\xf8\xfe"
		.ascii  "\xfe\xf8\x0f\x00\x1b\x01\x09\x01"
		.ascii  "\x00\x0f\x0f\x0f\x0f\x0f\x02\x06"
		.ascii  "\x06\xfe\x0f\x05\x00\x06\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x06"
		.ascii  "\x00\x06\x00\x0f\xfe\xfe\xf8\xf8"
		.ascii  "\x0f\x0f\xfe\x67\x00\x1b\x01\x09"
		.ascii  "\x01\x00\x0f\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\x06\x0f\xfe\x0f\x05\x07\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x07\x06\x00\xf8\xfe\xfe\xf8"
		.ascii  "\xfe\x0f\x0f\xfe\x67\x00\x1b\x01"
		.ascii  "\x09\x01\x00\x0f\xf8\x66\x66\xfe"
		.ascii  "\x0f\xfe\xfe\xfe\x0f\x05\x07\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x07\x06\x00\xf8\xfe\xfe"
		.ascii  "\xf8\xfe\x0f\x0f\x0f\x0f\x00\x1b"
		.ascii  "\x01\x08\x03\x00"
		.ascii   "gfff"
		.ascii  "\xfe\x0f\xfe\xfe\xfe\x0f\x05\x07"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x07\x06\x00\x66\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\x0f\x02\x00"
		.ascii  "\x00\x00\x1b\x01\x08\x01\x00\x0f"
		.ascii  "\xf8\xfe\xfe\x0f\x0f\x0f\xfe\x0f"
		.ascii  "\x0f\x05\x07\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x07\x06"
		.ascii  "\x00\xfe\xfe\xf8\xf8\x0f\x0f\x04"
		.ascii  "\x00\x00\x00\x1b\x01\x08\x00\x00"
		.ascii  "\x0f\xf8\xf8\x66\x0f\x0f\xfe\xfe"
		.ascii  "\x0f\x0f\x05\x06\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x06"
		.ascii  "\x06\x00\xf8\xf8\xf8\xf8\x0f\x05"
		.ascii  "\x00\x00\x00\x1b\x01\x07\x03\x00"
		.ascii  "\x67\x66\xf8\x66\xf8\xfe\xfe\xfe"
		.ascii  "\x0f\x0f\x07\x07\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x06\x06\x06\x06\x07"
		.ascii  "\x07\x00\xf8\x66\x66\x0f\x06\x00"
		.ascii  "\x00\x00\x1b\x01\x07\x03\x00\x0f"
		.ascii  "\x66\xf8\xf8\x66\xf8\xf8\xf8\xfe"
		.ascii  "\xfe\xfe"
		.fill   0xf
		.ascii  "\xf8\xf8\xf8\x0f\x06\x00\x00\x00"
		.ascii  "\x1b\x01\x07\x02\x00\x0f\x66\xf8"
		.ascii  "\x66\x66\xf8\xf8\x66\xfe\x0f\xfe"
		.ascii  "\xfe\xfe\x66\x66\xfe\xf8\x66\x66"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\xfe\xf8\xf8"
		.ascii  "\xfe\x0f\x07\x00\x00\x00\x1b\x01"
		.ascii  "\x07\x02\x00\x67\xf8\x66\x66\xf8"
		.ascii  "\xf8\x66\x66\xf8\x0f\x01\x01\x01"
		.ascii  "\xf8\x01\x01\x01\x66\x01\x66\x01"
		.ascii  "\xfe\x01\x01\x01\xf8\xf8\xfe\x0f"
		.ascii  "\x07\x00\x00\x00\x1b\x01\x07\x02"
		.ascii  "\x00"
		.ascii   "gffff"
		.ascii  "\xf8\xf8\x66\xf8\x0f\x01\x07\x07"
		.ascii  "\x07\x01\x07\x01\x07\x01\x07\x01"
		.ascii  "\x07\x01\x07\x07\x07\xf8\xfe\x0f"
		.ascii  "\x07\x00\x00\x00\x1b\x01\x07\x02"
		.ascii  "\x00\x67\xf8\xf8\x66\xf8\xfe\xf8"
		.ascii  "\xf8\xfe\x0f\xfe\x01\xfe\xf8\x01"
		.ascii  "\x01\x01\x07\x01\x07\x01\x07\x01"
		.ascii  "\x01\xfe\xfe\xfe\xfe\x0f\x07\x00"
		.ascii  "\x00\x00\x1b\x01\x07\x02\x00\x67"
		.ascii  "\x66\x66\xf8\xfe\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\x66\xfe\x01\xfe\x01\x07\x01"
		.ascii  "\x07\x01\x07\x01\x07\x01\x07\x07"
		.ascii  "\xfe\xfe\xfe\x0f\x07\x00\x00\x00"
		.ascii  "\x1b\x01\x07\x02\x00\x0f\xfe\xf8"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\xfe\xf8\x01"
		.ascii  "\x01\x01\x07\x01\x07\x01\x07\x66"
		.ascii  "\x01\x66\x07\x01\x01\x01\xfe\xfe"
		.ascii  "\xfe\x0f\x07\x00\x00\x00\x1d\x01"
		.ascii  "\x07\x00\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\xf8\xfe\x07\x07\x07\x66"
		.ascii  "\x07\xf8\x07\x66\xf8\x07\x66\x66"
		.ascii  "\x07\x07\x07\xf8\xf8\x0f\x07\x00"
		.ascii  "\x00\x00\x1e\x01\x06\x03\x00\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\xfe\xfe\xfe\x66"
		.ascii  "\x66\xfe\xf8\x66\xf8\xfe\xf8\x66"
		.ascii  "\xf8\xfe\xf8\x66\x66\xf8\x66\xf8"
		.ascii  "\xfe\x07\x00\x00\x00\x1e\x01\x06"
		.ascii  "\x03\x00\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x67\x0f"
		.ascii  "\x0f\x67\x67\x0f\x07"
		.fill   0x1c2
data_7bc44:
		.ascii  "\x20\x00\x1d\x00\x02"
		.fill   0x9
		.ascii  "\x36\x01\x02\x02\x00\x00\x67\x67"
		.ascii  "\x67\x0f\x0f\x0f\x0f\x0f\x35\x01"
		.ascii  "\x02\x03\x00\x0f\x0f\xf8\x66\x66"
		.ascii  "\xf8\xf8\xf8\xf8\x0f\x33\x01\x03"
		.ascii  "\x01\x00\x00\x67\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xfe\x0f\x0f\x23\x01"
		.ascii  "\x07\x01"
		.fill   0x10
		.ascii  "\x0f\x0f\x66\x66\xf8\xf8\xf8\xf8"
		.ascii  "\x66\xf8\x66\xf8\x0f\x20\x01\x08"
		.fill   0x4
		.ascii  "\x0f\x67\x0f\x0f\x0f\x0f\x0f\x67"
		.ascii  "\x67\x0f\x0f\x67\x67\x0f\x67\x67"
		.ascii  "\xf8\xf8\x66\x66\x66\xfe\xfe\xf8"
		.ascii  "\xf8\x66\x66\x66\x0f\x1e\x01\x08"
		.ascii  "\x02\x00\x00\x67\x67\x0f\x66\x66"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\xfe\xf8\x03"
		.ascii  "\x04\x05\x01\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x06\x05\x05\xfe\xfe"
		.ascii  "\xf8\x66\x0f\x1d\x01\x08\x03\x00"
		.ascii  "\xf8\x0f\xfe\xfe\xf8\x66\x66\x66"
		.ascii  "\xfe\x0f\x0f\x0f\xfe\xf8\x05\x00"
		.ascii  "\x00\x04\x04\x04\x04\x04\x04\x07"
		.ascii  "\x07\x04\x00\x00\x06\x00\xf8\xf8"
		.ascii  "\xf8\x0f\x1d\x01\x08\x03\x00\x0f"
		.ascii  "\xfe\xfe\xf8"
		.ascii   "ffff"
		.ascii  "\xf8\xf8\xfe\x0f\xfe\xf8\x05\x00"
		.ascii  "\x00\x04\x03\x03\x03\x03\x03\x07"
		.ascii  "\x06\x03\x00\x00\x06\x00\xf8\xf8"
		.ascii  "\xf8\x0f\x1c\x01\x09\x00\x00\x67"
		.ascii  "\xf8\xf8"
		.ascii   "ffffff"
		.ascii  "\xf8\xf8\xfe\xfe\x0f\xfe\x05\x00"
		.ascii  "\x00\x04\x03\x03\x03\x03\x03\x07"
		.ascii  "\x06\x03\x00\x00\x06\x00\xf8\xf8"
		.ascii  "\xf8\x0f\x1c\x01\x09\x00\x00\x67"
		.ascii  "\x66\xf8\xf8"
		.ascii   "fffff"
		.ascii  "\xf8\xf8\xf8\xfe\x0f\xfe\x05\x00"
		.ascii  "\x00\x05\x03\x04\x04\x04\x03\x02"
		.ascii  "\x02\x05\x00\x00\x06\x00\xfe\x0f"
		.ascii  "\x0f\x0f\x1b\x01\x09\x01\x00\x0f"
		.ascii  "\xf8\xfe\xfe\xf8\xf8\xf8\xf8\xfe"
		.ascii  "\xf8\xf8\xf8\xfe\xfe\x0f\xfe\x05"
		.fill   0xd
		.ascii  "\x06\x00\xfe\x0f\x0f\x0f\x1b\x01"
		.ascii  "\x09\x01\x00\x67\xfe\x0f\x0f\xf8"
		.ascii  "\xf8\xfe\xfe\x0f\xfe\x01\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\x05\x00\x06\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x06"
		.ascii  "\x00\x06\x00\x0f\x0f\x0f\x0f\x1b"
		.ascii  "\x01\x09\x01\x00\x67\xfe\x0f\x0f"
		.ascii  "\xfe\xf8\xfe\xfe\xf8\x01\x01\xf8"
		.ascii  "\xf8\x0f\xfe\x0f\x05\x07\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x07\x06\x00\xfe\x0f\xfe\x0f"
		.ascii  "\x1b\x01\x09\x01\x00\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xf8\xfe\xfe\x02\x01\x01"
		.ascii  "\x01\x01\xfe\x01\xfe\x05\x07\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x07\x06\x00\x66\xf8\xfe"
		.ascii  "\x0f\x1d\x01\x08\x03\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x02\x02\x01\x01\x01"
		.ascii  "\x01\x06\x01\x06\x05\x07\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x07\x06\x00\x66\x66\x66\x0f"
		.ascii  "\x1f\x01\x08\x01\x0f\x0f\xf8\xf8"
		.ascii  "\xfe\x02\x02\x01\x02\x02\x06\x02"
		.ascii  "\x06\x05\x07\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x07\x06"
		.ascii  "\x00\xfe\xf8\xf8\x0f\x20\x01\x08"
		.ascii  "\x00\x0f\xf8\xf8\xf8\xf8\x02\x02"
		.ascii  "\x06\x06\x06\xfe\x06\x05\x06\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x06\x06\x00\xf8\xf8\xfe"
		.ascii  "\x0f\x21\x01\x07\x03\x00\x67\x66"
		.ascii  "\xf8\x66\x02\x06\x0f\x0f\xfe\xf8"
		.ascii  "\x07\x07\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x06\x06\x07\x07\x00"
		.ascii  "\xf8\x66\x66\x0f\x21\x01\x07\x03"
		.ascii  "\x00\x0f\xf8\xf8\xf8\xfe\x06\x0f"
		.ascii  "\xfe\xfe\xfe\xf8"
		.fill   0xf
		.ascii  "\xf8\x66\xf8\x0f\x22\x01\x07\x02"
		.ascii  "\x00\x0f\xf8\xf8\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x66\x66\xf8\xfe\x66\x66"
		.ascii  "\xfe\xfe\xfe\x0f\xfe\x66\xf8\xf8"
		.ascii  "\x66\x66\xf8\x66\xfe\x0f\x22\x01"
		.ascii  "\x07\x02\x00\x0f\xf8\xf8\xf8\xfe"
		.ascii  "\xfe\xfe\xf8\x66\x01\x66\x66\x66"
		.ascii  "\x01\x01\x01\xf8\x01\x01\x01\x66"
		.ascii  "\x01\x01\xf8\x66\x66\xf8\x66\x0f"
		.ascii  "\x22\x01\x07\x02\x00\x0f\xf8\xfe"
		.ascii  "\xfe\xfe\xfe\xf8\x66\x66\x01\x07"
		.ascii  "\x66\x66\x01\x07\x01\x07\x01\x07"
		.ascii  "\x01\x07\x01\x07\x01"
		.ascii   "ffff"
		.ascii  "\x0f\x22\x01\x07\x02\x00\x0f\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\xf8\x66\x01"
		.ascii  "\x07\x66\x66\x01\x07\x01\x07\x01"
		.ascii  "\x01\x01\x07\x01\x07\x01\x07\xf8"
		.ascii  "\xf8\x66\x0f\x22\x01\x07\x02\x00"
		.ascii  "\x0f\xfe\xfe\x0f\xfe\xf8\xfe\xfe"
		.ascii  "\x66\x01\x07\x66\x66\x01\x07\x01"
		.ascii  "\x07\x01\x07\x01\x07\x01\x07\x01"
		.ascii  "\x07\x66\x66\x66\x0f\x22\x01\x07"
		.ascii  "\x02\x00\x0f\xfe\xfe\x0f\xfe\xfe"
		.ascii  "\xf8\x66\xf8\x01\x01\x01\xf8\x01"
		.ascii  "\x01\x01\x07\x01\x07\x01\x07\x01"
		.ascii  "\x01\xfe\x07\xf8\xfe\x0f\x0f\x22"
		.ascii  "\x01\x07\x00\x00\x0f\xf8\xf8\x0f"
		.ascii  "\xfe\x66\x66\xf8\xf8\x66\x07\x07"
		.ascii  "\x07\x66\x07\x07\x07\xfe\x07\xfe"
		.ascii  "\x07\xfe\x07\x07\xfe\x0f\x0f\x02"
		.ascii  "\x00\x00\x00\x22\x01\x06\x03\x00"
		.ascii  "\x0f\x66\xf8\x66\x66\xf8\xfe\xf8"
		.ascii  "\x66\xf8\xfe\xf8\x66\xf8\xfe\x66"
		.ascii  "\x66\xfe\xfe\xfe\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\x03\x00\x00\x00\x22\x01"
		.ascii  "\x06\x03\x00\x67\x67\x0f\x0f\x67"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x03"
		.fill   0x20a
data_7c220:
		.ascii  "\x0b\x00\x00\x00\x0e\x02"
		.fill   0x39
		.ascii  "\x0f\x06\x01\x0e\x02"
		.fill   0x38
		.ascii  "\x0f\xf2\x06\x01\x0e\x02\x00\x00"
		.ascii  "\xf6\xf6\xf6\xf6\xf8\xf8\xfe\xf8"
		.ascii  "\xf6\xfe\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\xf8\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\xfe\xfe\xf6"
		.ascii  "\xfe\xf8\xf8\xf8\xfe\xf6\xf6\xf6"
		.ascii  "\xf6\xf6\xf8\xfe\xf8\xf6\xf6\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xf6\xf6\x5b\xf1"
		.ascii  "\x06\x01\x0e\x02\x00\x00\xf6\xf6"
		.ascii  "\xf6\x5b\xf6\xfe\x0f\x5b\xfe\xfe"
		.ascii  "\x5b\x5b\x5b\xfe\xf6"
		.ascii   "[[[["
		.ascii  "\xf6\xf6"
		.ascii   "[[[[["
		.ascii  "\x0f\x0f\xfe\xfe\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xf6\xfe\xf8\xf6\xf6\xf6\xf6"
		.ascii  "\xf8\xf8\xf6\xf5\xf8\xfe\x0f\x0f"
		.ascii  "\xfe\xf8\xf6\xf6\x5b\xf1\x06\x01"
		.ascii  "\x0e\x02\x00\x00\xf5\xf6\xf6\x5b"
		.ascii  "\x5b\x0f\x5b\x5b\x0f\x5b\x0f\xfe"
		.ascii  "\x0f\x5b\xf6\x5b\xf6\xf6\xf8\x5b"
		.ascii  "\xf6\x5b\xf6\xf6\xf8\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\xfe\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\xf8\xf6\xf6\xf6\xf8\xf6"
		.ascii  "\xf6\xf6\x0f\x0f\x0f\xfe\xf8\xf8"
		.ascii  "\xf8\xf8\xf2\xf2\x06\x01\x0e\x02"
		.ascii  "\x00\x00\xf6\xfe\xfe\x5b\x0f\x5b"
		.ascii  "\xfe\x5b\x0f\x5b\xfe\xfe\x0f\x5b"
		.ascii  "\xf8"
		.ascii   "[[[["
		.ascii  "\xf6\xf8"
		.ascii   "[[[["
		.ascii  "\xf8\xf6\xf6\xf8\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\xf8\xf6\xf8\xfe\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\xfe\x0f\x0f\x0f"
		.ascii  "\xf8\xf6\xf6\xf8\xf6\xf2\xf2\x06"
		.ascii  "\x01\x0e\x02\x00\x00\xfe\xf8\xf6"
		.ascii  "\x5b\x0f\x0f\x0f\x5b\x0f\x5b\xfe"
		.ascii  "\xfe\xfe\x5b\xfe\x5b\xf8\xf8\xf8"
		.ascii  "\x5b\xf6\x5b\xf8\xf8\xf8\xf8\xf6"
		.ascii  "\xf6\xf8\x0f\x0f\x0f\xfe\x0f\x0f"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\xf6\xf6\xf8"
		.ascii  "\xf6\xfe\x0f\x0f\x0f\x0f\xf6\xf6"
		.ascii  "\xf6\xfe\xfe\xf1\xf2\x06\x01\x0e"
		.ascii  "\x02\x00\x00\xf8\xf8\xf6\x5b\xfe"
		.ascii  "\xf8\xfe\x5b\x0f\x0f\x5b\x5b\x5b"
		.ascii  "\xf6\xfe\x5b\xf8\xfe\x0f\x5b\xf6"
		.ascii   "[[[[["
		.ascii  "\xf6\xf8\xf8\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xfe\x0f\x0f\xfe\x0f\x0f\xf6"
		.ascii  "\xf6\xf8\xfe\xfe\xfc\xf2\x06\x01"
		.ascii  "\x0e\x02\x00\x00\xf6\xfe\xf8\xf6"
		.ascii  "\xf6\xf6\xf8\x0f\x0f\x0f\xfe\xf8"
		.ascii  "\xf6\xf8\xfe\x0f\xfe\x0f\x0f\x0f"
		.ascii  "\xf8\xf8\xfe\xfe\xf6\xf8\xf6\xf6"
		.ascii  "\xfe\xfe\x0f\xfe\x0f\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\xf8\xf6\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xfe\xf6"
		.ascii  "\xf6\xfe\xf1\xf2\x06\x01\x0e\x02"
		.ascii  "\x00\x0f\xf2\xf2\xf1\xf1\xf2\xf2"
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xfc\xfc\xf1"
		.ascii  "\xf1\xfc\xf1\xfc\xf1\xf1\xf1\xf2"
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xf2"
		.ascii   "[[[[[[["
		.ascii  "\xf1\xfc\xf2\xf1\xf2\xf1\xfc\xfc"
		.ascii  "\xfc\xf1\xf1\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\x5b\x5b\xf1\xfc\x06\x01\x0e"
		.ascii  "\x02\x0f\xfc\xfc\xf2\x5b\x5b\xf2"
		.ascii  "\xf2\xf2\xf2\xf1\xfc\xf1\xf1\xf1"
		.ascii  "\xfc\xfc\xfc\xf1\xf2\xf1\xf2\xfc"
		.ascii  "\xf1\x5b\x5b\xf2"
		.ascii   "[[[["
		.ascii  "\xf2\xf2\xf2\xf2\x5b\x5b\xf2\xf1"
		.ascii  "\xf1\xf1\xfc\xf1\xfc\xf1\xf1\xfc"
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xf2\xf2\xf1"
		.ascii  "\xf1\xf1\xfc"
		.fill   0x6
data_7c4d2:
		.ascii  "\x0b\x00\x00\x00\x0e\x02"
		.fill   0x39
		.ascii  "\x0f\x06\x01\x0e\x02"
		.fill   0x38
		.ascii  "\x0f\xf2\x06\x01\x0e\x02\x00\x00"
		.ascii  "\xf6\xf6\xf6\xf6\xf8\xf8\xfe\xf8"
		.ascii  "\xf6\xfe\x0f\x0f\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\xf8\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\xfe\xfe\xf6"
		.ascii  "\xfe\xf8\xf8\xf8\xfe\xf6\xf6\xf6"
		.ascii  "\xf6\xf6\xf8\xfe\xf8\xf6\xf6\xf8"
		.ascii  "\xfe\xf8\xf8\xf8\xf6\xf6\x5b\xf1"
		.ascii  "\x06\x01\x0e\x02\x00\x00\xf6\xf6"
		.ascii  "\xf6"
		.ascii   "[[[[["
		.ascii  "\xfe\x5b\x0f\x0f\x0f\x5b\xf6\x5b"
		.ascii  "\x5b\x5b\xf6"
		.ascii   "[[[[["
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\x0f\xfe\xf8\xf6\xfe\xf8\xf6\xf6"
		.ascii  "\xf6\xf6\xf8\xf8\xf6\xf5\xf8\xfe"
		.ascii  "\x0f\x0f\xfe\xf8\xf6\xf6\x5b\xf1"
		.ascii  "\x06\x01\x0e\x02\x00\x00\xf5\xf6"
		.ascii  "\xf6\x5b\xf8\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x5b\xfe\x5b\xf6\xf6\xf6\x5b\xf6"
		.ascii  "\xf8\xf6\xf6\x5b\xf6\xf6\xf8\xfe"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\x0f\xfe\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf8\xf6\xf6\xf6"
		.ascii  "\xf8\xf6\xf6\xf6\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xf8\xf8\xf8\xf2\xf2\x06\x01"
		.ascii  "\x0e\x02\x00\x00\xf6\xfe\xfe"
		.ascii   "[[[["
		.ascii  "\x0f\x0f\xfe\xfe\x5b\x0f\xf6\xf8"
		.ascii  "\xf6\x5b\xf6\xf6\xf6\xf8\x5b\xfe"
		.ascii  "\xf8\xf8\xf8\xf6\xf6\xf8\x0f\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xf8\xf6\xf8\xfe"
		.ascii  "\xf8\xf8\xf8\xf6\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\x0f\xf8\xf6\xf6\xf8\xf6\xf2"
		.ascii  "\xf2\x06\x01\x0e\x02\x00\x00\xfe"
		.ascii  "\xf8\xf6\x5b\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x5b\xfe\x5b\xf8\xfe\xfe\x5b"
		.ascii  "\xf8\xf8\xf6\xf6\x5b\xf8\xf8\xf8"
		.ascii  "\xf8\xf6\xf6\xf8\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\x0f\xf8\xf8\xf8\xf8\xfe\xf6"
		.ascii  "\xf6\xf8\xf6\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\xf6\xf6\xf6\xfe\xfe\xf1\xf2\x06"
		.ascii  "\x01\x0e\x02\x00\x00\xf8\xf8\xf6"
		.ascii   "[[[[["
		.ascii  "\x0f\x5b\x0f\xfe\xf8\x5b\xfe\x5b"
		.ascii  "\x5b\x5b\x0f\xfe\xf6\x5b\xf8\xf8"
		.ascii  "\xf8\xf8\xf6\xf8\xf8\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\xfe\xf6\xf6"
		.ascii  "\xf6\xf6\xf6\xfe\x0f\x0f\xfe\x0f"
		.ascii  "\x0f\xf6\xf6\xf8\xfe\xfe\xfc\xf2"
		.ascii  "\x06\x01\x0e\x02\x00\x00\xf6\xfe"
		.ascii  "\xf8\xf6\xf6\xf6\xf8\x0f\x0f\x0f"
		.ascii  "\xfe\xf8\xf6\xf8\xfe\x0f\xfe\x0f"
		.ascii  "\x0f\x0f\xf8\xf8\xfe\xfe\xf6\xf8"
		.ascii  "\xf6\xf6\xfe\xfe\x0f\xfe\x0f\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\xf8\xf6\xf6\xf6"
		.ascii  "\xfe\x0f\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xf6\xfe\xf1\xf2\x06\x01"
		.ascii  "\x0e\x02\x00\x0f\xf2\xf2\xf1\xf1"
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xf2\xf2\xfc"
		.ascii  "\xfc\xf1\xf1\xfc\xf1\xfc\xf1\xf1"
		.ascii  "\xf1\xf2\xf2\xf2\xf2\xf2\xf2\xf2"
		.ascii   "[[[[[[["
		.ascii  "\xf1\xfc\xf2\xf1\xf2\xf1\xfc\xfc"
		.ascii  "\xfc\xf1\xf1\xfc\xf1\xf2\xf2\xf2"
		.ascii  "\xf2\x5b\x5b\xf1\xfc\x06\x01\x0e"
		.ascii  "\x02\x0f\xfc\xfc\xf2\x5b\x5b\xf2"
		.ascii  "\xf2\xf2\xf2\xf1\xfc\xf1\xf1\xf1"
		.ascii  "\xfc\xfc\xfc\xf1\xf2\xf1\xf2\xfc"
		.ascii  "\xf1\x5b\x5b\xf2"
		.ascii   "[[[["
		.ascii  "\xf2\xf2\xf2\xf2\x5b\x5b\xf2\xf1"
		.ascii  "\xf1\xf1\xfc\xf1\xfc\xf1\xf1\xfc"
		.ascii  "\xf2\xf2\xf2\xf2\xf2\xf2\xf2\xf1"
		.ascii  "\xf1\xf1\xfc"
		.fill   0x6
data_7c784:
		.ascii  "\x11\x00\x00\x00\x09\x01\xf3\xfe"
		.fill   0x22
		.ascii  "\xfe\x1b\x01\x09\x01\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\x0f\x0f\xfe"
		.ascii  "\xfe\x0f\x1b\x01\x09\x01\xf8\x00"
		.ascii  "\x0f\x0f\x0f\xfe\x0f\xfe\xfe\xfe"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\xfe"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\xfe\xfe\xfe"
		.ascii  "\xfe\xfe\xf8\xfe\xfe\xf8\xf6\xf6"
		.ascii  "\xf8\x0f\x0f\x1b\x01\x09\x01\xf8"
		.ascii  "\x00\x0f\xf6\xf8\x0f\x0f\xfe\xf8"
		.ascii  "\xfe\xfe\xfe\xfe\x0f\xf8\xf6\xf6"
		.ascii  "\xf8\xfe\x0f\x0f\xfe\xfe\xf8\xfe"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\xfe\xf8\xf6"
		.ascii  "\xf6\xf6\xf6\xf8\x1b\x01\x09\x01"
		.ascii  "\xf8\x00\x0f\xf6\xf6\xfe\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\xfe\xf8\x0f\x0f\xf8"
		.ascii  "\xf6\xf8\xfe\xf8\x0f\xf6\xf6\xf6"
		.ascii  "\xf8\x0f\x0f\x0f\x0f\xf8\xfe\xf8"
		.ascii  "\xf8\xf6\xf6\xf6\xf6\x1b\x01\x09"
		.ascii  "\x01\xf6\x00\x0f\xf6\xf6\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\xfe\xfe\x0f\x0f"
		.ascii  "\xfe\xfe\x0f\xf8\xf8\xf8\xf5\xf5"
		.ascii  "\xf6\xf6\xfe\xfe\x0f\x0f\xf8\xf8"
		.ascii  "\xf6\xf6\xf6\xf6\xf8\xf6\x1b\x01"
		.ascii  "\x09\x01\xf6\x00\x0f\xf8\xf8\x0f"
		.ascii  "\x0f\xfe\xf8\x0f\x0f\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\x0f\x0f\xf8\xf8\xf6"
		.ascii  "\xf8\xf8\xf6\xf8\xf8\xf8\xf8\xf8"
		.ascii  "\xf8\xf8\xfe\xf5\xf6\xf6\xf6\x1b"
		.ascii  "\x01\x09\x01\xf8\x00\x0f\x0f\x0f"
		.ascii  "\xfe\xf6\xf6\xfe\x0f\x0f\x0f\x0f"
		.ascii  "\xfe\x0f\xfe\xf8\xfe\xfe\xf6\xf6"
		.ascii  "\xf8\xf8\xf6\xf6\xf6\xf6\xf6\xf8"
		.ascii  "\xf6\xf8\xf6\xfe\xfe\xf6\xf6\xfe"
		.ascii  "\x1b\x01\x09\x01\xf6\x00\x0f\x0f"
		.ascii  "\x0f\xfe\xfe\xf8\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\xfe\x0f\xfe\xf6\xf6\xf6\xf6"
		.ascii  "\xf6\xfe\xf8\xf6\xf6\xf8\xfe\xfe"
		.ascii  "\xfe\xf8\xf8\xf6\xfe\xf8\xf6\xf8"
		.ascii  "\xfe\x1b\x01\x09\x01\xf5\x00\x0f"
		.ascii  "\x0f\x0f\xfe\x0f\x0f\xf8\xfe\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\x0f\x0f\xf6\xf5"
		.ascii  "\xf6\xf6\xf6\xf8\xf8\xf8\xfe\x0f"
		.ascii  "\x0f\xfe\xf8\xf6\xf6\xf6\xf6\xfe"
		.ascii  "\x0f\xfe\x1b\x01\x09\x01\xf5\x00"
		.ascii  "\x0f\xf8\xfe\x0f\xfe\xfe\xfe\x0f"
		.ascii  "\x0f\xfe\x0f\x0f\x0f\x0f\x0f\xf8"
		.ascii  "\xf8\xf6\xfe\xf6\xf8\xf6\xf8\x0f"
		.ascii  "\xfe\x0f\xfe\xf6\xf6\xf6\xf6\xf6"
		.ascii  "\xfe\x0f\x0f\x1b\x01\x09\x01\xf9"
		.ascii  "\x00\x0f\xf8\xfe\xfe\xf6\xf6\x0f"
		.ascii  "\x0f\x0f\xfe\xfe\xfe\x0f\x0f\x0f"
		.ascii  "\x0f\x0f\x0f\x0f\xfe\xf8\xf6\xf6"
		.ascii  "\xfe\x0f\x0f\xfe\xf8\xf6\xf8\xf8"
		.ascii  "\xf6\xf6\xf8\xfe\x1b\x01\x09\x01"
		.ascii  "\xfd\x00\x0f\x0f\x0f\xfe\xf6\xf6"
		.ascii  "\xfe\x0f\xfe\x0f\xfe\xfe\x0f\xfe"
		.ascii  "\xfe\x0f\x0f\x0f\xf8\xf6\xf6\xf8"
		.ascii  "\xfe\x0f\xfe\xf8\xf8\xfe\xf8\xf8"
		.ascii  "\xf8\xfe\xf6\xf5\xf6\x1b\x01\x09"
		.ascii  "\x01\xf5\x00\x0f\x0f\x0f\xf8\xf6"
		.ascii  "\xf8\xf8\xfe\x0f\x0f\x0f\x0f\xfe"
		.ascii  "\xfe\xfe\x0f\x0f\x0f\xf8\xf6\xf8"
		.ascii  "\x0f\x0f\xfe\xf8\x0f\x0f\x0f\xfe"
		.ascii  "\xf8\xf6\xf6\xf8\xf6\xf6\x1b\x01"
		.ascii  "\x09\x01\xfd\x00\x0f\x0f\xfe\xf6"
		.ascii  "\xf8\xf8\xf8\xf6\xfe\x0f\xfe\xfe"
		.ascii  "\xfe\xfe\xfe\x0f\x0f\xf6\xf8\xf8"
		.ascii  "\xfe\xfe\x0f\x0f\xf8\x0f\xfe\x0f"
		.ascii  "\x0f\xf8\xf6\xf6\xf6\xf6\xf6\x1b"
		.ascii  "\x01\x09\x01\xf7\x00\x0f\xf8\xf8"
		.ascii  "\xf6\xf8\xfe\xf8\xf8\x0f\x0f\x0f"
		.ascii  "\xfe\xfe\xfe\x0f\xf6\xf6\xf6\xf8"
		.ascii  "\xf8\xf8\xf8\xf8\xfe\x0f\x0f\xfe"
		.ascii  "\x0f\x0f\xfe\xf6\xf8\xf6\xf6\xf6"
		.ascii  "\x1b\x01\x09\x01\xf6\xf6\xf4\xfc"
		.ascii  "\xf3\xf1\xf1\xf3\xf3\xf4\xf4\xf4"
		.ascii  "\xf3\xf3\xf1\xf2\xf2\xfc\xf3\xf1"
		.ascii  "\xf3\xf3\xfc\xf1\xfc\xf3\xf4\xf4"
		.ascii  "\xf4\xf4\xf3\xf1\xf1\xf1\xf1\xf1"
		.ascii  "\xf1\x00"
		.string "C o p y r i g h t   b y   S O F T M A X Co. 1 9 9 6 "
		.fill   0x1b
		.string "C o p y r i g h t   b y   S O F T M A X   C o . , L t d . "
		.fill   0x15
data_7cae0:
		.fill   0x4
data_7cae4:
		.fill   0x4
data_7cae8:
		.fill   0x4
data_7caec:
		.fill   0x4
data_7caf0:
		.fill   0x4
data_7caf4:
		.long   func___null_int23_exit_
data_7caf8:
		.long   func___null_int23_exit_
data_7cafc:
		.long   func___null_int23_exit_
data_7cb00:
		.fill   0x4
data_7cb04:
		.ascii  "\x20\x00"
data_7cb06:
		.ascii  "\x00\x00"
data_7cb08:
		.fill   0x4
data_7cb0c:
		.fill   0x4
data_7cb10:
		.ascii  "\x00\x00"
data_7cb12:
		.string "Stack Overflow!\r\n"
data_7cb24:
		.ascii  "\x01\x00\x00\x00"
data_7cb28:
		.ascii  "\x00"
data_7cb29:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"
data_7cb40:
		.fill   0x4
data_7cb44:
		.ascii  "\x14\x00\x00\x00"
data_7cb48:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f
data_7cb98:
		.long   data_7cb48
data_7cb9c:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd
data_7cbb6:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"
data_7cbdd:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9
data_7cc1e:
		.fill   0x186
data_7cda4:
		.ascii  "\x61"
data_7cda5:
		.ascii  "\x00\x01\x00\x00"
		.long   data_1b6360
		.ascii  "\x00\x00\x00"
data_7cdb0:
		.fill   0x4
data_7cdb4:
		.fill   0x4
data_7cdb8:
		.fill   0x4
data_7cdbc:
		.fill   0x4
data_7cdc0:
		.fill   0x4
data_7cdc4:
		.fill   0x4
data_7cdc8:
		.fill   0x4
data_7cdcc:
		.fill   0x4
data_7cdd0:
		.fill   0x4
data_7cdd4:
		.fill   0xc
data_7cde0:
		.ascii  "\x00\x00"
data_7cde2:
		.ascii  "\x00"
data_7cde3:
		.ascii  "\x00"
data_7cde4:
		.ascii  "\x00"
data_7cde5:
		.fill   0x4
data_7cde9:
		.ascii  "\x00\x00"
data_7cdeb:
		.ascii  "\x00"
data_7cdec:
		.ascii  "\x00"
data_7cded:
		.long   func_nullsub_4
		.ascii  "\x00\x00\x00"
data_7cdf4:
		.fill   0x40
data_7ce34:
		.fill   0x4
data_7ce38:
		.ascii  "\x00\x00"
data_7ce3a:
		.ascii  "\x00\x00"
data_7ce3c:
		.fill   0x4
data_7ce40:
		.ascii  "\x01\x00\x00\x00"
data_7ce44:
		.ascii  "\x10\x00\x00\x00"
data_7ce48:
		.fill   0x4
data_7ce4c:
		.long   func_3e724
		.long   func_3e724
data_7ce54:
		.fill   0x7c
data_7ced0:
		.ascii  "\x00"
data_7ced1:
		.ascii  "\x00\x00\x00"
data_7ced4:
		.ascii  "\x7f\x12\x00\x00"
data_7ced8:
		.long   func_nullsub_5
data_7cedc:
		.long   func_nullsub_5
data_7cee0:
		.ascii  "\x00\x20"
		.long   func___Init_Argv_
		.ascii  "\x00\x20"
		.long   func_3b9ba
		.ascii  "\x00\x20"
		.long   func___delay_init_
		.ascii  "\x00\x01"
		.long   func_j___sys_init_387_emulator
		.ascii  "\x00\x02"
		.long   func___chk8087_
		.ascii  "\x00\x20"
		.long   func___InitFiles_
data_7cf04:
		.ascii  "\x00\x01"
		.long   func_j___sys_fini_387_emulator
		.ascii  "\x00\x20"
		.long   func___full_io_exit_
data_7cf10:
		.fill   0x4
data_7cf14:
		.fill   0x4
data_7cf18:
		.fill   0x4
data_7cf1c:
		.fill   0x4
data_7cf20:
		.fill   0x4
data_7cf24:
		.fill   0x4
data_7cf28:
		.fill   0x2a
data_7cf52:
		.ascii  "\x00\x00"
data_7cf54:
		.fill   0x66
data_7cfba:
		.fill   0x62
data_7d01c:
		.ascii  "\x00\x00"
data_7d01e:
		.ascii  "\x00\x00"
data_7d020:
		.ascii  "\x00\x00"
data_7d022:
		.ascii  "\x00\x00"
data_7d024:
		.ascii  "\x00\x00"
data_7d026:
		.ascii  "\x00\x00"
data_7d028:
		.fill   0x4
data_7d02c:
		.fill   0x12
data_7d03e:
		.ascii  "\x00\x00"
data_7d040:
		.fill   0x74c
data_7d78c:
		.fill   0x8
data_7d794:
		.fill   0x24
data_7d7b8:
		.ascii  "\x00\x00"
data_7d7ba:
		.ascii  "\x00\x00"
data_7d7bc:
		.fill   0x32
data_7d7ee:
		.ascii  "\x00"
data_7d7ef:
		.fill   0x32
data_7d821:
		.fill   0x33
data_7d854:
		.ascii  "\x00"
data_7d855:
		.fill   0x32
data_7d887:
		.ascii  "\x00"
data_7d888:
		.ascii  "\x00\x00"
data_7d88a:
		.ascii  "\x00\x00"
data_7d88c:
		.fill   0xc8
data_7d954:
		.ascii  "\x00"
data_7d955:
		.fill   0x18f
data_7dae4:
		.fill   0x24b8
data_7ff9c:
		.fill   0x118
data_800b4:
		.ascii  "\x00"
data_800b5:
		.ascii  "\x00"
data_800b6:
		.ascii  "\x00"
data_800b7:
		.ascii  "\x00"
data_800b8:
		.ascii  "\x00"
data_800b9:
		.ascii  "\x00"
data_800ba:
		.ascii  "\x00"
data_800bb:
		.ascii  "\x00"
data_800bc:
		.ascii  "\x00"
data_800bd:
		.fill   0x47
data_80104:
		.ascii  "\x00"
data_80105:
		.ascii  "\x00"
data_80106:
		.ascii  "\x00"
data_80107:
		.ascii  "\x00"
data_80108:
		.ascii  "\x00"
data_80109:
		.ascii  "\x00"
data_8010a:
		.ascii  "\x00"
data_8010b:
		.ascii  "\x00"
data_8010c:
		.ascii  "\x00"
data_8010d:
		.fill   0x6f
data_8017c:
		.ascii  "\x00"
data_8017d:
		.ascii  "\x00"
data_8017e:
		.ascii  "\x00"
data_8017f:
		.ascii  "\x00"
data_80180:
		.ascii  "\x00"
data_80181:
		.ascii  "\x00"
data_80182:
		.ascii  "\x00"
data_80183:
		.ascii  "\x00"
data_80184:
		.ascii  "\x00"
data_80185:
		.fill   0x253b
data_826c0:
		.fill   0x4
data_826c4:
		.fill   0x4
data_826c8:
		.fill   0x4
data_826cc:
		.fill   0xa
data_826d6:
		.ascii  "\x00\x00"
data_826d8:
		.fill   0x4
data_826dc:
		.fill   0x4
data_826e0:
		.fill   0x4
data_826e4:
		.fill   0x4
data_826e8:
		.fill   0x4
data_826ec:
		.fill   0x4
data_826f0:
		.fill   0x4
data_826f4:
		.fill   0x4
data_826f8:
		.fill   0x10
cdrom_mscdex_major_version: /* 82708 */
		.fill   0x4
cdrom_mscdex_minor_version: /* 8207c */
		.fill   0xa
data_82716:
		.ascii  "\x00\x00"
data_82718:
		.fill   0x4
data_8271c:
		.fill   0x4
data_82720:
		.fill   0x10
GLOBAL (game_cfg_speed) /* 82730 */
		.ascii  "\x00"
game_cfg_music: /* 82731 */
		.ascii  "\x01"
game_cfg_sound: /* 82732 */
		.ascii  "\x01\x05"
game_cfg_soundblaster_adr: /* 82734 */
		.ascii  "\x20\x02"
game_cfg_soundblaster_irq: /* 82736 */
    .word   0x0007
    .word   0x0001
		.fill   0x32
data_8276c:
		.ascii  "\x00\x00"
data_8276e:
		.ascii  "\x00"
data_8276f:
		.ascii  "\x00\x00"
cdrom_something_related_with_starting_point_of_the_track: /* 82771 */
		.fill   0x4
cdrom_track_control_information_related_var: /* 82775 */
		.ascii  "\x00"
data_82776:
		.ascii  "\x00"
cdrom_highest_track_number: /* 82777 */
		.ascii  "\x00"
data_82778:
		.ascii  "\x00"
data_82779:
		.ascii  "\x00"
data_8277a:
		.ascii  "\x00"
cdrom_something_related_with_starting_point_of_the_lead_out_track: /* 8277b */
		.fill   0x4
data_8277f:
		.fill   0x7
data_82786:
		.fill   0x6
data_8278c:
		.fill   0x4
cdrom_device_driver_request_return_status: /* 82790 */
		.ascii  "\x00"
data_82791:
		.ascii  "\x00"
data_82792:
		.fill   0x4
data_82796:
		.fill   0x6
data_8279c:
		.ascii  "\x00\x00"
data_8279e:
		.fill   0x6
data_827a4:
		.fill   0x4
data_827a8:
		.fill   0x4
data_827ac:
		.fill   0x160
data_8290c:
		.fill   0x4
data_82910:
		.fill   0x4
data_82914:
		.fill   0x8
data_8291c:
		.fill   0x16
data_82932:
		.ascii  "\x00"
data_82933:
		.ascii  "\x00"
data_82934:
		.ascii  "\x00"
data_82935:
		.ascii  "\x00"
data_82936:
		.ascii  "\x00\x00"
data_82938:
		.ascii  "\x00\x00"
data_8293a:
		.ascii  "\x00\x00"
data_8293c:
		.fill   0x7
data_82943:
		.ascii  "\x00\x00"
data_82945:
		.ascii  "\x00\x00"
data_82947:
		.ascii  "\x00\x00"
data_82949:
		.fill   0x1439
data_83d82:
		.ascii  "\x00\x00"
data_83d84:
		.ascii  "\x00\x00"
data_83d86:
		.fill   0x318
data_8409e:
		.fill   0x6
data_840a4:
		.ascii  "\x00\x00"
data_840a6:
		.fill   0x707c
data_8b122:
		.fill   0x4
data_8b126:
		.ascii  "\x00\x00"
data_8b128:
		.ascii  "\x00\x00"
data_8b12a:
		.fill   0x3842
data_8e96c:
		.fill   0x4
data_8e970:
		.fill   0x383c
data_921ac:
		.ascii  "\x00\x00"
data_921ae:
		.fill   0x7080
data_9922e:
		.ascii  "\x00\x00"
data_99230:
		.ascii  "\x00\x00"
data_99232:
		.fill   0x24
data_99256:
		.fill   0x12c
data_99382:
		.fill   0x57d20
data_f10a2:
		.ascii  "\x00\x00"
data_f10a4:
		.fill   0x25
data_f10c9:
		.ascii  "\x00\x00\x00"
data_f10cc:
		.ascii  "\x00"
data_f10cd:
		.ascii  "\x00"
data_f10ce:
		.ascii  "\x00"
data_f10cf:
		.ascii  "\x00"
data_f10d0:
		.ascii  "\x00"
data_f10d1:
		.ascii  "\x00"
data_f10d2:
		.ascii  "\x00"
data_f10d3:
		.fill   0x1fc9
data_f309c:
		.fill   0x4
data_f30a0:
		.fill   0x16
data_f30b6:
		.ascii  "\x00"
data_f30b7:
		.ascii  "\x00"
data_f30b8:
		.ascii  "\x00\x00"
data_f30ba:
		.ascii  "\x00\x00"
data_f30bc:
		.ascii  "\x00\x00"
data_f30be:
		.ascii  "\x00"
data_f30bf:
		.ascii  "\x00"
data_f30c0:
		.ascii  "\x00"
data_f30c1:
		.fill   0x152
data_f3213:
		.ascii  "\x00\x00"
data_f3215:
		.fill   0x152
data_f3367:
		.ascii  "\x00\x00"
data_f3369:
		.ascii  "\x00\x00"
data_f336b:
		.fill   0x5
data_f3370:
		.ascii  "\x00\x00"
data_f3372:
		.ascii  "\x00\x00"
data_f3374:
		.fill   0x5fc
data_f3970:
		.ascii  "\x00\x00"
data_f3972:
		.ascii  "\x00\x00"
data_f3974:
		.fill   0x5fc
data_f3f70:
		.ascii  "\x00\x00"
data_f3f72:
		.ascii  "\x00\x00"
data_f3f74:
		.fill   0x5fc
data_f4570:
		.ascii  "\x00"
data_f4571:
		.ascii  "\x00"
data_f4572:
		.fill   0x2fe
data_f4870:
		.ascii  "\x00\x00"
data_f4872:
		.ascii  "\x00\x00"
data_f4874:
		.fill   0x5fc
data_f4e70:
		.ascii  "\x00\x00"
data_f4e72:
		.ascii  "\x00\x00"
data_f4e74:
		.fill   0x5fc
data_f5470:
		.ascii  "\x00"
data_f5471:
		.ascii  "\x00"
data_f5472:
		.fill   0x2fe
data_f5770:
		.ascii  "\x00"
data_f5771:
		.ascii  "\x00"
data_f5772:
		.fill   0x2f8
data_f5a6a:
		.ascii  "\x00\x00"
data_f5a6c:
		.ascii  "\x00\x00"
data_f5a6e:
		.ascii  "\x00\x00"
data_f5a70:
		.ascii  "\x00\x00"
data_f5a72:
		.ascii  "\x00\x00"
data_f5a74:
		.fill   0x5f6
data_f606a:
		.ascii  "\x00\x00"
data_f606c:
		.ascii  "\x00\x00"
data_f606e:
		.ascii  "\x00\x00"
data_f6070:
		.ascii  "\x00\x00"
data_f6072:
		.ascii  "\x00\x00"
data_f6074:
		.fill   0x5fc
data_f6670:
		.ascii  "\x00"
data_f6671:
		.ascii  "\x00"
data_f6672:
		.fill   0x2fe
data_f6970:
		.ascii  "\x00\x00"
data_f6972:
		.ascii  "\x00\x00"
data_f6974:
		.fill   0x5fc
data_f6f70:
		.ascii  "\x00\x00"
data_f6f72:
		.ascii  "\x00\x00"
data_f6f74:
		.fill   0x5fc
data_f7570:
		.ascii  "\x00"
data_f7571:
		.ascii  "\x00"
data_f7572:
		.fill   0x2fe
data_f7870:
		.ascii  "\x00\x00"
data_f7872:
		.fill   0xb
data_f787d:
		.ascii  "\x00\x00"
data_f787f:
		.ascii  "\x00"
data_f7880:
		.ascii  "\x00"
data_f7881:
		.fill   0x1a
data_f789b:
		.fill   0x18
data_f78b3:
		.fill   0x45
data_f78f8:
		.fill   0x2ee0
data_fa7d8:
		.fill   0x5dbfe
data_1583d6:
		.ascii  "\x00\x00"
data_1583d8:
		.ascii  "\x00\x00"
data_1583da:
		.fill   0x2ede
data_15b2b8:
		.ascii  "\x00"
data_15b2b9:
		.ascii  "\x00"
data_15b2ba:
		.fill   0x2fe
data_15b5b8:
		.fill   0x1fc
data_15b7b4:
		.fill   0x1fc
data_15b9b0:
		.fill   0x4
data_15b9b4:
		.fill   0x4
data_15b9b8:
		.fill   0x4
data_15b9bc:
		.fill   0x4
data_15b9c0:
		.fill   0x4
data_15b9c4:
		.fill   0x4
data_15b9c8:
		.fill   0x4
data_15b9cc:
		.fill   0x4
data_15b9d0:
		.ascii  "\x00"
data_15b9d1:
		.fill   0x23
data_15b9f4:
		.ascii  "\x00\x00"
data_15b9f6:
		.fill   0x1c
data_15ba12:
		.ascii  "\x00\x00"
data_15ba14:
		.ascii  "\x00\x00"
data_15ba16:
		.ascii  "\x00\x00"
data_15ba18:
		.ascii  "\x00\x00"
data_15ba1a:
		.ascii  "\x00\x00"
data_15ba1c:
		.ascii  "\x00\x00"
data_15ba1e:
		.ascii  "\x00\x00"
data_15ba20:
		.ascii  "\x00\x00"
data_15ba22:
		.ascii  "\x00"
data_15ba23:
		.ascii  "\x00"
data_15ba24:
		.fill   0xf
data_15ba33:
		.fill   0x52
data_15ba85:
		.fill   0x26
data_15baab:
		.fill   0x40d1
data_15fb7c:
		.fill   0x14c
data_15fcc8:
		.fill   0x63
data_15fd2b:
		.ascii  "\x00"
data_15fd2c:
		.ascii  "\x00"
data_15fd2d:
		.ascii  "\x00"
data_15fd2e:
		.fill   0xea5e
data_16e78c:
		.fill   0x3a98
data_172224:
		.fill   0xa0
data_1722c4:
		.fill   0xa1e0
data_17c4a4:
		.fill   0x6ef0
data_183394:
		.fill   0xa0
data_183434:
		.fill   0x137e0
data_196c14:
		.fill   0x82
data_196c96:
		.fill   0x9a6
data_19763c:
		.fill   0xc8
data_197704:
		.fill   0xd
data_197711:
		.ascii  "\x00\x00"
data_197713:
		.ascii  "\x00"
data_197714:
		.ascii  "\x00"
data_197715:
		.fill   0x1a
data_19772f:
		.fill   0x18
data_197747:
		.fill   0x1e
data_197765:
		.fill   0x26
data_19778b:
		.fill   0x3499
data_19ac24:
		.fill   0xd
data_19ac31:
		.ascii  "\x00\x00"
data_19ac33:
		.ascii  "\x00"
data_19ac34:
		.ascii  "\x00"
data_19ac35:
		.fill   0x1a
data_19ac4f:
		.ascii  "\x00\x00\x00"
data_19ac52:
		.ascii  "\x00"
data_19ac53:
		.ascii  "\x00"
data_19ac54:
		.ascii  "\x00"
data_19ac55:
		.ascii  "\x00"
data_19ac56:
		.ascii  "\x00"
data_19ac57:
		.ascii  "\x00"
data_19ac58:
		.fill   0x4
data_19ac5c:
		.ascii  "\x00"
data_19ac5d:
		.ascii  "\x00"
data_19ac5e:
		.ascii  "\x00"
data_19ac5f:
		.ascii  "\x00\x00"
data_19ac61:
		.ascii  "\x00\x00\x00"
data_19ac64:
		.ascii  "\x00"
data_19ac65:
		.ascii  "\x00"
data_19ac66:
		.ascii  "\x00"
data_19ac67:
		.ascii  "\x00"
data_19ac68:
		.fill   0x4
data_19ac6c:
		.fill   0x4
data_19ac70:
		.ascii  "\x00\x00"
data_19ac72:
		.ascii  "\x00\x00"
data_19ac74:
		.ascii  "\x00\x00"
data_19ac76:
		.fill   0x8
data_19ac7e:
		.ascii  "\x00"
data_19ac7f:
		.ascii  "\x00\x00"
data_19ac81:
		.ascii  "\x00"
data_19ac82:
		.ascii  "\x00"
data_19ac83:
		.ascii  "\x00\x00"
data_19ac85:
		.fill   0x26
data_19acab:
		.fill   0x3498
data_19e143:
		.ascii  "\x00"
data_19e144:
		.ascii  "\x00"
data_19e145:
		.ascii  "\x00"
data_19e146:
		.ascii  "\x00"
data_19e147:
		.ascii  "\x00\x00"
data_19e149:
		.ascii  "\x00"
data_19e14a:
		.ascii  "\x00"
data_19e14b:
		.ascii  "\x00"
data_19e14c:
		.ascii  "\x00"
data_19e14d:
		.ascii  "\x00"
data_19e14e:
		.ascii  "\x00"
data_19e14f:
		.ascii  "\x00"
data_19e150:
		.ascii  "\x00"
data_19e151:
		.fill   0xa
data_19e15b:
		.ascii  "\x00\x00"
data_19e15d:
		.ascii  "\x00\x00"
data_19e15f:
		.ascii  "\x00\x00"
data_19e161:
		.ascii  "\x00\x00"
data_19e163:
		.ascii  "\x00\x00"
data_19e165:
		.ascii  "\x00\x00"
data_19e167:
		.ascii  "\x00\x00"
data_19e169:
		.ascii  "\x00"
data_19e16a:
		.ascii  "\x00"
data_19e16b:
		.fill   0x1a67
data_19fbd2:
		.ascii  "\x00\x00"
data_19fbd4:
		.ascii  "\x00\x00"
data_19fbd6:
		.ascii  "\x00\x00"
data_19fbd8:
		.ascii  "\x00\x00"
data_19fbda:
		.ascii  "\x00\x00"
data_19fbdc:
		.ascii  "\x00\x00"
data_19fbde:
		.ascii  "\x00\x00"
data_19fbe0:
		.ascii  "\x00\x00"
data_19fbe2:
		.ascii  "\x00\x00"
data_19fbe4:
		.ascii  "\x00\x00"
data_19fbe6:
		.ascii  "\x00\x00"
data_19fbe8:
		.fill   0x30c
data_19fef4:
		.fill   0x50
data_19ff44:
		.fill   0xc
data_19ff50:
		.fill   0x4
data_19ff54:
		.fill   0x16f
data_1a00c3:
		.ascii  "\x00"
data_1a00c4:
		.ascii  "\x00\x00"
data_1a00c6:
		.ascii  "\x00\x00"
data_1a00c8:
		.ascii  "\x00\x00"
data_1a00ca:
		.ascii  "\x00\x00"
data_1a00cc:
		.ascii  "\x00\x00"
data_1a00ce:
		.fill   0xd
data_1a00db:
		.fill   0x19
data_1a00f4:
		.fill   0x4
data_1a00f8:
		.fill   0x6c
data_1a0164:
		.fill   0x4
data_1a0168:
		.fill   0x44
data_1a01ac:
		.fill   0x28
data_1a01d4:
		.fill   0x14
data_1a01e8:
		.fill   0x1c
data_1a0204:
		.fill   0x10
data_1a0214:
		.fill   0xc
data_1a0220:
		.fill   0x8
data_1a0228:
		.fill   0xc
data_1a0234:
		.fill   0xc
data_1a0240:
		.fill   0xb4
data_1a02f4:
		.fill   0x4
data_1a02f8:
		.ascii  "\x00\x00"
data_1a02fa:
		.fill   0x32
data_1a032c:
		.fill   0x10
data_1a033c:
		.fill   0x1400
data_1a173c:
		.fill   0xb00
data_1a223c:
		.fill   0xe00
data_1a303c:
		.fill   0x1000
data_1a403c:
		.fill   0x4
data_1a4040:
		.fill   0x4
data_1a4044:
		.fill   0x4
data_1a4048:
		.fill   0x4
data_1a404c:
		.ascii  "\x00\x00"
data_1a404e:
		.ascii  "\x00\x00"
data_1a4050:
		.fill   0x10
data_1a4060:
		.ascii  "\x00\x00"
data_1a4062:
		.ascii  "\x00\x00"
data_1a4064:
		.fill   0x1e
data_1a4082:
		.ascii  "\x00\x00"
data_1a4084:
		.ascii  "\x00\x00"
data_1a4086:
		.ascii  "\x00\x00"
data_1a4088:
		.ascii  "\x00\x00"
data_1a408a:
		.fill   0x42
data_1a40cc:
		.fill   0x4
data_1a40d0:
		.fill   0x4
data_1a40d4:
		.fill   0x4
data_1a40d8:
		.fill   0x4
data_1a40dc:
		.fill   0x4
data_1a40e0:
		.fill   0x4
data_1a40e4:
		.fill   0x2b
data_1a410f:
		.fill   0x5
data_1a4114:
		.ascii  "\x00\x00"
data_1a4116:
		.ascii  "\x00\x00"
data_1a4118:
		.ascii  "\x00\x00"
data_1a411a:
		.ascii  "\x00\x00"
data_1a411c:
		.ascii  "\x00"
data_1a411d:
		.fill   0xdf3
data_1a4f10:
		.fill   0x4
data_1a4f14:
		.fill   0x4
data_1a4f18:
		.fill   0x4
data_1a4f1c:
		.fill   0x18
data_1a4f34:
		.fill   0x4
data_1a4f38:
		.fill   0x18
data_1a4f50:
		.fill   0xb00
data_1a5a50:
		.fill   0x10000
data_1b5a50:
		.fill   0x4
data_1b5a54:
		.fill   0x27c
data_1b5cd0:
		.fill   0x200
data_1b5ed0:
		.fill   0x200
data_1b60d0:
		.fill   0x4
data_1b60d4:
		.fill   0x4
data_1b60d8:
		.fill   0x4
data_1b60dc:
		.fill   0x4
data_1b60e0:
		.fill   0x4
data_1b60e4:
		.fill   0x4
data_1b60e8:
		.fill   0x4
data_1b60ec:
		.fill   0x4
data_1b60f0:
		.fill   0x4
data_1b60f4:
		.fill   0x4
data_1b60f8:
		.fill   0x4
data_1b60fc:
		.fill   0x4
data_1b6100:
		.fill   0x4
data_1b6104:
		.fill   0x8
data_1b610c:
		.fill   0x4
data_1b6110:
		.fill   0x4
data_1b6114:
		.fill   0x4
data_1b6118:
		.fill   0x4
data_1b611c:
		.fill   0x4
data_1b6120:
		.fill   0x8
data_1b6128:
		.fill   0x4
data_1b612c:
		.fill   0x4
data_1b6130:
		.fill   0x4
data_1b6134:
		.fill   0x4
data_1b6138:
		.fill   0x4
data_1b613c:
		.fill   0x8
data_1b6144:
		.fill   0x4
data_1b6148:
		.fill   0x4
data_1b614c:
		.fill   0x4
data_1b6150:
		.fill   0x4
data_1b6154:
		.fill   0x4
data_1b6158:
		.fill   0x8
data_1b6160:
		.fill   0x4
data_1b6164:
		.fill   0x4
data_1b6168:
		.fill   0x4
data_1b616c:
		.fill   0x4
data_1b6170:
		.fill   0x4
data_1b6174:
		.fill   0x8
data_1b617c:
		.fill   0x4
data_1b6180:
		.fill   0x4
data_1b6184:
		.fill   0x4
data_1b6188:
		.fill   0x4
data_1b618c:
		.fill   0x4
data_1b6190:
		.fill   0x8
data_1b6198:
		.fill   0x4
data_1b619c:
		.fill   0x4
data_1b61a0:
		.fill   0x4
data_1b61a4:
		.fill   0x4
data_1b61a8:
		.fill   0x4
data_1b61ac:
		.fill   0x4
soundblaster_interrupt_number: /* 1b61b0 */
		.fill   0x4
data_1b61b4:
		.fill   0x4
data_1b61b8:
		.fill   0x4
data_1b61bc:
		.fill   0x4
pic_masks: /* 1b61c0 */
		.fill   0x4
data_1b61c4:
		.fill   0x4
soundblaster_dma: /* 1b61c8 */
		.fill   0x4
soundblaster_irq: /* 1b61cc */
		.fill   0x4
data_1b61d0:
		.fill   0x4
soundblaster_adr_is_not_zero: /* 1b61d4 */
		.fill   0x4
data_1b61d8:
		.fill   0x4
soundblaster_adr: /* 1b61dc */
		.fill   0x4
data_1b61e0:
		.fill   0x4
data_1b61e4:
		.ascii  "\x00\x00"
data_1b61e6:
		.fill   0x4
data_1b61ea:
		.ascii  "\x00\x00"
data_1b61ec:
		.fill   0x4
data_1b61f0:
		.fill   0x78
data_1b6268:
		.fill   0x88
data_1b62f0:
		.fill   0x4
dpmi_real_mode_call_structure: /* 1b62f4 */
		.fill   0x10
dpmi_real_mode_call_structure_ebx: /* 1b6304 */
		.fill   0x8
dpmi_real_mode_call_structure_ecx: /* 1b630c */
		.fill   0x4
dpmi_real_mode_call_structure_eax: /* 1b6310 */
		.fill   0x6
dpmi_real_mode_call_structure_es: /* 1b6316 */
		.fill   0x3a
data_1b6350:
		.ascii  "\x00\x00"
data_1b6352:
		.ascii  "\x00\x00"
data_1b6354:
		.fill   0x5
data_1b6359:
		.ascii  "\x00\x00\x00"
data_1b635c:
		.fill   0x4
data_1b6360:
		.fill   0x4
data_1b6364:
		.fill   0x4
data_1b6368:
		.ascii  "\x00\x00"
data_1b636a:
		.ascii  "\x00\x00"
data_1b636c:
		.fill   0x4
data_1b6370:
		.fill   0x4
data_1b6374:
		.fill   0x4
data_1b6378:
		.fill   0x4
data_1b637c:
		.fill   0x80
data_1b63fc:
		.fill   0x1004
